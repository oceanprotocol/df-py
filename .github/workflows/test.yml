name: Unit Testing and Code Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python {{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/checkout@v2
        name: Checkout Barge
        with:
          repository: "oceanprotocol/barge"
          path: "barge"

      - name: Login to Docker Hub
        if: ${{ env.DOCKERHUB_PASSWORD && env.DOCKERHUB_USERNAME }}
        run: |
          echo "Login to Docker Hub";echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Run Barge
        working-directory: ${{ github.workspace }}/barge
        env:
          SUBGRAPH_VERSION: main
        run: |
          bash -x start_ocean.sh --no-aquarius --no-elasticsearch --no-provider --no-dashboard --with-thegraph > start_ocean.log &

      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          brownie bake github-actions
          sed -i 's#https://polygon-mainnet.infura.io/v3/$WEB3_INFURA_PROJECT_ID#https://polygon-rpc.com/#g; s#https://polygon-mumbai.infura.io/v3/$WEB3_INFURA_PROJECT_ID#https://rpc-mumbai.maticvigil.com#g' $HOME/.brownie/network-config.yaml
          export BROWNIE_STATE_FILE=$(python -c "import brownie as _; print(_.__path__[0] + '/network/state.py')")
          sed -zi 's/del \_contract\_map\[contract\.address\]/if contract\.address in \_contract\_map\:\n        del \_contract\_map\[contract\.address\]/' $BROWNIE_STATE_FILE
      - name: Create Brownie paths
        run: |
          mkdir -p /home/runner/.solcx
          mkdir -p /home/runner/.vvm
          mkdir -p /home/runner/.brownie/packages
      - name: Restore Brownie compilers
        id: restore-brownie-compilers
        uses: actions/cache/restore@v3
        with:
          path: |
            /home/runner/.solcx
            /home/runner/.vvm
            /home/runner/.brownie/packages
          key: ${{ runner.os }}-brownie-deps
      - name: Set up Openzeppelin
        run: |
          [ -d "$HOME/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0" ] && echo "Using OpenZeppelin/openzeppelin-contracts@4.2.0 from cache" || brownie pm install OpenZeppelin/openzeppelin-contracts@4.2.0
          [ -d "$HOME/.brownie/packages/GNSPS/solidity-bytes-utils@0.8.0" ] && echo "Using GNSPS/solidity-bytes-utils@0.8.0/ from cache" || brownie pm install GNSPS/solidity-bytes-utils@0.8.0
      - name: Wait for contracts deployment
        working-directory: ${{ github.workspace }}/barge
        run: |
          for i in $(seq 1 250); do
            sleep 10
            [ -f "$HOME/.ocean/ocean-contracts/artifacts/ready" ] && break
            done
      - name: "Read address.json contents"
        working-directory: ${{ github.workspace }}
        run: cat "$HOME/.ocean/ocean-contracts/artifacts/address.json"
      - name: Test with Brownie
        run: |
          coverage run --omit="*test*" -m pytest df_py
          coverage report
          coverage xml
        env:
          JUDGE_PRIVATE_KEY: ${{secrets.JUDGE_PRIVATE_KEY}}
      - name: Save Brownie compilers
        id: cache-brownie-compilers
        uses: actions/cache/save@v3
        with:
          path: |
            /home/runner/.solcx
            /home/runner/.vvm
            /home/runner/.brownie/packages
          key: ${{ runner.os }}-brownie-deps
      - name: Publish code coverage
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
