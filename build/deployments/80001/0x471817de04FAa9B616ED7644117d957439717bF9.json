{"abi": [{"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "AddedManager", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "AddedTo725StoreList", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "AddedToCreateERC20List", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "AddedToMetadataList", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "approved", "type": "address"}, {"indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "operator", "type": "address"}, {"indexed": false, "internalType": "bool", "name": "approved", "type": "bool"}], "name": "ApprovalForAll", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "CleanedPermissions", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "contractAddress", "type": "address"}], "name": "ContractCreated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "bytes32", "name": "key", "type": "bytes32"}, {"indexed": false, "internalType": "bytes", "name": "value", "type": "bytes"}], "name": "DataChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "uint256", "name": "_operation", "type": "uint256"}, {"indexed": true, "internalType": "address", "name": "_to", "type": "address"}, {"indexed": true, "internalType": "uint256", "name": "_value", "type": "uint256"}, {"indexed": false, "internalType": "bytes", "name": "_data", "type": "bytes"}], "name": "Executed", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "createdBy", "type": "address"}, {"indexed": false, "internalType": "uint8", "name": "state", "type": "uint8"}, {"indexed": false, "internalType": "string", "name": "decryptorUrl", "type": "string"}, {"indexed": false, "internalType": "bytes", "name": "flags", "type": "bytes"}, {"indexed": false, "internalType": "bytes", "name": "data", "type": "bytes"}, {"indexed": false, "internalType": "bytes32", "name": "metaDataHash", "type": "bytes32"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "MetadataCreated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "updatedBy", "type": "address"}, {"indexed": false, "internalType": "uint8", "name": "state", "type": "uint8"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "MetadataState", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "updatedBy", "type": "address"}, {"indexed": false, "internalType": "uint8", "name": "state", "type": "uint8"}, {"indexed": false, "internalType": "string", "name": "decryptorUrl", "type": "string"}, {"indexed": false, "internalType": "bytes", "name": "flags", "type": "bytes"}, {"indexed": false, "internalType": "bytes", "name": "data", "type": "bytes"}, {"indexed": false, "internalType": "bytes32", "name": "metaDataHash", "type": "bytes32"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "MetadataUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "validator", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "metaDataHash", "type": "bytes32"}, {"indexed": false, "internalType": "uint8", "name": "v", "type": "uint8"}, {"indexed": false, "internalType": "bytes32", "name": "r", "type": "bytes32"}, {"indexed": false, "internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "MetadataValidated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "RemovedFrom725StoreList", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "RemovedFromCreateERC20List", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "RemovedFromMetadataList", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "RemovedManager", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "newTokenAddress", "type": "address"}, {"indexed": true, "internalType": "address", "name": "templateAddress", "type": "address"}, {"indexed": false, "internalType": "string", "name": "name", "type": "string"}, {"indexed": false, "internalType": "string", "name": "symbol", "type": "string"}, {"indexed": false, "internalType": "uint256", "name": "cap", "type": "uint256"}, {"indexed": false, "internalType": "address", "name": "creator", "type": "address"}], "name": "TokenCreated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "updatedBy", "type": "address"}, {"indexed": false, "internalType": "string", "name": "tokenURI", "type": "string"}, {"indexed": false, "internalType": "uint256", "name": "tokenID", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "TokenURIUpdate", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"stateMutability": "payable", "type": "fallback"}, {"inputs": [{"internalType": "address", "name": "_managerAddress", "type": "address"}], "name": "addManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address[]", "name": "addresses", "type": "address[]"}, {"internalType": "enum ERC721RolesAddress.RolesType[]", "name": "roles", "type": "uint8[]"}], "name": "addMultipleUsersToRoles", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_allowedAddress", "type": "address"}], "name": "addTo725StoreList", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_allowedAddress", "type": "address"}], "name": "addToCreateERC20List", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_allowedAddress", "type": "address"}], "name": "addToMetadataList", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "auth", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "baseURI", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "cleanPermissions", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_templateIndex", "type": "uint256"}, {"internalType": "string[]", "name": "strings", "type": "string[]"}, {"internalType": "address[]", "name": "addresses", "type": "address[]"}, {"internalType": "uint256[]", "name": "uints", "type": "uint256[]"}, {"internalType": "bytes[]", "name": "bytess", "type": "bytes[]"}], "name": "createERC20", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_operation", "type": "uint256"}, {"internalType": "address", "name": "_to", "type": "address"}, {"internalType": "uint256", "name": "_value", "type": "uint256"}, {"internalType": "bytes", "name": "_data", "type": "bytes"}], "name": "executeCall", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "getApproved", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_key", "type": "bytes32"}], "name": "getData", "outputs": [{"internalType": "bytes", "name": "_value", "type": "bytes"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getId", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getMetaData", "outputs": [{"internalType": "string", "name": "", "type": "string"}, {"internalType": "string", "name": "", "type": "string"}, {"internalType": "uint8", "name": "", "type": "uint8"}, {"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "user", "type": "address"}], "name": "getPermissions", "outputs": [{"components": [{"internalType": "bool", "name": "manager", "type": "bool"}, {"internalType": "bool", "name": "deployERC20", "type": "bool"}, {"internalType": "bool", "name": "updateMetadata", "type": "bool"}, {"internalType": "bool", "name": "store", "type": "bool"}], "internalType": "struct ERC721RolesAddress.Roles", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTokensList", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "hasMetaData", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "string", "name": "name_", "type": "string"}, {"internalType": "string", "name": "symbol_", "type": "string"}, {"internalType": "address", "name": "tokenFactory", "type": "address"}, {"internalType": "address", "name": "additionalERC20Deployer", "type": "address"}, {"internalType": "address", "name": "additionalMetaDataUpdater", "type": "address"}, {"internalType": "string", "name": "tokenURI", "type": "string"}, {"internalType": "bool", "name": "transferable_", "type": "bool"}], "name": "initialize", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "operator", "type": "address"}], "name": "isApprovedForAll", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "datatoken", "type": "address"}], "name": "isDeployed", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "isERC20Deployer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "isInitialized", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "metaDataDecryptorAddress", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "metaDataDecryptorUrl", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "metaDataState", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "ownerOf", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_allowedAddress", "type": "address"}], "name": "removeFrom725StoreList", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_allowedAddress", "type": "address"}], "name": "removeFromCreateERC20List", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_allowedAddress", "type": "address"}], "name": "removeFromMetadataList", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_managerAddress", "type": "address"}], "name": "removeManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "operator", "type": "address"}, {"internalType": "bool", "name": "approved", "type": "bool"}], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_baseURI", "type": "string"}], "name": "setBaseURI", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_key", "type": "bytes32"}, {"internalType": "bytes", "name": "_value", "type": "bytes"}], "name": "setDataERC20", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint8", "name": "_metaDataState", "type": "uint8"}, {"internalType": "string", "name": "_metaDataDecryptorUrl", "type": "string"}, {"internalType": "string", "name": "_metaDataDecryptorAddress", "type": "string"}, {"internalType": "bytes", "name": "flags", "type": "bytes"}, {"internalType": "bytes", "name": "data", "type": "bytes"}, {"internalType": "bytes32", "name": "_metaDataHash", "type": "bytes32"}, {"components": [{"internalType": "address", "name": "validatorAddress", "type": "address"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "internalType": "struct ERC721Template.metaDataProof[]", "name": "_metadataProofs", "type": "tuple[]"}], "name": "setMetaData", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "uint8", "name": "metaDataState", "type": "uint8"}, {"internalType": "string", "name": "metaDataDecryptorUrl", "type": "string"}, {"internalType": "string", "name": "metaDataDecryptorAddress", "type": "string"}, {"internalType": "bytes", "name": "flags", "type": "bytes"}, {"internalType": "bytes", "name": "data", "type": "bytes"}, {"internalType": "bytes32", "name": "metaDataHash", "type": "bytes32"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}, {"internalType": "string", "name": "tokenURI", "type": "string"}, {"components": [{"internalType": "address", "name": "validatorAddress", "type": "address"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "internalType": "struct ERC721Template.metaDataProof[]", "name": "metadataProofs", "type": "tuple[]"}], "internalType": "struct ERC721Template.metaDataAndTokenURI", "name": "_metaDataAndTokenURI", "type": "tuple"}], "name": "setMetaDataAndTokenURI", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint8", "name": "_metaDataState", "type": "uint8"}], "name": "setMetaDataState", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_key", "type": "bytes32"}, {"internalType": "bytes", "name": "_value", "type": "bytes"}], "name": "setNewData", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}, {"internalType": "string", "name": "tokenURI", "type": "string"}], "name": "setTokenURI", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "interfaceId", "type": "bytes4"}], "name": "supportsInterface", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "tokenByIndex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "tokenOfOwnerByIndex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "tokenURI", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "transferable", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "withdrawETH", "outputs": [], "stateMutability": "payable", "type": "function"}, {"stateMutability": "payable", "type": "receive"}], "allSourcePaths": {"2": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol", "23": "contracts/oceanv4/interfaces/IERC20Template.sol", "25": "contracts/oceanv4/interfaces/IERC725X.sol", "26": "contracts/oceanv4/interfaces/IERC725Y.sol", "27": "contracts/oceanv4/interfaces/IFactory.sol", "44": "contracts/oceanv4/templates/ERC721Template.sol", "49": "contracts/oceanv4/utils/ERC721/ERC165.sol", "50": "contracts/oceanv4/utils/ERC721/ERC721.sol", "53": "contracts/oceanv4/utils/ERC721/IERC165.sol", "54": "contracts/oceanv4/utils/ERC721/IERC721.sol", "55": "contracts/oceanv4/utils/ERC721/IERC721Enumerable.sol", "56": "contracts/oceanv4/utils/ERC721/IERC721Metadata.sol", "59": "contracts/oceanv4/utils/ERC721RolesAddress.sol", "60": "contracts/oceanv4/utils/ERC725/ERC725Ocean.sol", "9": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol"}, "ast": {"absolutePath": "contracts/oceanv4/templates/ERC721Template.sol", "exportedSymbols": {"Address": [21881], "BytesLib": [29585], "Context": [29252], "Create2": [29231], "ERC165": [21961], "ERC721": [22880], "ERC721RolesAddress": [25261], "ERC721Template": [21131], "ERC725Ocean": [25492], "EnumerableMap": [23460], "EnumerableSet": [23975], "IERC165": [23987], "IERC20Template": [3402], "IERC721": [24071], "IERC721Enumerable": [24102], "IERC721Metadata": [24129], "IERC721Receiver": [24147], "IERC721Template": [3697], "IERC725X": [3717], "IERC725Y": [3736], "IFactory": [3895], "ReentrancyGuard": [27765], "Strings": [24350]}, "id": 21132, "license": "(Apache-2.0 AND CC-BY-4.0)", "nodeType": "SourceUnit", "nodes": [{"id": 19997, "literals": ["solidity", "0.8", ".12"], "nodeType": "PragmaDirective", "src": "0:23:44"}, {"absolutePath": "contracts/oceanv4/interfaces/IERC721Template.sol", "file": "../interfaces/IERC721Template.sol", "id": 19998, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 21132, "sourceUnit": 3698, "src": "185:43:44", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/utils/ERC721/ERC721.sol", "file": "../utils/ERC721/ERC721.sol", "id": 19999, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 21132, "sourceUnit": 22881, "src": "229:36:44", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/utils/ERC725/ERC725Ocean.sol", "file": "../utils/ERC725/ERC725Ocean.sol", "id": 20000, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 21132, "sourceUnit": 25493, "src": "266:41:44", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/utils/ERC721/IERC721Enumerable.sol", "file": "../utils/ERC721/IERC721Enumerable.sol", "id": 20001, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 21132, "sourceUnit": 24103, "src": "308:47:44", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Create2.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Create2.sol", "id": 20002, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 21132, "sourceUnit": 29232, "src": "356:79:44", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol", "id": 20003, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 21132, "sourceUnit": 27766, "src": "436:90:44", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/interfaces/IFactory.sol", "file": "../interfaces/IFactory.sol", "id": 20004, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 21132, "sourceUnit": 3896, "src": "527:36:44", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/interfaces/IERC20Template.sol", "file": "../interfaces/IERC20Template.sol", "id": 20005, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 21132, "sourceUnit": 3403, "src": "564:42:44", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/utils/ERC721RolesAddress.sol", "file": "../utils/ERC721RolesAddress.sol", "id": 20006, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 21132, "sourceUnit": 25262, "src": "607:41:44", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"arguments": [{"hexValue": "54656d706c617465", "id": 20008, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "690:10:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d79674941cd79c924880825e15d350f65a7c714466b97ca11ceaa74f79288b3e", "typeString": "literal_string \"Template\""}, "value": "Template"}, {"hexValue": "54656d706c61746553796d626f6c", "id": 20009, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "702:16:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b9b3cb9a1fbdac50320a284f4ff397c6d436683c306e795ff1b8746a2c643bb6", "typeString": "literal_string \"TemplateSymbol\""}, "value": "TemplateSymbol"}], "baseName": {"id": 20007, "name": "ERC721", "nodeType": "IdentifierPath", "referencedDeclaration": 22880, "src": "683:6:44"}, "id": 20010, "nodeType": "InheritanceSpecifier", "src": "683:36:44"}, {"baseName": {"id": 20011, "name": "ERC721RolesAddress", "nodeType": "IdentifierPath", "referencedDeclaration": 25261, "src": "725:18:44"}, "id": 20012, "nodeType": "InheritanceSpecifier", "src": "725:18:44"}, {"baseName": {"id": 20013, "name": "ERC725Ocean", "nodeType": "IdentifierPath", "referencedDeclaration": 25492, "src": "749:11:44"}, "id": 20014, "nodeType": "InheritanceSpecifier", "src": "749:11:44"}, {"baseName": {"id": 20015, "name": "ReentrancyGuard", "nodeType": "IdentifierPath", "referencedDeclaration": 27765, "src": "766:15:44"}, "id": 20016, "nodeType": "InheritanceSpecifier", "src": "766:15:44"}], "canonicalName": "ERC721Template", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 21131, "linearizedBaseContracts": [21131, 27765, 25492, 3736, 3717, 25261, 22880, 24102, 24129, 24071, 21961, 23987, 29252], "name": "ERC721Template", "nameLocation": "661:14:44", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 20018, "mutability": "mutable", "name": "_name", "nameLocation": "808:5:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "793:20:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 20017, "name": "string", "nodeType": "ElementaryTypeName", "src": "793:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 20020, "mutability": "mutable", "name": "_symbol", "nameLocation": "834:7:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "819:22:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 20019, "name": "string", "nodeType": "ElementaryTypeName", "src": "819:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 20022, "mutability": "mutable", "name": "initialized", "nameLocation": "895:11:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "882:24:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20021, "name": "bool", "nodeType": "ElementaryTypeName", "src": "882:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "private"}, {"constant": false, "functionSelector": "d8053ad3", "id": 20024, "mutability": "mutable", "name": "hasMetaData", "nameLocation": "924:11:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "912:23:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20023, "name": "bool", "nodeType": "ElementaryTypeName", "src": "912:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "public"}, {"constant": false, "functionSelector": "82cf129d", "id": 20026, "mutability": "mutable", "name": "metaDataDecryptorUrl", "nameLocation": "955:20:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "941:34:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 20025, "name": "string", "nodeType": "ElementaryTypeName", "src": "941:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "public"}, {"constant": false, "functionSelector": "0e05662e", "id": 20028, "mutability": "mutable", "name": "metaDataDecryptorAddress", "nameLocation": "995:24:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "981:38:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 20027, "name": "string", "nodeType": "ElementaryTypeName", "src": "981:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "public"}, {"constant": false, "functionSelector": "ccd7d476", "id": 20030, "mutability": "mutable", "name": "metaDataState", "nameLocation": "1038:13:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "1025:26:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20029, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "1025:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "public"}, {"constant": false, "id": 20032, "mutability": "mutable", "name": "_tokenFactory", "nameLocation": "1073:13:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "1057:29:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20031, "name": "address", "nodeType": "ElementaryTypeName", "src": "1057:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "private"}, {"constant": false, "id": 20035, "mutability": "mutable", "name": "deployedERC20List", "nameLocation": "1110:17:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "1092:35:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[]"}, "typeName": {"baseType": {"id": 20033, "name": "address", "nodeType": "ElementaryTypeName", "src": "1092:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 20034, "nodeType": "ArrayTypeName", "src": "1092:9:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "private"}, {"constant": true, "id": 20038, "mutability": "constant", "name": "templateId", "nameLocation": "1156:10:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "1133:37:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20036, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "1133:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "value": {"hexValue": "31", "id": 20037, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1169:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "visibility": "private"}, {"constant": false, "id": 20042, "mutability": "mutable", "name": "deployedERC20", "nameLocation": "1209:13:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "1176:46:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "typeName": {"id": 20041, "keyType": {"id": 20039, "name": "address", "nodeType": "ElementaryTypeName", "src": "1184:7:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1176:24:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 20040, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1195:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "private"}, {"constant": false, "functionSelector": "92ff0d31", "id": 20044, "mutability": "mutable", "name": "transferable", "nameLocation": "1240:12:44", "nodeType": "VariableDeclaration", "scope": 21131, "src": "1228:24:44", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20043, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1228:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "public"}, {"anonymous": false, "id": 20058, "name": "TokenCreated", "nameLocation": "1304:12:44", "nodeType": "EventDefinition", "parameters": {"id": 20057, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20046, "indexed": true, "mutability": "mutable", "name": "newTokenAddress", "nameLocation": "1342:15:44", "nodeType": "VariableDeclaration", "scope": 20058, "src": "1326:31:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20045, "name": "address", "nodeType": "ElementaryTypeName", "src": "1326:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20048, "indexed": true, "mutability": "mutable", "name": "templateAddress", "nameLocation": "1383:15:44", "nodeType": "VariableDeclaration", "scope": 20058, "src": "1367:31:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20047, "name": "address", "nodeType": "ElementaryTypeName", "src": "1367:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20050, "indexed": false, "mutability": "mutable", "name": "name", "nameLocation": "1415:4:44", "nodeType": "VariableDeclaration", "scope": 20058, "src": "1408:11:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20049, "name": "string", "nodeType": "ElementaryTypeName", "src": "1408:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20052, "indexed": false, "mutability": "mutable", "name": "symbol", "nameLocation": "1436:6:44", "nodeType": "VariableDeclaration", "scope": 20058, "src": "1429:13:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20051, "name": "string", "nodeType": "ElementaryTypeName", "src": "1429:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20054, "indexed": false, "mutability": "mutable", "name": "cap", "nameLocation": "1460:3:44", "nodeType": "VariableDeclaration", "scope": 20058, "src": "1452:11:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20053, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1452:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20056, "indexed": false, "mutability": "mutable", "name": "creator", "nameLocation": "1481:7:44", "nodeType": "VariableDeclaration", "scope": 20058, "src": "1473:15:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20055, "name": "address", "nodeType": "ElementaryTypeName", "src": "1473:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1316:178:44"}, "src": "1298:197:44"}, {"anonymous": false, "id": 20076, "name": "MetadataCreated", "nameLocation": "1508:15:44", "nodeType": "EventDefinition", "parameters": {"id": 20075, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20060, "indexed": true, "mutability": "mutable", "name": "createdBy", "nameLocation": "1549:9:44", "nodeType": "VariableDeclaration", "scope": 20076, "src": "1533:25:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20059, "name": "address", "nodeType": "ElementaryTypeName", "src": "1533:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20062, "indexed": false, "mutability": "mutable", "name": "state", "nameLocation": "1574:5:44", "nodeType": "VariableDeclaration", "scope": 20076, "src": "1568:11:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20061, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "1568:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 20064, "indexed": false, "mutability": "mutable", "name": "decryptorUrl", "nameLocation": "1596:12:44", "nodeType": "VariableDeclaration", "scope": 20076, "src": "1589:19:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20063, "name": "string", "nodeType": "ElementaryTypeName", "src": "1589:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20066, "indexed": false, "mutability": "mutable", "name": "flags", "nameLocation": "1624:5:44", "nodeType": "VariableDeclaration", "scope": 20076, "src": "1618:11:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 20065, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1618:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 20068, "indexed": false, "mutability": "mutable", "name": "data", "nameLocation": "1645:4:44", "nodeType": "VariableDeclaration", "scope": 20076, "src": "1639:10:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 20067, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1639:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 20070, "indexed": false, "mutability": "mutable", "name": "metaDataHash", "nameLocation": "1667:12:44", "nodeType": "VariableDeclaration", "scope": 20076, "src": "1659:20:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20069, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1659:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20072, "indexed": false, "mutability": "mutable", "name": "timestamp", "nameLocation": "1697:9:44", "nodeType": "VariableDeclaration", "scope": 20076, "src": "1689:17:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20071, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1689:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20074, "indexed": false, "mutability": "mutable", "name": "blockNumber", "nameLocation": "1724:11:44", "nodeType": "VariableDeclaration", "scope": 20076, "src": "1716:19:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20073, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1716:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1523:218:44"}, "src": "1502:240:44"}, {"anonymous": false, "id": 20094, "name": "MetadataUpdated", "nameLocation": "1753:15:44", "nodeType": "EventDefinition", "parameters": {"id": 20093, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20078, "indexed": true, "mutability": "mutable", "name": "updatedBy", "nameLocation": "1794:9:44", "nodeType": "VariableDeclaration", "scope": 20094, "src": "1778:25:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20077, "name": "address", "nodeType": "ElementaryTypeName", "src": "1778:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20080, "indexed": false, "mutability": "mutable", "name": "state", "nameLocation": "1819:5:44", "nodeType": "VariableDeclaration", "scope": 20094, "src": "1813:11:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20079, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "1813:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 20082, "indexed": false, "mutability": "mutable", "name": "decryptorUrl", "nameLocation": "1841:12:44", "nodeType": "VariableDeclaration", "scope": 20094, "src": "1834:19:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20081, "name": "string", "nodeType": "ElementaryTypeName", "src": "1834:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20084, "indexed": false, "mutability": "mutable", "name": "flags", "nameLocation": "1869:5:44", "nodeType": "VariableDeclaration", "scope": 20094, "src": "1863:11:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 20083, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1863:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 20086, "indexed": false, "mutability": "mutable", "name": "data", "nameLocation": "1890:4:44", "nodeType": "VariableDeclaration", "scope": 20094, "src": "1884:10:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 20085, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1884:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 20088, "indexed": false, "mutability": "mutable", "name": "metaDataHash", "nameLocation": "1912:12:44", "nodeType": "VariableDeclaration", "scope": 20094, "src": "1904:20:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20087, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1904:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20090, "indexed": false, "mutability": "mutable", "name": "timestamp", "nameLocation": "1942:9:44", "nodeType": "VariableDeclaration", "scope": 20094, "src": "1934:17:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20089, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1934:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20092, "indexed": false, "mutability": "mutable", "name": "blockNumber", "nameLocation": "1969:11:44", "nodeType": "VariableDeclaration", "scope": 20094, "src": "1961:19:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20091, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1961:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1768:218:44"}, "src": "1747:240:44"}, {"anonymous": false, "id": 20106, "name": "MetadataValidated", "nameLocation": "1998:17:44", "nodeType": "EventDefinition", "parameters": {"id": 20105, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20096, "indexed": true, "mutability": "mutable", "name": "validator", "nameLocation": "2041:9:44", "nodeType": "VariableDeclaration", "scope": 20106, "src": "2025:25:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20095, "name": "address", "nodeType": "ElementaryTypeName", "src": "2025:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20098, "indexed": false, "mutability": "mutable", "name": "metaDataHash", "nameLocation": "2068:12:44", "nodeType": "VariableDeclaration", "scope": 20106, "src": "2060:20:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20097, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2060:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20100, "indexed": false, "mutability": "mutable", "name": "v", "nameLocation": "2096:1:44", "nodeType": "VariableDeclaration", "scope": 20106, "src": "2090:7:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20099, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "2090:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 20102, "indexed": false, "mutability": "mutable", "name": "r", "nameLocation": "2116:1:44", "nodeType": "VariableDeclaration", "scope": 20106, "src": "2108:9:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20101, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2108:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20104, "indexed": false, "mutability": "mutable", "name": "s", "nameLocation": "2136:1:44", "nodeType": "VariableDeclaration", "scope": 20106, "src": "2128:9:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20103, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2128:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2015:128:44"}, "src": "1992:152:44"}, {"anonymous": false, "id": 20116, "name": "MetadataState", "nameLocation": "2155:13:44", "nodeType": "EventDefinition", "parameters": {"id": 20115, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20108, "indexed": true, "mutability": "mutable", "name": "updatedBy", "nameLocation": "2194:9:44", "nodeType": "VariableDeclaration", "scope": 20116, "src": "2178:25:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20107, "name": "address", "nodeType": "ElementaryTypeName", "src": "2178:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20110, "indexed": false, "mutability": "mutable", "name": "state", "nameLocation": "2219:5:44", "nodeType": "VariableDeclaration", "scope": 20116, "src": "2213:11:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20109, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "2213:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 20112, "indexed": false, "mutability": "mutable", "name": "timestamp", "nameLocation": "2242:9:44", "nodeType": "VariableDeclaration", "scope": 20116, "src": "2234:17:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20111, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2234:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20114, "indexed": false, "mutability": "mutable", "name": "blockNumber", "nameLocation": "2269:11:44", "nodeType": "VariableDeclaration", "scope": 20116, "src": "2261:19:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20113, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2261:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2168:118:44"}, "src": "2149:138:44"}, {"anonymous": false, "id": 20128, "name": "TokenURIUpdate", "nameLocation": "2299:14:44", "nodeType": "EventDefinition", "parameters": {"id": 20127, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20118, "indexed": true, "mutability": "mutable", "name": "updatedBy", "nameLocation": "2339:9:44", "nodeType": "VariableDeclaration", "scope": 20128, "src": "2323:25:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20117, "name": "address", "nodeType": "ElementaryTypeName", "src": "2323:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20120, "indexed": false, "mutability": "mutable", "name": "tokenURI", "nameLocation": "2365:8:44", "nodeType": "VariableDeclaration", "scope": 20128, "src": "2358:15:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20119, "name": "string", "nodeType": "ElementaryTypeName", "src": "2358:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20122, "indexed": false, "mutability": "mutable", "name": "tokenID", "nameLocation": "2391:7:44", "nodeType": "VariableDeclaration", "scope": 20128, "src": "2383:15:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20121, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2383:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20124, "indexed": false, "mutability": "mutable", "name": "timestamp", "nameLocation": "2416:9:44", "nodeType": "VariableDeclaration", "scope": 20128, "src": "2408:17:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20123, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2408:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20126, "indexed": false, "mutability": "mutable", "name": "blockNumber", "nameLocation": "2443:11:44", "nodeType": "VariableDeclaration", "scope": 20128, "src": "2435:19:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20125, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2435:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2313:147:44"}, "src": "2293:168:44"}, {"body": {"id": 20141, "nodeType": "Block", "src": "2491:93:44", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20136, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20131, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2509:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20132, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2509:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "31", "id": 20134, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2531:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "id": 20133, "name": "ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22117, "src": "2523:7:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 20135, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2523:10:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2509:24:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a206e6f74204e46544f776e6572", "id": 20137, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2535:30:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3d5dc51bf573c27ec77497f58930e53c304ddc7bc8af4fda1952b7fe24c08c3a", "typeString": "literal_string \"ERC721Template: not NFTOwner\""}, "value": "ERC721Template: not NFTOwner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3d5dc51bf573c27ec77497f58930e53c304ddc7bc8af4fda1952b7fe24c08c3a", "typeString": "literal_string \"ERC721Template: not NFTOwner\""}], "id": 20130, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2501:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20138, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2501:65:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20139, "nodeType": "ExpressionStatement", "src": "2501:65:44"}, {"id": 20140, "nodeType": "PlaceholderStatement", "src": "2576:1:44"}]}, "id": 20142, "name": "onlyNFTOwner", "nameLocation": "2476:12:44", "nodeType": "ModifierDefinition", "parameters": {"id": 20129, "nodeType": "ParameterList", "parameters": [], "src": "2488:2:44"}, "src": "2467:117:44", "virtual": false, "visibility": "internal"}, {"body": {"id": 20217, "nodeType": "Block", "src": "3548:812:44", "statements": [{"expression": {"arguments": [{"id": 20166, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "3579:12:44", "subExpression": {"id": 20165, "name": "initialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20022, "src": "3580:11:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a20746f6b656e20696e7374616e636520616c726561647920696e697469616c697a6564", "id": 20167, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3605:52:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d1819393e9d38b34fbccbf65503c1dfaa2ef9fb6453c28d698aceebca48bc1db", "typeString": "literal_string \"ERC721Template: token instance already initialized\""}, "value": "ERC721Template: token instance already initialized"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d1819393e9d38b34fbccbf65503c1dfaa2ef9fb6453c28d698aceebca48bc1db", "typeString": "literal_string \"ERC721Template: token instance already initialized\""}], "id": 20164, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3558:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20168, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3558:109:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20169, "nodeType": "ExpressionStatement", "src": "3558:109:44"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20175, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20170, "name": "additionalERC20Deployer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20153, "src": "3680:23:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 20173, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3715:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 20172, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3707:7:44", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20171, "name": "address", "nodeType": "ElementaryTypeName", "src": "3707:7:44", "typeDescriptions": {}}}, "id": 20174, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3707:10:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3680:37:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20180, "nodeType": "IfStatement", "src": "3677:100:44", "trueBody": {"expression": {"arguments": [{"id": 20177, "name": "additionalERC20Deployer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20153, "src": "3753:23:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20176, "name": "_addToCreateERC20List", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24595, "src": "3731:21:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20178, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3731:46:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20179, "nodeType": "ExpressionStatement", "src": "3731:46:44"}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20181, "name": "additionalMetaDataUpdater", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20155, "src": "3790:25:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 20184, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3827:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 20183, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3819:7:44", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20182, "name": "address", "nodeType": "ElementaryTypeName", "src": "3819:7:44", "typeDescriptions": {}}}, "id": 20185, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3819:10:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3790:39:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20191, "nodeType": "IfStatement", "src": "3787:101:44", "trueBody": {"expression": {"arguments": [{"id": 20188, "name": "additionalMetaDataUpdater", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20155, "src": "3862:25:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20187, "name": "_addToMetadataList", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24731, "src": "3843:18:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20189, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3843:45:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20190, "nodeType": "ExpressionStatement", "src": "3843:45:44"}}, {"assignments": [20193], "declarations": [{"constant": false, "id": 20193, "mutability": "mutable", "name": "initResult", "nameLocation": "3903:10:44", "nodeType": "VariableDeclaration", "scope": 20217, "src": "3898:15:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20192, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3898:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 20202, "initialValue": {"arguments": [{"id": 20195, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20145, "src": "3958:5:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20196, "name": "name_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20147, "src": "3981:5:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}, {"id": 20197, "name": "symbol_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20149, "src": "4004:7:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}, {"id": 20198, "name": "tokenFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20151, "src": "4029:12:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20199, "name": "tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20157, "src": "4059:8:44", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 20200, "name": "transferable_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20159, "src": "4085:13:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}, {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 20194, "name": "_initialize", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20316, "src": "3929:11:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$_t_bool_$", "typeString": "function (address,string memory,string memory,address,string memory,bool) returns (bool)"}}, "id": 20201, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3929:183:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "3898:214:44"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 20203, "name": "registerAllInterfaces", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22075, "src": "4163:21:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 20204, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4163:23:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20205, "nodeType": "ExpressionStatement", "src": "4163:23:44"}, {"expression": {"arguments": [{"id": 20207, "name": "_INTERFACE_ID_ERC725X", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25278, "src": "4252:21:44", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "id": 20206, "name": "_registerInterface", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21960, "src": "4233:18:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$", "typeString": "function (bytes4)"}}, "id": 20208, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4233:41:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20209, "nodeType": "ExpressionStatement", "src": "4233:41:44"}, {"expression": {"arguments": [{"id": 20211, "name": "_INTERFACE_ID_ERC725Y", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25293, "src": "4303:21:44", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "id": 20210, "name": "_registerInterface", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21960, "src": "4284:18:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$", "typeString": "function (bytes4)"}}, "id": 20212, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4284:41:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20213, "nodeType": "ExpressionStatement", "src": "4284:41:44"}, {"expression": {"components": [{"id": 20214, "name": "initResult", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20193, "src": "4342:10:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 20215, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4341:12:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 20163, "id": 20216, "nodeType": "Return", "src": "4335:18:44"}]}, "documentation": {"id": 20143, "nodeType": "StructuredDocumentation", "src": "2596:635:44", "text": " @dev initialize\n      Calls private _initialize function. Only if contract is not initialized.\nThis function mints an NFT (tokenId=1) to the owner and add owner as Manager Role\n @param owner NFT Owner\n @param name_ NFT name\n @param symbol_ NFT Symbol\n @param tokenFactory NFT factory address\n @param additionalERC20Deployer address of additionalERC20Deployer\n @param additionalMetaDataUpdater address of additionalMetaDataUpdater\n @param tokenURI tokenURI\n @param transferable_ if set to false, this NFT is non-transferable\n@return boolean"}, "functionSelector": "1a1d51e8", "id": 20218, "implemented": true, "kind": "function", "modifiers": [], "name": "initialize", "nameLocation": "3246:10:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20160, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20145, "mutability": "mutable", "name": "owner", "nameLocation": "3274:5:44", "nodeType": "VariableDeclaration", "scope": 20218, "src": "3266:13:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20144, "name": "address", "nodeType": "ElementaryTypeName", "src": "3266:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20147, "mutability": "mutable", "name": "name_", "nameLocation": "3305:5:44", "nodeType": "VariableDeclaration", "scope": 20218, "src": "3289:21:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string"}, "typeName": {"id": 20146, "name": "string", "nodeType": "ElementaryTypeName", "src": "3289:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20149, "mutability": "mutable", "name": "symbol_", "nameLocation": "3336:7:44", "nodeType": "VariableDeclaration", "scope": 20218, "src": "3320:23:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string"}, "typeName": {"id": 20148, "name": "string", "nodeType": "ElementaryTypeName", "src": "3320:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20151, "mutability": "mutable", "name": "tokenFactory", "nameLocation": "3361:12:44", "nodeType": "VariableDeclaration", "scope": 20218, "src": "3353:20:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20150, "name": "address", "nodeType": "ElementaryTypeName", "src": "3353:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20153, "mutability": "mutable", "name": "additionalERC20Deployer", "nameLocation": "3391:23:44", "nodeType": "VariableDeclaration", "scope": 20218, "src": "3383:31:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20152, "name": "address", "nodeType": "ElementaryTypeName", "src": "3383:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20155, "mutability": "mutable", "name": "additionalMetaDataUpdater", "nameLocation": "3432:25:44", "nodeType": "VariableDeclaration", "scope": 20218, "src": "3424:33:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20154, "name": "address", "nodeType": "ElementaryTypeName", "src": "3424:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20157, "mutability": "mutable", "name": "tokenURI", "nameLocation": "3481:8:44", "nodeType": "VariableDeclaration", "scope": 20218, "src": "3467:22:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20156, "name": "string", "nodeType": "ElementaryTypeName", "src": "3467:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20159, "mutability": "mutable", "name": "transferable_", "nameLocation": "3504:13:44", "nodeType": "VariableDeclaration", "scope": 20218, "src": "3499:18:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20158, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3499:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3256:267:44"}, "returnParameters": {"id": 20163, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20162, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20218, "src": "3542:4:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20161, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3542:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3541:6:44"}, "scope": 21131, "src": "3237:1123:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20315, "nodeType": "Block", "src": "5048:813:44", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20242, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20237, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20221, "src": "5079:5:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 20240, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5096:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 20239, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5088:7:44", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20238, "name": "address", "nodeType": "ElementaryTypeName", "src": "5088:7:44", "typeDescriptions": {}}}, "id": 20241, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5088:10:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5079:19:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a3a20496e76616c6964206d696e7465722c20207a65726f2061646472657373", "id": 20243, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5112:48:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_557d7c0669322aec2883c943ec789806fde920dffa81d585abc938f7aceffe4c", "typeString": "literal_string \"ERC721Template:: Invalid minter,  zero address\""}, "value": "ERC721Template:: Invalid minter,  zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_557d7c0669322aec2883c943ec789806fde920dffa81d585abc938f7aceffe4c", "typeString": "literal_string \"ERC721Template:: Invalid minter,  zero address\""}], "id": 20236, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5058:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20244, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5058:112:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20245, "nodeType": "ExpressionStatement", "src": "5058:112:44"}, {"expression": {"id": 20248, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20246, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "5189:5:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20247, "name": "name_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20223, "src": "5197:5:44", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "5189:13:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 20249, "nodeType": "ExpressionStatement", "src": "5189:13:44"}, {"expression": {"id": 20252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20250, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20020, "src": "5212:7:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20251, "name": "symbol_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20225, "src": "5222:7:44", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "5212:17:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 20253, "nodeType": "ExpressionStatement", "src": "5212:17:44"}, {"expression": {"id": 20256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20254, "name": "_tokenFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20032, "src": "5239:13:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20255, "name": "tokenFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20227, "src": "5255:12:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5239:28:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 20257, "nodeType": "ExpressionStatement", "src": "5239:28:44"}, {"expression": {"id": 20260, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20258, "name": "defaultBaseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22008, "src": "5277:14:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "", "id": 20259, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5294:2:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}, "src": "5277:19:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 20261, "nodeType": "ExpressionStatement", "src": "5277:19:44"}, {"expression": {"id": 20264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20262, "name": "initialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20022, "src": "5306:11:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20263, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5320:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5306:18:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20265, "nodeType": "ExpressionStatement", "src": "5306:18:44"}, {"expression": {"id": 20268, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20266, "name": "hasMetaData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "5334:11:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 20267, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5348:5:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "5334:19:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20269, "nodeType": "ExpressionStatement", "src": "5334:19:44"}, {"expression": {"id": 20272, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20270, "name": "transferable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20044, "src": "5363:12:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20271, "name": "transferable_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20231, "src": "5378:13:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5363:28:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20273, "nodeType": "ExpressionStatement", "src": "5363:28:44"}, {"expression": {"arguments": [{"id": 20275, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20221, "src": "5411:5:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"hexValue": "31", "id": 20276, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5418:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "id": 20274, "name": "_safeMint", "nodeType": "Identifier", "overloadedDeclarations": [22568, 22597], "referencedDeclaration": 22568, "src": "5401:9:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 20277, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5401:19:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20278, "nodeType": "ExpressionStatement", "src": "5401:19:44"}, {"expression": {"arguments": [{"id": 20280, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20221, "src": "5442:5:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20279, "name": "_addManager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24855, "src": "5430:11:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20281, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5430:18:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20282, "nodeType": "ExpressionStatement", "src": "5430:18:44"}, {"assignments": [20285], "declarations": [{"constant": false, "id": 20285, "mutability": "mutable", "name": "user", "nameLocation": "5577:4:44", "nodeType": "VariableDeclaration", "scope": 20315, "src": "5563:18:44", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles"}, "typeName": {"id": 20284, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20283, "name": "Roles", "nodeType": "IdentifierPath", "referencedDeclaration": 24369, "src": "5563:5:44"}, "referencedDeclaration": 24369, "src": "5563:5:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles"}}, "visibility": "internal"}], "id": 20289, "initialValue": {"baseExpression": {"id": 20286, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24357, "src": "5584:11:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$24369_storage_$", "typeString": "mapping(address => struct ERC721RolesAddress.Roles storage ref)"}}, "id": 20288, "indexExpression": {"id": 20287, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20221, "src": "5596:5:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5584:18:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage", "typeString": "struct ERC721RolesAddress.Roles storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "5563:39:44"}, {"expression": {"id": 20294, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20290, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20285, "src": "5612:4:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles storage pointer"}}, "id": 20292, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "updateMetadata", "nodeType": "MemberAccess", "referencedDeclaration": 24366, "src": "5612:19:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20293, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5634:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5612:26:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20295, "nodeType": "ExpressionStatement", "src": "5612:26:44"}, {"expression": {"id": 20300, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20296, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20285, "src": "5648:4:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles storage pointer"}}, "id": 20298, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "deployERC20", "nodeType": "MemberAccess", "referencedDeclaration": 24364, "src": "5648:16:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20299, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5667:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5648:23:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20301, "nodeType": "ExpressionStatement", "src": "5648:23:44"}, {"expression": {"id": 20306, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20302, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20285, "src": "5681:4:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles storage pointer"}}, "id": 20304, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "store", "nodeType": "MemberAccess", "referencedDeclaration": 24368, "src": "5681:10:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20305, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5694:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5681:17:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20307, "nodeType": "ExpressionStatement", "src": "5681:17:44"}, {"expression": {"arguments": [{"hexValue": "31", "id": 20309, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5805:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, {"id": 20310, "name": "tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20229, "src": "5808:8:44", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 20308, "name": "_setTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22219, "src": "5792:12:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$", "typeString": "function (uint256,string memory)"}}, "id": 20311, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5792:25:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20312, "nodeType": "ExpressionStatement", "src": "5792:25:44"}, {"expression": {"id": 20313, "name": "initialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20022, "src": "5843:11:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 20235, "id": 20314, "nodeType": "Return", "src": "5836:18:44"}]}, "documentation": {"id": 20219, "nodeType": "StructuredDocumentation", "src": "4366:452:44", "text": " @dev _initialize\n      Calls private _initialize function. Only if contract is not initialized.\n       This function mints an NFT (tokenId=1) to the owner\n       and add owner as Manager Role (Roles admin)\n @param owner NFT Owner\n @param name_ NFT name\n @param symbol_ NFT Symbol\n @param tokenFactory NFT factory address\n @param tokenURI tokenURI for token 1\n@return boolean"}, "id": 20316, "implemented": true, "kind": "function", "modifiers": [], "name": "_initialize", "nameLocation": "4833:11:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20232, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20221, "mutability": "mutable", "name": "owner", "nameLocation": "4862:5:44", "nodeType": "VariableDeclaration", "scope": 20316, "src": "4854:13:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20220, "name": "address", "nodeType": "ElementaryTypeName", "src": "4854:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20223, "mutability": "mutable", "name": "name_", "nameLocation": "4891:5:44", "nodeType": "VariableDeclaration", "scope": 20316, "src": "4877:19:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20222, "name": "string", "nodeType": "ElementaryTypeName", "src": "4877:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20225, "mutability": "mutable", "name": "symbol_", "nameLocation": "4920:7:44", "nodeType": "VariableDeclaration", "scope": 20316, "src": "4906:21:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20224, "name": "string", "nodeType": "ElementaryTypeName", "src": "4906:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20227, "mutability": "mutable", "name": "tokenFactory", "nameLocation": "4945:12:44", "nodeType": "VariableDeclaration", "scope": 20316, "src": "4937:20:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20226, "name": "address", "nodeType": "ElementaryTypeName", "src": "4937:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20229, "mutability": "mutable", "name": "tokenURI", "nameLocation": "4981:8:44", "nodeType": "VariableDeclaration", "scope": 20316, "src": "4967:22:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20228, "name": "string", "nodeType": "ElementaryTypeName", "src": "4967:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20231, "mutability": "mutable", "name": "transferable_", "nameLocation": "5004:13:44", "nodeType": "VariableDeclaration", "scope": 20316, "src": "4999:18:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20230, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4999:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4844:179:44"}, "returnParameters": {"id": 20235, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20234, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20316, "src": "5042:4:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20233, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5042:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "5041:6:44"}, "scope": 21131, "src": "4824:1037:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 20350, "nodeType": "Block", "src": "6080:287:44", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20330, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20325, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6098:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20326, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6098:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 20328, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20319, "src": "6120:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20327, "name": "ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22117, "src": "6112:7:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 20329, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6112:16:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6098:30:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a206e6f74204e46544f776e6572", "id": 20331, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6130:30:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3d5dc51bf573c27ec77497f58930e53c304ddc7bc8af4fda1952b7fe24c08c3a", "typeString": "literal_string \"ERC721Template: not NFTOwner\""}, "value": "ERC721Template: not NFTOwner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3d5dc51bf573c27ec77497f58930e53c304ddc7bc8af4fda1952b7fe24c08c3a", "typeString": "literal_string \"ERC721Template: not NFTOwner\""}], "id": 20324, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6090:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20332, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6090:71:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20333, "nodeType": "ExpressionStatement", "src": "6090:71:44"}, {"expression": {"arguments": [{"id": 20335, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20319, "src": "6184:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 20336, "name": "tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20321, "src": "6193:8:44", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 20334, "name": "_setTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22219, "src": "6171:12:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$", "typeString": "function (uint256,string memory)"}}, "id": 20337, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6171:31:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20338, "nodeType": "ExpressionStatement", "src": "6171:31:44"}, {"eventCall": {"arguments": [{"expression": {"id": 20340, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6232:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20341, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6232:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20342, "name": "tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20321, "src": "6244:8:44", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 20343, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20319, "src": "6254:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 20344, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "6318:5:44", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "6318:15:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 20346, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "6347:5:44", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20347, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "6347:12:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20339, "name": "TokenURIUpdate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20128, "src": "6217:14:44", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,string memory,uint256,uint256,uint256)"}}, "id": 20348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6217:143:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20349, "nodeType": "EmitStatement", "src": "6212:148:44"}]}, "documentation": {"id": 20317, "nodeType": "StructuredDocumentation", "src": "5867:139:44", "text": " @dev setTokenURI\n      sets tokenURI for a tokenId\n @param tokenId token ID\n @param tokenURI token URI"}, "functionSelector": "162094c4", "id": 20351, "implemented": true, "kind": "function", "modifiers": [], "name": "setTokenURI", "nameLocation": "6020:11:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20322, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20319, "mutability": "mutable", "name": "tokenId", "nameLocation": "6040:7:44", "nodeType": "VariableDeclaration", "scope": 20351, "src": "6032:15:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20318, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6032:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20321, "mutability": "mutable", "name": "tokenURI", "nameLocation": "6063:8:44", "nodeType": "VariableDeclaration", "scope": 20351, "src": "6049:22:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20320, "name": "string", "nodeType": "ElementaryTypeName", "src": "6049:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "6031:41:44"}, "returnParameters": {"id": 20323, "nodeType": "ParameterList", "parameters": [], "src": "6080:0:44"}, "scope": 21131, "src": "6011:356:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 20380, "nodeType": "Block", "src": "6558:329:44", "statements": [{"expression": {"arguments": [{"expression": {"baseExpression": {"id": 20358, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24357, "src": "6589:11:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$24369_storage_$", "typeString": "mapping(address => struct ERC721RolesAddress.Roles storage ref)"}}, "id": 20361, "indexExpression": {"expression": {"id": 20359, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6601:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20360, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6601:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6589:23:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage", "typeString": "struct ERC721RolesAddress.Roles storage ref"}}, "id": 20362, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "updateMetadata", "nodeType": "MemberAccess", "referencedDeclaration": 24366, "src": "6589:38:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a204e4f54204d455441444154415f524f4c45", "id": 20363, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6641:35:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0c0928ff32ca2af9f832634e669f36c9970593071229e178648730ba105d3ea1", "typeString": "literal_string \"ERC721Template: NOT METADATA_ROLE\""}, "value": "ERC721Template: NOT METADATA_ROLE"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0c0928ff32ca2af9f832634e669f36c9970593071229e178648730ba105d3ea1", "typeString": "literal_string \"ERC721Template: NOT METADATA_ROLE\""}], "id": 20357, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6568:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20364, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6568:118:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20365, "nodeType": "ExpressionStatement", "src": "6568:118:44"}, {"expression": {"id": 20368, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20366, "name": "metaDataState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "6696:13:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20367, "name": "_metaDataState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20354, "src": "6712:14:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "6696:30:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 20369, "nodeType": "ExpressionStatement", "src": "6696:30:44"}, {"eventCall": {"arguments": [{"expression": {"id": 20371, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6755:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6755:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20373, "name": "_metaDataState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20354, "src": "6767:14:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"expression": {"id": 20374, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "6838:5:44", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20375, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "6838:15:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 20376, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "6867:5:44", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20377, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "6867:12:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20370, "name": "MetadataState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20116, "src": "6741:13:44", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint8,uint256,uint256)"}}, "id": 20378, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6741:139:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20379, "nodeType": "EmitStatement", "src": "6736:144:44"}]}, "documentation": {"id": 20352, "nodeType": "StructuredDocumentation", "src": "6379:119:44", "text": " @dev setMetaDataState\n      Updates metadata state\n @param _metaDataState metadata state"}, "functionSelector": "467c97f5", "id": 20381, "implemented": true, "kind": "function", "modifiers": [], "name": "setMetaDataState", "nameLocation": "6512:16:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20355, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20354, "mutability": "mutable", "name": "_metaDataState", "nameLocation": "6535:14:44", "nodeType": "VariableDeclaration", "scope": 20381, "src": "6529:20:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20353, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "6529:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "6528:22:44"}, "returnParameters": {"id": 20356, "nodeType": "ParameterList", "parameters": [], "src": "6558:0:44"}, "scope": 21131, "src": "6503:384:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"canonicalName": "ERC721Template.metaDataProof", "id": 20390, "members": [{"constant": false, "id": 20383, "mutability": "mutable", "name": "validatorAddress", "nameLocation": "6932:16:44", "nodeType": "VariableDeclaration", "scope": 20390, "src": "6924:24:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20382, "name": "address", "nodeType": "ElementaryTypeName", "src": "6924:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20385, "mutability": "mutable", "name": "v", "nameLocation": "6964:1:44", "nodeType": "VariableDeclaration", "scope": 20390, "src": "6958:7:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20384, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "6958:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 20387, "mutability": "mutable", "name": "r", "nameLocation": "7016:1:44", "nodeType": "VariableDeclaration", "scope": 20390, "src": "7008:9:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20386, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "7008:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20389, "mutability": "mutable", "name": "s", "nameLocation": "7068:1:44", "nodeType": "VariableDeclaration", "scope": 20390, "src": "7060:9:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20388, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "7060:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "name": "metaDataProof", "nameLocation": "6900:13:44", "nodeType": "StructDefinition", "scope": 21131, "src": "6893:216:44", "visibility": "public"}, {"body": {"id": 20429, "nodeType": "Block", "src": "7968:275:44", "statements": [{"expression": {"arguments": [{"expression": {"baseExpression": {"id": 20411, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24357, "src": "7999:11:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$24369_storage_$", "typeString": "mapping(address => struct ERC721RolesAddress.Roles storage ref)"}}, "id": 20414, "indexExpression": {"expression": {"id": 20412, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8011:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20413, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8011:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7999:23:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage", "typeString": "struct ERC721RolesAddress.Roles storage ref"}}, "id": 20415, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "updateMetadata", "nodeType": "MemberAccess", "referencedDeclaration": 24366, "src": "7999:38:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a204e4f54204d455441444154415f524f4c45", "id": 20416, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8051:35:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0c0928ff32ca2af9f832634e669f36c9970593071229e178648730ba105d3ea1", "typeString": "literal_string \"ERC721Template: NOT METADATA_ROLE\""}, "value": "ERC721Template: NOT METADATA_ROLE"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0c0928ff32ca2af9f832634e669f36c9970593071229e178648730ba105d3ea1", "typeString": "literal_string \"ERC721Template: NOT METADATA_ROLE\""}], "id": 20410, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7978:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20417, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7978:118:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20418, "nodeType": "ExpressionStatement", "src": "7978:118:44"}, {"expression": {"arguments": [{"id": 20420, "name": "_metaDataState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20393, "src": "8119:14:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"id": 20421, "name": "_metaDataDecryptorUrl", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20395, "src": "8135:21:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}, {"id": 20422, "name": "_metaDataDecryptorAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20397, "src": "8158:25:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}, {"id": 20423, "name": "flags", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20399, "src": "8184:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"id": 20424, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20401, "src": "8200:4:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"id": 20425, "name": "_metaDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20403, "src": "8205:13:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 20426, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20407, "src": "8220:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}, {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}], "id": 20419, "name": "_setMetaData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20592, "src": "8106:12:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes32_$_t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint8,string calldata,string calldata,bytes calldata,bytes calldata,bytes32,struct ERC721Template.metaDataProof memory[] memory)"}}, "id": 20427, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8106:130:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20428, "nodeType": "ExpressionStatement", "src": "8106:130:44"}]}, "documentation": {"id": 20391, "nodeType": "StructuredDocumentation", "src": "7114:592:44", "text": " @dev setMetaData\n     \nCreates or update Metadata for Aqua(emit event)\nAlso, updates the METADATA_DECRYPTOR key\n @param _metaDataState metadata state\n @param _metaDataDecryptorUrl decryptor URL\n @param _metaDataDecryptorAddress decryptor public key\n @param flags flags used by Aquarius\n @param data data used by Aquarius\n @param _metaDataHash hash of clear data (before the encryption, if any)\n @param _metadataProofs optional signatures of entitys who validated data (before the encryption, if any)"}, "functionSelector": "1aa3adf9", "id": 20430, "implemented": true, "kind": "function", "modifiers": [], "name": "setMetaData", "nameLocation": "7720:11:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20408, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20393, "mutability": "mutable", "name": "_metaDataState", "nameLocation": "7738:14:44", "nodeType": "VariableDeclaration", "scope": 20430, "src": "7732:20:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20392, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "7732:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 20395, "mutability": "mutable", "name": "_metaDataDecryptorUrl", "nameLocation": "7770:21:44", "nodeType": "VariableDeclaration", "scope": 20430, "src": "7754:37:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string"}, "typeName": {"id": 20394, "name": "string", "nodeType": "ElementaryTypeName", "src": "7754:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20397, "mutability": "mutable", "name": "_metaDataDecryptorAddress", "nameLocation": "7818:25:44", "nodeType": "VariableDeclaration", "scope": 20430, "src": "7802:41:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string"}, "typeName": {"id": 20396, "name": "string", "nodeType": "ElementaryTypeName", "src": "7802:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20399, "mutability": "mutable", "name": "flags", "nameLocation": "7860:5:44", "nodeType": "VariableDeclaration", "scope": 20430, "src": "7845:20:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 20398, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "7845:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 20401, "mutability": "mutable", "name": "data", "nameLocation": "7891:4:44", "nodeType": "VariableDeclaration", "scope": 20430, "src": "7876:19:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 20400, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "7876:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 20403, "mutability": "mutable", "name": "_metaDataHash", "nameLocation": "7904:13:44", "nodeType": "VariableDeclaration", "scope": 20430, "src": "7896:21:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20402, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "7896:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20407, "mutability": "mutable", "name": "_metadataProofs", "nameLocation": "7942:15:44", "nodeType": "VariableDeclaration", "scope": 20430, "src": "7919:38:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof[]"}, "typeName": {"baseType": {"id": 20405, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20404, "name": "metaDataProof", "nodeType": "IdentifierPath", "referencedDeclaration": 20390, "src": "7919:13:44"}, "referencedDeclaration": 20390, "src": "7919:13:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_storage_ptr", "typeString": "struct ERC721Template.metaDataProof"}}, "id": 20406, "nodeType": "ArrayTypeName", "src": "7919:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_storage_$dyn_storage_ptr", "typeString": "struct ERC721Template.metaDataProof[]"}}, "visibility": "internal"}], "src": "7731:227:44"}, "returnParameters": {"id": 20409, "nodeType": "ParameterList", "parameters": [], "src": "7968:0:44"}, "scope": 21131, "src": "7711:532:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20591, "nodeType": "Block", "src": "8507:1555:44", "statements": [{"expression": {"id": 20451, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20449, "name": "metaDataState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "8517:13:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20450, "name": "_metaDataState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20432, "src": "8533:14:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "8517:30:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 20452, "nodeType": "ExpressionStatement", "src": "8517:30:44"}, {"expression": {"id": 20455, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20453, "name": "metaDataDecryptorUrl", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20026, "src": "8557:20:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20454, "name": "_metaDataDecryptorUrl", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20434, "src": "8580:21:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}, "src": "8557:44:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 20456, "nodeType": "ExpressionStatement", "src": "8557:44:44"}, {"expression": {"id": 20459, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20457, "name": "metaDataDecryptorAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20028, "src": "8611:24:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20458, "name": "_metaDataDecryptorAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20436, "src": "8638:25:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}, "src": "8611:52:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 20460, "nodeType": "ExpressionStatement", "src": "8611:52:44"}, {"condition": {"id": 20462, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "8676:12:44", "subExpression": {"id": 20461, "name": "hasMetaData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "8677:11:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"eventCall": {"arguments": [{"expression": {"id": 20483, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "9003:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "9003:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20485, "name": "metaDataState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "9015:13:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"id": 20486, "name": "_metaDataDecryptorUrl", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20434, "src": "9030:21:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}, {"id": 20487, "name": "flags", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20438, "src": "9065:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"id": 20488, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20440, "src": "9072:4:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"id": 20489, "name": "_metaDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20442, "src": "9078:13:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 20490, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "9148:5:44", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20491, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "9148:15:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 20492, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "9177:5:44", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20493, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "9177:12:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20482, "name": "MetadataUpdated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20094, "src": "8987:15:44", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint8,string memory,bytes memory,bytes memory,bytes32,uint256,uint256)"}}, "id": 20494, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8987:203:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20495, "nodeType": "EmitStatement", "src": "8982:208:44"}, "id": 20496, "nodeType": "IfStatement", "src": "8673:517:44", "trueBody": {"id": 20481, "nodeType": "Block", "src": "8689:267:44", "statements": [{"eventCall": {"arguments": [{"expression": {"id": 20464, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8724:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20465, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8724:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20466, "name": "_metaDataState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20432, "src": "8736:14:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"id": 20467, "name": "_metaDataDecryptorUrl", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20434, "src": "8752:21:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}, {"id": 20468, "name": "flags", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20438, "src": "8787:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"id": 20469, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20440, "src": "8794:4:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"id": 20470, "name": "_metaDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20442, "src": "8800:13:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 20471, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "8871:5:44", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "8871:15:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 20473, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "8900:5:44", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20474, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "8900:12:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20463, "name": "MetadataCreated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20076, "src": "8708:15:44", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint8,string memory,bytes memory,bytes memory,bytes32,uint256,uint256)"}}, "id": 20475, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8708:205:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20476, "nodeType": "EmitStatement", "src": "8703:210:44"}, {"expression": {"id": 20479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20477, "name": "hasMetaData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "8927:11:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20478, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8941:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "8927:18:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20480, "nodeType": "ExpressionStatement", "src": "8927:18:44"}]}}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20501, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20498, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "9264:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20499, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "9264:22:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "3530", "id": 20500, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9290:2:44", "typeDescriptions": {"typeIdentifier": "t_rational_50_by_1", "typeString": "int_const 50"}, "value": "50"}, "src": "9264:28:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "546f6f204d616e792050726f6f6673", "id": 20502, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9294:17:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_00547569f77d94ac3666d6e47b8ab1b243c36631f854cf991dc9f6b220f1f93d", "typeString": "literal_string \"Too Many Proofs\""}, "value": "Too Many Proofs"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_00547569f77d94ac3666d6e47b8ab1b243c36631f854cf991dc9f6b220f1f93d", "typeString": "literal_string \"Too Many Proofs\""}], "id": 20497, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9256:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20503, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9256:56:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20504, "nodeType": "ExpressionStatement", "src": "9256:56:44"}, {"assignments": [20506], "declarations": [{"constant": false, "id": 20506, "mutability": "mutable", "name": "prefix", "nameLocation": "9335:6:44", "nodeType": "VariableDeclaration", "scope": 20591, "src": "9322:19:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 20505, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "9322:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 20508, "initialValue": {"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332", "id": 20507, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9344:34:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73", "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""}, "value": "\u0019Ethereum Signed Message:\n32"}, "nodeType": "VariableDeclarationStatement", "src": "9322:56:44"}, {"body": {"id": 20589, "nodeType": "Block", "src": "9441:615:44", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20528, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 20520, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "9458:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20522, "indexExpression": {"id": 20521, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "9474:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9458:18:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory"}}, "id": 20523, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "validatorAddress", "nodeType": "MemberAccess", "referencedDeclaration": 20383, "src": "9458:35:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 20526, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9505:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 20525, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9497:7:44", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 20524, "name": "address", "nodeType": "ElementaryTypeName", "src": "9497:7:44", "typeDescriptions": {}}}, "id": 20527, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9497:10:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "9458:49:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20568, "nodeType": "IfStatement", "src": "9455:411:44", "trueBody": {"id": 20567, "nodeType": "Block", "src": "9508:358:44", "statements": [{"assignments": [20530], "declarations": [{"constant": false, "id": 20530, "mutability": "mutable", "name": "prefixedHash", "nameLocation": "9538:12:44", "nodeType": "VariableDeclaration", "scope": 20567, "src": "9530:20:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20529, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "9530:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 20538, "initialValue": {"arguments": [{"arguments": [{"id": 20534, "name": "prefix", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20506, "src": "9580:6:44", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 20535, "name": "_metaDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20442, "src": "9588:13:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 20532, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "9563:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 20533, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "9563:16:44", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 20536, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9563:39:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 20531, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "9553:9:44", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 20537, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9553:50:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "9530:73:44"}, {"assignments": [20540], "declarations": [{"constant": false, "id": 20540, "mutability": "mutable", "name": "signer", "nameLocation": "9633:6:44", "nodeType": "VariableDeclaration", "scope": 20567, "src": "9625:14:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20539, "name": "address", "nodeType": "ElementaryTypeName", "src": "9625:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 20556, "initialValue": {"arguments": [{"id": 20542, "name": "prefixedHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20530, "src": "9652:12:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"baseExpression": {"id": 20543, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "9686:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20545, "indexExpression": {"id": 20544, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "9702:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9686:18:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory"}}, "id": 20546, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "v", "nodeType": "MemberAccess", "referencedDeclaration": 20385, "src": "9686:20:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"expression": {"baseExpression": {"id": 20547, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "9708:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20549, "indexExpression": {"id": 20548, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "9724:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9708:18:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory"}}, "id": 20550, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "r", "nodeType": "MemberAccess", "referencedDeclaration": 20387, "src": "9708:20:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"baseExpression": {"id": 20551, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "9730:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20553, "indexExpression": {"id": 20552, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "9746:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9730:18:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory"}}, "id": 20554, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "s", "nodeType": "MemberAccess", "referencedDeclaration": 20389, "src": "9730:20:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 20541, "name": "ecrecover", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -6, "src": "9642:9:44", "typeDescriptions": {"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}}, "id": 20555, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9642:109:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "9625:126:44"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 20563, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20558, "name": "signer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20540, "src": "9781:6:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"baseExpression": {"id": 20559, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "9791:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20561, "indexExpression": {"id": 20560, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "9807:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9791:18:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory"}}, "id": 20562, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "validatorAddress", "nodeType": "MemberAccess", "referencedDeclaration": 20383, "src": "9791:35:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "9781:45:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c69642070726f6f66207369676e6572", "id": 20564, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9828:22:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1dfa76f70125c19d5c3804111eebfd2d2080b0799f9d60aca9dcd97487ab9520", "typeString": "literal_string \"Invalid proof signer\""}, "value": "Invalid proof signer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1dfa76f70125c19d5c3804111eebfd2d2080b0799f9d60aca9dcd97487ab9520", "typeString": "literal_string \"Invalid proof signer\""}], "id": 20557, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9773:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20565, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9773:78:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20566, "nodeType": "ExpressionStatement", "src": "9773:78:44"}]}}, {"eventCall": {"arguments": [{"expression": {"baseExpression": {"id": 20570, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "9902:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20572, "indexExpression": {"id": 20571, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "9918:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9902:18:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory"}}, "id": 20573, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "validatorAddress", "nodeType": "MemberAccess", "referencedDeclaration": 20383, "src": "9902:35:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20574, "name": "_metaDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20442, "src": "9952:13:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"baseExpression": {"id": 20575, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "9980:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20577, "indexExpression": {"id": 20576, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "9996:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9980:18:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory"}}, "id": 20578, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "v", "nodeType": "MemberAccess", "referencedDeclaration": 20385, "src": "9980:20:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"expression": {"baseExpression": {"id": 20579, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "10002:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20581, "indexExpression": {"id": 20580, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "10018:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10002:18:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory"}}, "id": 20582, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "r", "nodeType": "MemberAccess", "referencedDeclaration": 20387, "src": "10002:20:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"baseExpression": {"id": 20583, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "10024:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20585, "indexExpression": {"id": 20584, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "10040:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10024:18:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory"}}, "id": 20586, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "s", "nodeType": "MemberAccess", "referencedDeclaration": 20389, "src": "10024:20:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 20569, "name": "MetadataValidated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20106, "src": "9884:17:44", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$", "typeString": "function (address,bytes32,uint8,bytes32,bytes32)"}}, "id": 20587, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9884:161:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20588, "nodeType": "EmitStatement", "src": "9879:166:44"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20516, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20513, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "9408:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 20514, "name": "_metadataProofs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20446, "src": "9412:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof memory[] memory"}}, "id": 20515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "9412:22:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9408:26:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20590, "initializationExpression": {"assignments": [20510], "declarations": [{"constant": false, "id": 20510, "mutability": "mutable", "name": "i", "nameLocation": "9401:1:44", "nodeType": "VariableDeclaration", "scope": 20590, "src": "9393:9:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20509, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9393:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20512, "initialValue": {"hexValue": "30", "id": 20511, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9405:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "9393:13:44"}, "loopExpression": {"expression": {"id": 20518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "9436:3:44", "subExpression": {"id": 20517, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20510, "src": "9436:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20519, "nodeType": "ExpressionStatement", "src": "9436:3:44"}, "nodeType": "ForStatement", "src": "9388:668:44"}]}, "id": 20592, "implemented": true, "kind": "function", "modifiers": [], "name": "_setMetaData", "nameLocation": "8258:12:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20447, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20432, "mutability": "mutable", "name": "_metaDataState", "nameLocation": "8277:14:44", "nodeType": "VariableDeclaration", "scope": 20592, "src": "8271:20:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20431, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "8271:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 20434, "mutability": "mutable", "name": "_metaDataDecryptorUrl", "nameLocation": "8309:21:44", "nodeType": "VariableDeclaration", "scope": 20592, "src": "8293:37:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string"}, "typeName": {"id": 20433, "name": "string", "nodeType": "ElementaryTypeName", "src": "8293:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20436, "mutability": "mutable", "name": "_metaDataDecryptorAddress", "nameLocation": "8357:25:44", "nodeType": "VariableDeclaration", "scope": 20592, "src": "8341:41:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string"}, "typeName": {"id": 20435, "name": "string", "nodeType": "ElementaryTypeName", "src": "8341:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20438, "mutability": "mutable", "name": "flags", "nameLocation": "8399:5:44", "nodeType": "VariableDeclaration", "scope": 20592, "src": "8384:20:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 20437, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "8384:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 20440, "mutability": "mutable", "name": "data", "nameLocation": "8430:4:44", "nodeType": "VariableDeclaration", "scope": 20592, "src": "8415:19:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 20439, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "8415:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 20442, "mutability": "mutable", "name": "_metaDataHash", "nameLocation": "8443:13:44", "nodeType": "VariableDeclaration", "scope": 20592, "src": "8435:21:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20441, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8435:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20446, "mutability": "mutable", "name": "_metadataProofs", "nameLocation": "8481:15:44", "nodeType": "VariableDeclaration", "scope": 20592, "src": "8458:38:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC721Template.metaDataProof[]"}, "typeName": {"baseType": {"id": 20444, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20443, "name": "metaDataProof", "nodeType": "IdentifierPath", "referencedDeclaration": 20390, "src": "8458:13:44"}, "referencedDeclaration": 20390, "src": "8458:13:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_storage_ptr", "typeString": "struct ERC721Template.metaDataProof"}}, "id": 20445, "nodeType": "ArrayTypeName", "src": "8458:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_storage_$dyn_storage_ptr", "typeString": "struct ERC721Template.metaDataProof[]"}}, "visibility": "internal"}], "src": "8270:227:44"}, "returnParameters": {"id": 20448, "nodeType": "ParameterList", "parameters": [], "src": "8507:0:44"}, "scope": 21131, "src": "8249:1813:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"canonicalName": "ERC721Template.metaDataAndTokenURI", "id": 20613, "members": [{"constant": false, "id": 20594, "mutability": "mutable", "name": "metaDataState", "nameLocation": "10111:13:44", "nodeType": "VariableDeclaration", "scope": 20613, "src": "10105:19:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20593, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "10105:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 20596, "mutability": "mutable", "name": "metaDataDecryptorUrl", "nameLocation": "10141:20:44", "nodeType": "VariableDeclaration", "scope": 20613, "src": "10134:27:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 20595, "name": "string", "nodeType": "ElementaryTypeName", "src": "10134:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20598, "mutability": "mutable", "name": "metaDataDecryptorAddress", "nameLocation": "10178:24:44", "nodeType": "VariableDeclaration", "scope": 20613, "src": "10171:31:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 20597, "name": "string", "nodeType": "ElementaryTypeName", "src": "10171:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20600, "mutability": "mutable", "name": "flags", "nameLocation": "10218:5:44", "nodeType": "VariableDeclaration", "scope": 20613, "src": "10212:11:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}, "typeName": {"id": 20599, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "10212:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 20602, "mutability": "mutable", "name": "data", "nameLocation": "10239:4:44", "nodeType": "VariableDeclaration", "scope": 20613, "src": "10233:10:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}, "typeName": {"id": 20601, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "10233:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 20604, "mutability": "mutable", "name": "metaDataHash", "nameLocation": "10261:12:44", "nodeType": "VariableDeclaration", "scope": 20613, "src": "10253:20:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20603, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "10253:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20606, "mutability": "mutable", "name": "tokenId", "nameLocation": "10291:7:44", "nodeType": "VariableDeclaration", "scope": 20613, "src": "10283:15:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20605, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10283:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20608, "mutability": "mutable", "name": "tokenURI", "nameLocation": "10315:8:44", "nodeType": "VariableDeclaration", "scope": 20613, "src": "10308:15:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 20607, "name": "string", "nodeType": "ElementaryTypeName", "src": "10308:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20612, "mutability": "mutable", "name": "metadataProofs", "nameLocation": "10349:14:44", "nodeType": "VariableDeclaration", "scope": 20613, "src": "10333:30:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_storage_$dyn_storage_ptr", "typeString": "struct ERC721Template.metaDataProof[]"}, "typeName": {"baseType": {"id": 20610, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20609, "name": "metaDataProof", "nodeType": "IdentifierPath", "referencedDeclaration": 20390, "src": "10333:13:44"}, "referencedDeclaration": 20390, "src": "10333:13:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataProof_$20390_storage_ptr", "typeString": "struct ERC721Template.metaDataProof"}}, "id": 20611, "nodeType": "ArrayTypeName", "src": "10333:15:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_storage_$dyn_storage_ptr", "typeString": "struct ERC721Template.metaDataProof[]"}}, "visibility": "internal"}], "name": "metaDataAndTokenURI", "nameLocation": "10075:19:44", "nodeType": "StructDefinition", "scope": 21131, "src": "10068:302:44", "visibility": "public"}, {"body": {"id": 20653, "nodeType": "Block", "src": "10671:536:44", "statements": [{"expression": {"arguments": [{"expression": {"baseExpression": {"id": 20621, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24357, "src": "10702:11:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$24369_storage_$", "typeString": "mapping(address => struct ERC721RolesAddress.Roles storage ref)"}}, "id": 20624, "indexExpression": {"expression": {"id": 20622, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "10714:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20623, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "10714:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10702:23:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage", "typeString": "struct ERC721RolesAddress.Roles storage ref"}}, "id": 20625, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "updateMetadata", "nodeType": "MemberAccess", "referencedDeclaration": 24366, "src": "10702:38:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a204e4f54204d455441444154415f524f4c45", "id": 20626, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10754:35:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0c0928ff32ca2af9f832634e669f36c9970593071229e178648730ba105d3ea1", "typeString": "literal_string \"ERC721Template: NOT METADATA_ROLE\""}, "value": "ERC721Template: NOT METADATA_ROLE"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0c0928ff32ca2af9f832634e669f36c9970593071229e178648730ba105d3ea1", "typeString": "literal_string \"ERC721Template: NOT METADATA_ROLE\""}], "id": 20620, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10681:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20627, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10681:118:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20628, "nodeType": "ExpressionStatement", "src": "10681:118:44"}, {"expression": {"arguments": [{"expression": {"id": 20630, "name": "_metaDataAndTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20617, "src": "10822:20:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_calldata_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI calldata"}}, "id": 20631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "metaDataState", "nodeType": "MemberAccess", "referencedDeclaration": 20594, "src": "10822:34:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"expression": {"id": 20632, "name": "_metaDataAndTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20617, "src": "10858:20:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_calldata_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI calldata"}}, "id": 20633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "metaDataDecryptorUrl", "nodeType": "MemberAccess", "referencedDeclaration": 20596, "src": "10858:41:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}, {"expression": {"id": 20634, "name": "_metaDataAndTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20617, "src": "10914:20:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_calldata_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI calldata"}}, "id": 20635, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "metaDataDecryptorAddress", "nodeType": "MemberAccess", "referencedDeclaration": 20598, "src": "10914:45:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}, {"expression": {"id": 20636, "name": "_metaDataAndTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20617, "src": "10961:20:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_calldata_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI calldata"}}, "id": 20637, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "flags", "nodeType": "MemberAccess", "referencedDeclaration": 20600, "src": "10961:26:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"expression": {"id": 20638, "name": "_metaDataAndTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20617, "src": "11002:20:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_calldata_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI calldata"}}, "id": 20639, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "data", "nodeType": "MemberAccess", "referencedDeclaration": 20602, "src": "11002:25:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"expression": {"id": 20640, "name": "_metaDataAndTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20617, "src": "11029:20:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_calldata_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI calldata"}}, "id": 20641, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "metaDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 20604, "src": "11029:33:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 20642, "name": "_metaDataAndTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20617, "src": "11064:20:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_calldata_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI calldata"}}, "id": 20643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "metadataProofs", "nodeType": "MemberAccess", "referencedDeclaration": 20612, "src": "11064:35:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct ERC721Template.metaDataProof calldata[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}, {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_array$_t_struct$_metaDataProof_$20390_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct ERC721Template.metaDataProof calldata[] calldata"}], "id": 20629, "name": "_setMetaData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20592, "src": "10809:12:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes32_$_t_array$_t_struct$_metaDataProof_$20390_memory_ptr_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint8,string calldata,string calldata,bytes calldata,bytes calldata,bytes32,struct ERC721Template.metaDataProof memory[] memory)"}}, "id": 20644, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10809:291:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20645, "nodeType": "ExpressionStatement", "src": "10809:291:44"}, {"expression": {"arguments": [{"expression": {"id": 20647, "name": "_metaDataAndTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20617, "src": "11131:20:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_calldata_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI calldata"}}, "id": 20648, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "tokenId", "nodeType": "MemberAccess", "referencedDeclaration": 20606, "src": "11131:28:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 20649, "name": "_metaDataAndTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20617, "src": "11161:20:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_calldata_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI calldata"}}, "id": 20650, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "tokenURI", "nodeType": "MemberAccess", "referencedDeclaration": 20608, "src": "11161:29:44", "typeDescriptions": {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_string_calldata_ptr", "typeString": "string calldata"}], "id": 20646, "name": "setTokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20351, "src": "11119:11:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$", "typeString": "function (uint256,string memory)"}}, "id": 20651, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11119:72:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20652, "nodeType": "ExpressionStatement", "src": "11119:72:44"}]}, "documentation": {"id": 20614, "nodeType": "StructuredDocumentation", "src": "10376:198:44", "text": " @dev setMetaDataAndTokenURI\n       Helper function to improve UX\nCalls setMetaData & setTokenURI\n @param _metaDataAndTokenURI   metaDataAndTokenURI struct"}, "functionSelector": "19a18a85", "id": 20654, "implemented": true, "kind": "function", "modifiers": [], "name": "setMetaDataAndTokenURI", "nameLocation": "10588:22:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20618, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20617, "mutability": "mutable", "name": "_metaDataAndTokenURI", "nameLocation": "10640:20:44", "nodeType": "VariableDeclaration", "scope": 20654, "src": "10611:49:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_calldata_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI"}, "typeName": {"id": 20616, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20615, "name": "metaDataAndTokenURI", "nodeType": "IdentifierPath", "referencedDeclaration": 20613, "src": "10611:19:44"}, "referencedDeclaration": 20613, "src": "10611:19:44", "typeDescriptions": {"typeIdentifier": "t_struct$_metaDataAndTokenURI_$20613_storage_ptr", "typeString": "struct ERC721Template.metaDataAndTokenURI"}}, "visibility": "internal"}], "src": "10610:51:44"}, "returnParameters": {"id": 20619, "nodeType": "ParameterList", "parameters": [], "src": "10671:0:44"}, "scope": 21131, "src": "10579:628:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20672, "nodeType": "Block", "src": "11422:100:44", "statements": [{"expression": {"components": [{"id": 20666, "name": "metaDataDecryptorUrl", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20026, "src": "11440:20:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, {"id": 20667, "name": "metaDataDecryptorAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20028, "src": "11462:24:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, {"id": 20668, "name": "metaDataState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20030, "src": "11488:13:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"id": 20669, "name": "hasMetaData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20024, "src": "11503:11:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 20670, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "11439:76:44", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_uint8_$_t_bool_$", "typeString": "tuple(string storage ref,string storage ref,uint8,bool)"}}, "functionReturnParameters": 20665, "id": 20671, "nodeType": "Return", "src": "11432:83:44"}]}, "documentation": {"id": 20655, "nodeType": "StructuredDocumentation", "src": "11212:117:44", "text": " @dev getMetaData\n      Returns metaDataState, metaDataDecryptorUrl, metaDataDecryptorAddress"}, "functionSelector": "d2786ba4", "id": 20673, "implemented": true, "kind": "function", "modifiers": [], "name": "getMetaData", "nameLocation": "11343:11:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20656, "nodeType": "ParameterList", "parameters": [], "src": "11354:2:44"}, "returnParameters": {"id": 20665, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20658, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20673, "src": "11380:13:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20657, "name": "string", "nodeType": "ElementaryTypeName", "src": "11380:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20660, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20673, "src": "11395:13:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20659, "name": "string", "nodeType": "ElementaryTypeName", "src": "11395:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 20662, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20673, "src": "11410:5:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 20661, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "11410:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 20664, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20673, "src": "11417:4:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20663, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11417:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "11379:43:44"}, "scope": 21131, "src": "11334:188:44", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 20731, "nodeType": "Block", "src": "12902:420:44", "statements": [{"expression": {"arguments": [{"expression": {"baseExpression": {"id": 20696, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24357, "src": "12933:11:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$24369_storage_$", "typeString": "mapping(address => struct ERC721RolesAddress.Roles storage ref)"}}, "id": 20699, "indexExpression": {"expression": {"id": 20697, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "12945:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20698, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "12945:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12933:23:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage", "typeString": "struct ERC721RolesAddress.Roles storage ref"}}, "id": 20700, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "deployERC20", "nodeType": "MemberAccess", "referencedDeclaration": 24364, "src": "12933:35:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a204e4f542045524332304445504c4f5945525f524f4c45", "id": 20701, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "12982:40:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_542af873b26ac0f41855d00cbcb0c9a91075e7827e28d52b96c8e8434309d446", "typeString": "literal_string \"ERC721Template: NOT ERC20DEPLOYER_ROLE\""}, "value": "ERC721Template: NOT ERC20DEPLOYER_ROLE"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_542af873b26ac0f41855d00cbcb0c9a91075e7827e28d52b96c8e8434309d446", "typeString": "literal_string \"ERC721Template: NOT ERC20DEPLOYER_ROLE\""}], "id": 20695, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12912:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20702, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12912:120:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20703, "nodeType": "ExpressionStatement", "src": "12912:120:44"}, {"assignments": [20705], "declarations": [{"constant": false, "id": 20705, "mutability": "mutable", "name": "token", "nameLocation": "13051:5:44", "nodeType": "VariableDeclaration", "scope": 20731, "src": "13043:13:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20704, "name": "address", "nodeType": "ElementaryTypeName", "src": "13043:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 20716, "initialValue": {"arguments": [{"id": 20710, "name": "_templateIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20676, "src": "13108:14:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 20711, "name": "strings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20679, "src": "13136:7:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr", "typeString": "string calldata[] calldata"}}, {"id": 20712, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20682, "src": "13157:9:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[] calldata"}}, {"id": 20713, "name": "uints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20685, "src": "13180:5:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, {"id": 20714, "name": "bytess", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20688, "src": "13199:6:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr", "typeString": "bytes calldata[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr", "typeString": "string calldata[] calldata"}, {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[] calldata"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}, {"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr", "typeString": "bytes calldata[] calldata"}], "expression": {"arguments": [{"id": 20707, "name": "_tokenFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20032, "src": "13068:13:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20706, "name": "IFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3895, "src": "13059:8:44", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IFactory_$3895_$", "typeString": "type(contract IFactory)"}}, "id": 20708, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13059:23:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFactory_$3895", "typeString": "contract IFactory"}}, "id": 20709, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "createToken", "nodeType": "MemberAccess", "referencedDeclaration": 3757, "src": "13059:35:44", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_address_$", "typeString": "function (uint256,string memory[] memory,address[] memory,uint256[] memory,bytes memory[] memory) external returns (address)"}}, "id": 20715, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13059:156:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "13043:172:44"}, {"expression": {"id": 20721, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 20717, "name": "deployedERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20042, "src": "13226:13:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 20719, "indexExpression": {"id": 20718, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20705, "src": "13240:5:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "13226:20:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20720, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "13249:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "13226:27:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20722, "nodeType": "ExpressionStatement", "src": "13226:27:44"}, {"expression": {"arguments": [{"id": 20726, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20705, "src": "13287:5:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 20723, "name": "deployedERC20List", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20035, "src": "13264:17:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 20725, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "13264:22:44", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$", "typeString": "function (address[] storage pointer,address)"}}, "id": 20727, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13264:29:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20728, "nodeType": "ExpressionStatement", "src": "13264:29:44"}, {"expression": {"id": 20729, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20705, "src": "13310:5:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 20694, "id": 20730, "nodeType": "Return", "src": "13303:12:44"}]}, "documentation": {"id": 20674, "nodeType": "StructuredDocumentation", "src": "11530:1126:44", "text": " @dev createERC20\n        ONLY user with deployERC20 permission (assigned by Manager) can call it\nCreates a new ERC20 datatoken.\nIt also adds initial minting and fee management permissions to custom users.\n @param _templateIndex ERC20Template index \n @param strings refers to an array of strings\n                      [0] = name\n                      [1] = symbol\n @param addresses refers to an array of addresses\n                     [0]  = minter account who can mint datatokens (can have multiple minters)\n                     [1]  = feeManager initial feeManager for this DT\n                     [2]  = publishing Market Address\n                     [3]  = publishing Market Fee Token\n @param uints  refers to an array of uints\n                     [0] = cap_ the total ERC20 cap\n                     [1] = publishing Market Fee Amount\n @param bytess  refers to an array of bytes\n                     Currently not used, usefull for future templates\n@return ERC20 token address"}, "functionSelector": "e38d7cad", "id": 20732, "implemented": true, "kind": "function", "modifiers": [{"id": 20691, "kind": "modifierInvocation", "modifierName": {"id": 20690, "name": "nonReentrant", "nodeType": "IdentifierPath", "referencedDeclaration": 27764, "src": "12870:12:44"}, "nodeType": "ModifierInvocation", "src": "12870:12:44"}], "name": "createERC20", "nameLocation": "12671:11:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20689, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20676, "mutability": "mutable", "name": "_templateIndex", "nameLocation": "12700:14:44", "nodeType": "VariableDeclaration", "scope": 20732, "src": "12692:22:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20675, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12692:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20679, "mutability": "mutable", "name": "strings", "nameLocation": "12742:7:44", "nodeType": "VariableDeclaration", "scope": 20732, "src": "12724:25:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr", "typeString": "string[]"}, "typeName": {"baseType": {"id": 20677, "name": "string", "nodeType": "ElementaryTypeName", "src": "12724:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "id": 20678, "nodeType": "ArrayTypeName", "src": "12724:8:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr", "typeString": "string[]"}}, "visibility": "internal"}, {"constant": false, "id": 20682, "mutability": "mutable", "name": "addresses", "nameLocation": "12778:9:44", "nodeType": "VariableDeclaration", "scope": 20732, "src": "12759:28:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 20680, "name": "address", "nodeType": "ElementaryTypeName", "src": "12759:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 20681, "nodeType": "ArrayTypeName", "src": "12759:9:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 20685, "mutability": "mutable", "name": "uints", "nameLocation": "12816:5:44", "nodeType": "VariableDeclaration", "scope": 20732, "src": "12797:24:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 20683, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12797:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20684, "nodeType": "ArrayTypeName", "src": "12797:9:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 20688, "mutability": "mutable", "name": "bytess", "nameLocation": "12848:6:44", "nodeType": "VariableDeclaration", "scope": 20732, "src": "12831:23:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr", "typeString": "bytes[]"}, "typeName": {"baseType": {"id": 20686, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "12831:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "id": 20687, "nodeType": "ArrayTypeName", "src": "12831:7:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr", "typeString": "bytes[]"}}, "visibility": "internal"}], "src": "12682:178:44"}, "returnParameters": {"id": 20694, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20693, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20732, "src": "12892:7:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20692, "name": "address", "nodeType": "ElementaryTypeName", "src": "12892:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "12891:10:44"}, "scope": 21131, "src": "12662:660:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20745, "nodeType": "Block", "src": "13500:56:44", "statements": [{"expression": {"expression": {"baseExpression": {"id": 20740, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24357, "src": "13517:11:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$24369_storage_$", "typeString": "mapping(address => struct ERC721RolesAddress.Roles storage ref)"}}, "id": 20742, "indexExpression": {"id": 20741, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20735, "src": "13529:7:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13517:20:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage", "typeString": "struct ERC721RolesAddress.Roles storage ref"}}, "id": 20743, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "deployERC20", "nodeType": "MemberAccess", "referencedDeclaration": 24364, "src": "13517:32:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 20739, "id": 20744, "nodeType": "Return", "src": "13510:39:44"}]}, "documentation": {"id": 20733, "nodeType": "StructuredDocumentation", "src": "13328:96:44", "text": " @dev isERC20Deployer\n @return true if the account has ERC20 Deploy role"}, "functionSelector": "96fb3eaf", "id": 20746, "implemented": true, "kind": "function", "modifiers": [], "name": "isERC20Deployer", "nameLocation": "13438:15:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20736, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20735, "mutability": "mutable", "name": "account", "nameLocation": "13462:7:44", "nodeType": "VariableDeclaration", "scope": 20746, "src": "13454:15:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20734, "name": "address", "nodeType": "ElementaryTypeName", "src": "13454:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "13453:17:44"}, "returnParameters": {"id": 20739, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20738, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20746, "src": "13494:4:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20737, "name": "bool", "nodeType": "ElementaryTypeName", "src": "13494:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "13493:6:44"}, "scope": 21131, "src": "13429:127:44", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [22127], "body": {"id": 20755, "nodeType": "Block", "src": "13730:29:44", "statements": [{"expression": {"id": 20753, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20018, "src": "13747:5:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 20752, "id": 20754, "nodeType": "Return", "src": "13740:12:44"}]}, "documentation": {"id": 20747, "nodeType": "StructuredDocumentation", "src": "13566:98:44", "text": " @dev name\n      It returns the token name.\n @return Datatoken name."}, "functionSelector": "06fdde03", "id": 20756, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "13678:4:44", "nodeType": "FunctionDefinition", "overrides": {"id": 20749, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13697:8:44"}, "parameters": {"id": 20748, "nodeType": "ParameterList", "parameters": [], "src": "13682:2:44"}, "returnParameters": {"id": 20752, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20751, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20756, "src": "13715:13:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20750, "name": "string", "nodeType": "ElementaryTypeName", "src": "13715:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "13714:15:44"}, "scope": 21131, "src": "13669:90:44", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [22137], "body": {"id": 20765, "nodeType": "Block", "src": "13937:31:44", "statements": [{"expression": {"id": 20763, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20020, "src": "13954:7:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 20762, "id": 20764, "nodeType": "Return", "src": "13947:14:44"}]}, "documentation": {"id": 20757, "nodeType": "StructuredDocumentation", "src": "13765:104:44", "text": " @dev symbol\n      It returns the token symbol.\n @return Datatoken symbol."}, "functionSelector": "95d89b41", "id": 20766, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "13883:6:44", "nodeType": "FunctionDefinition", "overrides": {"id": 20759, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13904:8:44"}, "parameters": {"id": 20758, "nodeType": "ParameterList", "parameters": [], "src": "13889:2:44"}, "returnParameters": {"id": 20762, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20761, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20766, "src": "13922:13:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 20760, "name": "string", "nodeType": "ElementaryTypeName", "src": "13922:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "13921:15:44"}, "scope": 21131, "src": "13874:94:44", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 20774, "nodeType": "Block", "src": "14184:35:44", "statements": [{"expression": {"id": 20772, "name": "initialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20022, "src": "14201:11:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 20771, "id": 20773, "nodeType": "Return", "src": "14194:18:44"}]}, "documentation": {"id": 20767, "nodeType": "StructuredDocumentation", "src": "13976:148:44", "text": " @dev isInitialized\n      It checks whether the contract is initialized.\n @return true if the contract is initialized."}, "functionSelector": "392e53cd", "id": 20775, "implemented": true, "kind": "function", "modifiers": [], "name": "isInitialized", "nameLocation": "14139:13:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20768, "nodeType": "ParameterList", "parameters": [], "src": "14152:2:44"}, "returnParameters": {"id": 20771, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20770, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 20775, "src": "14178:4:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20769, "name": "bool", "nodeType": "ElementaryTypeName", "src": "14178:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "14177:6:44"}, "scope": 21131, "src": "14130:89:44", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 20787, "nodeType": "Block", "src": "14487:45:44", "statements": [{"expression": {"arguments": [{"id": 20784, "name": "_managerAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20778, "src": "14509:15:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20783, "name": "_addManager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24855, "src": "14497:11:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20785, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14497:28:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20786, "nodeType": "ExpressionStatement", "src": "14497:28:44"}]}, "documentation": {"id": 20776, "nodeType": "StructuredDocumentation", "src": "14225:189:44", "text": " @dev addManager\n      Only NFT Owner can add a new manager (Roles admin)\n      There can be multiple minters\n @param _managerAddress new manager address"}, "functionSelector": "2d06177a", "id": 20788, "implemented": true, "kind": "function", "modifiers": [{"id": 20781, "kind": "modifierInvocation", "modifierName": {"id": 20780, "name": "onlyNFTOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 20142, "src": "14474:12:44"}, "nodeType": "ModifierInvocation", "src": "14474:12:44"}], "name": "addManager", "nameLocation": "14429:10:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20779, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20778, "mutability": "mutable", "name": "_managerAddress", "nameLocation": "14448:15:44", "nodeType": "VariableDeclaration", "scope": 20788, "src": "14440:23:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20777, "name": "address", "nodeType": "ElementaryTypeName", "src": "14440:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "14439:25:44"}, "returnParameters": {"id": 20782, "nodeType": "ParameterList", "parameters": [], "src": "14487:0:44"}, "scope": 21131, "src": "14420:112:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20800, "nodeType": "Block", "src": "14806:48:44", "statements": [{"expression": {"arguments": [{"id": 20797, "name": "_managerAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20791, "src": "14831:15:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20796, "name": "_removeManager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24889, "src": "14816:14:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20798, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14816:31:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20799, "nodeType": "ExpressionStatement", "src": "14816:31:44"}]}, "documentation": {"id": 20789, "nodeType": "StructuredDocumentation", "src": "14538:191:44", "text": " @dev removeManager\n      Only NFT Owner can remove a manager (Roles admin)\n      There can be multiple minters\n @param _managerAddress new manager address"}, "functionSelector": "ac18de43", "id": 20801, "implemented": true, "kind": "function", "modifiers": [{"id": 20794, "kind": "modifierInvocation", "modifierName": {"id": 20793, "name": "onlyNFTOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 20142, "src": "14793:12:44"}, "nodeType": "ModifierInvocation", "src": "14793:12:44"}], "name": "removeManager", "nameLocation": "14745:13:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20792, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20791, "mutability": "mutable", "name": "_managerAddress", "nameLocation": "14767:15:44", "nodeType": "VariableDeclaration", "scope": 20801, "src": "14759:23:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20790, "name": "address", "nodeType": "ElementaryTypeName", "src": "14759:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "14758:25:44"}, "returnParameters": {"id": 20795, "nodeType": "ParameterList", "parameters": [], "src": "14806:0:44"}, "scope": 21131, "src": "14736:118:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20822, "nodeType": "Block", "src": "15520:56:44", "statements": [{"expression": {"arguments": [{"id": 20816, "name": "_operation", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "15538:10:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 20817, "name": "_to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20806, "src": "15550:3:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20818, "name": "_value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20808, "src": "15555:6:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 20819, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20810, "src": "15563:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "id": 20815, "name": "execute", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25404, "src": "15530:7:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$", "typeString": "function (uint256,address,uint256,bytes calldata)"}}, "id": 20820, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15530:39:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20821, "nodeType": "ExpressionStatement", "src": "15530:39:44"}]}, "documentation": {"id": 20802, "nodeType": "StructuredDocumentation", "src": "14861:494:44", "text": " @notice Executes any other smart contract. \nIs only callable by the Manager.\n @param _operation the operation to execute: CALL = 0; DELEGATECALL = 1; CREATE2 = 2; CREATE = 3;\n @param _to the smart contract or address to interact with. \n          `_to` will be unused if a contract is created (operation 2 and 3)\n @param _value the value of ETH to transfer\n @param _data the call data, or the contract data to deploy*"}, "functionSelector": "c55f8126", "id": 20823, "implemented": true, "kind": "function", "modifiers": [{"id": 20813, "kind": "modifierInvocation", "modifierName": {"id": 20812, "name": "onlyManager", "nodeType": "IdentifierPath", "referencedDeclaration": 24403, "src": "15508:11:44"}, "nodeType": "ModifierInvocation", "src": "15508:11:44"}], "name": "executeCall", "nameLocation": "15370:11:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20811, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20804, "mutability": "mutable", "name": "_operation", "nameLocation": "15399:10:44", "nodeType": "VariableDeclaration", "scope": 20823, "src": "15391:18:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20803, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15391:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20806, "mutability": "mutable", "name": "_to", "nameLocation": "15427:3:44", "nodeType": "VariableDeclaration", "scope": 20823, "src": "15419:11:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20805, "name": "address", "nodeType": "ElementaryTypeName", "src": "15419:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20808, "mutability": "mutable", "name": "_value", "nameLocation": "15448:6:44", "nodeType": "VariableDeclaration", "scope": 20823, "src": "15440:14:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20807, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15440:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20810, "mutability": "mutable", "name": "_data", "nameLocation": "15479:5:44", "nodeType": "VariableDeclaration", "scope": 20823, "src": "15464:20:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 20809, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15464:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15381:109:44"}, "returnParameters": {"id": 20814, "nodeType": "ParameterList", "parameters": [], "src": "15520:0:44"}, "scope": 21131, "src": "15361:215:44", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 20845, "nodeType": "Block", "src": "16192:157:44", "statements": [{"expression": {"arguments": [{"expression": {"baseExpression": {"id": 20832, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24357, "src": "16223:11:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$24369_storage_$", "typeString": "mapping(address => struct ERC721RolesAddress.Roles storage ref)"}}, "id": 20835, "indexExpression": {"expression": {"id": 20833, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "16235:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20834, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "16235:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16223:23:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage", "typeString": "struct ERC721RolesAddress.Roles storage ref"}}, "id": 20836, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "store", "nodeType": "MemberAccess", "referencedDeclaration": 24368, "src": "16223:29:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a204e4f542053544f52452055504441544552", "id": 20837, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16266:35:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_030381429338b003a0772d7ee85a785a382a8a05fe17f4af54896c9bc9a02889", "typeString": "literal_string \"ERC721Template: NOT STORE UPDATER\""}, "value": "ERC721Template: NOT STORE UPDATER"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_030381429338b003a0772d7ee85a785a382a8a05fe17f4af54896c9bc9a02889", "typeString": "literal_string \"ERC721Template: NOT STORE UPDATER\""}], "id": 20831, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "16202:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20838, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16202:109:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20839, "nodeType": "ExpressionStatement", "src": "16202:109:44"}, {"expression": {"arguments": [{"id": 20841, "name": "_key", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20826, "src": "16329:4:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 20842, "name": "_value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20828, "src": "16335:6:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "id": 20840, "name": "setData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25491, "src": "16321:7:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$", "typeString": "function (bytes32,bytes calldata)"}}, "id": 20843, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16321:21:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20844, "nodeType": "ExpressionStatement", "src": "16321:21:44"}]}, "documentation": {"id": 20824, "nodeType": "StructuredDocumentation", "src": "15585:534:44", "text": " @dev setNewData\n       ONLY user with store permission (assigned by Manager) can call it\nThis function allows to set any arbitrary key-value into the 725 standard\n      There can be multiple store updaters\n @param _key key (see 725 for standard (keccak256)) \nData keys, should be the keccak256 hash of a type name.\ne.g. keccak256('ERCXXXMyNewKeyType') is 0x6935a24ea384927f250ee0b954ed498cd9203fc5d2bf95c735e52e6ca675e047\n @param _value data to store at that key"}, "functionSelector": "67530a61", "id": 20846, "implemented": true, "kind": "function", "modifiers": [], "name": "setNewData", "nameLocation": "16135:10:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20829, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20826, "mutability": "mutable", "name": "_key", "nameLocation": "16154:4:44", "nodeType": "VariableDeclaration", "scope": 20846, "src": "16146:12:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20825, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "16146:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20828, "mutability": "mutable", "name": "_value", "nameLocation": "16175:6:44", "nodeType": "VariableDeclaration", "scope": 20846, "src": "16160:21:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 20827, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16160:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "16145:37:44"}, "returnParameters": {"id": 20830, "nodeType": "ParameterList", "parameters": [], "src": "16192:0:44"}, "scope": 21131, "src": "16126:223:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20867, "nodeType": "Block", "src": "16792:154:44", "statements": [{"expression": {"arguments": [{"baseExpression": {"id": 20855, "name": "deployedERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20042, "src": "16823:13:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 20858, "indexExpression": {"expression": {"id": 20856, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "16837:3:44", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20857, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "16837:10:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16823:25:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a204e4f5420455243323020436f6e7472616374", "id": 20859, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16862:36:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_60e3bb0cf34f6e368748b87109d19837c191286896a808c39d1261fa03d60077", "typeString": "literal_string \"ERC721Template: NOT ERC20 Contract\""}, "value": "ERC721Template: NOT ERC20 Contract"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_60e3bb0cf34f6e368748b87109d19837c191286896a808c39d1261fa03d60077", "typeString": "literal_string \"ERC721Template: NOT ERC20 Contract\""}], "id": 20854, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "16802:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20860, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16802:106:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20861, "nodeType": "ExpressionStatement", "src": "16802:106:44"}, {"expression": {"arguments": [{"id": 20863, "name": "_key", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20849, "src": "16926:4:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 20864, "name": "_value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20851, "src": "16932:6:44", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "id": 20862, "name": "setData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25491, "src": "16918:7:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$", "typeString": "function (bytes32,bytes calldata)"}}, "id": 20865, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16918:21:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20866, "nodeType": "ExpressionStatement", "src": "16918:21:44"}]}, "documentation": {"id": 20847, "nodeType": "StructuredDocumentation", "src": "16358:359:44", "text": " @dev setDataERC20\n      ONLY callable FROM the ERC20Template and BY the corresponding ERC20Deployer\nThis function allows to store data with a preset key (keccak256(ERC20Address)) into NFT 725 Store\n @param _key keccak256(ERC20Address) see setData into ERC20Template.sol\n @param _value data to store at that key"}, "functionSelector": "0e57c7e8", "id": 20868, "implemented": true, "kind": "function", "modifiers": [], "name": "setDataERC20", "nameLocation": "16733:12:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20852, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20849, "mutability": "mutable", "name": "_key", "nameLocation": "16754:4:44", "nodeType": "VariableDeclaration", "scope": 20868, "src": "16746:12:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20848, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "16746:7:44", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20851, "mutability": "mutable", "name": "_value", "nameLocation": "16775:6:44", "nodeType": "VariableDeclaration", "scope": 20868, "src": "16760:21:44", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 20850, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16760:5:44", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "16745:37:44"}, "returnParameters": {"id": 20853, "nodeType": "ParameterList", "parameters": [], "src": "16792:0:44"}, "scope": 21131, "src": "16724:222:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20883, "nodeType": "Block", "src": "17285:122:44", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 20874, "name": "_cleanPermissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24960, "src": "17295:17:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 20875, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17295:19:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20876, "nodeType": "ExpressionStatement", "src": "17295:19:44"}, {"expression": {"arguments": [{"arguments": [{"hexValue": "31", "id": 20879, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17397:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "id": 20878, "name": "ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22117, "src": "17389:7:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 20880, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17389:10:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20877, "name": "_addManager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24855, "src": "17377:11:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20881, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17377:23:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20882, "nodeType": "ExpressionStatement", "src": "17377:23:44"}]}, "documentation": {"id": 20869, "nodeType": "StructuredDocumentation", "src": "16953:272:44", "text": " @dev cleanPermissions\n      Only NFT Owner  can call it.\n      This function allows to remove all ROLES at erc721 level: \n              Managers, ERC20Deployer, MetadataUpdater, StoreUpdater\n      Permissions at erc20 level stay."}, "functionSelector": "4f189cb2", "id": 20884, "implemented": true, "kind": "function", "modifiers": [{"id": 20872, "kind": "modifierInvocation", "modifierName": {"id": 20871, "name": "onlyNFTOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 20142, "src": "17272:12:44"}, "nodeType": "ModifierInvocation", "src": "17272:12:44"}], "name": "cleanPermissions", "nameLocation": "17244:16:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20870, "nodeType": "ParameterList", "parameters": [], "src": "17260:2:44"}, "returnParameters": {"id": 20873, "nodeType": "ParameterList", "parameters": [], "src": "17285:0:44"}, "scope": 21131, "src": "17235:172:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20950, "nodeType": "Block", "src": "17853:662:44", "statements": [{"expression": {"arguments": [{"id": 20895, "name": "transferable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20044, "src": "17871:12:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a204973206e6f6e207472616e7366657261626c65", "id": 20896, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "17885:37:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1fcbca691777e77746b6a39d9e83f73912f6d47594f5896961f09b264cb3e730", "typeString": "literal_string \"ERC721Template: Is non transferable\""}, "value": "ERC721Template: Is non transferable"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1fcbca691777e77746b6a39d9e83f73912f6d47594f5896961f09b264cb3e730", "typeString": "literal_string \"ERC721Template: Is non transferable\""}], "id": 20894, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "17863:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20897, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17863:60:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20898, "nodeType": "ExpressionStatement", "src": "17863:60:44"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20902, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20900, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20891, "src": "17941:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "31", "id": 20901, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17952:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "17941:12:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a2043616e6e6f74207472616e73666572207468697320746f6b656e4964", "id": 20903, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "17955:46:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a9f964ab97e1f8f008ae65d1d786f20ed4b1eb60cfa8a8f8e26d0e38e57a019e", "typeString": "literal_string \"ERC721Template: Cannot transfer this tokenId\""}, "value": "ERC721Template: Cannot transfer this tokenId"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a9f964ab97e1f8f008ae65d1d786f20ed4b1eb60cfa8a8f8e26d0e38e57a019e", "typeString": "literal_string \"ERC721Template: Cannot transfer this tokenId\""}], "id": 20899, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "17933:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20904, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17933:69:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20905, "nodeType": "ExpressionStatement", "src": "17933:69:44"}, {"expression": {"arguments": [{"arguments": [{"id": 20908, "name": "deployedERC20List", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20035, "src": "18052:17:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}], "id": 20907, "name": "getAddressLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21032, "src": "18035:16:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$", "typeString": "function (address[] memory) pure returns (uint256)"}}, "id": 20909, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18035:35:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20906, "name": "_cleanERC20Permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21059, "src": "18012:22:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 20910, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18012:59:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20911, "nodeType": "ExpressionStatement", "src": "18012:59:44"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 20912, "name": "_cleanPermissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24960, "src": "18081:17:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 20913, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18081:19:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20914, "nodeType": "ExpressionStatement", "src": "18081:19:44"}, {"expression": {"arguments": [{"id": 20916, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "18122:2:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20915, "name": "_addManager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24855, "src": "18110:11:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20917, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18110:15:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20918, "nodeType": "ExpressionStatement", "src": "18110:15:44"}, {"assignments": [20921], "declarations": [{"constant": false, "id": 20921, "mutability": "mutable", "name": "user", "nameLocation": "18255:4:44", "nodeType": "VariableDeclaration", "scope": 20950, "src": "18241:18:44", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles"}, "typeName": {"id": 20920, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20919, "name": "Roles", "nodeType": "IdentifierPath", "referencedDeclaration": 24369, "src": "18241:5:44"}, "referencedDeclaration": 24369, "src": "18241:5:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles"}}, "visibility": "internal"}], "id": 20925, "initialValue": {"baseExpression": {"id": 20922, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24357, "src": "18262:11:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$24369_storage_$", "typeString": "mapping(address => struct ERC721RolesAddress.Roles storage ref)"}}, "id": 20924, "indexExpression": {"id": 20923, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "18274:2:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18262:15:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage", "typeString": "struct ERC721RolesAddress.Roles storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "18241:36:44"}, {"expression": {"id": 20930, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20926, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20921, "src": "18287:4:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles storage pointer"}}, "id": 20928, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "updateMetadata", "nodeType": "MemberAccess", "referencedDeclaration": 24366, "src": "18287:19:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20929, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "18309:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "18287:26:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20931, "nodeType": "ExpressionStatement", "src": "18287:26:44"}, {"expression": {"id": 20936, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20932, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20921, "src": "18323:4:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles storage pointer"}}, "id": 20934, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "deployERC20", "nodeType": "MemberAccess", "referencedDeclaration": 24364, "src": "18323:16:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20935, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "18342:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "18323:23:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20937, "nodeType": "ExpressionStatement", "src": "18323:23:44"}, {"expression": {"id": 20942, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20938, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20921, "src": "18356:4:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles storage pointer"}}, "id": 20940, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "store", "nodeType": "MemberAccess", "referencedDeclaration": 24368, "src": "18356:10:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20941, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "18369:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "18356:17:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20943, "nodeType": "ExpressionStatement", "src": "18356:17:44"}, {"expression": {"arguments": [{"id": 20945, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20887, "src": "18481:4:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20946, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "18487:2:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20947, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20891, "src": "18491:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20944, "name": "_transferFrom", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22421, "src": "18467:13:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 20948, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18467:32:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20949, "nodeType": "ExpressionStatement", "src": "18467:32:44"}]}, "documentation": {"id": 20885, "nodeType": "StructuredDocumentation", "src": "17418:325:44", "text": " @dev transferFrom \n      Used for transferring the NFT, can be used by an approved relayer\nEven if we only have 1 tokenId, we leave it open as arguments for being a standard ERC721\n@param from nft owner\n@param to nft receiver\n@param tokenId tokenId (1)"}, "functionSelector": "23b872dd", "id": 20951, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "17758:12:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20892, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20887, "mutability": "mutable", "name": "from", "nameLocation": "17788:4:44", "nodeType": "VariableDeclaration", "scope": 20951, "src": "17780:12:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20886, "name": "address", "nodeType": "ElementaryTypeName", "src": "17780:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20889, "mutability": "mutable", "name": "to", "nameLocation": "17810:2:44", "nodeType": "VariableDeclaration", "scope": 20951, "src": "17802:10:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20888, "name": "address", "nodeType": "ElementaryTypeName", "src": "17802:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20891, "mutability": "mutable", "name": "tokenId", "nameLocation": "17830:7:44", "nodeType": "VariableDeclaration", "scope": 20951, "src": "17822:15:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20890, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17822:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "17770:73:44"}, "returnParameters": {"id": 20893, "nodeType": "ParameterList", "parameters": [], "src": "17853:0:44"}, "scope": 21131, "src": "17749:766:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 21018, "nodeType": "Block", "src": "18933:668:44", "statements": [{"expression": {"arguments": [{"id": 20962, "name": "transferable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20044, "src": "18951:12:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a204973206e6f6e207472616e7366657261626c65", "id": 20963, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "18965:37:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1fcbca691777e77746b6a39d9e83f73912f6d47594f5896961f09b264cb3e730", "typeString": "literal_string \"ERC721Template: Is non transferable\""}, "value": "ERC721Template: Is non transferable"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1fcbca691777e77746b6a39d9e83f73912f6d47594f5896961f09b264cb3e730", "typeString": "literal_string \"ERC721Template: Is non transferable\""}], "id": 20961, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "18943:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20964, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18943:60:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20965, "nodeType": "ExpressionStatement", "src": "18943:60:44"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20969, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20967, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20958, "src": "19021:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "31", "id": 20968, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19032:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "19021:12:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524337323154656d706c6174653a2043616e6e6f74207472616e73666572207468697320746f6b656e4964", "id": 20970, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "19035:46:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a9f964ab97e1f8f008ae65d1d786f20ed4b1eb60cfa8a8f8e26d0e38e57a019e", "typeString": "literal_string \"ERC721Template: Cannot transfer this tokenId\""}, "value": "ERC721Template: Cannot transfer this tokenId"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a9f964ab97e1f8f008ae65d1d786f20ed4b1eb60cfa8a8f8e26d0e38e57a019e", "typeString": "literal_string \"ERC721Template: Cannot transfer this tokenId\""}], "id": 20966, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "19013:7:44", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20971, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19013:69:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20972, "nodeType": "ExpressionStatement", "src": "19013:69:44"}, {"expression": {"arguments": [{"arguments": [{"id": 20975, "name": "deployedERC20List", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20035, "src": "19132:17:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}], "id": 20974, "name": "getAddressLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21032, "src": "19115:16:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$", "typeString": "function (address[] memory) pure returns (uint256)"}}, "id": 20976, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19115:35:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20973, "name": "_cleanERC20Permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21059, "src": "19092:22:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 20977, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19092:59:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20978, "nodeType": "ExpressionStatement", "src": "19092:59:44"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 20979, "name": "_cleanPermissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24960, "src": "19161:17:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 20980, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19161:19:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20981, "nodeType": "ExpressionStatement", "src": "19161:19:44"}, {"expression": {"arguments": [{"id": 20983, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20956, "src": "19202:2:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 20982, "name": "_addManager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24855, "src": "19190:11:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 20984, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19190:15:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20985, "nodeType": "ExpressionStatement", "src": "19190:15:44"}, {"assignments": [20988], "declarations": [{"constant": false, "id": 20988, "mutability": "mutable", "name": "user", "nameLocation": "19333:4:44", "nodeType": "VariableDeclaration", "scope": 21018, "src": "19319:18:44", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles"}, "typeName": {"id": 20987, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 20986, "name": "Roles", "nodeType": "IdentifierPath", "referencedDeclaration": 24369, "src": "19319:5:44"}, "referencedDeclaration": 24369, "src": "19319:5:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles"}}, "visibility": "internal"}], "id": 20992, "initialValue": {"baseExpression": {"id": 20989, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24357, "src": "19340:11:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$24369_storage_$", "typeString": "mapping(address => struct ERC721RolesAddress.Roles storage ref)"}}, "id": 20991, "indexExpression": {"id": 20990, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20956, "src": "19352:2:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19340:15:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage", "typeString": "struct ERC721RolesAddress.Roles storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "19319:36:44"}, {"expression": {"id": 20997, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20993, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20988, "src": "19365:4:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles storage pointer"}}, "id": 20995, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "updateMetadata", "nodeType": "MemberAccess", "referencedDeclaration": 24366, "src": "19365:19:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 20996, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "19387:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "19365:26:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20998, "nodeType": "ExpressionStatement", "src": "19365:26:44"}, {"expression": {"id": 21003, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20999, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20988, "src": "19401:4:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles storage pointer"}}, "id": 21001, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "deployERC20", "nodeType": "MemberAccess", "referencedDeclaration": 24364, "src": "19401:16:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 21002, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "19420:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "19401:23:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21004, "nodeType": "ExpressionStatement", "src": "19401:23:44"}, {"expression": {"id": 21009, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 21005, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20988, "src": "19434:4:44", "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$24369_storage_ptr", "typeString": "struct ERC721RolesAddress.Roles storage pointer"}}, "id": 21007, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "store", "nodeType": "MemberAccess", "referencedDeclaration": 24368, "src": "19434:10:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 21008, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "19447:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "19434:17:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21010, "nodeType": "ExpressionStatement", "src": "19434:17:44"}, {"expression": {"arguments": [{"id": 21012, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20954, "src": "19563:4:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 21013, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20956, "src": "19569:2:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 21014, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20958, "src": "19573:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "", "id": 21015, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "19582:2:44", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "id": 21011, "name": "_safeTransferFrom", "nodeType": "Identifier", "overloadedDeclarations": [22439, 22468], "referencedDeclaration": 22468, "src": "19545:17:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,address,uint256,bytes memory)"}}, "id": 21016, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19545:40:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21017, "nodeType": "ExpressionStatement", "src": "19545:40:44"}]}, "documentation": {"id": 20952, "nodeType": "StructuredDocumentation", "src": "18521:329:44", "text": " @dev safeTransferFrom \n      Used for transferring the NFT, can be used by an approved relayer\nEven if we only have 1 tokenId, we leave it open as arguments for being a standard ERC721\n@param from nft owner\n@param to nft receiver\n@param tokenId tokenId (1)"}, "functionSelector": "42842e0e", "id": 21019, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "18865:16:44", "nodeType": "FunctionDefinition", "parameters": {"id": 20959, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20954, "mutability": "mutable", "name": "from", "nameLocation": "18890:4:44", "nodeType": "VariableDeclaration", "scope": 21019, "src": "18882:12:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20953, "name": "address", "nodeType": "ElementaryTypeName", "src": "18882:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20956, "mutability": "mutable", "name": "to", "nameLocation": "18904:2:44", "nodeType": "VariableDeclaration", "scope": 21019, "src": "18896:10:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20955, "name": "address", "nodeType": "ElementaryTypeName", "src": "18896:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20958, "mutability": "mutable", "name": "tokenId", "nameLocation": "18915:7:44", "nodeType": "VariableDeclaration", "scope": 21019, "src": "18907:15:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20957, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18907:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "18881:42:44"}, "returnParameters": {"id": 20960, "nodeType": "ParameterList", "parameters": [], "src": "18933:0:44"}, "scope": 21131, "src": "18856:745:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 21031, "nodeType": "Block", "src": "19888:36:44", "statements": [{"expression": {"expression": {"id": 21028, "name": "array", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21023, "src": "19905:5:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 21029, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "19905:12:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 21027, "id": 21030, "nodeType": "Return", "src": "19898:19:44"}]}, "documentation": {"id": 21020, "nodeType": "StructuredDocumentation", "src": "19609:163:44", "text": " @dev getAddressLength\n      It returns the array lentgh\n@param array address array we want to get length\n @return length"}, "id": 21032, "implemented": true, "kind": "function", "modifiers": [], "name": "getAddressLength", "nameLocation": "19788:16:44", "nodeType": "FunctionDefinition", "parameters": {"id": 21024, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21023, "mutability": "mutable", "name": "array", "nameLocation": "19822:5:44", "nodeType": "VariableDeclaration", "scope": 21032, "src": "19805:22:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 21021, "name": "address", "nodeType": "ElementaryTypeName", "src": "19805:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21022, "nodeType": "ArrayTypeName", "src": "19805:9:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "19804:24:44"}, "returnParameters": {"id": 21027, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21026, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21032, "src": "19875:7:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21025, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19875:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "19874:9:44"}, "scope": 21131, "src": "19779:145:44", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 21058, "nodeType": "Block", "src": "20197:129:44", "statements": [{"body": {"id": 21056, "nodeType": "Block", "src": "20244:76:44", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"baseExpression": {"id": 21049, "name": "deployedERC20List", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20035, "src": "20273:17:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 21051, "indexExpression": {"id": 21050, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21039, "src": "20291:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20273:20:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21048, "name": "IERC20Template", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3402, "src": "20258:14:44", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20Template_$3402_$", "typeString": "type(contract IERC20Template)"}}, "id": 21052, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20258:36:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20Template_$3402", "typeString": "contract IERC20Template"}}, "id": 21053, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "cleanFrom721", "nodeType": "MemberAccess", "referencedDeclaration": 3264, "src": "20258:49:44", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$__$returns$__$", "typeString": "function () external"}}, "id": 21054, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20258:51:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21055, "nodeType": "ExpressionStatement", "src": "20258:51:44"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21044, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21042, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21039, "src": "20227:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 21043, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21035, "src": "20231:6:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20227:10:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21057, "initializationExpression": {"assignments": [21039], "declarations": [{"constant": false, "id": 21039, "mutability": "mutable", "name": "i", "nameLocation": "20220:1:44", "nodeType": "VariableDeclaration", "scope": 21057, "src": "20212:9:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21038, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20212:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21041, "initialValue": {"hexValue": "30", "id": 21040, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20224:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "20212:13:44"}, "loopExpression": {"expression": {"id": 21046, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "20239:3:44", "subExpression": {"id": 21045, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21039, "src": "20239:1:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21047, "nodeType": "ExpressionStatement", "src": "20239:3:44"}, "nodeType": "ForStatement", "src": "20207:113:44"}]}, "documentation": {"id": 21033, "nodeType": "StructuredDocumentation", "src": "19932:202:44", "text": " @dev _cleanERC20Permissions\n      Internal function used to clean permissions at ERC20 level when transferring the NFT\n@param length lentgh of the deployedERC20List "}, "id": 21059, "implemented": true, "kind": "function", "modifiers": [], "name": "_cleanERC20Permissions", "nameLocation": "20149:22:44", "nodeType": "FunctionDefinition", "parameters": {"id": 21036, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21035, "mutability": "mutable", "name": "length", "nameLocation": "20180:6:44", "nodeType": "VariableDeclaration", "scope": 21059, "src": "20172:14:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21034, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20172:7:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "20171:16:44"}, "returnParameters": {"id": 21037, "nodeType": "ParameterList", "parameters": [], "src": "20197:0:44"}, "scope": 21131, "src": "20140:186:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 21067, "nodeType": "Block", "src": "20570:25:44", "statements": [{"expression": {"hexValue": "31", "id": 21065, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20587:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "functionReturnParameters": 21064, "id": 21066, "nodeType": "Return", "src": "20580:8:44"}]}, "documentation": {"id": 21060, "nodeType": "StructuredDocumentation", "src": "20332:188:44", "text": " @dev getId\n      Return template id in case we need different ABIs. \n      If you construct your own template, please make sure to change the hardcoded value"}, "functionSelector": "5d1ca631", "id": 21068, "implemented": true, "kind": "function", "modifiers": [], "name": "getId", "nameLocation": "20534:5:44", "nodeType": "FunctionDefinition", "parameters": {"id": 21061, "nodeType": "ParameterList", "parameters": [], "src": "20539:2:44"}, "returnParameters": {"id": 21064, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21063, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21068, "src": "20563:5:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 21062, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "20563:5:44", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "20562:7:44"}, "scope": 21131, "src": "20525:70:44", "stateMutability": "pure", "virtual": false, "visibility": "public"}, {"body": {"id": 21072, "nodeType": "Block", "src": "20774:2:44", "statements": []}, "documentation": {"id": 21069, "nodeType": "StructuredDocumentation", "src": "20601:140:44", "text": " @dev fallback function\n      this is a default fallback function in which receives\n      the collected ether."}, "id": 21073, "implemented": true, "kind": "fallback", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 21070, "nodeType": "ParameterList", "parameters": [], "src": "20754:2:44"}, "returnParameters": {"id": 21071, "nodeType": "ParameterList", "parameters": [], "src": "20774:0:44"}, "scope": 21131, "src": "20746:30:44", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 21077, "nodeType": "Block", "src": "20952:2:44", "statements": []}, "documentation": {"id": 21074, "nodeType": "StructuredDocumentation", "src": "20782:138:44", "text": " @dev receive function\n      this is a default receive function in which receives\n      the collected ether."}, "id": 21078, "implemented": true, "kind": "receive", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 21075, "nodeType": "ParameterList", "parameters": [], "src": "20932:2:44"}, "returnParameters": {"id": 21076, "nodeType": "ParameterList", "parameters": [], "src": "20952:0:44"}, "scope": 21131, "src": "20925:29:44", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 21096, "nodeType": "Block", "src": "21121:68:44", "statements": [{"expression": {"arguments": [{"expression": {"arguments": [{"id": 21091, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "21168:4:44", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC721Template_$21131", "typeString": "contract ERC721Template"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ERC721Template_$21131", "typeString": "contract ERC721Template"}], "id": 21090, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "21160:7:44", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21089, "name": "address", "nodeType": "ElementaryTypeName", "src": "21160:7:44", "typeDescriptions": {}}}, "id": 21092, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21160:13:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21093, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "21160:21:44", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [{"hexValue": "31", "id": 21085, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21147:1:44", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "id": 21084, "name": "ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22117, "src": "21139:7:44", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 21086, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21139:10:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21083, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "21131:8:44", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 21082, "name": "address", "nodeType": "ElementaryTypeName", "src": "21131:8:44", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 21087, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21131:19:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 21088, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "21131:28:44", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 21094, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21131:51:44", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21095, "nodeType": "ExpressionStatement", "src": "21131:51:44"}]}, "documentation": {"id": 21079, "nodeType": "StructuredDocumentation", "src": "20960:94:44", "text": " @dev withdrawETH\n      transfers all the accumlated ether the ownerOf"}, "functionSelector": "e086e5ec", "id": 21097, "implemented": true, "kind": "function", "modifiers": [], "name": "withdrawETH", "nameLocation": "21068:11:44", "nodeType": "FunctionDefinition", "parameters": {"id": 21080, "nodeType": "ParameterList", "parameters": [], "src": "21079:2:44"}, "returnParameters": {"id": 21081, "nodeType": "ParameterList", "parameters": [], "src": "21121:0:44"}, "scope": 21131, "src": "21059:130:44", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 21105, "nodeType": "Block", "src": "21261:41:44", "statements": [{"expression": {"id": 21103, "name": "deployedERC20List", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20035, "src": "21278:17:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "functionReturnParameters": 21102, "id": 21104, "nodeType": "Return", "src": "21271:24:44"}]}, "functionSelector": "466bca02", "id": 21106, "implemented": true, "kind": "function", "modifiers": [], "name": "getTokensList", "nameLocation": "21204:13:44", "nodeType": "FunctionDefinition", "parameters": {"id": 21098, "nodeType": "ParameterList", "parameters": [], "src": "21217:2:44"}, "returnParameters": {"id": 21102, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21101, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21106, "src": "21243:16:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 21099, "name": "address", "nodeType": "ElementaryTypeName", "src": "21243:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21100, "nodeType": "ArrayTypeName", "src": "21243:9:44", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "21242:18:44"}, "scope": 21131, "src": "21195:107:44", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 21117, "nodeType": "Block", "src": "21380:48:44", "statements": [{"expression": {"baseExpression": {"id": 21113, "name": "deployedERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20042, "src": "21397:13:44", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 21115, "indexExpression": {"id": 21114, "name": "datatoken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21108, "src": "21411:9:44", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21397:24:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 21112, "id": 21116, "nodeType": "Return", "src": "21390:31:44"}]}, "functionSelector": "90184b02", "id": 21118, "implemented": true, "kind": "function", "modifiers": [], "name": "isDeployed", "nameLocation": "21321:10:44", "nodeType": "FunctionDefinition", "parameters": {"id": 21109, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21108, "mutability": "mutable", "name": "datatoken", "nameLocation": "21340:9:44", "nodeType": "VariableDeclaration", "scope": 21118, "src": "21332:17:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21107, "name": "address", "nodeType": "ElementaryTypeName", "src": "21332:7:44", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "21331:19:44"}, "returnParameters": {"id": 21112, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21111, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 21118, "src": "21374:4:44", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 21110, "name": "bool", "nodeType": "ElementaryTypeName", "src": "21374:4:44", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "21373:6:44"}, "scope": 21131, "src": "21312:116:44", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 21129, "nodeType": "Block", "src": "21500:46:44", "statements": [{"expression": {"id": 21127, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21125, "name": "defaultBaseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22008, "src": "21514:14:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 21126, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21120, "src": "21531:8:44", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "21514:25:44", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 21128, "nodeType": "ExpressionStatement", "src": "21514:25:44"}]}, "functionSelector": "55f804b3", "id": 21130, "implemented": true, "kind": "function", "modifiers": [{"id": 21123, "kind": "modifierInvocation", "modifierName": {"id": 21122, "name": "onlyNFTOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 20142, "src": "21487:12:44"}, "nodeType": "ModifierInvocation", "src": "21487:12:44"}], "name": "setBaseURI", "nameLocation": "21443:10:44", "nodeType": "FunctionDefinition", "parameters": {"id": 21121, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21120, "mutability": "mutable", "name": "_baseURI", "nameLocation": "21468:8:44", "nodeType": "VariableDeclaration", "scope": 21130, "src": "21454:22:44", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 21119, "name": "string", "nodeType": "ElementaryTypeName", "src": "21454:6:44", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "21453:24:44"}, "returnParameters": {"id": 21124, "nodeType": "ParameterList", "parameters": [], "src": "21500:0:44"}, "scope": 21131, "src": "21434:112:44", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 21132, "src": "652:20896:44", "usedErrors": []}], "src": "0:21548:44"}, "bytecode": "", "bytecodeSha1": "184a8872bfd690af24caf1fdaf31979e2347f386", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.12+commit.f00d7308"}, "contractName": "ERC721Template", "coverageMap": {"branches": {"2": {"ERC721Template.createERC20": {"270": [2259, 2278, true]}}, "23": {}, "25": {}, "26": {}, "27": {}, "44": {"ERC721Template._initialize": {"218": [5079, 5098, true]}, "ERC721Template._setMetaData": {"214": [8677, 8688, false], "215": [9264, 9292, true], "216": [9458, 9507, false], "217": [9781, 9826, true]}, "ERC721Template.createERC20": {"213": [12933, 12968, true]}, "ERC721Template.initialize": {"202": [3579, 3591, true], "203": [3680, 3717, false], "204": [3790, 3829, false]}, "ERC721Template.removeManager": {"212": [2509, 2533, true]}, "ERC721Template.safeTransferFrom": {"208": [18951, 18963, true], "209": [19021, 19033, true]}, "ERC721Template.setDataERC20": {"199": [16823, 16848, true]}, "ERC721Template.setMetaData": {"205": [7999, 8037, true]}, "ERC721Template.setMetaDataAndTokenURI": {"201": [10702, 10740, true]}, "ERC721Template.setMetaDataState": {"210": [6589, 6627, true]}, "ERC721Template.setNewData": {"211": [16223, 16252, true]}, "ERC721Template.setTokenURI": {"200": [6098, 6128, true]}, "ERC721Template.transferFrom": {"206": [17871, 17883, true], "207": [17941, 17953, true]}}, "49": {"ERC165._registerInterface": {"219": [1581, 1606, true]}}, "50": {"ERC721._isApprovedOrOwner": {"231": [11353, 11369, true]}, "ERC721._mint": {"236": [12894, 12910, true], "237": [12965, 12982, true]}, "ERC721._safeMint": {"233": [12377, 12431, true]}, "ERC721._safeTransfer": {"232": [10540, 10588, true]}, "ERC721._safeTransferFrom": {"230": [9369, 9410, true]}, "ERC721._setTokenURI": {"228": [6326, 6342, true]}, "ERC721._transfer": {"234": [14216, 14247, true], "235": [14311, 14327, true]}, "ERC721._transferFrom": {"229": [8812, 8853, true]}, "ERC721.approve": {"221": [7476, 7487, true], "222": [7544, 7565, true], "223": [7569, 7613, true]}, "ERC721.balanceOf": {"224": [4303, 4322, true]}, "ERC721.getApproved": {"220": [7898, 7914, true]}, "ERC721.setApprovalForAll": {"225": [8181, 8205, true]}, "ERC721.tokenURI": {"226": [6617, 6633, true], "227": [6885, 6912, false]}}, "53": {}, "54": {}, "55": {}, "56": {}, "59": {"ERC721RolesAddress._SafeRemoveFromAuth": {"260": [10529, 10555, false], "261": [10571, 10601, false], "262": [10618, 10651, false], "263": [10667, 10691, false], "264": [10793, 10808, false], "265": [10846, 10861, false]}, "ERC721RolesAddress._addManager": {"259": [6915, 6944, false]}, "ERC721RolesAddress._addToMetadataList": {"256": [5250, 5279, false]}, "ERC721RolesAddress._pushToAuth": {"257": [10069, 10084, false], "258": [10114, 10130, false]}, "ERC721RolesAddress.addMultipleUsersToRoles": {"245": [8597, 8629, false], "246": [8633, 8647, false], "247": [8651, 8666, true], "248": [8764, 8790, false], "249": [8876, 8905, false], "250": [9080, 9113, false], "251": [9302, 9338, false], "252": [9527, 9554, false]}, "ERC721RolesAddress.addTo725StoreList": {"238": [1510, 1539, false]}, "ERC721RolesAddress.removeFrom725StoreList": {"239": [2097, 2136, true], "240": [2149, 2178, false], "241": [2182, 2219, false]}, "ERC721RolesAddress.removeFromCreateERC20List": {"253": [3958, 3997, true], "254": [4010, 4039, false], "255": [4043, 4086, false]}, "ERC721RolesAddress.removeFromMetadataList": {"242": [5864, 5903, true], "243": [5916, 5945, false], "244": [5949, 5995, false]}}, "60": {"ERC725Ocean.execute": {"266": [2186, 2214, false], "267": [2720, 2750, false], "268": [2835, 2866, false]}, "ERC725Ocean.performCreate": {"269": [4575, 4600, true]}}, "9": {}}, "statements": {"2": {}, "23": {}, "25": {}, "26": {}, "27": {}, "44": {"ERC721Template._cleanERC20Permissions": {"149": [20258, 20309], "150": [20239, 20242]}, "ERC721Template._initialize": {"130": [5058, 5170], "131": [5189, 5202], "132": [5212, 5229], "133": [5239, 5267], "134": [5277, 5296], "135": [5306, 5324], "136": [5334, 5353], "137": [5363, 5391], "138": [5401, 5420], "139": [5430, 5448], "140": [5612, 5638], "141": [5681, 5698], "142": [5792, 5817], "143": [5836, 5854]}, "ERC721Template._setMetaData": {"114": [8517, 8547], "115": [8557, 8601], "116": [8611, 8663], "117": [8703, 8913], "118": [8927, 8945], "119": [8982, 9190], "120": [9256, 9312], "121": [9773, 9851], "122": [9879, 10045], "123": [9436, 9439]}, "ERC721Template.addManager": {"49": [14497, 14525]}, "ERC721Template.cleanPermissions": {"67": [17295, 17314], "68": [17377, 17400]}, "ERC721Template.createERC20": {"98": [12912, 13032], "99": [13226, 13253], "100": [13264, 13293]}, "ERC721Template.executeCall": {"92": [15530, 15569]}, "ERC721Template.getAddressLength": {"39": [19898, 19917]}, "ERC721Template.getId": {"3": [20580, 20588]}, "ERC721Template.getMetaData": {"96": [11432, 11515]}, "ERC721Template.getTokensList": {"62": [21271, 21295]}, "ERC721Template.initialize": {"27": [3558, 3667], "28": [3731, 3777], "29": [3843, 3888], "30": [4163, 4186], "31": [4233, 4274], "32": [4284, 4325], "33": [4335, 4353]}, "ERC721Template.isDeployed": {"4": [21390, 21421]}, "ERC721Template.isERC20Deployer": {"5": [13510, 13549]}, "ERC721Template.isInitialized": {"2": [14194, 14212]}, "ERC721Template.name": {"7": [13740, 13752]}, "ERC721Template.removeManager": {"80": [14816, 14847]}, "ERC721Template.safeTransferFrom": {"51": [18943, 19003], "52": [19013, 19082], "53": [19092, 19151], "54": [19161, 19180], "55": [19190, 19205], "56": [19365, 19391], "57": [19434, 19451], "58": [19545, 19585]}, "ERC721Template.setBaseURI": {"70": [21514, 21539]}, "ERC721Template.setDataERC20": {"14": [16802, 16908], "15": [16918, 16939]}, "ERC721Template.setMetaData": {"34": [7978, 8096], "35": [8106, 8236]}, "ERC721Template.setMetaDataAndTokenURI": {"21": [10681, 10799], "22": [10809, 11100], "23": [11119, 11191]}, "ERC721Template.setMetaDataState": {"63": [6568, 6686], "64": [6696, 6726], "65": [6736, 6880]}, "ERC721Template.setNewData": {"72": [16202, 16311]}, "ERC721Template.setTokenURI": {"17": [6090, 6161], "18": [6171, 6202], "19": [6212, 6360]}, "ERC721Template.symbol": {"76": [13947, 13961]}, "ERC721Template.transferFrom": {"36": [17863, 17923], "37": [17933, 18002], "38": [18012, 18071], "40": [18081, 18100], "41": [18110, 18125], "42": [18287, 18313], "43": [18356, 18373], "44": [18467, 18499]}, "ERC721Template.withdrawETH": {"97": [21131, 21182]}}, "49": {"ERC165._registerInterface": {"147": [1573, 1639], "148": [1649, 1689]}, "ERC165.supportsInterface": {"0": [1057, 1097]}}, "50": {"ERC721._approve": {"105": [14870, 14899], "106": [14909, 14960]}, "ERC721._baseURI": {"167": [7254, 7275]}, "ERC721._checkOnERC721Received": {"191": [15984, 16044], "192": [15814, 15876], "193": [16316, 16327]}, "ERC721._exists": {"104": [11034, 11071]}, "ERC721._isApprovedOrOwner": {"176": [11345, 11418], "177": [11477, 11580]}, "ERC721._mint": {"194": [12886, 12947], "195": [12957, 13015], "196": [13083, 13113], "197": [13123, 13152], "198": [13163, 13201]}, "ERC721._safeMint": {"175": [11992, 12018], "182": [12341, 12359], "183": [12369, 12486]}, "ERC721._safeTransfer": {"178": [10494, 10522], "179": [10532, 10643]}, "ERC721._safeTransferFrom": {"165": [9361, 9464], "166": [9474, 9512]}, "ERC721._setTokenURI": {"112": [6318, 6393], "113": [6403, 6434]}, "ERC721._transfer": {"184": [14208, 14293], "185": [14303, 14368], "186": [14480, 14509], "187": [14521, 14556], "188": [14566, 14596], "189": [14606, 14635], "190": [14646, 14678]}, "ERC721._transferFrom": {"159": [8804, 8907], "160": [8918, 8958]}, "ERC721.approve": {"10": [7468, 7525], "12": [7536, 7695], "13": [7706, 7727]}, "ERC721.balanceOf": {"74": [4295, 4369], "75": [4379, 4415]}, "ERC721.baseURI": {"73": [6056, 6073]}, "ERC721.getApproved": {"8": [7890, 7963], "9": [7974, 8005]}, "ERC721.isApprovedForAll": {"6": [8548, 8590]}, "ERC721.ownerOf": {"71": [4570, 4647]}, "ERC721.registerAllInterfaces": {"144": [3979, 4019], "145": [4029, 4078], "146": [4088, 4139]}, "ERC721.setApprovalForAll": {"77": [8173, 8235], "78": [8246, 8299], "79": [8309, 8362]}, "ERC721.tokenOfOwnerByIndex": {"50": [5184, 5221]}, "ERC721.tokenURI": {"93": [6609, 6685], "94": [6928, 6976], "95": [7014, 7030]}, "ERC721.totalSupply": {"20": [5476, 5504]}}, "53": {}, "54": {}, "55": {}, "56": {}, "59": {"ERC721RolesAddress._SafeRemoveFromAuth": {"161": [10810, 10815], "162": [10767, 10770], "163": [10880, 10910], "164": [10928, 10938]}, "ERC721RolesAddress._addManager": {"156": [7022, 7041], "157": [7055, 7083], "158": [7097, 7171]}, "ERC721RolesAddress._addToCreateERC20List": {"127": [3457, 3480], "128": [3490, 3518], "129": [3528, 3612]}, "ERC721RolesAddress._addToMetadataList": {"109": [5357, 5383], "110": [5397, 5425], "111": [5439, 5520]}, "ERC721RolesAddress._cleanPermissions": {"151": [8029, 8049], "152": [8142, 8160], "153": [7955, 7958], "154": [8181, 8192], "155": [8202, 8266]}, "ERC721RolesAddress._pushToAuth": {"124": [10086, 10091], "125": [10047, 10050], "126": [10182, 10197]}, "ERC721RolesAddress._removeManager": {"168": [7473, 7493], "169": [7503, 7579]}, "ERC721RolesAddress.addMultipleUsersToRoles": {"81": [8589, 8689], "82": [8929, 8948], "83": [8970, 9041], "84": [9137, 9160], "85": [9182, 9263], "86": [9362, 9388], "87": [9410, 9488], "88": [9578, 9595], "89": [9617, 9695], "90": [9731, 9756], "91": [8743, 8746]}, "ERC721RolesAddress.addTo725StoreList": {"24": [1617, 1634], "25": [1648, 1676], "26": [1690, 1771]}, "ERC721RolesAddress.addToCreateERC20List": {"66": [3202, 3240]}, "ERC721RolesAddress.addToMetadataList": {"16": [5058, 5093]}, "ERC721RolesAddress.getPermissions": {"1": [728, 752]}, "ERC721RolesAddress.removeFrom725StoreList": {"45": [2307, 2325], "46": [2339, 2424], "47": [2438, 2474], "48": [2512, 2592]}, "ERC721RolesAddress.removeFromCreateERC20List": {"101": [4174, 4198], "102": [4212, 4300], "103": [4388, 4465]}, "ERC721RolesAddress.removeFromMetadataList": {"59": [6083, 6110], "60": [6128, 6213], "61": [6301, 6382]}}, "60": {"ERC725Ocean.execute": {"170": [2067, 2112], "171": [2230, 2268], "172": [2766, 2794], "173": [3108, 3145], "174": [3177, 3207]}, "ERC725Ocean.getData": {"69": [5000, 5018]}, "ERC725Ocean.performCreate": {"180": [4567, 4630], "181": [4640, 4673]}, "ERC725Ocean.setData": {"107": [5272, 5292], "108": [5302, 5332]}}, "9": {"Context._msgSender": {"11": [658, 675]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.2.0/Context", "ERC165", "ERC721", "ERC721RolesAddress", "ERC725Ocean", "IERC165", "IERC20Template", "IERC721", "IERC721Enumerable", "IERC721Metadata", "IERC725X", "IERC725Y", "IFactory", "OpenZeppelin/openzeppelin-contracts@4.2.0/ReentrancyGuard"], "deployedBytecode": "", "deployedSourceMap": "652:20896:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;956:148:49;;;;;;;;;;-1:-1:-1;956:148:49;;;;;:::i;:::-;-1:-1:-1;;;;;;1064:33:49;1041:4;1064:33;;;;;;;;;;;;;;956:148;;;;565:14:75;;558:22;540:41;;528:2;513:18;956:148:49;;;;;;;;13669:90:44;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7795:217:50:-;;;;;;;;;;-1:-1:-1;7795:217:50;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:75;;;1674:51;;1662:2;1647:18;7795:217:50;1528:203:75;7339:395:50;;;;;;;;;;-1:-1:-1;7339:395:50;;;;;:::i;:::-;;:::i;981:38:44:-;;;;;;;;;;;;;:::i;16724:222::-;;;;;;;;;;-1:-1:-1;16724:222:44;;;;;:::i;:::-;;:::i;4977:123:59:-;;;;;;;;;;-1:-1:-1;4977:123:59;;;;;:::i;:::-;;:::i;645:114::-;;;;;;;;;;-1:-1:-1;645:114:59;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:17:59;;;;;:11;:17;;;;;;;;;728:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:114;;;;;;;3644:13:75;;3637:21;3630:29;3612:48;;3730:4;3718:17;;;3712:24;3705:32;3698:40;3676:20;;;3669:70;3809:4;3797:17;;;3791:24;3784:32;3777:40;3755:20;;;3748:70;3888:4;3876:17;;;3870:24;3863:32;3856:40;3834:20;;;3827:70;;;;3599:3;3584:19;;3417:486;6011:356:44;;;;;;;;;;-1:-1:-1;6011:356:44;;;;;:::i;:::-;;:::i;5303:208:50:-;;;;;;;;;;;;;:::i;:::-;;;5397:25:75;;;5385:2;5370:18;5303:208:50;5251:177:75;10579:628:44;;;;;;;;;;-1:-1:-1;10579:628:44;;;;;:::i;:::-;;:::i;1426:362:59:-;;;;;;;;;;-1:-1:-1;1426:362:59;;;;;:::i;:::-;;:::i;3237:1123:44:-;;;;;;;;;;-1:-1:-1;3237:1123:44;;;;;:::i;:::-;;:::i;7711:532::-;;;;;;;;;;-1:-1:-1;7711:532:44;;;;;:::i;:::-;;:::i;17749:766::-;;;;;;;;;;-1:-1:-1;17749:766:44;;;;;:::i;:::-;;:::i;2020:590:59:-;;;;;;;;;;-1:-1:-1;2020:590:59;;;;;:::i;:::-;;:::i;14420:112:44:-;;;;;;;;;;-1:-1:-1;14420:112:44;;;;;:::i;:::-;;:::i;5068:160:50:-;;;;;;;;;;-1:-1:-1;5068:160:50;;;;;:::i;:::-;;:::i;14130:89:44:-;;;;;;;;;;-1:-1:-1;14201:11:44;;;;14130:89;;18856:745;;;;;;;;;;-1:-1:-1;18856:745:44;;;;;:::i;:::-;;:::i;5775:624:59:-;;;;;;;;;;-1:-1:-1;5775:624:59;;;;;:::i;:::-;;:::i;21195:107:44:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6503:384::-;;;;;;;;;;-1:-1:-1;6503:384:44;;;;;:::i;:::-;;:::i;3118:129:59:-;;;;;;;;;;-1:-1:-1;3118:129:59;;;;;:::i;:::-;;:::i;17235:172:44:-;;;;;;;;;;;;;:::i;5583:169:50:-;;;;;;;;;;-1:-1:-1;5583:169:50;;;;;:::i;:::-;;:::i;4876:149:60:-;;;;;;;;;;-1:-1:-1;4876:149:60;;;;;:::i;:::-;;:::i;21434:112:44:-;;;;;;;;;;-1:-1:-1;21434:112:44;;;;;:::i;:::-;;:::i;20525:70::-;;;;;;;;;;-1:-1:-1;20587:1:44;20525:70;;;12963:4:75;12951:17;;;12933:36;;12921:2;12906:18;20525:70:44;12791:184:75;4479::50;;;;;;;;;;-1:-1:-1;4479:184:50;;;;;:::i;:::-;;:::i;16126:223:44:-;;;;;;;;;;-1:-1:-1;16126:223:44;;;;;:::i;:::-;;:::i;5983:97:50:-;;;;;;;;;;;;;:::i;4204:218::-;;;;;;;;;;-1:-1:-1;4204:218:50;;;;;:::i;:::-;;:::i;941:34:44:-;;;;;;;;;;;;;:::i;21312:116::-;;;;;;;;;;-1:-1:-1;21312:116:44;;;;;:::i;:::-;-1:-1:-1;;;;;21397:24:44;21374:4;21397:24;;;:13;:24;;;;;;;;;21312:116;1228:24;;;;;;;;;;-1:-1:-1;1228:24:44;;;;;;;;13874:94;;;;;;;;;;;;;:::i;13429:127::-;;;;;;;;;;-1:-1:-1;13429:127:44;;;;;:::i;:::-;-1:-1:-1;;;;;13517:20:44;13494:4;13517:20;;;:11;:20;;;;;:32;;;;;;;13429:127;8079:290:50;;;;;;;;;;-1:-1:-1;8079:290:50;;;;;:::i;:::-;;:::i;14736:118:44:-;;;;;;;;;;-1:-1:-1;14736:118:44;;;;;:::i;:::-;;:::i;273:21:59:-;;;;;;;;;;-1:-1:-1;273:21:59;;;;;:::i;:::-;;:::i;8471:1316::-;;;;;;;;;;-1:-1:-1;8471:1316:59;;;;;:::i;:::-;;:::i;15361:215:44:-;;;;;;:::i;:::-;;:::i;6511:536:50:-;;;;;;;;;;-1:-1:-1;6511:536:50;;;;;:::i;:::-;;:::i;1025:26:44:-;;;;;;;;;;-1:-1:-1;1025:26:44;;;;;;;;11334:188;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;912:23::-;;;;;;;;;;-1:-1:-1;912:23:44;;;;;;;;;;;21059:130;;;:::i;12662:660::-;;;;;;;;;;-1:-1:-1;12662:660:44;;;;;:::i;:::-;;:::i;8435:162:50:-;;;;;;;;;;-1:-1:-1;8435:162:50;;;;;:::i;:::-;-1:-1:-1;;;;;8555:25:50;;;8532:4;8555:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8435:162;3866:616:59;;;;;;;;;;-1:-1:-1;3866:616:59;;;;;:::i;:::-;;:::i;13669:90:44:-;13715:13;13747:5;13740:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13669:90;:::o;7795:217:50:-;7871:7;7898:16;7906:7;7898;:16::i;:::-;7890:73;;;;-1:-1:-1;;;7890:73:50;;19524:2:75;7890:73:50;;;19506:21:75;19563:2;19543:18;;;19536:30;19602:34;19582:18;;;19575:62;-1:-1:-1;;;19653:18:75;;;19646:42;19705:19;;7890:73:50;;;;;;;;;-1:-1:-1;7981:24:50;;;;:15;:24;;;;;;-1:-1:-1;;;;;7981:24:50;;7795:217::o;7339:395::-;7419:13;7435:23;7450:7;7435:14;:23::i;:::-;7419:39;;7482:5;-1:-1:-1;;;;;7476:11:50;:2;-1:-1:-1;;;;;7476:11:50;;;7468:57;;;;-1:-1:-1;;;7468:57:50;;19937:2:75;7468:57:50;;;19919:21:75;19976:2;19956:18;;;19949:30;20015:34;19995:18;;;19988:62;-1:-1:-1;;;20066:18:75;;;20059:31;20107:19;;7468:57:50;19735:397:75;7468:57:50;665:10:9;-1:-1:-1;;;;;7544:21:50;;;;:69;;-1:-1:-1;7569:44:50;7593:5;665:10:9;8435:162:50;:::i;7569:44::-;7536:159;;;;-1:-1:-1;;;7536:159:50;;20339:2:75;7536:159:50;;;20321:21:75;20378:2;20358:18;;;20351:30;20417:34;20397:18;;;20390:62;20488:26;20468:18;;;20461:54;20532:19;;7536:159:50;20137:420:75;7536:159:50;7706:21;7715:2;7719:7;7706:8;:21::i;:::-;7409:325;7339:395;;:::o;981:38:44:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;16724:222::-;16837:10;16823:25;;;;:13;:25;;;;;;;;16802:106;;;;-1:-1:-1;;;16802:106:44;;20764:2:75;16802:106:44;;;20746:21:75;20803:2;20783:18;;;20776:30;20842:34;20822:18;;;20815:62;-1:-1:-1;;;20893:18:75;;;20886:32;20935:19;;16802:106:44;20562:398:75;16802:106:44;16918:21;16926:4;16932:6;;16918:7;:21::i;4977:123:59:-;832:10;820:23;;;;:11;:23;;;;;:31;;;:39;;:31;:39;799:117;;;;-1:-1:-1;;;799:117:59;;;;;;;:::i;:::-;5058:35:::1;5077:15;5058:18;:35::i;:::-;4977:123:::0;:::o;6011:356:44:-;6112:16;6120:7;6112;:16::i;:::-;-1:-1:-1;;;;;6098:30:44;:10;-1:-1:-1;;;;;6098:30:44;;6090:71;;;;-1:-1:-1;;;6090:71:44;;;;;;;:::i;:::-;6171:31;6184:7;6193:8;6171:12;:31::i;:::-;6232:10;-1:-1:-1;;;;;6217:143:44;;6244:8;6254:7;6318:15;6347:12;6217:143;;;;;;;;;:::i;:::-;;;;;;;;6011:356;;:::o;5303:208:50:-;5364:7;5483:21;:12;:19;:21::i;:::-;5476:28;;5303:208;:::o;10579:628:44:-;10714:10;10702:23;;;;:11;:23;;;;;:38;;;;;;10681:118;;;;-1:-1:-1;;;10681:118:44;;;;;;;:::i;:::-;10809:291;10822:34;;;;:20;:34;:::i;:::-;10858:41;;;;:20;:41;:::i;:::-;10914:45;;;;:20;:45;:::i;:::-;10961:26;;;;:20;:26;:::i;:::-;11002:25;;;;:20;:25;:::i;:::-;11029:33;;;;11064:35;;;;11029:20;11064:35;:::i;:::-;10809:291;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:12;:291::i;:::-;11119:72;11131:28;;;;11161:29;;;;11131:20;11161:29;:::i;:::-;11119:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11119:11:44;;-1:-1:-1;;;11119:72:44:i;1426:362:59:-;832:10;820:23;;;;:11;:23;;;;;:31;;;:39;;:31;:39;799:117;;;;-1:-1:-1;;;799:117:59;;;;;;;:::i;:::-;-1:-1:-1;;;;;1510:29:59;::::1;::::0;1507:275:::1;;-1:-1:-1::0;;;;;1575:28:59;::::1;1554:18;1575:28:::0;;;:11:::1;:28;::::0;;;;1617:17;;-1:-1:-1;;1617:17:59::1;::::0;::::1;::::0;;1648:28:::1;1587:15:::0;1648:11:::1;:28::i;:::-;1695:76;::::0;;1742:15:::1;24581:25:75::0;;1758:12:59::1;24637:2:75::0;24622:18;;24615:34;1731:10:59::1;::::0;-1:-1:-1;;;;;1695:76:59;::::1;::::0;::::1;::::0;24554:18:75;1695:76:59::1;;;;;;;;1540:242;1426:362:::0;:::o;3237:1123:44:-;3580:11;;3542:4;;3580:11;;3579:12;3558:109;;;;-1:-1:-1;;;3558:109:44;;24862:2:75;3558:109:44;;;24844:21:75;24901:2;24881:18;;;24874:30;24940:34;24920:18;;;24913:62;-1:-1:-1;;;24991:18:75;;;24984:48;25049:19;;3558:109:44;24660:414:75;3558:109:44;-1:-1:-1;;;;;3680:37:44;;;3677:100;;3731:46;3753:23;3731:21;:46::i;:::-;-1:-1:-1;;;;;3790:39:44;;;3787:101;;3843:45;3862:25;3843:18;:45::i;:::-;3898:15;3929:183;3958:5;3981;;3929:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4004:7;;3929:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4029:12:44;;-1:-1:-1;4059:8:44;;-1:-1:-1;4085:13:44;;-1:-1:-1;3929:11:44;:183::i;:::-;3898:214;;4163:23;:21;:23::i;:::-;4233:41;-1:-1:-1;;;4233:18:44;:41::i;:::-;4284;-1:-1:-1;;;4284:18:44;:41::i;:::-;4342:10;3237:1123;-1:-1:-1;;;;;;;;;;;3237:1123:44:o;7711:532::-;8011:10;7999:23;;;;:11;:23;;;;;:38;;;;;;7978:118;;;;-1:-1:-1;;;7978:118:44;;;;;;;:::i;:::-;8106:130;8119:14;8135:21;;8158:25;;8184:5;;8200:4;;8205:13;8220:15;8106:12;:130::i;:::-;7711:532;;;;;;;;;;;:::o;17749:766::-;17871:12;;;;17863:60;;;;-1:-1:-1;;;17863:60:44;;;;;;;:::i;:::-;17941:7;17952:1;17941:12;17933:69;;;;-1:-1:-1;;;17933:69:44;;;;;;;:::i;:::-;18012:59;18035:35;18052:17;18035:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18035:35:44;;;;;;;;;;;;;;;;;;;;;19905:12;;19779:145;18035:35;18012:22;:59::i;:::-;18081:19;:17;:19::i;:::-;18110:15;18122:2;18110:11;:15::i;:::-;-1:-1:-1;;;;;18262:15:44;;18241:18;18262:15;;;:11;:15;;;;;18287:26;;-1:-1:-1;;18356:17:44;;;;;18467:32;18481:4;18262:15;18491:7;18467:13;:32::i;:::-;17853:662;17749:766;;;:::o;2020:590:59:-;2109:10;2097:23;;;;:11;:23;;;;;:31;;;:39;;:31;:39;;:123;;-1:-1:-1;2149:10:59;-1:-1:-1;;;;;2149:29:59;;;:70;;;;-1:-1:-1;2194:10:59;2182:23;;;;:11;:23;;;;;:29;;;;;;:37;;2215:4;2182:37;2149:70;2094:509;;;-1:-1:-1;;;;;2265:28:59;;2244:18;2265:28;;;:11;:28;;;;;;;2307:18;;-1:-1:-1;;2307:18:59;;;2344:80;;2265:28;;2384:10;;2344:80;;;;2395:15;;2411:12;;24581:25:75;;;24637:2;24622:18;;24615:34;24569:2;24554:18;;24407:248;2344:80:59;;;;;;;;2438:36;2458:15;2438:19;:36::i;:::-;2230:255;4977:123;:::o;2094:509::-;2512:80;;-1:-1:-1;;;2512:80:59;;26098:2:75;2512:80:59;;;26080:21:75;26137:2;26117:18;;;26110:30;26176:34;26156:18;;;26149:62;26247:34;26227:18;;;26220:62;-1:-1:-1;;;26298:19:75;;;26291:37;26345:19;;2512:80:59;25896:474:75;14420:112:44;2523:10;2531:1;2523:7;:10::i;:::-;-1:-1:-1;;;;;2509:24:44;:10;-1:-1:-1;;;;;2509:24:44;;2501:65;;;;-1:-1:-1;;;2501:65:44;;;;;;;:::i;:::-;14497:28:::1;14509:15;14497:11;:28::i;5068:160:50:-:0;-1:-1:-1;;;;;5191:20:50;;5165:7;5191:20;;;:13;:20;;;;;:30;;5215:5;5191:23;:30::i;:::-;5184:37;;5068:160;;;;;:::o;18856:745:44:-;18951:12;;;;18943:60;;;;-1:-1:-1;;;18943:60:44;;;;;;;:::i;:::-;19021:7;19032:1;19021:12;19013:69;;;;-1:-1:-1;;;19013:69:44;;;;;;;:::i;:::-;19092:59;19115:35;19132:17;19115:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19115:35:44;;;;;;;;;;;;;;;;;;;;19905:12;;19779:145;19092:59;19161:19;:17;:19::i;:::-;19190:15;19202:2;19190:11;:15::i;:::-;-1:-1:-1;;;;;19340:15:44;;19319:18;19340:15;;;:11;:15;;;;;;;;19365:26;;-1:-1:-1;;19434:17:44;;;;;19545:40;;;;;;;;;;;;;19563:4;;19340:15;;19573:7;;19545:17;:40::i;5775:624:59:-;5876:10;5864:23;;;;:11;:23;;;;;:31;;;:39;;:31;:39;;:132;;-1:-1:-1;5916:10:59;-1:-1:-1;;;;;5916:29:59;;;:79;;;;-1:-1:-1;5961:10:59;5949:23;;;;:11;:23;;;;;:38;;;;;;:46;;5991:4;5949:46;5916:79;5861:532;;;-1:-1:-1;;;;;6041:28:59;;6020:18;6041:28;;;:11;:28;;;;;;;6083:27;;-1:-1:-1;;6083:27:59;;;6133:80;;6041:28;;6173:10;;6133:80;;;;6184:15;;6200:12;;24581:25:75;;;24637:2;24622:18;;24615:34;24569:2;24554:18;;24407:248;5861:532:59;6301:81;;-1:-1:-1;;;6301:81:59;;26577:2:75;6301:81:59;;;26559:21:75;26616:2;26596:18;;;26589:30;26655:34;26635:18;;;26628:62;26726:34;26706:18;;;26699:62;-1:-1:-1;;;26777:19:75;;;26770:38;26825:19;;6301:81:59;26375:475:75;21195:107:44;21243:16;21278:17;21271:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21271:24:44;;;;;;;;;;;;;;;;;;;;;;21195:107;:::o;6503:384::-;6601:10;6589:23;;;;:11;:23;;;;;:38;;;;;;6568:118;;;;-1:-1:-1;;;6568:118:44;;;;;;;:::i;:::-;6696:13;:30;;-1:-1:-1;;6696:30:44;;;;;;;;;;6741:139;;;27053:36:75;;;6838:15:44;27120:2:75;27105:18;;27098:34;6867:12:44;27148:18:75;;;27141:34;6755:10:44;;6741:139;;27041:2:75;27026:18;6741:139:44;;;;;;;6503:384;:::o;3118:129:59:-;832:10;820:23;;;;:11;:23;;;;;:31;;;:39;;:31;:39;799:117;;;;-1:-1:-1;;;799:117:59;;;;;;;:::i;:::-;3202:38:::1;3224:15;3202:21;:38::i;17235:172:44:-:0;2523:10;2531:1;2523:7;:10::i;:::-;-1:-1:-1;;;;;2509:24:44;:10;-1:-1:-1;;;;;2509:24:44;;2501:65;;;;-1:-1:-1;;;2501:65:44;;;;;;;:::i;:::-;17295:19:::1;:17;:19::i;:::-;17377:23;17389:10;17397:1;17389:7;:10::i;:::-;17377:11;:23::i;:::-;17235:172::o:0;5583:169:50:-;5658:7;;5699:22;:12;5715:5;5699:15;:22::i;:::-;-1:-1:-1;5677:44:50;5583:169;-1:-1:-1;;;5583:169:50:o;4876:149:60:-;5007:11;;;;:5;:11;;;;;5000:18;;4965:19;;5007:11;5000:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:149;;;:::o;21434:112:44:-;2523:10;2531:1;2523:7;:10::i;:::-;-1:-1:-1;;;;;2509:24:44;:10;-1:-1:-1;;;;;2509:24:44;;2501:65;;;;-1:-1:-1;;;2501:65:44;;;;;;;:::i;:::-;21514:25;;::::1;::::0;:14:::1;::::0;:25:::1;::::0;::::1;::::0;::::1;:::i;4479:184:50:-:0;4551:7;4577:70;4594:7;4577:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;16126:223:44:-;16235:10;16223:23;;;;:11;:23;;;;;:29;;;;;;16202:109;;;;-1:-1:-1;;;16202:109:44;;27388:2:75;16202:109:44;;;27370:21:75;27427:2;27407:18;;;27400:30;27466:34;27446:18;;;27439:62;-1:-1:-1;;;27517:18:75;;;27510:31;27558:19;;16202:109:44;27186:397:75;5983:97:50;6031:13;6063:10;:8;:10::i;4204:218::-;4276:7;-1:-1:-1;;;;;4303:19:50;;4295:74;;;;-1:-1:-1;;;4295:74:50;;27790:2:75;4295:74:50;;;27772:21:75;27829:2;27809:18;;;27802:30;27868:34;27848:18;;;27841:62;-1:-1:-1;;;27919:18:75;;;27912:40;27969:19;;4295:74:50;27588:406:75;4295:74:50;-1:-1:-1;;;;;4386:20:50;;;;;;:13;:20;;;;;:29;;:27;:29::i;941:34:44:-;;;;;;;:::i;13874:94::-;13922:13;13954:7;13947:14;;;;;:::i;8079:290:50:-;-1:-1:-1;;;;;8181:24:50;;665:10:9;8181:24:50;;8173:62;;;;-1:-1:-1;;;8173:62:50;;28201:2:75;8173:62:50;;;28183:21:75;28240:2;28220:18;;;28213:30;28279:27;28259:18;;;28252:55;28324:18;;8173:62:50;27999:349:75;8173:62:50;665:10:9;8246:32:50;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;8246:42:50;;;;;;;;;;;;:53;;-1:-1:-1;;8246:53:50;;;;;;;;;;8314:48;;540:41:75;;;8246:42:50;;665:10:9;8314:48:50;;513:18:75;8314:48:50;400:187:75;14736:118:44;2523:10;2531:1;2523:7;:10::i;:::-;-1:-1:-1;;;;;2509:24:44;:10;-1:-1:-1;;;;;2509:24:44;;2501:65;;;;-1:-1:-1;;;2501:65:44;;;;;;;:::i;:::-;14816:31:::1;14831:15;14816:14;:31::i;273:21:59:-:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;273:21:59;;-1:-1:-1;273:21:59;:::o;8471:1316::-;832:10;820:23;;;;:11;:23;;;;;:31;;;:39;;:31;:39;799:117;;;;-1:-1:-1;;;799:117:59;;;;;;;:::i;:::-;8617:5:::1;:12;8597:9;:16;:32;:50;;;;;8646:1;8633:5;:12;:14;8597:50;:69;;;;;8664:2;8651:5;:12;:15;8597:69;8589:100;;;::::0;-1:-1:-1;;;8589:100:59;;28555:2:75;8589:100:59::1;::::0;::::1;28537:21:75::0;28594:2;28574:18;;;28567:30;-1:-1:-1;;;28613:18:75;;;28606:48;28671:18;;8589:100:59::1;28353:342:75::0;8589:100:59::1;8699:9;8718:1063;8729:5;:12;8727:1;:14;8718:1063;;;8788:1;-1:-1:-1::0;;;;;8764:26:59::1;:9;8774:1;8764:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;8764:26:59::1;;8761:1010;;8809:18;8830:11;:25;8842:9;8852:1;8842:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;8830:25:59::1;-1:-1:-1::0;;;;;8830:25:59::1;;;;;;;;;;;;8809:46;;8888:17;8876:29;;;;;;;;:::i;:::-;:5;8882:1;8876:8;;;;;;;;:::i;:::-;;;;;;;:29;;;;;;;;:::i;:::-;;8873:187;;;8929:19:::0;;-1:-1:-1;;8929:19:59::1;8944:4;8929:19;::::0;;8988:12;;9001:10:::1;::::0;8988:9;;8998:1;;8988:12;::::1;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;8975:66:59::1;;9012:15;9028:12;8975:66;;;;;;24581:25:75::0;;;24637:2;24622:18;;24615:34;24569:2;24554:18;;24407:248;8975:66:59::1;;;;;;;;8873:187;9092:21;9080:5;9086:1;9080:8;;;;;;;;:::i;:::-;;;;;;;:33;;;;;;;;:::i;:::-;;9077:205;;;9137:23:::0;;-1:-1:-1;;9137:23:59::1;;;::::0;;9210:12;;9223:10:::1;::::0;9210:9;;9220:1;;9210:12;::::1;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;9187:76:59::1;;9234:15;9250:12;9187:76;;;;;;24581:25:75::0;;;24637:2;24622:18;;24615:34;24569:2;24554:18;;24407:248;9187:76:59::1;;;;;;;;9077:205;9314:24;9302:5;9308:1;9302:8;;;;;;;;:::i;:::-;;;;;;;:36;;;;;;;;:::i;:::-;;9299:208;;;9362:26:::0;;-1:-1:-1;;9362:26:59::1;::::0;::::1;::::0;;9435:12;;9448:10:::1;::::0;9435:9;;9445:1;;9435:12;::::1;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;9415:73:59::1;;9459:15;9475:12;9415:73;;;;;;24581:25:75::0;;;24637:2;24622:18;;24615:34;24569:2;24554:18;;24407:248;9415:73:59::1;;;;;;;;9299:208;9539:15;9527:5;9533:1;9527:8;;;;;;;;:::i;:::-;;;;;;;:27;;;;;;;;:::i;:::-;;9524:190;;;9578:17:::0;;-1:-1:-1;;9578:17:59::1;::::0;::::1;::::0;;9642:12;;9655:10:::1;::::0;9642:9;;9652:1;;9642:12;::::1;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;9622:73:59::1;;9666:15;9682:12;9622:73;;;;;;24581:25:75::0;;;24637:2;24622:18;;24615:34;24569:2;24554:18;;24407:248;9622:73:59::1;;;;;;;;9524:190;9731:25;9743:9;9753:1;9743:12;;;;;;;;:::i;:::-;;;;;;;9731:11;:25::i;:::-;8791:980;8761:1010;8743:3:::0;::::1;::::0;::::1;:::i;:::-;;;;8718:1063;;15361:215:44::0;832:10:59;820:23;;;;:11;:23;;;;;:31;;;:39;;:31;:39;799:117;;;;-1:-1:-1;;;799:117:59;;;;;;;:::i;:::-;15530:39:44::1;15538:10;15550:3;15555:6;15563:5;;15530:7;:39::i;:::-;15361:215:::0;;;;;:::o;6511:536:50:-;6584:13;6617:16;6625:7;6617;:16::i;:::-;6609:76;;;;-1:-1:-1;;;6609:76:50;;29438:2:75;6609:76:50;;;29420:21:75;29477:2;29457:18;;;29450:30;29516:34;29496:18;;;29489:62;-1:-1:-1;;;29567:18:75;;;29560:45;29622:19;;6609:76:50;29236:411:75;6609:76:50;6695:23;6721:19;;;:10;:19;;;;;6695:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6750:18;6771:10;:8;:10::i;:::-;6885:23;;6750:31;;-1:-1:-1;6885:27:50;6881:160;;6959:4;6965:9;6942:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6928:48;;;;6511:536;;;:::o;6881:160::-;-1:-1:-1;7021:9:50;6511:536;-1:-1:-1;;6511:536:50:o;11334:188:44:-;11380:13;11395;11410:5;11417:4;11440:20;11462:24;11488:13;;;;;;;;;;;11503:11;;;;;;;;;;;11432:83;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11334:188;;;;:::o;21059:130::-;21139:10;21147:1;21139:7;:10::i;:::-;-1:-1:-1;;;;;21131:28:44;:51;21160:21;21131:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12662:660;12892:7;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;30329:2:75;2251:63:2;;;30311:21:75;30368:2;30348:18;;;30341:30;30407:33;30387:18;;;30380:61;30458:18;;2251:63:2;30127:355:75;2251:63:2;1680:1;2389:7;:18;12945:10:44::1;12933:23;::::0;;;:11:::1;:23;::::0;;;;:35;::::1;::::0;::::1;;;12912:120;;;::::0;-1:-1:-1;;;12912:120:44;;30689:2:75;12912:120:44::1;::::0;::::1;30671:21:75::0;30728:2;30708:18;;;30701:30;30767:34;30747:18;;;30740:62;-1:-1:-1;;;30818:18:75;;;30811:36;30864:19;;12912:120:44::1;30487:402:75::0;12912:120:44::1;13068:13;::::0;13059:156:::1;::::0;-1:-1:-1;;;13059:156:44;;13043:13:::1;::::0;13068::::1;::::0;::::1;-1:-1:-1::0;;;;;13068:13:44::1;::::0;13059:35:::1;::::0;:156:::1;::::0;13108:14;;13136:7;;;;13157:9;;;;13180:5;;;;13199:6;;;;13059:156:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13226:20:44;::::1;;::::0;;;:13:::1;:20;::::0;;;;:27;;-1:-1:-1;;13226:27:44::1;13249:4;13226:27:::0;;::::1;::::0;;;13264:17:::1;:29:::0;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;13264:29:44::1;::::0;;::::1;::::0;;13043:172;-1:-1:-1;;1637:1:2;2562:7;:22;12662:660:44;;-1:-1:-1;;;;;;;;;12662:660:44:o;3866:616:59:-;3970:10;3958:23;;;;:11;:23;;;;;:31;;;:39;;:31;:39;;:129;;-1:-1:-1;4010:10:59;-1:-1:-1;;;;;4010:29:59;;;:76;;;;-1:-1:-1;4055:10:59;4043:23;;;;:11;:23;;;;;:35;;;;;;;:43;;:35;:43;4010:76;3955:521;;;-1:-1:-1;;;;;4132:28:59;;4111:18;4132:28;;;:11;:28;;;;;;;4174:24;;-1:-1:-1;;4174:24:59;;;4217:83;;4132:28;;4260:10;;4217:83;;;;4271:15;;4287:12;;24581:25:75;;;24637:2;24622:18;;24615:34;24569:2;24554:18;;24407:248;3955:521:59;4388:77;;-1:-1:-1;;;4388:77:59;;35382:2:75;4388:77:59;;;35364:21:75;35421:2;35401:18;;;35394:30;35460:34;35440:18;;;35433:62;35531:34;35511:18;;;35504:62;-1:-1:-1;;;35582:19:75;;;35575:34;35626:19;;4388:77:59;35180:471:75;10953:125:50;11018:4;11041:30;:12;11063:7;11041:21;:30::i;14796:171::-;14870:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;14870:29:50;-1:-1:-1;;;;;14870:29:50;;;;;;;;:24;;14923:23;14870:24;14923:14;:23::i;:::-;-1:-1:-1;;;;;14914:46:50;;;;;;;;;;;14796:171;;:::o;5179:160:60:-;5272:11;;;;:5;:11;;;;;:20;;5286:6;;5272:20;:::i;:::-;;5319:4;5307:25;5325:6;;5307:25;;;;;;;:::i;:::-;;;;;;;;5179:160;;;:::o;5175:362:59:-;-1:-1:-1;;;;;5250:29:59;;;5247:284;;-1:-1:-1;;;;;5315:28:59;;5294:18;5315:28;;;:11;:28;;;;;5357:26;;-1:-1:-1;;5357:26:59;;;;;5397:28;5327:15;5397:11;:28::i;:::-;5444:76;;;5491:15;24581:25:75;;5507:12:59;24637:2:75;24622:18;;24615:34;5480:10:59;;-1:-1:-1;;;;;5444:76:59;;;;;24554:18:75;5444:76:59;24407:248:75;6227:214:50;6326:16;6334:7;6326;:16::i;:::-;6318:75;;;;-1:-1:-1;;;6318:75:50;;36108:2:75;6318:75:50;;;36090:21:75;36147:2;36127:18;;;36120:30;36186:34;36166:18;;;36159:62;-1:-1:-1;;;36237:18:75;;;36230:44;36291:19;;6318:75:50;35906:410:75;6318:75:50;6403:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;7812:121:51:-;7881:7;7907:19;7915:3;4565:19;;4483:108;8249:1813:44;8517:13;:30;;-1:-1:-1;;8517:30:44;;;;;;;8557:44;:20;8580:21;;8557:44;:::i;:::-;-1:-1:-1;8611:52:44;:24;8638:25;;8611:52;:::i;:::-;-1:-1:-1;8677:11:44;;;;;;;8673:517;;8724:10;-1:-1:-1;;;;;8708:205:44;;8736:14;8752:21;;8787:5;;8794:4;;8800:13;8871:15;8900:12;8708:205;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;8927:11;:18;;-1:-1:-1;;8927:18:44;;;;;8673:517;;;9015:13;;8987:203;;9003:10;;8987:203;;;;9015:13;;;9030:21;;;;9065:5;;;;9072:4;;;;9078:13;;9148:15;;9177:12;;8987:203;:::i;:::-;;;;;;;;8673:517;9290:2;9264:15;:22;:28;;9256:56;;;;-1:-1:-1;;;9256:56:44;;37447:2:75;9256:56:44;;;37429:21:75;37486:2;37466:18;;;37459:30;-1:-1:-1;;;37505:18:75;;;37498:45;37560:18;;9256:56:44;37245:339:75;9256:56:44;9322;;;;;;;;;;;;;;;;;:19;9388:668;9412:15;:22;9408:1;:26;9388:668;;;9505:1;-1:-1:-1;;;;;9458:49:44;:15;9474:1;9458:18;;;;;;;;:::i;:::-;;;;;;;:35;;;-1:-1:-1;;;;;9458:49:44;;9455:411;;9530:20;9580:6;9588:13;9563:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9553:50;;;;;;9530:73;;9625:14;9642:109;9652:12;9686:15;9702:1;9686:18;;;;;;;;:::i;:::-;;;;;;;:20;;;9708:15;9724:1;9708:18;;;;;;;;:::i;:::-;;;;;;;:20;;;9730:15;9746:1;9730:18;;;;;;;;:::i;:::-;;;;;;;:20;;;9642:109;;;;;;;;;;;;;;;;;38191:25:75;;;38264:4;38252:17;;;;38247:2;38232:18;;38225:45;38301:2;38286:18;;38279:34;38344:2;38329:18;;38322:34;38178:3;38163:19;;37964:398;9642:109:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9625:126;;9791:15;9807:1;9791:18;;;;;;;;:::i;:::-;;;;;;;:35;;;-1:-1:-1;;;;;9781:45:44;:6;-1:-1:-1;;;;;9781:45:44;;9773:78;;;;-1:-1:-1;;;9773:78:44;;38569:2:75;9773:78:44;;;38551:21:75;38608:2;38588:18;;;38581:30;-1:-1:-1;;;38627:18:75;;;38620:50;38687:18;;9773:78:44;38367:344:75;9773:78:44;9508:358;;9455:411;9902:15;9918:1;9902:18;;;;;;;;:::i;:::-;;;;;;;:35;;;-1:-1:-1;;;;;9884:161:44;;9952:13;9980:15;9996:1;9980:18;;;;;;;;:::i;:::-;;;;;;;:20;;;10002:15;10018:1;10002:18;;;;;;;;:::i;:::-;;;;;;;:20;;;10024:15;10040:1;10024:18;;;;;;;;:::i;:::-;;;;;;;:20;;;9884:161;;;;;;;;38191:25:75;;;38264:4;38252:17;;;;38247:2;38232:18;;38225:45;38301:2;38286:18;;38279:34;38344:2;38329:18;;38322:34;38178:3;38163:19;;37964:398;9884:161:44;;;;;;;;9436:3;;;;:::i;:::-;;;;9388:668;;;;8507:1555;8249:1813;;;;;;;;;;;:::o;9945:269:59:-;9999:9;10018:84;10034:4;:11;10030:15;;10018:84;;;10080:4;-1:-1:-1;;;;;10069:15:59;:4;10074:1;10069:7;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;10069:7:59;:15;10066:25;;;10086:5;;10066:25;10047:3;;;;:::i;:::-;;;;10018:84;;;10119:4;:11;10114:16;;10111:97;;;10182:4;:15;;;;;;;-1:-1:-1;10182:15:59;;;;;;;;-1:-1:-1;;;;;10182:15:59;;-1:-1:-1;;;;;;10182:15:59;;;;;;9989:225;9945:269;:::o;3323:296::-;-1:-1:-1;;;;;3419:28:59;;3398:18;3419:28;;;:11;:28;;;;;3457:23;;-1:-1:-1;;3457:23:59;;;;;3490:28;3431:15;3490:11;:28::i;:::-;3533:79;;;3583:15;24581:25:75;;3599:12:59;24637:2:75;24622:18;;24615:34;3572:10:59;;-1:-1:-1;;;;;3533:79:59;;;;;24554:18:75;3533:79:59;24407:248:75;4824:1037:44;5042:4;-1:-1:-1;;;;;5079:19:44;;5058:112;;;;-1:-1:-1;;;5058:112:44;;38918:2:75;5058:112:44;;;38900:21:75;38957:2;38937:18;;;38930:30;38996:34;38976:18;;;38969:62;-1:-1:-1;;;39047:18:75;;;39040:44;39101:19;;5058:112:44;38716:410:75;5058:112:44;5189:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;5212:17:44;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;5239:13:44;:28;;-1:-1:-1;;;;;;5239:28:44;;-1:-1:-1;;;;;5239:28:44;;;;;;5277:19;;;;;;;;;;-1:-1:-1;5277:19:44;;;;;;:14;;:19;:::i;:::-;-1:-1:-1;5306:11:44;:18;;5320:4;-1:-1:-1;;5334:19:44;;;;;;;;5363:12;:28;;-1:-1:-1;;5363:28:44;;;;;;;5401:19;;5411:5;;5401:9;:19::i;:::-;5430:18;5442:5;5430:11;:18::i;:::-;-1:-1:-1;;;;;5584:18:44;;5563;5584;;;:11;:18;;;;;5612:26;;-1:-1:-1;;5681:17:44;;;;;5792:25;-1:-1:-1;5808:8:44;5792:12;:25::i;:::-;-1:-1:-1;;5843:11:44;;;;4824:1037;;;;;;;;:::o;3850:296:50:-;3979:40;-1:-1:-1;;;3979:18:50;:40::i;:::-;4029:49;-1:-1:-1;;;4029:18:50;:49::i;:::-;4088:51;-1:-1:-1;;;1498:198:49;-1:-1:-1;;;;;;1581:25:49;;;;;1573:66;;;;-1:-1:-1;;;1573:66:49;;39333:2:75;1573:66:49;;;39315:21:75;39372:2;39352:18;;;39345:30;39411;39391:18;;;39384:58;39459:18;;1573:66:49;39131:352:75;1573:66:49;-1:-1:-1;;;;;;1649:33:49;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1649:40:49;1685:4;1649:40;;;1498:198::o;20140:186:44:-;20212:9;20207:113;20231:6;20227:1;:10;20207:113;;;20273:17;20291:1;20273:20;;;;;;;;:::i;:::-;;;;;;;;;;20258:51;;;-1:-1:-1;;;20258:51:44;;;;-1:-1:-1;;;;;20273:20:44;;;;20258:49;;:51;;;;;;;;;;20273:20;;20258:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20239:3;;;;;:::i;:::-;;;;20207:113;;7870:403:59;7923:9;7918:253;7942:4;:11;7938:15;;7918:253;;;7974:18;7995:11;:20;8007:4;8012:1;8007:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;8007:7:59;7995:20;;;;;;;;;;;;8029;;-1:-1:-1;;8142:18:59;;;-1:-1:-1;7955:3:59;;;;:::i;:::-;;;;7918:253;;;-1:-1:-1;8181:11:59;8188:4;;8181:11;:::i;:::-;8207:59;;;8237:15;24581:25:75;;8253:12:59;24637:2:75;24622:18;;24615:34;8226:10:59;;8207:59;;24554:18:75;8207:59:59;;;;;;;7870:403::o;6847:341::-;-1:-1:-1;;;;;6915:29:59;;;6912:270;;-1:-1:-1;;;;;6980:28:59;;6959:18;6980:28;;;:11;:28;;;;;7022:19;;-1:-1:-1;;7022:19:59;7037:4;7022:19;;;7055:28;6992:15;7055:11;:28::i;:::-;7102:69;;;7142:15;24581:25:75;;7158:12:59;24637:2:75;24622:18;;24615:34;7131:10:59;;-1:-1:-1;;;;;7102:69:59;;;;;24554:18:75;7102:69:59;24407:248:75;8659:306:50;8812:41;665:10:9;8845:7:50;8812:18;:41::i;:::-;8804:103;;;;-1:-1:-1;;;8804:103:50;;;;;;;:::i;:::-;8918:40;8936:4;8942:2;8946:7;8918:40;;;;;;;;;;;;:17;:40::i;10410:559:59:-;-1:-1:-1;;;;;10498:17:59;;10472:23;10498:17;;;:11;:17;;;;;10529;;;;:26;;;:72;;-1:-1:-1;10571:21:59;;;;;;;:30;10529:72;:122;;;;-1:-1:-1;10618:24:59;;;;;;;:33;10529:122;:162;;;;-1:-1:-1;10667:15:59;;;;;;;:24;10529:162;10525:438;;;10715:9;10738:92;10754:4;:11;10750:15;;10738:92;;;10804:4;-1:-1:-1;;;;;10793:15:59;:4;10798:1;10793:7;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;10793:7:59;:15;10790:25;;;10810:5;;10790:25;10767:3;;;;:::i;:::-;;;;10738:92;;;10850:4;:11;10846:15;;10843:110;;;10890:4;10895:11;;:14;;10908:1;;10895:14;:::i;:::-;10890:20;;;;;;;;:::i;:::-;;;;;;;;;;;10880:4;:7;;-1:-1:-1;;;;;10890:20:59;;;;10885:1;;10880:7;;;;;;:::i;:::-;;;;;;;;;:30;;;;;-1:-1:-1;;;;;10880:30:59;;;;;-1:-1:-1;;;;;10880:30:59;;;;;;10928:4;:10;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;10928:10:59;;;;;-1:-1:-1;;;;;;10928:10:59;;;;;;10701:262;10462:507;10410:559;:::o;9242:135:52:-;9313:7;9347:22;9351:3;9363:5;9347:3;:22::i;9245:274:50:-;9369:41;665:10:9;9402:7:50;9369:18;:41::i;:::-;9361:103;;;;-1:-1:-1;;;9361:103:50;;;;;;;:::i;:::-;9474:38;9488:4;9494:2;9498:7;9507:4;9474:13;:38::i;8261:233:51:-;8341:7;;;;8400:22;8404:3;8416:5;8400:3;:22::i;:::-;8369:53;;-1:-1:-1;8369:53:51;-1:-1:-1;;;8261:233:51;;;;;;:::o;9514:211::-;9621:7;9671:44;9676:3;9696;9702:12;9671:4;:44::i;:::-;9663:53;-1:-1:-1;9514:211:51;;;;;;:::o;7178:104:50:-;7229:13;7261:14;7254:21;;;;;:::i;7346:286:59:-;-1:-1:-1;;;;;7435:28:59;;7414:18;7435:28;;;:11;:28;;;;;;;7473:20;;-1:-1:-1;;7473:20:59;;;7508:71;;7435:28;;7539:10;;7508:71;;;;7550:15;;7566:12;;24581:25:75;;;24637:2;24622:18;;24615:34;24569:2;24554:18;;24407:248;1930:1294:60;2098:6;2093:3;-1:-1:-1;;;;;2072:40:60;2081:10;2072:40;2106:5;;2072:40;;;;;;;:::i;:::-;;;;;;;;2123:13;2151:4;2139:9;:16;;;;:::i;:::-;2123:32;-1:-1:-1;2186:28:60;2182:1036;;2230:38;2242:3;2247:6;2255:5;;2230:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2262:5:60;;-1:-1:-1;2230:11:60;;-1:-1:-1;;2230:38:60:i;:::-;;2182:1036;;;1176:1;2720:10;:30;2716:502;;;2766:28;2780:6;2788:5;;2766:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2766:13:60;;-1:-1:-1;;;2766:28:60:i;2716:502::-;1133:1;2835:10;:31;2831:387;;;2882:12;2897:44;2916:5;;2897:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2923:17:60;;-1:-1:-1;2938:2:60;;-1:-1:-1;2923:5:60;;-1:-1:-1;2923:17:60;:::i;:::-;2897:18;:44::i;:::-;2882:59;;2955:17;2975:43;2990:5;;2975:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2975:43:60;-1:-1:-1;3000:17:60;;-1:-1:-1;3015:2:60;;-1:-1:-1;3000:5:60;:17;:::i;:::-;2975:14;:43::i;:::-;2955:63;;3033:23;3059:34;3074:6;3082:4;3088;3059:14;:34::i;:::-;3113:32;;3033:60;;-1:-1:-1;;;;;;3113:32:60;;;;;;;;2868:289;;;2831:387;;;3177:30;;-1:-1:-1;;;3177:30:60;;40370:2:75;3177:30:60;;;40352:21:75;40409:2;40389:18;;;40382:30;-1:-1:-1;;;40428:18:75;;;40421:50;40488:18;;3177:30:60;40168:344:75;2831:387:60;2035:1189;1930:1294;;;;;:::o;7580:149:51:-;7664:4;4364:17;;;:12;;;:17;;;;;;:22;;7687:35;4270:123;11917:108:50;11992:26;12002:2;12006:7;11992:26;;;;;;;;;;;;:9;:26::i;11236:351::-;11329:4;11353:16;11361:7;11353;:16::i;:::-;11345:73;;;;-1:-1:-1;;;11345:73:50;;40719:2:75;11345:73:50;;;40701:21:75;40758:2;40738:18;;;40731:30;40797:34;40777:18;;;40770:62;-1:-1:-1;;;40848:18:75;;;40841:42;40900:19;;11345:73:50;40517:408:75;11345:73:50;11428:13;11444:23;11459:7;11444:14;:23::i;:::-;11428:39;;11496:5;-1:-1:-1;;;;;11485:16:50;:7;-1:-1:-1;;;;;11485:16:50;;:51;;;;11529:7;-1:-1:-1;;;;;11505:31:50;:20;11517:7;11505:11;:20::i;:::-;-1:-1:-1;;;;;11505:31:50;;11485:51;:94;;;-1:-1:-1;;;;;;8555:25:50;;;8532:4;8555:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;11540:39;11477:103;11236:351;-1:-1:-1;;;;11236:351:50:o;4444:201:52:-;4538:18;;4511:7;;4538:26;-1:-1:-1;4530:73:52;;;;-1:-1:-1;;;4530:73:52;;41132:2:75;4530:73:52;;;41114:21:75;41171:2;41151:18;;;41144:30;41210:34;41190:18;;;41183:62;-1:-1:-1;;;41261:18:75;;;41254:32;41303:19;;4530:73:52;40930:398:75;4530:73:52;4620:3;:11;;4632:5;4620:18;;;;;;;;:::i;:::-;;;;;;;;;4613:25;;4444:201;;;;:::o;10381:269:50:-;10494:28;10504:4;10510:2;10514:7;10494:9;:28::i;:::-;10540:48;10563:4;10569:2;10573:7;10582:5;10540:22;:48::i;:::-;10532:111;;;;-1:-1:-1;;;10532:111:50;;;;;;;:::i;4934:274:51:-;5037:19;;5001:7;;;;5037:27;-1:-1:-1;5029:74:51;;;;-1:-1:-1;;;5029:74:51;;41954:2:75;5029:74:51;;;41936:21:75;41993:2;41973:18;;;41966:30;42032:34;42012:18;;;42005:62;-1:-1:-1;;;42083:18:75;;;42076:32;42125:19;;5029:74:51;41752:398:75;5029:74:51;5114:22;5139:3;:12;;5152:5;5139:19;;;;;;;;:::i;:::-;;;;;;;;;;;5114:44;;5176:5;:10;;;5188:5;:12;;;5168:33;;;;;4934:274;;;;;:::o;6395:315::-;6489:7;6527:17;;;:12;;;:17;;;;;;6577:12;6562:13;6554:36;;;;-1:-1:-1;;;6554:36:51;;;;;;;;:::i;:::-;-1:-1:-1;6643:3:51;6656:12;6667:1;6656:8;:12;:::i;:::-;6643:26;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;6636:40;;;6395:315;;;;;:::o;3382:308:60:-;3490:12;3672:1;3669;3662:4;3656:11;3649:4;3643;3639:15;3632:5;3628:2;3621:5;3616:58;3605:69;3382:308;-1:-1:-1;;;;;3382:308:60:o;4255:425::-;4348:19;4532:14;4526:21;4519:4;4503:14;4499:25;4492:5;4485:63;4470:78;-1:-1:-1;;;;;;4575:25:60;;4567:63;;;;-1:-1:-1;;;4567:63:60;;42357:2:75;4567:63:60;;;42339:21:75;42396:2;42376:18;;;42369:30;42435:27;42415:18;;;42408:55;42480:18;;4567:63:60;42155:349:75;4567:63:60;4645:28;;-1:-1:-1;;;;;4645:28:60;;;;;;;;4255:425;;;;:::o;14814:320:0:-;14893:7;14937:11;:6;14946:2;14937:11;:::i;:::-;14920:6;:13;:28;;14912:62;;;;-1:-1:-1;;;14912:62:0;;42844:2:75;14912:62:0;;;42826:21:75;42883:2;42863:18;;;42856:30;-1:-1:-1;;;42902:18:75;;;42895:51;42963:18;;14912:62:0;42642:345:75;14912:62:0;-1:-1:-1;15058:30:0;15074:4;15058:30;15052:37;;14814:320::o;9457:2804::-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:0;;43194:2:75;9631:50:0;;;43176:21:75;43233:2;43213:18;;;43206:30;-1:-1:-1;;;43252:18:75;;;43245:44;43306:18;;9631:50:0;42992:338:75;9631:50:0;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:0;;43537:2:75;9691:63:0;;;43519:21:75;43576:2;43556:18;;;43549:30;-1:-1:-1;;;43595:18:75;;;43588:47;43652:18;;9691:63:0;43335:341:75;9691:63:0;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:0;;;11804:2;11787:11;-1:-1:-1;;11783:25:0;11777:4;11770:39;-1:-1:-1;9821:2397:0;-1:-1:-1;12245:9:0;9457:2804;-1:-1:-1;;;;9457:2804:0:o;1013:509:10:-;1130:7;1149:12;1204:6;1179:21;:31;;1171:73;;;;-1:-1:-1;;;1171:73:10;;43883:2:75;1171:73:10;;;43865:21:75;43922:2;43902:18;;;43895:30;43961:31;43941:18;;;43934:59;44010:18;;1171:73:10;43681:353:75;1171:73:10;1262:15;;1254:65;;;;-1:-1:-1;;;1254:65:10;;44241:2:75;1254:65:10;;;44223:21:75;;;44260:18;;;44253:30;44319:34;44299:18;;;44292:62;44371:18;;1254:65:10;44039:356:75;1254:65:10;1414:4;1403:8;1397:15;1390:4;1380:8;1376:19;1368:6;1360:59;1352:67;-1:-1:-1;;;;;;1446:18:10;;1438:56;;;;-1:-1:-1;;;1438:56:10;;44602:2:75;1438:56:10;;;44584:21:75;44641:2;44621:18;;;44614:30;44680:27;44660:18;;;44653:55;44725:18;;1438:56:10;44400:349:75;12246:247:50;12341:18;12347:2;12351:7;12341:5;:18::i;:::-;12377:54;12408:1;12412:2;12416:7;12425:5;12377:22;:54::i;:::-;12369:117;;;;-1:-1:-1;;;12369:117:50;;;;;;;:::i;14119:566::-;14243:4;-1:-1:-1;;;;;14216:31:50;:23;14231:7;14216:14;:23::i;:::-;-1:-1:-1;;;;;14216:31:50;;14208:85;;;;-1:-1:-1;;;14208:85:50;;44956:2:75;14208:85:50;;;44938:21:75;44995:2;44975:18;;;44968:30;45034:34;45014:18;;;45007:62;-1:-1:-1;;;45085:18:75;;;45078:39;45134:19;;14208:85:50;44754:405:75;14208:85:50;-1:-1:-1;;;;;14311:16:50;;14303:65;;;;-1:-1:-1;;;14303:65:50;;45366:2:75;14303:65:50;;;45348:21:75;45405:2;45385:18;;;45378:30;45444:34;45424:18;;;45417:62;-1:-1:-1;;;45495:18:75;;;45488:34;45539:19;;14303:65:50;45164:400:75;14303:65:50;14480:29;14497:1;14501:7;14480:8;:29::i;:::-;-1:-1:-1;;;;;14521:19:50;;;;;;:13;:19;;;;;:35;;14548:7;14521:26;:35::i;:::-;-1:-1:-1;;;;;;14566:17:50;;;;;;:13;:17;;;;;:30;;14588:7;14566:21;:30::i;:::-;-1:-1:-1;14606:29:50;:12;14623:7;14632:2;14606:16;:29::i;:::-;;14670:7;14666:2;-1:-1:-1;;;;;14651:27:50;14660:4;-1:-1:-1;;;;;14651:27:50;;;;;;;;;;;14119:566;;;:::o;15520:824::-;15640:4;-1:-1:-1;;;;;15664:13:50;;1101:20:47;1139:8;15660:678:50;;15699:72;;-1:-1:-1;;;15699:72:50;;-1:-1:-1;;;;;15699:36:50;;;;;:72;;665:10:9;;15750:4:50;;15756:7;;15765:5;;15699:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15699:72:50;;;;;;;;-1:-1:-1;;15699:72:50;;;;;;;;;;;;:::i;:::-;;;15695:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15942:13:50;;15938:334;;15984:60;;-1:-1:-1;;;15984:60:50;;;;;;;:::i;15938:334::-;16224:6;16218:13;16209:6;16205:2;16201:15;16194:38;15695:591;-1:-1:-1;;;;;;15821:55:50;-1:-1:-1;;;15821:55:50;;-1:-1:-1;15814:62:50;;15660:678;-1:-1:-1;16323:4:50;15520:824;;;;;;:::o;12815:393::-;-1:-1:-1;;;;;12894:16:50;;12886:61;;;;-1:-1:-1;;;12886:61:50;;46519:2:75;12886:61:50;;;46501:21:75;;;46538:18;;;46531:30;46597:34;46577:18;;;46570:62;46649:18;;12886:61:50;46317:356:75;12886:61:50;12966:16;12974:7;12966;:16::i;:::-;12965:17;12957:58;;;;-1:-1:-1;;;12957:58:50;;46880:2:75;12957:58:50;;;46862:21:75;46919:2;46899:18;;;46892:30;46958;46938:18;;;46931:58;47006:18;;12957:58:50;46678:352:75;12957:58:50;-1:-1:-1;;;;;13083:17:50;;;;;;:13;:17;;;;;:30;;13105:7;13083:21;:30::i;:::-;-1:-1:-1;13123:29:50;:12;13140:7;13149:2;13123:16;:29::i;:::-;-1:-1:-1;13168:33:50;;13193:7;;-1:-1:-1;;;;;13168:33:50;;;13185:1;;13168:33;;13185:1;;13168:33;12815:393;;:::o;8357:135:52:-;8427:4;8450:35;8458:3;8478:5;8450:7;:35::i;8060:129::-;8127:4;8150:32;8155:3;8175:5;8150:4;:32::i;7019:183:51:-;7108:4;7131:64;7136:3;7156;-1:-1:-1;;;;;7170:23:51;;7131:4;:64::i;2204:1512:52:-;2270:4;2407:19;;;:12;;;:19;;;;;;2441:15;;2437:1273;;2798:21;2822:14;2835:1;2822:10;:14;:::i;:::-;2870:18;;2798:38;;-1:-1:-1;2850:17:52;;2870:22;;2891:1;;2870:22;:::i;:::-;2850:42;;3132:17;3152:3;:11;;3164:9;3152:22;;;;;;;;:::i;:::-;;;;;;;;;3132:42;;3295:9;3266:3;:11;;3278:13;3266:26;;;;;;;;:::i;:::-;;;;;;;;;;:38;3396:17;:13;3412:1;3396:17;:::i;:::-;3370:23;;;;:12;;;:23;;;;;:43;3519:17;;3370:3;;3519:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3611:3;:12;;:19;3624:5;3611:19;;;;;;;;;;;3604:26;;;3652:4;3645:11;;;;;;;;2437:1273;3694:5;3687:12;;;;;1632:404;1695:4;4364:17:51;;;:12;;;:17;;;;;;1711:319:52;;-1:-1:-1;1753:23:52;;;;;;;;:11;:23;;;;;;;;;;;;;1933:18;;1911:19;;;:12;;;:19;;;;;;:40;;;;1965:11;;1711:319;-1:-1:-1;2014:5:52;2007:12;;1828:678:51;1904:4;2037:17;;;:12;;;:17;;;;;;2069:13;2065:435;;-1:-1:-1;;2153:38:51;;;;;;;;;;;;;;;;;;2135:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2347:19;;2327:17;;;:12;;;:17;;;;;;;:39;2380:11;;2065:435;2458:5;2422:3;2435:12;2446:1;2435:8;:12;:::i;:::-;2422:26;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;:41;;;;2484:5;2477:12;;;;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:75;-1:-1:-1;;;;;;88:32:75;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:75;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:75;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:75:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:75;;1343:180;-1:-1:-1;1343:180:75:o;1736:131::-;-1:-1:-1;;;;;1811:31:75;;1801:42;;1791:70;;1857:1;1854;1847:12;1872:134;1940:20;;1969:31;1940:20;1969:31;:::i;:::-;1872:134;;;:::o;2011:315::-;2079:6;2087;2140:2;2128:9;2119:7;2115:23;2111:32;2108:52;;;2156:1;2153;2146:12;2108:52;2195:9;2182:23;2214:31;2239:5;2214:31;:::i;:::-;2264:5;2316:2;2301:18;;;;2288:32;;-1:-1:-1;;;2011:315:75:o;2331:347::-;2382:8;2392:6;2446:3;2439:4;2431:6;2427:17;2423:27;2413:55;;2464:1;2461;2454:12;2413:55;-1:-1:-1;2487:20:75;;-1:-1:-1;;;;;2519:30:75;;2516:50;;;2562:1;2559;2552:12;2516:50;2599:4;2591:6;2587:17;2575:29;;2651:3;2644:4;2635:6;2627;2623:19;2619:30;2616:39;2613:59;;;2668:1;2665;2658:12;2683:477;2762:6;2770;2778;2831:2;2819:9;2810:7;2806:23;2802:32;2799:52;;;2847:1;2844;2837:12;2799:52;2883:9;2870:23;2860:33;;2944:2;2933:9;2929:18;2916:32;-1:-1:-1;;;;;2963:6:75;2960:30;2957:50;;;3003:1;3000;2993:12;2957:50;3042:58;3092:7;3083:6;3072:9;3068:22;3042:58;:::i;:::-;2683:477;;3119:8;;-1:-1:-1;3016:84:75;;-1:-1:-1;;;;2683:477:75:o;3165:247::-;3224:6;3277:2;3265:9;3256:7;3252:23;3248:32;3245:52;;;3293:1;3290;3283:12;3245:52;3332:9;3319:23;3351:31;3376:5;3351:31;:::i;3908:127::-;3969:10;3964:3;3960:20;3957:1;3950:31;4000:4;3997:1;3990:15;4024:4;4021:1;4014:15;4040:275;4111:2;4105:9;4176:2;4157:13;;-1:-1:-1;;4153:27:75;4141:40;;-1:-1:-1;;;;;4196:34:75;;4232:22;;;4193:62;4190:88;;;4258:18;;:::i;:::-;4294:2;4287:22;4040:275;;-1:-1:-1;4040:275:75:o;4320:531::-;4363:5;4416:3;4409:4;4401:6;4397:17;4393:27;4383:55;;4434:1;4431;4424:12;4383:55;4470:6;4457:20;-1:-1:-1;;;;;4492:2:75;4489:26;4486:52;;;4518:18;;:::i;:::-;4562:55;4605:2;4586:13;;-1:-1:-1;;4582:27:75;4611:4;4578:38;4562:55;:::i;:::-;4642:2;4633:7;4626:19;4688:3;4681:4;4676:2;4668:6;4664:15;4660:26;4657:35;4654:55;;;4705:1;4702;4695:12;4654:55;4770:2;4763:4;4755:6;4751:17;4744:4;4735:7;4731:18;4718:55;4818:1;4793:16;;;4811:4;4789:27;4782:38;;;;4797:7;4320:531;-1:-1:-1;;;4320:531:75:o;4856:390::-;4934:6;4942;4995:2;4983:9;4974:7;4970:23;4966:32;4963:52;;;5011:1;5008;5001:12;4963:52;5047:9;5034:23;5024:33;;5108:2;5097:9;5093:18;5080:32;-1:-1:-1;;;;;5127:6:75;5124:30;5121:50;;;5167:1;5164;5157:12;5121:50;5190;5232:7;5223:6;5212:9;5208:22;5190:50;:::i;:::-;5180:60;;;4856:390;;;;;:::o;5433:400::-;5532:6;5585:2;5573:9;5564:7;5560:23;5556:32;5553:52;;;5601:1;5598;5591:12;5553:52;5641:9;5628:23;-1:-1:-1;;;;;5666:6:75;5663:30;5660:50;;;5706:1;5703;5696:12;5660:50;5729:22;;5785:3;5767:16;;;5763:26;5760:46;;;5802:1;5799;5792:12;5838:160;5903:20;;5959:13;;5952:21;5942:32;;5932:60;;5988:1;5985;5978:12;6003:1288;6156:6;6164;6172;6180;6188;6196;6204;6212;6220;6228;6281:3;6269:9;6260:7;6256:23;6252:33;6249:53;;;6298:1;6295;6288:12;6249:53;6321:29;6340:9;6321:29;:::i;:::-;6311:39;;6401:2;6390:9;6386:18;6373:32;-1:-1:-1;;;;;6465:2:75;6457:6;6454:14;6451:34;;;6481:1;6478;6471:12;6451:34;6520:58;6570:7;6561:6;6550:9;6546:22;6520:58;:::i;:::-;6597:8;;-1:-1:-1;6494:84:75;-1:-1:-1;6685:2:75;6670:18;;6657:32;;-1:-1:-1;6701:16:75;;;6698:36;;;6730:1;6727;6720:12;6698:36;6769:60;6821:7;6810:8;6799:9;6795:24;6769:60;:::i;:::-;6848:8;;-1:-1:-1;6743:86:75;-1:-1:-1;6743:86:75;;-1:-1:-1;6902:38:75;6936:2;6921:18;;6902:38;:::i;:::-;6892:48;;6959:39;6993:3;6982:9;6978:19;6959:39;:::i;:::-;6949:49;;7017:39;7051:3;7040:9;7036:19;7017:39;:::i;:::-;7007:49;;7109:3;7098:9;7094:19;7081:33;7065:49;;7139:2;7129:8;7126:16;7123:36;;;7155:1;7152;7145:12;7123:36;;7178:52;7222:7;7211:8;7200:9;7196:24;7178:52;:::i;:::-;7168:62;;;7249:36;7280:3;7269:9;7265:19;7249:36;:::i;:::-;7239:46;;6003:1288;;;;;;;;;;;;;:::o;7296:156::-;7362:20;;7422:4;7411:16;;7401:27;;7391:55;;7442:1;7439;7432:12;7457:196;7530:4;-1:-1:-1;;;;;7555:6:75;7552:30;7549:56;;;7585:18;;:::i;:::-;-1:-1:-1;7630:1:75;7626:14;7642:4;7622:25;;7457:196::o;7658:687::-;7718:5;7766:4;7754:9;7749:3;7745:19;7741:30;7738:50;;;7784:1;7781;7774:12;7738:50;7817:2;7811:9;7859:4;7851:6;7847:17;7930:6;7918:10;7915:22;-1:-1:-1;;;;;7882:10:75;7879:34;7876:62;7873:88;;;7941:18;;:::i;:::-;7977:2;7970:22;8010:6;-1:-1:-1;8010:6:75;8040:23;;8072:33;8040:23;8072:33;:::i;:::-;8114:23;;8170:36;8202:2;8187:18;;8170:36;:::i;:::-;8165:2;8157:6;8153:15;8146:61;8268:2;8257:9;8253:18;8240:32;8235:2;8227:6;8223:15;8216:57;8334:2;8323:9;8319:18;8306:32;8301:2;8293:6;8289:15;8282:57;;7658:687;;;;:::o;8350:714::-;8417:5;8470:3;8463:4;8455:6;8451:17;8447:27;8437:55;;8488:1;8485;8478:12;8437:55;8524:6;8511:20;8550:4;8574:73;8590:56;8643:2;8590:56;:::i;:::-;8574:73;:::i;:::-;8681:15;;;8767:1;8763:10;;;;8751:23;;8747:32;;;8712:12;;;;8791:15;;;8788:35;;;8819:1;8816;8809:12;8788:35;8855:2;8847:6;8843:15;8867:168;8883:6;8878:3;8875:15;8867:168;;;8951:41;8988:3;8983;8951:41;:::i;:::-;8939:54;;9013:12;;;;8909:4;8900:14;8867:168;;;-1:-1:-1;9053:5:75;8350:714;-1:-1:-1;;;;;;8350:714:75:o;9069:1671::-;9283:6;9291;9299;9307;9315;9323;9331;9339;9347;9355;9363:7;9417:3;9405:9;9396:7;9392:23;9388:33;9385:53;;;9434:1;9431;9424:12;9385:53;9457:27;9474:9;9457:27;:::i;:::-;9447:37;;-1:-1:-1;;;;;9570:2:75;9564;9553:9;9549:18;9536:32;9533:40;9530:60;;;9586:1;9583;9576:12;9530:60;9625:84;9701:7;9694:2;9683:9;9679:18;9666:32;9655:9;9651:48;9625:84;:::i;:::-;9728:8;;-1:-1:-1;9755:8:75;-1:-1:-1;9806:2:75;9791:18;;9778:32;9775:40;-1:-1:-1;9772:60:75;;;9828:1;9825;9818:12;9772:60;9867:84;9943:7;9936:2;9925:9;9921:18;9908:32;9897:9;9893:48;9867:84;:::i;:::-;9970:8;;-1:-1:-1;9997:8:75;-1:-1:-1;10048:2:75;10033:18;;10020:32;10017:40;-1:-1:-1;10014:60:75;;;10070:1;10067;10060:12;10014:60;10109:84;10185:7;10178:2;10167:9;10163:18;10150:32;10139:9;10135:48;10109:84;:::i;:::-;10212:8;;-1:-1:-1;10239:8:75;-1:-1:-1;10290:3:75;10275:19;;10262:33;10259:41;-1:-1:-1;10256:61:75;;;10313:1;10310;10303:12;10256:61;10352:85;10429:7;10421:3;10410:9;10406:19;10393:33;10382:9;10378:49;10352:85;:::i;:::-;10456:8;;-1:-1:-1;10483:8:75;-1:-1:-1;10538:3:75;10523:19;;10510:33;;-1:-1:-1;10586:3:75;10571:19;;10558:33;10555:41;-1:-1:-1;10552:61:75;;;10609:1;10606;10599:12;10552:61;;10633:101;10726:7;10718:3;10707:9;10703:19;10690:33;10679:9;10675:49;10633:101;:::i;:::-;10622:112;;9069:1671;;;;;;;;;;;;;;:::o;10745:456::-;10822:6;10830;10838;10891:2;10879:9;10870:7;10866:23;10862:32;10859:52;;;10907:1;10904;10897:12;10859:52;10946:9;10933:23;10965:31;10990:5;10965:31;:::i;:::-;11015:5;-1:-1:-1;11072:2:75;11057:18;;11044:32;11085:33;11044:32;11085:33;:::i;:::-;10745:456;;11137:7;;-1:-1:-1;;;11191:2:75;11176:18;;;;11163:32;;10745:456::o;11206:658::-;11377:2;11429:21;;;11499:13;;11402:18;;;11521:22;;;11348:4;;11377:2;11600:15;;;;11574:2;11559:18;;;11348:4;11643:195;11657:6;11654:1;11651:13;11643:195;;;11722:13;;-1:-1:-1;;;;;11718:39:75;11706:52;;11813:15;;;;11778:12;;;;11754:1;11672:9;11643:195;;;-1:-1:-1;11855:3:75;;11206:658;-1:-1:-1;;;;;;11206:658:75:o;11869:182::-;11926:6;11979:2;11967:9;11958:7;11954:23;11950:32;11947:52;;;11995:1;11992;11985:12;11947:52;12018:27;12035:9;12018:27;:::i;12464:322::-;12533:6;12586:2;12574:9;12565:7;12561:23;12557:32;12554:52;;;12602:1;12599;12592:12;12554:52;12642:9;12629:23;-1:-1:-1;;;;;12667:6:75;12664:30;12661:50;;;12707:1;12704;12697:12;12661:50;12730;12772:7;12763:6;12752:9;12748:22;12730:50;:::i;12980:315::-;13045:6;13053;13106:2;13094:9;13085:7;13081:23;13077:32;13074:52;;;13122:1;13119;13112:12;13074:52;13161:9;13148:23;13180:31;13205:5;13180:31;:::i;:::-;13230:5;-1:-1:-1;13254:35:75;13285:2;13270:18;;13254:35;:::i;:::-;13244:45;;12980:315;;;;;:::o;13300:836::-;13361:5;13414:3;13407:4;13399:6;13395:17;13391:27;13381:55;;13432:1;13429;13422:12;13381:55;13468:6;13455:20;13494:4;13518:73;13534:56;13587:2;13534:56;:::i;13518:73::-;13625:15;;;13711:1;13707:10;;;;13695:23;;13691:32;;;13656:12;;;;13735:15;;;13732:35;;;13763:1;13760;13753:12;13732:35;13799:2;13791:6;13787:15;13811:296;13827:6;13822:3;13819:15;13811:296;;;13907:3;13894:17;13944:1;13937:5;13934:12;13924:110;;13988:1;14017:2;14013;14006:14;13924:110;14047:18;;14085:12;;;;13844;;13811:296;;14141:1250;14274:6;14282;14335:2;14323:9;14314:7;14310:23;14306:32;14303:52;;;14351:1;14348;14341:12;14303:52;14391:9;14378:23;-1:-1:-1;;;;;14461:2:75;14453:6;14450:14;14447:34;;;14477:1;14474;14467:12;14447:34;14515:6;14504:9;14500:22;14490:32;;14560:7;14553:4;14549:2;14545:13;14541:27;14531:55;;14582:1;14579;14572:12;14531:55;14618:2;14605:16;14640:4;14664:73;14680:56;14733:2;14680:56;:::i;14664:73::-;14771:15;;;14853:1;14849:10;;;;14841:19;;14837:28;;;14802:12;;;;14877:19;;;14874:39;;;14909:1;14906;14899:12;14874:39;14933:11;;;;14953:217;14969:6;14964:3;14961:15;14953:217;;;15049:3;15036:17;15066:31;15091:5;15066:31;:::i;:::-;15110:18;;14986:12;;;;15148;;;;14953:217;;;15189:5;-1:-1:-1;;15232:18:75;;15219:32;;-1:-1:-1;;15263:16:75;;;15260:36;;;15292:1;15289;15282:12;15260:36;;15315:70;15377:7;15366:8;15355:9;15351:24;15315:70;:::i;15396:681::-;15493:6;15501;15509;15517;15525;15578:3;15566:9;15557:7;15553:23;15549:33;15546:53;;;15595:1;15592;15585:12;15546:53;15631:9;15618:23;15608:33;;15691:2;15680:9;15676:18;15663:32;15704:31;15729:5;15704:31;:::i;:::-;15754:5;-1:-1:-1;15806:2:75;15791:18;;15778:32;;-1:-1:-1;15861:2:75;15846:18;;15833:32;-1:-1:-1;;;;;15877:30:75;;15874:50;;;15920:1;15917;15910:12;15874:50;15959:58;16009:7;16000:6;15989:9;15985:22;15959:58;:::i;:::-;15396:681;;;;-1:-1:-1;15396:681:75;;-1:-1:-1;16036:8:75;;15933:84;15396:681;-1:-1:-1;;;15396:681:75:o;16082:544::-;16325:3;16314:9;16307:22;16288:4;16352:46;16393:3;16382:9;16378:19;16370:6;16352:46;:::i;:::-;16446:9;16438:6;16434:22;16429:2;16418:9;16414:18;16407:50;16474:33;16500:6;16492;16474:33;:::i;:::-;16555:4;16543:17;;;;16538:2;16523:18;;16516:45;-1:-1:-1;;16604:14:75;;16597:22;16592:2;16577:18;;;16570:50;16466:41;16082:544;-1:-1:-1;;16082:544:75:o;16631:375::-;16702:8;16712:6;16766:3;16759:4;16751:6;16747:17;16743:27;16733:55;;16784:1;16781;16774:12;16733:55;-1:-1:-1;16807:20:75;;-1:-1:-1;;;;;16839:30:75;;16836:50;;;16882:1;16879;16872:12;16836:50;16919:4;16911:6;16907:17;16895:29;;16979:3;16972:4;16962:6;16959:1;16955:14;16947:6;16943:27;16939:38;16936:47;16933:67;;;16996:1;16993;16986:12;17011:1528;17237:6;17245;17253;17261;17269;17277;17285;17293;17301;17354:3;17342:9;17333:7;17329:23;17325:33;17322:53;;;17371:1;17368;17361:12;17322:53;17407:9;17394:23;17384:33;;17468:2;17457:9;17453:18;17440:32;-1:-1:-1;;;;;17532:2:75;17524:6;17521:14;17518:34;;;17548:1;17545;17538:12;17518:34;17587:78;17657:7;17648:6;17637:9;17633:22;17587:78;:::i;:::-;17684:8;;-1:-1:-1;17561:104:75;-1:-1:-1;17772:2:75;17757:18;;17744:32;;-1:-1:-1;17788:16:75;;;17785:36;;;17817:1;17814;17807:12;17785:36;17856:80;17928:7;17917:8;17906:9;17902:24;17856:80;:::i;:::-;17955:8;;-1:-1:-1;17830:106:75;-1:-1:-1;18043:2:75;18028:18;;18015:32;;-1:-1:-1;18059:16:75;;;18056:36;;;18088:1;18085;18078:12;18056:36;18127:80;18199:7;18188:8;18177:9;18173:24;18127:80;:::i;:::-;18226:8;;-1:-1:-1;18101:106:75;-1:-1:-1;18314:3:75;18299:19;;18286:33;;-1:-1:-1;18331:16:75;;;18328:36;;;18360:1;18357;18350:12;18328:36;;18399:80;18471:7;18460:8;18449:9;18445:24;18399:80;:::i;:::-;18373:106;;18498:8;18488:18;;;18525:8;18515:18;;;17011:1528;;;;;;;;;;;:::o;18544:388::-;18612:6;18620;18673:2;18661:9;18652:7;18648:23;18644:32;18641:52;;;18689:1;18686;18679:12;18641:52;18728:9;18715:23;18747:31;18772:5;18747:31;:::i;:::-;18797:5;-1:-1:-1;18854:2:75;18839:18;;18826:32;18867:33;18826:32;18867:33;:::i;:::-;18919:7;18909:17;;;18544:388;;;;;:::o;18937:380::-;19016:1;19012:12;;;;19059;;;19080:61;;19134:4;19126:6;19122:17;19112:27;;19080:61;19187:2;19179:6;19176:14;19156:18;19153:38;19150:161;;;19233:10;19228:3;19224:20;19221:1;19214:31;19268:4;19265:1;19258:15;19296:4;19293:1;19286:15;19150:161;;18937:380;;;:::o;20965:355::-;21167:2;21149:21;;;21206:2;21186:18;;;21179:30;21245:33;21240:2;21225:18;;21218:61;21311:2;21296:18;;20965:355::o;21325:352::-;21527:2;21509:21;;;21566:2;21546:18;;;21539:30;21605;21600:2;21585:18;;21578:58;21668:2;21653:18;;21325:352::o;21682:435::-;21915:3;21904:9;21897:22;21878:4;21936:46;21977:3;21966:9;21962:19;21954:6;21936:46;:::i;:::-;22013:2;21998:18;;21991:34;;;;-1:-1:-1;22056:2:75;22041:18;;22034:34;;;;22099:2;22084:18;;;22077:34;21928:54;21682:435;-1:-1:-1;21682:435:75:o;22122:397::-;22324:2;22306:21;;;22363:2;22343:18;;;22336:30;22402:34;22397:2;22382:18;;22375:62;-1:-1:-1;;;22468:2:75;22453:18;;22446:31;22509:3;22494:19;;22122:397::o;22524:522::-;22602:4;22608:6;22668:11;22655:25;22762:2;22758:7;22747:8;22731:14;22727:29;22723:43;22703:18;22699:68;22689:96;;22781:1;22778;22771:12;22689:96;22808:33;;22860:20;;;-1:-1:-1;;;;;;22892:30:75;;22889:50;;;22935:1;22932;22925:12;22889:50;22968:4;22956:17;;-1:-1:-1;22999:14:75;22995:27;;;22985:38;;22982:58;;;23036:1;23033;23026:12;23577:579;23704:4;23710:6;23770:11;23757:25;23864:2;23860:7;23849:8;23833:14;23829:29;23825:43;23805:18;23801:68;23791:96;;23883:1;23880;23873:12;23791:96;23910:33;;23962:20;;;-1:-1:-1;;;;;;23994:30:75;;23991:50;;;24037:1;24034;24027:12;23991:50;24070:4;24058:17;;-1:-1:-1;24121:1:75;24117:14;;;24101;24097:35;24087:46;;24084:66;;;24146:1;24143;24136:12;24161:241;24252:6;24305:3;24293:9;24284:7;24280:23;24276:33;24273:53;;;24322:1;24319;24312:12;24273:53;24345:51;24388:7;24377:9;24345:51;:::i;25079:399::-;25281:2;25263:21;;;25320:2;25300:18;;;25293:30;25359:34;25354:2;25339:18;;25332:62;-1:-1:-1;;;25425:2:75;25410:18;;25403:33;25468:3;25453:19;;25079:399::o;25483:408::-;25685:2;25667:21;;;25724:2;25704:18;;;25697:30;25763:34;25758:2;25743:18;;25736:62;-1:-1:-1;;;25829:2:75;25814:18;;25807:42;25881:3;25866:19;;25483:408::o;28700:127::-;28761:10;28756:3;28752:20;28749:1;28742:31;28792:4;28789:1;28782:15;28816:4;28813:1;28806:15;28832:127;28893:10;28888:3;28884:20;28881:1;28874:31;28924:4;28921:1;28914:15;28948:4;28945:1;28938:15;28964:127;29025:10;29020:3;29016:20;29013:1;29006:31;29056:4;29053:1;29046:15;29080:4;29077:1;29070:15;29096:135;29135:3;-1:-1:-1;;29156:17:75;;29153:43;;;29176:18;;:::i;:::-;-1:-1:-1;29223:1:75;29212:13;;29096:135::o;29652:470::-;29831:3;29869:6;29863:13;29885:53;29931:6;29926:3;29919:4;29911:6;29907:17;29885:53;:::i;:::-;30001:13;;29960:16;;;;30023:57;30001:13;29960:16;30057:4;30045:17;;30023:57;:::i;:::-;30096:20;;29652:470;-1:-1:-1;;;;29652:470:75:o;30894:267::-;30983:6;30978:3;30971:19;31035:6;31028:5;31021:4;31016:3;31012:14;30999:43;-1:-1:-1;31087:1:75;31062:16;;;31080:4;31058:27;;;31051:38;;;;31143:2;31122:15;;;-1:-1:-1;;31118:29:75;31109:39;;;31105:50;;30894:267::o;31166:504::-;31225:5;31232:6;31292:3;31279:17;31378:2;31374:7;31363:8;31347:14;31343:29;31339:43;31319:18;31315:68;31305:96;;31397:1;31394;31387:12;31305:96;31425:33;;31529:4;31516:18;;;-1:-1:-1;31477:21:75;;-1:-1:-1;;;;;;31546:30:75;;31543:50;;;31589:1;31586;31579:12;31543:50;31639:6;31623:14;31619:27;31609:8;31605:42;31602:62;;;31660:1;31657;31650:12;31675:522;31775:6;31770:3;31763:19;31745:3;31801:4;31830:2;31825:3;31821:12;31814:19;;31856:5;31879:1;31889:283;31903:6;31900:1;31897:13;31889:283;;;31980:6;31967:20;32000:33;32025:7;32000:33;:::i;:::-;-1:-1:-1;;;;;32058:33:75;32046:46;;32112:12;;;;32147:15;;;;32088:1;31918:9;31889:283;;;-1:-1:-1;32188:3:75;;31675:522;-1:-1:-1;;;;;31675:522:75:o;32202:354::-;32290:19;;;32272:3;-1:-1:-1;;;;;32321:31:75;;32318:51;;;32365:1;32362;32355:12;32318:51;32401:6;32398:1;32394:14;32453:8;32446:5;32439:4;32434:3;32430:14;32417:45;32530:1;32485:18;;32505:4;32481:29;32519:13;;;-1:-1:-1;32481:29:75;;32202:354;-1:-1:-1;;32202:354:75:o;32561:716::-;32668:6;32663:3;32656:19;32638:3;32694:4;32735:2;32730:3;32726:12;32760:11;32787;32780:18;;32837:6;32834:1;32830:14;32823:5;32819:26;32807:38;;32868:5;32891:1;32901:350;32915:6;32912:1;32909:13;32901:350;;;32986:5;32980:4;32976:16;32971:3;32964:29;33042:46;33081:6;33074:5;33042:46;:::i;:::-;33109:62;33166:4;33151:13;33136;33109:62;:::i;:::-;33229:12;;;;33101:70;-1:-1:-1;;;33194:15:75;;;;32937:1;32930:9;32901:350;;;-1:-1:-1;33267:4:75;;32561:716;-1:-1:-1;;;;;;;32561:716:75:o;33282:1637::-;33829:25;;;33816:3;33885:2;33870:18;;33863:31;;;33801:19;;33929:22;;;-1:-1:-1;33982:3:75;34032:1;34028:14;;;34013:30;;34009:40;;;33967:19;;34072:6;-1:-1:-1;34106:376:75;34120:6;34117:1;34114:13;34106:376;;;34185:22;;;-1:-1:-1;;34181:37:75;34169:50;;34268:47;34308:6;34300;34268:47;:::i;:::-;34338:64;34395:6;34380:13;34365;34338:64;:::i;:::-;34328:74;-1:-1:-1;;;34437:2:75;34460:12;;;;34425:15;;;;;34142:1;34135:9;34106:376;;;34110:3;;;34530:9;34522:6;34518:22;34513:2;34502:9;34498:18;34491:50;34564:61;34618:6;34610;34602;34564:61;:::i;:::-;34550:75;;34673:9;34665:6;34661:22;34656:2;34645:9;34641:18;34634:50;34707:61;34761:6;34753;34745;34707:61;:::i;:::-;34693:75;;34817:9;34809:6;34805:22;34799:3;34788:9;34784:19;34777:51;34845:68;34906:6;34898;34890;34845:68;:::i;:::-;34837:76;33282:1637;-1:-1:-1;;;;;;;;;;;;33282:1637:75:o;34924:251::-;34994:6;35047:2;35035:9;35026:7;35022:23;35018:32;35015:52;;;35063:1;35060;35053:12;35015:52;35095:9;35089:16;35114:31;35139:5;35114:31;:::i;35656:245::-;35813:2;35802:9;35795:21;35776:4;35833:62;35891:2;35880:9;35876:18;35868:6;35860;35833:62;:::i;36321:919::-;36712:4;36704:6;36700:17;36689:9;36682:36;36754:3;36749:2;36738:9;36734:18;36727:31;36663:4;36781:63;36839:3;36828:9;36824:19;36816:6;36808;36781:63;:::i;:::-;36892:9;36884:6;36880:22;36875:2;36864:9;36860:18;36853:50;36926;36969:6;36961;36953;36926:50;:::i;:::-;36912:64;;37024:9;37016:6;37012:22;37007:2;36996:9;36992:18;36985:50;37052;37095:6;37087;37079;37052:50;:::i;:::-;37133:3;37118:19;;37111:35;;;;-1:-1:-1;;37177:3:75;37162:19;;37155:35;;;;37221:3;37206:19;;;37199:35;37044:58;36321:919;-1:-1:-1;;;;;;;36321:919:75:o;37589:370::-;37746:3;37784:6;37778:13;37800:53;37846:6;37841:3;37834:4;37826:6;37822:17;37800:53;:::i;:::-;37875:16;;;;37900:21;;;-1:-1:-1;37948:4:75;37937:16;;37589:370;-1:-1:-1;37589:370:75:o;39488:413::-;39690:2;39672:21;;;39729:2;39709:18;;;39702:30;39768:34;39763:2;39748:18;;39741:62;-1:-1:-1;;;39834:2:75;39819:18;;39812:47;39891:3;39876:19;;39488:413::o;39906:125::-;39946:4;39974:1;39971;39968:8;39965:34;;;39979:18;;:::i;:::-;-1:-1:-1;40016:9:75;;39906:125::o;40036:127::-;40097:10;40092:3;40088:20;40085:1;40078:31;40128:4;40125:1;40118:15;40152:4;40149:1;40142:15;41333:414;41535:2;41517:21;;;41574:2;41554:18;;;41547:30;41613:34;41608:2;41593:18;;41586:62;-1:-1:-1;;;41679:2:75;41664:18;;41657:48;41737:3;41722:19;;41333:414::o;42509:128::-;42549:3;42580:1;42576:6;42573:1;42570:13;42567:39;;;42586:18;;:::i;:::-;-1:-1:-1;42622:9:75;;42509:128::o;45569:489::-;-1:-1:-1;;;;;45838:15:75;;;45820:34;;45890:15;;45885:2;45870:18;;45863:43;45937:2;45922:18;;45915:34;;;45985:3;45980:2;45965:18;;45958:31;;;45763:4;;46006:46;;46032:19;;46024:6;46006:46;:::i;:::-;45998:54;45569:489;-1:-1:-1;;;;;;45569:489:75:o;46063:249::-;46132:6;46185:2;46173:9;46164:7;46160:23;46156:32;46153:52;;;46201:1;46198;46191:12;46153:52;46233:9;46227:16;46252:30;46276:5;46252:30;:::i", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"addManager(address)": {"details": "addManager      Only NFT Owner can add a new manager (Roles admin)      There can be multiple minters", "params": {"_managerAddress": "new manager address"}}, "addMultipleUsersToRoles(address[],uint8[])": {"details": "addMultipleUsersToRoles      Add multiple users to multiple roles", "params": {"addresses": "Array of addresses", "roles": "Array of coresponding roles"}}, "addTo725StoreList(address)": {"details": "addTo725StoreList      Adds store role to an user.      It can be called only by a manager", "params": {"_allowedAddress": "user address"}}, "addToCreateERC20List(address)": {"details": "addToCreateERC20List      Adds deployERC20 role to an user.      It can be called only by a manager", "params": {"_allowedAddress": "user address"}}, "addToMetadataList(address)": {"details": "addToMetadataList      Adds metadata role to an user.      It can be called only by a manager", "params": {"_allowedAddress": "user address"}}, "approve(address,uint256)": {"details": "See {IERC721-approve}."}, "balanceOf(address)": {"details": "See {IERC721-balanceOf}."}, "baseURI()": {"details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."}, "cleanPermissions()": {"details": "cleanPermissions      Only NFT Owner  can call it.      This function allows to remove all ROLES at erc721 level:               Managers, ERC20Deployer, MetadataUpdater, StoreUpdater      Permissions at erc20 level stay."}, "createERC20(uint256,string[],address[],uint256[],bytes[])": {"details": "createERC20        ONLY user with deployERC20 permission (assigned by Manager) can call it Creates a new ERC20 datatoken. It also adds initial minting and fee management permissions to custom users.", "params": {"_templateIndex": "ERC20Template index ", "addresses": "refers to an array of addresses                     [0]  = minter account who can mint datatokens (can have multiple minters)                     [1]  = feeManager initial feeManager for this DT                     [2]  = publishing Market Address                     [3]  = publishing Market Fee Token", "bytess": "refers to an array of bytes                     Currently not used, usefull for future templates", "strings": "refers to an array of strings                      [0] = name                      [1] = symbol", "uints": "refers to an array of uints                     [0] = cap_ the total ERC20 cap                     [1] = publishing Market Fee Amount"}, "returns": {"_0": "ERC20 token address"}}, "executeCall(uint256,address,uint256,bytes)": {"notice": "Executes any other smart contract.  Is only callable by the Manager.", "params": {"_data": "the call data, or the contract data to deploy*", "_operation": "the operation to execute: CALL = 0; DELEGATECALL = 1; CREATE2 = 2; CREATE = 3;", "_to": "the smart contract or address to interact with.           `_to` will be unused if a contract is created (operation 2 and 3)", "_value": "the value of ETH to transfer"}}, "getApproved(uint256)": {"details": "See {IERC721-getApproved}."}, "getData(bytes32)": {"notice": "Gets data at a given `key`", "params": {"_key": "the key which value to retrieve"}, "returns": {"_value": "The data stored at the key"}}, "getId()": {"details": "getId      Return template id in case we need different ABIs.       If you construct your own template, please make sure to change the hardcoded value"}, "getMetaData()": {"details": "getMetaData      Returns metaDataState, metaDataDecryptorUrl, metaDataDecryptorAddress"}, "getPermissions(address)": {"details": "getPermissions      Returns list of roles for an user", "params": {"user": "user address"}}, "initialize(address,string,string,address,address,address,string,bool)": {"details": "initialize      Calls private _initialize function. Only if contract is not initialized. This function mints an NFT (tokenId=1) to the owner and add owner as Manager Role", "params": {"additionalERC20Deployer": "address of additionalERC20Deployer", "additionalMetaDataUpdater": "address of additionalMetaDataUpdater", "name_": "NFT name", "owner": "NFT Owner", "symbol_": "NFT Symbol", "tokenFactory": "NFT factory address", "tokenURI": "tokenURI", "transferable_": "if set to false, this NFT is non-transferable"}, "returns": {"_0": "boolean"}}, "isApprovedForAll(address,address)": {"details": "See {IERC721-isApprovedForAll}."}, "isERC20Deployer(address)": {"details": "isERC20Deployer", "returns": {"_0": "true if the account has ERC20 Deploy role"}}, "isInitialized()": {"details": "isInitialized      It checks whether the contract is initialized.", "returns": {"_0": "true if the contract is initialized."}}, "name()": {"details": "name      It returns the token name.", "returns": {"_0": "Datatoken name."}}, "ownerOf(uint256)": {"details": "See {IERC721-ownerOf}."}, "removeFrom725StoreList(address)": {"details": "removeFrom725StoreList      Removes store role from an user.      It can be called by a manager or by the same user, if he already has store role", "params": {"_allowedAddress": "user address"}}, "removeFromCreateERC20List(address)": {"details": "removeFromCreateERC20List      Removes deployERC20 role from an user.      It can be called by a manager or by the same user, if he already has deployERC20 role", "params": {"_allowedAddress": "user address"}}, "removeFromMetadataList(address)": {"details": "removeFromMetadataList      Removes metadata role from an user.      It can be called by a manager or by the same user, if he already has metadata role", "params": {"_allowedAddress": "user address"}}, "removeManager(address)": {"details": "removeManager      Only NFT Owner can remove a manager (Roles admin)      There can be multiple minters", "params": {"_managerAddress": "new manager address"}}, "safeTransferFrom(address,address,uint256)": {"details": "safeTransferFrom       Used for transferring the NFT, can be used by an approved relayer Even if we only have 1 tokenId, we leave it open as arguments for being a standard ERC721", "params": {"from": "nft owner", "to": "nft receiver", "tokenId": "tokenId (1)"}}, "setApprovalForAll(address,bool)": {"details": "See {IERC721-setApprovalForAll}."}, "setDataERC20(bytes32,bytes)": {"details": "setDataERC20      ONLY callable FROM the ERC20Template and BY the corresponding ERC20Deployer This function allows to store data with a preset key (keccak256(ERC20Address)) into NFT 725 Store", "params": {"_key": "keccak256(ERC20Address) see setData into ERC20Template.sol", "_value": "data to store at that key"}}, "setMetaData(uint8,string,string,bytes,bytes,bytes32,(address,uint8,bytes32,bytes32)[])": {"details": "setMetaData      Creates or update Metadata for Aqua(emit event) Also, updates the METADATA_DECRYPTOR key", "params": {"_metaDataDecryptorAddress": "decryptor public key", "_metaDataDecryptorUrl": "decryptor URL", "_metaDataHash": "hash of clear data (before the encryption, if any)", "_metaDataState": "metadata state", "_metadataProofs": "optional signatures of entitys who validated data (before the encryption, if any)", "data": "data used by Aquarius", "flags": "flags used by Aquarius"}}, "setMetaDataAndTokenURI((uint8,string,string,bytes,bytes,bytes32,uint256,string,(address,uint8,bytes32,bytes32)[]))": {"details": "setMetaDataAndTokenURI       Helper function to improve UX Calls setMetaData & setTokenURI", "params": {"_metaDataAndTokenURI": "metaDataAndTokenURI struct"}}, "setMetaDataState(uint8)": {"details": "setMetaDataState      Updates metadata state", "params": {"_metaDataState": "metadata state"}}, "setNewData(bytes32,bytes)": {"details": "setNewData       ONLY user with store permission (assigned by Manager) can call it This function allows to set any arbitrary key-value into the 725 standard      There can be multiple store updaters", "params": {"_key": "key (see 725 for standard (keccak256))  Data keys, should be the keccak256 hash of a type name. e.g. keccak256('ERCXXXMyNewKeyType') is 0x6935a24ea384927f250ee0b954ed498cd9203fc5d2bf95c735e52e6ca675e047", "_value": "data to store at that key"}}, "setTokenURI(uint256,string)": {"details": "setTokenURI      sets tokenURI for a tokenId", "params": {"tokenId": "token ID", "tokenURI": "token URI"}}, "supportsInterface(bytes4)": {"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."}, "symbol()": {"details": "symbol      It returns the token symbol.", "returns": {"_0": "Datatoken symbol."}}, "tokenByIndex(uint256)": {"details": "See {IERC721Enumerable-tokenByIndex}."}, "tokenOfOwnerByIndex(address,uint256)": {"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."}, "tokenURI(uint256)": {"details": "See {IERC721Metadata-tokenURI}."}, "totalSupply()": {"details": "See {IERC721Enumerable-totalSupply}."}, "transferFrom(address,address,uint256)": {"details": "transferFrom       Used for transferring the NFT, can be used by an approved relayer Even if we only have 1 tokenId, we leave it open as arguments for being a standard ERC721", "params": {"from": "nft owner", "to": "nft receiver", "tokenId": "tokenId (1)"}}, "withdrawETH()": {"details": "withdrawETH      transfers all the accumlated ether the ownerOf"}}, "version": 1}, "offset": [652, 21548], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x17E JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xCCD7D476 GT PUSH2 0x8F JUMPI DUP1 PUSH4 0xE086E5EC GT PUSH2 0x6C JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x9A0 JUMPI DUP1 PUSH4 0xE38D7CAD EQ PUSH2 0x9A8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0xFE1EC880 EQ PUSH2 0xA11 JUMPI STOP JUMPDEST DUP1 PUSH4 0xCCD7D476 EQ PUSH2 0x942 JUMPI DUP1 PUSH4 0xD2786BA4 EQ PUSH2 0x95C JUMPI DUP1 PUSH4 0xD8053AD3 EQ PUSH2 0x981 JUMPI STOP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x88F JUMPI DUP1 PUSH4 0xAC18DE43 EQ PUSH2 0x8AF JUMPI DUP1 PUSH4 0xB0C41EAD EQ PUSH2 0x8CF JUMPI DUP1 PUSH4 0xC2D60E6E EQ PUSH2 0x8EF JUMPI DUP1 PUSH4 0xC55F8126 EQ PUSH2 0x90F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x922 JUMPI STOP JUMPDEST DUP1 PUSH4 0x6C0360EB GT PUSH2 0x13A JUMPI DUP1 PUSH4 0x90184B02 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x90184B02 EQ PUSH2 0x7E9 JUMPI DUP1 PUSH4 0x92FF0D31 EQ PUSH2 0x822 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x83C JUMPI DUP1 PUSH4 0x96FB3EAF EQ PUSH2 0x851 JUMPI STOP JUMPDEST DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x7B4 JUMPI DUP1 PUSH4 0x82CF129D EQ PUSH2 0x7D4 JUMPI STOP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x6DD JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x75F JUMPI DUP1 PUSH4 0x67530A61 EQ PUSH2 0x77F JUMPI STOP JUMPDEST DUP1 PUSH4 0x1A1D51E8 GT PUSH2 0x234 JUMPI DUP1 PUSH4 0x392E53CD GT PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x466BCA02 GT PUSH2 0x1CD JUMPI DUP1 PUSH4 0x466BCA02 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0x467C97F5 EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x4A63740A EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0x4F189CB2 EQ PUSH2 0x6C8 JUMPI STOP JUMPDEST DUP1 PUSH4 0x392E53CD EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0x431053AC EQ PUSH2 0x646 JUMPI STOP JUMPDEST DUP1 PUSH4 0x1A1D51E8 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x1AA3ADF9 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0x273E06B3 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x2D06177A EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x5EE JUMPI STOP JUMPDEST DUP1 PUSH4 0x10C558BF GT PUSH2 0x283 JUMPI DUP1 PUSH4 0x10C558BF EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x160A7925 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x19A18A85 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x19C186E5 EQ PUSH2 0x52E JUMPI STOP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xE05662E EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xE57C7E8 EQ PUSH2 0x3AE JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x2CE JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x42A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x431D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x361 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x4330 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x316 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x436E JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0xC66 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x43DB JUMP JUMPDEST PUSH2 0xCF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x490 PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP4 MSTORE PUSH2 0x100 DUP3 DIV DUP2 AND ISZERO ISZERO SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH3 0x10000 DUP2 DIV DUP4 AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH4 0x1000000 SWAP1 SWAP3 DIV AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 DUP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x44F8 JUMP JUMPDEST PUSH2 0xDA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x316 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x453E JUMP JUMPDEST PUSH2 0xE48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH2 0xF79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x4589 JUMP JUMPDEST PUSH2 0x1038 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x589 CALLDATASIZE PUSH1 0x4 PUSH2 0x478D JUMP JUMPDEST PUSH2 0x119E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x5A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4894 JUMP JUMPDEST PUSH2 0x11F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x5C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH2 0x12EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH2 0x1435 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH2 0x609 CALLDATASIZE PUSH1 0x4 PUSH2 0x436E JUMP JUMPDEST PUSH2 0x1478 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0xFF AND PUSH2 0x30A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x641 CALLDATASIZE PUSH1 0x4 PUSH2 0x4894 JUMP JUMPDEST PUSH2 0x14A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH2 0x159F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x67B PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x48D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x6A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4922 JUMP JUMPDEST PUSH2 0x1735 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x6C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH2 0x17C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x17FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH2 0x6F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4330 JUMP JUMPDEST PUSH2 0x1853 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x718 CALLDATASIZE PUSH1 0x4 PUSH2 0x4330 JUMP JUMPDEST PUSH2 0x1869 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x738 CALLDATASIZE PUSH1 0x4 PUSH2 0x493D JUMP JUMPDEST PUSH2 0x190B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x316 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x361 PUSH2 0x77A CALLDATASIZE PUSH1 0x4 PUSH2 0x4330 JUMP JUMPDEST PUSH2 0x1958 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x79A CALLDATASIZE PUSH1 0x4 PUSH2 0x43DB JUMP JUMPDEST PUSH2 0x1980 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x19F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH2 0x7CF CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH2 0x19FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x1A86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x804 CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x16 SLOAD PUSH2 0x30A SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x1A93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x86C CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x8AA CALLDATASIZE PUSH1 0x4 PUSH2 0x4971 JUMP JUMPDEST PUSH2 0x1AA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x8CA CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH2 0x1B60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x361 PUSH2 0x8EA CALLDATASIZE PUSH1 0x4 PUSH2 0x4330 JUMP JUMPDEST PUSH2 0x1BA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x90A CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0F JUMP JUMPDEST PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x2CE PUSH2 0x91D CALLDATASIZE PUSH1 0x4 PUSH2 0x4AC6 JUMP JUMPDEST PUSH2 0x1FD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x93D CALLDATASIZE PUSH1 0x4 PUSH2 0x4330 JUMP JUMPDEST PUSH2 0x201D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x74D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x971 PUSH2 0x216B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x30A SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CE PUSH2 0x22BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x361 PUSH2 0x9C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BB4 JUMP JUMPDEST PUSH2 0x22FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x9E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0xA2C CALLDATASIZE PUSH1 0x4 PUSH2 0x4426 JUMP JUMPDEST PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP1 SLOAD PUSH2 0xA40 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA6C SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAB9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA8E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAB9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA9C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP3 PUSH2 0x25FD JUMP JUMPDEST PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5B DUP3 PUSH2 0x1958 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xBE5 JUMPI POP PUSH2 0xBE5 DUP2 CALLER PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xC61 DUP4 DUP4 PUSH2 0x260A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH2 0xC73 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC9F SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCEC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323154656D706C6174653A204E4F5420455243323020436F6E747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x18DD PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xC61 DUP4 DUP4 DUP4 PUSH2 0x2678 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xD9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4CF7 JUMP JUMPDEST PUSH2 0xDA6 DUP2 PUSH2 0x26D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDB2 DUP3 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4D2E JUMP JUMPDEST PUSH2 0xDEC DUP3 DUP3 PUSH2 0x2752 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6DE6CD3982065CBD31E789E3109106F4D76D1C8A46E85262045CF947FB3FD4ED DUP3 DUP5 TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0xE2B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE43 PUSH1 0x5 PUSH2 0x27DD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4D94 JUMP JUMPDEST PUSH2 0xF2A PUSH2 0xE8D PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x4922 JUMP JUMPDEST PUSH2 0xE9A PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0xEA7 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0xEB4 PUSH1 0x60 DUP9 ADD DUP9 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0xEC1 PUSH1 0x80 DUP11 ADD DUP11 PUSH2 0x4DD5 JUMP JUMPDEST PUSH1 0xA0 DUP12 ADD CALLDATALOAD PUSH2 0xED4 PUSH2 0x100 DUP14 ADD DUP14 PUSH2 0x4E1B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF11 PUSH1 0x80 DUP4 MUL DUP7 ADD CALLDATASIZE DUP2 SWAP1 SUB DUP2 ADD SWAP1 PUSH2 0x4E64 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xEF4 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x27E7 JUMP JUMPDEST PUSH2 0xDA6 PUSH1 0xC0 DUP3 ADD CALLDATALOAD PUSH2 0xF3F PUSH1 0xE0 DUP5 ADD DUP5 PUSH2 0x4DD5 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xDA9 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xFAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4CF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xDA6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 OR DUP2 SSTORE PUSH2 0xFEE DUP3 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xEB09276310ED110A7E565D64966D0FF68A47112D2DD5EEB6CBD7451836CE35EE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x10A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323154656D706C6174653A20746F6B656E20696E7374616E63652061 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x10C1 JUMPI PUSH2 0x10C1 DUP6 PUSH2 0x2CA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x10D9 JUMPI PUSH2 0x10D9 DUP5 PUSH2 0x26D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1165 DUP13 DUP13 DUP13 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP14 SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 POP PUSH2 0x2D17 JUMP JUMPDEST SWAP1 POP PUSH2 0x116F PUSH2 0x2E67 JUMP JUMPDEST PUSH2 0x117F PUSH4 0x2260147F PUSH1 0xE1 SHL PUSH2 0x2E93 JUMP JUMPDEST PUSH2 0x118F PUSH4 0x2BD57B73 PUSH1 0xE0 SHL PUSH2 0x2E93 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4D94 JUMP JUMPDEST PUSH2 0x11E6 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x27E7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND PUSH2 0x1215 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4E80 JUMP JUMPDEST DUP1 PUSH1 0x1 EQ PUSH2 0x1235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4EC3 JUMP JUMPDEST PUSH2 0x129F PUSH2 0x129A PUSH1 0x14 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1291 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1273 JUMPI JUMPDEST POP POP POP POP POP MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x12A7 PUSH2 0x2FA3 JUMP JUMPDEST PUSH2 0x12B0 DUP3 PUSH2 0x3054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFF00 NOT AND PUSH4 0x1010100 OR DUP2 SSTORE PUSH2 0x12E4 DUP5 DUP5 DUP5 PUSH2 0x30D1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x133B JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO PUSH2 0x133B JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x13B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFF000000 NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xC929B18B08FFEA86A1F95E29384DBE8968F2FCBD70CFD735DF3ABA1CC548CBF3 SWAP1 PUSH2 0x13A3 SWAP1 TIMESTAMP SWAP1 NUMBER SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x13B4 DUP3 PUSH2 0x3112 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231526F6C6573416464726573733A204E6F7420656E6F7567682070 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726D697373696F6E7320746F2072656D6F76652066726F6D2037323553746F PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x1C99531A5CDD PUSH1 0xD2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x143F PUSH1 0x1 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x146F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4D2E JUMP JUMPDEST PUSH2 0xDA6 DUP2 PUSH2 0x3054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x149A SWAP1 DUP4 PUSH2 0x3289 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND PUSH2 0x14C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4E80 JUMP JUMPDEST DUP1 PUSH1 0x1 EQ PUSH2 0x14E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4EC3 JUMP JUMPDEST PUSH2 0x1548 PUSH2 0x129A PUSH1 0x14 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1291 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1273 JUMPI POP POP POP POP POP MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1550 PUSH2 0x2FA3 JUMP JUMPDEST PUSH2 0x1559 DUP3 PUSH2 0x3054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFF00 NOT AND PUSH4 0x1010100 OR DUP2 SSTORE DUP2 MLOAD SWAP3 DUP4 ADD SWAP1 SWAP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x12E4 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x3295 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x15EF JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO PUSH2 0x15EF JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x1656 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH3 0xFF0000 NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0x9B41E1311FA819E825BC77FA2568492112E15EA92D173F3F8EE1C8EC3C1C562B SWAP1 PUSH2 0x13A3 SWAP1 TIMESTAMP SWAP1 NUMBER SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x47 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231526F6C6573416464726573733A204E6F7420656E6F7567682070 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726D697373696F6E7320746F2072656D6F76652066726F6D206D6574616461 PUSH1 0x64 DUP3 ADD MSTORE PUSH7 0x1D18481B1A5CDD PUSH1 0xCA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x14 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x170E JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x176A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4D94 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE NUMBER SWAP1 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xA8336411CC72DB0E5BDC4DFF989EEB35879BAFACEFFB59B54B37645C3395ADB9 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x17F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4CF7 JUMP JUMPDEST PUSH2 0xDA6 DUP2 PUSH2 0x2CA7 JUMP JUMPDEST PUSH2 0x1807 PUSH1 0x1 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1837 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4D2E JUMP JUMPDEST PUSH2 0x183F PUSH2 0x2FA3 JUMP JUMPDEST PUSH2 0x1851 PUSH2 0x184C PUSH1 0x1 PUSH2 0x1958 JUMP JUMPDEST PUSH2 0x3054 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1861 PUSH1 0x5 DUP5 PUSH2 0x32C7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x1886 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18B2 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1915 PUSH1 0x1 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1945 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4D2E JUMP JUMPDEST DUP1 MLOAD PUSH2 0x13B4 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x416B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5394 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x5 SWAP2 SWAP1 PUSH2 0x32E5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323154656D706C6174653A204E4F542053544F524520555044415445 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE43 PUSH2 0x32FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x149D SWAP1 PUSH2 0x27DD JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH2 0xC73 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF DUP1 SLOAD PUSH2 0xA40 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH2 0x102C JUMP JUMPDEST PUSH2 0x1B6A PUSH1 0x1 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4D2E JUMP JUMPDEST PUSH2 0xDA6 DUP2 PUSH2 0x330B JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1C01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4CF7 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1C13 JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x1C20 JUMPI POP PUSH1 0x32 DUP2 MLOAD LT JUMPDEST PUSH2 0x1C61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642061727261792073697A65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C8A JUMPI PUSH2 0x1C8A PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1FC3 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1CB8 JUMPI PUSH2 0x1CB8 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CF5 JUMPI PUSH2 0x1CF5 PUSH2 0x4F25 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1D07 JUMPI PUSH2 0x1D07 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D20 JUMPI PUSH2 0x1D20 PUSH2 0x4F25 JUMP JUMPDEST EQ ISZERO PUSH2 0x1D9B JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE DUP4 MLOAD CALLER SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1D47 JUMPI PUSH2 0x1D47 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAF8FC8B6726138C96881C895390A08E9D91A94C288F06281E7F9821C49C7155B TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0x1D92 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DAF JUMPI PUSH2 0x1DAF PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DC8 JUMPI PUSH2 0x1DC8 PUSH2 0x4F25 JUMP JUMPDEST EQ ISZERO PUSH2 0x1E45 JUMPI DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE DUP4 MLOAD CALLER SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1DF1 JUMPI PUSH2 0x1DF1 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x572D56343BE407A66810F01449212E8545E14FF5049C479D34BE944CDFD0D4F TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0x1E3C SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x2 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E59 JUMPI PUSH2 0x1E59 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E72 JUMPI PUSH2 0x1E72 PUSH2 0x4F25 JUMP JUMPDEST EQ ISZERO PUSH2 0x1EF1 JUMPI DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR DUP2 SSTORE DUP4 MLOAD CALLER SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1E9D JUMPI PUSH2 0x1E9D PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC2A42571A74CE1442C8C44D375BA9442E7D55D94B37AFEACE261C83C62128FA4 TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0x1EE8 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x3 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F05 JUMPI PUSH2 0x1F05 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F1E JUMPI PUSH2 0x1F1E PUSH2 0x4F25 JUMP JUMPDEST EQ ISZERO PUSH2 0x1F9F JUMPI DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 OR DUP2 SSTORE DUP4 MLOAD CALLER SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1F4B JUMPI PUSH2 0x1F4B PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEB09276310ED110A7E565D64966D0FF68A47112D2DD5EEB6CBD7451836CE35EE TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0x1F96 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH2 0x1FC1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FB4 JUMPI PUSH2 0x1FB4 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2BF0 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1FCD DUP2 PUSH2 0x4F51 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C64 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2009 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x4CF7 JUMP JUMPDEST PUSH2 0x2016 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x336B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2028 DUP3 PUSH2 0x25FD JUMP JUMPDEST PUSH2 0x208C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x20A5 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20D1 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x211E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x211E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2101 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x212F PUSH2 0x32FC JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2164 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x214C SWAP3 SWAP2 SWAP1 PUSH2 0x4F6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x11 PUSH1 0x12 PUSH1 0x13 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x10 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 DUP1 SLOAD PUSH2 0x21A1 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21CD SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 SLOAD PUSH2 0x222D SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2259 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x227B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2289 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH2 0x22C5 PUSH1 0x1 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0xD SLOAD EQ ISZERO PUSH2 0x2352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x2 PUSH1 0xD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x23CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323154656D706C6174653A204E4F542045524332304445504C4F5945 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x525F524F4C45 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x557FCFB PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x557FCFB0 SWAP1 PUSH2 0x2410 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x50E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x242F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2453 SWAP2 SWAP1 PUSH2 0x5196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x14 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 POP POP PUSH1 0x1 PUSH1 0xD SSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x251D JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO PUSH2 0x251D JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x2583 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFF00 NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0x59BD33F4C27CC16A2D74450E1FA43D7896020BE9AECEA4BEE009DB9294DE8997 SWAP1 PUSH2 0x13A3 SWAP1 TIMESTAMP SWAP1 NUMBER SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231526F6C6573416464726573733A204E6F7420656E6F7567682070 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726D697373696F6E7320746F2072656D6F76652066726F6D2045524332304C PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x1A5CDD PUSH1 0xEA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149D PUSH1 0x5 DUP4 PUSH2 0x3594 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x263F DUP3 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2691 SWAP1 DUP4 DUP4 PUSH2 0x41EF JUMP JUMPDEST POP DUP3 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x26C4 SWAP3 SWAP2 SWAP1 PUSH2 0x51B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xDA6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR DUP2 SSTORE PUSH2 0x2710 DUP3 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xC2A42571A74CE1442C8C44D375BA9442E7D55D94B37AFEACE261C83C62128FA4 SWAP2 ADD PUSH2 0x102C JUMP JUMPDEST PUSH2 0x275B DUP3 PUSH2 0x25FD JUMP JUMPDEST PUSH2 0x27BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0xC61 SWAP3 DUP5 ADD SWAP1 PUSH2 0x416B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149D DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP14 AND OR SWAP1 SSTORE PUSH2 0x2802 PUSH1 0x11 DUP12 DUP12 PUSH2 0x41EF JUMP JUMPDEST POP PUSH2 0x280F PUSH1 0x12 DUP10 DUP10 PUSH2 0x41EF JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2886 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5463569DCC320958360074A9AB27E809E8A6942C394FB151D139B5F7B4ECB1BD DUP13 DUP13 DUP13 DUP11 DUP11 DUP11 DUP11 DUP11 TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0x286A SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x10 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH2 0x28D8 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0xE5C4CF86B1815151E6F453E1E133D4454AE3B0B07145DB39F2E0178685DEAC84 SWAP2 PUSH2 0x28CF SWAP2 PUSH1 0xFF AND SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 TIMESTAMP SWAP1 NUMBER SWAP1 PUSH2 0x51C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x32 DUP2 MLOAD GT ISZERO PUSH2 0x291C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x546F6F204D616E792050726F6F6673 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2BE1 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2979 JUMPI PUSH2 0x2979 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2AFB JUMPI PUSH1 0x0 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29A8 SWAP3 SWAP2 SWAP1 PUSH2 0x522F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x29D7 JUMPI PUSH2 0x29D7 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x29F5 JUMPI PUSH2 0x29F5 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x2A13 JUMPI PUSH2 0x2A13 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2A55 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2A95 JUMPI PUSH2 0x2A95 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2AF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B210383937B7B31039B4B3B732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST POP POP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2B0D JUMPI PUSH2 0x2B0D PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2819D8BADF5CFF2C9220B8EE99DACC14D67058E343D7F0C2C444D198507FE941 DUP6 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2B56 JUMPI PUSH2 0x2B56 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2B74 JUMPI PUSH2 0x2B74 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2B92 JUMPI PUSH2 0x2B92 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2BC7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0x2BD9 DUP2 PUSH2 0x4F51 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2953 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2C4C JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C1A JUMPI PUSH2 0x2C1A PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2C3A JUMPI PUSH2 0x2C4C JUMP JUMPDEST DUP1 PUSH2 0x2C44 DUP2 PUSH2 0x4F51 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 EQ ISZERO PUSH2 0x13B4 JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE PUSH2 0x2CD5 DUP3 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x572D56343BE407A66810F01449212E8545E14FF5049C479D34BE944CDFD0D4F SWAP2 ADD PUSH2 0x102C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x2D86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323154656D706C6174653A3A20496E76616C6964206D696E7465722C PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x20207A65726F2061646472657373 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST DUP6 MLOAD PUSH2 0x2D99 SWAP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x416B JUMP JUMPDEST POP DUP5 MLOAD PUSH2 0x2DAD SWAP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP9 ADD SWAP1 PUSH2 0x416B JUMP JUMPDEST POP PUSH1 0x13 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND MUL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 MSTORE PUSH2 0x2DEC SWAP2 PUSH1 0x3 SWAP2 PUSH2 0x416B JUMP JUMPDEST POP PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH2 0xFFFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x16 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x2E18 SWAP1 DUP9 SWAP1 PUSH2 0x35AC JUMP JUMPDEST PUSH2 0x2E21 DUP8 PUSH2 0x3054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFF00 NOT AND PUSH4 0x1010100 OR DUP2 SSTORE PUSH2 0x2E55 PUSH1 0x1 DUP6 PUSH2 0x2752 JUMP JUMPDEST POP POP PUSH1 0x10 SLOAD PUSH1 0xFF AND SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2E77 PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH2 0x2E93 JUMP JUMPDEST PUSH2 0x2E87 PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH2 0x2E93 JUMP JUMPDEST PUSH2 0x1851 PUSH4 0x780E9D63 PUSH1 0xE0 SHL JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND EQ ISZERO PUSH2 0x2EED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x14 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F30 JUMPI PUSH2 0x2F30 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x82C03DA5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x82C03DA5 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x2F9B SWAP1 PUSH2 0x4F51 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x300B JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2FC9 JUMPI PUSH2 0x2FC9 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0x3003 DUP2 PUSH2 0x4F51 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2FA6 JUMP JUMPDEST POP PUSH2 0x3018 PUSH1 0xB PUSH1 0x0 PUSH2 0x4263 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x712BC71DB81927A76B8BF1EA346247BB0AD58F18E4E5C1BD4AA0EC6573E02A2B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xDA6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH2 0x308F DUP3 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xAF8FC8B6726138C96881C895390A08E9D91A94C288F06281E7F9821C49C7155B SWAP2 ADD PUSH2 0x102C JUMP JUMPDEST PUSH2 0x30DB CALLER DUP3 PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0x30F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x5251 JUMP JUMPDEST PUSH2 0xC61 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3295 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3143 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3157 JUMPI POP DUP1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x316C JUMPI POP DUP1 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x31CD JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x319B JUMPI PUSH2 0x319B PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x31BB JUMPI PUSH2 0x31CD JUMP JUMPDEST DUP1 PUSH2 0x31C5 DUP2 PUSH2 0x4F51 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3174 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xC61 JUMPI PUSH1 0xB DUP1 SLOAD PUSH2 0x31E7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x52A2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x31F7 JUMPI PUSH2 0x31F7 PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x3223 JUMPI PUSH2 0x3223 PUSH2 0x4F0F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xB DUP1 SLOAD DUP1 PUSH2 0x3262 JUMPI PUSH2 0x3262 PUSH2 0x52B9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149A DUP4 DUP4 PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x329F CALLER DUP4 PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0x32BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x5251 JUMP JUMPDEST PUSH2 0x12E4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3736 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x32D6 DUP7 DUP7 PUSH2 0x3769 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32F2 DUP5 DUP5 DUP5 PUSH2 0x3806 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA40 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xB572DB0E6DA4924B771ED1712B980D48B5992B9A1C27AEDE55FBB3318C48996A SWAP1 PUSH2 0x13A3 SWAP1 TIMESTAMP SWAP1 NUMBER SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH32 0x1F920DBDA597D7BF95035464170FA58D0A4B57F13A1C315ACE6793B9F63688B8 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x33A8 SWAP3 SWAP2 SWAP1 PUSH2 0x51B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 PUSH2 0x9C4 GAS PUSH2 0x33C0 SWAP2 SWAP1 PUSH2 0x52A2 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x3410 JUMPI PUSH2 0x340A DUP6 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP8 SWAP3 POP PUSH2 0x386F SWAP2 POP POP JUMP JUMPDEST POP PUSH2 0x358C JUMP JUMPDEST PUSH1 0x3 DUP7 EQ ISZERO PUSH2 0x3459 JUMPI PUSH2 0x340A DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x3887 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP7 EQ ISZERO PUSH2 0x354D JUMPI PUSH1 0x0 PUSH2 0x34B0 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x34AB SWAP3 POP PUSH1 0x20 SWAP2 POP DUP8 SWAP1 POP PUSH2 0x52A2 JUMP JUMPDEST PUSH2 0x3923 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x34FF DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH2 0x34FA SWAP2 POP PUSH1 0x20 SWAP1 POP DUP9 PUSH2 0x52A2 JUMP JUMPDEST PUSH2 0x3981 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x350E DUP8 DUP5 DUP5 PUSH2 0x3A8E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCF78CF0D6F3D8371E1075C69C492AB4EC5D8CF23A1A239B6A51A1D00BE7CA312 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP PUSH2 0x358C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x57726F6E67206F7065726174696F6E2074797065 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x149A JUMP JUMPDEST PUSH2 0x13B4 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3B90 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D1 DUP3 PUSH2 0x25FD JUMP JUMPDEST PUSH2 0x3632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363D DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x3678 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x366D DUP5 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x36A8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x370E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3723 JUMPI PUSH2 0x3723 PUSH2 0x4F0F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3741 DUP5 DUP5 DUP5 PUSH2 0x3BC3 JUMP JUMPDEST PUSH2 0x374D DUP5 DUP5 DUP5 DUP5 PUSH2 0x3D44 JUMP JUMPDEST PUSH2 0x12E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x52CF JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP4 LT PUSH2 0x37C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A20696E646578206F7574206F6620626F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x37E0 JUMPI PUSH2 0x37E0 PUSH2 0x4F0F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 PUSH2 0x3836 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0x431D JUMP JUMPDEST POP DUP5 PUSH2 0x3843 PUSH1 0x1 DUP4 PUSH2 0x52A2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3853 JUMPI PUSH2 0x3853 PUSH2 0x4F0F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD DUP8 DUP10 DUP8 CALL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP5 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x38E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756C64206E6F74206465706C6F7920636F6E747261637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCF78CF0D6F3D8371E1075C69C492AB4EC5D8CF23A1A239B6A51A1D00BE7CA312 SWAP1 PUSH1 0x0 SWAP1 LOG2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3930 DUP3 PUSH1 0x20 PUSH2 0x5321 JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH2 0x3978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x746F427974657333325F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x398F DUP2 PUSH1 0x1F PUSH2 0x5321 JUMP JUMPDEST LT ISZERO PUSH2 0x39CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x39D8 DUP3 DUP5 PUSH2 0x5321 JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x3A1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x3A3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3A85 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3A74 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x3A5C JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SELFBALANCE LT ISZERO PUSH2 0x3AE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST DUP3 MLOAD PUSH2 0x3B2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD DUP8 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x32F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x3B9A DUP4 DUP4 PUSH2 0x3E42 JUMP JUMPDEST PUSH2 0x3BA7 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x3D44 JUMP JUMPDEST PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x52CF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3BD6 DUP3 PUSH2 0x1958 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3CA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x3CAB PUSH1 0x0 DUP3 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3CCD SWAP1 DUP3 PUSH2 0x3F5A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3CF0 SWAP1 DUP3 PUSH2 0x3F66 JUMP JUMPDEST POP PUSH2 0x3CFD PUSH1 0x5 DUP3 DUP5 PUSH2 0x3F72 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3E37 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x3D88 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5339 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3DC3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3DC0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x5376 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3E1D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x3DF1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3DF6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x3E15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x52CF JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x36A8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3E98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x3EA1 DUP2 PUSH2 0x25FD JUMP JUMPDEST ISZERO PUSH2 0x3EEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3F10 SWAP1 DUP3 PUSH2 0x3F66 JUMP JUMPDEST POP PUSH2 0x3F1D PUSH1 0x5 DUP3 DUP5 PUSH2 0x3F72 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149A DUP4 DUP4 PUSH2 0x3F88 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149A DUP4 DUP4 PUSH2 0x407B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32F2 DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x40CA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x4071 JUMPI PUSH1 0x0 PUSH2 0x3FAC PUSH1 0x1 DUP4 PUSH2 0x52A2 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x3FC0 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x52A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3FD9 JUMPI PUSH2 0x3FD9 PUSH2 0x4F0F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3FFC JUMPI PUSH2 0x3FFC PUSH2 0x4F0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH2 0x4013 DUP4 PUSH1 0x1 PUSH2 0x5321 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x4035 JUMPI PUSH2 0x4035 PUSH2 0x52B9 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x149D JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x149D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x40C2 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x149D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x412F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE DUP7 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP10 SSTORE PUSH1 0x0 DUP10 DUP2 MSTORE DUP5 DUP2 KECCAK256 SWAP6 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP6 ADD SWAP2 DUP3 SSTORE SWAP2 MLOAD SWAP1 DUP3 ADD SSTORE DUP7 SLOAD DUP7 DUP5 MSTORE DUP2 DUP9 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 SSTORE PUSH2 0x32F5 JUMP JUMPDEST DUP3 DUP6 PUSH2 0x413C PUSH1 0x1 DUP5 PUSH2 0x52A2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x414C JUMPI PUSH2 0x414C PUSH2 0x4F0F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP2 POP POP PUSH2 0x32F5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4177 SWAP1 PUSH2 0x4CBC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4199 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x41DF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x41B2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x41DF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x41DF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x41DF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x41C4 JUMP JUMPDEST POP PUSH2 0x41EB SWAP3 SWAP2 POP PUSH2 0x427D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x41FB SWAP1 PUSH2 0x4CBC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x421D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x41DF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4236 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x41DF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x41DF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x41DF JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4248 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDA6 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x41EB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x427E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32F5 DUP2 PUSH2 0x4292 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x42E0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x42C8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12E4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x4309 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x42C5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x149A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x4369 DUP2 PUSH2 0x4349 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x438C DUP2 PUSH2 0x4349 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x43AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x43C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x32DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x43F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x440D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4419 DUP7 DUP3 DUP8 ADD PUSH2 0x439A JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32F5 DUP2 PUSH2 0x4349 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4481 JUMPI PUSH2 0x4481 PUSH2 0x4443 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x449A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x44B3 JUMPI PUSH2 0x44B3 PUSH2 0x4443 JUMP JUMPDEST PUSH2 0x44C6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4459 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x44DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x450B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4534 DUP6 DUP3 DUP7 ADD PUSH2 0x4489 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH2 0x120 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x32F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x45A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45B2 DUP12 PUSH2 0x435E JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x45CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45DA DUP15 DUP4 DUP16 ADD PUSH2 0x439A JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x45F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45FF DUP15 DUP4 DUP16 ADD PUSH2 0x439A JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP DUP8 SWAP2 POP PUSH2 0x4613 PUSH1 0x60 DUP15 ADD PUSH2 0x435E JUMP JUMPDEST SWAP7 POP PUSH2 0x4621 PUSH1 0x80 DUP15 ADD PUSH2 0x435E JUMP JUMPDEST SWAP6 POP PUSH2 0x462F PUSH1 0xA0 DUP15 ADD PUSH2 0x435E JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4652 DUP14 DUP3 DUP15 ADD PUSH2 0x4489 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x4661 PUSH1 0xE0 DUP13 ADD PUSH2 0x4579 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x469C JUMPI PUSH2 0x469C PUSH2 0x4443 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x46DA JUMPI PUSH2 0x46DA PUSH2 0x4443 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 CALLDATALOAD PUSH2 0x46EB DUP2 PUSH2 0x4349 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x46F9 PUSH1 0x20 DUP5 ADD PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x472A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x473F PUSH2 0x473A DUP4 PUSH2 0x4683 JUMP JUMPDEST PUSH2 0x4459 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x7 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x475E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x4782 JUMPI PUSH2 0x4774 DUP9 DUP3 PUSH2 0x46A6 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 PUSH1 0x80 ADD PUSH2 0x4762 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x47AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47B7 DUP13 PUSH2 0x4672 JUMP JUMPDEST SWAP11 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 PUSH1 0x20 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x47D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47E2 DUP15 PUSH1 0x20 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x439A JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x47F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4808 DUP15 PUSH1 0x40 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x439A JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x481E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482E DUP15 PUSH1 0x60 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x439A JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x4844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4854 DUP15 PUSH1 0x80 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x439A JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH1 0xA0 DUP14 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x4871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4882 DUP14 PUSH1 0xC0 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x4719 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x48A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x48B4 DUP2 PUSH2 0x4349 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x48C4 DUP2 PUSH2 0x4349 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4916 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x48F1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x149A DUP3 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x494F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36A8 DUP5 DUP3 DUP6 ADD PUSH2 0x4489 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x498F DUP2 PUSH2 0x4349 JUMP JUMPDEST SWAP2 POP PUSH2 0x499D PUSH1 0x20 DUP5 ADD PUSH2 0x4579 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x49B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x49C7 PUSH2 0x473A DUP4 PUSH2 0x4683 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x49E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x4782 JUMPI DUP1 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x4A02 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4A4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4A5D PUSH2 0x473A DUP4 PUSH2 0x4683 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x4A7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x4AA3 JUMPI DUP6 CALLDATALOAD PUSH2 0x4A94 DUP2 PUSH2 0x4349 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x4A81 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x4AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4534 DUP6 DUP3 DUP7 ADD PUSH2 0x49A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4ADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4AF0 DUP2 PUSH2 0x4349 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B1E DUP9 DUP3 DUP10 ADD PUSH2 0x439A JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4B42 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x42F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4B54 DUP2 DUP8 PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP SWAP1 ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x32DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4BD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4BF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BFC DUP14 DUP4 DUP15 ADD PUSH2 0x4B70 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4C15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C21 DUP14 DUP4 DUP15 ADD PUSH2 0x4B70 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4C3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C46 DUP14 DUP4 DUP15 ADD PUSH2 0x4B70 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4C5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C6C DUP13 DUP3 DUP14 ADD PUSH2 0x4B70 JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4CA1 DUP2 PUSH2 0x4349 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4CB1 DUP2 PUSH2 0x4349 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4CD0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4CF1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x455243373231526F6C6573416464726573733A204E4F54204D414E4147455200 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x45524337323154656D706C6174653A206E6F74204E46544F776E657200000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4D78 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524337323154656D706C6174653A204E4F54204D455441444154415F524F4C PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x4DEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4E06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x32DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x4E32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4E4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP PUSH1 0x7 DUP2 SWAP1 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x32DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x149A DUP4 DUP4 PUSH2 0x46A6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524337323154656D706C6174653A204973206E6F6E207472616E7366657261 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x626C65 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x45524337323154656D706C6174653A2043616E6E6F74207472616E7366657220 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x1D1A1A5CC81D1BDAD95B9259 PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4F65 JUMPI PUSH2 0x4F65 PUSH2 0x4F3B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x4F7E DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x42C5 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x4F92 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x42C5 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x4FDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4FFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x32DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5047 JUMPI DUP2 CALLDATALOAD PUSH2 0x502C DUP2 PUSH2 0x4349 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5019 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x506B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP4 PUSH1 0x20 DUP8 ADD CALLDATACOPY PUSH1 0x0 SWAP5 ADD PUSH1 0x20 ADD SWAP4 DUP5 MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP6 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP5 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x50D8 JUMPI DUP3 DUP5 SUB DUP10 MSTORE PUSH2 0x50B9 DUP3 DUP9 PUSH2 0x4FC4 JUMP JUMPDEST PUSH2 0x50C4 DUP7 DUP3 DUP5 PUSH2 0x4F9B JUMP JUMPDEST SWAP11 DUP8 ADD SWAP11 SWAP6 POP POP POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x50A2 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP10 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xC0 PUSH1 0x5 DUP11 SWAP1 SHL DUP4 ADD DUP2 ADD SWAP1 DUP4 ADD DUP12 DUP4 JUMPDEST DUP13 DUP2 LT ISZERO PUSH2 0x5146 JUMPI DUP6 DUP5 SUB PUSH1 0xBF NOT ADD DUP4 MSTORE PUSH2 0x5124 DUP3 DUP16 PUSH2 0x4FC4 JUMP JUMPDEST PUSH2 0x512F DUP7 DUP3 DUP5 PUSH2 0x4F9B JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5109 JUMP JUMPDEST POP POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x515C DUP2 DUP10 DUP12 PUSH2 0x5009 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5171 DUP2 DUP8 DUP10 PUSH2 0x5052 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x5186 DUP2 DUP6 DUP8 PUSH2 0x5088 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x32F5 DUP2 PUSH2 0x4349 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x32F2 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x4F9B JUMP JUMPDEST PUSH1 0xFF DUP12 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x51E4 PUSH1 0xE0 DUP4 ADD DUP12 DUP14 PUSH2 0x4F9B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x51F7 DUP2 DUP11 DUP13 PUSH2 0x4F9B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x520C DUP2 DUP9 DUP11 PUSH2 0x4F9B JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP PUSH1 0xA0 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x5241 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x42C5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x52B4 JUMPI PUSH2 0x52B4 PUSH2 0x4F3B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5334 JUMPI PUSH2 0x5334 PUSH2 0x4F3B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x536C SWAP1 DUP4 ADD DUP5 PUSH2 0x42F1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x32F5 DUP2 PUSH2 0x4292 JUMP INVALID GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH16 0x776E657220717565727920666F72206E PUSH16 0x6E6578697374656E7420746F6B656EA2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SGT DUP15 SAR 0x1F PUSH25 0xDE6234A0D20981FEFC61C64C74B9DE332F98A6441AFB74D5E0 PUSH20 0x64736F6C634300080C0033000000000000000000 ", "sha1": "af617cf8c463ac1aa724fd0b5d1391c39247f399", "source": "pragma solidity 0.8.12;\n// Copyright BigchainDB GmbH and Ocean Protocol contributors\n// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\n// Code is Apache-2.0 and docs are CC-BY-4.0\nimport \"../interfaces/IERC721Template.sol\";\nimport \"../utils/ERC721/ERC721.sol\";\nimport \"../utils/ERC725/ERC725Ocean.sol\";\nimport \"../utils/ERC721/IERC721Enumerable.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Create2.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol\";\nimport \"../interfaces/IFactory.sol\";\nimport \"../interfaces/IERC20Template.sol\";\nimport \"../utils/ERC721RolesAddress.sol\";\n\n\n\ncontract ERC721Template is\n    ERC721(\"Template\", \"TemplateSymbol\"),\n    ERC721RolesAddress,\n    ERC725Ocean,\n    ReentrancyGuard\n{\n    \n    string private _name;\n    string private _symbol;\n    //uint256 private tokenId = 1;\n    bool private initialized;\n    bool public hasMetaData;\n    string public metaDataDecryptorUrl;\n    string public metaDataDecryptorAddress;\n    uint8 public metaDataState;\n    address private _tokenFactory;\n    address[] private deployedERC20List;\n    uint8 private constant templateId = 1;\n    mapping(address => bool) private deployedERC20;\n    bool public transferable;\n\n    //stored here only for ABI reasons\n    event TokenCreated(\n        address indexed newTokenAddress,\n        address indexed templateAddress,\n        string name,\n        string symbol,\n        uint256 cap,\n        address creator\n    );  \n    event MetadataCreated(\n        address indexed createdBy,\n        uint8 state,\n        string decryptorUrl,\n        bytes flags,\n        bytes data,\n        bytes32 metaDataHash,\n        uint256 timestamp,\n        uint256 blockNumber\n    );\n    event MetadataUpdated(\n        address indexed updatedBy,\n        uint8 state,\n        string decryptorUrl,\n        bytes flags,\n        bytes data,\n        bytes32 metaDataHash,\n        uint256 timestamp,\n        uint256 blockNumber\n    );\n    event MetadataValidated(\n        address indexed validator,\n        bytes32 metaDataHash,\n        uint8 v, \n        bytes32 r, \n        bytes32 s\n    );\n    event MetadataState(\n        address indexed updatedBy,\n        uint8 state,\n        uint256 timestamp,\n        uint256 blockNumber\n    );\n\n    event TokenURIUpdate(\n        address indexed updatedBy,\n        string tokenURI,\n        uint256 tokenID,\n        uint256 timestamp,\n        uint256 blockNumber\n    );\n\n    modifier onlyNFTOwner() {\n        require(msg.sender == ownerOf(1), \"ERC721Template: not NFTOwner\");\n        _;\n    }\n\n     \n    /**\n     * @dev initialize\n     *      Calls private _initialize function. Only if contract is not initialized.\n            This function mints an NFT (tokenId=1) to the owner and add owner as Manager Role\n     * @param owner NFT Owner\n     * @param name_ NFT name\n     * @param symbol_ NFT Symbol\n     * @param tokenFactory NFT factory address\n     * @param additionalERC20Deployer address of additionalERC20Deployer\n     * @param additionalMetaDataUpdater address of additionalMetaDataUpdater\n     * @param tokenURI tokenURI\n     * @param transferable_ if set to false, this NFT is non-transferable\n     \n     @return boolean\n     */\n\n    function initialize(\n        address owner,\n        string calldata name_,\n        string calldata symbol_,\n        address tokenFactory,\n        address additionalERC20Deployer,\n        address additionalMetaDataUpdater,\n        string memory tokenURI,\n        bool transferable_\n    ) external returns (bool) {\n        require(\n            !initialized,\n            \"ERC721Template: token instance already initialized\"\n        );\n        if(additionalERC20Deployer != address(0))\n            _addToCreateERC20List(additionalERC20Deployer);\n        if(additionalMetaDataUpdater != address(0))\n            _addToMetadataList(additionalMetaDataUpdater);\n        bool initResult = \n            _initialize(\n                owner,\n                name_,\n                symbol_,\n                tokenFactory,\n                tokenURI,\n                transferable_\n            );\n        //register all erc721 interfaces\n        registerAllInterfaces();\n        //register erc725 interfaces\n        _registerInterface(_INTERFACE_ID_ERC725X);\n        _registerInterface(_INTERFACE_ID_ERC725Y);\n        return(initResult);\n    }\n\n    /**\n     * @dev _initialize\n     *      Calls private _initialize function. Only if contract is not initialized.\n     *       This function mints an NFT (tokenId=1) to the owner\n     *       and add owner as Manager Role (Roles admin)\n     * @param owner NFT Owner\n     * @param name_ NFT name\n     * @param symbol_ NFT Symbol\n     * @param tokenFactory NFT factory address\n     * @param tokenURI tokenURI for token 1\n     \n     @return boolean\n     */\n\n    function _initialize(\n        address owner,\n        string memory name_,\n        string memory symbol_,\n        address tokenFactory,\n        string memory tokenURI,\n        bool transferable_\n    ) internal returns (bool) {\n        require(\n            owner != address(0),\n            \"ERC721Template:: Invalid minter,  zero address\"\n        );\n        \n        _name = name_;\n        _symbol = symbol_;\n        _tokenFactory = tokenFactory;\n        defaultBaseURI = \"\";\n        initialized = true;\n        hasMetaData = false;\n        transferable = transferable_;\n        _safeMint(owner, 1);\n        _addManager(owner);\n\n        // we add the nft owner to all other roles (so that doesn't need to make multiple transactions)\n        Roles storage user = permissions[owner];\n        user.updateMetadata = true;\n        user.deployERC20 = true;\n        user.store = true;\n        // no need to push to auth since it has been already added in _addManager()\n        _setTokenURI(1, tokenURI);\n        \n        return initialized;\n    }\n\n    /**\n     * @dev setTokenURI\n     *      sets tokenURI for a tokenId\n     * @param tokenId token ID\n     * @param tokenURI token URI\n     */\n    function setTokenURI(uint256 tokenId, string memory tokenURI) public {\n        require(msg.sender == ownerOf(tokenId), \"ERC721Template: not NFTOwner\");\n        _setTokenURI(tokenId, tokenURI);\n        emit TokenURIUpdate(msg.sender, tokenURI, tokenId,\n            /* solium-disable-next-line */\n            block.timestamp,\n            block.number);\n    }\n\n    \n\n    /**\n     * @dev setMetaDataState\n     *      Updates metadata state\n     * @param _metaDataState metadata state\n     */\n    function setMetaDataState(uint8 _metaDataState) public {\n        require(\n            permissions[msg.sender].updateMetadata,\n            \"ERC721Template: NOT METADATA_ROLE\"\n        );\n        metaDataState = _metaDataState;\n        emit MetadataState(msg.sender, _metaDataState,\n            /* solium-disable-next-line */\n            block.timestamp,\n            block.number);\n    }\n\n    struct metaDataProof {\n        address validatorAddress;\n        uint8 v; // v of validator signed message\n        bytes32 r; // r of validator signed message\n        bytes32 s; // s of validator signed message\n    }\n    /**\n     * @dev setMetaData\n     *     \n             Creates or update Metadata for Aqua(emit event)\n             Also, updates the METADATA_DECRYPTOR key\n     * @param _metaDataState metadata state\n     * @param _metaDataDecryptorUrl decryptor URL\n     * @param _metaDataDecryptorAddress decryptor public key\n     * @param flags flags used by Aquarius\n     * @param data data used by Aquarius\n     * @param _metaDataHash hash of clear data (before the encryption, if any)\n     * @param _metadataProofs optional signatures of entitys who validated data (before the encryption, if any)\n     */\n    function setMetaData(uint8 _metaDataState, string calldata _metaDataDecryptorUrl\n        , string calldata _metaDataDecryptorAddress, bytes calldata flags, \n        bytes calldata data,bytes32 _metaDataHash, metaDataProof[] memory _metadataProofs) external {\n        require(\n            permissions[msg.sender].updateMetadata,\n            \"ERC721Template: NOT METADATA_ROLE\"\n        );\n        _setMetaData(_metaDataState, _metaDataDecryptorUrl, _metaDataDecryptorAddress,flags, \n        data,_metaDataHash, _metadataProofs);\n    }\n\n    function _setMetaData(uint8 _metaDataState, string calldata _metaDataDecryptorUrl\n        , string calldata _metaDataDecryptorAddress, bytes calldata flags, \n        bytes calldata data,bytes32 _metaDataHash, metaDataProof[] memory _metadataProofs) internal {\n        metaDataState = _metaDataState;\n        metaDataDecryptorUrl = _metaDataDecryptorUrl;\n        metaDataDecryptorAddress = _metaDataDecryptorAddress;\n        if(!hasMetaData){\n            emit MetadataCreated(msg.sender, _metaDataState, _metaDataDecryptorUrl,\n            flags, data, _metaDataHash, \n            /* solium-disable-next-line */\n            block.timestamp,\n            block.number);\n            hasMetaData = true;\n        }\n        else\n            emit MetadataUpdated(msg.sender, metaDataState, _metaDataDecryptorUrl,\n            flags, data, _metaDataHash,\n            /* solium-disable-next-line */\n            block.timestamp,\n            block.number);\n        //check proofs and emit an event for each proof\n        require(_metadataProofs.length <= 50, 'Too Many Proofs');\n        bytes memory prefix = \"\\x19Ethereum Signed Message:\\n32\";\n        for (uint256 i = 0; i < _metadataProofs.length; i++) {\n            if(_metadataProofs[i].validatorAddress != address(0)){\n                    bytes32 prefixedHash = keccak256(abi.encodePacked(prefix, _metaDataHash));\n                    address signer = ecrecover(prefixedHash,\n                    _metadataProofs[i].v, _metadataProofs[i].r, _metadataProofs[i].s);\n                    require(signer == _metadataProofs[i].validatorAddress, \"Invalid proof signer\");\n            }\n            emit MetadataValidated(_metadataProofs[i].validatorAddress, \n            _metaDataHash, \n            _metadataProofs[i].v, _metadataProofs[i].r, _metadataProofs[i].s);\n        }\n    }\n\n    struct metaDataAndTokenURI {\n        uint8 metaDataState;\n        string metaDataDecryptorUrl;\n        string metaDataDecryptorAddress;\n        bytes flags;\n        bytes data;\n        bytes32 metaDataHash;\n        uint256 tokenId;\n        string tokenURI;\n        metaDataProof[] metadataProofs;\n    }\n\n    /**\n     * @dev setMetaDataAndTokenURI\n     *       Helper function to improve UX\n             Calls setMetaData & setTokenURI\n     * @param _metaDataAndTokenURI   metaDataAndTokenURI struct\n     */\n    function setMetaDataAndTokenURI(metaDataAndTokenURI calldata _metaDataAndTokenURI) external {\n        require(\n            permissions[msg.sender].updateMetadata,\n            \"ERC721Template: NOT METADATA_ROLE\"\n        );\n        _setMetaData(_metaDataAndTokenURI.metaDataState, _metaDataAndTokenURI.metaDataDecryptorUrl, \n            _metaDataAndTokenURI.metaDataDecryptorAddress, _metaDataAndTokenURI.flags, \n            _metaDataAndTokenURI.data, _metaDataAndTokenURI.metaDataHash, _metaDataAndTokenURI.metadataProofs);\n        \n        setTokenURI(_metaDataAndTokenURI.tokenId, _metaDataAndTokenURI.tokenURI);\n        \n    }\n    /**\n     * @dev getMetaData\n     *      Returns metaDataState, metaDataDecryptorUrl, metaDataDecryptorAddress\n     */\n    function getMetaData() external view returns (string memory, string memory, uint8, bool){\n        return (metaDataDecryptorUrl, metaDataDecryptorAddress, metaDataState, hasMetaData);\n    } \n\n\n    /**\n     * @dev createERC20\n     *        ONLY user with deployERC20 permission (assigned by Manager) can call it\n             Creates a new ERC20 datatoken.\n            It also adds initial minting and fee management permissions to custom users.\n\n     * @param _templateIndex ERC20Template index \n     * @param strings refers to an array of strings\n     *                      [0] = name\n     *                      [1] = symbol\n     * @param addresses refers to an array of addresses\n     *                     [0]  = minter account who can mint datatokens (can have multiple minters)\n     *                     [1]  = feeManager initial feeManager for this DT\n     *                     [2]  = publishing Market Address\n     *                     [3]  = publishing Market Fee Token\n     * @param uints  refers to an array of uints\n     *                     [0] = cap_ the total ERC20 cap\n     *                     [1] = publishing Market Fee Amount\n     * @param bytess  refers to an array of bytes\n     *                     Currently not used, usefull for future templates\n     \n     @return ERC20 token address\n     */\n\n    function createERC20(\n        uint256 _templateIndex,\n        string[] calldata strings,\n        address[] calldata addresses,\n        uint256[] calldata uints,\n        bytes[] calldata bytess\n    ) external nonReentrant returns (address ) {\n        require(\n            permissions[msg.sender].deployERC20,\n            \"ERC721Template: NOT ERC20DEPLOYER_ROLE\"\n        );\n\n        address token = IFactory(_tokenFactory).createToken(\n            _templateIndex,\n            strings,\n            addresses,\n            uints,\n            bytess\n        );\n\n        deployedERC20[token] = true;\n\n        deployedERC20List.push(token);\n        return token;\n    }\n\n    /**\n     * @dev isERC20Deployer\n     * @return true if the account has ERC20 Deploy role\n     */\n    function isERC20Deployer(address account) external view returns (bool) {\n        return permissions[account].deployERC20;\n    }\n    \n    /**\n     * @dev name\n     *      It returns the token name.\n     * @return Datatoken name.\n     */\n    function name() public view override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev symbol\n     *      It returns the token symbol.\n     * @return Datatoken symbol.\n     */\n    function symbol() public view override returns (string memory) {\n        return _symbol;\n    }\n\n      /**\n     * @dev isInitialized\n     *      It checks whether the contract is initialized.\n     * @return true if the contract is initialized.\n     */\n\n    function isInitialized() external view returns (bool) {\n        return initialized;\n    }\n\n    /**\n     * @dev addManager\n     *      Only NFT Owner can add a new manager (Roles admin)\n     *      There can be multiple minters\n     * @param _managerAddress new manager address\n     */\n\n    function addManager(address _managerAddress) external onlyNFTOwner {\n        _addManager(_managerAddress);\n    }\n\n    /**\n     * @dev removeManager\n     *      Only NFT Owner can remove a manager (Roles admin)\n     *      There can be multiple minters\n     * @param _managerAddress new manager address\n     */\n\n\n    function removeManager(address _managerAddress) external onlyNFTOwner {\n        _removeManager(_managerAddress);\n    }\n\n     /**\n     * @notice Executes any other smart contract. \n                Is only callable by the Manager.\n     *\n     *\n     * @param _operation the operation to execute: CALL = 0; DELEGATECALL = 1; CREATE2 = 2; CREATE = 3;\n     * @param _to the smart contract or address to interact with. \n     *          `_to` will be unused if a contract is created (operation 2 and 3)\n     * @param _value the value of ETH to transfer\n     * @param _data the call data, or the contract data to deploy\n    **/\n\n    function executeCall(\n        uint256 _operation,\n        address _to,\n        uint256 _value,\n        bytes calldata _data\n    ) external payable onlyManager {\n        execute(_operation, _to, _value, _data);\n    }\n\n\n      /**\n     * @dev setNewData\n     *       ONLY user with store permission (assigned by Manager) can call it\n            This function allows to set any arbitrary key-value into the 725 standard\n     *      There can be multiple store updaters\n     * @param _key key (see 725 for standard (keccak256)) \n        Data keys, should be the keccak256 hash of a type name.\n        e.g. keccak256('ERCXXXMyNewKeyType') is 0x6935a24ea384927f250ee0b954ed498cd9203fc5d2bf95c735e52e6ca675e047\n\n     * @param _value data to store at that key\n     */\n\n\n    function setNewData(bytes32 _key, bytes calldata _value) external {\n        require(\n            permissions[msg.sender].store,\n            \"ERC721Template: NOT STORE UPDATER\"\n        );\n        setData(_key, _value);\n    }\n\n       /**\n     * @dev setDataERC20\n     *      ONLY callable FROM the ERC20Template and BY the corresponding ERC20Deployer\n            This function allows to store data with a preset key (keccak256(ERC20Address)) into NFT 725 Store\n     * @param _key keccak256(ERC20Address) see setData into ERC20Template.sol\n     * @param _value data to store at that key\n     */\n\n\n    function setDataERC20(bytes32 _key, bytes calldata _value) external {\n        require(\n            deployedERC20[msg.sender],\n            \"ERC721Template: NOT ERC20 Contract\"\n        );\n        setData(_key, _value);\n    }\n\n\n    /**\n     * @dev cleanPermissions\n     *      Only NFT Owner  can call it.\n     *      This function allows to remove all ROLES at erc721 level: \n     *              Managers, ERC20Deployer, MetadataUpdater, StoreUpdater\n     *      Permissions at erc20 level stay.\n     */\n    \n    function cleanPermissions() external onlyNFTOwner {\n        _cleanPermissions();\n        //make sure that owner still has permissions\n        _addManager(ownerOf(1));\n    }\n\n\n  \n     /**\n     * @dev transferFrom \n     *      Used for transferring the NFT, can be used by an approved relayer\n            Even if we only have 1 tokenId, we leave it open as arguments for being a standard ERC721\n            @param from nft owner\n            @param to nft receiver\n            @param tokenId tokenId (1)\n     */\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external {\n        require(transferable, \"ERC721Template: Is non transferable\");\n        require(tokenId == 1, \"ERC721Template: Cannot transfer this tokenId\");\n        _cleanERC20Permissions(getAddressLength(deployedERC20List));\n        _cleanPermissions();\n        _addManager(to);\n          // we add the nft owner to all other roles (so that doesn't need to make multiple transactions)\n        Roles storage user = permissions[to];\n        user.updateMetadata = true;\n        user.deployERC20 = true;\n        user.store = true;\n        // no need to push to auth since it has been already added in _addManager()\n        _transferFrom(from, to, tokenId);\n        \n    }\n\n    /**\n     * @dev safeTransferFrom \n     *      Used for transferring the NFT, can be used by an approved relayer\n            Even if we only have 1 tokenId, we leave it open as arguments for being a standard ERC721\n            @param from nft owner\n            @param to nft receiver\n            @param tokenId tokenId (1)\n     */\n\n    function safeTransferFrom(address from, address to,uint256 tokenId) external {\n        require(transferable, \"ERC721Template: Is non transferable\");\n        require(tokenId == 1, \"ERC721Template: Cannot transfer this tokenId\");\n        _cleanERC20Permissions(getAddressLength(deployedERC20List));\n        _cleanPermissions();\n        _addManager(to);\n        // we add the nft owner to all other roles (so that doesn't need to make multiple transactions)\n        Roles storage user = permissions[to];\n        user.updateMetadata = true;\n        user.deployERC20 = true;\n        user.store = true;\n        // no need to push to auth since it has been already added in _addManager()\n        _safeTransferFrom(from, to, tokenId, \"\");\n        \n    }\n\n      /**\n     * @dev getAddressLength\n     *      It returns the array lentgh\n            @param array address array we want to get length\n     * @return length\n     */\n\n\n    function getAddressLength(address[] memory array)\n        private\n        pure\n        returns (uint256)\n    {\n        return array.length;\n    }\n\n      /**\n     * @dev _cleanERC20Permissions\n     *      Internal function used to clean permissions at ERC20 level when transferring the NFT\n            @param length lentgh of the deployedERC20List \n     */\n\n    function _cleanERC20Permissions(uint256 length) internal {\n        for (uint256 i = 0; i < length; i++) {\n            IERC20Template(deployedERC20List[i]).cleanFrom721();\n        }\n    }\n\n    /**\n     * @dev getId\n     *      Return template id in case we need different ABIs. \n     *      If you construct your own template, please make sure to change the hardcoded value\n     */\n    function getId() pure public returns (uint8) {\n        return 1;\n    }\n     /**\n     * @dev fallback function\n     *      this is a default fallback function in which receives\n     *      the collected ether.\n     */\n    fallback() external payable {}\n\n    /**\n     * @dev receive function\n     *      this is a default receive function in which receives\n     *      the collected ether.\n     */\n    receive() external payable {}\n\n    /**\n     * @dev withdrawETH\n     *      transfers all the accumlated ether the ownerOf\n     */\n    function withdrawETH() \n        external \n        payable\n    {\n        payable(ownerOf(1)).transfer(address(this).balance);\n    }\n\n    function getTokensList() external view returns (address[] memory) {\n        return deployedERC20List;\n    }\n    \n    function isDeployed(address datatoken) external view returns (bool) {\n        return deployedERC20[datatoken];\n    }\n\n    function setBaseURI(string memory _baseURI) external onlyNFTOwner {\n            defaultBaseURI = _baseURI;\n    }\n}", "sourceMap": "652:20896:44:-:0;;;;;;;;;;;;-1:-1:-1;3689:155:50;;;;;;;;;;;-1:-1:-1;;;3689:155:50;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3689:155:50;;;;;759:40:49;-1:-1:-1;;;759:18:49;:40::i;:::-;3755:13:50;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3778:17:50;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;3805:23:50;:21;:23::i;:::-;-1:-1:-1;1334:41:60;;-1:-1:-1;;;;1334:18:60;:41::i;:::-;1385;-1:-1:-1;;;1385:18:60;:41::i;:::-;1637:1:2;1742:7;:22;652:20896:44;;1498:198:49;-1:-1:-1;;;;;;1581:25:49;;;;;1573:66;;;;-1:-1:-1;;;1573:66:49;;216:2:75;1573:66:49;;;198:21:75;255:2;235:18;;;228:30;294;274:18;;;267:58;342:18;;1573:66:49;;;;;;;;-1:-1:-1;;;;;;1649:33:49;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1649:40:49;1685:4;1649:40;;;1498:198::o;3850:296:50:-;3979:40;-1:-1:-1;;;3979:18:50;:40::i;:::-;4029:49;-1:-1:-1;;;4029:18:50;:49::i;:::-;4088:51;-1:-1:-1;;;4088:18:50;:51::i;:::-;3850:296::o;652:20896:44:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;652:20896:44;;;-1:-1:-1;652:20896:44;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;371:380:75;450:1;446:12;;;;493;;;514:61;;568:4;560:6;556:17;546:27;;514:61;621:2;613:6;610:14;590:18;587:38;584:161;;;667:10;662:3;658:20;655:1;648:31;702:4;699:1;692:15;730:4;727:1;720:15;584:161;;371:380;;;:::o;:::-;652:20896:44;;;;;;", "sourcePath": "contracts/oceanv4/templates/ERC721Template.sol", "type": "contract", "deployment": {"address": "0x471817de04FAa9B616ED7644117d957439717bF9", "chainid": "80001", "blockHeight": 35336622}}