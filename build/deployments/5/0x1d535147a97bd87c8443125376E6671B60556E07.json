{"abi": [{"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "AddedMinter", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "AddedPaymentManager", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "CleanedPermissions", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "consumeMarketFeeAddress", "type": "address"}, {"indexed": true, "internalType": "address", "name": "consumeMarketFeeToken", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "consumeMarketFeeAmount", "type": "uint256"}], "name": "ConsumeMarketFee", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "currentMinter", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newMinter", "type": "address"}], "name": "MinterApproved", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "currentMinter", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newMinter", "type": "address"}], "name": "MinterProposed", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "dispenserContract", "type": "address"}], "name": "NewDispenser", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "exchangeId", "type": "bytes32"}, {"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": false, "internalType": "address", "name": "exchangeContract", "type": "address"}, {"indexed": true, "internalType": "address", "name": "baseToken", "type": "address"}], "name": "NewFixedRate", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "caller", "type": "address"}, {"indexed": true, "internalType": "address", "name": "_newPaymentCollector", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "NewPaymentCollector", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "poolAddress", "type": "address"}, {"indexed": false, "internalType": "address", "name": "ssContract", "type": "address"}, {"indexed": false, "internalType": "address", "name": "baseTokenAddress", "type": "address"}], "name": "NewPool", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "providerAddress", "type": "address"}, {"indexed": true, "internalType": "address", "name": "consumerAddress", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "orderTxId", "type": "bytes32"}, {"indexed": false, "internalType": "bytes", "name": "providerData", "type": "bytes"}, {"indexed": false, "internalType": "bytes", "name": "providerSignature", "type": "bytes"}, {"indexed": false, "internalType": "bytes", "name": "consumerData", "type": "bytes"}, {"indexed": false, "internalType": "bytes", "name": "consumerSignature", "type": "bytes"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "OrderExecuted", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "orderTxId", "type": "bytes32"}, {"indexed": false, "internalType": "address", "name": "caller", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "number", "type": "uint256"}], "name": "OrderReused", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "consumer", "type": "address"}, {"indexed": false, "internalType": "address", "name": "payer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "serviceIndex", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": true, "internalType": "address", "name": "publishMarketAddress", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "OrderStarted", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "providerFeeAddress", "type": "address"}, {"indexed": true, "internalType": "address", "name": "providerFeeToken", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "providerFeeAmount", "type": "uint256"}, {"indexed": false, "internalType": "bytes", "name": "providerData", "type": "bytes"}, {"indexed": false, "internalType": "uint8", "name": "v", "type": "uint8"}, {"indexed": false, "internalType": "bytes32", "name": "r", "type": "bytes32"}, {"indexed": false, "internalType": "bytes32", "name": "s", "type": "bytes32"}, {"indexed": false, "internalType": "uint256", "name": "validUntil", "type": "uint256"}], "name": "ProviderFee", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "PublishMarketFeeAddress", "type": "address"}, {"indexed": true, "internalType": "address", "name": "PublishMarketFeeToken", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "PublishMarketFeeAmount", "type": "uint256"}], "name": "PublishMarketFee", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "caller", "type": "address"}, {"indexed": false, "internalType": "address", "name": "PublishMarketFeeAddress", "type": "address"}, {"indexed": false, "internalType": "address", "name": "PublishMarketFeeToken", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "PublishMarketFeeAmount", "type": "uint256"}], "name": "PublishMarketFeeChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "RemovedMinter", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": true, "internalType": "address", "name": "signer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "RemovedPaymentManager", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "datatokenAddress", "type": "address"}, {"indexed": true, "internalType": "address", "name": "publisherAddress", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "vestingEndBlock", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "totalVestingAmount", "type": "uint256"}], "name": "VestingCreated", "type": "event"}, {"stateMutability": "payable", "type": "fallback"}, {"inputs": [], "name": "BASE", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "PERMIT_TYPEHASH", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_minter", "type": "address"}], "name": "addMinter", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_paymentManager", "type": "address"}], "name": "addPaymentManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "authERC20", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "burn", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "burnFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "cap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "cleanFrom721", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "cleanPermissions", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_dispenser", "type": "address"}, {"internalType": "uint256", "name": "maxTokens", "type": "uint256"}, {"internalType": "uint256", "name": "maxBalance", "type": "uint256"}, {"internalType": "bool", "name": "withMint", "type": "bool"}, {"internalType": "address", "name": "allowedSwapper", "type": "address"}], "name": "createDispenser", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "fixedPriceAddress", "type": "address"}, {"internalType": "address[]", "name": "addresses", "type": "address[]"}, {"internalType": "uint256[]", "name": "uints", "type": "uint256[]"}], "name": "createFixedRate", "outputs": [{"internalType": "bytes32", "name": "exchangeId", "type": "bytes32"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "subtractedValue", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256[]", "name": "ssParams", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "swapFees", "type": "uint256[]"}, {"internalType": "address[]", "name": "addresses", "type": "address[]"}], "name": "deployPool", "outputs": [{"internalType": "address", "name": "pool", "type": "address"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "getDispensers", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getERC721Address", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getFixedRates", "outputs": [{"components": [{"internalType": "address", "name": "contractAddress", "type": "address"}, {"internalType": "bytes32", "name": "id", "type": "bytes32"}], "internalType": "struct ERC20Template.fixedRate[]", "name": "", "type": "tuple[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getId", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getPaymentCollector", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "user", "type": "address"}], "name": "getPermissions", "outputs": [{"components": [{"internalType": "bool", "name": "minter", "type": "bool"}, {"internalType": "bool", "name": "paymentManager", "type": "bool"}], "internalType": "struct ERC20Roles.RolesERC20", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPools", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPublishingMarketFee", "outputs": [{"internalType": "address", "name": "", "type": "address"}, {"internalType": "address", "name": "", "type": "address"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string[]", "name": "strings_", "type": "string[]"}, {"internalType": "address[]", "name": "addresses_", "type": "address[]"}, {"internalType": "address[]", "name": "factoryAddresses_", "type": "address[]"}, {"internalType": "uint256[]", "name": "uints_", "type": "uint256[]"}, {"internalType": "bytes[]", "name": "bytes_", "type": "bytes[]"}], "name": "initialize", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "user", "type": "address"}], "name": "isERC20Deployer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "isInitialized", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "isMinter", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}], "name": "mint", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "orderTxId", "type": "bytes32"}, {"internalType": "bytes", "name": "providerData", "type": "bytes"}, {"internalType": "bytes", "name": "providerSignature", "type": "bytes"}, {"internalType": "bytes", "name": "consumerData", "type": "bytes"}, {"internalType": "bytes", "name": "consumerSignature", "type": "bytes"}, {"internalType": "address", "name": "consumerAddress", "type": "address"}], "name": "orderExecuted", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "permissions", "outputs": [{"internalType": "bool", "name": "minter", "type": "bool"}, {"internalType": "bool", "name": "paymentManager", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_minter", "type": "address"}], "name": "removeMinter", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_paymentManager", "type": "address"}], "name": "removePaymentManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "orderTxId", "type": "bytes32"}, {"components": [{"internalType": "address", "name": "providerFeeAddress", "type": "address"}, {"internalType": "address", "name": "providerFeeToken", "type": "address"}, {"internalType": "uint256", "name": "providerFeeAmount", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}, {"internalType": "uint256", "name": "validUntil", "type": "uint256"}, {"internalType": "bytes", "name": "providerData", "type": "bytes"}], "internalType": "struct ERC20Template.providerFee", "name": "_providerFee", "type": "tuple"}], "name": "reuseOrder", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "router", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes", "name": "_value", "type": "bytes"}], "name": "setData", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_newPaymentCollector", "type": "address"}], "name": "setPaymentCollector", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_publishMarketFeeAddress", "type": "address"}, {"internalType": "address", "name": "_publishMarketFeeToken", "type": "address"}, {"internalType": "uint256", "name": "_publishMarketFeeAmount", "type": "uint256"}], "name": "setPublishingMarketFee", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "consumer", "type": "address"}, {"internalType": "uint256", "name": "serviceIndex", "type": "uint256"}, {"components": [{"internalType": "address", "name": "providerFeeAddress", "type": "address"}, {"internalType": "address", "name": "providerFeeToken", "type": "address"}, {"internalType": "uint256", "name": "providerFeeAmount", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}, {"internalType": "uint256", "name": "validUntil", "type": "uint256"}, {"internalType": "bytes", "name": "providerData", "type": "bytes"}], "internalType": "struct ERC20Template.providerFee", "name": "_providerFee", "type": "tuple"}, {"components": [{"internalType": "address", "name": "consumeMarketFeeAddress", "type": "address"}, {"internalType": "address", "name": "consumeMarketFeeToken", "type": "address"}, {"internalType": "uint256", "name": "consumeMarketFeeAmount", "type": "uint256"}], "internalType": "struct ERC20Template.consumeMarketFee", "name": "_consumeMarketFee", "type": "tuple"}], "name": "startOrder", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "withdrawETH", "outputs": [], "stateMutability": "payable", "type": "function"}, {"stateMutability": "payable", "type": "receive"}], "allSourcePaths": {"11": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol", "2": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol", "21": "contracts/oceanv4/interfaces/IDispenser.sol", "24": "contracts/oceanv4/interfaces/IERC721Template.sol", "28": "contracts/oceanv4/interfaces/IFactoryRouter.sol", "29": "contracts/oceanv4/interfaces/IFixedRateExchange.sol", "3": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol", "4": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol", "42": "contracts/oceanv4/templates/ERC20Template.sol", "46": "contracts/oceanv4/utils/ERC20Roles.sol", "5": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol", "6": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol", "7": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol", "8": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol", "9": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol"}, "ast": {"absolutePath": "contracts/oceanv4/templates/ERC20Template.sol", "exportedSymbols": {"Address": [29881], "Context": [29252], "ERC20": [29058], "ERC20Burnable": [29120], "ERC20Roles": [21585], "ERC20Template": [17877], "IDispenser": [3001], "IERC20": [27843], "IERC20Metadata": [29906], "IERC20Template": [3402], "IERC721Template": [3697], "IFactoryRouter": [4096], "IFixedRateExchange": [4270], "ReentrancyGuard": [27765], "SafeERC20": [28067], "SafeMath": [28379]}, "id": 17878, "license": "(Apache-2.0 AND CC-BY-4.0)", "nodeType": "SourceUnit", "nodes": [{"id": 15851, "literals": ["solidity", "0.8", ".12"], "nodeType": "PragmaDirective", "src": "0:23:42"}, {"absolutePath": "contracts/oceanv4/interfaces/IERC721Template.sol", "file": "../interfaces/IERC721Template.sol", "id": 15852, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 3698, "src": "186:43:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/interfaces/IERC20Template.sol", "file": "../interfaces/IERC20Template.sol", "id": 15853, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 3403, "src": "230:42:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/interfaces/IFactoryRouter.sol", "file": "../interfaces/IFactoryRouter.sol", "id": 15854, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 4097, "src": "273:42:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/interfaces/IFixedRateExchange.sol", "file": "../interfaces/IFixedRateExchange.sol", "id": 15855, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 4271, "src": "316:46:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/interfaces/IDispenser.sol", "file": "../interfaces/IDispenser.sol", "id": 15856, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 3002, "src": "363:38:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol", "id": 15857, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 29059, "src": "402:83:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol", "id": 15858, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 29121, "src": "486:102:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol", "id": 15859, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 27844, "src": "589:84:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol", "id": 15860, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 28380, "src": "674:85:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol", "id": 15861, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 28068, "src": "761:93:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol", "id": 15862, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 27766, "src": "855:90:42", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/oceanv4/utils/ERC20Roles.sol", "file": "../utils/ERC20Roles.sol", "id": 15863, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17878, "sourceUnit": 21586, "src": "946:33:42", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"arguments": [{"hexValue": "74657374", "id": 15866, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1214:6:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658", "typeString": "literal_string \"test\""}, "value": "test"}, {"hexValue": "7465737453796d626f6c", "id": 15867, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1222:12:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6a2f03a1dba5e9dbeb18b55ac2076e1af9f5f2b7411cb1dbef111c70934e1686", "typeString": "literal_string \"testSymbol\""}, "value": "testSymbol"}], "baseName": {"id": 15865, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 29058, "src": "1208:5:42"}, "id": 15868, "nodeType": "InheritanceSpecifier", "src": "1208:27:42"}, {"baseName": {"id": 15869, "name": "ERC20Roles", "nodeType": "IdentifierPath", "referencedDeclaration": 21585, "src": "1241:10:42"}, "id": 15870, "nodeType": "InheritanceSpecifier", "src": "1241:10:42"}, {"baseName": {"id": 15871, "name": "ERC20Burnable", "nodeType": "IdentifierPath", "referencedDeclaration": 29120, "src": "1257:13:42"}, "id": 15872, "nodeType": "InheritanceSpecifier", "src": "1257:13:42"}, {"baseName": {"id": 15873, "name": "ReentrancyGuard", "nodeType": "IdentifierPath", "referencedDeclaration": 27765, "src": "1276:15:42"}, "id": 15874, "nodeType": "InheritanceSpecifier", "src": "1276:15:42"}], "canonicalName": "ERC20Template", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 15864, "nodeType": "StructuredDocumentation", "src": "981:196:42", "text": " @title DatatokenTemplate\n @dev DatatokenTemplate is an ERC20 compliant token template\n      Used by the factory contract as a bytecode reference to\n      deploy new Datatokens."}, "fullyImplemented": true, "id": 17877, "linearizedBaseContracts": [17877, 27765, 29120, 21585, 29058, 29906, 27843, 29252], "name": "ERC20Template", "nameLocation": "1187:13:42", "nodeType": "ContractDefinition", "nodes": [{"id": 15877, "libraryName": {"id": 15875, "name": "SafeMath", "nodeType": "IdentifierPath", "referencedDeclaration": 28379, "src": "1304:8:42"}, "nodeType": "UsingForDirective", "src": "1298:27:42", "typeName": {"id": 15876, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1317:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 15881, "libraryName": {"id": 15878, "name": "SafeERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 28067, "src": "1336:9:42"}, "nodeType": "UsingForDirective", "src": "1330:27:42", "typeName": {"id": 15880, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 15879, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 27843, "src": "1350:6:42"}, "referencedDeclaration": 27843, "src": "1350:6:42", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27843", "typeString": "contract IERC20"}}}, {"constant": false, "id": 15883, "mutability": "mutable", "name": "_name", "nameLocation": "1378:5:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1363:20:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 15882, "name": "string", "nodeType": "ElementaryTypeName", "src": "1363:6:42", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 15885, "mutability": "mutable", "name": "_symbol", "nameLocation": "1404:7:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1389:22:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 15884, "name": "string", "nodeType": "ElementaryTypeName", "src": "1389:6:42", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 15887, "mutability": "mutable", "name": "_cap", "nameLocation": "1433:4:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1417:20:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15886, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1417:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": true, "id": 15890, "mutability": "constant", "name": "_decimals", "nameLocation": "1466:9:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1443:37:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 15888, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "1443:5:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "value": {"hexValue": "3138", "id": 15889, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1478:2:42", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "visibility": "private"}, {"constant": false, "id": 15893, "mutability": "mutable", "name": "initialized", "nameLocation": "1499:11:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1486:32:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 15891, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1486:4:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": {"hexValue": "66616c7365", "id": 15892, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1513:5:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "visibility": "private"}, {"constant": false, "id": 15895, "mutability": "mutable", "name": "_erc721Address", "nameLocation": "1540:14:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1524:30:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15894, "name": "address", "nodeType": "ElementaryTypeName", "src": "1524:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "private"}, {"constant": false, "id": 15897, "mutability": "mutable", "name": "paymentCollector", "nameLocation": "1576:16:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1560:32:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15896, "name": "address", "nodeType": "ElementaryTypeName", "src": "1560:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "private"}, {"constant": false, "id": 15899, "mutability": "mutable", "name": "publishMarketFeeAddress", "nameLocation": "1614:23:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1598:39:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15898, "name": "address", "nodeType": "ElementaryTypeName", "src": "1598:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "private"}, {"constant": false, "id": 15901, "mutability": "mutable", "name": "publishMarketFeeToken", "nameLocation": "1659:21:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1643:37:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15900, "name": "address", "nodeType": "ElementaryTypeName", "src": "1643:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "private"}, {"constant": false, "id": 15903, "mutability": "mutable", "name": "publishMarketFeeAmount", "nameLocation": "1702:22:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1686:38:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15902, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1686:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": true, "functionSelector": "ec342ad0", "id": 15906, "mutability": "constant", "name": "BASE", "nameLocation": "1754:4:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1730:35:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15904, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1730:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "31653138", "id": 15905, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1761:4:42", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}, "visibility": "public"}, {"constant": false, "functionSelector": "3644e515", "id": 15908, "mutability": "mutable", "name": "DOMAIN_SEPARATOR", "nameLocation": "1815:16:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1800:31:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 15907, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1800:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "public"}, {"constant": true, "functionSelector": "30adf81f", "id": 15911, "mutability": "constant", "name": "PERMIT_TYPEHASH", "nameLocation": "1965:15:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "1941:116:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 15909, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1941:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": {"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339", "id": 15910, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1991:66:42", "typeDescriptions": {"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1", "typeString": "int_const 4995...(69 digits omitted)...3241"}, "value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"}, "visibility": "public"}, {"constant": false, "functionSelector": "7ecebe00", "id": 15915, "mutability": "mutable", "name": "nonces", "nameLocation": "2099:6:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "2064:41:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 15914, "keyType": {"id": 15912, "name": "address", "nodeType": "ElementaryTypeName", "src": "2072:7:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "2064:27:42", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 15913, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2083:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "f887ea40", "id": 15917, "mutability": "mutable", "name": "router", "nameLocation": "2127:6:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "2112:21:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15916, "name": "address", "nodeType": "ElementaryTypeName", "src": "2112:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "id": 15920, "mutability": "mutable", "name": "deployedPools", "nameLocation": "2149:13:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "2139:23:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[]"}, "typeName": {"baseType": {"id": 15918, "name": "address", "nodeType": "ElementaryTypeName", "src": "2139:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 15919, "nodeType": "ArrayTypeName", "src": "2139:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"canonicalName": "ERC20Template.fixedRate", "id": 15925, "members": [{"constant": false, "id": 15922, "mutability": "mutable", "name": "contractAddress", "nameLocation": "2202:15:42", "nodeType": "VariableDeclaration", "scope": 15925, "src": "2194:23:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15921, "name": "address", "nodeType": "ElementaryTypeName", "src": "2194:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15924, "mutability": "mutable", "name": "id", "nameLocation": "2235:2:42", "nodeType": "VariableDeclaration", "scope": 15925, "src": "2227:10:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 15923, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2227:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "name": "fixedRate", "nameLocation": "2175:9:42", "nodeType": "StructDefinition", "scope": 17877, "src": "2168:76:42", "visibility": "public"}, {"constant": false, "id": 15929, "mutability": "mutable", "name": "fixedRateExchanges", "nameLocation": "2261:18:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "2249:30:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate[]"}, "typeName": {"baseType": {"id": 15927, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 15926, "name": "fixedRate", "nodeType": "IdentifierPath", "referencedDeclaration": 15925, "src": "2249:9:42"}, "referencedDeclaration": 15925, "src": "2249:9:42", "typeDescriptions": {"typeIdentifier": "t_struct$_fixedRate_$15925_storage_ptr", "typeString": "struct ERC20Template.fixedRate"}}, "id": 15928, "nodeType": "ArrayTypeName", "src": "2249:11:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage_ptr", "typeString": "struct ERC20Template.fixedRate[]"}}, "visibility": "internal"}, {"constant": false, "id": 15932, "mutability": "mutable", "name": "dispensers", "nameLocation": "2295:10:42", "nodeType": "VariableDeclaration", "scope": 17877, "src": "2285:20:42", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[]"}, "typeName": {"baseType": {"id": 15930, "name": "address", "nodeType": "ElementaryTypeName", "src": "2285:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 15931, "nodeType": "ArrayTypeName", "src": "2285:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"canonicalName": "ERC20Template.providerFee", "id": 15949, "members": [{"constant": false, "id": 15934, "mutability": "mutable", "name": "providerFeeAddress", "nameLocation": "2348:18:42", "nodeType": "VariableDeclaration", "scope": 15949, "src": "2340:26:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15933, "name": "address", "nodeType": "ElementaryTypeName", "src": "2340:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15936, "mutability": "mutable", "name": "providerFeeToken", "nameLocation": "2384:16:42", "nodeType": "VariableDeclaration", "scope": 15949, "src": "2376:24:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15935, "name": "address", "nodeType": "ElementaryTypeName", "src": "2376:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15938, "mutability": "mutable", "name": "providerFeeAmount", "nameLocation": "2443:17:42", "nodeType": "VariableDeclaration", "scope": 15949, "src": "2435:25:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15937, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2435:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 15940, "mutability": "mutable", "name": "v", "nameLocation": "2515:1:42", "nodeType": "VariableDeclaration", "scope": 15949, "src": "2509:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 15939, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "2509:5:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 15942, "mutability": "mutable", "name": "r", "nameLocation": "2566:1:42", "nodeType": "VariableDeclaration", "scope": 15949, "src": "2558:9:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 15941, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2558:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 15944, "mutability": "mutable", "name": "s", "nameLocation": "2617:1:42", "nodeType": "VariableDeclaration", "scope": 15949, "src": "2609:9:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 15943, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2609:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 15946, "mutability": "mutable", "name": "validUntil", "nameLocation": "2668:10:42", "nodeType": "VariableDeclaration", "scope": 15949, "src": "2660:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15945, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2660:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 15948, "mutability": "mutable", "name": "providerData", "nameLocation": "2733:12:42", "nodeType": "VariableDeclaration", "scope": 15949, "src": "2727:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}, "typeName": {"id": 15947, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2727:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "name": "providerFee", "nameLocation": "2319:11:42", "nodeType": "StructDefinition", "scope": 17877, "src": "2312:470:42", "visibility": "public"}, {"canonicalName": "ERC20Template.consumeMarketFee", "id": 15956, "members": [{"constant": false, "id": 15951, "mutability": "mutable", "name": "consumeMarketFeeAddress", "nameLocation": "2829:23:42", "nodeType": "VariableDeclaration", "scope": 15956, "src": "2821:31:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15950, "name": "address", "nodeType": "ElementaryTypeName", "src": "2821:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15953, "mutability": "mutable", "name": "consumeMarketFeeToken", "nameLocation": "2870:21:42", "nodeType": "VariableDeclaration", "scope": 15956, "src": "2862:29:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15952, "name": "address", "nodeType": "ElementaryTypeName", "src": "2862:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15955, "mutability": "mutable", "name": "consumeMarketFeeAmount", "nameLocation": "2969:22:42", "nodeType": "VariableDeclaration", "scope": 15956, "src": "2961:30:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15954, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2961:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "consumeMarketFee", "nameLocation": "2795:16:42", "nodeType": "StructDefinition", "scope": 17877, "src": "2788:259:42", "visibility": "public"}, {"anonymous": false, "id": 15972, "name": "OrderStarted", "nameLocation": "3059:12:42", "nodeType": "EventDefinition", "parameters": {"id": 15971, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 15958, "indexed": true, "mutability": "mutable", "name": "consumer", "nameLocation": "3097:8:42", "nodeType": "VariableDeclaration", "scope": 15972, "src": "3081:24:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15957, "name": "address", "nodeType": "ElementaryTypeName", "src": "3081:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15960, "indexed": false, "mutability": "mutable", "name": "payer", "nameLocation": "3123:5:42", "nodeType": "VariableDeclaration", "scope": 15972, "src": "3115:13:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15959, "name": "address", "nodeType": "ElementaryTypeName", "src": "3115:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15962, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "3146:6:42", "nodeType": "VariableDeclaration", "scope": 15972, "src": "3138:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15961, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3138:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 15964, "indexed": false, "mutability": "mutable", "name": "serviceIndex", "nameLocation": "3170:12:42", "nodeType": "VariableDeclaration", "scope": 15972, "src": "3162:20:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15963, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3162:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 15966, "indexed": false, "mutability": "mutable", "name": "timestamp", "nameLocation": "3200:9:42", "nodeType": "VariableDeclaration", "scope": 15972, "src": "3192:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15965, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3192:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 15968, "indexed": true, "mutability": "mutable", "name": "publishMarketAddress", "nameLocation": "3235:20:42", "nodeType": "VariableDeclaration", "scope": 15972, "src": "3219:36:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15967, "name": "address", "nodeType": "ElementaryTypeName", "src": "3219:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15970, "indexed": false, "mutability": "mutable", "name": "blockNumber", "nameLocation": "3273:11:42", "nodeType": "VariableDeclaration", "scope": 15972, "src": "3265:19:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15969, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3265:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3071:219:42"}, "src": "3053:238:42"}, {"anonymous": false, "id": 15982, "name": "OrderReused", "nameLocation": "3303:11:42", "nodeType": "EventDefinition", "parameters": {"id": 15981, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 15974, "indexed": false, "mutability": "mutable", "name": "orderTxId", "nameLocation": "3336:9:42", "nodeType": "VariableDeclaration", "scope": 15982, "src": "3328:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 15973, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3328:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 15976, "indexed": false, "mutability": "mutable", "name": "caller", "nameLocation": "3367:6:42", "nodeType": "VariableDeclaration", "scope": 15982, "src": "3359:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15975, "name": "address", "nodeType": "ElementaryTypeName", "src": "3359:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15978, "indexed": false, "mutability": "mutable", "name": "timestamp", "nameLocation": "3395:9:42", "nodeType": "VariableDeclaration", "scope": 15982, "src": "3387:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15977, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3387:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 15980, "indexed": false, "mutability": "mutable", "name": "number", "nameLocation": "3426:6:42", "nodeType": "VariableDeclaration", "scope": 15982, "src": "3418:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15979, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3418:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3314:124:42"}, "src": "3297:142:42"}, {"anonymous": false, "id": 16002, "name": "OrderExecuted", "nameLocation": "3451:13:42", "nodeType": "EventDefinition", "parameters": {"id": 16001, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 15984, "indexed": true, "mutability": "mutable", "name": "providerAddress", "nameLocation": "3491:15:42", "nodeType": "VariableDeclaration", "scope": 16002, "src": "3475:31:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15983, "name": "address", "nodeType": "ElementaryTypeName", "src": "3475:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15986, "indexed": true, "mutability": "mutable", "name": "consumerAddress", "nameLocation": "3532:15:42", "nodeType": "VariableDeclaration", "scope": 16002, "src": "3516:31:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15985, "name": "address", "nodeType": "ElementaryTypeName", "src": "3516:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 15988, "indexed": false, "mutability": "mutable", "name": "orderTxId", "nameLocation": "3565:9:42", "nodeType": "VariableDeclaration", "scope": 16002, "src": "3557:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 15987, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3557:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 15990, "indexed": false, "mutability": "mutable", "name": "providerData", "nameLocation": "3590:12:42", "nodeType": "VariableDeclaration", "scope": 16002, "src": "3584:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 15989, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3584:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 15992, "indexed": false, "mutability": "mutable", "name": "providerSignature", "nameLocation": "3618:17:42", "nodeType": "VariableDeclaration", "scope": 16002, "src": "3612:23:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 15991, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3612:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 15994, "indexed": false, "mutability": "mutable", "name": "consumerData", "nameLocation": "3651:12:42", "nodeType": "VariableDeclaration", "scope": 16002, "src": "3645:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 15993, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3645:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 15996, "indexed": false, "mutability": "mutable", "name": "consumerSignature", "nameLocation": "3679:17:42", "nodeType": "VariableDeclaration", "scope": 16002, "src": "3673:23:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 15995, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3673:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 15998, "indexed": false, "mutability": "mutable", "name": "timestamp", "nameLocation": "3714:9:42", "nodeType": "VariableDeclaration", "scope": 16002, "src": "3706:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15997, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3706:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 16000, "indexed": false, "mutability": "mutable", "name": "blockNumber", "nameLocation": "3741:11:42", "nodeType": "VariableDeclaration", "scope": 16002, "src": "3733:19:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15999, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3733:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3464:294:42"}, "src": "3445:314:42"}, {"anonymous": false, "id": 16012, "name": "PublishMarketFeeChanged", "nameLocation": "3771:23:42", "nodeType": "EventDefinition", "parameters": {"id": 16011, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16004, "indexed": false, "mutability": "mutable", "name": "caller", "nameLocation": "3812:6:42", "nodeType": "VariableDeclaration", "scope": 16012, "src": "3804:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16003, "name": "address", "nodeType": "ElementaryTypeName", "src": "3804:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16006, "indexed": false, "mutability": "mutable", "name": "PublishMarketFeeAddress", "nameLocation": "3836:23:42", "nodeType": "VariableDeclaration", "scope": 16012, "src": "3828:31:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16005, "name": "address", "nodeType": "ElementaryTypeName", "src": "3828:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16008, "indexed": false, "mutability": "mutable", "name": "PublishMarketFeeToken", "nameLocation": "3877:21:42", "nodeType": "VariableDeclaration", "scope": 16012, "src": "3869:29:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16007, "name": "address", "nodeType": "ElementaryTypeName", "src": "3869:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16010, "indexed": false, "mutability": "mutable", "name": "PublishMarketFeeAmount", "nameLocation": "3916:22:42", "nodeType": "VariableDeclaration", "scope": 16012, "src": "3908:30:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16009, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3908:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3794:150:42"}, "src": "3765:180:42"}, {"anonymous": false, "id": 16020, "name": "PublishMarketFee", "nameLocation": "3987:16:42", "nodeType": "EventDefinition", "parameters": {"id": 16019, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16014, "indexed": true, "mutability": "mutable", "name": "PublishMarketFeeAddress", "nameLocation": "4029:23:42", "nodeType": "VariableDeclaration", "scope": 16020, "src": "4013:39:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16013, "name": "address", "nodeType": "ElementaryTypeName", "src": "4013:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16016, "indexed": true, "mutability": "mutable", "name": "PublishMarketFeeToken", "nameLocation": "4078:21:42", "nodeType": "VariableDeclaration", "scope": 16020, "src": "4062:37:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16015, "name": "address", "nodeType": "ElementaryTypeName", "src": "4062:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16018, "indexed": false, "mutability": "mutable", "name": "PublishMarketFeeAmount", "nameLocation": "4117:22:42", "nodeType": "VariableDeclaration", "scope": 16020, "src": "4109:30:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16017, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4109:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4003:142:42"}, "src": "3981:165:42"}, {"anonymous": false, "id": 16028, "name": "ConsumeMarketFee", "nameLocation": "4188:16:42", "nodeType": "EventDefinition", "parameters": {"id": 16027, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16022, "indexed": true, "mutability": "mutable", "name": "consumeMarketFeeAddress", "nameLocation": "4230:23:42", "nodeType": "VariableDeclaration", "scope": 16028, "src": "4214:39:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16021, "name": "address", "nodeType": "ElementaryTypeName", "src": "4214:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16024, "indexed": true, "mutability": "mutable", "name": "consumeMarketFeeToken", "nameLocation": "4279:21:42", "nodeType": "VariableDeclaration", "scope": 16028, "src": "4263:37:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16023, "name": "address", "nodeType": "ElementaryTypeName", "src": "4263:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16026, "indexed": false, "mutability": "mutable", "name": "consumeMarketFeeAmount", "nameLocation": "4318:22:42", "nodeType": "VariableDeclaration", "scope": 16028, "src": "4310:30:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16025, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4310:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4204:142:42"}, "src": "4182:165:42"}, {"anonymous": false, "id": 16046, "name": "ProviderFee", "nameLocation": "4389:11:42", "nodeType": "EventDefinition", "parameters": {"id": 16045, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16030, "indexed": true, "mutability": "mutable", "name": "providerFeeAddress", "nameLocation": "4426:18:42", "nodeType": "VariableDeclaration", "scope": 16046, "src": "4410:34:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16029, "name": "address", "nodeType": "ElementaryTypeName", "src": "4410:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16032, "indexed": true, "mutability": "mutable", "name": "providerFeeToken", "nameLocation": "4470:16:42", "nodeType": "VariableDeclaration", "scope": 16046, "src": "4454:32:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16031, "name": "address", "nodeType": "ElementaryTypeName", "src": "4454:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16034, "indexed": false, "mutability": "mutable", "name": "providerFeeAmount", "nameLocation": "4504:17:42", "nodeType": "VariableDeclaration", "scope": 16046, "src": "4496:25:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16033, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4496:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 16036, "indexed": false, "mutability": "mutable", "name": "providerData", "nameLocation": "4537:12:42", "nodeType": "VariableDeclaration", "scope": 16046, "src": "4531:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 16035, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4531:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 16038, "indexed": false, "mutability": "mutable", "name": "v", "nameLocation": "4565:1:42", "nodeType": "VariableDeclaration", "scope": 16046, "src": "4559:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 16037, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "4559:5:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 16040, "indexed": false, "mutability": "mutable", "name": "r", "nameLocation": "4585:1:42", "nodeType": "VariableDeclaration", "scope": 16046, "src": "4577:9:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 16039, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4577:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 16042, "indexed": false, "mutability": "mutable", "name": "s", "nameLocation": "4605:1:42", "nodeType": "VariableDeclaration", "scope": 16046, "src": "4597:9:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 16041, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4597:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 16044, "indexed": false, "mutability": "mutable", "name": "validUntil", "nameLocation": "4624:10:42", "nodeType": "VariableDeclaration", "scope": 16046, "src": "4616:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16043, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4616:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4400:240:42"}, "src": "4383:258:42"}, {"anonymous": false, "id": 16052, "name": "MinterProposed", "nameLocation": "4658:14:42", "nodeType": "EventDefinition", "parameters": {"id": 16051, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16048, "indexed": false, "mutability": "mutable", "name": "currentMinter", "nameLocation": "4681:13:42", "nodeType": "VariableDeclaration", "scope": 16052, "src": "4673:21:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16047, "name": "address", "nodeType": "ElementaryTypeName", "src": "4673:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16050, "indexed": false, "mutability": "mutable", "name": "newMinter", "nameLocation": "4704:9:42", "nodeType": "VariableDeclaration", "scope": 16052, "src": "4696:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16049, "name": "address", "nodeType": "ElementaryTypeName", "src": "4696:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4672:42:42"}, "src": "4652:63:42"}, {"anonymous": false, "id": 16058, "name": "MinterApproved", "nameLocation": "4727:14:42", "nodeType": "EventDefinition", "parameters": {"id": 16057, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16054, "indexed": false, "mutability": "mutable", "name": "currentMinter", "nameLocation": "4750:13:42", "nodeType": "VariableDeclaration", "scope": 16058, "src": "4742:21:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16053, "name": "address", "nodeType": "ElementaryTypeName", "src": "4742:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16056, "indexed": false, "mutability": "mutable", "name": "newMinter", "nameLocation": "4773:9:42", "nodeType": "VariableDeclaration", "scope": 16058, "src": "4765:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16055, "name": "address", "nodeType": "ElementaryTypeName", "src": "4765:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4741:42:42"}, "src": "4721:63:42"}, {"anonymous": false, "id": 16066, "name": "NewPool", "nameLocation": "4796:7:42", "nodeType": "EventDefinition", "parameters": {"id": 16065, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16060, "indexed": false, "mutability": "mutable", "name": "poolAddress", "nameLocation": "4821:11:42", "nodeType": "VariableDeclaration", "scope": 16066, "src": "4813:19:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16059, "name": "address", "nodeType": "ElementaryTypeName", "src": "4813:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16062, "indexed": false, "mutability": "mutable", "name": "ssContract", "nameLocation": "4850:10:42", "nodeType": "VariableDeclaration", "scope": 16066, "src": "4842:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16061, "name": "address", "nodeType": "ElementaryTypeName", "src": "4842:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16064, "indexed": false, "mutability": "mutable", "name": "baseTokenAddress", "nameLocation": "4878:16:42", "nodeType": "VariableDeclaration", "scope": 16066, "src": "4870:24:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16063, "name": "address", "nodeType": "ElementaryTypeName", "src": "4870:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4803:97:42"}, "src": "4790:111:42"}, {"anonymous": false, "id": 16076, "name": "VestingCreated", "nameLocation": "4912:14:42", "nodeType": "EventDefinition", "parameters": {"id": 16075, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16068, "indexed": true, "mutability": "mutable", "name": "datatokenAddress", "nameLocation": "4943:16:42", "nodeType": "VariableDeclaration", "scope": 16076, "src": "4927:32:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16067, "name": "address", "nodeType": "ElementaryTypeName", "src": "4927:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16070, "indexed": true, "mutability": "mutable", "name": "publisherAddress", "nameLocation": "4985:16:42", "nodeType": "VariableDeclaration", "scope": 16076, "src": "4969:32:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16069, "name": "address", "nodeType": "ElementaryTypeName", "src": "4969:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16072, "indexed": false, "mutability": "mutable", "name": "vestingEndBlock", "nameLocation": "5019:15:42", "nodeType": "VariableDeclaration", "scope": 16076, "src": "5011:23:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16071, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5011:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 16074, "indexed": false, "mutability": "mutable", "name": "totalVestingAmount", "nameLocation": "5052:18:42", "nodeType": "VariableDeclaration", "scope": 16076, "src": "5044:26:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16073, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5044:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4926:145:42"}, "src": "4906:166:42"}, {"anonymous": false, "id": 16086, "name": "NewFixedRate", "nameLocation": "5083:12:42", "nodeType": "EventDefinition", "parameters": {"id": 16085, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16078, "indexed": false, "mutability": "mutable", "name": "exchangeId", "nameLocation": "5104:10:42", "nodeType": "VariableDeclaration", "scope": 16086, "src": "5096:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 16077, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5096:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 16080, "indexed": true, "mutability": "mutable", "name": "owner", "nameLocation": "5132:5:42", "nodeType": "VariableDeclaration", "scope": 16086, "src": "5116:21:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16079, "name": "address", "nodeType": "ElementaryTypeName", "src": "5116:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16082, "indexed": false, "mutability": "mutable", "name": "exchangeContract", "nameLocation": "5147:16:42", "nodeType": "VariableDeclaration", "scope": 16086, "src": "5139:24:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16081, "name": "address", "nodeType": "ElementaryTypeName", "src": "5139:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16084, "indexed": true, "mutability": "mutable", "name": "baseToken", "nameLocation": "5181:9:42", "nodeType": "VariableDeclaration", "scope": 16086, "src": "5165:25:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16083, "name": "address", "nodeType": "ElementaryTypeName", "src": "5165:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "5095:96:42"}, "src": "5077:115:42"}, {"anonymous": false, "id": 16090, "name": "NewDispenser", "nameLocation": "5203:12:42", "nodeType": "EventDefinition", "parameters": {"id": 16089, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16088, "indexed": false, "mutability": "mutable", "name": "dispenserContract", "nameLocation": "5224:17:42", "nodeType": "VariableDeclaration", "scope": 16090, "src": "5216:25:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16087, "name": "address", "nodeType": "ElementaryTypeName", "src": "5216:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "5215:27:42"}, "src": "5197:46:42"}, {"anonymous": false, "id": 16100, "name": "NewPaymentCollector", "nameLocation": "5255:19:42", "nodeType": "EventDefinition", "parameters": {"id": 16099, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16092, "indexed": true, "mutability": "mutable", "name": "caller", "nameLocation": "5300:6:42", "nodeType": "VariableDeclaration", "scope": 16100, "src": "5284:22:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16091, "name": "address", "nodeType": "ElementaryTypeName", "src": "5284:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16094, "indexed": true, "mutability": "mutable", "name": "_newPaymentCollector", "nameLocation": "5332:20:42", "nodeType": "VariableDeclaration", "scope": 16100, "src": "5316:36:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16093, "name": "address", "nodeType": "ElementaryTypeName", "src": "5316:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16096, "indexed": false, "mutability": "mutable", "name": "timestamp", "nameLocation": "5370:9:42", "nodeType": "VariableDeclaration", "scope": 16100, "src": "5362:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16095, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5362:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 16098, "indexed": false, "mutability": "mutable", "name": "blockNumber", "nameLocation": "5397:11:42", "nodeType": "VariableDeclaration", "scope": 16100, "src": "5389:19:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16097, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5389:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5274:140:42"}, "src": "5249:166:42"}, {"body": {"id": 16109, "nodeType": "Block", "src": "5451:136:42", "statements": [{"expression": {"arguments": [{"id": 16104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "5482:12:42", "subExpression": {"id": 16103, "name": "initialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15893, "src": "5483:11:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a20746f6b656e20696e7374616e636520616c726561647920696e697469616c697a6564", "id": 16105, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5508:51:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_71c7de0dde46143591b41a95c3e9fcd2b400a6e71817818e6e1b4d0776dca49a", "typeString": "literal_string \"ERC20Template: token instance already initialized\""}, "value": "ERC20Template: token instance already initialized"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_71c7de0dde46143591b41a95c3e9fcd2b400a6e71817818e6e1b4d0776dca49a", "typeString": "literal_string \"ERC20Template: token instance already initialized\""}], "id": 16102, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5461:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16106, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5461:108:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16107, "nodeType": "ExpressionStatement", "src": "5461:108:42"}, {"id": 16108, "nodeType": "PlaceholderStatement", "src": "5579:1:42"}]}, "id": 16110, "name": "onlyNotInitialized", "nameLocation": "5430:18:42", "nodeType": "ModifierDefinition", "parameters": {"id": 16101, "nodeType": "ParameterList", "parameters": [], "src": "5448:2:42"}, "src": "5421:166:42", "virtual": false, "visibility": "internal"}, {"body": {"id": 16126, "nodeType": "Block", "src": "5616:158:42", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16121, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 16113, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5647:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16114, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5647:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "31", "id": 16119, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5701:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "expression": {"arguments": [{"id": 16116, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "5677:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16115, "name": "IERC721Template", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3697, "src": "5661:15:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$", "typeString": "type(contract IERC721Template)"}}, "id": 16117, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5661:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Template_$3697", "typeString": "contract IERC721Template"}}, "id": 16118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 3499, "src": "5661:39:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view external returns (address)"}}, "id": 16120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5661:42:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5647:56:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a206e6f74204e46544f776e6572", "id": 16122, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5717:29:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_be9368c7475aecb7a349f96a2f49f02ec29a44ee3f7721d6c445b9755fddd9b8", "typeString": "literal_string \"ERC20Template: not NFTOwner\""}, "value": "ERC20Template: not NFTOwner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_be9368c7475aecb7a349f96a2f49f02ec29a44ee3f7721d6c445b9755fddd9b8", "typeString": "literal_string \"ERC20Template: not NFTOwner\""}], "id": 16112, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5626:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16123, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5626:130:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16124, "nodeType": "ExpressionStatement", "src": "5626:130:42"}, {"id": 16125, "nodeType": "PlaceholderStatement", "src": "5766:1:42"}]}, "id": 16127, "name": "onlyNFTOwner", "nameLocation": "5601:12:42", "nodeType": "ModifierDefinition", "parameters": {"id": 16111, "nodeType": "ParameterList", "parameters": [], "src": "5613:2:42"}, "src": "5592:182:42", "virtual": false, "visibility": "internal"}, {"body": {"id": 16138, "nodeType": "Block", "src": "5822:154:42", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16133, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 16130, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5853:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16131, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5853:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 16132, "name": "publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15899, "src": "5867:23:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5853:37:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a206e6f74207075626c6973684d61726b657446656541646472657373", "id": 16134, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5904:44:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_02cf993cb7006234fc4cd8a37d1b888dac0ca64edbf6ebb80d36c296d8dc4861", "typeString": "literal_string \"ERC20Template: not publishMarketFeeAddress\""}, "value": "ERC20Template: not publishMarketFeeAddress"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_02cf993cb7006234fc4cd8a37d1b888dac0ca64edbf6ebb80d36c296d8dc4861", "typeString": "literal_string \"ERC20Template: not publishMarketFeeAddress\""}], "id": 16129, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5832:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16135, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5832:126:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16136, "nodeType": "ExpressionStatement", "src": "5832:126:42"}, {"id": 16137, "nodeType": "PlaceholderStatement", "src": "5968:1:42"}]}, "id": 16139, "name": "onlyPublishingMarketFeeAddress", "nameLocation": "5789:30:42", "nodeType": "ModifierDefinition", "parameters": {"id": 16128, "nodeType": "ParameterList", "parameters": [], "src": "5819:2:42"}, "src": "5780:196:42", "virtual": false, "visibility": "internal"}, {"body": {"id": 16164, "nodeType": "Block", "src": "6011:271:42", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 16159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"expression": {"id": 16146, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6106:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16147, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6106:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 16143, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "6058:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16142, "name": "IERC721Template", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3697, "src": "6042:15:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$", "typeString": "type(contract IERC721Template)"}}, "id": 16144, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6042:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Template_$3697", "typeString": "contract IERC721Template"}}, "id": 16145, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPermissions", "nodeType": "MemberAccess", "referencedDeclaration": 3615, "src": "6042:63:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Roles_$3598_memory_ptr_$", "typeString": "function (address) view external returns (struct IERC721Template.Roles memory)"}}, "id": 16148, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6042:75:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$3598_memory_ptr", "typeString": "struct IERC721Template.Roles memory"}}, "id": 16149, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "deployERC20", "nodeType": "MemberAccess", "referencedDeclaration": 3593, "src": "6042:104:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16158, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"hexValue": "31", "id": 16154, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6190:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "expression": {"arguments": [{"id": 16151, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "6166:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16150, "name": "IERC721Template", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3697, "src": "6150:15:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$", "typeString": "type(contract IERC721Template)"}}, "id": 16152, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6150:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Template_$3697", "typeString": "contract IERC721Template"}}, "id": 16153, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 3499, "src": "6150:39:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view external returns (address)"}}, "id": 16155, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6150:42:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 16156, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6196:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6196:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6150:56:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "6042:164:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a204e4f54204445504c4f59455220524f4c45", "id": 16160, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6220:34:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_77cf58615996877a057ecbbf646f8e692d1cea8795623d88deb1de4615cdd45c", "typeString": "literal_string \"ERC20Template: NOT DEPLOYER ROLE\""}, "value": "ERC20Template: NOT DEPLOYER ROLE"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_77cf58615996877a057ecbbf646f8e692d1cea8795623d88deb1de4615cdd45c", "typeString": "literal_string \"ERC20Template: NOT DEPLOYER ROLE\""}], "id": 16141, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6021:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16161, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6021:243:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16162, "nodeType": "ExpressionStatement", "src": "6021:243:42"}, {"id": 16163, "nodeType": "PlaceholderStatement", "src": "6274:1:42"}]}, "id": 16165, "name": "onlyERC20Deployer", "nameLocation": "5991:17:42", "nodeType": "ModifierDefinition", "parameters": {"id": 16140, "nodeType": "ParameterList", "parameters": [], "src": "6008:2:42"}, "src": "5982:300:42", "virtual": false, "visibility": "internal"}, {"body": {"id": 16196, "nodeType": "Block", "src": "7767:198:42", "statements": [{"expression": {"arguments": [{"id": 16189, "name": "strings_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16169, "src": "7825:8:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr", "typeString": "string calldata[] calldata"}}, {"id": 16190, "name": "addresses_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16172, "src": "7851:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[] calldata"}}, {"id": 16191, "name": "factoryAddresses_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16175, "src": "7879:17:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[] calldata"}}, {"id": 16192, "name": "uints_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16178, "src": "7914:6:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}}, {"id": 16193, "name": "bytes_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16181, "src": "7938:6:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr", "typeString": "bytes calldata[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr", "typeString": "string calldata[] calldata"}, {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[] calldata"}, {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[] calldata"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata"}, {"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr", "typeString": "bytes calldata[] calldata"}], "id": 16188, "name": "_initialize", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16369, "src": "7796:11:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$", "typeString": "function (string memory[] memory,address[] memory,address[] memory,uint256[] memory,bytes memory[] memory) returns (bool)"}}, "id": 16194, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7796:162:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 16187, "id": 16195, "nodeType": "Return", "src": "7777:181:42"}]}, "documentation": {"id": 16166, "nodeType": "StructuredDocumentation", "src": "6288:1216:42", "text": " @dev initialize\n      Called prior contract initialization (e.g creating new Datatoken instance)\n      Calls private _initialize function. Only if contract is not initialized.\n @param strings_ refers to an array of strings\n                      [0] = name token\n                      [1] = symbol\n @param addresses_ refers to an array of addresses passed by user\n                     [0]  = minter account who can mint datatokens (can have multiple minters)\n                     [1]  = paymentCollector  initial paymentCollector  for this DT\n                     [2]  = publishing Market Address\n                     [3]  = publishing Market Fee Token\n @param factoryAddresses_ refers to an array of addresses passed by the factory\n                     [0]  = erc721Address\n                     [1]  = router address\n @param uints_  refers to an array of uints\n                     [0] = cap_ the total ERC20 cap\n                     [1] = publishing Market Fee Amount\n @param bytes_  refers to an array of bytes\n                     Currently not used, usefull for future templates"}, "functionSelector": "b3998be0", "id": 16197, "implemented": true, "kind": "function", "modifiers": [{"id": 16184, "kind": "modifierInvocation", "modifierName": {"id": 16183, "name": "onlyNotInitialized", "nodeType": "IdentifierPath", "referencedDeclaration": 16110, "src": "7733:18:42"}, "nodeType": "ModifierInvocation", "src": "7733:18:42"}], "name": "initialize", "nameLocation": "7518:10:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16182, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16169, "mutability": "mutable", "name": "strings_", "nameLocation": "7556:8:42", "nodeType": "VariableDeclaration", "scope": 16197, "src": "7538:26:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr", "typeString": "string[]"}, "typeName": {"baseType": {"id": 16167, "name": "string", "nodeType": "ElementaryTypeName", "src": "7538:6:42", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "id": 16168, "nodeType": "ArrayTypeName", "src": "7538:8:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr", "typeString": "string[]"}}, "visibility": "internal"}, {"constant": false, "id": 16172, "mutability": "mutable", "name": "addresses_", "nameLocation": "7593:10:42", "nodeType": "VariableDeclaration", "scope": 16197, "src": "7574:29:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 16170, "name": "address", "nodeType": "ElementaryTypeName", "src": "7574:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16171, "nodeType": "ArrayTypeName", "src": "7574:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 16175, "mutability": "mutable", "name": "factoryAddresses_", "nameLocation": "7632:17:42", "nodeType": "VariableDeclaration", "scope": 16197, "src": "7613:36:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 16173, "name": "address", "nodeType": "ElementaryTypeName", "src": "7613:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16174, "nodeType": "ArrayTypeName", "src": "7613:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 16178, "mutability": "mutable", "name": "uints_", "nameLocation": "7678:6:42", "nodeType": "VariableDeclaration", "scope": 16197, "src": "7659:25:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 16176, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7659:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16177, "nodeType": "ArrayTypeName", "src": "7659:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 16181, "mutability": "mutable", "name": "bytes_", "nameLocation": "7711:6:42", "nodeType": "VariableDeclaration", "scope": 16197, "src": "7694:23:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr", "typeString": "bytes[]"}, "typeName": {"baseType": {"id": 16179, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "7694:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "id": 16180, "nodeType": "ArrayTypeName", "src": "7694:7:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr", "typeString": "bytes[]"}}, "visibility": "internal"}], "src": "7528:195:42"}, "returnParameters": {"id": 16187, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16186, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 16197, "src": "7761:4:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 16185, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7761:4:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "7760:6:42"}, "scope": 17877, "src": "7509:456:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 16368, "nodeType": "Block", "src": "9306:1913:42", "statements": [{"assignments": [16219], "declarations": [{"constant": false, "id": 16219, "mutability": "mutable", "name": "erc721Address", "nameLocation": "9324:13:42", "nodeType": "VariableDeclaration", "scope": 16368, "src": "9316:21:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16218, "name": "address", "nodeType": "ElementaryTypeName", "src": "9316:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 16223, "initialValue": {"baseExpression": {"id": 16220, "name": "factoryAddresses_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16207, "src": "9340:17:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16222, "indexExpression": {"hexValue": "30", "id": 16221, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9358:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9340:20:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "9316:44:42"}, {"expression": {"id": 16228, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16224, "name": "router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15917, "src": "9370:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 16225, "name": "factoryAddresses_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16207, "src": "9379:17:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16227, "indexExpression": {"hexValue": "31", "id": 16226, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9397:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9379:20:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "9370:29:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16229, "nodeType": "ExpressionStatement", "src": "9370:29:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 16231, "name": "erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16219, "src": "9430:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 16234, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9455:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 16233, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9447:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16232, "name": "address", "nodeType": "ElementaryTypeName", "src": "9447:7:42", "typeDescriptions": {}}}, "id": 16235, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9447:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "9430:27:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a20496e76616c6964206d696e7465722c20207a65726f2061646472657373", "id": 16237, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9471:46:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_17a58682b4a194348f2f85dfc6e6e84deae3a6889f6b609c81e256e8553e444b", "typeString": "literal_string \"ERC20Template: Invalid minter,  zero address\""}, "value": "ERC20Template: Invalid minter,  zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_17a58682b4a194348f2f85dfc6e6e84deae3a6889f6b609c81e256e8553e444b", "typeString": "literal_string \"ERC20Template: Invalid minter,  zero address\""}], "id": 16230, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9409:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16238, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9409:118:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16239, "nodeType": "ExpressionStatement", "src": "9409:118:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16246, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 16241, "name": "router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15917, "src": "9559:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 16244, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9577:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 16243, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9569:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16242, "name": "address", "nodeType": "ElementaryTypeName", "src": "9569:7:42", "typeDescriptions": {}}}, "id": 16245, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9569:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "9559:20:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a20496e76616c696420726f757465722c207a65726f2061646472657373", "id": 16247, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9593:45:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_913f63a258d169030e65466d70d20bcca191415fe678e58d5beea11e5bd55b42", "typeString": "literal_string \"ERC20Template: Invalid router, zero address\""}, "value": "ERC20Template: Invalid router, zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_913f63a258d169030e65466d70d20bcca191415fe678e58d5beea11e5bd55b42", "typeString": "literal_string \"ERC20Template: Invalid router, zero address\""}], "id": 16240, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9538:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16248, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9538:110:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16249, "nodeType": "ExpressionStatement", "src": "9538:110:42"}, {"expression": {"id": 16252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16250, "name": "_cap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15887, "src": "9764:4:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666", "id": 16251, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9771:66:42", "typeDescriptions": {"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1", "typeString": "int_const 1157...(70 digits omitted)...9935"}, "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}, "src": "9764:73:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16253, "nodeType": "ExpressionStatement", "src": "9764:73:42"}, {"expression": {"id": 16258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16254, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15883, "src": "9847:5:42", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 16255, "name": "strings_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16201, "src": "9855:8:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, "id": 16257, "indexExpression": {"hexValue": "30", "id": 16256, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9864:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9855:11:42", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "9847:19:42", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 16259, "nodeType": "ExpressionStatement", "src": "9847:19:42"}, {"expression": {"id": 16264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16260, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15885, "src": "9876:7:42", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 16261, "name": "strings_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16201, "src": "9886:8:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, "id": 16263, "indexExpression": {"hexValue": "31", "id": 16262, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9895:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9886:11:42", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "9876:21:42", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 16265, "nodeType": "ExpressionStatement", "src": "9876:21:42"}, {"expression": {"id": 16268, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16266, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "9907:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 16267, "name": "erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16219, "src": "9924:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "9907:30:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16269, "nodeType": "ExpressionStatement", "src": "9907:30:42"}, {"expression": {"id": 16272, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16270, "name": "initialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15893, "src": "9947:11:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 16271, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9961:4:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "9947:18:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 16273, "nodeType": "ExpressionStatement", "src": "9947:18:42"}, {"expression": {"arguments": [{"baseExpression": {"id": 16275, "name": "addresses_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16204, "src": "10076:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16277, "indexExpression": {"hexValue": "30", "id": 16276, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10087:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10076:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16274, "name": "_addMinter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21276, "src": "10065:10:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 16278, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10065:25:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16279, "nodeType": "ExpressionStatement", "src": "10065:25:42"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16287, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 16280, "name": "addresses_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16204, "src": "10104:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16282, "indexExpression": {"hexValue": "31", "id": 16281, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10115:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10104:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 16285, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10129:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 16284, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10121:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16283, "name": "address", "nodeType": "ElementaryTypeName", "src": "10121:7:42", "typeDescriptions": {}}}, "id": 16286, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10121:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10104:27:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 16307, "nodeType": "IfStatement", "src": "10100:267:42", "trueBody": {"id": 16306, "nodeType": "Block", "src": "10133:234:42", "statements": [{"expression": {"arguments": [{"baseExpression": {"id": 16289, "name": "addresses_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16204, "src": "10168:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16291, "indexExpression": {"hexValue": "31", "id": 16290, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10179:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10168:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16288, "name": "_setPaymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17315, "src": "10147:20:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 16292, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10147:35:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16293, "nodeType": "ExpressionStatement", "src": "10147:35:42"}, {"eventCall": {"arguments": [{"expression": {"id": 16295, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "10238:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "10238:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"baseExpression": {"id": 16297, "name": "addresses_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16204, "src": "10266:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16299, "indexExpression": {"hexValue": "31", "id": 16298, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10277:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10266:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16300, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "10297:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 16301, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "10297:15:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 16302, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "10330:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 16303, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "10330:12:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16294, "name": "NewPaymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16100, "src": "10201:19:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256,uint256)"}}, "id": 16304, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10201:155:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16305, "nodeType": "EmitStatement", "src": "10196:160:42"}]}}, {"expression": {"id": 16312, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16308, "name": "publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15899, "src": "10376:23:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 16309, "name": "addresses_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16204, "src": "10402:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16311, "indexExpression": {"hexValue": "32", "id": 16310, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10413:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10402:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10376:39:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16313, "nodeType": "ExpressionStatement", "src": "10376:39:42"}, {"expression": {"id": 16318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16314, "name": "publishMarketFeeToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15901, "src": "10425:21:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 16315, "name": "addresses_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16204, "src": "10449:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16317, "indexExpression": {"hexValue": "33", "id": 16316, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10460:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10449:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10425:37:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16319, "nodeType": "ExpressionStatement", "src": "10425:37:42"}, {"expression": {"id": 16324, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16320, "name": "publishMarketFeeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15903, "src": "10472:22:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 16321, "name": "uints_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16210, "src": "10497:6:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 16323, "indexExpression": {"hexValue": "31", "id": 16322, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10504:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10497:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10472:34:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16325, "nodeType": "ExpressionStatement", "src": "10472:34:42"}, {"eventCall": {"arguments": [{"expression": {"id": 16327, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "10558:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16328, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "10558:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16329, "name": "publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15899, "src": "10582:23:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16330, "name": "publishMarketFeeToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15901, "src": "10619:21:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16331, "name": "publishMarketFeeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15903, "src": "10654:22:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16326, "name": "PublishMarketFeeChanged", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16012, "src": "10521:23:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,address,uint256)"}}, "id": 16332, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10521:165:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16333, "nodeType": "EmitStatement", "src": "10516:170:42"}, {"assignments": [16335], "declarations": [{"constant": false, "id": 16335, "mutability": "mutable", "name": "chainId", "nameLocation": "10704:7:42", "nodeType": "VariableDeclaration", "scope": 16368, "src": "10696:15:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16334, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10696:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 16336, "nodeType": "VariableDeclarationStatement", "src": "10696:15:42"}, {"AST": {"nodeType": "YulBlock", "src": "10730:44:42", "statements": [{"nodeType": "YulAssignment", "src": "10744:20:42", "value": {"arguments": [], "functionName": {"name": "chainid", "nodeType": "YulIdentifier", "src": "10755:7:42"}, "nodeType": "YulFunctionCall", "src": "10755:9:42"}, "variableNames": [{"name": "chainId", "nodeType": "YulIdentifier", "src": "10744:7:42"}]}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 16335, "isOffset": false, "isSlot": false, "src": "10744:7:42", "valueSize": 1}], "id": 16337, "nodeType": "InlineAssembly", "src": "10721:53:42"}, {"expression": {"id": 16364, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16338, "name": "DOMAIN_SEPARATOR", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15908, "src": "10783:16:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"arguments": [{"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429", "id": 16343, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10884:84:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f", "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}, "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f", "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}], "id": 16342, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "10853:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 16344, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10853:133:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"arguments": [{"arguments": [{"id": 16348, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15883, "src": "11020:5:42", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}], "id": 16347, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11014:5:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 16346, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "11014:5:42", "typeDescriptions": {}}}, "id": 16349, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11014:12:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes storage pointer"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes storage pointer"}], "id": 16345, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "11004:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 16350, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11004:23:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"arguments": [{"arguments": [{"hexValue": "31", "id": 16354, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "11061:3:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\""}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\""}], "id": 16353, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11055:5:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 16352, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "11055:5:42", "typeDescriptions": {}}}, "id": 16355, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11055:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 16351, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "11045:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 16356, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11045:21:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 16357, "name": "chainId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16335, "src": "11121:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 16360, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "11154:4:42", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}], "id": 16359, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11146:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16358, "name": "address", "nodeType": "ElementaryTypeName", "src": "11146:7:42", "typeDescriptions": {}}}, "id": 16361, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11146:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 16340, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "10825:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 16341, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "10825:10:42", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 16362, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10825:348:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 16339, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "10802:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 16363, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10802:381:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "10783:400:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 16365, "nodeType": "ExpressionStatement", "src": "10783:400:42"}, {"expression": {"id": 16366, "name": "initialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15893, "src": "11201:11:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 16217, "id": 16367, "nodeType": "Return", "src": "11194:18:42"}]}, "documentation": {"id": 16198, "nodeType": "StructuredDocumentation", "src": "7971:1108:42", "text": " @dev _initialize\n      Private function called on contract initialization.\n @param strings_ refers to an array of strings\n                      [0] = name token\n                      [1] = symbol\n @param addresses_ refers to an array of addresses passed by user\n                     [0]  = minter account who can mint datatokens (can have multiple minters)\n                     [1]  = paymentCollector  initial paymentCollector  for this DT\n                     [2]  = publishing Market Address\n                     [3]  = publishing Market Fee Token\n @param factoryAddresses_ refers to an array of addresses passed by the factory\n                     [0]  = erc721Address\n                     [1]  = router address\n @param uints_  refers to an array of uints\n                     [0] = cap_ the total ERC20 cap\n                     [1] = publishing Market Fee Amount\n param bytes_  refers to an array of bytes\n                     Currently not used, usefull for future templates"}, "id": 16369, "implemented": true, "kind": "function", "modifiers": [], "name": "_initialize", "nameLocation": "9093:11:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16214, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16201, "mutability": "mutable", "name": "strings_", "nameLocation": "9130:8:42", "nodeType": "VariableDeclaration", "scope": 16369, "src": "9114:24:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string[]"}, "typeName": {"baseType": {"id": 16199, "name": "string", "nodeType": "ElementaryTypeName", "src": "9114:6:42", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "id": 16200, "nodeType": "ArrayTypeName", "src": "9114:8:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr", "typeString": "string[]"}}, "visibility": "internal"}, {"constant": false, "id": 16204, "mutability": "mutable", "name": "addresses_", "nameLocation": "9165:10:42", "nodeType": "VariableDeclaration", "scope": 16369, "src": "9148:27:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 16202, "name": "address", "nodeType": "ElementaryTypeName", "src": "9148:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16203, "nodeType": "ArrayTypeName", "src": "9148:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 16207, "mutability": "mutable", "name": "factoryAddresses_", "nameLocation": "9202:17:42", "nodeType": "VariableDeclaration", "scope": 16369, "src": "9185:34:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 16205, "name": "address", "nodeType": "ElementaryTypeName", "src": "9185:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16206, "nodeType": "ArrayTypeName", "src": "9185:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 16210, "mutability": "mutable", "name": "uints_", "nameLocation": "9246:6:42", "nodeType": "VariableDeclaration", "scope": 16369, "src": "9229:23:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 16208, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9229:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16209, "nodeType": "ArrayTypeName", "src": "9229:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 16213, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 16369, "src": "9262:14:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "typeString": "bytes[]"}, "typeName": {"baseType": {"id": 16211, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "9262:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "id": 16212, "nodeType": "ArrayTypeName", "src": "9262:7:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr", "typeString": "bytes[]"}}, "visibility": "internal"}], "src": "9104:178:42"}, "returnParameters": {"id": 16217, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16216, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 16369, "src": "9300:4:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 16215, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9300:4:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "9299:6:42"}, "scope": 17877, "src": "9084:2135:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 16458, "nodeType": "Block", "src": "12817:678:42", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 16392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 16389, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28597, "src": "12835:11:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 16390, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12835:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 16391, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12852:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12835:18:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a20746f6b656e7320616c7265616479206d696e746564", "id": 16393, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "12855:38:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e2456f69cf03975c7645133a05194b609eeb10a9a91c5c538f004673567c0500", "typeString": "literal_string \"ERC20Template: tokens already minted\""}, "value": "ERC20Template: tokens already minted"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e2456f69cf03975c7645133a05194b609eeb10a9a91c5c538f004673567c0500", "typeString": "literal_string \"ERC20Template: tokens already minted\""}], "id": 16388, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12827:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16394, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12827:67:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16395, "nodeType": "ExpressionStatement", "src": "12827:67:42"}, {"expression": {"arguments": [{"baseExpression": {"id": 16397, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16379, "src": "12915:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16399, "indexExpression": {"hexValue": "30", "id": 16398, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12925:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12915:12:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16396, "name": "_addMinter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21276, "src": "12904:10:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 16400, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12904:24:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16401, "nodeType": "ExpressionStatement", "src": "12904:24:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 16411, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 16403, "name": "ssParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16373, "src": "13018:8:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 16405, "indexExpression": {"hexValue": "33", "id": 16404, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13027:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13018:11:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 16407, "name": "router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15917, "src": "13048:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16406, "name": "IFactoryRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4096, "src": "13033:14:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$", "typeString": "type(contract IFactoryRouter)"}}, "id": 16408, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13033:22:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFactoryRouter_$4096", "typeString": "contract IFactoryRouter"}}, "id": 16409, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getMinVestingPeriod", "nodeType": "MemberAccess", "referencedDeclaration": 3957, "src": "13033:42:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 16410, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13033:44:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13018:59:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a2056657374696e6720706572696f6420746f6f206c6f772e2053656520466163746f7279526f757465722e6d696e56657374696e67506572696f64496e426c6f636b73", "id": 16412, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13091:83:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a392b8de34db9b58222d8a07ada86306e4b876728850068292beb7ca6d044f3f", "typeString": "literal_string \"ERC20Template: Vesting period too low. See FactoryRouter.minVestingPeriodInBlocks\""}, "value": "ERC20Template: Vesting period too low. See FactoryRouter.minVestingPeriodInBlocks"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a392b8de34db9b58222d8a07ada86306e4b876728850068292beb7ca6d044f3f", "typeString": "literal_string \"ERC20Template: Vesting period too low. See FactoryRouter.minVestingPeriodInBlocks\""}], "id": 16402, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12997:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16413, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12997:187:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16414, "nodeType": "ExpressionStatement", "src": "12997:187:42"}, {"assignments": [16420], "declarations": [{"constant": false, "id": 16420, "mutability": "mutable", "name": "tokens", "nameLocation": "13213:6:42", "nodeType": "VariableDeclaration", "scope": 16458, "src": "13195:24:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$2_memory_ptr", "typeString": "address[2]"}, "typeName": {"baseType": {"id": 16418, "name": "address", "nodeType": "ElementaryTypeName", "src": "13195:7:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16419, "length": {"hexValue": "32", "id": 16417, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13203:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "13195:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$2_storage_ptr", "typeString": "address[2]"}}, "visibility": "internal"}], "id": 16429, "initialValue": {"components": [{"arguments": [{"id": 16423, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "13231:4:42", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}], "id": 16422, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13223:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16421, "name": "address", "nodeType": "ElementaryTypeName", "src": "13223:7:42", "typeDescriptions": {}}}, "id": 16424, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13223:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"baseExpression": {"id": 16425, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16379, "src": "13238:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16427, "indexExpression": {"hexValue": "31", "id": 16426, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13248:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13238:12:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 16428, "isConstant": false, "isInlineArray": true, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "13222:29:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$2_memory_ptr", "typeString": "address[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13195:56:42"}, {"expression": {"id": 16440, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16430, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16386, "src": "13261:4:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 16435, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16420, "src": "13315:6:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$2_memory_ptr", "typeString": "address[2] memory"}}, {"id": 16436, "name": "ssParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16373, "src": "13335:8:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 16437, "name": "swapFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16376, "src": "13357:8:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 16438, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16379, "src": "13379:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_address_$2_memory_ptr", "typeString": "address[2] memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}], "expression": {"arguments": [{"id": 16432, "name": "router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15917, "src": "13283:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16431, "name": "IFactoryRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4096, "src": "13268:14:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$", "typeString": "type(contract IFactoryRouter)"}}, "id": 16433, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13268:22:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFactoryRouter_$4096", "typeString": "contract IFactoryRouter"}}, "id": 16434, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "deployPool", "nodeType": "MemberAccess", "referencedDeclaration": 3915, "src": "13268:33:42", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_address_$", "typeString": "function (address[2] memory,uint256[] memory,uint256[] memory,address[] memory) external returns (address)"}}, "id": 16439, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13268:130:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "13261:137:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16441, "nodeType": "ExpressionStatement", "src": "13261:137:42"}, {"expression": {"arguments": [{"id": 16445, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16386, "src": "13427:4:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 16442, "name": "deployedPools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15920, "src": "13408:13:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 16444, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "13408:18:42", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$", "typeString": "function (address[] storage pointer,address)"}}, "id": 16446, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13408:24:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16447, "nodeType": "ExpressionStatement", "src": "13408:24:42"}, {"eventCall": {"arguments": [{"id": 16449, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16386, "src": "13455:4:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"baseExpression": {"id": 16450, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16379, "src": "13461:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16452, "indexExpression": {"hexValue": "30", "id": 16451, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13471:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13461:12:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"baseExpression": {"id": 16453, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16379, "src": "13475:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16455, "indexExpression": {"hexValue": "31", "id": 16454, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13485:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13475:12:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 16448, "name": "NewPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16066, "src": "13447:7:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address,address)"}}, "id": 16456, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13447:41:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16457, "nodeType": "EmitStatement", "src": "13442:46:42"}]}, "documentation": {"id": 16370, "nodeType": "StructuredDocumentation", "src": "11225:1391:42", "text": " @dev deployPool\n      Function to deploy new Pool with 1SS. It also has a vesting schedule.\n     This function can only be called ONCE and ONLY if no token have been minted yet.\n      Requires baseToken approval\n @param ssParams params for the ssContract. \n                     [0]  = rate (wei)\n                     [1]  = baseToken decimals\n                     [2]  = vesting amount (wei)\n                     [3]  = vested blocks\n                     [4]  = initial liquidity in baseToken for pool creation\n @param swapFees swapFees (swapFee, swapMarketFee), swapOceanFee will be set automatically later\n                     [0] = swapFee for LP Providers\n                     [1] = swapFee for marketplace runner\n.\n @param addresses refers to an array of addresses passed by user\n                     [0]  = side staking contract address\n                     [1]  = baseToken address for pool creation(OCEAN or other)\n                     [2]  = baseTokenSender user which will provide the baseToken amount for initial liquidity\n                     [3]  = publisherAddress user which will be assigned the vested amount\n                     [4]  = marketFeeCollector marketFeeCollector address\n[5] = poolTemplateAddress"}, "functionSelector": "5bfe4da0", "id": 16459, "implemented": true, "kind": "function", "modifiers": [{"id": 16382, "kind": "modifierInvocation", "modifierName": {"id": 16381, "name": "onlyERC20Deployer", "nodeType": "IdentifierPath", "referencedDeclaration": 16165, "src": "12763:17:42"}, "nodeType": "ModifierInvocation", "src": "12763:17:42"}, {"id": 16384, "kind": "modifierInvocation", "modifierName": {"id": 16383, "name": "nonReentrant", "nodeType": "IdentifierPath", "referencedDeclaration": 27764, "src": "12781:12:42"}, "nodeType": "ModifierInvocation", "src": "12781:12:42"}], "name": "deployPool", "nameLocation": "12631:10:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16380, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16373, "mutability": "mutable", "name": "ssParams", "nameLocation": "12668:8:42", "nodeType": "VariableDeclaration", "scope": 16459, "src": "12651:25:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 16371, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12651:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16372, "nodeType": "ArrayTypeName", "src": "12651:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 16376, "mutability": "mutable", "name": "swapFees", "nameLocation": "12703:8:42", "nodeType": "VariableDeclaration", "scope": 16459, "src": "12686:25:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 16374, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12686:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16375, "nodeType": "ArrayTypeName", "src": "12686:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 16379, "mutability": "mutable", "name": "addresses", "nameLocation": "12738:9:42", "nodeType": "VariableDeclaration", "scope": 16459, "src": "12721:26:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 16377, "name": "address", "nodeType": "ElementaryTypeName", "src": "12721:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16378, "nodeType": "ArrayTypeName", "src": "12721:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "12641:112:42"}, "returnParameters": {"id": 16387, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16386, "mutability": "mutable", "name": "pool", "nameLocation": "12811:4:42", "nodeType": "VariableDeclaration", "scope": 16459, "src": "12803:12:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16385, "name": "address", "nodeType": "ElementaryTypeName", "src": "12803:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "12802:14:42"}, "scope": 17877, "src": "12622:873:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 16518, "nodeType": "Block", "src": "14060:435:42", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 16481, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 16477, "name": "uints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16468, "src": "14140:5:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 16479, "indexExpression": {"hexValue": "34", "id": 16478, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14146:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4"}, "value": "4"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14140:8:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 16480, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14151:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "14140:12:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 16486, "nodeType": "IfStatement", "src": "14136:47:42", "trueBody": {"expression": {"arguments": [{"id": 16483, "name": "fixedPriceAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16462, "src": "14165:17:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16482, "name": "_addMinter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21276, "src": "14154:10:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 16484, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14154:29:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16485, "nodeType": "ExpressionStatement", "src": "14154:29:42"}}, {"expression": {"id": 16496, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16487, "name": "exchangeId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16475, "src": "14193:10:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 16492, "name": "fixedPriceAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16462, "src": "14258:17:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16493, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16465, "src": "14289:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, {"id": 16494, "name": "uints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16468, "src": "14312:5:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "expression": {"arguments": [{"id": 16489, "name": "router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15917, "src": "14221:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16488, "name": "IFactoryRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4096, "src": "14206:14:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$", "typeString": "type(contract IFactoryRouter)"}}, "id": 16490, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14206:22:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFactoryRouter_$4096", "typeString": "contract IFactoryRouter"}}, "id": 16491, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "deployFixedRate", "nodeType": "MemberAccess", "referencedDeclaration": 3928, "src": "14206:38:42", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (address,address[] memory,uint256[] memory) external returns (bytes32)"}}, "id": 16495, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14206:121:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "14193:134:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 16497, "nodeType": "ExpressionStatement", "src": "14193:134:42"}, {"eventCall": {"arguments": [{"id": 16499, "name": "exchangeId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16475, "src": "14355:10:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"baseExpression": {"id": 16500, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16465, "src": "14367:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16502, "indexExpression": {"hexValue": "31", "id": 16501, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14377:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14367:12:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16503, "name": "fixedPriceAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16462, "src": "14381:17:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"baseExpression": {"id": 16504, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16465, "src": "14400:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 16506, "indexExpression": {"hexValue": "30", "id": 16505, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14410:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14400:12:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 16498, "name": "NewFixedRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16086, "src": "14342:12:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$returns$__$", "typeString": "function (bytes32,address,address,address)"}}, "id": 16507, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14342:71:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16508, "nodeType": "EmitStatement", "src": "14337:76:42"}, {"expression": {"arguments": [{"arguments": [{"id": 16513, "name": "fixedPriceAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16462, "src": "14457:17:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16514, "name": "exchangeId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16475, "src": "14475:10:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 16512, "name": "fixedRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15925, "src": "14447:9:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_fixedRate_$15925_storage_ptr_$", "typeString": "type(struct ERC20Template.fixedRate storage pointer)"}}, "id": 16515, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14447:39:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_fixedRate_$15925_memory_ptr", "typeString": "struct ERC20Template.fixedRate memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_fixedRate_$15925_memory_ptr", "typeString": "struct ERC20Template.fixedRate memory"}], "expression": {"id": 16509, "name": "fixedRateExchanges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15929, "src": "14423:18:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}, "id": 16511, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "14423:23:42", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage_ptr_$_t_struct$_fixedRate_$15925_storage_$returns$__$bound_to$_t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage_ptr_$", "typeString": "function (struct ERC20Template.fixedRate storage ref[] storage pointer,struct ERC20Template.fixedRate storage ref)"}}, "id": 16516, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14423:64:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16517, "nodeType": "ExpressionStatement", "src": "14423:64:42"}]}, "documentation": {"id": 16460, "nodeType": "StructuredDocumentation", "src": "13501:351:42", "text": " @dev createFixedRate\n      Creates a new FixedRateExchange setup.\n @param fixedPriceAddress fixedPriceAddress\n @param addresses array of addresses [baseToken,owner,marketFeeCollector]\n @param uints array of uints [baseTokenDecimals,datatokenDecimals, fixedRate, marketFee, withMint]\n @return exchangeId"}, "functionSelector": "8b96412b", "id": 16519, "implemented": true, "kind": "function", "modifiers": [{"id": 16471, "kind": "modifierInvocation", "modifierName": {"id": 16470, "name": "onlyERC20Deployer", "nodeType": "IdentifierPath", "referencedDeclaration": 16165, "src": "14000:17:42"}, "nodeType": "ModifierInvocation", "src": "14000:17:42"}, {"id": 16473, "kind": "modifierInvocation", "modifierName": {"id": 16472, "name": "nonReentrant", "nodeType": "IdentifierPath", "referencedDeclaration": 27764, "src": "14018:12:42"}, "nodeType": "ModifierInvocation", "src": "14018:12:42"}], "name": "createFixedRate", "nameLocation": "13866:15:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16469, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16462, "mutability": "mutable", "name": "fixedPriceAddress", "nameLocation": "13899:17:42", "nodeType": "VariableDeclaration", "scope": 16519, "src": "13891:25:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16461, "name": "address", "nodeType": "ElementaryTypeName", "src": "13891:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16465, "mutability": "mutable", "name": "addresses", "nameLocation": "13943:9:42", "nodeType": "VariableDeclaration", "scope": 16519, "src": "13926:26:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 16463, "name": "address", "nodeType": "ElementaryTypeName", "src": "13926:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 16464, "nodeType": "ArrayTypeName", "src": "13926:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 16468, "mutability": "mutable", "name": "uints", "nameLocation": "13979:5:42", "nodeType": "VariableDeclaration", "scope": 16519, "src": "13962:22:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 16466, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13962:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16467, "nodeType": "ArrayTypeName", "src": "13962:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13881:109:42"}, "returnParameters": {"id": 16476, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16475, "mutability": "mutable", "name": "exchangeId", "nameLocation": "14048:10:42", "nodeType": "VariableDeclaration", "scope": 16519, "src": "14040:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 16474, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "14040:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "14039:20:42"}, "scope": 17877, "src": "13857:638:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 16569, "nodeType": "Block", "src": "15119:403:42", "statements": [{"condition": {"id": 16537, "name": "withMint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16528, "src": "15199:8:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 16542, "nodeType": "IfStatement", "src": "15195:36:42", "trueBody": {"expression": {"arguments": [{"id": 16539, "name": "_dispenser", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16522, "src": "15220:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16538, "name": "_addMinter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21276, "src": "15209:10:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 16540, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15209:22:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16541, "nodeType": "ExpressionStatement", "src": "15209:22:42"}}, {"expression": {"arguments": [{"id": 16546, "name": "_dispenser", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16522, "src": "15257:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 16543, "name": "dispensers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15932, "src": "15241:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 16545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "15241:15:42", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$", "typeString": "function (address[] storage pointer,address)"}}, "id": 16547, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15241:27:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16548, "nodeType": "ExpressionStatement", "src": "15241:27:42"}, {"eventCall": {"arguments": [{"id": 16550, "name": "_dispenser", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16522, "src": "15296:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16549, "name": "NewDispenser", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16090, "src": "15283:12:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 16551, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15283:24:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16552, "nodeType": "EmitStatement", "src": "15278:29:42"}, {"expression": {"arguments": [{"id": 16557, "name": "_dispenser", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16522, "src": "15369:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 16560, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "15401:4:42", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}], "id": 16559, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15393:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16558, "name": "address", "nodeType": "ElementaryTypeName", "src": "15393:7:42", "typeDescriptions": {}}}, "id": 16561, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15393:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16562, "name": "maxTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16524, "src": "15420:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 16563, "name": "maxBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16526, "src": "15443:10:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 16564, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "15467:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16565, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "15467:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16566, "name": "allowedSwapper", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16530, "src": "15491:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 16554, "name": "router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15917, "src": "15332:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16553, "name": "IFactoryRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4096, "src": "15317:14:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$", "typeString": "type(contract IFactoryRouter)"}}, "id": 16555, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15317:22:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFactoryRouter_$4096", "typeString": "contract IFactoryRouter"}}, "id": 16556, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "deployDispenser", "nodeType": "MemberAccess", "referencedDeclaration": 3972, "src": "15317:38:42", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address,uint256,uint256,address,address) external"}}, "id": 16567, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15317:198:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16568, "nodeType": "ExpressionStatement", "src": "15317:198:42"}]}, "documentation": {"id": 16520, "nodeType": "StructuredDocumentation", "src": "14501:404:42", "text": " @dev createDispenser\n      Creates a new Dispenser\n @param _dispenser dispenser contract address\n @param maxTokens - max tokens to dispense\n @param maxBalance - max balance of requester.\n @param withMint - true if we want to allow the dispenser to be a minter\n @param allowedSwapper - only account that can ask tokens. set address(0) if not required"}, "functionSelector": "191c918a", "id": 16570, "implemented": true, "kind": "function", "modifiers": [{"id": 16533, "kind": "modifierInvocation", "modifierName": {"id": 16532, "name": "onlyERC20Deployer", "nodeType": "IdentifierPath", "referencedDeclaration": 16165, "src": "15088:17:42"}, "nodeType": "ModifierInvocation", "src": "15088:17:42"}, {"id": 16535, "kind": "modifierInvocation", "modifierName": {"id": 16534, "name": "nonReentrant", "nodeType": "IdentifierPath", "referencedDeclaration": 27764, "src": "15106:12:42"}, "nodeType": "ModifierInvocation", "src": "15106:12:42"}], "name": "createDispenser", "nameLocation": "14919:15:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16531, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16522, "mutability": "mutable", "name": "_dispenser", "nameLocation": "14952:10:42", "nodeType": "VariableDeclaration", "scope": 16570, "src": "14944:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16521, "name": "address", "nodeType": "ElementaryTypeName", "src": "14944:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16524, "mutability": "mutable", "name": "maxTokens", "nameLocation": "14980:9:42", "nodeType": "VariableDeclaration", "scope": 16570, "src": "14972:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16523, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14972:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 16526, "mutability": "mutable", "name": "maxBalance", "nameLocation": "15007:10:42", "nodeType": "VariableDeclaration", "scope": 16570, "src": "14999:18:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16525, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14999:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 16528, "mutability": "mutable", "name": "withMint", "nameLocation": "15032:8:42", "nodeType": "VariableDeclaration", "scope": 16570, "src": "15027:13:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 16527, "name": "bool", "nodeType": "ElementaryTypeName", "src": "15027:4:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 16530, "mutability": "mutable", "name": "allowedSwapper", "nameLocation": "15058:14:42", "nodeType": "VariableDeclaration", "scope": 16570, "src": "15050:22:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16529, "name": "address", "nodeType": "ElementaryTypeName", "src": "15050:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "14934:144:42"}, "returnParameters": {"id": 16536, "nodeType": "ParameterList", "parameters": [], "src": "15119:0:42"}, "scope": 17877, "src": "14910:612:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 16603, "nodeType": "Block", "src": "15894:236:42", "statements": [{"expression": {"arguments": [{"expression": {"baseExpression": {"id": 16579, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21169, "src": "15912:11:42", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RolesERC20_$21177_storage_$", "typeString": "mapping(address => struct ERC20Roles.RolesERC20 storage ref)"}}, "id": 16582, "indexExpression": {"expression": {"id": 16580, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "15924:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "15924:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15912:23:42", "typeDescriptions": {"typeIdentifier": "t_struct$_RolesERC20_$21177_storage", "typeString": "struct ERC20Roles.RolesERC20 storage ref"}}, "id": 16583, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "minter", "nodeType": "MemberAccess", "referencedDeclaration": 21174, "src": "15912:30:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a204e4f54204d494e544552", "id": 16584, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "15944:27:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b855f38fc797c9a23b8a31367acc9351f4e0a226900edee084fc323b5d66c063", "typeString": "literal_string \"ERC20Template: NOT MINTER\""}, "value": "ERC20Template: NOT MINTER"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b855f38fc797c9a23b8a31367acc9351f4e0a226900edee084fc323b5d66c063", "typeString": "literal_string \"ERC20Template: NOT MINTER\""}], "id": 16578, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "15904:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16585, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15904:68:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16586, "nodeType": "ExpressionStatement", "src": "15904:68:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 16594, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 16591, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16575, "src": "16021:5:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 16588, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28597, "src": "16003:11:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 16589, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16003:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16590, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 28243, "src": "16003:17:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 16592, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16003:24:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 16593, "name": "_cap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15887, "src": "16031:4:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16003:32:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "44617461746f6b656e54656d706c6174653a20636170206578636565646564", "id": 16595, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16049:33:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ba68139f57f0fbe8534105ad7a9312832aa13f0377dac6f8e73b83f9c40d5149", "typeString": "literal_string \"DatatokenTemplate: cap exceeded\""}, "value": "DatatokenTemplate: cap exceeded"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ba68139f57f0fbe8534105ad7a9312832aa13f0377dac6f8e73b83f9c40d5149", "typeString": "literal_string \"DatatokenTemplate: cap exceeded\""}], "id": 16587, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "15982:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16596, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15982:110:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16597, "nodeType": "ExpressionStatement", "src": "15982:110:42"}, {"expression": {"arguments": [{"id": 16599, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16573, "src": "16108:7:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16600, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16575, "src": "16117:5:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16598, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28918, "src": "16102:5:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 16601, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16102:21:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16602, "nodeType": "ExpressionStatement", "src": "16102:21:42"}]}, "documentation": {"id": 16571, "nodeType": "StructuredDocumentation", "src": "15528:306:42", "text": " @dev mint\n      Only the minter address can call it.\n      msg.value should be higher than zero and gt or eq minting fee\n @param account refers to an address that token is going to be minted to.\n @param value refers to amount of tokens that is going to be minted."}, "functionSelector": "40c10f19", "id": 16604, "implemented": true, "kind": "function", "modifiers": [], "name": "mint", "nameLocation": "15848:4:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16576, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16573, "mutability": "mutable", "name": "account", "nameLocation": "15861:7:42", "nodeType": "VariableDeclaration", "scope": 16604, "src": "15853:15:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16572, "name": "address", "nodeType": "ElementaryTypeName", "src": "15853:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16575, "mutability": "mutable", "name": "value", "nameLocation": "15878:5:42", "nodeType": "VariableDeclaration", "scope": 16604, "src": "15870:13:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16574, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15870:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "15852:32:42"}, "returnParameters": {"id": 16577, "nodeType": "ParameterList", "parameters": [], "src": "15894:0:42"}, "scope": 17877, "src": "15839:291:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 16776, "nodeType": "Block", "src": "16419:2255:42", "statements": [{"assignments": [16612], "declarations": [{"constant": false, "id": 16612, "mutability": "mutable", "name": "prefix", "nameLocation": "16478:6:42", "nodeType": "VariableDeclaration", "scope": 16776, "src": "16465:19:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 16611, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16465:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 16614, "initialValue": {"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332", "id": 16613, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16487:34:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73", "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""}, "value": "\u0019Ethereum Signed Message:\n32"}, "nodeType": "VariableDeclarationStatement", "src": "16465:56:42"}, {"assignments": [16616], "declarations": [{"constant": false, "id": 16616, "mutability": "mutable", "name": "message", "nameLocation": "16539:7:42", "nodeType": "VariableDeclaration", "scope": 16776, "src": "16531:15:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 16615, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "16531:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 16638, "initialValue": {"arguments": [{"arguments": [{"id": 16620, "name": "prefix", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16612, "src": "16589:6:42", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"arguments": [{"arguments": [{"expression": {"id": 16624, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "16686:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16625, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerData", "nodeType": "MemberAccess", "referencedDeclaration": 15948, "src": "16686:25:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"expression": {"id": 16626, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "16737:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15934, "src": "16737:31:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16628, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "16794:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16629, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeToken", "nodeType": "MemberAccess", "referencedDeclaration": 15936, "src": "16794:29:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16630, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "16849:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAmount", "nodeType": "MemberAccess", "referencedDeclaration": 15938, "src": "16849:30:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 16632, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "16905:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "validUntil", "nodeType": "MemberAccess", "referencedDeclaration": 15946, "src": "16905:23:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 16622, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "16644:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 16623, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "16644:16:42", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 16634, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16644:306:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 16621, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "16613:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 16635, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16613:355:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 16618, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "16572:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 16619, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "16572:16:42", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 16636, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16572:410:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 16617, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "16549:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 16637, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16549:443:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "16531:461:42"}, {"assignments": [16640], "declarations": [{"constant": false, "id": 16640, "mutability": "mutable", "name": "signer", "nameLocation": "17010:6:42", "nodeType": "VariableDeclaration", "scope": 16776, "src": "17002:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16639, "name": "address", "nodeType": "ElementaryTypeName", "src": "17002:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 16650, "initialValue": {"arguments": [{"id": 16642, "name": "message", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16616, "src": "17029:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 16643, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17038:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16644, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "v", "nodeType": "MemberAccess", "referencedDeclaration": 15940, "src": "17038:14:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"expression": {"id": 16645, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17054:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16646, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "r", "nodeType": "MemberAccess", "referencedDeclaration": 15942, "src": "17054:14:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 16647, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17070:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16648, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "s", "nodeType": "MemberAccess", "referencedDeclaration": 15944, "src": "17070:14:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 16641, "name": "ecrecover", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -6, "src": "17019:9:42", "typeDescriptions": {"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}}, "id": 16649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17019:66:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "17002:83:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 16652, "name": "signer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16640, "src": "17103:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 16653, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17113:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16654, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15934, "src": "17113:31:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "17103:41:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c69642070726f766964657220666565", "id": 16656, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "17146:22:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1eb2ec0cb030f8bc86e78ba789aa7828b1165afd6879d4fd90cdc0d7baa8484e", "typeString": "literal_string \"Invalid provider fee\""}, "value": "Invalid provider fee"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1eb2ec0cb030f8bc86e78ba789aa7828b1165afd6879d4fd90cdc0d7baa8484e", "typeString": "literal_string \"Invalid provider fee\""}], "id": 16651, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "17095:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16657, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17095:74:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16658, "nodeType": "ExpressionStatement", "src": "17095:74:42"}, {"eventCall": {"arguments": [{"expression": {"id": 16660, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17209:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16661, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15934, "src": "17209:31:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16662, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17254:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16663, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeToken", "nodeType": "MemberAccess", "referencedDeclaration": 15936, "src": "17254:29:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16664, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17297:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16665, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAmount", "nodeType": "MemberAccess", "referencedDeclaration": 15938, "src": "17297:30:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 16666, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17341:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16667, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerData", "nodeType": "MemberAccess", "referencedDeclaration": 15948, "src": "17341:25:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"expression": {"id": 16668, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17380:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16669, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "v", "nodeType": "MemberAccess", "referencedDeclaration": 15940, "src": "17380:14:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"expression": {"id": 16670, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17408:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "r", "nodeType": "MemberAccess", "referencedDeclaration": 15942, "src": "17408:14:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 16672, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17436:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16673, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "s", "nodeType": "MemberAccess", "referencedDeclaration": 15944, "src": "17436:14:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 16674, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17464:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16675, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "validUntil", "nodeType": "MemberAccess", "referencedDeclaration": 15946, "src": "17464:23:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16659, "name": "ProviderFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16046, "src": "17184:11:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint8_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256,bytes memory,uint8,bytes32,bytes32,uint256)"}}, "id": 16676, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17184:313:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16677, "nodeType": "EmitStatement", "src": "17179:318:42"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 16697, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 16689, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 16681, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 16678, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17690:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16679, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAmount", "nodeType": "MemberAccess", "referencedDeclaration": 15938, "src": "17690:30:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 16680, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17723:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "17690:34:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16688, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 16682, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17740:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16683, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeToken", "nodeType": "MemberAccess", "referencedDeclaration": 15936, "src": "17740:29:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 16686, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17781:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 16685, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "17773:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16684, "name": "address", "nodeType": "ElementaryTypeName", "src": "17773:7:42", "typeDescriptions": {}}}, "id": 16687, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17773:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "17740:43:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "17690:93:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16696, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 16690, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "17799:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16691, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15934, "src": "17799:31:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 16694, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17842:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 16693, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "17834:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16692, "name": "address", "nodeType": "ElementaryTypeName", "src": "17834:7:42", "typeDescriptions": {}}}, "id": 16695, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17834:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "17799:45:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "17690:154:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 16775, "nodeType": "IfStatement", "src": "17673:995:42", "trueBody": {"id": 16774, "nodeType": "Block", "src": "17855:813:42", "statements": [{"assignments": [16699], "declarations": [{"constant": false, "id": 16699, "mutability": "mutable", "name": "OPCFee", "nameLocation": "17877:6:42", "nodeType": "VariableDeclaration", "scope": 16774, "src": "17869:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16698, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17869:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 16705, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 16701, "name": "router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15917, "src": "17901:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16700, "name": "IFactoryRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4096, "src": "17886:14:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$", "typeString": "type(contract IFactoryRouter)"}}, "id": 16702, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17886:22:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFactoryRouter_$4096", "typeString": "contract IFactoryRouter"}}, "id": 16703, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getOPCProviderFee", "nodeType": "MemberAccess", "referencedDeclaration": 3952, "src": "17886:40:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 16704, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17886:42:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "17869:59:42"}, {"assignments": [16707], "declarations": [{"constant": false, "id": 16707, "mutability": "mutable", "name": "OPCcut", "nameLocation": "17950:6:42", "nodeType": "VariableDeclaration", "scope": 16774, "src": "17942:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16706, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17942:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 16709, "initialValue": {"hexValue": "30", "id": 16708, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17959:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "17942:18:42"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 16712, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 16710, "name": "OPCFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16699, "src": "17977:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 16711, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17986:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "17977:10:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 16724, "nodeType": "IfStatement", "src": "17974:92:42", "trueBody": {"expression": {"id": 16722, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 16713, "name": "OPCcut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16707, "src": "18005:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 16720, "name": "BASE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15906, "src": "18061:4:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 16717, "name": "OPCFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16699, "src": "18049:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 16714, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "18014:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAmount", "nodeType": "MemberAccess", "referencedDeclaration": 15938, "src": "18014:30:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16716, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 28273, "src": "18014:34:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 16718, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18014:42:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16719, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 28288, "src": "18014:46:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 16721, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18014:52:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "18005:61:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16723, "nodeType": "ExpressionStatement", "src": "18005:61:42"}}, {"assignments": [16726], "declarations": [{"constant": false, "id": 16726, "mutability": "mutable", "name": "providerCut", "nameLocation": "18088:11:42", "nodeType": "VariableDeclaration", "scope": 16774, "src": "18080:19:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16725, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18080:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 16732, "initialValue": {"arguments": [{"id": 16730, "name": "OPCcut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16707, "src": "18137:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 16727, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "18102:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16728, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAmount", "nodeType": "MemberAccess", "referencedDeclaration": 15938, "src": "18102:30:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16729, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 28258, "src": "18102:34:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 16731, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18102:42:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18080:64:42"}, {"expression": {"arguments": [{"expression": {"id": 16734, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "18175:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16735, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeToken", "nodeType": "MemberAccess", "referencedDeclaration": 15936, "src": "18175:29:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16736, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "18205:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "18205:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 16740, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "18241:4:42", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}], "id": 16739, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "18233:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16738, "name": "address", "nodeType": "ElementaryTypeName", "src": "18233:7:42", "typeDescriptions": {}}}, "id": 16741, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18233:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16742, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "18264:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16743, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAmount", "nodeType": "MemberAccess", "referencedDeclaration": 15938, "src": "18264:30:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16733, "name": "_pullUnderlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17719, "src": "18159:15:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,address,uint256)"}}, "id": 16744, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18159:136:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16745, "nodeType": "ExpressionStatement", "src": "18159:136:42"}, {"expression": {"arguments": [{"expression": {"id": 16751, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "18377:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16752, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15934, "src": "18377:31:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16753, "name": "providerCut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16726, "src": "18426:11:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 16747, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "18316:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16748, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeToken", "nodeType": "MemberAccess", "referencedDeclaration": 15936, "src": "18316:29:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16746, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27843, "src": "18309:6:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$", "typeString": "type(contract IERC20)"}}, "id": 16749, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18309:37:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27843", "typeString": "contract IERC20"}}, "id": 16750, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 27874, "src": "18309:50:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27843_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27843_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 16754, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18309:142:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16755, "nodeType": "ExpressionStatement", "src": "18309:142:42"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 16758, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 16756, "name": "OPCcut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16707, "src": "18468:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 16757, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18477:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "18468:10:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 16773, "nodeType": "IfStatement", "src": "18465:193:42", "trueBody": {"id": 16772, "nodeType": "Block", "src": "18479:179:42", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 16765, "name": "router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15917, "src": "18578:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16764, "name": "IFactoryRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4096, "src": "18563:14:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$", "typeString": "type(contract IFactoryRouter)"}}, "id": 16766, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18563:22:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFactoryRouter_$4096", "typeString": "contract IFactoryRouter"}}, "id": 16767, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getOPCCollector", "nodeType": "MemberAccess", "referencedDeclaration": 4095, "src": "18563:38:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 16768, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18563:40:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16769, "name": "OPCcut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16707, "src": "18621:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 16760, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16608, "src": "18502:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}, "id": 16761, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "providerFeeToken", "nodeType": "MemberAccess", "referencedDeclaration": 15936, "src": "18502:29:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16759, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27843, "src": "18495:6:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$", "typeString": "type(contract IERC20)"}}, "id": 16762, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18495:37:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27843", "typeString": "contract IERC20"}}, "id": 16763, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 27874, "src": "18495:50:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27843_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27843_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 16770, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18495:146:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16771, "nodeType": "ExpressionStatement", "src": "18495:146:42"}]}}]}}]}, "documentation": {"id": 16605, "nodeType": "StructuredDocumentation", "src": "16141:203:42", "text": " @dev _checkProviderFee\n      Checks if a providerFee structure is valid, signed and \n      transfers fee to providerAddress\n @param _providerFee providerFee structure"}, "id": 16777, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkProviderFee", "nameLocation": "16358:17:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16609, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16608, "mutability": "mutable", "name": "_providerFee", "nameLocation": "16397:12:42", "nodeType": "VariableDeclaration", "scope": 16777, "src": "16376:33:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee"}, "typeName": {"id": 16607, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 16606, "name": "providerFee", "nodeType": "IdentifierPath", "referencedDeclaration": 15949, "src": "16376:11:42"}, "referencedDeclaration": 15949, "src": "16376:11:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_storage_ptr", "typeString": "struct ERC20Template.providerFee"}}, "visibility": "internal"}], "src": "16375:35:42"}, "returnParameters": {"id": 16610, "nodeType": "ParameterList", "parameters": [], "src": "16419:0:42"}, "scope": 17877, "src": "16349:2325:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 16931, "nodeType": "Block", "src": "19328:2385:42", "statements": [{"assignments": [16794], "declarations": [{"constant": false, "id": 16794, "mutability": "mutable", "name": "amount", "nameLocation": "19346:6:42", "nodeType": "VariableDeclaration", "scope": 16931, "src": "19338:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16793, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19338:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 16796, "initialValue": {"hexValue": "31653138", "id": 16795, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19355:4:42", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}, "nodeType": "VariableDeclarationStatement", "src": "19338:21:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 16803, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"expression": {"id": 16799, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "19440:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16800, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "19440:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16798, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28611, "src": "19430:9:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 16801, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19430:21:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 16802, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16794, "src": "19455:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19430:31:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f7420656e6f7567682064617461746f6b656e7320746f207374617274204f72646572", "id": 16804, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "19475:38:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2fb433bc65a1adf47fe35c09caf2b66194c4e8f335bac7afc336a5965ea5a6ac", "typeString": "literal_string \"Not enough datatokens to start Order\""}, "value": "Not enough datatokens to start Order"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2fb433bc65a1adf47fe35c09caf2b66194c4e8f335bac7afc336a5965ea5a6ac", "typeString": "literal_string \"Not enough datatokens to start Order\""}], "id": 16797, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "19409:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16805, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19409:114:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16806, "nodeType": "ExpressionStatement", "src": "19409:114:42"}, {"eventCall": {"arguments": [{"id": 16808, "name": "consumer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16780, "src": "19564:8:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16809, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "19586:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16810, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "19586:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16811, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16794, "src": "19610:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 16812, "name": "serviceIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16782, "src": "19630:12:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 16813, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "19656:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 16814, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "19656:15:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 16815, "name": "publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15899, "src": "19685:23:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16816, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "19722:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 16817, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "19722:12:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16807, "name": "OrderStarted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15972, "src": "19538:12:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256,uint256,uint256,address,uint256)"}}, "id": 16818, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19538:206:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16819, "nodeType": "EmitStatement", "src": "19533:211:42"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 16836, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 16829, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 16822, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 16820, "name": "publishMarketFeeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15903, "src": "19975:22:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 16821, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20000:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "19975:26:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16828, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 16823, "name": "publishMarketFeeToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15901, "src": "20017:21:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 16826, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20050:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 16825, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20042:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16824, "name": "address", "nodeType": "ElementaryTypeName", "src": "20042:7:42", "typeDescriptions": {}}}, "id": 16827, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20042:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "20017:35:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "19975:77:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16835, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 16830, "name": "publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15899, "src": "20068:23:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 16833, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20103:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 16832, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20095:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16831, "name": "address", "nodeType": "ElementaryTypeName", "src": "20095:7:42", "typeDescriptions": {}}}, "id": 16834, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20095:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "20068:37:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "19975:130:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 16852, "nodeType": "IfStatement", "src": "19958:495:42", "trueBody": {"id": 16851, "nodeType": "Block", "src": "20116:337:42", "statements": [{"expression": {"arguments": [{"id": 16838, "name": "publishMarketFeeToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15901, "src": "20146:21:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16839, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "20168:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16840, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "20168:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16841, "name": "publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15899, "src": "20196:23:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16842, "name": "publishMarketFeeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15903, "src": "20237:22:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16837, "name": "_pullUnderlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17719, "src": "20130:15:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,address,uint256)"}}, "id": 16843, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20130:130:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16844, "nodeType": "ExpressionStatement", "src": "20130:130:42"}, {"eventCall": {"arguments": [{"id": 16846, "name": "publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15899, "src": "20326:23:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16847, "name": "publishMarketFeeToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15901, "src": "20367:21:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16848, "name": "publishMarketFeeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15903, "src": "20406:22:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16845, "name": "PublishMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16020, "src": "20292:16:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 16849, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20292:150:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16850, "nodeType": "EmitStatement", "src": "20287:155:42"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 16872, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 16864, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 16856, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 16853, "name": "_consumeMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16788, "src": "20646:17:42", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr", "typeString": "struct ERC20Template.consumeMarketFee calldata"}}, "id": 16854, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "consumeMarketFeeAmount", "nodeType": "MemberAccess", "referencedDeclaration": 15955, "src": "20646:40:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 16855, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20689:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "20646:44:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16863, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 16857, "name": "_consumeMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16788, "src": "20706:17:42", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr", "typeString": "struct ERC20Template.consumeMarketFee calldata"}}, "id": 16858, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "consumeMarketFeeToken", "nodeType": "MemberAccess", "referencedDeclaration": 15953, "src": "20706:39:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 16861, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20757:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 16860, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20749:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16859, "name": "address", "nodeType": "ElementaryTypeName", "src": "20749:7:42", "typeDescriptions": {}}}, "id": 16862, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20749:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "20706:53:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "20646:113:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 16871, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 16865, "name": "_consumeMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16788, "src": "20775:17:42", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr", "typeString": "struct ERC20Template.consumeMarketFee calldata"}}, "id": 16866, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "consumeMarketFeeAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15951, "src": "20775:41:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 16869, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20828:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 16868, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20820:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 16867, "name": "address", "nodeType": "ElementaryTypeName", "src": "20820:7:42", "typeDescriptions": {}}}, "id": 16870, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20820:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "20775:55:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "20646:184:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 16894, "nodeType": "IfStatement", "src": "20629:644:42", "trueBody": {"id": 16893, "nodeType": "Block", "src": "20841:432:42", "statements": [{"expression": {"arguments": [{"expression": {"id": 16874, "name": "_consumeMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16788, "src": "20871:17:42", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr", "typeString": "struct ERC20Template.consumeMarketFee calldata"}}, "id": 16875, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "consumeMarketFeeToken", "nodeType": "MemberAccess", "referencedDeclaration": 15953, "src": "20871:39:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16876, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "20911:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16877, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "20911:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16878, "name": "_consumeMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16788, "src": "20939:17:42", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr", "typeString": "struct ERC20Template.consumeMarketFee calldata"}}, "id": 16879, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "consumeMarketFeeAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15951, "src": "20939:41:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16880, "name": "_consumeMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16788, "src": "20998:17:42", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr", "typeString": "struct ERC20Template.consumeMarketFee calldata"}}, "id": 16881, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "consumeMarketFeeAmount", "nodeType": "MemberAccess", "referencedDeclaration": 15955, "src": "20998:40:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16873, "name": "_pullUnderlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17719, "src": "20855:15:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,address,uint256)"}}, "id": 16882, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20855:184:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16883, "nodeType": "ExpressionStatement", "src": "20855:184:42"}, {"eventCall": {"arguments": [{"expression": {"id": 16885, "name": "_consumeMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16788, "src": "21092:17:42", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr", "typeString": "struct ERC20Template.consumeMarketFee calldata"}}, "id": 16886, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "consumeMarketFeeAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15951, "src": "21092:41:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16887, "name": "_consumeMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16788, "src": "21151:17:42", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr", "typeString": "struct ERC20Template.consumeMarketFee calldata"}}, "id": 16888, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "consumeMarketFeeToken", "nodeType": "MemberAccess", "referencedDeclaration": 15953, "src": "21151:39:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16889, "name": "_consumeMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16788, "src": "21208:17:42", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr", "typeString": "struct ERC20Template.consumeMarketFee calldata"}}, "id": 16890, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "consumeMarketFeeAmount", "nodeType": "MemberAccess", "referencedDeclaration": 15955, "src": "21208:40:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16884, "name": "ConsumeMarketFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16028, "src": "21058:16:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 16891, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21058:204:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16892, "nodeType": "EmitStatement", "src": "21053:209:42"}]}}, {"expression": {"arguments": [{"id": 16896, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16785, "src": "21300:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}], "id": 16895, "name": "_checkProviderFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16777, "src": "21282:17:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_providerFee_$15949_calldata_ptr_$returns$__$", "typeString": "function (struct ERC20Template.providerFee calldata)"}}, "id": 16897, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21282:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16898, "nodeType": "ExpressionStatement", "src": "21282:31:42"}, {"assignments": [16900], "declarations": [{"constant": false, "id": 16900, "mutability": "mutable", "name": "OPCFee", "nameLocation": "21331:6:42", "nodeType": "VariableDeclaration", "scope": 16931, "src": "21323:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16899, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21323:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 16906, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 16902, "name": "router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15917, "src": "21355:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16901, "name": "IFactoryRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4096, "src": "21340:14:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$", "typeString": "type(contract IFactoryRouter)"}}, "id": 16903, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21340:22:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFactoryRouter_$4096", "typeString": "contract IFactoryRouter"}}, "id": 16904, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getOPCConsumeFee", "nodeType": "MemberAccess", "referencedDeclaration": 3947, "src": "21340:39:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 16905, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21340:41:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "21323:58:42"}, {"expression": {"arguments": [{"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 16909, "name": "getPaymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17594, "src": "21469:19:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 16910, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21469:21:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 16913, "name": "OPCFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16900, "src": "21503:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 16911, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16794, "src": "21492:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 16912, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 28258, "src": "21492:10:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 16914, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21492:18:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16908, "name": "transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28632, "src": "21460:8:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) returns (bool)"}}, "id": 16915, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21460:51:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4661696c656420746f2073656e6420445420746f207075626c6973686572", "id": 16916, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "21525:32:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_505e5a3d25a2a61c542451fb77ef778c17102a417cd6b8f3e490fd904702842e", "typeString": "literal_string \"Failed to send DT to publisher\""}, "value": "Failed to send DT to publisher"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_505e5a3d25a2a61c542451fb77ef778c17102a417cd6b8f3e490fd904702842e", "typeString": "literal_string \"Failed to send DT to publisher\""}], "id": 16907, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "21439:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16917, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21439:128:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16918, "nodeType": "ExpressionStatement", "src": "21439:128:42"}, {"expression": {"arguments": [{"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 16922, "name": "router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15917, "src": "21622:6:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16921, "name": "IFactoryRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4096, "src": "21607:14:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$", "typeString": "type(contract IFactoryRouter)"}}, "id": 16923, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21607:22:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFactoryRouter_$4096", "typeString": "contract IFactoryRouter"}}, "id": 16924, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getOPCCollector", "nodeType": "MemberAccess", "referencedDeclaration": 4095, "src": "21607:38:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 16925, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21607:40:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 16926, "name": "OPCFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16900, "src": "21649:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16920, "name": "transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28632, "src": "21598:8:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) returns (bool)"}}, "id": 16927, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21598:58:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4661696c656420746f2073656e6420445420746f204f5043", "id": 16928, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "21670:26:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_18add486da42db80c28142050c2583e021ebac1881f9714debcbbe4b12881a0d", "typeString": "literal_string \"Failed to send DT to OPC\""}, "value": "Failed to send DT to OPC"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_18add486da42db80c28142050c2583e021ebac1881f9714debcbbe4b12881a0d", "typeString": "literal_string \"Failed to send DT to OPC\""}], "id": 16919, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "21577:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 16929, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21577:129:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16930, "nodeType": "ExpressionStatement", "src": "21577:129:42"}]}, "documentation": {"id": 16778, "nodeType": "StructuredDocumentation", "src": "18684:439:42", "text": " @dev startOrder\n      called by payer or consumer prior ordering a service consume on a marketplace.\n      Requires previous approval of consumeFeeToken and publishMarketFeeToken\n @param consumer is the consumer address (payer could be different address)\n @param serviceIndex service index in the metadata\n @param _providerFee provider fee\n @param _consumeMarketFee consume market fee"}, "functionSelector": "79d9d7f3", "id": 16932, "implemented": true, "kind": "function", "modifiers": [{"id": 16791, "kind": "modifierInvocation", "modifierName": {"id": 16790, "name": "nonReentrant", "nodeType": "IdentifierPath", "referencedDeclaration": 27764, "src": "19315:12:42"}, "nodeType": "ModifierInvocation", "src": "19315:12:42"}], "name": "startOrder", "nameLocation": "19137:10:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16789, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16780, "mutability": "mutable", "name": "consumer", "nameLocation": "19165:8:42", "nodeType": "VariableDeclaration", "scope": 16932, "src": "19157:16:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16779, "name": "address", "nodeType": "ElementaryTypeName", "src": "19157:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 16782, "mutability": "mutable", "name": "serviceIndex", "nameLocation": "19191:12:42", "nodeType": "VariableDeclaration", "scope": 16932, "src": "19183:20:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16781, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19183:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 16785, "mutability": "mutable", "name": "_providerFee", "nameLocation": "19234:12:42", "nodeType": "VariableDeclaration", "scope": 16932, "src": "19213:33:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee"}, "typeName": {"id": 16784, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 16783, "name": "providerFee", "nodeType": "IdentifierPath", "referencedDeclaration": 15949, "src": "19213:11:42"}, "referencedDeclaration": 15949, "src": "19213:11:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_storage_ptr", "typeString": "struct ERC20Template.providerFee"}}, "visibility": "internal"}, {"constant": false, "id": 16788, "mutability": "mutable", "name": "_consumeMarketFee", "nameLocation": "19282:17:42", "nodeType": "VariableDeclaration", "scope": 16932, "src": "19256:43:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr", "typeString": "struct ERC20Template.consumeMarketFee"}, "typeName": {"id": 16787, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 16786, "name": "consumeMarketFee", "nodeType": "IdentifierPath", "referencedDeclaration": 15956, "src": "19256:16:42"}, "referencedDeclaration": 15956, "src": "19256:16:42", "typeDescriptions": {"typeIdentifier": "t_struct$_consumeMarketFee_$15956_storage_ptr", "typeString": "struct ERC20Template.consumeMarketFee"}}, "visibility": "internal"}], "src": "19147:158:42"}, "returnParameters": {"id": 16792, "nodeType": "ParameterList", "parameters": [], "src": "19328:0:42"}, "scope": 17877, "src": "19128:2585:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 16957, "nodeType": "Block", "src": "22202:186:42", "statements": [{"eventCall": {"arguments": [{"id": 16944, "name": "orderTxId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16935, "src": "22242:9:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 16945, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "22265:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16946, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "22265:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 16947, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "22289:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 16948, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "22289:15:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 16949, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "22318:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 16950, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "22318:12:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 16943, "name": "OrderReused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15982, "src": "22217:11:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (bytes32,address,uint256,uint256)"}}, "id": 16951, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22217:123:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16952, "nodeType": "EmitStatement", "src": "22212:128:42"}, {"expression": {"arguments": [{"id": 16954, "name": "_providerFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16938, "src": "22368:12:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee calldata"}], "id": 16953, "name": "_checkProviderFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16777, "src": "22350:17:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_providerFee_$15949_calldata_ptr_$returns$__$", "typeString": "function (struct ERC20Template.providerFee calldata)"}}, "id": 16955, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22350:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16956, "nodeType": "ExpressionStatement", "src": "22350:31:42"}]}, "documentation": {"id": 16933, "nodeType": "StructuredDocumentation", "src": "21719:360:42", "text": " @dev reuseOrder\n      called by payer or consumer having a valid order, but with expired provider access\n      Pays the provider fee again, but it will not require a new datatoken payment\n      Requires previous approval of provider fee.\n @param orderTxId previous valid order\n @param _providerFee provider feee"}, "functionSelector": "361fef49", "id": 16958, "implemented": true, "kind": "function", "modifiers": [{"id": 16941, "kind": "modifierInvocation", "modifierName": {"id": 16940, "name": "nonReentrant", "nodeType": "IdentifierPath", "referencedDeclaration": 27764, "src": "22189:12:42"}, "nodeType": "ModifierInvocation", "src": "22189:12:42"}], "name": "reuseOrder", "nameLocation": "22093:10:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16939, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16935, "mutability": "mutable", "name": "orderTxId", "nameLocation": "22121:9:42", "nodeType": "VariableDeclaration", "scope": 16958, "src": "22113:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 16934, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "22113:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 16938, "mutability": "mutable", "name": "_providerFee", "nameLocation": "22161:12:42", "nodeType": "VariableDeclaration", "scope": 16958, "src": "22140:33:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr", "typeString": "struct ERC20Template.providerFee"}, "typeName": {"id": 16937, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 16936, "name": "providerFee", "nodeType": "IdentifierPath", "referencedDeclaration": 15949, "src": "22140:11:42"}, "referencedDeclaration": 15949, "src": "22140:11:42", "typeDescriptions": {"typeIdentifier": "t_struct$_providerFee_$15949_storage_ptr", "typeString": "struct ERC20Template.providerFee"}}, "visibility": "internal"}], "src": "22103:76:42"}, "returnParameters": {"id": 16942, "nodeType": "ParameterList", "parameters": [], "src": "22202:0:42"}, "scope": 17877, "src": "22084:304:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 16970, "nodeType": "Block", "src": "22637:36:42", "statements": [{"expression": {"arguments": [{"id": 16967, "name": "_minter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16961, "src": "22658:7:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16966, "name": "_addMinter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21276, "src": "22647:10:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 16968, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22647:19:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16969, "nodeType": "ExpressionStatement", "src": "22647:19:42"}]}, "documentation": {"id": 16959, "nodeType": "StructuredDocumentation", "src": "22394:174:42", "text": " @dev addMinter\n      Only ERC20Deployer (at 721 level) can update.\n      There can be multiple minters\n @param _minter new minter address"}, "functionSelector": "983b2d56", "id": 16971, "implemented": true, "kind": "function", "modifiers": [{"id": 16964, "kind": "modifierInvocation", "modifierName": {"id": 16963, "name": "onlyERC20Deployer", "nodeType": "IdentifierPath", "referencedDeclaration": 16165, "src": "22619:17:42"}, "nodeType": "ModifierInvocation", "src": "22619:17:42"}], "name": "addMinter", "nameLocation": "22583:9:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16962, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16961, "mutability": "mutable", "name": "_minter", "nameLocation": "22601:7:42", "nodeType": "VariableDeclaration", "scope": 16971, "src": "22593:15:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16960, "name": "address", "nodeType": "ElementaryTypeName", "src": "22593:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "22592:17:42"}, "returnParameters": {"id": 16965, "nodeType": "ParameterList", "parameters": [], "src": "22637:0:42"}, "scope": 17877, "src": "22574:99:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 16983, "nodeType": "Block", "src": "22934:39:42", "statements": [{"expression": {"arguments": [{"id": 16980, "name": "_minter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16974, "src": "22958:7:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16979, "name": "_removeMinter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21310, "src": "22944:13:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 16981, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22944:22:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16982, "nodeType": "ExpressionStatement", "src": "22944:22:42"}]}, "documentation": {"id": 16972, "nodeType": "StructuredDocumentation", "src": "22679:183:42", "text": " @dev removeMinter\n      Only ERC20Deployer (at 721 level) can update.\n      There can be multiple minters\n @param _minter minter address to remove"}, "functionSelector": "3092afd5", "id": 16984, "implemented": true, "kind": "function", "modifiers": [{"id": 16977, "kind": "modifierInvocation", "modifierName": {"id": 16976, "name": "onlyERC20Deployer", "nodeType": "IdentifierPath", "referencedDeclaration": 16165, "src": "22916:17:42"}, "nodeType": "ModifierInvocation", "src": "22916:17:42"}], "name": "removeMinter", "nameLocation": "22877:12:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16975, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16974, "mutability": "mutable", "name": "_minter", "nameLocation": "22898:7:42", "nodeType": "VariableDeclaration", "scope": 16984, "src": "22890:15:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16973, "name": "address", "nodeType": "ElementaryTypeName", "src": "22890:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "22889:17:42"}, "returnParameters": {"id": 16978, "nodeType": "ParameterList", "parameters": [], "src": "22934:0:42"}, "scope": 17877, "src": "22868:105:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 16996, "nodeType": "Block", "src": "23343:52:42", "statements": [{"expression": {"arguments": [{"id": 16993, "name": "_paymentManager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16987, "src": "23372:15:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 16992, "name": "_addPaymentManager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21380, "src": "23353:18:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 16994, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23353:35:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 16995, "nodeType": "ExpressionStatement", "src": "23353:35:42"}]}, "documentation": {"id": 16985, "nodeType": "StructuredDocumentation", "src": "22979:259:42", "text": " @dev addPaymentManager (can set who's going to collect fee when consuming orders)\n      Only ERC20Deployer (at 721 level) can update.\n      There can be multiple paymentCollectors\n @param _paymentManager new minter address"}, "functionSelector": "aa492ef9", "id": 16997, "implemented": true, "kind": "function", "modifiers": [{"id": 16990, "kind": "modifierInvocation", "modifierName": {"id": 16989, "name": "onlyERC20Deployer", "nodeType": "IdentifierPath", "referencedDeclaration": 16165, "src": "23321:17:42"}, "nodeType": "ModifierInvocation", "src": "23321:17:42"}], "name": "addPaymentManager", "nameLocation": "23253:17:42", "nodeType": "FunctionDefinition", "parameters": {"id": 16988, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16987, "mutability": "mutable", "name": "_paymentManager", "nameLocation": "23279:15:42", "nodeType": "VariableDeclaration", "scope": 16997, "src": "23271:23:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16986, "name": "address", "nodeType": "ElementaryTypeName", "src": "23271:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "23270:25:42"}, "returnParameters": {"id": 16991, "nodeType": "ParameterList", "parameters": [], "src": "23343:0:42"}, "scope": 17877, "src": "23244:151:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 17009, "nodeType": "Block", "src": "23725:55:42", "statements": [{"expression": {"arguments": [{"id": 17006, "name": "_paymentManager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17000, "src": "23757:15:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17005, "name": "_removePaymentManager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21414, "src": "23735:21:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 17007, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23735:38:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17008, "nodeType": "ExpressionStatement", "src": "23735:38:42"}]}, "documentation": {"id": 16998, "nodeType": "StructuredDocumentation", "src": "23401:216:42", "text": " @dev removePaymentManager\n      Only ERC20Deployer (at 721 level) can update.\n      There can be multiple paymentManagers\n @param _paymentManager _paymentManager address to remove"}, "functionSelector": "25b00243", "id": 17010, "implemented": true, "kind": "function", "modifiers": [{"id": 17003, "kind": "modifierInvocation", "modifierName": {"id": 17002, "name": "onlyERC20Deployer", "nodeType": "IdentifierPath", "referencedDeclaration": 16165, "src": "23703:17:42"}, "nodeType": "ModifierInvocation", "src": "23703:17:42"}], "name": "removePaymentManager", "nameLocation": "23632:20:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17001, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17000, "mutability": "mutable", "name": "_paymentManager", "nameLocation": "23661:15:42", "nodeType": "VariableDeclaration", "scope": 17010, "src": "23653:23:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16999, "name": "address", "nodeType": "ElementaryTypeName", "src": "23653:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "23652:25:42"}, "returnParameters": {"id": 17004, "nodeType": "ParameterList", "parameters": [], "src": "23725:0:42"}, "scope": 17877, "src": "23623:157:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 17038, "nodeType": "Block", "src": "24109:140:42", "statements": [{"assignments": [17019], "declarations": [{"constant": false, "id": 17019, "mutability": "mutable", "name": "key", "nameLocation": "24127:3:42", "nodeType": "VariableDeclaration", "scope": 17038, "src": "24119:11:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 17018, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "24119:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 17029, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"id": 17025, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "24168:4:42", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}], "id": 17024, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24160:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17023, "name": "address", "nodeType": "ElementaryTypeName", "src": "24160:7:42", "typeDescriptions": {}}}, "id": 17026, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24160:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 17021, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "24143:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 17022, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "24143:16:42", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 17027, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24143:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 17020, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "24133:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 17028, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24133:42:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "24119:56:42"}, {"expression": {"arguments": [{"id": 17034, "name": "key", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17019, "src": "24230:3:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17035, "name": "_value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17013, "src": "24235:6:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "expression": {"arguments": [{"id": 17031, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "24201:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17030, "name": "IERC721Template", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3697, "src": "24185:15:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$", "typeString": "type(contract IERC721Template)"}}, "id": 17032, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24185:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Template_$3697", "typeString": "contract IERC721Template"}}, "id": 17033, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setDataERC20", "nodeType": "MemberAccess", "referencedDeclaration": 3622, "src": "24185:44:42", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes32,bytes memory) external"}}, "id": 17036, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24185:57:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17037, "nodeType": "ExpressionStatement", "src": "24185:57:42"}]}, "documentation": {"id": 17011, "nodeType": "StructuredDocumentation", "src": "23786:250:42", "text": " @dev setData\n      Only ERC20Deployer (at 721 level) can call it.\n      This function allows to store data with a preset key (keccak256(ERC20Address)) into NFT 725 Store\n @param _value data to be set with this key"}, "functionSelector": "ab62f0e1", "id": 17039, "implemented": true, "kind": "function", "modifiers": [{"id": 17016, "kind": "modifierInvocation", "modifierName": {"id": 17015, "name": "onlyERC20Deployer", "nodeType": "IdentifierPath", "referencedDeclaration": 16165, "src": "24091:17:42"}, "nodeType": "ModifierInvocation", "src": "24091:17:42"}], "name": "setData", "nameLocation": "24051:7:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17014, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17013, "mutability": "mutable", "name": "_value", "nameLocation": "24074:6:42", "nodeType": "VariableDeclaration", "scope": 17039, "src": "24059:21:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 17012, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "24059:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "24058:23:42"}, "returnParameters": {"id": 17017, "nodeType": "ParameterList", "parameters": [], "src": "24109:0:42"}, "scope": 17877, "src": "24042:207:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 17048, "nodeType": "Block", "src": "24514:53:42", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17045, "name": "_internalCleanPermissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17255, "src": "24524:25:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 17046, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24524:27:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17047, "nodeType": "ExpressionStatement", "src": "24524:27:42"}]}, "documentation": {"id": 17040, "nodeType": "StructuredDocumentation", "src": "24255:203:42", "text": " @dev cleanPermissions()\n      Only NFT Owner (at 721 level) can call it.\n      This function allows to remove all minters, feeManagers and reset the paymentCollector"}, "functionSelector": "4f189cb2", "id": 17049, "implemented": true, "kind": "function", "modifiers": [{"id": 17043, "kind": "modifierInvocation", "modifierName": {"id": 17042, "name": "onlyNFTOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 16127, "src": "24501:12:42"}, "nodeType": "ModifierInvocation", "src": "24501:12:42"}], "name": "cleanPermissions", "nameLocation": "24473:16:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17041, "nodeType": "ParameterList", "parameters": [], "src": "24489:2:42"}, "returnParameters": {"id": 17044, "nodeType": "ParameterList", "parameters": [], "src": "24514:0:42"}, "scope": 17877, "src": "24464:103:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 17064, "nodeType": "Block", "src": "24979:169:42", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 17057, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17054, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "25010:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 17055, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "25010:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 17056, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "25024:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "25010:28:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a204e4f542037323120436f6e7472616374", "id": 17058, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "25052:33:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_41dbc1fb97058030e6e1c41a97d5776c4ff7614ef70186ad13a73b1775a45833", "typeString": "literal_string \"ERC20Template: NOT 721 Contract\""}, "value": "ERC20Template: NOT 721 Contract"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_41dbc1fb97058030e6e1c41a97d5776c4ff7614ef70186ad13a73b1775a45833", "typeString": "literal_string \"ERC20Template: NOT 721 Contract\""}], "id": 17053, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "24989:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17059, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24989:106:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17060, "nodeType": "ExpressionStatement", "src": "24989:106:42"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17061, "name": "_internalCleanPermissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17255, "src": "25105:25:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 17062, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25105:27:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17063, "nodeType": "ExpressionStatement", "src": "25105:27:42"}]}, "documentation": {"id": 17050, "nodeType": "StructuredDocumentation", "src": "24582:359:42", "text": " @dev cleanFrom721()\n      OnlyNFT(721) Contract can call it.\n      This function allows to remove all minters, feeManagers and reset the paymentCollector\n       This function is used when transferring an NFT to a new owner,\n so that permissions at ERC20level (minter,feeManager,paymentCollector) can be reset."}, "functionSelector": "82c03da5", "id": 17065, "implemented": true, "kind": "function", "modifiers": [], "name": "cleanFrom721", "nameLocation": "24955:12:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17051, "nodeType": "ParameterList", "parameters": [], "src": "24967:2:42"}, "returnParameters": {"id": 17052, "nodeType": "ParameterList", "parameters": [], "src": "24979:0:42"}, "scope": 17877, "src": "24946:202:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 17254, "nodeType": "Block", "src": "25200:1966:42", "statements": [{"assignments": [17069], "declarations": [{"constant": false, "id": 17069, "mutability": "mutable", "name": "totalLen", "nameLocation": "25218:8:42", "nodeType": "VariableDeclaration", "scope": 17254, "src": "25210:16:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17068, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25210:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17075, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17074, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17070, "name": "fixedRateExchanges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15929, "src": "25229:18:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}, "id": 17071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "25229:25:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 17072, "name": "dispensers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15932, "src": "25257:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 17073, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "25257:17:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25229:45:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "25210:64:42"}, {"assignments": [17077], "declarations": [{"constant": false, "id": 17077, "mutability": "mutable", "name": "curentLen", "nameLocation": "25292:9:42", "nodeType": "VariableDeclaration", "scope": 17254, "src": "25284:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17076, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25284:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17079, "initialValue": {"hexValue": "30", "id": 17078, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25304:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "25284:21:42"}, {"assignments": [17084], "declarations": [{"constant": false, "id": 17084, "mutability": "mutable", "name": "previousMinters", "nameLocation": "25332:15:42", "nodeType": "VariableDeclaration", "scope": 17254, "src": "25315:32:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 17082, "name": "address", "nodeType": "ElementaryTypeName", "src": "25315:7:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17083, "nodeType": "ArrayTypeName", "src": "25315:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "id": 17090, "initialValue": {"arguments": [{"id": 17088, "name": "totalLen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17069, "src": "25362:8:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17087, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "25348:13:42", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address[] memory)"}, "typeName": {"baseType": {"id": 17085, "name": "address", "nodeType": "ElementaryTypeName", "src": "25352:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17086, "nodeType": "ArrayTypeName", "src": "25352:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "id": 17089, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25348:23:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "25315:56:42"}, {"assignments": [17092], "declarations": [{"constant": false, "id": 17092, "mutability": "mutable", "name": "i", "nameLocation": "25469:1:42", "nodeType": "VariableDeclaration", "scope": 17254, "src": "25461:9:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17091, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25461:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17093, "nodeType": "VariableDeclarationStatement", "src": "25461:9:42"}, {"body": {"id": 17181, "nodeType": "Block", "src": "25523:985:42", "statements": [{"assignments": [17107], "declarations": [{"constant": false, "id": 17107, "mutability": "mutable", "name": "fre", "nameLocation": "25560:3:42", "nodeType": "VariableDeclaration", "scope": 17181, "src": "25541:22:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IFixedRateExchange_$4270", "typeString": "contract IFixedRateExchange"}, "typeName": {"id": 17106, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 17105, "name": "IFixedRateExchange", "nodeType": "IdentifierPath", "referencedDeclaration": 4270, "src": "25541:18:42"}, "referencedDeclaration": 4270, "src": "25541:18:42", "typeDescriptions": {"typeIdentifier": "t_contract$_IFixedRateExchange_$4270", "typeString": "contract IFixedRateExchange"}}, "visibility": "internal"}], "id": 17114, "initialValue": {"arguments": [{"expression": {"baseExpression": {"id": 17109, "name": "fixedRateExchanges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15929, "src": "25585:18:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}, "id": 17111, "indexExpression": {"id": 17110, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "25604:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "25585:21:42", "typeDescriptions": {"typeIdentifier": "t_struct$_fixedRate_$15925_storage", "typeString": "struct ERC20Template.fixedRate storage ref"}}, "id": 17112, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "contractAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15922, "src": "25585:37:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17108, "name": "IFixedRateExchange", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4270, "src": "25566:18:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IFixedRateExchange_$4270_$", "typeString": "type(contract IFixedRateExchange)"}}, "id": 17113, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25566:57:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFixedRateExchange_$4270", "typeString": "contract IFixedRateExchange"}}, "nodeType": "VariableDeclarationStatement", "src": "25541:82:42"}, {"assignments": [null, null, null, null, null, null, null, null, null, 17116, 17118, 17120], "declarations": [null, null, null, null, null, null, null, null, null, {"constant": false, "id": 17116, "mutability": "mutable", "name": "dtBalance", "nameLocation": "25869:9:42", "nodeType": "VariableDeclaration", "scope": 17181, "src": "25861:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17115, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25861:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 17118, "mutability": "mutable", "name": "btBalance", "nameLocation": "25908:9:42", "nodeType": "VariableDeclaration", "scope": 17181, "src": "25900:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17117, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25900:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 17120, "mutability": "mutable", "name": "withMint", "nameLocation": "25944:8:42", "nodeType": "VariableDeclaration", "scope": 17181, "src": "25939:13:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 17119, "name": "bool", "nodeType": "ElementaryTypeName", "src": "25939:4:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 17128, "initialValue": {"arguments": [{"expression": {"baseExpression": {"id": 17123, "name": "fixedRateExchanges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15929, "src": "25989:18:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}, "id": 17125, "indexExpression": {"id": 17124, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26008:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "25989:21:42", "typeDescriptions": {"typeIdentifier": "t_struct$_fixedRate_$15925_storage", "typeString": "struct ERC20Template.fixedRate storage ref"}}, "id": 17126, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "id", "nodeType": "MemberAccess", "referencedDeclaration": 15924, "src": "25989:24:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 17121, "name": "fre", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17107, "src": "25973:3:42", "typeDescriptions": {"typeIdentifier": "t_contract$_IFixedRateExchange_$4270", "typeString": "contract IFixedRateExchange"}}, "id": 17122, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getExchange", "nodeType": "MemberAccess", "referencedDeclaration": 4173, "src": "25973:15:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$", "typeString": "function (bytes32) view external returns (address,address,uint256,address,uint256,uint256,bool,uint256,uint256,uint256,uint256,bool)"}}, "id": 17127, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25973:41:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$", "typeString": "tuple(address,address,uint256,address,uint256,uint256,bool,uint256,uint256,uint256,uint256,bool)"}}, "nodeType": "VariableDeclarationStatement", "src": "25641:373:42"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17131, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17129, "name": "btBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17118, "src": "26035:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 17130, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26045:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26035:11:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17142, "nodeType": "IfStatement", "src": "26032:86:42", "trueBody": {"expression": {"arguments": [{"expression": {"baseExpression": {"id": 17135, "name": "fixedRateExchanges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15929, "src": "26082:18:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}, "id": 17137, "indexExpression": {"id": 17136, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26101:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "26082:21:42", "typeDescriptions": {"typeIdentifier": "t_struct$_fixedRate_$15925_storage", "typeString": "struct ERC20Template.fixedRate storage ref"}}, "id": 17138, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "id", "nodeType": "MemberAccess", "referencedDeclaration": 15924, "src": "26082:24:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17139, "name": "btBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17118, "src": "26108:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17132, "name": "fre", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17107, "src": "26068:3:42", "typeDescriptions": {"typeIdentifier": "t_contract$_IFixedRateExchange_$4270", "typeString": "contract IFixedRateExchange"}}, "id": 17134, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "collectBT", "nodeType": "MemberAccess", "referencedDeclaration": 4262, "src": "26068:13:42", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$", "typeString": "function (bytes32,uint256) external"}}, "id": 17140, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26068:50:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17141, "nodeType": "ExpressionStatement", "src": "26068:50:42"}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17145, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17143, "name": "dtBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17116, "src": "26139:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 17144, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26149:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26139:11:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17156, "nodeType": "IfStatement", "src": "26136:86:42", "trueBody": {"expression": {"arguments": [{"expression": {"baseExpression": {"id": 17149, "name": "fixedRateExchanges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15929, "src": "26186:18:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}, "id": 17151, "indexExpression": {"id": 17150, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26205:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "26186:21:42", "typeDescriptions": {"typeIdentifier": "t_struct$_fixedRate_$15925_storage", "typeString": "struct ERC20Template.fixedRate storage ref"}}, "id": 17152, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "id", "nodeType": "MemberAccess", "referencedDeclaration": 15924, "src": "26186:24:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17153, "name": "dtBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17116, "src": "26212:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17146, "name": "fre", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17107, "src": "26172:3:42", "typeDescriptions": {"typeIdentifier": "t_contract$_IFixedRateExchange_$4270", "typeString": "contract IFixedRateExchange"}}, "id": 17148, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "collectDT", "nodeType": "MemberAccess", "referencedDeclaration": 4269, "src": "26172:13:42", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$", "typeString": "function (bytes32,uint256) external"}}, "id": 17154, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26172:50:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17155, "nodeType": "ExpressionStatement", "src": "26172:50:42"}}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 17166, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"expression": {"baseExpression": {"id": 17158, "name": "fixedRateExchanges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15929, "src": "26301:18:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}, "id": 17160, "indexExpression": {"id": 17159, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26320:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "26301:21:42", "typeDescriptions": {"typeIdentifier": "t_struct$_fixedRate_$15925_storage", "typeString": "struct ERC20Template.fixedRate storage ref"}}, "id": 17161, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "contractAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15922, "src": "26301:37:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17157, "name": "isMinter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21226, "src": "26292:8:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 17162, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26292:47:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 17165, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17163, "name": "withMint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17120, "src": "26343:8:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "74727565", "id": 17164, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "26355:4:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "26343:16:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "26292:67:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17180, "nodeType": "IfStatement", "src": "26289:209:42", "trueBody": {"id": 17179, "nodeType": "Block", "src": "26360:138:42", "statements": [{"expression": {"id": 17174, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 17167, "name": "previousMinters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17084, "src": "26382:15:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 17169, "indexExpression": {"id": 17168, "name": "curentLen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17077, "src": "26398:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "26382:26:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"baseExpression": {"id": 17170, "name": "fixedRateExchanges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15929, "src": "26409:18:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}, "id": 17172, "indexExpression": {"id": 17171, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26428:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "26409:21:42", "typeDescriptions": {"typeIdentifier": "t_struct$_fixedRate_$15925_storage", "typeString": "struct ERC20Template.fixedRate storage ref"}}, "id": 17173, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "contractAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15922, "src": "26409:37:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "26382:64:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17175, "nodeType": "ExpressionStatement", "src": "26382:64:42"}, {"expression": {"id": 17177, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "26468:11:42", "subExpression": {"id": 17176, "name": "curentLen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17077, "src": "26468:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17178, "nodeType": "ExpressionStatement", "src": "26468:11:42"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17101, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17098, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "25489:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 17099, "name": "fixedRateExchanges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15929, "src": "25491:18:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}, "id": 17100, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "25491:25:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25489:27:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17182, "initializationExpression": {"expression": {"id": 17096, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17094, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "25484:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 17095, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25486:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25484:3:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17097, "nodeType": "ExpressionStatement", "src": "25484:3:42"}, "loopExpression": {"expression": {"id": 17103, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "25518:3:42", "subExpression": {"id": 17102, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "25518:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17104, "nodeType": "ExpressionStatement", "src": "25518:3:42"}, "nodeType": "ForStatement", "src": "25480:1028:42"}, {"body": {"id": 17224, "nodeType": "Block", "src": "26624:241:42", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 17202, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "26690:4:42", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}], "id": 17201, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "26682:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17200, "name": "address", "nodeType": "ElementaryTypeName", "src": "26682:7:42", "typeDescriptions": {}}}, "id": 17203, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26682:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"baseExpression": {"id": 17195, "name": "dispensers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15932, "src": "26653:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 17197, "indexExpression": {"id": 17196, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26664:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "26653:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17194, "name": "IDispenser", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3001, "src": "26642:10:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IDispenser_$3001_$", "typeString": "type(contract IDispenser)"}}, "id": 17198, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26642:25:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IDispenser_$3001", "typeString": "contract IDispenser"}}, "id": 17199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerWithdraw", "nodeType": "MemberAccess", "referencedDeclaration": 2988, "src": "26642:39:42", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$", "typeString": "function (address) external"}}, "id": 17204, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26642:54:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17205, "nodeType": "ExpressionStatement", "src": "26642:54:42"}, {"condition": {"arguments": [{"baseExpression": {"id": 17207, "name": "dispensers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15932, "src": "26726:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 17209, "indexExpression": {"id": 17208, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26737:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "26726:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17206, "name": "isMinter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21226, "src": "26717:8:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 17210, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26717:23:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17223, "nodeType": "IfStatement", "src": "26714:141:42", "trueBody": {"id": 17222, "nodeType": "Block", "src": "26741:114:42", "statements": [{"expression": {"id": 17217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 17211, "name": "previousMinters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17084, "src": "26763:15:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 17213, "indexExpression": {"id": 17212, "name": "curentLen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17077, "src": "26779:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "26763:26:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 17214, "name": "dispensers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15932, "src": "26790:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 17216, "indexExpression": {"id": 17215, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26801:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "26790:13:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "26763:40:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17218, "nodeType": "ExpressionStatement", "src": "26763:40:42"}, {"expression": {"id": 17220, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "26825:11:42", "subExpression": {"id": 17219, "name": "curentLen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17077, "src": "26825:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17221, "nodeType": "ExpressionStatement", "src": "26825:11:42"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17190, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17187, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26598:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 17188, "name": "dispensers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15932, "src": "26600:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 17189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "26600:17:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "26598:19:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17225, "initializationExpression": {"expression": {"id": 17185, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17183, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26593:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 17184, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26595:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26593:3:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17186, "nodeType": "ExpressionStatement", "src": "26593:3:42"}, "loopExpression": {"expression": {"id": 17192, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "26619:3:42", "subExpression": {"id": 17191, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "26619:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17193, "nodeType": "ExpressionStatement", "src": "26619:3:42"}, "nodeType": "ForStatement", "src": "26589:276:42"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17226, "name": "_cleanPermissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21472, "src": "26907:17:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 17227, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26907:19:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17228, "nodeType": "ExpressionStatement", "src": "26907:19:42"}, {"expression": {"id": 17234, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17229, "name": "paymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15897, "src": "26966:16:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "30", "id": 17232, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26993:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 17231, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "26985:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17230, "name": "address", "nodeType": "ElementaryTypeName", "src": "26985:7:42", "typeDescriptions": {}}}, "id": 17233, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26985:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "26966:29:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17235, "nodeType": "ExpressionStatement", "src": "26966:29:42"}, {"body": {"id": 17252, "nodeType": "Block", "src": "27096:55:42", "statements": [{"expression": {"arguments": [{"baseExpression": {"id": 17247, "name": "previousMinters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17084, "src": "27121:15:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 17249, "indexExpression": {"id": 17248, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "27137:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "27121:18:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17246, "name": "_addMinter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21276, "src": "27110:10:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 17250, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27110:30:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17251, "nodeType": "ExpressionStatement", "src": "27110:30:42"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17242, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17240, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "27078:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 17241, "name": "curentLen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17077, "src": "27080:9:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "27078:11:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17253, "initializationExpression": {"expression": {"id": 17238, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17236, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "27073:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 17237, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27075:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "27073:3:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17239, "nodeType": "ExpressionStatement", "src": "27073:3:42"}, "loopExpression": {"expression": {"id": 17244, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "27091:3:42", "subExpression": {"id": 17243, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17092, "src": "27091:1:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17245, "nodeType": "ExpressionStatement", "src": "27091:3:42"}, "nodeType": "ForStatement", "src": "27069:82:42"}]}, "id": 17255, "implemented": true, "kind": "function", "modifiers": [], "name": "_internalCleanPermissions", "nameLocation": "25163:25:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17066, "nodeType": "ParameterList", "parameters": [], "src": "25188:2:42"}, "returnParameters": {"id": 17067, "nodeType": "ParameterList", "parameters": [], "src": "25200:0:42"}, "scope": 17877, "src": "25154:2012:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 17303, "nodeType": "Block", "src": "27534:621:42", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 17285, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 17275, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 17262, "name": "permissions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21169, "src": "27668:11:42", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_RolesERC20_$21177_storage_$", "typeString": "mapping(address => struct ERC20Roles.RolesERC20 storage ref)"}}, "id": 17265, "indexExpression": {"expression": {"id": 17263, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "27680:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 17264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "27680:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "27668:23:42", "typeDescriptions": {"typeIdentifier": "t_struct$_RolesERC20_$21177_storage", "typeString": "struct ERC20Roles.RolesERC20 storage ref"}}, "id": 17266, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "paymentManager", "nodeType": "MemberAccess", "referencedDeclaration": 21176, "src": "27668:38:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"expression": {"arguments": [{"expression": {"id": 17271, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "27773:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 17272, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "27773:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 17268, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "27742:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17267, "name": "IERC721Template", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3697, "src": "27726:15:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$", "typeString": "type(contract IERC721Template)"}}, "id": 17269, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27726:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Template_$3697", "typeString": "contract IERC721Template"}}, "id": 17270, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPermissions", "nodeType": "MemberAccess", "referencedDeclaration": 3615, "src": "27726:46:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Roles_$3598_memory_ptr_$", "typeString": "function (address) view external returns (struct IERC721Template.Roles memory)"}}, "id": 17273, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27726:58:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$3598_memory_ptr", "typeString": "struct IERC721Template.Roles memory"}}, "id": 17274, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "deployERC20", "nodeType": "MemberAccess", "referencedDeclaration": 3593, "src": "27726:70:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "27668:128:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 17284, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"hexValue": "31", "id": 17280, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27856:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "expression": {"arguments": [{"id": 17277, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "27832:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17276, "name": "IERC721Template", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3697, "src": "27816:15:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$", "typeString": "type(contract IERC721Template)"}}, "id": 17278, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27816:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Template_$3697", "typeString": "contract IERC721Template"}}, "id": 17279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 3499, "src": "27816:39:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view external returns (address)"}}, "id": 17281, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27816:42:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 17282, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "27860:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 17283, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "27860:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "27816:54:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "27668:202:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323054656d706c6174653a204e4f54205041594d454e54204d414e41474552206f72204f574e4552", "id": 17286, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "27884:45:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b97044b3298700df129caa9f11d041917fa241af13f8a2124a8c124bcaee2639", "typeString": "literal_string \"ERC20Template: NOT PAYMENT MANAGER or OWNER\""}, "value": "ERC20Template: NOT PAYMENT MANAGER or OWNER"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b97044b3298700df129caa9f11d041917fa241af13f8a2124a8c124bcaee2639", "typeString": "literal_string \"ERC20Template: NOT PAYMENT MANAGER or OWNER\""}], "id": 17261, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "27647:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17287, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27647:292:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17288, "nodeType": "ExpressionStatement", "src": "27647:292:42"}, {"expression": {"arguments": [{"id": 17290, "name": "_newPaymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17258, "src": "27970:20:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17289, "name": "_setPaymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17315, "src": "27949:20:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 17291, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27949:42:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17292, "nodeType": "ExpressionStatement", "src": "27949:42:42"}, {"eventCall": {"arguments": [{"expression": {"id": 17294, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "28039:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 17295, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "28039:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17296, "name": "_newPaymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17258, "src": "28063:20:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 17297, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "28097:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 17298, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "28097:15:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 17299, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "28126:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 17300, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "28126:12:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17293, "name": "NewPaymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16100, "src": "28006:19:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256,uint256)"}}, "id": 17301, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28006:142:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17302, "nodeType": "EmitStatement", "src": "28001:147:42"}]}, "documentation": {"id": 17256, "nodeType": "StructuredDocumentation", "src": "27171:289:42", "text": " @dev setPaymentCollector\n      Only feeManager can call it\n      This function allows to set a newPaymentCollector (receives DT when consuming)\nIf not set the paymentCollector is the NFT Owner\n @param _newPaymentCollector new fee collector "}, "functionSelector": "57a3a31b", "id": 17304, "implemented": true, "kind": "function", "modifiers": [], "name": "setPaymentCollector", "nameLocation": "27475:19:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17259, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17258, "mutability": "mutable", "name": "_newPaymentCollector", "nameLocation": "27503:20:42", "nodeType": "VariableDeclaration", "scope": 17304, "src": "27495:28:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17257, "name": "address", "nodeType": "ElementaryTypeName", "src": "27495:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "27494:30:42"}, "returnParameters": {"id": 17260, "nodeType": "ParameterList", "parameters": [], "src": "27534:0:42"}, "scope": 17877, "src": "27466:689:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 17314, "nodeType": "Block", "src": "28333:56:42", "statements": [{"expression": {"id": 17312, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17310, "name": "paymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15897, "src": "28343:16:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17311, "name": "_newPaymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17307, "src": "28362:20:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "28343:39:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17313, "nodeType": "ExpressionStatement", "src": "28343:39:42"}]}, "documentation": {"id": 17305, "nodeType": "StructuredDocumentation", "src": "28161:97:42", "text": " @dev _setPaymentCollector\n @param _newPaymentCollector new fee collector"}, "id": 17315, "implemented": true, "kind": "function", "modifiers": [], "name": "_setPaymentCollector", "nameLocation": "28273:20:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17308, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17307, "mutability": "mutable", "name": "_newPaymentCollector", "nameLocation": "28302:20:42", "nodeType": "VariableDeclaration", "scope": 17315, "src": "28294:28:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17306, "name": "address", "nodeType": "ElementaryTypeName", "src": "28294:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "28293:30:42"}, "returnParameters": {"id": 17309, "nodeType": "ParameterList", "parameters": [], "src": "28333:0:42"}, "scope": 17877, "src": "28264:125:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 17330, "nodeType": "Block", "src": "28726:142:42", "statements": [{"expression": {"components": [{"id": 17325, "name": "publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15899, "src": "28757:23:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17326, "name": "publishMarketFeeToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15901, "src": "28794:21:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17327, "name": "publishMarketFeeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15903, "src": "28829:22:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 17328, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "28743:118:42", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$", "typeString": "tuple(address,address,uint256)"}}, "functionReturnParameters": 17324, "id": 17329, "nodeType": "Return", "src": "28736:125:42"}]}, "documentation": {"id": 17316, "nodeType": "StructuredDocumentation", "src": "28395:168:42", "text": " @dev getPublishingMarketFee\n      Get publishingMarket Fee\n      This function allows to get the current fee set by the publishing market"}, "functionSelector": "397b3743", "id": 17331, "implemented": true, "kind": "function", "modifiers": [], "name": "getPublishingMarketFee", "nameLocation": "28577:22:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17317, "nodeType": "ParameterList", "parameters": [], "src": "28599:2:42"}, "returnParameters": {"id": 17324, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17319, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17331, "src": "28662:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17318, "name": "address", "nodeType": "ElementaryTypeName", "src": "28662:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17321, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17331, "src": "28683:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17320, "name": "address", "nodeType": "ElementaryTypeName", "src": "28683:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17323, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17331, "src": "28704:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17322, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28704:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "28648:73:42"}, "scope": 17877, "src": "28568:300:42", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 17383, "nodeType": "Block", "src": "29445:633:42", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 17349, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17344, "name": "_publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17334, "src": "29476:24:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 17347, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "29512:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 17346, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29504:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17345, "name": "address", "nodeType": "ElementaryTypeName", "src": "29504:7:42", "typeDescriptions": {}}}, "id": 17348, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29504:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "29476:38:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964205f7075626c6973684d61726b6574466565416464726573732061646472657373", "id": 17350, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "29528:42:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e3f55fac716322b51222e69759221521c34bdbccab64038794ad115ac250107c", "typeString": "literal_string \"Invalid _publishMarketFeeAddress address\""}, "value": "Invalid _publishMarketFeeAddress address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e3f55fac716322b51222e69759221521c34bdbccab64038794ad115ac250107c", "typeString": "literal_string \"Invalid _publishMarketFeeAddress address\""}], "id": 17343, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "29455:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17351, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29455:125:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17352, "nodeType": "ExpressionStatement", "src": "29455:125:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 17359, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17354, "name": "_publishMarketFeeToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17336, "src": "29614:22:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 17357, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "29648:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 17356, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29640:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17355, "name": "address", "nodeType": "ElementaryTypeName", "src": "29640:7:42", "typeDescriptions": {}}}, "id": 17358, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29640:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "29614:36:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964205f7075626c6973684d61726b6574466565546f6b656e2061646472657373", "id": 17360, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "29664:40:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cf6a8559d3f7adfa35d1ac4963179b4e633898286a263e929627f03040d28eb7", "typeString": "literal_string \"Invalid _publishMarketFeeToken address\""}, "value": "Invalid _publishMarketFeeToken address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_cf6a8559d3f7adfa35d1ac4963179b4e633898286a263e929627f03040d28eb7", "typeString": "literal_string \"Invalid _publishMarketFeeToken address\""}], "id": 17353, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "29593:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17361, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29593:121:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17362, "nodeType": "ExpressionStatement", "src": "29593:121:42"}, {"expression": {"id": 17365, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17363, "name": "publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15899, "src": "29724:23:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17364, "name": "_publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17334, "src": "29750:24:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "29724:50:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17366, "nodeType": "ExpressionStatement", "src": "29724:50:42"}, {"expression": {"id": 17369, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17367, "name": "publishMarketFeeToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15901, "src": "29784:21:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17368, "name": "_publishMarketFeeToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17336, "src": "29808:22:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "29784:46:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17370, "nodeType": "ExpressionStatement", "src": "29784:46:42"}, {"expression": {"id": 17373, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17371, "name": "publishMarketFeeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15903, "src": "29840:22:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17372, "name": "_publishMarketFeeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17338, "src": "29865:23:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29840:48:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17374, "nodeType": "ExpressionStatement", "src": "29840:48:42"}, {"eventCall": {"arguments": [{"expression": {"id": 17376, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "29940:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 17377, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "29940:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17378, "name": "_publishMarketFeeAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17334, "src": "29964:24:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17379, "name": "_publishMarketFeeToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17336, "src": "30002:22:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17380, "name": "_publishMarketFeeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17338, "src": "30038:23:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17375, "name": "PublishMarketFeeChanged", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16012, "src": "29903:23:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,address,uint256)"}}, "id": 17381, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29903:168:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17382, "nodeType": "EmitStatement", "src": "29898:173:42"}]}, "documentation": {"id": 17332, "nodeType": "StructuredDocumentation", "src": "28874:365:42", "text": " @dev setPublishingMarketFee\n      Only publishMarketFeeAddress can call it\n      This function allows to set the fee required by the publisherMarket\n @param _publishMarketFeeAddress  new _publishMarketFeeAddress\n @param _publishMarketFeeToken new _publishMarketFeeToken\n @param _publishMarketFeeAmount new fee amount"}, "functionSelector": "57ad5ff6", "id": 17384, "implemented": true, "kind": "function", "modifiers": [{"id": 17341, "kind": "modifierInvocation", "modifierName": {"id": 17340, "name": "onlyPublishingMarketFeeAddress", "nodeType": "IdentifierPath", "referencedDeclaration": 16139, "src": "29414:30:42"}, "nodeType": "ModifierInvocation", "src": "29414:30:42"}], "name": "setPublishingMarketFee", "nameLocation": "29253:22:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17339, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17334, "mutability": "mutable", "name": "_publishMarketFeeAddress", "nameLocation": "29293:24:42", "nodeType": "VariableDeclaration", "scope": 17384, "src": "29285:32:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17333, "name": "address", "nodeType": "ElementaryTypeName", "src": "29285:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17336, "mutability": "mutable", "name": "_publishMarketFeeToken", "nameLocation": "29335:22:42", "nodeType": "VariableDeclaration", "scope": 17384, "src": "29327:30:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17335, "name": "address", "nodeType": "ElementaryTypeName", "src": "29327:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17338, "mutability": "mutable", "name": "_publishMarketFeeAmount", "nameLocation": "29375:23:42", "nodeType": "VariableDeclaration", "scope": 17384, "src": "29367:31:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17337, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29367:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29275:129:42"}, "returnParameters": {"id": 17342, "nodeType": "ParameterList", "parameters": [], "src": "29445:0:42"}, "scope": 17877, "src": "29244:834:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 17392, "nodeType": "Block", "src": "30322:25:42", "statements": [{"expression": {"hexValue": "31", "id": 17390, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "30339:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "functionReturnParameters": 17389, "id": 17391, "nodeType": "Return", "src": "30332:8:42"}]}, "documentation": {"id": 17385, "nodeType": "StructuredDocumentation", "src": "30084:188:42", "text": " @dev getId\n      Return template id in case we need different ABIs. \n      If you construct your own template, please make sure to change the hardcoded value"}, "functionSelector": "5d1ca631", "id": 17393, "implemented": true, "kind": "function", "modifiers": [], "name": "getId", "nameLocation": "30286:5:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17386, "nodeType": "ParameterList", "parameters": [], "src": "30291:2:42"}, "returnParameters": {"id": 17389, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17388, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17393, "src": "30315:5:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 17387, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "30315:5:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "30314:7:42"}, "scope": 17877, "src": "30277:70:42", "stateMutability": "pure", "virtual": false, "visibility": "public"}, {"baseFunctions": [28567], "body": {"id": 17402, "nodeType": "Block", "src": "30517:29:42", "statements": [{"expression": {"id": 17400, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15883, "src": "30534:5:42", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 17399, "id": 17401, "nodeType": "Return", "src": "30527:12:42"}]}, "documentation": {"id": 17394, "nodeType": "StructuredDocumentation", "src": "30353:98:42", "text": " @dev name\n      It returns the token name.\n @return Datatoken name."}, "functionSelector": "06fdde03", "id": 17403, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "30465:4:42", "nodeType": "FunctionDefinition", "overrides": {"id": 17396, "nodeType": "OverrideSpecifier", "overrides": [], "src": "30484:8:42"}, "parameters": {"id": 17395, "nodeType": "ParameterList", "parameters": [], "src": "30469:2:42"}, "returnParameters": {"id": 17399, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17398, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17403, "src": "30502:13:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 17397, "name": "string", "nodeType": "ElementaryTypeName", "src": "30502:6:42", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "30501:15:42"}, "scope": 17877, "src": "30456:90:42", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [28577], "body": {"id": 17412, "nodeType": "Block", "src": "30724:31:42", "statements": [{"expression": {"id": 17410, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15885, "src": "30741:7:42", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 17409, "id": 17411, "nodeType": "Return", "src": "30734:14:42"}]}, "documentation": {"id": 17404, "nodeType": "StructuredDocumentation", "src": "30552:104:42", "text": " @dev symbol\n      It returns the token symbol.\n @return Datatoken symbol."}, "functionSelector": "95d89b41", "id": 17413, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "30670:6:42", "nodeType": "FunctionDefinition", "overrides": {"id": 17406, "nodeType": "OverrideSpecifier", "overrides": [], "src": "30691:8:42"}, "parameters": {"id": 17405, "nodeType": "ParameterList", "parameters": [], "src": "30676:2:42"}, "returnParameters": {"id": 17409, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17408, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17413, "src": "30709:13:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 17407, "name": "string", "nodeType": "ElementaryTypeName", "src": "30709:6:42", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "30708:15:42"}, "scope": 17877, "src": "30661:94:42", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 17421, "nodeType": "Block", "src": "30936:38:42", "statements": [{"expression": {"id": 17419, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "30953:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 17418, "id": 17420, "nodeType": "Return", "src": "30946:21:42"}]}, "documentation": {"id": 17414, "nodeType": "StructuredDocumentation", "src": "30761:112:42", "text": " @dev getERC721Address\n      It returns the parent ERC721\n @return ERC721 address."}, "functionSelector": "007ffb78", "id": 17422, "implemented": true, "kind": "function", "modifiers": [], "name": "getERC721Address", "nameLocation": "30887:16:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17415, "nodeType": "ParameterList", "parameters": [], "src": "30903:2:42"}, "returnParameters": {"id": 17418, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17417, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17422, "src": "30927:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17416, "name": "address", "nodeType": "ElementaryTypeName", "src": "30927:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "30926:9:42"}, "scope": 17877, "src": "30878:96:42", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [28587], "body": {"id": 17431, "nodeType": "Block", "src": "31198:33:42", "statements": [{"expression": {"id": 17429, "name": "_decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15890, "src": "31215:9:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "functionReturnParameters": 17428, "id": 17430, "nodeType": "Return", "src": "31208:16:42"}]}, "documentation": {"id": 17423, "nodeType": "StructuredDocumentation", "src": "30980:156:42", "text": " @dev decimals\n      It returns the token decimals.\n      how many supported decimal points\n @return Datatoken decimals."}, "functionSelector": "313ce567", "id": 17432, "implemented": true, "kind": "function", "modifiers": [], "name": "decimals", "nameLocation": "31150:8:42", "nodeType": "FunctionDefinition", "overrides": {"id": 17425, "nodeType": "OverrideSpecifier", "overrides": [], "src": "31173:8:42"}, "parameters": {"id": 17424, "nodeType": "ParameterList", "parameters": [], "src": "31158:2:42"}, "returnParameters": {"id": 17428, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17427, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17432, "src": "31191:5:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 17426, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "31191:5:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "31190:7:42"}, "scope": 17877, "src": "31141:90:42", "stateMutability": "pure", "virtual": false, "visibility": "public"}, {"body": {"id": 17440, "nodeType": "Block", "src": "31382:28:42", "statements": [{"expression": {"id": 17438, "name": "_cap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15887, "src": "31399:4:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17437, "id": 17439, "nodeType": "Return", "src": "31392:11:42"}]}, "documentation": {"id": 17433, "nodeType": "StructuredDocumentation", "src": "31237:93:42", "text": " @dev cap\n      it returns the capital.\n @return Datatoken cap."}, "functionSelector": "355274ea", "id": 17441, "implemented": true, "kind": "function", "modifiers": [], "name": "cap", "nameLocation": "31344:3:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17434, "nodeType": "ParameterList", "parameters": [], "src": "31347:2:42"}, "returnParameters": {"id": 17437, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17436, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17441, "src": "31373:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17435, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31373:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "31372:9:42"}, "scope": 17877, "src": "31335:75:42", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 17449, "nodeType": "Block", "src": "31624:35:42", "statements": [{"expression": {"id": 17447, "name": "initialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15893, "src": "31641:11:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 17446, "id": 17448, "nodeType": "Return", "src": "31634:18:42"}]}, "documentation": {"id": 17442, "nodeType": "StructuredDocumentation", "src": "31416:148:42", "text": " @dev isInitialized\n      It checks whether the contract is initialized.\n @return true if the contract is initialized."}, "functionSelector": "392e53cd", "id": 17450, "implemented": true, "kind": "function", "modifiers": [], "name": "isInitialized", "nameLocation": "31579:13:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17443, "nodeType": "ParameterList", "parameters": [], "src": "31592:2:42"}, "returnParameters": {"id": 17446, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17445, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17450, "src": "31618:4:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 17444, "name": "bool", "nodeType": "ElementaryTypeName", "src": "31618:4:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "31617:6:42"}, "scope": 17877, "src": "31570:89:42", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 17529, "nodeType": "Block", "src": "32291:778:42", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17469, "name": "deadline", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17459, "src": "32309:8:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 17470, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "32321:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 17471, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "32321:12:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "32309:24:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323044543a2045585049524544", "id": 17473, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "32335:18:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b4c2ba5eb21081cb84544fd07100fdb35b4fe847127b86c9c3b26ac4cf5ea686", "typeString": "literal_string \"ERC20DT: EXPIRED\""}, "value": "ERC20DT: EXPIRED"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b4c2ba5eb21081cb84544fd07100fdb35b4fe847127b86c9c3b26ac4cf5ea686", "typeString": "literal_string \"ERC20DT: EXPIRED\""}], "id": 17468, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "32301:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17474, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32301:53:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17475, "nodeType": "ExpressionStatement", "src": "32301:53:42"}, {"assignments": [17477], "declarations": [{"constant": false, "id": 17477, "mutability": "mutable", "name": "digest", "nameLocation": "32372:6:42", "nodeType": "VariableDeclaration", "scope": 17529, "src": "32364:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 17476, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "32364:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 17499, "initialValue": {"arguments": [{"arguments": [{"hexValue": "1901", "id": 17481, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "32438:10:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541", "typeString": "literal_string hex\"1901\""}, "value": "\u0019\u0001"}, {"id": 17482, "name": "DOMAIN_SEPARATOR", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15908, "src": "32466:16:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"arguments": [{"arguments": [{"id": 17486, "name": "PERMIT_TYPEHASH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15911, "src": "32567:15:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17487, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17453, "src": "32608:5:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17488, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17455, "src": "32639:7:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17489, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17457, "src": "32672:5:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 17493, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "32703:15:42", "subExpression": {"baseExpression": {"id": 17490, "name": "nonces", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15915, "src": "32703:6:42", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 17492, "indexExpression": {"id": 17491, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17453, "src": "32710:5:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "32703:13:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 17494, "name": "deadline", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17459, "src": "32744:8:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17484, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "32531:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 17485, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "32531:10:42", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 17495, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32531:243:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 17483, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "32500:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 17496, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32500:292:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541", "typeString": "literal_string hex\"1901\""}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 17479, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "32404:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 17480, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "32404:16:42", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 17497, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32404:402:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 17478, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "32381:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 17498, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32381:435:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "32364:452:42"}, {"assignments": [17501], "declarations": [{"constant": false, "id": 17501, "mutability": "mutable", "name": "recoveredAddress", "nameLocation": "32834:16:42", "nodeType": "VariableDeclaration", "scope": 17529, "src": "32826:24:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17500, "name": "address", "nodeType": "ElementaryTypeName", "src": "32826:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 17508, "initialValue": {"arguments": [{"id": 17503, "name": "digest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17477, "src": "32863:6:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17504, "name": "v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17461, "src": "32871:1:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"id": 17505, "name": "r", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17463, "src": "32874:1:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17506, "name": "s", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17465, "src": "32877:1:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 17502, "name": "ecrecover", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -6, "src": "32853:9:42", "typeDescriptions": {"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}}, "id": 17507, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32853:26:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "32826:53:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 17519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 17515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17510, "name": "recoveredAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17501, "src": "32910:16:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 17513, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "32938:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 17512, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "32930:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17511, "name": "address", "nodeType": "ElementaryTypeName", "src": "32930:7:42", "typeDescriptions": {}}}, "id": 17514, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32930:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "32910:30:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 17518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17516, "name": "recoveredAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17501, "src": "32944:16:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 17517, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17453, "src": "32964:5:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "32944:25:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "32910:59:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243323044543a20494e56414c49445f5349474e4154555245", "id": 17520, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "32983:28:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e8c73974ef15a063ffd05dfeebb16968b8307901d6cad005ec27f8f4b20316a3", "typeString": "literal_string \"ERC20DT: INVALID_SIGNATURE\""}, "value": "ERC20DT: INVALID_SIGNATURE"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e8c73974ef15a063ffd05dfeebb16968b8307901d6cad005ec27f8f4b20316a3", "typeString": "literal_string \"ERC20DT: INVALID_SIGNATURE\""}], "id": 17509, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "32889:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17521, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32889:132:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17522, "nodeType": "ExpressionStatement", "src": "32889:132:42"}, {"expression": {"arguments": [{"id": 17524, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17453, "src": "33040:5:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17525, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17455, "src": "33047:7:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17526, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17457, "src": "33056:5:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17523, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29035, "src": "33031:8:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 17527, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33031:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17528, "nodeType": "ExpressionStatement", "src": "33031:31:42"}]}, "documentation": {"id": 17451, "nodeType": "StructuredDocumentation", "src": "31665:437:42", "text": " @dev permit\n      used for signed approvals, see ERC20Template test for more details\n @param owner user who signed the message\n @param spender spender\n @param value token amount\n @param deadline deadline after which signed message is no more valid\n @param v parameters from signed message\n @param r parameters from signed message\n @param s parameters from signed message"}, "functionSelector": "d505accf", "id": 17530, "implemented": true, "kind": "function", "modifiers": [], "name": "permit", "nameLocation": "32117:6:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17466, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17453, "mutability": "mutable", "name": "owner", "nameLocation": "32141:5:42", "nodeType": "VariableDeclaration", "scope": 17530, "src": "32133:13:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17452, "name": "address", "nodeType": "ElementaryTypeName", "src": "32133:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17455, "mutability": "mutable", "name": "spender", "nameLocation": "32164:7:42", "nodeType": "VariableDeclaration", "scope": 17530, "src": "32156:15:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17454, "name": "address", "nodeType": "ElementaryTypeName", "src": "32156:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17457, "mutability": "mutable", "name": "value", "nameLocation": "32189:5:42", "nodeType": "VariableDeclaration", "scope": 17530, "src": "32181:13:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17456, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "32181:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 17459, "mutability": "mutable", "name": "deadline", "nameLocation": "32212:8:42", "nodeType": "VariableDeclaration", "scope": 17530, "src": "32204:16:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17458, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "32204:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 17461, "mutability": "mutable", "name": "v", "nameLocation": "32236:1:42", "nodeType": "VariableDeclaration", "scope": 17530, "src": "32230:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 17460, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "32230:5:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 17463, "mutability": "mutable", "name": "r", "nameLocation": "32255:1:42", "nodeType": "VariableDeclaration", "scope": 17530, "src": "32247:9:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 17462, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "32247:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 17465, "mutability": "mutable", "name": "s", "nameLocation": "32274:1:42", "nodeType": "VariableDeclaration", "scope": 17530, "src": "32266:9:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 17464, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "32266:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "32123:158:42"}, "returnParameters": {"id": 17467, "nodeType": "ParameterList", "parameters": [], "src": "32291:0:42"}, "scope": 17877, "src": "32108:961:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 17542, "nodeType": "Block", "src": "33353:36:42", "statements": [{"expression": {"expression": {"id": 17539, "name": "array", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17534, "src": "33370:5:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 17540, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "33370:12:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17538, "id": 17541, "nodeType": "Return", "src": "33363:19:42"}]}, "documentation": {"id": 17531, "nodeType": "StructuredDocumentation", "src": "33075:163:42", "text": " @dev getAddressLength\n      It returns the array lentgh\n@param array address array we want to get length\n @return length"}, "id": 17543, "implemented": true, "kind": "function", "modifiers": [], "name": "getAddressLength", "nameLocation": "33253:16:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17535, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17534, "mutability": "mutable", "name": "array", "nameLocation": "33287:5:42", "nodeType": "VariableDeclaration", "scope": 17543, "src": "33270:22:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 17532, "name": "address", "nodeType": "ElementaryTypeName", "src": "33270:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17533, "nodeType": "ArrayTypeName", "src": "33270:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "33269:24:42"}, "returnParameters": {"id": 17538, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17537, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17543, "src": "33340:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17536, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "33340:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "33339:9:42"}, "scope": 17877, "src": "33244:145:42", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 17555, "nodeType": "Block", "src": "33664:36:42", "statements": [{"expression": {"expression": {"id": 17552, "name": "array", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17547, "src": "33681:5:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 17553, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "33681:12:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17551, "id": 17554, "nodeType": "Return", "src": "33674:19:42"}]}, "documentation": {"id": 17544, "nodeType": "StructuredDocumentation", "src": "33395:157:42", "text": " @dev getUintLength\n      It returns the array lentgh\n@param array uint array we want to get length\n @return length"}, "id": 17556, "implemented": true, "kind": "function", "modifiers": [], "name": "getUintLength", "nameLocation": "33567:13:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17548, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17547, "mutability": "mutable", "name": "array", "nameLocation": "33598:5:42", "nodeType": "VariableDeclaration", "scope": 17556, "src": "33581:22:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 17545, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "33581:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17546, "nodeType": "ArrayTypeName", "src": "33581:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "33580:24:42"}, "returnParameters": {"id": 17551, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17550, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17556, "src": "33651:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17549, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "33651:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "33650:9:42"}, "scope": 17877, "src": "33558:142:42", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 17568, "nodeType": "Block", "src": "33980:36:42", "statements": [{"expression": {"expression": {"id": 17565, "name": "array", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17560, "src": "33997:5:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}, "id": 17566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "33997:12:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17564, "id": 17567, "nodeType": "Return", "src": "33990:19:42"}]}, "documentation": {"id": 17557, "nodeType": "StructuredDocumentation", "src": "33706:161:42", "text": " @dev getBytesLength\n      It returns the array lentgh\n@param array bytes32 array we want to get length\n @return length"}, "id": 17569, "implemented": true, "kind": "function", "modifiers": [], "name": "getBytesLength", "nameLocation": "33882:14:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17561, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17560, "mutability": "mutable", "name": "array", "nameLocation": "33914:5:42", "nodeType": "VariableDeclaration", "scope": 17569, "src": "33897:22:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 17558, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "33897:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 17559, "nodeType": "ArrayTypeName", "src": "33897:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "33896:24:42"}, "returnParameters": {"id": 17564, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17563, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17569, "src": "33967:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17562, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "33967:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "33966:9:42"}, "scope": 17877, "src": "33873:143:42", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 17593, "nodeType": "Block", "src": "34224:180:42", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 17580, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17575, "name": "paymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15897, "src": "34238:16:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 17578, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "34266:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 17577, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "34258:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17576, "name": "address", "nodeType": "ElementaryTypeName", "src": "34258:7:42", "typeDescriptions": {}}}, "id": 17579, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34258:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "34238:30:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 17591, "nodeType": "Block", "src": "34350:48:42", "statements": [{"expression": {"id": 17589, "name": "paymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15897, "src": "34371:16:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 17574, "id": 17590, "nodeType": "Return", "src": "34364:23:42"}]}, "id": 17592, "nodeType": "IfStatement", "src": "34234:164:42", "trueBody": {"id": 17588, "nodeType": "Block", "src": "34270:74:42", "statements": [{"expression": {"arguments": [{"hexValue": "31", "id": 17585, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "34331:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "expression": {"arguments": [{"id": 17582, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "34307:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17581, "name": "IERC721Template", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3697, "src": "34291:15:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$", "typeString": "type(contract IERC721Template)"}}, "id": 17583, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34291:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Template_$3697", "typeString": "contract IERC721Template"}}, "id": 17584, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 3499, "src": "34291:39:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view external returns (address)"}}, "id": 17586, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34291:42:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 17574, "id": 17587, "nodeType": "Return", "src": "34284:49:42"}]}}]}, "documentation": {"id": 17570, "nodeType": "StructuredDocumentation", "src": "34022:135:42", "text": " @dev getPaymentCollector\n      It returns the current paymentCollector\n @return paymentCollector address"}, "functionSelector": "e487c2e8", "id": 17594, "implemented": true, "kind": "function", "modifiers": [], "name": "getPaymentCollector", "nameLocation": "34172:19:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17571, "nodeType": "ParameterList", "parameters": [], "src": "34191:2:42"}, "returnParameters": {"id": 17574, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17573, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17594, "src": "34215:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17572, "name": "address", "nodeType": "ElementaryTypeName", "src": "34215:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "34214:9:42"}, "scope": 17877, "src": "34163:241:42", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 17598, "nodeType": "Block", "src": "34583:2:42", "statements": []}, "documentation": {"id": 17595, "nodeType": "StructuredDocumentation", "src": "34410:140:42", "text": " @dev fallback function\n      this is a default fallback function in which receives\n      the collected ether."}, "id": 17599, "implemented": true, "kind": "fallback", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 17596, "nodeType": "ParameterList", "parameters": [], "src": "34563:2:42"}, "returnParameters": {"id": 17597, "nodeType": "ParameterList", "parameters": [], "src": "34583:0:42"}, "scope": 17877, "src": "34555:30:42", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 17603, "nodeType": "Block", "src": "34765:2:42", "statements": []}, "documentation": {"id": 17600, "nodeType": "StructuredDocumentation", "src": "34595:138:42", "text": " @dev receive function\n      this is a default receive function in which receives\n      the collected ether."}, "id": 17604, "implemented": true, "kind": "receive", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 17601, "nodeType": "ParameterList", "parameters": [], "src": "34745:2:42"}, "returnParameters": {"id": 17602, "nodeType": "ParameterList", "parameters": [], "src": "34765:0:42"}, "scope": 17877, "src": "34738:29:42", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 17621, "nodeType": "Block", "src": "34922:79:42", "statements": [{"expression": {"arguments": [{"expression": {"arguments": [{"id": 17616, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "34980:4:42", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ERC20Template_$17877", "typeString": "contract ERC20Template"}], "id": 17615, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "34972:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17614, "name": "address", "nodeType": "ElementaryTypeName", "src": "34972:7:42", "typeDescriptions": {}}}, "id": 17617, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34972:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17618, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "34972:21:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 17610, "name": "getPaymentCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17594, "src": "34940:19:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 17611, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34940:21:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17609, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "34932:8:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 17608, "name": "address", "nodeType": "ElementaryTypeName", "src": "34932:8:42", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 17612, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34932:30:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 17613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "34932:39:42", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 17619, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34932:62:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17620, "nodeType": "ExpressionStatement", "src": "34932:62:42"}]}, "documentation": {"id": 17605, "nodeType": "StructuredDocumentation", "src": "34773:104:42", "text": " @dev withdrawETH\n      transfers all the accumlated ether the collector account"}, "functionSelector": "e086e5ec", "id": 17622, "implemented": true, "kind": "function", "modifiers": [], "name": "withdrawETH", "nameLocation": "34891:11:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17606, "nodeType": "ParameterList", "parameters": [], "src": "34902:2:42"}, "returnParameters": {"id": 17607, "nodeType": "ParameterList", "parameters": [], "src": "34922:0:42"}, "scope": 17877, "src": "34882:119:42", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 17639, "nodeType": "Block", "src": "35169:89:42", "statements": [{"expression": {"components": [{"expression": {"arguments": [{"id": 17634, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17625, "src": "35233:4:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 17631, "name": "_erc721Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15895, "src": "35202:14:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17630, "name": "IERC721Template", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3697, "src": "35186:15:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$", "typeString": "type(contract IERC721Template)"}}, "id": 17632, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35186:31:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Template_$3697", "typeString": "contract IERC721Template"}}, "id": 17633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPermissions", "nodeType": "MemberAccess", "referencedDeclaration": 3615, "src": "35186:46:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Roles_$3598_memory_ptr_$", "typeString": "function (address) view external returns (struct IERC721Template.Roles memory)"}}, "id": 17635, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35186:52:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Roles_$3598_memory_ptr", "typeString": "struct IERC721Template.Roles memory"}}, "id": 17636, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "deployERC20", "nodeType": "MemberAccess", "referencedDeclaration": 3593, "src": "35186:64:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 17637, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "35185:66:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 17629, "id": 17638, "nodeType": "Return", "src": "35179:72:42"}]}, "documentation": {"id": 17623, "nodeType": "StructuredDocumentation", "src": "35007:93:42", "text": " @dev isERC20Deployer\n      returns true if address has deployERC20 role"}, "functionSelector": "96fb3eaf", "id": 17640, "implemented": true, "kind": "function", "modifiers": [], "name": "isERC20Deployer", "nameLocation": "35114:15:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17626, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17625, "mutability": "mutable", "name": "user", "nameLocation": "35138:4:42", "nodeType": "VariableDeclaration", "scope": 17640, "src": "35130:12:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17624, "name": "address", "nodeType": "ElementaryTypeName", "src": "35130:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "35129:14:42"}, "returnParameters": {"id": 17629, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17628, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17640, "src": "35164:4:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 17627, "name": "bool", "nodeType": "ElementaryTypeName", "src": "35164:4:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "35163:6:42"}, "scope": 17877, "src": "35105:153:42", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 17650, "nodeType": "Block", "src": "35424:38:42", "statements": [{"expression": {"components": [{"id": 17647, "name": "deployedPools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15920, "src": "35441:13:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}], "id": 17648, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "35440:15:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "functionReturnParameters": 17646, "id": 17649, "nodeType": "Return", "src": "35434:21:42"}]}, "documentation": {"id": 17641, "nodeType": "StructuredDocumentation", "src": "35264:97:42", "text": " @dev getPools\n      Returns the list of pools created for this datatoken"}, "functionSelector": "673a2a1f", "id": 17651, "implemented": true, "kind": "function", "modifiers": [], "name": "getPools", "nameLocation": "35375:8:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17642, "nodeType": "ParameterList", "parameters": [], "src": "35383:2:42"}, "returnParameters": {"id": 17646, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17645, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17651, "src": "35406:16:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 17643, "name": "address", "nodeType": "ElementaryTypeName", "src": "35406:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17644, "nodeType": "ArrayTypeName", "src": "35406:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "35405:18:42"}, "scope": 17877, "src": "35366:96:42", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 17662, "nodeType": "Block", "src": "35652:43:42", "statements": [{"expression": {"components": [{"id": 17659, "name": "fixedRateExchanges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15929, "src": "35669:18:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}], "id": 17660, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "35668:20:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage", "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"}}, "functionReturnParameters": 17658, "id": 17661, "nodeType": "Return", "src": "35662:26:42"}]}, "documentation": {"id": 17652, "nodeType": "StructuredDocumentation", "src": "35467:115:42", "text": " @dev getFixedRates\n      Returns the list of fixedRateExchanges created for this datatoken"}, "functionSelector": "7dda231e", "id": 17663, "implemented": true, "kind": "function", "modifiers": [], "name": "getFixedRates", "nameLocation": "35596:13:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17653, "nodeType": "ParameterList", "parameters": [], "src": "35609:2:42"}, "returnParameters": {"id": 17658, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17657, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17663, "src": "35632:18:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_memory_ptr_$dyn_memory_ptr", "typeString": "struct ERC20Template.fixedRate[]"}, "typeName": {"baseType": {"id": 17655, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 17654, "name": "fixedRate", "nodeType": "IdentifierPath", "referencedDeclaration": 15925, "src": "35632:9:42"}, "referencedDeclaration": 15925, "src": "35632:9:42", "typeDescriptions": {"typeIdentifier": "t_struct$_fixedRate_$15925_storage_ptr", "typeString": "struct ERC20Template.fixedRate"}}, "id": 17656, "nodeType": "ArrayTypeName", "src": "35632:11:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage_ptr", "typeString": "struct ERC20Template.fixedRate[]"}}, "visibility": "internal"}], "src": "35631:20:42"}, "scope": 17877, "src": "35587:108:42", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 17673, "nodeType": "Block", "src": "35875:35:42", "statements": [{"expression": {"components": [{"id": 17670, "name": "dispensers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15932, "src": "35892:10:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}], "id": 17671, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "35891:12:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "functionReturnParameters": 17669, "id": 17672, "nodeType": "Return", "src": "35885:18:42"}]}, "documentation": {"id": 17664, "nodeType": "StructuredDocumentation", "src": "35700:107:42", "text": " @dev getDispensers\n      Returns the list of dispensers created for this datatoken"}, "functionSelector": "47ac7d55", "id": 17674, "implemented": true, "kind": "function", "modifiers": [], "name": "getDispensers", "nameLocation": "35821:13:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17665, "nodeType": "ParameterList", "parameters": [], "src": "35834:2:42"}, "returnParameters": {"id": 17669, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17668, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17674, "src": "35857:16:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 17666, "name": "address", "nodeType": "ElementaryTypeName", "src": "35857:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 17667, "nodeType": "ArrayTypeName", "src": "35857:9:42", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "35856:18:42"}, "scope": 17877, "src": "35812:98:42", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 17718, "nodeType": "Block", "src": "36045:251:42", "statements": [{"assignments": [17686], "declarations": [{"constant": false, "id": 17686, "mutability": "mutable", "name": "balanceBefore", "nameLocation": "36063:13:42", "nodeType": "VariableDeclaration", "scope": 17718, "src": "36055:21:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17685, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "36055:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17693, "initialValue": {"arguments": [{"id": 17691, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17680, "src": "36103:2:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 17688, "name": "erc20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17676, "src": "36086:5:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17687, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27843, "src": "36079:6:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$", "typeString": "type(contract IERC20)"}}, "id": 17689, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36079:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27843", "typeString": "contract IERC20"}}, "id": 17690, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 27782, "src": "36079:23:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 17692, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36079:27:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "36055:51:42"}, {"expression": {"arguments": [{"id": 17698, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17678, "src": "36147:4:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17699, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17680, "src": "36153:2:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17700, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17682, "src": "36157:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17695, "name": "erc20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17676, "src": "36123:5:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17694, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27843, "src": "36116:6:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$", "typeString": "type(contract IERC20)"}}, "id": 17696, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36116:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27843", "typeString": "contract IERC20"}}, "id": 17697, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 27900, "src": "36116:30:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27843_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27843_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 17701, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36116:48:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17702, "nodeType": "ExpressionStatement", "src": "36116:48:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17714, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 17708, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17680, "src": "36206:2:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 17705, "name": "erc20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17676, "src": "36189:5:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17704, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27843, "src": "36182:6:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$", "typeString": "type(contract IERC20)"}}, "id": 17706, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36182:13:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27843", "typeString": "contract IERC20"}}, "id": 17707, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 27782, "src": "36182:23:42", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 17709, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36182:27:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"arguments": [{"id": 17712, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17682, "src": "36231:6:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17710, "name": "balanceBefore", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17686, "src": "36213:13:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17711, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 28243, "src": "36213:17:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17713, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36213:25:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "36182:56:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5472616e7366657220616d6f756e7420697320746f6f206c6f77", "id": 17715, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "36260:28:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fc64ab46a7322dccc3bfe7ade6ffceda60a180db11389567270dab250e90d5c1", "typeString": "literal_string \"Transfer amount is too low\""}, "value": "Transfer amount is too low"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fc64ab46a7322dccc3bfe7ade6ffceda60a180db11389567270dab250e90d5c1", "typeString": "literal_string \"Transfer amount is too low\""}], "id": 17703, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "36174:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17716, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36174:115:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17717, "nodeType": "ExpressionStatement", "src": "36174:115:42"}]}, "id": 17719, "implemented": true, "kind": "function", "modifiers": [], "name": "_pullUnderlying", "nameLocation": "35925:15:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17683, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17676, "mutability": "mutable", "name": "erc20", "nameLocation": "35958:5:42", "nodeType": "VariableDeclaration", "scope": 17719, "src": "35950:13:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17675, "name": "address", "nodeType": "ElementaryTypeName", "src": "35950:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17678, "mutability": "mutable", "name": "from", "nameLocation": "35981:4:42", "nodeType": "VariableDeclaration", "scope": 17719, "src": "35973:12:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17677, "name": "address", "nodeType": "ElementaryTypeName", "src": "35973:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17680, "mutability": "mutable", "name": "to", "nameLocation": "36003:2:42", "nodeType": "VariableDeclaration", "scope": 17719, "src": "35995:10:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17679, "name": "address", "nodeType": "ElementaryTypeName", "src": "35995:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17682, "mutability": "mutable", "name": "amount", "nameLocation": "36023:6:42", "nodeType": "VariableDeclaration", "scope": 17719, "src": "36015:14:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17681, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "36015:7:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "35940:95:42"}, "returnParameters": {"id": 17684, "nodeType": "ParameterList", "parameters": [], "src": "36045:0:42"}, "scope": 17877, "src": "35916:380:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 17814, "nodeType": "Block", "src": "36929:1093:42", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 17739, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17736, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "36947:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 17737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "36947:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 17738, "name": "consumerAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17732, "src": "36961:15:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "36947:29:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "50726f76696465722063616e6e6f742062652074686520636f6e73756d6572", "id": 17740, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "36978:33:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b9866e342fceb89983818c3628520a6b76286cece247d78afa8b61d9a7e4fd16", "typeString": "literal_string \"Provider cannot be the consumer\""}, "value": "Provider cannot be the consumer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b9866e342fceb89983818c3628520a6b76286cece247d78afa8b61d9a7e4fd16", "typeString": "literal_string \"Provider cannot be the consumer\""}], "id": 17735, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "36939:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17741, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36939:73:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17742, "nodeType": "ExpressionStatement", "src": "36939:73:42"}, {"assignments": [17744], "declarations": [{"constant": false, "id": 17744, "mutability": "mutable", "name": "prefix", "nameLocation": "37035:6:42", "nodeType": "VariableDeclaration", "scope": 17814, "src": "37022:19:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 17743, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "37022:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 17746, "initialValue": {"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332", "id": 17745, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "37044:34:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73", "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""}, "value": "\u0019Ethereum Signed Message:\n32"}, "nodeType": "VariableDeclarationStatement", "src": "37022:56:42"}, {"assignments": [17748], "declarations": [{"constant": false, "id": 17748, "mutability": "mutable", "name": "providerHash", "nameLocation": "37096:12:42", "nodeType": "VariableDeclaration", "scope": 17814, "src": "37088:20:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 17747, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "37088:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 17762, "initialValue": {"arguments": [{"arguments": [{"id": 17752, "name": "prefix", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17744, "src": "37151:6:42", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"arguments": [{"arguments": [{"id": 17756, "name": "orderTxId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17722, "src": "37248:9:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17757, "name": "providerData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17724, "src": "37283:12:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "expression": {"id": 17754, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "37206:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 17755, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "37206:16:42", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 17758, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37206:111:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 17753, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "37175:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 17759, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37175:160:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 17750, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "37134:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 17751, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "37134:16:42", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 17760, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37134:215:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 17749, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "37111:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 17761, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37111:248:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "37088:271:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 17770, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 17765, "name": "providerHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17748, "src": "37389:12:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17766, "name": "providerSignature", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17726, "src": "37403:17:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "id": 17764, "name": "_ecrecovery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17876, "src": "37377:11:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$", "typeString": "function (bytes32,bytes memory) pure returns (address)"}}, "id": 17767, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37377:44:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 17768, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "37425:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 17769, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "37425:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "37377:58:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "50726f7669646572207369676e617475726520636865636b206661696c6564", "id": 17771, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "37437:33:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_80fdb21793ff9b0393185578b5970e57d3e88edde259189c27f02867878f1646", "typeString": "literal_string \"Provider signature check failed\""}, "value": "Provider signature check failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_80fdb21793ff9b0393185578b5970e57d3e88edde259189c27f02867878f1646", "typeString": "literal_string \"Provider signature check failed\""}], "id": 17763, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "37369:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17772, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37369:102:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17773, "nodeType": "ExpressionStatement", "src": "37369:102:42"}, {"assignments": [17775], "declarations": [{"constant": false, "id": 17775, "mutability": "mutable", "name": "consumerHash", "nameLocation": "37489:12:42", "nodeType": "VariableDeclaration", "scope": 17814, "src": "37481:20:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 17774, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "37481:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 17788, "initialValue": {"arguments": [{"arguments": [{"id": 17779, "name": "prefix", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17744, "src": "37544:6:42", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"arguments": [{"arguments": [{"id": 17783, "name": "consumerData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17728, "src": "37641:12:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "expression": {"id": 17781, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "37599:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 17782, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "37599:16:42", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 17784, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37599:76:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 17780, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "37568:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 17785, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37568:125:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 17777, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "37527:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 17778, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "37527:16:42", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 17786, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37527:180:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 17776, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "37504:9:42", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 17787, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37504:213:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "37481:236:42"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 17795, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 17791, "name": "consumerHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17775, "src": "37747:12:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17792, "name": "consumerSignature", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17730, "src": "37761:17:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "id": 17790, "name": "_ecrecovery", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17876, "src": "37735:11:42", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$", "typeString": "function (bytes32,bytes memory) pure returns (address)"}}, "id": 17793, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37735:44:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 17794, "name": "consumerAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17732, "src": "37783:15:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "37735:63:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436f6e73756d6572207369676e617475726520636865636b206661696c6564", "id": 17796, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "37800:33:42", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b28f658b704c8faea2c17997bd50361d62e5b7493de843084ea5e47f9ddfd3a4", "typeString": "literal_string \"Consumer signature check failed\""}, "value": "Consumer signature check failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b28f658b704c8faea2c17997bd50361d62e5b7493de843084ea5e47f9ddfd3a4", "typeString": "literal_string \"Consumer signature check failed\""}], "id": 17789, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "37727:7:42", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17797, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37727:107:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17798, "nodeType": "ExpressionStatement", "src": "37727:107:42"}, {"eventCall": {"arguments": [{"expression": {"id": 17800, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "37863:3:42", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 17801, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "37863:10:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17802, "name": "consumerAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17732, "src": "37875:15:42", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17803, "name": "orderTxId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17722, "src": "37892:9:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17804, "name": "providerData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17724, "src": "37903:12:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"id": 17805, "name": "providerSignature", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17726, "src": "37917:17:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"id": 17806, "name": "consumerData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17728, "src": "37952:12:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"id": 17807, "name": "consumerSignature", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17730, "src": "37966:17:42", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"expression": {"id": 17808, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "37985:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 17809, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "37985:15:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 17810, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "38002:5:42", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 17811, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "38002:12:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17799, "name": "OrderExecuted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16002, "src": "37849:13:42", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,address,bytes32,bytes memory,bytes memory,bytes memory,bytes memory,uint256,uint256)"}}, "id": 17812, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37849:166:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17813, "nodeType": "EmitStatement", "src": "37844:171:42"}]}, "documentation": {"id": 17720, "nodeType": "StructuredDocumentation", "src": "36303:365:42", "text": " @dev orderExecuted\n      Providers should call this to prove order execution\n @param orderTxId order tx\n @param providerData provider data\n @param providerSignature provider signature\n @param consumerData consumer data\n @param consumerSignature consumer signature\n @param consumerAddress consumer address"}, "functionSelector": "89208f0f", "id": 17815, "implemented": true, "kind": "function", "modifiers": [], "name": "orderExecuted", "nameLocation": "36682:13:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17733, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17722, "mutability": "mutable", "name": "orderTxId", "nameLocation": "36713:9:42", "nodeType": "VariableDeclaration", "scope": 17815, "src": "36705:17:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 17721, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "36705:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 17724, "mutability": "mutable", "name": "providerData", "nameLocation": "36747:12:42", "nodeType": "VariableDeclaration", "scope": 17815, "src": "36732:27:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 17723, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "36732:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 17726, "mutability": "mutable", "name": "providerSignature", "nameLocation": "36784:17:42", "nodeType": "VariableDeclaration", "scope": 17815, "src": "36769:32:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 17725, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "36769:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 17728, "mutability": "mutable", "name": "consumerData", "nameLocation": "36826:12:42", "nodeType": "VariableDeclaration", "scope": 17815, "src": "36811:27:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 17727, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "36811:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 17730, "mutability": "mutable", "name": "consumerSignature", "nameLocation": "36863:17:42", "nodeType": "VariableDeclaration", "scope": 17815, "src": "36848:32:42", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 17729, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "36848:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 17732, "mutability": "mutable", "name": "consumerAddress", "nameLocation": "36898:15:42", "nodeType": "VariableDeclaration", "scope": 17815, "src": "36890:23:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17731, "name": "address", "nodeType": "ElementaryTypeName", "src": "36890:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "36695:224:42"}, "returnParameters": {"id": 17734, "nodeType": "ParameterList", "parameters": [], "src": "36929:0:42"}, "scope": 17877, "src": "36673:1349:42", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 17875, "nodeType": "Block", "src": "38115:439:42", "statements": [{"assignments": [17825], "declarations": [{"constant": false, "id": 17825, "mutability": "mutable", "name": "r", "nameLocation": "38133:1:42", "nodeType": "VariableDeclaration", "scope": 17875, "src": "38125:9:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 17824, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "38125:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 17826, "nodeType": "VariableDeclarationStatement", "src": "38125:9:42"}, {"assignments": [17828], "declarations": [{"constant": false, "id": 17828, "mutability": "mutable", "name": "s", "nameLocation": "38152:1:42", "nodeType": "VariableDeclaration", "scope": 17875, "src": "38144:9:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 17827, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "38144:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 17829, "nodeType": "VariableDeclarationStatement", "src": "38144:9:42"}, {"assignments": [17831], "declarations": [{"constant": false, "id": 17831, "mutability": "mutable", "name": "v", "nameLocation": "38169:1:42", "nodeType": "VariableDeclaration", "scope": 17875, "src": "38163:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 17830, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "38163:5:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "id": 17832, "nodeType": "VariableDeclarationStatement", "src": "38163:7:42"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17836, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17833, "name": "sig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17819, "src": "38184:3:42", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 17834, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "38184:10:42", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "3635", "id": 17835, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38198:2:42", "typeDescriptions": {"typeIdentifier": "t_rational_65_by_1", "typeString": "int_const 65"}, "value": "65"}, "src": "38184:16:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17843, "nodeType": "IfStatement", "src": "38180:62:42", "trueBody": {"id": 17842, "nodeType": "Block", "src": "38202:40:42", "statements": [{"expression": {"arguments": [{"hexValue": "30", "id": 17839, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38229:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 17838, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "38221:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17837, "name": "address", "nodeType": "ElementaryTypeName", "src": "38221:7:42", "typeDescriptions": {}}}, "id": 17840, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38221:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 17823, "id": 17841, "nodeType": "Return", "src": "38214:17:42"}]}}, {"AST": {"nodeType": "YulBlock", "src": "38260:122:42", "statements": [{"nodeType": "YulAssignment", "src": "38272:24:42", "value": {"arguments": [{"arguments": [{"name": "sig", "nodeType": "YulIdentifier", "src": "38287:3:42"}, {"kind": "number", "nodeType": "YulLiteral", "src": "38292:2:42", "type": "", "value": "32"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "38283:3:42"}, "nodeType": "YulFunctionCall", "src": "38283:12:42"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "38277:5:42"}, "nodeType": "YulFunctionCall", "src": "38277:19:42"}, "variableNames": [{"name": "r", "nodeType": "YulIdentifier", "src": "38272:1:42"}]}, {"nodeType": "YulAssignment", "src": "38305:24:42", "value": {"arguments": [{"arguments": [{"name": "sig", "nodeType": "YulIdentifier", "src": "38320:3:42"}, {"kind": "number", "nodeType": "YulLiteral", "src": "38325:2:42", "type": "", "value": "64"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "38316:3:42"}, "nodeType": "YulFunctionCall", "src": "38316:12:42"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "38310:5:42"}, "nodeType": "YulFunctionCall", "src": "38310:19:42"}, "variableNames": [{"name": "s", "nodeType": "YulIdentifier", "src": "38305:1:42"}]}, {"nodeType": "YulAssignment", "src": "38338:34:42", "value": {"arguments": [{"arguments": [{"arguments": [{"name": "sig", "nodeType": "YulIdentifier", "src": "38357:3:42"}, {"kind": "number", "nodeType": "YulLiteral", "src": "38362:2:42", "type": "", "value": "65"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "38353:3:42"}, "nodeType": "YulFunctionCall", "src": "38353:12:42"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "38347:5:42"}, "nodeType": "YulFunctionCall", "src": "38347:19:42"}, {"kind": "number", "nodeType": "YulLiteral", "src": "38368:3:42", "type": "", "value": "255"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "38343:3:42"}, "nodeType": "YulFunctionCall", "src": "38343:29:42"}, "variableNames": [{"name": "v", "nodeType": "YulIdentifier", "src": "38338:1:42"}]}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 17825, "isOffset": false, "isSlot": false, "src": "38272:1:42", "valueSize": 1}, {"declaration": 17828, "isOffset": false, "isSlot": false, "src": "38305:1:42", "valueSize": 1}, {"declaration": 17819, "isOffset": false, "isSlot": false, "src": "38287:3:42", "valueSize": 1}, {"declaration": 17819, "isOffset": false, "isSlot": false, "src": "38320:3:42", "valueSize": 1}, {"declaration": 17819, "isOffset": false, "isSlot": false, "src": "38357:3:42", "valueSize": 1}, {"declaration": 17831, "isOffset": false, "isSlot": false, "src": "38338:1:42", "valueSize": 1}], "id": 17844, "nodeType": "InlineAssembly", "src": "38251:131:42"}, {"condition": {"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 17847, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17845, "name": "v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17831, "src": "38395:1:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "3237", "id": 17846, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38399:2:42", "typeDescriptions": {"typeIdentifier": "t_rational_27_by_1", "typeString": "int_const 27"}, "value": "27"}, "src": "38395:6:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17853, "nodeType": "IfStatement", "src": "38391:42:42", "trueBody": {"id": 17852, "nodeType": "Block", "src": "38403:30:42", "statements": [{"expression": {"id": 17850, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17848, "name": "v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17831, "src": "38415:1:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "3237", "id": 17849, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38420:2:42", "typeDescriptions": {"typeIdentifier": "t_rational_27_by_1", "typeString": "int_const 27"}, "value": "27"}, "src": "38415:7:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 17851, "nodeType": "ExpressionStatement", "src": "38415:7:42"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 17860, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 17856, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17854, "name": "v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17831, "src": "38449:1:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "3237", "id": 17855, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38454:2:42", "typeDescriptions": {"typeIdentifier": "t_rational_27_by_1", "typeString": "int_const 27"}, "value": "27"}, "src": "38449:7:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 17859, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17857, "name": "v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17831, "src": "38460:1:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "3238", "id": 17858, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38465:2:42", "typeDescriptions": {"typeIdentifier": "t_rational_28_by_1", "typeString": "int_const 28"}, "value": "28"}, "src": "38460:7:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "38449:18:42", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17867, "nodeType": "IfStatement", "src": "38445:62:42", "trueBody": {"id": 17866, "nodeType": "Block", "src": "38469:38:42", "statements": [{"expression": {"arguments": [{"hexValue": "30", "id": 17863, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38494:1:42", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 17862, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "38486:7:42", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17861, "name": "address", "nodeType": "ElementaryTypeName", "src": "38486:7:42", "typeDescriptions": {}}}, "id": 17864, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38486:10:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 17823, "id": 17865, "nodeType": "Return", "src": "38479:17:42"}]}}, {"expression": {"arguments": [{"id": 17869, "name": "hash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17817, "src": "38533:4:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17870, "name": "v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17831, "src": "38539:1:42", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"id": 17871, "name": "r", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17825, "src": "38542:1:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 17872, "name": "s", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17828, "src": "38545:1:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 17868, "name": "ecrecover", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -6, "src": "38523:9:42", "typeDescriptions": {"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}}, "id": 17873, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38523:24:42", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 17823, "id": 17874, "nodeType": "Return", "src": "38516:31:42"}]}, "id": 17876, "implemented": true, "kind": "function", "modifiers": [], "name": "_ecrecovery", "nameLocation": "38039:11:42", "nodeType": "FunctionDefinition", "parameters": {"id": 17820, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17817, "mutability": "mutable", "name": "hash", "nameLocation": "38059:4:42", "nodeType": "VariableDeclaration", "scope": 17876, "src": "38051:12:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 17816, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "38051:7:42", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 17819, "mutability": "mutable", "name": "sig", "nameLocation": "38078:3:42", "nodeType": "VariableDeclaration", "scope": 17876, "src": "38065:16:42", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 17818, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "38065:5:42", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "38050:32:42"}, "returnParameters": {"id": 17823, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17822, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17876, "src": "38106:7:42", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17821, "name": "address", "nodeType": "ElementaryTypeName", "src": "38106:7:42", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "38105:9:42"}, "scope": 17877, "src": "38030:524:42", "stateMutability": "pure", "virtual": false, "visibility": "internal"}], "scope": 17878, "src": "1178:37379:42", "usedErrors": []}], "src": "0:38558:42"}, "bytecode": "6080604052600b805460ff191690553480156200001b57600080fd5b5060408051808201825260048152631d195cdd60e21b60208083019182528351808501909452600a8452691d195cdd14de5b589bdb60b21b9084015281519192916200006a916003916200008e565b508051620000809060049060208401906200008e565b505060016007555062000171565b8280546200009c9062000134565b90600052602060002090601f016020900481019282620000c057600085556200010b565b82601f10620000db57805160ff19168380011785556200010b565b828001600101855582156200010b579182015b828111156200010b578251825591602001919060010190620000ee565b50620001199291506200011d565b5090565b5b808211156200011957600081556001016200011e565b600181811c908216806200014957607f821691505b602082108114156200016b57634e487b7160e01b600052602260045260246000fd5b50919050565b615eb380620001816000396000f3fe6080604052600436106102c65760003560e01c80635d1ca6311161017e578063a457c2d7116100d3578063d505accf1161008f578063e487c2e81161006c578063e487c2e8146109a3578063ec342ad0146109b8578063ef867ff4146109d4578063f887ea40146109f457005b8063d505accf14610935578063dd62ed3e14610955578063e086e5ec1461099b57005b8063a457c2d71461085c578063a9059cbb1461087c578063aa271e1a1461089c578063aa492ef9146108d5578063ab62f0e1146108f5578063b3998be01461091557005b80637ecebe001161013a5780638b96412b116101175780638b96412b146107e757806395d89b411461080757806396fb3eaf1461081c578063983b2d561461083c57005b80637ecebe001461078557806382c03da5146107b257806389208f0f146107c757005b80635d1ca631146106c4578063673a2a1f146106d857806370a08231146106ed57806379cc67901461072357806379d9d7f3146107435780637dda231e1461076357005b8063355274ea1161023457806340c10f19116101f05780634f189cb2116101cd5780634f189cb21461064f57806357a3a31b1461066457806357ad5ff6146106845780635bfe4da0146106a457005b806340c10f19146105ed57806342966c681461060d57806347ac7d551461062d57005b8063355274ea1461052e578063361fef49146105435780633644e51514610563578063392e53cd146105795780633950935114610591578063397b3743146105b157005b8063191c918a11610283578063191c918a1461045857806323b872dd1461047857806325b00243146104985780633092afd5146104b857806330adf81f146104d8578063313ce5671461050c57005b80627ffb78146102cf57806301e882081461030b57806306fdde031461035b578063095ea7b31461037d578063160a7925146103ad57806318160ddd1461043957005b366102cd57005b005b3480156102db57600080fd5b50600b5461010090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561031757600080fd5b50610344610326366004614e12565b60056020526000908152604090205460ff8082169161010090041682565b604080519215158352901515602083015201610302565b34801561036757600080fd5b50610370610a14565b6040516103029190614e5b565b34801561038957600080fd5b5061039d610398366004614e8e565b610aa6565b6040519015158152602001610302565b3480156103b957600080fd5b5061041a6103c8366004614e12565b6040805180820190915260008082526020820152506001600160a01b031660009081526005602090815260409182902082518084019093525460ff808216151584526101009091041615159082015290565b6040805182511515815260209283015115159281019290925201610302565b34801561044557600080fd5b506002545b604051908152602001610302565b34801561046457600080fd5b506102cd610473366004614ec8565b610abd565b34801561048457600080fd5b5061039d610493366004614f27565b610d1e565b3480156104a457600080fd5b506102cd6104b3366004614e12565b610dca565b3480156104c457600080fd5b506102cd6104d3366004614e12565b610ee9565b3480156104e457600080fd5b5061044a7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b34801561051857600080fd5b5060125b60405160ff9091168152602001610302565b34801561053a57600080fd5b50600a5461044a565b34801561054f57600080fd5b506102cd61055e366004614f81565b611005565b34801561056f57600080fd5b5061044a60105481565b34801561058557600080fd5b50600b5460ff1661039d565b34801561059d57600080fd5b5061039d6105ac366004614e8e565b611083565b3480156105bd57600080fd5b50600d54600e54600f54604080516001600160a01b03948516815293909216602084015290820152606001610302565b3480156105f957600080fd5b506102cd610608366004614e8e565b6110bf565b34801561061957600080fd5b506102cd610628366004614fc7565b611190565b34801561063957600080fd5b5061064261119a565b6040516103029190615024565b34801561065b57600080fd5b506102cd6111fb565b34801561067057600080fd5b506102cd61067f366004614e12565b6112d6565b34801561069057600080fd5b506102cd61069f366004614f27565b61149d565b3480156106b057600080fd5b506102ee6106bf36600461516f565b611656565b3480156106d057600080fd5b50600161051c565b3480156106e457600080fd5b50610642611ae1565b3480156106f957600080fd5b5061044a610708366004614e12565b6001600160a01b031660009081526020819052604090205490565b34801561072f57600080fd5b506102cd61073e366004614e8e565b611b41565b34801561074f57600080fd5b506102cd61075e3660046151f6565b611bc7565b34801561076f57600080fd5b50610778611ffe565b6040516103029190615269565b34801561079157600080fd5b5061044a6107a0366004614e12565b60116020526000908152604090205481565b3480156107be57600080fd5b506102cd612073565b3480156107d357600080fd5b506102cd6107e2366004615309565b6120d2565b3480156107f357600080fd5b5061044a6108023660046153e6565b6123bf565b34801561081357600080fd5b506103706126d8565b34801561082857600080fd5b5061039d610837366004614e12565b6126e7565b34801561084857600080fd5b506102cd610857366004614e12565b612765565b34801561086857600080fd5b5061039d610877366004614e8e565b612881565b34801561088857600080fd5b5061039d610897366004614e8e565b61291a565b3480156108a857600080fd5b5061039d6108b7366004614e12565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156108e157600080fd5b506102cd6108f0366004614e12565b612927565b34801561090157600080fd5b506102cd610910366004615451565b612a43565b34801561092157600080fd5b5061039d6109303660046154d6565b612bfe565b34801561094157600080fd5b506102cd6109503660046155d7565b612d31565b34801561096157600080fd5b5061044a610970366004615645565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102cd612f43565b3480156109af57600080fd5b506102ee612f83565b3480156109c457600080fd5b5061044a670de0b6b3a764000081565b3480156109e057600080fd5b506102ee6109ef366004614fc7565b61301c565b348015610a0057600080fd5b506012546102ee906001600160a01b031681565b606060088054610a239061567e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4f9061567e565b8015610a9c5780601f10610a7157610100808354040283529160200191610a9c565b820191906000526020600020905b815481529060010190602001808311610a7f57829003601f168201915b5050505050905090565b6000610ab3338484613046565b5060015b92915050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d91906156b3565b6020015180610bb45750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba99190615737565b6001600160a01b0316145b610bd95760405162461bcd60e51b8152600401610bd090615754565b60405180910390fd5b60026007541415610bfc5760405162461bcd60e51b8152600401610bd090615789565b60026007558115610c1057610c108561316a565b601580546001810182556000919091527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750180546001600160a01b0319166001600160a01b0387169081179091556040519081527fa31ffd41531537eb31bfd827a3f5372b5f62bf4dd8579e5354b280dc58490e709060200160405180910390a1601254604051636b14d00560e11b81526001600160a01b038781166004830152306024830152604482018790526064820186905233608483015283811660a48301529091169063d629a00a9060c401600060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b5050600160075550505050505050565b6000610d2b848484613241565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610db05760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610bd0565b610dbd8533858403613046565b60019150505b9392505050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3a91906156b3565b6020015180610ec15750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190615737565b6001600160a01b0316145b610edd5760405162461bcd60e51b8152600401610bd090615754565b610ee681613411565b50565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5991906156b3565b6020015180610fe05750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190615737565b6001600160a01b0316145b610ffc5760405162461bcd60e51b8152600401610bd090615754565b610ee681613483565b600260075414156110285760405162461bcd60e51b8152600401610bd090615789565b600260075560408051838152336020820152428183015243606082015290517f526e31449ea46e2aecf9b480c8d7dfa191348ef74ffdf75b445a6ab726daa6ff9181900360800190a161107a816134e3565b50506001600755565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610ab39185906110ba9086906157d6565b613046565b3360009081526005602052604090205460ff1661111e5760405162461bcd60e51b815260206004820152601960248201527f455243323054656d706c6174653a204e4f54204d494e544552000000000000006044820152606401610bd0565b600a546111348261112e60025490565b906138f5565b11156111825760405162461bcd60e51b815260206004820152601f60248201527f44617461746f6b656e54656d706c6174653a20636170206578636565646564006044820152606401610bd0565b61118c8282613901565b5050565b610ee633826139e0565b60606015805480602002602001604051908101604052809291908181526020018280548015610a9c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111d4575050505050905090565b600b546040516331a9108f60e11b8152600160048201526101009091046001600160a01b031690636352211e90602401602060405180830381865afa158015611248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126c9190615737565b6001600160a01b0316336001600160a01b0316146112cc5760405162461bcd60e51b815260206004820152601b60248201527f455243323054656d706c6174653a206e6f74204e46544f776e657200000000006044820152606401610bd0565b6112d4613b2e565b565b33600090815260056020526040902054610100900460ff16806113695750600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015611340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136491906156b3565b602001515b806113ec5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa1580156113bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e19190615737565b6001600160a01b0316145b61144c5760405162461bcd60e51b815260206004820152602b60248201527f455243323054656d706c6174653a204e4f54205041594d454e54204d414e414760448201526a22a91037b91027aba722a960a91b6064820152608401610bd0565b61145581613ffc565b604080514281524360208201526001600160a01b0383169133917f4d7694d695c57cc54947177c8e8a0e61aae664e9223492a798c32fadfc6419cc910160405180910390a350565b600d546001600160a01b0316331461150a5760405162461bcd60e51b815260206004820152602a60248201527f455243323054656d706c6174653a206e6f74207075626c6973684d61726b65746044820152694665654164647265737360b01b6064820152608401610bd0565b6001600160a01b0383166115715760405162461bcd60e51b815260206004820152602860248201527f496e76616c6964205f7075626c6973684d61726b657446656541646472657373604482015267206164647265737360c01b6064820152608401610bd0565b6001600160a01b0382166115d65760405162461bcd60e51b815260206004820152602660248201527f496e76616c6964205f7075626c6973684d61726b6574466565546f6b656e206160448201526564647265737360d01b6064820152608401610bd0565b600d80546001600160a01b038581166001600160a01b03199283168117909355600e8054918616919092168117909155600f839055604080513381526020810193909352820152606081018290527f02ab4b3fc023109c2d0da394bda239166c833f63c42b71b67ed4b836dca0ddfe9060800160405180910390a1505050565b600b5460405163160a792560e01b815233600482015260009161010090046001600160a01b03169063160a792590602401608060405180830381865afa1580156116a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c891906156b3565b602001518061174f5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015611720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117449190615737565b6001600160a01b0316145b61176b5760405162461bcd60e51b8152600401610bd090615754565b6002600754141561178e5760405162461bcd60e51b8152600401610bd090615789565b600260075561179c60025490565b156117f55760405162461bcd60e51b8152602060048201526024808201527f455243323054656d706c6174653a20746f6b656e7320616c7265616479206d696044820152631b9d195960e21b6064820152608401610bd0565b6118188260008151811061180b5761180b6157ee565b602002602001015161316a565b601260009054906101000a90046001600160a01b03166001600160a01b031663510f34656040518163ffffffff1660e01b8152600401602060405180830381865afa15801561186b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188f9190615804565b846003815181106118a2576118a26157ee565b602002602001015110156119385760405162461bcd60e51b815260206004820152605160248201527f455243323054656d706c6174653a2056657374696e6720706572696f6420746f60448201527f6f206c6f772e2053656520466163746f7279526f757465722e6d696e56657374606482015270696e67506572696f64496e426c6f636b7360781b608482015260a401610bd0565b60006040518060400160405280306001600160a01b03166001600160a01b0316815260200184600181518110611970576119706157ee565b60209081029190910101516001600160a01b0390811690915260125460405163ee3bc63560e01b8152929350169063ee3bc635906119b890849089908990899060040161584d565b6020604051808303816000875af11580156119d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fb9190615737565b6013805460018101825560009182527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180546001600160a01b0319166001600160a01b03841617905584519193507fd02da1bec30f7f750aa0a131745dfb9ce96767c45a192dc26409f5d690e0b9679184918691611a7c57611a7c6157ee565b602002602001015185600181518110611a9757611a976157ee565b6020026020010151604051611acc939291906001600160a01b0393841681529183166020830152909116604082015260600190565b60405180910390a15060016007559392505050565b60606013805480602002602001604051908101604052809291908181526020018280548015610a9c576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116111d4575050505050905090565b6000611b4d8333610970565b905081811015611bab5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610bd0565b611bb88333848403613046565b611bc283836139e0565b505050565b60026007541415611bea5760405162461bcd60e51b8152600401610bd090615789565b600260075533600090815260208190526040902054670de0b6b3a764000090811115611c645760405162461bcd60e51b8152602060048201526024808201527f4e6f7420656e6f7567682064617461746f6b656e7320746f207374617274204f604482015263393232b960e11b6064820152608401610bd0565b600d5460408051338152602081018490529081018690524260608201524360808201526001600160a01b03918216918716907fe1c4fa794edfa8f619b8257a077398950357b9c6398528f94480307352f9afcc9060a00160405180910390a36000600f54118015611cdf5750600e546001600160a01b031615155b8015611cf55750600d546001600160a01b031615155b15611d6a57600e54600d54600f54611d1d926001600160a01b0390811692339291169061401e565b600e54600d54600f546040519081526001600160a01b0392831692909116907f4049a448ac6f0284a98d2cb9199e73605944ea5bec901a037f88c84703de82b29060200160405180910390a35b60008260400135118015611d9757506000611d8b6040840160208501614e12565b6001600160a01b031614155b8015611db957506000611dad6020840184614e12565b6001600160a01b031614155b15611e5657611de9611dd16040840160208501614e12565b33611ddf6020860186614e12565b856040013561401e565b611df96040830160208401614e12565b6001600160a01b0316611e0f6020840184614e12565b6001600160a01b03167f6d11837f46cc09b011cf4aae09fcade046c020aac088090ae4f77ff67b7079728460400135604051611e4d91815260200190565b60405180910390a35b611e5f836134e3565b60125460408051637d28354d60e01b815290516000926001600160a01b031691637d28354d9160048083019260209291908290030181865afa158015611ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ecd9190615804565b9050611ee4611eda612f83565b610897848461416c565b611f305760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2073656e6420445420746f207075626c697368657200006044820152606401610bd0565b60125460408051631a81876d60e01b81529051611fa5926001600160a01b031691631a81876d9160048083019260209291908290030181865afa158015611f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9f9190615737565b8261291a565b611ff15760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f2073656e6420445420746f204f504300000000000000006044820152606401610bd0565b5050600160075550505050565b60606014805480602002602001604051908101604052809291908181526020016000905b8282101561206a576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101612022565b50505050905090565b600b5461010090046001600160a01b031633146112cc5760405162461bcd60e51b815260206004820152601f60248201527f455243323054656d706c6174653a204e4f542037323120436f6e7472616374006044820152606401610bd0565b336001600160a01b038216141561212b5760405162461bcd60e51b815260206004820152601f60248201527f50726f76696465722063616e6e6f742062652074686520636f6e73756d6572006044820152606401610bd0565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525090506000818c8c8c60405160200161217d939291906158b8565b604051602081830303815290604052805190602001206040516020016121a49291906158d2565b604051602081830303815290604052805190602001209050336001600160a01b0316612206828b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061417892505050565b6001600160a01b03161461225c5760405162461bcd60e51b815260206004820152601f60248201527f50726f7669646572207369676e617475726520636865636b206661696c6564006044820152606401610bd0565b60008288886040516020016122729291906158f4565b604051602081830303815290604052805190602001206040516020016122999291906158d2565b604051602081830303815290604052805190602001209050836001600160a01b03166122fb8288888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061417892505050565b6001600160a01b0316146123515760405162461bcd60e51b815260206004820152601f60248201527f436f6e73756d6572207369676e617475726520636865636b206661696c6564006044820152606401610bd0565b836001600160a01b0316336001600160a01b03167fc9a10280e9c735c63092fa5431e6acb3ed342e08b69a083e5e676994eb7070f98f8f8f8f8f8f8f8f8f42436040516123a89b9a9998979695949392919061592d565b60405180910390a350505050505050505050505050565b600b5460405163160a792560e01b815233600482015260009161010090046001600160a01b03169063160a792590602401608060405180830381865afa15801561240d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243191906156b3565b60200151806124b85750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015612489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ad9190615737565b6001600160a01b0316145b6124d45760405162461bcd60e51b8152600401610bd090615754565b600260075414156124f75760405162461bcd60e51b8152600401610bd090615789565b6002600781905550600082600481518110612514576125146157ee565b6020026020010151111561252b5761252b8461316a565b601254604051638244937560e01b81526001600160a01b039091169063824493759061255f9087908790879060040161599f565b6020604051808303816000875af115801561257e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a29190615804565b9050826000815181106125b7576125b76157ee565b60200260200101516001600160a01b0316836001815181106125db576125db6157ee565b60200260200101516001600160a01b03167fb3fac3ae95956dbac74e63ba8dac94081832395c8788e3049c900a7732f34805838760405161262f9291909182526001600160a01b0316602082015260400190565b60405180910390a3604080518082019091526001600160a01b03948516815260208101828152601480546001808201835560009290925292517fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec600290940293840180546001600160a01b0319169190981617909655517fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ed909101556007939093555090919050565b606060098054610a239061567e565b600b5460405163160a792560e01b81526001600160a01b0383811660048301526000926101009004169063160a792590602401608060405180830381865afa158015612737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275b91906156b3565b6020015192915050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa1580156127b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d591906156b3565b602001518061285c5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa15801561282d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128519190615737565b6001600160a01b0316145b6128785760405162461bcd60e51b8152600401610bd090615754565b610ee68161316a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156129035760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610bd0565b6129103385858403613046565b5060019392505050565b6000610ab3338484613241565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015612973573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061299791906156b3565b6020015180612a1e5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa1580156129ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a139190615737565b6001600160a01b0316145b612a3a5760405162461bcd60e51b8152600401610bd090615754565b610ee681614250565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015612a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab391906156b3565b6020015180612b3a5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015612b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2f9190615737565b6001600160a01b0316145b612b565760405162461bcd60e51b8152600401610bd090615754565b6040516bffffffffffffffffffffffff193060601b16602082015260009060340160408051808303601f19018152908290528051602090910120600b546301caf8fd60e31b835290925061010090046001600160a01b031690630e57c7e890612bc7908490879087906004016159df565b600060405180830381600087803b158015612be157600080fd5b505af1158015612bf5573d6000803e3d6000fd5b50505050505050565b600b5460009060ff1615612c6e5760405162461bcd60e51b815260206004820152603160248201527f455243323054656d706c6174653a20746f6b656e20696e7374616e636520616c6044820152701c9958591e481a5b9a5d1a585b1a5e9959607a1b6064820152608401610bd0565b612d22612c7b8b8d615a59565b8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c91829185019084908082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b918291850190849080828437600092019190915250612d1d92508991508a9050615ae0565b614331565b9b9a5050505050505050505050565b43841015612d745760405162461bcd60e51b815260206004820152601060248201526f115490cc8c11150e881156141254915160821b6044820152606401610bd0565b6010546001600160a01b038816600090815260116020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087612dc783615b5b565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001612e4092919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015612eab573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590612ee15750886001600160a01b0316816001600160a01b0316145b612f2d5760405162461bcd60e51b815260206004820152601a60248201527f455243323044543a20494e56414c49445f5349474e41545552450000000000006044820152606401610bd0565b612f38898989613046565b505050505050505050565b612f4b612f83565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015610ee6573d6000803e3d6000fd5b600c546000906001600160a01b031661300c57600b546040516331a9108f60e11b8152600160048201526101009091046001600160a01b031690636352211e90602401602060405180830381865afa158015612fe3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130079190615737565b905090565b50600c546001600160a01b031690565b6006818154811061302c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0383166130a85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610bd0565b6001600160a01b0382166131095760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610bd0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03811615610ee6576001600160a01b0381166000908152600560205260409020805460ff16156131e35760405162461bcd60e51b815260206004820152601d60248201527f4552433230526f6c65733a2020414c52454144592041204d494e5445520000006044820152606401610bd0565b805460ff191660011781556131f782614789565b6040805142815243602082015233916001600160a01b038516917f4f7e100eb1ee13e903798bd0d6aa854152e07eb05544f392b9409c12935c809591015b60405180910390a35050565b6001600160a01b0383166132a55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610bd0565b6001600160a01b0382166133075760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610bd0565b6001600160a01b0383166000908152602081905260409020548181101561337f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610bd0565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906133b69084906157d6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161340291815260200190565b60405180910390a35b50505050565b6001600160a01b03811660008181526005602052604090819020805461ff00191681559051909133917faee911eec8b2df8f3ae0464841541b1e5f339519bd5cf51889fe8b07fecff658906134729042904390918252602082015260400190565b60405180910390a361118c82614840565b6001600160a01b03811660008181526005602052604090819020805460ff191681559051909133917fefa2735987005aaa89c050c0ff8cc9ae7d9079d19382081c429130f98c52d480906134729042904390918252602082015260400190565b60408051808201909152601c81527f19457468657265756d205369676e6564204d6573736167653a0a333200000000602082015260008161352760e0850185615b76565b6135346020870187614e12565b6135446040880160208901614e12565b87604001358860c0013560405160200161356396959493929190615bbc565b6040516020818303038152906040528051906020012060405160200161358a9291906158d2565b60408051601f198184030181529190528051602090910120905060006001826135b96080870160608801615bfa565b6040805160008152602081018083529390935260ff90911690820152608080870135606083015260a08088013591830191909152016020604051602081039080840390855afa158015613610573d6000803e3d6000fd5b5050604051601f190151915061362b90506020850185614e12565b6001600160a01b0316816001600160a01b0316146136825760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642070726f76696465722066656560601b6044820152606401610bd0565b6136926040850160208601614e12565b6001600160a01b03166136a86020860186614e12565b6001600160a01b03167ff8ed11cdaaf10eca2b6c941fb802cb8682afe86cac1eb93f70d0780fa062c54460408701356136e460e0890189615b76565b6136f460808b0160608c01615bfa565b8a608001358b60a001358c60c001356040516137169796959493929190615c15565b60405180910390a36000846040013511801561374b5750600061373f6040860160208701614e12565b6001600160a01b031614155b801561376d575060006137616020860186614e12565b6001600160a01b031614155b1561340b5760125460408051636c45e88160e01b815290516000926001600160a01b031691636c45e8819160048083019260209291908290030181865afa1580156137bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137e09190615804565b90506000811561380d5761380a670de0b6b3a764000061380460408901358561498e565b9061499a565b90505b600061381d60408801358361416c565b905061383e6138326040890160208a01614e12565b33308a6040013561401e565b61386f61384e6020890189614e12565b8261385f60408b0160208c01614e12565b6001600160a01b031691906149a6565b8115612bf55760125460408051631a81876d60e01b81529051612bf5926001600160a01b031691631a81876d9160048083019260209291908290030181865afa1580156138c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138e49190615737565b8361385f60408b0160208c01614e12565b6000610dc382846157d6565b6001600160a01b0382166139575760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610bd0565b806002600082825461396991906157d6565b90915550506001600160a01b038216600090815260208190526040812080548392906139969084906157d6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216613a405760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610bd0565b6001600160a01b03821660009081526020819052604090205481811015613ab45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610bd0565b6001600160a01b0383166000908152602081905260408120838303905560028054849290613ae3908490615c58565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b601554601454600091613b40916157d6565b9050600080826001600160401b03811115613b5d57613b5d615037565b604051908082528060200260200182016040528015613b86578160200160208202803683370190505b50905060005b601454811015613e6c57600060148281548110613bab57613bab6157ee565b60009182526020822060029091020154601480546001600160a01b039092169350829182918591634c87087d919088908110613be957613be96157ee565b9060005260206000209060020201600101546040518263ffffffff1660e01b8152600401613c1991815260200190565b61018060405180830381865afa158015613c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c5b9190615c6f565b9b509b509b505050505050505050506000821115613d0157836001600160a01b031663f32f947660148781548110613c9557613c956157ee565b906000526020600020906002020160010154846040518363ffffffff1660e01b8152600401613cce929190918252602082015260400190565b600060405180830381600087803b158015613ce857600080fd5b505af1158015613cfc573d6000803e3d6000fd5b505050505b8215613d9557836001600160a01b031663c612e48a60148781548110613d2957613d296157ee565b906000526020600020906002020160010154856040518363ffffffff1660e01b8152600401613d62929190918252602082015260400190565b600060405180830381600087803b158015613d7c57600080fd5b505af1158015613d90573d6000803e3d6000fd5b505050505b613dd860148681548110613dab57613dab6157ee565b600091825260208083206002909202909101546001600160a01b0316825260059052604090205460ff1690565b8015613de657506001811515145b15613e555760148581548110613dfe57613dfe6157ee565b600091825260209091206002909102015486516001600160a01b0390911690879089908110613e2f57613e2f6157ee565b6001600160a01b039092166020928302919091019091015286613e5181615b5b565b9750505b505050508080613e6490615b5b565b915050613b8c565b5060005b601554811015613fb15760158181548110613e8d57613e8d6157ee565b60009182526020909120015460405163f9bfaa7d60e01b81523060048201526001600160a01b039091169063f9bfaa7d90602401600060405180830381600087803b158015613edb57600080fd5b505af1158015613eef573d6000803e3d6000fd5b50505050613f3160158281548110613f0957613f096157ee565b60009182526020808320909101546001600160a01b0316825260059052604090205460ff1690565b15613f9f5760158181548110613f4957613f496157ee565b9060005260206000200160009054906101000a90046001600160a01b0316828481518110613f7957613f796157ee565b6001600160a01b039092166020928302919091019091015282613f9b81615b5b565b9350505b80613fa981615b5b565b915050613e70565b613fb9614a09565b50600c80546001600160a01b031916905560005b8281101561340b57613fea82828151811061180b5761180b6157ee565b80613ff481615b5b565b915050613fcd565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908616906370a0823190602401602060405180830381865afa158015614068573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061408c9190615804565b90506140a36001600160a01b038616858585614ab8565b6140ad81836138f5565b6040516370a0823160e01b81526001600160a01b0385811660048301528716906370a0823190602401602060405180830381865afa1580156140f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141179190615804565b10156141655760405162461bcd60e51b815260206004820152601a60248201527f5472616e7366657220616d6f756e7420697320746f6f206c6f770000000000006044820152606401610bd0565b5050505050565b6000610dc38284615c58565b60008060008084516041146141935760009350505050610ab7565b50505060208201516040830151604184015160ff16601b8110156141bf576141bc601b82615d2c565b90505b8060ff16601b141580156141d757508060ff16601c14155b156141e85760009350505050610ab7565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561423b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6001600160a01b03811615610ee6576001600160a01b03811660009081526005602052604090208054610100900460ff16156142d95760405162461bcd60e51b815260206004820152602260248201527f4552433230526f6c65733a2020414c5245414459204120464545204d414e414760448201526122a960f11b6064820152608401610bd0565b805461ff0019166101001781556142ef82614789565b6040805142815243602082015233916001600160a01b038516917fb17da2e9910b4ba5754e8872385ba315a238bafb5ae221fc85093c33432c40a79101613235565b60008084600081518110614347576143476157ee565b6020026020010151905084600181518110614364576143646157ee565b6020908102919091010151601280546001600160a01b0319166001600160a01b0392831617905581166143ee5760405162461bcd60e51b815260206004820152602c60248201527f455243323054656d706c6174653a20496e76616c6964206d696e7465722c202060448201526b7a65726f206164647265737360a01b6064820152608401610bd0565b6012546001600160a01b031661445a5760405162461bcd60e51b815260206004820152602b60248201527f455243323054656d706c6174653a20496e76616c696420726f757465722c207a60448201526a65726f206164647265737360a81b6064820152608401610bd0565b600019600a5586518790600090614473576144736157ee565b602002602001015160089080519060200190614490929190614d3a565b50866001815181106144a4576144a46157ee565b6020026020010151600990805190602001906144c1929190614d3a565b50600b805460ff196001600160a01b03841661010002166001600160a81b0319909116176001179055855161450190879060009061180b5761180b6157ee565b60006001600160a01b03168660018151811061451f5761451f6157ee565b60200260200101516001600160a01b0316146145c9576145588660018151811061454b5761454b6157ee565b6020026020010151613ffc565b8560018151811061456b5761456b6157ee565b60200260200101516001600160a01b0316336001600160a01b03167f4d7694d695c57cc54947177c8e8a0e61aae664e9223492a798c32fadfc6419cc42436040516145c0929190918252602082015260400190565b60405180910390a35b856002815181106145dc576145dc6157ee565b6020026020010151600d60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508560038151811061461d5761461d6157ee565b6020026020010151600e60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508360018151811061465e5761465e6157ee565b602090810291909101810151600f819055600d54600e54604080513381526001600160a01b039384169581019590955291169083015260608201527f02ab4b3fc023109c2d0da394bda239166c833f63c42b71b67ed4b836dca0ddfe9060800160405180910390a160405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f906146f990600890615d51565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051808303601f1901815291905280516020909101206010555050600b5460ff169695505050505050565b60005b6006548110156147e557816001600160a01b0316600682815481106147b3576147b36157ee565b6000918252602090912001546001600160a01b031614156147d3576147e5565b806147dd81615b5b565b91505061478c565b60065481141561118c57600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0384166001600160a01b03199091161790555050565b6001600160a01b0381166000908152600560205260409020805460ff1615801561487157508054610100900460ff16155b1561118c5760005b6006548110156148d257826001600160a01b0316600682815481106148a0576148a06157ee565b6000918252602090912001546001600160a01b031614156148c0576148d2565b806148ca81615b5b565b915050614879565b600654811015611bc257600680546148ec90600190615c58565b815481106148fc576148fc6157ee565b600091825260209091200154600680546001600160a01b039092169183908110614928576149286157ee565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600680548061496757614967615ded565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b6000610dc38284615e03565b6000610dc38284615e22565b6040516001600160a01b038316602482015260448101829052611bc290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614af0565b60005b600654811015614a6f5760006005600060068481548110614a2f57614a2f6157ee565b60009182526020808320909101546001600160a01b031683528201929092526040019020805461ffff191690555080614a6781615b5b565b915050614a0c565b50614a7c60066000614dbe565b6040805142815243602082015233917f712bc71db81927a76b8bf1ea346247bb0ad58f18e4e5c1bd4aa0ec6573e02a2b910160405180910390a2565b6040516001600160a01b038085166024830152831660448201526064810182905261340b9085906323b872dd60e01b906084016149d2565b6000614b45826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614bc29092919063ffffffff16565b805190915015611bc25780806020019051810190614b639190615e44565b611bc25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bd0565b6060614bd18484600085614bd9565b949350505050565b606082471015614c3a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610bd0565b843b614c885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bd0565b600080866001600160a01b03168587604051614ca49190615e61565b60006040518083038185875af1925050503d8060008114614ce1576040519150601f19603f3d011682016040523d82523d6000602084013e614ce6565b606091505b5091509150614cf6828286614d01565b979650505050505050565b60608315614d10575081610dc3565b825115614d205782518084602001fd5b8160405162461bcd60e51b8152600401610bd09190614e5b565b828054614d469061567e565b90600052602060002090601f016020900481019282614d685760008555614dae565b82601f10614d8157805160ff1916838001178555614dae565b82800160010185558215614dae579182015b82811115614dae578251825591602001919060010190614d93565b50614dba929150614dd8565b5090565b5080546000825590600052602060002090810190610ee691905b5b80821115614dba5760008155600101614dd9565b6001600160a01b0381168114610ee657600080fd5b8035614e0d81614ded565b919050565b600060208284031215614e2457600080fd5b8135610dc381614ded565b60005b83811015614e4a578181015183820152602001614e32565b8381111561340b5750506000910152565b6020815260008251806020840152614e7a816040850160208701614e2f565b601f01601f19169190910160400192915050565b60008060408385031215614ea157600080fd5b8235614eac81614ded565b946020939093013593505050565b8015158114610ee657600080fd5b600080600080600060a08688031215614ee057600080fd5b8535614eeb81614ded565b945060208601359350604086013592506060860135614f0981614eba565b91506080860135614f1981614ded565b809150509295509295909350565b600080600060608486031215614f3c57600080fd5b8335614f4781614ded565b92506020840135614f5781614ded565b929592945050506040919091013590565b60006101008284031215614f7b57600080fd5b50919050565b60008060408385031215614f9457600080fd5b8235915060208301356001600160401b03811115614fb157600080fd5b614fbd85828601614f68565b9150509250929050565b600060208284031215614fd957600080fd5b5035919050565b600081518084526020808501945080840160005b838110156150195781516001600160a01b031687529582019590820190600101614ff4565b509495945050505050565b602081526000610dc36020830184614fe0565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561507557615075615037565b604052919050565b60006001600160401b0382111561509657615096615037565b5060051b60200190565b600082601f8301126150b157600080fd5b813560206150c66150c18361507d565b61504d565b82815260059290921b840181019181810190868411156150e557600080fd5b8286015b8481101561510057803583529183019183016150e9565b509695505050505050565b600082601f83011261511c57600080fd5b8135602061512c6150c18361507d565b82815260059290921b8401810191818101908684111561514b57600080fd5b8286015b8481101561510057803561516281614ded565b835291830191830161514f565b60008060006060848603121561518457600080fd5b83356001600160401b038082111561519b57600080fd5b6151a7878388016150a0565b945060208601359150808211156151bd57600080fd5b6151c9878388016150a0565b935060408601359150808211156151df57600080fd5b506151ec8682870161510b565b9150509250925092565b60008060008084860360c081121561520d57600080fd5b853561521881614ded565b94506020860135935060408601356001600160401b0381111561523a57600080fd5b61524688828901614f68565b9350506060605f198201121561525b57600080fd5b509295919450926060019150565b602080825282518282018190526000919060409081850190868401855b828110156152b457815180516001600160a01b03168552860151868501529284019290850190600101615286565b5091979650505050505050565b60008083601f8401126152d357600080fd5b5081356001600160401b038111156152ea57600080fd5b60208301915083602082850101111561530257600080fd5b9250929050565b60008060008060008060008060008060c08b8d03121561532857600080fd5b8a35995060208b01356001600160401b038082111561534657600080fd5b6153528e838f016152c1565b909b50995060408d013591508082111561536b57600080fd5b6153778e838f016152c1565b909950975060608d013591508082111561539057600080fd5b61539c8e838f016152c1565b909750955060808d01359150808211156153b557600080fd5b506153c28d828e016152c1565b90945092506153d5905060a08c01614e02565b90509295989b9194979a5092959850565b6000806000606084860312156153fb57600080fd5b833561540681614ded565b925060208401356001600160401b038082111561542257600080fd5b61542e8783880161510b565b9350604086013591508082111561544457600080fd5b506151ec868287016150a0565b6000806020838503121561546457600080fd5b82356001600160401b0381111561547a57600080fd5b615486858286016152c1565b90969095509350505050565b60008083601f8401126154a457600080fd5b5081356001600160401b038111156154bb57600080fd5b6020830191508360208260051b850101111561530257600080fd5b60008060008060008060008060008060a08b8d0312156154f557600080fd5b8a356001600160401b038082111561550c57600080fd5b6155188e838f01615492565b909c509a5060208d013591508082111561553157600080fd5b61553d8e838f01615492565b909a50985060408d013591508082111561555657600080fd5b6155628e838f01615492565b909850965060608d013591508082111561557b57600080fd5b6155878e838f01615492565b909650945060808d01359150808211156155a057600080fd5b506155ad8d828e01615492565b915080935050809150509295989b9194979a5092959850565b803560ff81168114614e0d57600080fd5b600080600080600080600060e0888a0312156155f257600080fd5b87356155fd81614ded565b9650602088013561560d81614ded565b95506040880135945060608801359350615629608089016155c6565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561565857600080fd5b823561566381614ded565b9150602083013561567381614ded565b809150509250929050565b600181811c9082168061569257607f821691505b60208210811415614f7b57634e487b7160e01b600052602260045260246000fd5b6000608082840312156156c557600080fd5b604051608081018181106001600160401b03821117156156e7576156e7615037565b60405282516156f581614eba565b8152602083015161570581614eba565b6020820152604083015161571881614eba565b6040820152606083015161572b81614eba565b60608201529392505050565b60006020828403121561574957600080fd5b8151610dc381614ded565b6020808252818101527f455243323054656d706c6174653a204e4f54204445504c4f59455220524f4c45604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156157e9576157e96157c0565b500190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561581657600080fd5b5051919050565b600081518084526020808501945080840160005b8381101561501957815187529582019590820190600101615831565b60008186825b600281101561587b5781516001600160a01b0316835260209283019290910190600101615853565b50505060a0604083015261589260a083018661581d565b82810360608401526158a4818661581d565b90508281036080840152614cf68185614fe0565b838152818360208301376000910160200190815292915050565b600083516158e4818460208801614e2f565b9190910191825250602001919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8b815260e06020820152600061594760e083018c8e615904565b828103604084015261595a818b8d615904565b9050828103606084015261596f81898b615904565b90508281036080840152615984818789615904565b60a0840195909552505060c001529998505050505050505050565b6001600160a01b03841681526060602082018190526000906159c390830185614fe0565b82810360408401526159d5818561581d565b9695505050505050565b8381526040602082015260006159f9604083018486615904565b95945050505050565b60006001600160401b03831115615a1b57615a1b615037565b615a2e601f8401601f191660200161504d565b9050828152838383011115615a4257600080fd5b828260208301376000602084830101529392505050565b6000615a676150c18461507d565b80848252602080830192508560051b850136811115615a8557600080fd5b855b81811015615ad45780356001600160401b03811115615aa65760008081fd5b870136601f820112615ab85760008081fd5b615ac6368235868401615a02565b865250938201938201615a87565b50919695505050505050565b6000615aee6150c18461507d565b80848252602080830192508560051b850136811115615b0c57600080fd5b855b81811015615ad45780356001600160401b03811115615b2d5760008081fd5b870136601f820112615b3f5760008081fd5b615b4d368235868401615a02565b865250938201938201615b0e565b6000600019821415615b6f57615b6f6157c0565b5060010190565b6000808335601e19843603018112615b8d57600080fd5b8301803591506001600160401b03821115615ba757600080fd5b60200191503681900382131561530257600080fd5b858782376bffffffffffffffffffffffff19606095861b8116969091019586529290931b909116601484015260288301526048820152606801919050565b600060208284031215615c0c57600080fd5b610dc3826155c6565b87815260c060208201526000615c2f60c08301888a615904565b905060ff861660408301528460608301528360808301528260a083015298975050505050505050565b600082821015615c6a57615c6a6157c0565b500390565b6000806000806000806000806000806000806101808d8f031215615c9257600080fd5b8c51615c9d81614ded565b60208e0151909c50615cae81614ded565b60408e015160608f0151919c509a50615cc681614ded565b8099505060808d0151975060a08d0151965060c08d0151615ce681614eba565b8096505060e08d015194506101008d015193506101208d015192506101408d015191506101608d0151615d1881614eba565b809150509295989b509295989b509295989b565b600060ff821660ff84168060ff03821115615d4957615d496157c0565b019392505050565b600080835481600182811c915080831680615d6d57607f831692505b6020808410821415615d8d57634e487b7160e01b86526022600452602486fd5b818015615da15760018114615db257615ddf565b60ff19861689528489019650615ddf565b60008a81526020902060005b86811015615dd75781548b820152908501908301615dbe565b505084890196505b509498975050505050505050565b634e487b7160e01b600052603160045260246000fd5b6000816000190483118215151615615e1d57615e1d6157c0565b500290565b600082615e3f57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215615e5657600080fd5b8151610dc381614eba565b60008251615e73818460208701614e2f565b919091019291505056fea26469706673582212209697a906b59504c4a6db4f342ff16b072ab394c370e0c31fd5da8055dbc9825e64736f6c634300080c0033", "bytecodeSha1": "de606e8aeba84e21f529001f314de990b3370168", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.12+commit.f00d7308"}, "contractName": "ERC20Template", "coverageMap": {"branches": {"11": {}, "2": {"ERC20Template.createFixedRate": {"260": [2259, 2278, true]}}, "21": {}, "24": {}, "28": {}, "29": {}, "3": {"ERC20._approve": {"241": [10083, 10102, true], "242": [10161, 10182, true]}, "ERC20._burn": {"247": [9036, 9057, true], "248": [9227, 9251, true]}, "ERC20._mint": {"246": [8327, 8348, true]}, "ERC20._transfer": {"243": [7390, 7410, true], "244": [7470, 7493, true], "245": [7661, 7684, true]}, "ERC20.decreaseAllowance": {"240": [6564, 6599, true]}, "ERC20.transferFrom": {"239": [5081, 5107, true]}}, "4": {}, "42": {"ERC20Template._checkProviderFee": {"218": [17103, 17144, true], "219": [17690, 17724, false], "220": [17740, 17783, false], "221": [17799, 17844, false], "222": [17977, 17987, false], "223": [18468, 18478, false]}, "ERC20Template._ecrecovery": {"230": [38184, 38200, false], "231": [38395, 38401, false], "232": [38449, 38456, false], "233": [38460, 38467, false]}, "ERC20Template._initialize": {"234": [9430, 9457, true], "235": [10104, 10131, false]}, "ERC20Template._internalCleanPermissions": {"224": [26035, 26046, false], "225": [26139, 26150, false], "226": [26292, 26339, false], "227": [26343, 26359, false], "228": [26717, 26740, false]}, "ERC20Template._pullUnderlying": {"229": [36182, 36238, true]}, "ERC20Template.cleanFrom721": {"208": [25010, 25038, true]}, "ERC20Template.cleanPermissions": {"191": [5647, 5703, true]}, "ERC20Template.createFixedRate": {"212": [14140, 14152, false]}, "ERC20Template.deployPool": {"197": [12835, 12853, true], "198": [13018, 13077, true]}, "ERC20Template.mint": {"189": [15912, 15942, true], "190": [16003, 16035, true]}, "ERC20Template.orderExecuted": {"209": [36947, 36976, true], "210": [37377, 37435, true], "211": [37735, 37798, true]}, "ERC20Template.permit": {"215": [32309, 32333, true], "216": [32910, 32940, false], "217": [32944, 32969, true]}, "ERC20Template.setData": {"213": [6042, 6146, true], "214": [6150, 6206, true]}, "ERC20Template.setPaymentCollector": {"192": [27668, 27706, true], "193": [27726, 27796, true], "194": [27816, 27870, true]}, "ERC20Template.setPublishingMarketFee": {"195": [29476, 29514, true], "196": [29614, 29650, true]}, "ERC20Template.startOrder": {"199": [19430, 19461, true], "200": [19975, 20001, false], "201": [20017, 20052, false], "202": [20068, 20105, false], "203": [20646, 20690, false], "204": [20706, 20759, false], "205": [20775, 20830, false], "206": [21460, 21511, true], "207": [21598, 21656, true]}}, "46": {"ERC20Roles._SafeRemoveFromAuthERC20": {"256": [4894, 4919, false], "257": [4935, 4968, false], "258": [5075, 5095, false], "259": [5133, 5153, false]}, "ERC20Roles._addMinter": {"250": [1396, 1417, false], "251": [1500, 1520, true]}, "ERC20Roles._addPaymentManager": {"252": [2680, 2711, false], "253": [2804, 2832, true]}, "ERC20Roles._pushToAuthERC20": {"254": [4404, 4424, false], "255": [4454, 4475, false]}}, "5": {"ERC20Burnable.burnFrom": {"249": [1035, 1061, true]}}, "6": {}, "7": {"SafeERC20._callOptionalReturn": {"261": [3668, 3689, false], "262": [3752, 3782, true]}}, "8": {"Address._verifyCallResult": {"237": [7124, 7131, false], "238": [7265, 7286, false]}, "Address.functionCallWithValue": {"236": [4745, 4775, true]}}, "9": {}}, "statements": {"11": {"SafeMath.add": {"113": [2749, 2761]}, "SafeMath.div": {"174": [3844, 3856]}, "SafeMath.mul": {"173": [3459, 3471]}, "SafeMath.sub": {"140": [3116, 3128]}}, "2": {}, "21": {}, "24": {}, "28": {}, "29": {}, "3": {"ERC20._approve": {"87": [10075, 10143], "88": [10153, 10221], "89": [10232, 10268], "90": [10278, 10315]}, "ERC20._burn": {"118": [9028, 9095], "119": [9219, 9290], "120": [9324, 9368], "121": [9388, 9410], "122": [9421, 9463]}, "ERC20._mint": {"114": [8319, 8384], "115": [8455, 8477], "116": [8487, 8515], "117": [8525, 8567]}, "ERC20._transfer": {"95": [7382, 7452], "96": [7462, 7533], "97": [7653, 7727], "98": [7761, 7803], "99": [7823, 7853], "100": [7864, 7904], "101": [7915, 7961]}, "ERC20.allowance": {"9": [3992, 4026]}, "ERC20.approve": {"11": [4270, 4309], "13": [4319, 4330]}, "ERC20.balanceOf": {"7": [3419, 3444]}, "ERC20.decreaseAllowance": {"74": [6556, 6641], "75": [6675, 6742], "76": [6763, 6774]}, "ERC20.increaseAllowance": {"26": [5781, 5861]}, "ERC20.totalSupply": {"2": [3242, 3261]}, "ERC20.transfer": {"77": [3756, 3798]}, "ERC20.transferFrom": {"18": [4956, 4992], "19": [5073, 5152], "20": [5186, 5243], "21": [5264, 5275]}}, "4": {}, "42": {"ERC20Template._checkProviderFee": {"107": [17095, 17169], "108": [17179, 17497], "109": [18005, 18066], "110": [18159, 18295], "111": [18309, 18451], "112": [18495, 18641]}, "ERC20Template._ecrecovery": {"141": [38214, 38231], "142": [38415, 38422], "143": [38479, 38496], "144": [38516, 38547]}, "ERC20Template._initialize": {"149": [9370, 9399], "150": [9409, 9527], "151": [9538, 9648], "152": [9764, 9837], "153": [9847, 9866], "154": [9876, 9897], "155": [9907, 9937], "156": [9947, 9965], "157": [10065, 10090], "158": [10147, 10182], "159": [10196, 10356], "160": [10376, 10415], "161": [10425, 10462], "162": [10472, 10506], "163": [10516, 10686], "164": [10783, 11183], "165": [11194, 11212]}, "ERC20Template._internalCleanPermissions": {"123": [26068, 26118], "124": [26172, 26222], "125": [26382, 26446], "126": [26468, 26479], "127": [25518, 25521], "128": [26593, 26596], "129": [26642, 26696], "130": [26763, 26803], "131": [26825, 26836], "132": [26619, 26622], "133": [26907, 26926], "134": [26966, 26995], "135": [27110, 27140], "136": [27091, 27094]}, "ERC20Template._pullUnderlying": {"138": [36116, 36164], "139": [36174, 36289]}, "ERC20Template._setPaymentCollector": {"137": [28343, 28382]}, "ERC20Template.addMinter": {"73": [22647, 22666]}, "ERC20Template.addPaymentManager": {"78": [23353, 23388]}, "ERC20Template.cap": {"3": [31392, 31403]}, "ERC20Template.cleanFrom721": {"62": [24989, 25095]}, "ERC20Template.cleanPermissions": {"32": [24524, 24551]}, "ERC20Template.createDispenser": {"14": [15209, 15231], "15": [15241, 15268], "16": [15278, 15307], "17": [15317, 15515]}, "ERC20Template.createFixedRate": {"67": [14154, 14183], "68": [14193, 14327], "69": [14337, 14413], "70": [14423, 14487]}, "ERC20Template.deployPool": {"42": [12827, 12894], "43": [12904, 12928], "44": [12997, 13184], "45": [13261, 13398], "46": [13408, 13432], "47": [13442, 13488]}, "ERC20Template.getDispensers": {"31": [35885, 35903]}, "ERC20Template.getERC721Address": {"0": [30946, 30967]}, "ERC20Template.getFixedRates": {"61": [35662, 35688]}, "ERC20Template.getId": {"6": [30332, 30340]}, "ERC20Template.getPaymentCollector": {"85": [34284, 34333], "86": [34364, 34387]}, "ERC20Template.getPools": {"48": [35434, 35455]}, "ERC20Template.getPublishingMarketFee": {"5": [28736, 28861]}, "ERC20Template.initialize": {"80": [7777, 7958]}, "ERC20Template.isERC20Deployer": {"72": [35179, 35251]}, "ERC20Template.isInitialized": {"4": [31634, 31652]}, "ERC20Template.mint": {"27": [15904, 15972], "28": [15982, 16092], "29": [16102, 16123]}, "ERC20Template.name": {"10": [30527, 30539]}, "ERC20Template.orderExecuted": {"63": [36939, 37012], "64": [37369, 37471], "65": [37727, 37834], "66": [37844, 38015]}, "ERC20Template.permit": {"81": [32301, 32354], "82": [32889, 33021], "83": [33031, 33062]}, "ERC20Template.removeMinter": {"23": [22944, 22966]}, "ERC20Template.removePaymentManager": {"22": [23735, 23773]}, "ERC20Template.reuseOrder": {"24": [22212, 22340], "25": [22350, 22381]}, "ERC20Template.setData": {"79": [24185, 24242]}, "ERC20Template.setPaymentCollector": {"33": [27647, 27939], "34": [27949, 27991], "35": [28001, 28148]}, "ERC20Template.setPublishingMarketFee": {"36": [29455, 29580], "37": [29593, 29714], "38": [29724, 29774], "39": [29784, 29830], "40": [29840, 29888], "41": [29898, 30071]}, "ERC20Template.startOrder": {"52": [19409, 19523], "53": [19533, 19744], "54": [20130, 20260], "55": [20287, 20442], "56": [20855, 21039], "57": [21053, 21262], "58": [21282, 21313], "59": [21439, 21567], "60": [21577, 21706]}, "ERC20Template.symbol": {"71": [30734, 30748]}, "ERC20Template.withdrawETH": {"84": [34932, 34994]}}, "46": {"ERC20Roles._SafeRemoveFromAuthERC20": {"169": [5097, 5102], "170": [5049, 5052], "171": [5172, 5217], "172": [5235, 5250]}, "ERC20Roles._addMinter": {"91": [1492, 1554], "92": [1568, 1586], "93": [1600, 1625], "94": [1639, 1704]}, "ERC20Roles._addPaymentManager": {"145": [2796, 2871], "146": [2885, 2911], "147": [2925, 2960], "148": [2974, 3057]}, "ERC20Roles._cleanPermissions": {"176": [3900, 3919], "177": [3933, 3960], "178": [3816, 3819], "179": [3990, 4006], "180": [4016, 4080]}, "ERC20Roles._pushToAuthERC20": {"166": [4426, 4431], "167": [4382, 4385], "168": [4527, 4547]}, "ERC20Roles._removeMinter": {"105": [1981, 2000], "106": [2010, 2077]}, "ERC20Roles._removePaymentManager": {"102": [3388, 3415], "103": [3425, 3510], "104": [3520, 3563]}, "ERC20Roles.getPermissions": {"1": [895, 919]}, "ERC20Roles.isMinter": {"8": [1152, 1188]}}, "5": {"ERC20Burnable.burn": {"30": [542, 569]}, "ERC20Burnable.burnFrom": {"49": [1027, 1102], "50": [1136, 1194], "51": [1214, 1236]}}, "6": {}, "7": {"SafeERC20._callOptionalReturn": {"182": [3744, 3829]}, "SafeERC20.safeTransfer": {"175": [746, 832]}, "SafeERC20.safeTransferFrom": {"181": [983, 1079]}}, "8": {"Address._verifyCallResult": {"187": [7147, 7164], "188": [7591, 7611]}, "Address.functionCall": {"183": [3618, 3677]}, "Address.functionCallWithValue": {"184": [4737, 4818], "185": [4828, 4888], "186": [4982, 5041]}}, "9": {"Context._msgSender": {"12": [658, 675]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.2.0/Address", "OpenZeppelin/openzeppelin-contracts@4.2.0/Context", "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20", "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20Burnable", "ERC20Roles", "IDispenser", "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20", "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata", "IERC721Template", "IFactoryRouter", "IFixedRateExchange", "OpenZeppelin/openzeppelin-contracts@4.2.0/ReentrancyGuard", "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeERC20", "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeMath"], "deployedBytecode": "6080604052600436106102c65760003560e01c80635d1ca6311161017e578063a457c2d7116100d3578063d505accf1161008f578063e487c2e81161006c578063e487c2e8146109a3578063ec342ad0146109b8578063ef867ff4146109d4578063f887ea40146109f457005b8063d505accf14610935578063dd62ed3e14610955578063e086e5ec1461099b57005b8063a457c2d71461085c578063a9059cbb1461087c578063aa271e1a1461089c578063aa492ef9146108d5578063ab62f0e1146108f5578063b3998be01461091557005b80637ecebe001161013a5780638b96412b116101175780638b96412b146107e757806395d89b411461080757806396fb3eaf1461081c578063983b2d561461083c57005b80637ecebe001461078557806382c03da5146107b257806389208f0f146107c757005b80635d1ca631146106c4578063673a2a1f146106d857806370a08231146106ed57806379cc67901461072357806379d9d7f3146107435780637dda231e1461076357005b8063355274ea1161023457806340c10f19116101f05780634f189cb2116101cd5780634f189cb21461064f57806357a3a31b1461066457806357ad5ff6146106845780635bfe4da0146106a457005b806340c10f19146105ed57806342966c681461060d57806347ac7d551461062d57005b8063355274ea1461052e578063361fef49146105435780633644e51514610563578063392e53cd146105795780633950935114610591578063397b3743146105b157005b8063191c918a11610283578063191c918a1461045857806323b872dd1461047857806325b00243146104985780633092afd5146104b857806330adf81f146104d8578063313ce5671461050c57005b80627ffb78146102cf57806301e882081461030b57806306fdde031461035b578063095ea7b31461037d578063160a7925146103ad57806318160ddd1461043957005b366102cd57005b005b3480156102db57600080fd5b50600b5461010090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561031757600080fd5b50610344610326366004614e12565b60056020526000908152604090205460ff8082169161010090041682565b604080519215158352901515602083015201610302565b34801561036757600080fd5b50610370610a14565b6040516103029190614e5b565b34801561038957600080fd5b5061039d610398366004614e8e565b610aa6565b6040519015158152602001610302565b3480156103b957600080fd5b5061041a6103c8366004614e12565b6040805180820190915260008082526020820152506001600160a01b031660009081526005602090815260409182902082518084019093525460ff808216151584526101009091041615159082015290565b6040805182511515815260209283015115159281019290925201610302565b34801561044557600080fd5b506002545b604051908152602001610302565b34801561046457600080fd5b506102cd610473366004614ec8565b610abd565b34801561048457600080fd5b5061039d610493366004614f27565b610d1e565b3480156104a457600080fd5b506102cd6104b3366004614e12565b610dca565b3480156104c457600080fd5b506102cd6104d3366004614e12565b610ee9565b3480156104e457600080fd5b5061044a7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b34801561051857600080fd5b5060125b60405160ff9091168152602001610302565b34801561053a57600080fd5b50600a5461044a565b34801561054f57600080fd5b506102cd61055e366004614f81565b611005565b34801561056f57600080fd5b5061044a60105481565b34801561058557600080fd5b50600b5460ff1661039d565b34801561059d57600080fd5b5061039d6105ac366004614e8e565b611083565b3480156105bd57600080fd5b50600d54600e54600f54604080516001600160a01b03948516815293909216602084015290820152606001610302565b3480156105f957600080fd5b506102cd610608366004614e8e565b6110bf565b34801561061957600080fd5b506102cd610628366004614fc7565b611190565b34801561063957600080fd5b5061064261119a565b6040516103029190615024565b34801561065b57600080fd5b506102cd6111fb565b34801561067057600080fd5b506102cd61067f366004614e12565b6112d6565b34801561069057600080fd5b506102cd61069f366004614f27565b61149d565b3480156106b057600080fd5b506102ee6106bf36600461516f565b611656565b3480156106d057600080fd5b50600161051c565b3480156106e457600080fd5b50610642611ae1565b3480156106f957600080fd5b5061044a610708366004614e12565b6001600160a01b031660009081526020819052604090205490565b34801561072f57600080fd5b506102cd61073e366004614e8e565b611b41565b34801561074f57600080fd5b506102cd61075e3660046151f6565b611bc7565b34801561076f57600080fd5b50610778611ffe565b6040516103029190615269565b34801561079157600080fd5b5061044a6107a0366004614e12565b60116020526000908152604090205481565b3480156107be57600080fd5b506102cd612073565b3480156107d357600080fd5b506102cd6107e2366004615309565b6120d2565b3480156107f357600080fd5b5061044a6108023660046153e6565b6123bf565b34801561081357600080fd5b506103706126d8565b34801561082857600080fd5b5061039d610837366004614e12565b6126e7565b34801561084857600080fd5b506102cd610857366004614e12565b612765565b34801561086857600080fd5b5061039d610877366004614e8e565b612881565b34801561088857600080fd5b5061039d610897366004614e8e565b61291a565b3480156108a857600080fd5b5061039d6108b7366004614e12565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156108e157600080fd5b506102cd6108f0366004614e12565b612927565b34801561090157600080fd5b506102cd610910366004615451565b612a43565b34801561092157600080fd5b5061039d6109303660046154d6565b612bfe565b34801561094157600080fd5b506102cd6109503660046155d7565b612d31565b34801561096157600080fd5b5061044a610970366004615645565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102cd612f43565b3480156109af57600080fd5b506102ee612f83565b3480156109c457600080fd5b5061044a670de0b6b3a764000081565b3480156109e057600080fd5b506102ee6109ef366004614fc7565b61301c565b348015610a0057600080fd5b506012546102ee906001600160a01b031681565b606060088054610a239061567e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4f9061567e565b8015610a9c5780601f10610a7157610100808354040283529160200191610a9c565b820191906000526020600020905b815481529060010190602001808311610a7f57829003601f168201915b5050505050905090565b6000610ab3338484613046565b5060015b92915050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d91906156b3565b6020015180610bb45750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba99190615737565b6001600160a01b0316145b610bd95760405162461bcd60e51b8152600401610bd090615754565b60405180910390fd5b60026007541415610bfc5760405162461bcd60e51b8152600401610bd090615789565b60026007558115610c1057610c108561316a565b601580546001810182556000919091527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750180546001600160a01b0319166001600160a01b0387169081179091556040519081527fa31ffd41531537eb31bfd827a3f5372b5f62bf4dd8579e5354b280dc58490e709060200160405180910390a1601254604051636b14d00560e11b81526001600160a01b038781166004830152306024830152604482018790526064820186905233608483015283811660a48301529091169063d629a00a9060c401600060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b5050600160075550505050505050565b6000610d2b848484613241565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610db05760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610bd0565b610dbd8533858403613046565b60019150505b9392505050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3a91906156b3565b6020015180610ec15750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190615737565b6001600160a01b0316145b610edd5760405162461bcd60e51b8152600401610bd090615754565b610ee681613411565b50565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5991906156b3565b6020015180610fe05750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190615737565b6001600160a01b0316145b610ffc5760405162461bcd60e51b8152600401610bd090615754565b610ee681613483565b600260075414156110285760405162461bcd60e51b8152600401610bd090615789565b600260075560408051838152336020820152428183015243606082015290517f526e31449ea46e2aecf9b480c8d7dfa191348ef74ffdf75b445a6ab726daa6ff9181900360800190a161107a816134e3565b50506001600755565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610ab39185906110ba9086906157d6565b613046565b3360009081526005602052604090205460ff1661111e5760405162461bcd60e51b815260206004820152601960248201527f455243323054656d706c6174653a204e4f54204d494e544552000000000000006044820152606401610bd0565b600a546111348261112e60025490565b906138f5565b11156111825760405162461bcd60e51b815260206004820152601f60248201527f44617461746f6b656e54656d706c6174653a20636170206578636565646564006044820152606401610bd0565b61118c8282613901565b5050565b610ee633826139e0565b60606015805480602002602001604051908101604052809291908181526020018280548015610a9c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111d4575050505050905090565b600b546040516331a9108f60e11b8152600160048201526101009091046001600160a01b031690636352211e90602401602060405180830381865afa158015611248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126c9190615737565b6001600160a01b0316336001600160a01b0316146112cc5760405162461bcd60e51b815260206004820152601b60248201527f455243323054656d706c6174653a206e6f74204e46544f776e657200000000006044820152606401610bd0565b6112d4613b2e565b565b33600090815260056020526040902054610100900460ff16806113695750600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015611340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136491906156b3565b602001515b806113ec5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa1580156113bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e19190615737565b6001600160a01b0316145b61144c5760405162461bcd60e51b815260206004820152602b60248201527f455243323054656d706c6174653a204e4f54205041594d454e54204d414e414760448201526a22a91037b91027aba722a960a91b6064820152608401610bd0565b61145581613ffc565b604080514281524360208201526001600160a01b0383169133917f4d7694d695c57cc54947177c8e8a0e61aae664e9223492a798c32fadfc6419cc910160405180910390a350565b600d546001600160a01b0316331461150a5760405162461bcd60e51b815260206004820152602a60248201527f455243323054656d706c6174653a206e6f74207075626c6973684d61726b65746044820152694665654164647265737360b01b6064820152608401610bd0565b6001600160a01b0383166115715760405162461bcd60e51b815260206004820152602860248201527f496e76616c6964205f7075626c6973684d61726b657446656541646472657373604482015267206164647265737360c01b6064820152608401610bd0565b6001600160a01b0382166115d65760405162461bcd60e51b815260206004820152602660248201527f496e76616c6964205f7075626c6973684d61726b6574466565546f6b656e206160448201526564647265737360d01b6064820152608401610bd0565b600d80546001600160a01b038581166001600160a01b03199283168117909355600e8054918616919092168117909155600f839055604080513381526020810193909352820152606081018290527f02ab4b3fc023109c2d0da394bda239166c833f63c42b71b67ed4b836dca0ddfe9060800160405180910390a1505050565b600b5460405163160a792560e01b815233600482015260009161010090046001600160a01b03169063160a792590602401608060405180830381865afa1580156116a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c891906156b3565b602001518061174f5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015611720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117449190615737565b6001600160a01b0316145b61176b5760405162461bcd60e51b8152600401610bd090615754565b6002600754141561178e5760405162461bcd60e51b8152600401610bd090615789565b600260075561179c60025490565b156117f55760405162461bcd60e51b8152602060048201526024808201527f455243323054656d706c6174653a20746f6b656e7320616c7265616479206d696044820152631b9d195960e21b6064820152608401610bd0565b6118188260008151811061180b5761180b6157ee565b602002602001015161316a565b601260009054906101000a90046001600160a01b03166001600160a01b031663510f34656040518163ffffffff1660e01b8152600401602060405180830381865afa15801561186b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188f9190615804565b846003815181106118a2576118a26157ee565b602002602001015110156119385760405162461bcd60e51b815260206004820152605160248201527f455243323054656d706c6174653a2056657374696e6720706572696f6420746f60448201527f6f206c6f772e2053656520466163746f7279526f757465722e6d696e56657374606482015270696e67506572696f64496e426c6f636b7360781b608482015260a401610bd0565b60006040518060400160405280306001600160a01b03166001600160a01b0316815260200184600181518110611970576119706157ee565b60209081029190910101516001600160a01b0390811690915260125460405163ee3bc63560e01b8152929350169063ee3bc635906119b890849089908990899060040161584d565b6020604051808303816000875af11580156119d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fb9190615737565b6013805460018101825560009182527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180546001600160a01b0319166001600160a01b03841617905584519193507fd02da1bec30f7f750aa0a131745dfb9ce96767c45a192dc26409f5d690e0b9679184918691611a7c57611a7c6157ee565b602002602001015185600181518110611a9757611a976157ee565b6020026020010151604051611acc939291906001600160a01b0393841681529183166020830152909116604082015260600190565b60405180910390a15060016007559392505050565b60606013805480602002602001604051908101604052809291908181526020018280548015610a9c576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116111d4575050505050905090565b6000611b4d8333610970565b905081811015611bab5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610bd0565b611bb88333848403613046565b611bc283836139e0565b505050565b60026007541415611bea5760405162461bcd60e51b8152600401610bd090615789565b600260075533600090815260208190526040902054670de0b6b3a764000090811115611c645760405162461bcd60e51b8152602060048201526024808201527f4e6f7420656e6f7567682064617461746f6b656e7320746f207374617274204f604482015263393232b960e11b6064820152608401610bd0565b600d5460408051338152602081018490529081018690524260608201524360808201526001600160a01b03918216918716907fe1c4fa794edfa8f619b8257a077398950357b9c6398528f94480307352f9afcc9060a00160405180910390a36000600f54118015611cdf5750600e546001600160a01b031615155b8015611cf55750600d546001600160a01b031615155b15611d6a57600e54600d54600f54611d1d926001600160a01b0390811692339291169061401e565b600e54600d54600f546040519081526001600160a01b0392831692909116907f4049a448ac6f0284a98d2cb9199e73605944ea5bec901a037f88c84703de82b29060200160405180910390a35b60008260400135118015611d9757506000611d8b6040840160208501614e12565b6001600160a01b031614155b8015611db957506000611dad6020840184614e12565b6001600160a01b031614155b15611e5657611de9611dd16040840160208501614e12565b33611ddf6020860186614e12565b856040013561401e565b611df96040830160208401614e12565b6001600160a01b0316611e0f6020840184614e12565b6001600160a01b03167f6d11837f46cc09b011cf4aae09fcade046c020aac088090ae4f77ff67b7079728460400135604051611e4d91815260200190565b60405180910390a35b611e5f836134e3565b60125460408051637d28354d60e01b815290516000926001600160a01b031691637d28354d9160048083019260209291908290030181865afa158015611ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ecd9190615804565b9050611ee4611eda612f83565b610897848461416c565b611f305760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2073656e6420445420746f207075626c697368657200006044820152606401610bd0565b60125460408051631a81876d60e01b81529051611fa5926001600160a01b031691631a81876d9160048083019260209291908290030181865afa158015611f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9f9190615737565b8261291a565b611ff15760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f2073656e6420445420746f204f504300000000000000006044820152606401610bd0565b5050600160075550505050565b60606014805480602002602001604051908101604052809291908181526020016000905b8282101561206a576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101612022565b50505050905090565b600b5461010090046001600160a01b031633146112cc5760405162461bcd60e51b815260206004820152601f60248201527f455243323054656d706c6174653a204e4f542037323120436f6e7472616374006044820152606401610bd0565b336001600160a01b038216141561212b5760405162461bcd60e51b815260206004820152601f60248201527f50726f76696465722063616e6e6f742062652074686520636f6e73756d6572006044820152606401610bd0565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525090506000818c8c8c60405160200161217d939291906158b8565b604051602081830303815290604052805190602001206040516020016121a49291906158d2565b604051602081830303815290604052805190602001209050336001600160a01b0316612206828b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061417892505050565b6001600160a01b03161461225c5760405162461bcd60e51b815260206004820152601f60248201527f50726f7669646572207369676e617475726520636865636b206661696c6564006044820152606401610bd0565b60008288886040516020016122729291906158f4565b604051602081830303815290604052805190602001206040516020016122999291906158d2565b604051602081830303815290604052805190602001209050836001600160a01b03166122fb8288888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061417892505050565b6001600160a01b0316146123515760405162461bcd60e51b815260206004820152601f60248201527f436f6e73756d6572207369676e617475726520636865636b206661696c6564006044820152606401610bd0565b836001600160a01b0316336001600160a01b03167fc9a10280e9c735c63092fa5431e6acb3ed342e08b69a083e5e676994eb7070f98f8f8f8f8f8f8f8f8f42436040516123a89b9a9998979695949392919061592d565b60405180910390a350505050505050505050505050565b600b5460405163160a792560e01b815233600482015260009161010090046001600160a01b03169063160a792590602401608060405180830381865afa15801561240d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243191906156b3565b60200151806124b85750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015612489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ad9190615737565b6001600160a01b0316145b6124d45760405162461bcd60e51b8152600401610bd090615754565b600260075414156124f75760405162461bcd60e51b8152600401610bd090615789565b6002600781905550600082600481518110612514576125146157ee565b6020026020010151111561252b5761252b8461316a565b601254604051638244937560e01b81526001600160a01b039091169063824493759061255f9087908790879060040161599f565b6020604051808303816000875af115801561257e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a29190615804565b9050826000815181106125b7576125b76157ee565b60200260200101516001600160a01b0316836001815181106125db576125db6157ee565b60200260200101516001600160a01b03167fb3fac3ae95956dbac74e63ba8dac94081832395c8788e3049c900a7732f34805838760405161262f9291909182526001600160a01b0316602082015260400190565b60405180910390a3604080518082019091526001600160a01b03948516815260208101828152601480546001808201835560009290925292517fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec600290940293840180546001600160a01b0319169190981617909655517fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ed909101556007939093555090919050565b606060098054610a239061567e565b600b5460405163160a792560e01b81526001600160a01b0383811660048301526000926101009004169063160a792590602401608060405180830381865afa158015612737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275b91906156b3565b6020015192915050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa1580156127b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d591906156b3565b602001518061285c5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa15801561282d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128519190615737565b6001600160a01b0316145b6128785760405162461bcd60e51b8152600401610bd090615754565b610ee68161316a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156129035760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610bd0565b6129103385858403613046565b5060019392505050565b6000610ab3338484613241565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015612973573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061299791906156b3565b6020015180612a1e5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa1580156129ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a139190615737565b6001600160a01b0316145b612a3a5760405162461bcd60e51b8152600401610bd090615754565b610ee681614250565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015612a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab391906156b3565b6020015180612b3a5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015612b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2f9190615737565b6001600160a01b0316145b612b565760405162461bcd60e51b8152600401610bd090615754565b6040516bffffffffffffffffffffffff193060601b16602082015260009060340160408051808303601f19018152908290528051602090910120600b546301caf8fd60e31b835290925061010090046001600160a01b031690630e57c7e890612bc7908490879087906004016159df565b600060405180830381600087803b158015612be157600080fd5b505af1158015612bf5573d6000803e3d6000fd5b50505050505050565b600b5460009060ff1615612c6e5760405162461bcd60e51b815260206004820152603160248201527f455243323054656d706c6174653a20746f6b656e20696e7374616e636520616c6044820152701c9958591e481a5b9a5d1a585b1a5e9959607a1b6064820152608401610bd0565b612d22612c7b8b8d615a59565b8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c91829185019084908082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b918291850190849080828437600092019190915250612d1d92508991508a9050615ae0565b614331565b9b9a5050505050505050505050565b43841015612d745760405162461bcd60e51b815260206004820152601060248201526f115490cc8c11150e881156141254915160821b6044820152606401610bd0565b6010546001600160a01b038816600090815260116020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087612dc783615b5b565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001612e4092919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015612eab573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590612ee15750886001600160a01b0316816001600160a01b0316145b612f2d5760405162461bcd60e51b815260206004820152601a60248201527f455243323044543a20494e56414c49445f5349474e41545552450000000000006044820152606401610bd0565b612f38898989613046565b505050505050505050565b612f4b612f83565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015610ee6573d6000803e3d6000fd5b600c546000906001600160a01b031661300c57600b546040516331a9108f60e11b8152600160048201526101009091046001600160a01b031690636352211e90602401602060405180830381865afa158015612fe3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130079190615737565b905090565b50600c546001600160a01b031690565b6006818154811061302c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0383166130a85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610bd0565b6001600160a01b0382166131095760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610bd0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03811615610ee6576001600160a01b0381166000908152600560205260409020805460ff16156131e35760405162461bcd60e51b815260206004820152601d60248201527f4552433230526f6c65733a2020414c52454144592041204d494e5445520000006044820152606401610bd0565b805460ff191660011781556131f782614789565b6040805142815243602082015233916001600160a01b038516917f4f7e100eb1ee13e903798bd0d6aa854152e07eb05544f392b9409c12935c809591015b60405180910390a35050565b6001600160a01b0383166132a55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610bd0565b6001600160a01b0382166133075760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610bd0565b6001600160a01b0383166000908152602081905260409020548181101561337f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610bd0565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906133b69084906157d6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161340291815260200190565b60405180910390a35b50505050565b6001600160a01b03811660008181526005602052604090819020805461ff00191681559051909133917faee911eec8b2df8f3ae0464841541b1e5f339519bd5cf51889fe8b07fecff658906134729042904390918252602082015260400190565b60405180910390a361118c82614840565b6001600160a01b03811660008181526005602052604090819020805460ff191681559051909133917fefa2735987005aaa89c050c0ff8cc9ae7d9079d19382081c429130f98c52d480906134729042904390918252602082015260400190565b60408051808201909152601c81527f19457468657265756d205369676e6564204d6573736167653a0a333200000000602082015260008161352760e0850185615b76565b6135346020870187614e12565b6135446040880160208901614e12565b87604001358860c0013560405160200161356396959493929190615bbc565b6040516020818303038152906040528051906020012060405160200161358a9291906158d2565b60408051601f198184030181529190528051602090910120905060006001826135b96080870160608801615bfa565b6040805160008152602081018083529390935260ff90911690820152608080870135606083015260a08088013591830191909152016020604051602081039080840390855afa158015613610573d6000803e3d6000fd5b5050604051601f190151915061362b90506020850185614e12565b6001600160a01b0316816001600160a01b0316146136825760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642070726f76696465722066656560601b6044820152606401610bd0565b6136926040850160208601614e12565b6001600160a01b03166136a86020860186614e12565b6001600160a01b03167ff8ed11cdaaf10eca2b6c941fb802cb8682afe86cac1eb93f70d0780fa062c54460408701356136e460e0890189615b76565b6136f460808b0160608c01615bfa565b8a608001358b60a001358c60c001356040516137169796959493929190615c15565b60405180910390a36000846040013511801561374b5750600061373f6040860160208701614e12565b6001600160a01b031614155b801561376d575060006137616020860186614e12565b6001600160a01b031614155b1561340b5760125460408051636c45e88160e01b815290516000926001600160a01b031691636c45e8819160048083019260209291908290030181865afa1580156137bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137e09190615804565b90506000811561380d5761380a670de0b6b3a764000061380460408901358561498e565b9061499a565b90505b600061381d60408801358361416c565b905061383e6138326040890160208a01614e12565b33308a6040013561401e565b61386f61384e6020890189614e12565b8261385f60408b0160208c01614e12565b6001600160a01b031691906149a6565b8115612bf55760125460408051631a81876d60e01b81529051612bf5926001600160a01b031691631a81876d9160048083019260209291908290030181865afa1580156138c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138e49190615737565b8361385f60408b0160208c01614e12565b6000610dc382846157d6565b6001600160a01b0382166139575760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610bd0565b806002600082825461396991906157d6565b90915550506001600160a01b038216600090815260208190526040812080548392906139969084906157d6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216613a405760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610bd0565b6001600160a01b03821660009081526020819052604090205481811015613ab45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610bd0565b6001600160a01b0383166000908152602081905260408120838303905560028054849290613ae3908490615c58565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b601554601454600091613b40916157d6565b9050600080826001600160401b03811115613b5d57613b5d615037565b604051908082528060200260200182016040528015613b86578160200160208202803683370190505b50905060005b601454811015613e6c57600060148281548110613bab57613bab6157ee565b60009182526020822060029091020154601480546001600160a01b039092169350829182918591634c87087d919088908110613be957613be96157ee565b9060005260206000209060020201600101546040518263ffffffff1660e01b8152600401613c1991815260200190565b61018060405180830381865afa158015613c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c5b9190615c6f565b9b509b509b505050505050505050506000821115613d0157836001600160a01b031663f32f947660148781548110613c9557613c956157ee565b906000526020600020906002020160010154846040518363ffffffff1660e01b8152600401613cce929190918252602082015260400190565b600060405180830381600087803b158015613ce857600080fd5b505af1158015613cfc573d6000803e3d6000fd5b505050505b8215613d9557836001600160a01b031663c612e48a60148781548110613d2957613d296157ee565b906000526020600020906002020160010154856040518363ffffffff1660e01b8152600401613d62929190918252602082015260400190565b600060405180830381600087803b158015613d7c57600080fd5b505af1158015613d90573d6000803e3d6000fd5b505050505b613dd860148681548110613dab57613dab6157ee565b600091825260208083206002909202909101546001600160a01b0316825260059052604090205460ff1690565b8015613de657506001811515145b15613e555760148581548110613dfe57613dfe6157ee565b600091825260209091206002909102015486516001600160a01b0390911690879089908110613e2f57613e2f6157ee565b6001600160a01b039092166020928302919091019091015286613e5181615b5b565b9750505b505050508080613e6490615b5b565b915050613b8c565b5060005b601554811015613fb15760158181548110613e8d57613e8d6157ee565b60009182526020909120015460405163f9bfaa7d60e01b81523060048201526001600160a01b039091169063f9bfaa7d90602401600060405180830381600087803b158015613edb57600080fd5b505af1158015613eef573d6000803e3d6000fd5b50505050613f3160158281548110613f0957613f096157ee565b60009182526020808320909101546001600160a01b0316825260059052604090205460ff1690565b15613f9f5760158181548110613f4957613f496157ee565b9060005260206000200160009054906101000a90046001600160a01b0316828481518110613f7957613f796157ee565b6001600160a01b039092166020928302919091019091015282613f9b81615b5b565b9350505b80613fa981615b5b565b915050613e70565b613fb9614a09565b50600c80546001600160a01b031916905560005b8281101561340b57613fea82828151811061180b5761180b6157ee565b80613ff481615b5b565b915050613fcd565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908616906370a0823190602401602060405180830381865afa158015614068573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061408c9190615804565b90506140a36001600160a01b038616858585614ab8565b6140ad81836138f5565b6040516370a0823160e01b81526001600160a01b0385811660048301528716906370a0823190602401602060405180830381865afa1580156140f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141179190615804565b10156141655760405162461bcd60e51b815260206004820152601a60248201527f5472616e7366657220616d6f756e7420697320746f6f206c6f770000000000006044820152606401610bd0565b5050505050565b6000610dc38284615c58565b60008060008084516041146141935760009350505050610ab7565b50505060208201516040830151604184015160ff16601b8110156141bf576141bc601b82615d2c565b90505b8060ff16601b141580156141d757508060ff16601c14155b156141e85760009350505050610ab7565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561423b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6001600160a01b03811615610ee6576001600160a01b03811660009081526005602052604090208054610100900460ff16156142d95760405162461bcd60e51b815260206004820152602260248201527f4552433230526f6c65733a2020414c5245414459204120464545204d414e414760448201526122a960f11b6064820152608401610bd0565b805461ff0019166101001781556142ef82614789565b6040805142815243602082015233916001600160a01b038516917fb17da2e9910b4ba5754e8872385ba315a238bafb5ae221fc85093c33432c40a79101613235565b60008084600081518110614347576143476157ee565b6020026020010151905084600181518110614364576143646157ee565b6020908102919091010151601280546001600160a01b0319166001600160a01b0392831617905581166143ee5760405162461bcd60e51b815260206004820152602c60248201527f455243323054656d706c6174653a20496e76616c6964206d696e7465722c202060448201526b7a65726f206164647265737360a01b6064820152608401610bd0565b6012546001600160a01b031661445a5760405162461bcd60e51b815260206004820152602b60248201527f455243323054656d706c6174653a20496e76616c696420726f757465722c207a60448201526a65726f206164647265737360a81b6064820152608401610bd0565b600019600a5586518790600090614473576144736157ee565b602002602001015160089080519060200190614490929190614d3a565b50866001815181106144a4576144a46157ee565b6020026020010151600990805190602001906144c1929190614d3a565b50600b805460ff196001600160a01b03841661010002166001600160a81b0319909116176001179055855161450190879060009061180b5761180b6157ee565b60006001600160a01b03168660018151811061451f5761451f6157ee565b60200260200101516001600160a01b0316146145c9576145588660018151811061454b5761454b6157ee565b6020026020010151613ffc565b8560018151811061456b5761456b6157ee565b60200260200101516001600160a01b0316336001600160a01b03167f4d7694d695c57cc54947177c8e8a0e61aae664e9223492a798c32fadfc6419cc42436040516145c0929190918252602082015260400190565b60405180910390a35b856002815181106145dc576145dc6157ee565b6020026020010151600d60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508560038151811061461d5761461d6157ee565b6020026020010151600e60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508360018151811061465e5761465e6157ee565b602090810291909101810151600f819055600d54600e54604080513381526001600160a01b039384169581019590955291169083015260608201527f02ab4b3fc023109c2d0da394bda239166c833f63c42b71b67ed4b836dca0ddfe9060800160405180910390a160405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f906146f990600890615d51565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051808303601f1901815291905280516020909101206010555050600b5460ff169695505050505050565b60005b6006548110156147e557816001600160a01b0316600682815481106147b3576147b36157ee565b6000918252602090912001546001600160a01b031614156147d3576147e5565b806147dd81615b5b565b91505061478c565b60065481141561118c57600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0384166001600160a01b03199091161790555050565b6001600160a01b0381166000908152600560205260409020805460ff1615801561487157508054610100900460ff16155b1561118c5760005b6006548110156148d257826001600160a01b0316600682815481106148a0576148a06157ee565b6000918252602090912001546001600160a01b031614156148c0576148d2565b806148ca81615b5b565b915050614879565b600654811015611bc257600680546148ec90600190615c58565b815481106148fc576148fc6157ee565b600091825260209091200154600680546001600160a01b039092169183908110614928576149286157ee565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600680548061496757614967615ded565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b6000610dc38284615e03565b6000610dc38284615e22565b6040516001600160a01b038316602482015260448101829052611bc290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614af0565b60005b600654811015614a6f5760006005600060068481548110614a2f57614a2f6157ee565b60009182526020808320909101546001600160a01b031683528201929092526040019020805461ffff191690555080614a6781615b5b565b915050614a0c565b50614a7c60066000614dbe565b6040805142815243602082015233917f712bc71db81927a76b8bf1ea346247bb0ad58f18e4e5c1bd4aa0ec6573e02a2b910160405180910390a2565b6040516001600160a01b038085166024830152831660448201526064810182905261340b9085906323b872dd60e01b906084016149d2565b6000614b45826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614bc29092919063ffffffff16565b805190915015611bc25780806020019051810190614b639190615e44565b611bc25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bd0565b6060614bd18484600085614bd9565b949350505050565b606082471015614c3a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610bd0565b843b614c885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bd0565b600080866001600160a01b03168587604051614ca49190615e61565b60006040518083038185875af1925050503d8060008114614ce1576040519150601f19603f3d011682016040523d82523d6000602084013e614ce6565b606091505b5091509150614cf6828286614d01565b979650505050505050565b60608315614d10575081610dc3565b825115614d205782518084602001fd5b8160405162461bcd60e51b8152600401610bd09190614e5b565b828054614d469061567e565b90600052602060002090601f016020900481019282614d685760008555614dae565b82601f10614d8157805160ff1916838001178555614dae565b82800160010185558215614dae579182015b82811115614dae578251825591602001919060010190614d93565b50614dba929150614dd8565b5090565b5080546000825590600052602060002090810190610ee691905b5b80821115614dba5760008155600101614dd9565b6001600160a01b0381168114610ee657600080fd5b8035614e0d81614ded565b919050565b600060208284031215614e2457600080fd5b8135610dc381614ded565b60005b83811015614e4a578181015183820152602001614e32565b8381111561340b5750506000910152565b6020815260008251806020840152614e7a816040850160208701614e2f565b601f01601f19169190910160400192915050565b60008060408385031215614ea157600080fd5b8235614eac81614ded565b946020939093013593505050565b8015158114610ee657600080fd5b600080600080600060a08688031215614ee057600080fd5b8535614eeb81614ded565b945060208601359350604086013592506060860135614f0981614eba565b91506080860135614f1981614ded565b809150509295509295909350565b600080600060608486031215614f3c57600080fd5b8335614f4781614ded565b92506020840135614f5781614ded565b929592945050506040919091013590565b60006101008284031215614f7b57600080fd5b50919050565b60008060408385031215614f9457600080fd5b8235915060208301356001600160401b03811115614fb157600080fd5b614fbd85828601614f68565b9150509250929050565b600060208284031215614fd957600080fd5b5035919050565b600081518084526020808501945080840160005b838110156150195781516001600160a01b031687529582019590820190600101614ff4565b509495945050505050565b602081526000610dc36020830184614fe0565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561507557615075615037565b604052919050565b60006001600160401b0382111561509657615096615037565b5060051b60200190565b600082601f8301126150b157600080fd5b813560206150c66150c18361507d565b61504d565b82815260059290921b840181019181810190868411156150e557600080fd5b8286015b8481101561510057803583529183019183016150e9565b509695505050505050565b600082601f83011261511c57600080fd5b8135602061512c6150c18361507d565b82815260059290921b8401810191818101908684111561514b57600080fd5b8286015b8481101561510057803561516281614ded565b835291830191830161514f565b60008060006060848603121561518457600080fd5b83356001600160401b038082111561519b57600080fd5b6151a7878388016150a0565b945060208601359150808211156151bd57600080fd5b6151c9878388016150a0565b935060408601359150808211156151df57600080fd5b506151ec8682870161510b565b9150509250925092565b60008060008084860360c081121561520d57600080fd5b853561521881614ded565b94506020860135935060408601356001600160401b0381111561523a57600080fd5b61524688828901614f68565b9350506060605f198201121561525b57600080fd5b509295919450926060019150565b602080825282518282018190526000919060409081850190868401855b828110156152b457815180516001600160a01b03168552860151868501529284019290850190600101615286565b5091979650505050505050565b60008083601f8401126152d357600080fd5b5081356001600160401b038111156152ea57600080fd5b60208301915083602082850101111561530257600080fd5b9250929050565b60008060008060008060008060008060c08b8d03121561532857600080fd5b8a35995060208b01356001600160401b038082111561534657600080fd5b6153528e838f016152c1565b909b50995060408d013591508082111561536b57600080fd5b6153778e838f016152c1565b909950975060608d013591508082111561539057600080fd5b61539c8e838f016152c1565b909750955060808d01359150808211156153b557600080fd5b506153c28d828e016152c1565b90945092506153d5905060a08c01614e02565b90509295989b9194979a5092959850565b6000806000606084860312156153fb57600080fd5b833561540681614ded565b925060208401356001600160401b038082111561542257600080fd5b61542e8783880161510b565b9350604086013591508082111561544457600080fd5b506151ec868287016150a0565b6000806020838503121561546457600080fd5b82356001600160401b0381111561547a57600080fd5b615486858286016152c1565b90969095509350505050565b60008083601f8401126154a457600080fd5b5081356001600160401b038111156154bb57600080fd5b6020830191508360208260051b850101111561530257600080fd5b60008060008060008060008060008060a08b8d0312156154f557600080fd5b8a356001600160401b038082111561550c57600080fd5b6155188e838f01615492565b909c509a5060208d013591508082111561553157600080fd5b61553d8e838f01615492565b909a50985060408d013591508082111561555657600080fd5b6155628e838f01615492565b909850965060608d013591508082111561557b57600080fd5b6155878e838f01615492565b909650945060808d01359150808211156155a057600080fd5b506155ad8d828e01615492565b915080935050809150509295989b9194979a5092959850565b803560ff81168114614e0d57600080fd5b600080600080600080600060e0888a0312156155f257600080fd5b87356155fd81614ded565b9650602088013561560d81614ded565b95506040880135945060608801359350615629608089016155c6565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561565857600080fd5b823561566381614ded565b9150602083013561567381614ded565b809150509250929050565b600181811c9082168061569257607f821691505b60208210811415614f7b57634e487b7160e01b600052602260045260246000fd5b6000608082840312156156c557600080fd5b604051608081018181106001600160401b03821117156156e7576156e7615037565b60405282516156f581614eba565b8152602083015161570581614eba565b6020820152604083015161571881614eba565b6040820152606083015161572b81614eba565b60608201529392505050565b60006020828403121561574957600080fd5b8151610dc381614ded565b6020808252818101527f455243323054656d706c6174653a204e4f54204445504c4f59455220524f4c45604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156157e9576157e96157c0565b500190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561581657600080fd5b5051919050565b600081518084526020808501945080840160005b8381101561501957815187529582019590820190600101615831565b60008186825b600281101561587b5781516001600160a01b0316835260209283019290910190600101615853565b50505060a0604083015261589260a083018661581d565b82810360608401526158a4818661581d565b90508281036080840152614cf68185614fe0565b838152818360208301376000910160200190815292915050565b600083516158e4818460208801614e2f565b9190910191825250602001919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8b815260e06020820152600061594760e083018c8e615904565b828103604084015261595a818b8d615904565b9050828103606084015261596f81898b615904565b90508281036080840152615984818789615904565b60a0840195909552505060c001529998505050505050505050565b6001600160a01b03841681526060602082018190526000906159c390830185614fe0565b82810360408401526159d5818561581d565b9695505050505050565b8381526040602082015260006159f9604083018486615904565b95945050505050565b60006001600160401b03831115615a1b57615a1b615037565b615a2e601f8401601f191660200161504d565b9050828152838383011115615a4257600080fd5b828260208301376000602084830101529392505050565b6000615a676150c18461507d565b80848252602080830192508560051b850136811115615a8557600080fd5b855b81811015615ad45780356001600160401b03811115615aa65760008081fd5b870136601f820112615ab85760008081fd5b615ac6368235868401615a02565b865250938201938201615a87565b50919695505050505050565b6000615aee6150c18461507d565b80848252602080830192508560051b850136811115615b0c57600080fd5b855b81811015615ad45780356001600160401b03811115615b2d5760008081fd5b870136601f820112615b3f5760008081fd5b615b4d368235868401615a02565b865250938201938201615b0e565b6000600019821415615b6f57615b6f6157c0565b5060010190565b6000808335601e19843603018112615b8d57600080fd5b8301803591506001600160401b03821115615ba757600080fd5b60200191503681900382131561530257600080fd5b858782376bffffffffffffffffffffffff19606095861b8116969091019586529290931b909116601484015260288301526048820152606801919050565b600060208284031215615c0c57600080fd5b610dc3826155c6565b87815260c060208201526000615c2f60c08301888a615904565b905060ff861660408301528460608301528360808301528260a083015298975050505050505050565b600082821015615c6a57615c6a6157c0565b500390565b6000806000806000806000806000806000806101808d8f031215615c9257600080fd5b8c51615c9d81614ded565b60208e0151909c50615cae81614ded565b60408e015160608f0151919c509a50615cc681614ded565b8099505060808d0151975060a08d0151965060c08d0151615ce681614eba565b8096505060e08d015194506101008d015193506101208d015192506101408d015191506101608d0151615d1881614eba565b809150509295989b509295989b509295989b565b600060ff821660ff84168060ff03821115615d4957615d496157c0565b019392505050565b600080835481600182811c915080831680615d6d57607f831692505b6020808410821415615d8d57634e487b7160e01b86526022600452602486fd5b818015615da15760018114615db257615ddf565b60ff19861689528489019650615ddf565b60008a81526020902060005b86811015615dd75781548b820152908501908301615dbe565b505084890196505b509498975050505050505050565b634e487b7160e01b600052603160045260246000fd5b6000816000190483118215151615615e1d57615e1d6157c0565b500290565b600082615e3f57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215615e5657600080fd5b8151610dc381614eba565b60008251615e73818460208701614e2f565b919091019291505056fea26469706673582212209697a906b59504c4a6db4f342ff16b072ab394c370e0c31fd5da8055dbc9825e64736f6c634300080c0033", "deployedSourceMap": "1178:37379:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30878:96;;;;;;;;;;-1:-1:-1;30953:14:42;;;;;-1:-1:-1;;;;;30953:14:42;30878:96;;;-1:-1:-1;;;;;178:32:75;;;160:51;;148:2;133:18;30878:96:42;;;;;;;;222:49:46;;;;;;;;;;-1:-1:-1;222:49:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;936:14:75;;929:22;911:41;;995:14;;988:22;983:2;968:18;;961:50;884:18;222:49:46;749:268:75;30456:90:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4171:166:3:-;;;;;;;;;;-1:-1:-1;4171:166:3;;;;;:::i;:::-;;:::i;:::-;;;2158:14:75;;2151:22;2133:41;;2121:2;2106:18;4171:166:3;1993:187:75;807:119:46;;;;;;;;;;-1:-1:-1;807:119:46;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;902:17:46;;;;;:11;:17;;;;;;;;;895:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;807:119;;;;;2421:13:75;;2414:21;2407:29;2389:48;;2507:4;2495:17;;;2489:24;2482:32;2475:40;2453:20;;;2446:70;;;;2362:18;807:119:46;2185:337:75;3162:106:3;;;;;;;;;;-1:-1:-1;3249:12:3;;3162:106;;;2673:25:75;;;2661:2;2646:18;3162:106:3;2527:177:75;14910:612:42;;;;;;;;;;-1:-1:-1;14910:612:42;;;;;:::i;:::-;;:::i;4804:478:3:-;;;;;;;;;;-1:-1:-1;4804:478:3;;;;;:::i;:::-;;:::i;23623:157:42:-;;;;;;;;;;-1:-1:-1;23623:157:42;;;;;:::i;:::-;;:::i;22868:105::-;;;;;;;;;;-1:-1:-1;22868:105:42;;;;;:::i;:::-;;:::i;1941:116::-;;;;;;;;;;-1:-1:-1;1941:116:42;1991:66;1941:116;;31141:90;;;;;;;;;;-1:-1:-1;1478:2:42;31141:90;;;4313:4:75;4301:17;;;4283:36;;4271:2;4256:18;31141:90:42;4141:184:75;31335:75:42;;;;;;;;;;-1:-1:-1;31399:4:42;;31335:75;;22084:304;;;;;;;;;;-1:-1:-1;22084:304:42;;;;;:::i;:::-;;:::i;1800:31::-;;;;;;;;;;;;;;;;31570:89;;;;;;;;;;-1:-1:-1;31641:11:42;;;;31570:89;;5677:212:3;;;;;;;;;;-1:-1:-1;5677:212:3;;;;;:::i;:::-;;:::i;28568:300:42:-;;;;;;;;;;-1:-1:-1;28757:23:42;;28794:21;;28829:22;;28568:300;;;-1:-1:-1;;;;;28757:23:42;;;5173:34:75;;28794:21:42;;;;5238:2:75;5223:18;;5216:43;5275:18;;;5268:34;5123:2;5108:18;28568:300:42;4933:375:75;15839:291:42;;;;;;;;;;-1:-1:-1;15839:291:42;;;;;:::i;:::-;;:::i;487:89:5:-;;;;;;;;;;-1:-1:-1;487:89:5;;;;;:::i;:::-;;:::i;35812:98:42:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;24464:103::-;;;;;;;;;;;;;:::i;27466:689::-;;;;;;;;;;-1:-1:-1;27466:689:42;;;;;:::i;:::-;;:::i;29244:834::-;;;;;;;;;;-1:-1:-1;29244:834:42;;;;;:::i;:::-;;:::i;12622:873::-;;;;;;;;;;-1:-1:-1;12622:873:42;;;;;:::i;:::-;;:::i;30277:70::-;;;;;;;;;;-1:-1:-1;30339:1:42;30277:70;;35366:96;;;;;;;;;;;;;:::i;3326:125:3:-;;;;;;;;;;-1:-1:-1;3326:125:3;;;;;:::i;:::-;-1:-1:-1;;;;;3426:18:3;3400:7;3426:18;;;;;;;;;;;;3326:125;882:361:5;;;;;;;;;;-1:-1:-1;882:361:5;;;;;:::i;:::-;;:::i;19128:2585:42:-;;;;;;;;;;-1:-1:-1;19128:2585:42;;;;;:::i;:::-;;:::i;35587:108::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2064:41::-;;;;;;;;;;-1:-1:-1;2064:41:42;;;;;:::i;:::-;;;;;;;;;;;;;;24946:202;;;;;;;;;;;;;:::i;36673:1349::-;;;;;;;;;;-1:-1:-1;36673:1349:42;;;;;:::i;:::-;;:::i;13857:638::-;;;;;;;;;;-1:-1:-1;13857:638:42;;;;;:::i;:::-;;:::i;30661:94::-;;;;;;;;;;;;;:::i;35105:153::-;;;;;;;;;;-1:-1:-1;35105:153:42;;;;;:::i;:::-;;:::i;22574:99::-;;;;;;;;;;-1:-1:-1;22574:99:42;;;;;:::i;:::-;;:::i;6376:405:3:-;;;;;;;;;;-1:-1:-1;6376:405:3;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;;;;;-1:-1:-1;3654:172:3;;;;;:::i;:::-;;:::i;1080:115:46:-;;;;;;;;;;-1:-1:-1;1080:115:46;;;;;:::i;:::-;-1:-1:-1;;;;;1160:20:46;1136:4;1160:20;;;:11;:20;;;;;:27;;;;1080:115;23244:151:42;;;;;;;;;;-1:-1:-1;23244:151:42;;;;;:::i;:::-;;:::i;24042:207::-;;;;;;;;;;-1:-1:-1;24042:207:42;;;;;:::i;:::-;;:::i;7509:456::-;;;;;;;;;;-1:-1:-1;7509:456:42;;;;;:::i;:::-;;:::i;32108:961::-;;;;;;;;;;-1:-1:-1;32108:961:42;;;;;:::i;:::-;;:::i;3884:149:3:-;;;;;;;;;;-1:-1:-1;3884:149:3;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:3;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149;34882:119:42;;;:::i;34163:241::-;;;;;;;;;;;;;:::i;1730:35::-;;;;;;;;;;;;1761:4;1730:35;;278:26:46;;;;;;;;;;-1:-1:-1;278:26:46;;;;;:::i;:::-;;:::i;2112:21:42:-;;;;;;;;;;-1:-1:-1;2112:21:42;;;;-1:-1:-1;;;;;2112:21:42;;;30456:90;30502:13;30534:5;30527:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30456:90;:::o;4171:166:3:-;4254:4;4270:39;665:10:9;4293:7:3;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:3;4171:166;;;;;:::o;14910:612:42:-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;;;;;;;;;1680:1:2::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:2::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;15195:36:42;::::2;;;15209:22;15220:10;15209;:22::i;:::-;15241:10;:27:::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;15241:27:42;;;;;::::2;::::0;;-1:-1:-1;;;;;;15241:27:42::2;-1:-1:-1::0;;;;;15241:27:42;::::2;::::0;;::::2;::::0;;;15283:24:::2;::::0;160:51:75;;;15283:24:42::2;::::0;148:2:75;133:18;15283:24:42::2;;;;;;;15332:6;::::0;15317:198:::2;::::0;-1:-1:-1;;;15317:198:42;;-1:-1:-1;;;;;19826:15:75;;;15317:198:42::2;::::0;::::2;19808:34:75::0;15401:4:42::2;19858:18:75::0;;;19851:43;19910:18;;;19903:34;;;19953:18;;;19946:34;;;15467:10:42::2;19996:19:75::0;;;19989:44;20070:15;;;20049:19;;;20042:44;15332:6:42;;::::2;::::0;15317:38:::2;::::0;19742:19:75;;15317:198:42::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1637:1:2::1;2562:7;:22:::0;-1:-1:-1;;;;;;;14910:612:42:o;4804:478:3:-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:3;;5003:24;5030:19;;;:11;:19;;;;;;;;665:10:9;5030:33:3;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:3;;20299:2:75;5073:79:3;;;20281:21:75;20338:2;20318:18;;;20311:30;20377:34;20357:18;;;20350:62;-1:-1:-1;;;20428:18:75;;;20421:38;20476:19;;5073:79:3;20097:404:75;5073:79:3;5186:57;5195:6;665:10:9;5236:6:3;5217:16;:25;5186:8;:57::i;:::-;5271:4;5264:11;;;4804:478;;;;;;:::o;23623:157:42:-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;23735:38:::1;23757:15;23735:21;:38::i;:::-;23623:157:::0;:::o;22868:105::-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;22944:22:::1;22958:7;22944:13;:22::i;22084:304::-:0;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;;;;;;:::i;:::-;1680:1;2389:7;:18;22217:123:42::1;::::0;;20737:25:75;;;22265:10:42::1;20793:2:75::0;20778:18;;20771:60;22289:15:42::1;20847:18:75::0;;;20840:34;22318:12:42::1;20905:2:75::0;20890:18;;20883:34;22217:123:42;;::::1;::::0;;;;20724:3:75;22217:123:42;;::::1;22350:31;22368:12;22350:17;:31::i;:::-;-1:-1:-1::0;;1637:1:2;2562:7;:22;22084:304:42:o;5677:212:3:-;665:10:9;5765:4:3;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:3;;;;;;;;;;5765:4;;5781:80;;5804:7;;5813:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;15839:291:42:-;15924:10;15912:23;;;;:11;:23;;;;;:30;;;15904:68;;;;-1:-1:-1;;;15904:68:42;;21395:2:75;15904:68:42;;;21377:21:75;21434:2;21414:18;;;21407:30;21473:27;21453:18;;;21446:55;21518:18;;15904:68:42;21193:349:75;15904:68:42;16031:4;;16003:24;16021:5;16003:13;3249:12:3;;;3162:106;16003:13:42;:17;;:24::i;:::-;:32;;15982:110;;;;-1:-1:-1;;;15982:110:42;;21749:2:75;15982:110:42;;;21731:21:75;21788:2;21768:18;;;21761:30;21827:33;21807:18;;;21800:61;21878:18;;15982:110:42;21547:355:75;15982:110:42;16102:21;16108:7;16117:5;16102;:21::i;:::-;15839:291;;:::o;487:89:5:-;542:27;665:10:9;562:6:5;542:5;:27::i;35812:98:42:-;35857:16;35892:10;35885:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;35885:18:42;;;;;;;;;;;;;;;;;;;;;;35812:98;:::o;24464:103::-;5677:14;;5661:42;;-1:-1:-1;;;5661:42:42;;5677:14;5661:42;;;2673:25:75;5677:14:42;;;;-1:-1:-1;;;;;5677:14:42;;5661:39;;2646:18:75;;5661:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5647:56:42;:10;-1:-1:-1;;;;;5647:56:42;;5626:130;;;;-1:-1:-1;;;5626:130:42;;22109:2:75;5626:130:42;;;22091:21:75;22148:2;22128:18;;;22121:30;22187:29;22167:18;;;22160:57;22234:18;;5626:130:42;21907:351:75;5626:130:42;24524:27:::1;:25;:27::i;:::-;24464:103::o:0;27466:689::-;27680:10;27668:23;;;;:11;:23;;;;;:38;;;;;;;:128;;-1:-1:-1;27742:14:42;;27726:58;;-1:-1:-1;;;27726:58:42;;27773:10;27726:58;;;160:51:75;27742:14:42;;;;-1:-1:-1;;;;;27742:14:42;;27726:46;;133:18:75;;27726:58:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;;27668:128;:202;;;-1:-1:-1;27832:14:42;;27816:42;;-1:-1:-1;;;27816:42:42;;27832:14;27816:42;;;2673:25:75;27860:10:42;;27832:14;;;-1:-1:-1;;;;;27832:14:42;;27816:39;;2646:18:75;;27816:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27816:54:42;;27668:202;27647:292;;;;-1:-1:-1;;;27647:292:42;;22465:2:75;27647:292:42;;;22447:21:75;22504:2;22484:18;;;22477:30;22543:34;22523:18;;;22516:62;-1:-1:-1;;;22594:18:75;;;22587:41;22645:19;;27647:292:42;22263:407:75;27647:292:42;27949:42;27970:20;27949;:42::i;:::-;28006:142;;;28097:15;22849:25:75;;28126:12:42;22905:2:75;22890:18;;22883:34;-1:-1:-1;;;;;28006:142:42;;;28039:10;;28006:142;;22822:18:75;28006:142:42;;;;;;;27466:689;:::o;29244:834::-;5867:23;;-1:-1:-1;;;;;5867:23:42;5853:10;:37;5832:126;;;;-1:-1:-1;;;5832:126:42;;23130:2:75;5832:126:42;;;23112:21:75;23169:2;23149:18;;;23142:30;23208:34;23188:18;;;23181:62;-1:-1:-1;;;23259:18:75;;;23252:40;23309:19;;5832:126:42;22928:406:75;5832:126:42;-1:-1:-1;;;;;29476:38:42;::::1;29455:125;;;::::0;-1:-1:-1;;;29455:125:42;;23541:2:75;29455:125:42::1;::::0;::::1;23523:21:75::0;23580:2;23560:18;;;23553:30;23619:34;23599:18;;;23592:62;-1:-1:-1;;;23670:18:75;;;23663:38;23718:19;;29455:125:42::1;23339:404:75::0;29455:125:42::1;-1:-1:-1::0;;;;;29614:36:42;::::1;29593:121;;;::::0;-1:-1:-1;;;29593:121:42;;23950:2:75;29593:121:42::1;::::0;::::1;23932:21:75::0;23989:2;23969:18;;;23962:30;24028:34;24008:18;;;24001:62;-1:-1:-1;;;24079:18:75;;;24072:36;24125:19;;29593:121:42::1;23748:402:75::0;29593:121:42::1;29724:23;:50:::0;;-1:-1:-1;;;;;29724:50:42;;::::1;-1:-1:-1::0;;;;;;29724:50:42;;::::1;::::0;::::1;::::0;;;29784:21:::1;:46:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;29840:22:::1;:48:::0;;;29903:168:::1;::::0;;29940:10:::1;24424:34:75::0;;24489:2;24474:18;;24467:43;;;;24526:18;;24519:43;24593:2;24578:18;;24571:34;;;29903:168:42::1;::::0;24373:3:75;24358:19;29903:168:42::1;;;;;;;29244:834:::0;;;:::o;12622:873::-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;12803:12:42;;6058:14;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;1680:1:2::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:2::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;12835:13:42::2;3249:12:3::0;;;3162:106;12835:13:42::2;:18:::0;12827:67:::2;;;::::0;-1:-1:-1;;;12827:67:42;;24818:2:75;12827:67:42::2;::::0;::::2;24800:21:75::0;24857:2;24837:18;;;24830:30;24896:34;24876:18;;;24869:62;-1:-1:-1;;;24947:18:75;;;24940:34;24991:19;;12827:67:42::2;24616:400:75::0;12827:67:42::2;12904:24;12915:9;12925:1;12915:12;;;;;;;;:::i;:::-;;;;;;;12904:10;:24::i;:::-;13048:6;;;;;;;;;-1:-1:-1::0;;;;;13048:6:42::2;-1:-1:-1::0;;;;;13033:42:42::2;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13018:8;13027:1;13018:11;;;;;;;;:::i;:::-;;;;;;;:59;;12997:187;;;::::0;-1:-1:-1;;;12997:187:42;;25544:2:75;12997:187:42::2;::::0;::::2;25526:21:75::0;25583:2;25563:18;;;25556:30;25622:34;25602:18;;;25595:62;25693:34;25673:18;;;25666:62;-1:-1:-1;;;25744:19:75;;;25737:48;25802:19;;12997:187:42::2;25342:485:75::0;12997:187:42::2;13195:24;:56;;;;;;;;13231:4;-1:-1:-1::0;;;;;13195:56:42::2;-1:-1:-1::0;;;;;13195:56:42::2;;;;;13238:9;13248:1;13238:12;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;-1:-1:-1;;;;;13195:56:42;;::::2;::::0;;;13283:6:::2;::::0;13268:130:::2;::::0;-1:-1:-1;;;13268:130:42;;13195:56;;-1:-1:-1;13283:6:42::2;::::0;13268:33:::2;::::0;:130:::2;::::0;13195:56;;13335:8;;13357;;13379:9;;13268:130:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13408:13;:24:::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;13408:24:42;;;;::::2;::::0;;-1:-1:-1;;;;;;13408:24:42::2;-1:-1:-1::0;;;;;13408:24:42;::::2;;::::0;;13461:12;;13408:24;;-1:-1:-1;13447:41:42::2;::::0;13408:24;;13461:12;;::::2;;;;:::i;:::-;;;;;;;13475:9;13485:1;13475:12;;;;;;;;:::i;:::-;;;;;;;13447:41;;;;;;;-1:-1:-1::0;;;;;27621:15:75;;;27603:34;;27673:15;;;27668:2;27653:18;;27646:43;27725:15;;;27720:2;27705:18;;27698:43;27553:2;27538:18;;27363:384;13447:41:42::2;;;;;;;;-1:-1:-1::0;1637:1:2::1;2562:7;:22:::0;12622:873:42;;-1:-1:-1;;;12622:873:42:o;35366:96::-;35406:16;35441:13;35434:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;35434:21:42;;;;;;;;;;;;;;;;;;;;;;35366:96;:::o;882:361:5:-;958:24;985:32;995:7;665:10:9;3884:149:3;:::i;985:32:5:-;958:59;;1055:6;1035:16;:26;;1027:75;;;;-1:-1:-1;;;1027:75:5;;27954:2:75;1027:75:5;;;27936:21:75;27993:2;27973:18;;;27966:30;28032:34;28012:18;;;28005:62;-1:-1:-1;;;28083:18:75;;;28076:34;28127:19;;1027:75:5;27752:400:75;1027:75:5;1136:58;1145:7;665:10:9;1187:6:5;1168:16;:25;1136:8;:58::i;:::-;1214:22;1220:7;1229:6;1214:5;:22::i;:::-;948:295;882:361;;:::o;19128:2585:42:-;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;;;;;;:::i;:::-;1680:1;2389:7;:18;19440:10:42::1;3400:7:3::0;3426:18;;;;;;;;;;;19355:4:42::1;::::0;;-1:-1:-1;19430:31:42::1;19409:114;;;::::0;-1:-1:-1;;;19409:114:42;;28359:2:75;19409:114:42::1;::::0;::::1;28341:21:75::0;28398:2;28378:18;;;28371:30;28437:34;28417:18;;;28410:62;-1:-1:-1;;;28488:18:75;;;28481:34;28532:19;;19409:114:42::1;28157:400:75::0;19409:114:42::1;19685:23;::::0;19538:206:::1;::::0;;19586:10:::1;28821:51:75::0;;28903:2;28888:18;;28881:34;;;28931:18;;;28924:34;;;19656:15:42::1;28989:2:75::0;28974:18;;28967:34;19722:12:42::1;29032:3:75::0;29017:19;;29010:35;-1:-1:-1;;;;;19685:23:42;;::::1;::::0;19538:206;::::1;::::0;::::1;::::0;28808:3:75;28793:19;19538:206:42::1;;;;;;;20000:1;19975:22;;:26;:77;;;;-1:-1:-1::0;20017:21:42::1;::::0;-1:-1:-1;;;;;20017:21:42::1;:35:::0;::::1;19975:77;:130;;;;-1:-1:-1::0;20068:23:42::1;::::0;-1:-1:-1;;;;;20068:23:42::1;:37:::0;::::1;19975:130;19958:495;;;20146:21;::::0;20196:23:::1;::::0;20237:22:::1;::::0;20130:130:::1;::::0;-1:-1:-1;;;;;20146:21:42;;::::1;::::0;20168:10:::1;::::0;20196:23;::::1;::::0;20130:15:::1;:130::i;:::-;20367:21;::::0;20326:23:::1;::::0;20406:22:::1;::::0;20292:150:::1;::::0;2673:25:75;;;-1:-1:-1;;;;;20367:21:42;;::::1;::::0;20326:23;;::::1;::::0;20292:150:::1;::::0;2661:2:75;2646:18;20292:150:42::1;;;;;;;19958:495;20689:1;20646:17;:40;;;:44;:113;;;;-1:-1:-1::0;20757:1:42::1;20706:39;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;20706:53:42::1;;;20646:113;:184;;;;-1:-1:-1::0;20828:1:42::1;20775:41;;::::0;::::1;:17:::0;:41:::1;:::i;:::-;-1:-1:-1::0;;;;;20775:55:42::1;;;20646:184;20629:644;;;20855:184;20871:39;::::0;;;::::1;::::0;::::1;;:::i;:::-;20911:10;20939:41;;::::0;::::1;:17:::0;:41:::1;:::i;:::-;20998:17;:40;;;20855:15;:184::i;:::-;21151:39;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;21058:204:42::1;21092:41;;::::0;::::1;:17:::0;:41:::1;:::i;:::-;-1:-1:-1::0;;;;;21058:204:42::1;;21208:17;:40;;;21058:204;;;;2673:25:75::0;;2661:2;2646:18;;2527:177;21058:204:42::1;;;;;;;;20629:644;21282:31;21300:12;21282:17;:31::i;:::-;21355:6;::::0;21340:41:::1;::::0;;-1:-1:-1;;;21340:41:42;;;;21323:14:::1;::::0;-1:-1:-1;;;;;21355:6:42::1;::::0;21340:39:::1;::::0;:41:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;21355:6;21340:41:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21323:58;;21460:51;21469:21;:19;:21::i;:::-;21492:18;:6:::0;21503;21492:10:::1;:18::i;21460:51::-;21439:128;;;::::0;-1:-1:-1;;;21439:128:42;;29258:2:75;21439:128:42::1;::::0;::::1;29240:21:75::0;29297:2;29277:18;;;29270:30;29336:32;29316:18;;;29309:60;29386:18;;21439:128:42::1;29056:354:75::0;21439:128:42::1;21622:6;::::0;21607:40:::1;::::0;;-1:-1:-1;;;21607:40:42;;;;21598:58:::1;::::0;-1:-1:-1;;;;;21622:6:42::1;::::0;21607:38:::1;::::0;:40:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;21622:6;21607:40:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21649:6;21598:8;:58::i;:::-;21577:129;;;::::0;-1:-1:-1;;;21577:129:42;;29617:2:75;21577:129:42::1;::::0;::::1;29599:21:75::0;29656:2;29636:18;;;29629:30;29695:26;29675:18;;;29668:54;29739:18;;21577:129:42::1;29415:348:75::0;21577:129:42::1;-1:-1:-1::0;;1637:1:2;2562:7;:22;-1:-1:-1;;;;19128:2585:42:o;35587:108::-;35632:18;35669;35662:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;35662:26:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35587:108;:::o;24946:202::-;25024:14;;;;;-1:-1:-1;;;;;25024:14:42;25010:10;:28;24989:106;;;;-1:-1:-1;;;24989:106:42;;29970:2:75;24989:106:42;;;29952:21:75;30009:2;29989:18;;;29982:30;30048:33;30028:18;;;30021:61;30099:18;;24989:106:42;29768:355:75;36673:1349:42;36947:10;-1:-1:-1;;;;;36947:29:42;;;;36939:73;;;;-1:-1:-1;;;36939:73:42;;30330:2:75;36939:73:42;;;30312:21:75;30369:2;30349:18;;;30342:30;30408:33;30388:18;;;30381:61;30459:18;;36939:73:42;30128:355:75;36939:73:42;37022:19;:56;;;;;;;;;;;;;;;;;;;37088:20;37151:6;37248:9;37283:12;;37206:111;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37175:160;;;;;;37134:215;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37111:248;;;;;;37088:271;;37425:10;-1:-1:-1;;;;;37377:58:42;:44;37389:12;37403:17;;37377:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37377:11:42;;-1:-1:-1;;;37377:44:42:i;:::-;-1:-1:-1;;;;;37377:58:42;;37369:102;;;;-1:-1:-1;;;37369:102:42;;31415:2:75;37369:102:42;;;31397:21:75;31454:2;31434:18;;;31427:30;31493:33;31473:18;;;31466:61;31544:18;;37369:102:42;31213:355:75;37369:102:42;37481:20;37544:6;37641:12;;37599:76;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37568:125;;;;;;37527:180;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37504:213;;;;;;37481:236;;37783:15;-1:-1:-1;;;;;37735:63:42;:44;37747:12;37761:17;;37735:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37735:11:42;;-1:-1:-1;;;37735:44:42:i;:::-;-1:-1:-1;;;;;37735:63:42;;37727:107;;;;-1:-1:-1;;;37727:107:42;;32051:2:75;37727:107:42;;;32033:21:75;32090:2;32070:18;;;32063:30;32129:33;32109:18;;;32102:61;32180:18;;37727:107:42;31849:355:75;37727:107:42;37875:15;-1:-1:-1;;;;;37849:166:42;37863:10;-1:-1:-1;;;;;37849:166:42;;37892:9;37903:12;;37917:17;;37952:12;;37966:17;;37985:15;38002:12;37849:166;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;36929:1093;;;36673:1349;;;;;;;;;;:::o;13857:638::-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;14040:18:42;;6058:14;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;1680:1:2::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:2::1;;;;;;;:::i;:::-;1680:1;2389:7;:18;;;;14151:1:42::2;14140:5;14146:1;14140:8;;;;;;;;:::i;:::-;;;;;;;:12;14136:47;;;14154:29;14165:17;14154:10;:29::i;:::-;14221:6;::::0;14206:121:::2;::::0;-1:-1:-1;;;14206:121:42;;-1:-1:-1;;;;;14221:6:42;;::::2;::::0;14206:38:::2;::::0;:121:::2;::::0;14258:17;;14289:9;;14312:5;;14206:121:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14193:134;;14400:9;14410:1;14400:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;14342:71:42::2;14367:9;14377:1;14367:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;14342:71:42::2;;14355:10;14381:17;14342:71;;;;;;34440:25:75::0;;;-1:-1:-1;;;;;34501:32:75;34496:2;34481:18;;34474:60;34428:2;34413:18;;34266:274;14342:71:42::2;;;;;;;;14447:39;::::0;;;;::::2;::::0;;;-1:-1:-1;;;;;14447:39:42;;::::2;::::0;;::::2;::::0;::::2;::::0;;;14423:18:::2;:64:::0;;::::2;::::0;;::::2;::::0;;-1:-1:-1;14423:64:42;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;;14423:64:42::2;::::0;;;::::2;;::::0;;;;;;;;;2562:7:2::1;:22:::0;;;;-1:-1:-1;14447:39:42;;14475:10;-1:-1:-1;13857:638:42:o;30661:94::-;30709:13;30741:7;30734:14;;;;;:::i;35105:153::-;35202:14;;35186:52;;-1:-1:-1;;;35186:52:42;;-1:-1:-1;;;;;178:32:75;;;35186:52:42;;;160:51:75;35164:4:42;;35202:14;;;;;35186:46;;133:18:75;;35186:52:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;;;35105:153;-1:-1:-1;;35105:153:42:o;22574:99::-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;22647:19:::1;22658:7;22647:10;:19::i;6376:405:3:-:0;665:10:9;6469:4:3;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:3;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:3;;34747:2:75;6556:85:3;;;34729:21:75;34786:2;34766:18;;;34759:30;34825:34;34805:18;;;34798:62;-1:-1:-1;;;34876:18:75;;;34869:35;34921:19;;6556:85:3;34545:401:75;6556:85:3;6675:67;665:10:9;6698:7:3;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:3;;6376:405;-1:-1:-1;;;6376:405:3:o;3654:172::-;3740:4;3756:42;665:10:9;3780:9:3;3791:6;3756:9;:42::i;23244:151:42:-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;23353:35:::1;23372:15;23353:18;:35::i;24042:207::-:0;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;24143:31:::1;::::0;-1:-1:-1;;24168:4:42::1;35100:2:75::0;35096:15;35092:53;24143:31:42::1;::::0;::::1;35080:66:75::0;24119:11:42::1;::::0;35162:12:75;;24143:31:42::1;::::0;;;;::::1;-1:-1:-1::0;;24143:31:42;;;;;;;24133:42;;24143:31:::1;24133:42:::0;;::::1;::::0;24201:14:::1;::::0;-1:-1:-1;;;24185:57:42;;24133:42;;-1:-1:-1;24201:14:42::1;::::0;::::1;-1:-1:-1::0;;;;;24201:14:42::1;::::0;24185:44:::1;::::0;:57:::1;::::0;24133:42;;24235:6;;;;24185:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;24109:140;24042:207:::0;;:::o;7509:456::-;5483:11;;7761:4;;5483:11;;5482:12;5461:108;;;;-1:-1:-1;;;5461:108:42;;35707:2:75;5461:108:42;;;35689:21:75;35746:2;35726:18;;;35719:30;35785:34;35765:18;;;35758:62;-1:-1:-1;;;35836:18:75;;;35829:47;35893:19;;5461:108:42;35505:413:75;5461:108:42;7796:162:::1;;7825:8:::0;;7796:162:::1;:::i;:::-;7851:10;;7796:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;7796:162:42::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;7879:17:42;;-1:-1:-1;7879:17:42;;;;7796:162;::::1;::::0;7879:17;;7796:162;7879:17;7796:162;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;7796:162:42::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;7914:6:42;;-1:-1:-1;7914:6:42;;;;7796:162;::::1;::::0;7914:6;;7796:162;7914:6;7796:162;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;7796:162:42::1;::::0;-1:-1:-1;7938:6:42;;-1:-1:-1;7938:6:42;;-1:-1:-1;7796:162:42::1;:::i;:::-;:11;:162::i;:::-;7777:181:::0;7509:456;-1:-1:-1;;;;;;;;;;;7509:456:42:o;32108:961::-;32321:12;32309:8;:24;;32301:53;;;;-1:-1:-1;;;32301:53:42;;38737:2:75;32301:53:42;;;38719:21:75;38776:2;38756:18;;;38749:30;-1:-1:-1;;;38795:18:75;;;38788:46;38851:18;;32301:53:42;38535:340:75;32301:53:42;32466:16;;-1:-1:-1;;;;;32703:13:42;;32364:14;32703:13;;;:6;:13;;;;;:15;;32364:14;;32466:16;1991:66;;32608:5;;32639:7;;32672:5;;32703:15;32364:14;32703:15;;;:::i;:::-;;;;-1:-1:-1;32531:243:42;;;;;;39307:25:75;;;;-1:-1:-1;;;;;39406:15:75;;;39386:18;;;39379:43;39458:15;;;;39438:18;;;39431:43;39490:18;;;39483:34;39533:19;;;39526:35;39577:19;;;39570:35;;;39279:19;;32531:243:42;;;;;;;;;;;;32500:292;;;;;;32404:402;;;;;;;;-1:-1:-1;;;39874:27:75;;39926:1;39917:11;;39910:27;;;;39962:2;39953:12;;39946:28;39999:2;39990:12;;39616:392;32404:402:42;;;;-1:-1:-1;;32404:402:42;;;;;;;;;32381:435;;32404:402;32381:435;;;;32826:24;32853:26;;;;;;;;;40240:25:75;;;40313:4;40301:17;;40281:18;;;40274:45;;;;40335:18;;;40328:34;;;40378:18;;;40371:34;;;32381:435:42;;-1:-1:-1;32826:24:42;32853:26;;40212:19:75;;32853:26:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;32853:26:42;;-1:-1:-1;;32853:26:42;;;-1:-1:-1;;;;;;;32910:30:42;;;;;;:59;;;32964:5;-1:-1:-1;;;;;32944:25:42;:16;-1:-1:-1;;;;;32944:25:42;;32910:59;32889:132;;;;-1:-1:-1;;;32889:132:42;;40618:2:75;32889:132:42;;;40600:21:75;40657:2;40637:18;;;40630:30;40696:28;40676:18;;;40669:56;40742:18;;32889:132:42;40416:350:75;32889:132:42;33031:31;33040:5;33047:7;33056:5;33031:8;:31::i;:::-;32291:778;;32108:961;;;;;;;:::o;34882:119::-;34940:21;:19;:21::i;:::-;-1:-1:-1;;;;;34932:39:42;:62;34972:21;34932:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34163:241;34238:16;;34215:7;;-1:-1:-1;;;;;34238:16:42;34234:164;;34307:14;;34291:42;;-1:-1:-1;;;34291:42:42;;34307:14;34291:42;;;2673:25:75;34307:14:42;;;;-1:-1:-1;;;;;34307:14:42;;34291:39;;2646:18:75;;34291:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34284:49;;34163:241;:::o;34234:164::-;-1:-1:-1;34371:16:42;;-1:-1:-1;;;;;34371:16:42;;34163:241::o;278:26:46:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;278:26:46;;-1:-1:-1;278:26:46;:::o;9952:370:3:-;-1:-1:-1;;;;;10083:19:3;;10075:68;;;;-1:-1:-1;;;10075:68:3;;40973:2:75;10075:68:3;;;40955:21:75;41012:2;40992:18;;;40985:30;41051:34;41031:18;;;41024:62;-1:-1:-1;;;41102:18:75;;;41095:34;41146:19;;10075:68:3;40771:400:75;10075:68:3;-1:-1:-1;;;;;10161:21:3;;10153:68;;;;-1:-1:-1;;;10153:68:3;;41378:2:75;10153:68:3;;;41360:21:75;41417:2;41397:18;;;41390:30;41456:34;41436:18;;;41429:62;-1:-1:-1;;;41507:18:75;;;41500:32;41549:19;;10153:68:3;41176:398:75;10153:68:3;-1:-1:-1;;;;;10232:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;2673:25:75;;;10283:32:3;;2646:18:75;10283:32:3;;;;;;;9952:370;;;:::o;1337:384:46:-;-1:-1:-1;;;;;1396:21:46;;;1393:322;;-1:-1:-1;;;;;1458:20:46;;1432:23;1458:20;;;:11;:20;;;;;1500:11;;;;:20;1492:62;;;;-1:-1:-1;;;1492:62:46;;41781:2:75;1492:62:46;;;41763:21:75;41820:2;41800:18;;;41793:30;41859:31;41839:18;;;41832:59;41908:18;;1492:62:46;41579:353:75;1492:62:46;1568:18;;-1:-1:-1;;1568:18:46;1582:4;1568:18;;;1600:25;1617:7;1600:16;:25::i;:::-;1644:60;;;1675:15;22849:25:75;;1691:12:46;22905:2:75;22890:18;;22883:34;1664:10:46;;-1:-1:-1;;;;;1644:60:46;;;;;22822:18:75;1644:60:46;;;;;;;;1418:297;1337:384;:::o;7255:713:3:-;-1:-1:-1;;;;;7390:20:3;;7382:70;;;;-1:-1:-1;;;7382:70:3;;42139:2:75;7382:70:3;;;42121:21:75;42178:2;42158:18;;;42151:30;42217:34;42197:18;;;42190:62;-1:-1:-1;;;42268:18:75;;;42261:35;42313:19;;7382:70:3;41937:401:75;7382:70:3;-1:-1:-1;;;;;7470:23:3;;7462:71;;;;-1:-1:-1;;;7462:71:3;;42545:2:75;7462:71:3;;;42527:21:75;42584:2;42564:18;;;42557:30;42623:34;42603:18;;;42596:62;-1:-1:-1;;;42674:18:75;;;42667:33;42717:19;;7462:71:3;42343:399:75;7462:71:3;-1:-1:-1;;;;;7626:17:3;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:3;;42949:2:75;7653:74:3;;;42931:21:75;42988:2;42968:18;;;42961:30;43027:34;43007:18;;;43000:62;-1:-1:-1;;;43078:18:75;;;43071:36;43124:19;;7653:74:3;42747:402:75;7653:74:3;-1:-1:-1;;;;;7761:17:3;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:9;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:3;7878:6;-1:-1:-1;;;;;7869:35:3;;7897:6;7869:35;;;;2673:25:75;;2661:2;2646:18;;2527:177;7869:35:3;;;;;;;;7915:46;7372:596;7255:713;;;:::o;3245:325:46:-;-1:-1:-1;;;;;3348:30:46;;3322:23;3348:30;;;:11;:30;;;;;;;3388:27;;-1:-1:-1;;3388:27:46;;;3430:80;;3348:30;;3470:10;;3430:80;;;;3481:15;;3497:12;;22849:25:75;;;22905:2;22890:18;;22883:34;22837:2;22822:18;;22675:248;3430:80:46;;;;;;;;3520:43;3545:17;3520:24;:43::i;1866:261::-;-1:-1:-1;;;;;1951:20:46;;1925:23;1951:20;;;:11;:20;;;;;;;1981:19;;-1:-1:-1;;1981:19:46;;;2015:62;;1951:20;;2037:10;;2015:62;;;;2048:15;;2064:12;;22849:25:75;;;22905:2;22890:18;;22883:34;22837:2;22822:18;;22675:248;16349:2325:42;16465:56;;;;;;;;;;;;;;;;;:19;:56;16686:25;;;;:12;:25;:::i;:::-;16737:31;;;;:12;:31;:::i;:::-;16794:29;;;;;;;;:::i;:::-;16849:12;:30;;;16905:12;:23;;;16644:306;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16613:355;;;;;;16572:410;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;16572:410:42;;;;;;;;;16549:443;;16572:410;16549:443;;;;;-1:-1:-1;17002:14:42;17019:66;16549:443;17038:14;;;;;;;;:::i;:::-;17019:66;;;;;;;;;;;;40240:25:75;;;;40313:4;40301:17;;;40281:18;;;40274:45;17054:14:42;;;;;40335:18:75;;;40328:34;17070:14:42;;;;;40378:18:75;;;40371:34;;;;40212:19;17019:66:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17019:66:42;;-1:-1:-1;;17019:66:42;;;-1:-1:-1;17113:31:42;;-1:-1:-1;17019:66:42;17113:31;;:12;:31;:::i;:::-;-1:-1:-1;;;;;17103:41:42;:6;-1:-1:-1;;;;;17103:41:42;;17095:74;;;;-1:-1:-1;;;17095:74:42;;44688:2:75;17095:74:42;;;44670:21:75;44727:2;44707:18;;;44700:30;-1:-1:-1;;;44746:18:75;;;44739:50;44806:18;;17095:74:42;44486:344:75;17095:74:42;17254:29;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17184:313:42;17209:31;;;;:12;:31;:::i;:::-;-1:-1:-1;;;;;17184:313:42;;17297:30;;;;17341:25;;;;17297:12;17341:25;:::i;:::-;17380:14;;;;;;;;:::i;:::-;17408:12;:14;;;17436:12;:14;;;17464:12;:23;;;17184:313;;;;;;;;;;;;:::i;:::-;;;;;;;;17723:1;17690:12;:30;;;:34;:93;;;;-1:-1:-1;17781:1:42;17740:29;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17740:43:42;;;17690:93;:154;;;;-1:-1:-1;17842:1:42;17799:31;;;;:12;:31;:::i;:::-;-1:-1:-1;;;;;17799:45:42;;;17690:154;17673:995;;;17901:6;;17886:42;;;-1:-1:-1;;;17886:42:42;;;;17869:14;;-1:-1:-1;;;;;17901:6:42;;17886:40;;:42;;;;;;;;;;;;;;17901:6;17886:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17869:59;-1:-1:-1;17942:14:42;17977:10;;17974:92;;18014:52;1761:4;18014:42;:30;;;;18049:6;18014:34;:42::i;:::-;:46;;:52::i;:::-;18005:61;;17974:92;18080:19;18102:42;:30;;;;18137:6;18102:34;:42::i;:::-;18080:64;-1:-1:-1;18159:136:42;18175:29;;;;;;;;:::i;:::-;18205:10;18241:4;18264:12;:30;;;18159:15;:136::i;:::-;18309:142;18377:31;;;;:12;:31;:::i;:::-;18426:11;18316:29;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18309:50:42;;:142;:50;:142::i;:::-;18468:10;;18465:193;;18578:6;;18563:40;;;-1:-1:-1;;;18563:40:42;;;;18495:146;;-1:-1:-1;;;;;18578:6:42;;18563:38;;:40;;;;;;;;;;;;;;18578:6;18563:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18621:6;18502:29;;;;;;;;:::i;2672:96:11:-;2730:7;2756:5;2760:1;2756;:5;:::i;8244:389:3:-;-1:-1:-1;;;;;8327:21:3;;8319:65;;;;-1:-1:-1;;;8319:65:3;;45652:2:75;8319:65:3;;;45634:21:75;45691:2;45671:18;;;45664:30;45730:33;45710:18;;;45703:61;45781:18;;8319:65:3;45450:355:75;8319:65:3;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:3;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:3;;2673:25:75;;;-1:-1:-1;;;;;8530:37:3;;;8547:1;;8530:37;;2661:2:75;2646:18;8530:37:3;;;;;;;15839:291:42;;:::o;8953:576:3:-;-1:-1:-1;;;;;9036:21:3;;9028:67;;;;-1:-1:-1;;;9028:67:3;;46012:2:75;9028:67:3;;;45994:21:75;46051:2;46031:18;;;46024:30;46090:34;46070:18;;;46063:62;-1:-1:-1;;;46141:18:75;;;46134:31;46182:19;;9028:67:3;45810:397:75;9028:67:3;-1:-1:-1;;;;;9191:18:3;;9166:22;9191:18;;;;;;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:3;;46414:2:75;9219:71:3;;;46396:21:75;46453:2;46433:18;;;46426:30;46492:34;46472:18;;;46465:62;-1:-1:-1;;;46543:18:75;;;46536:32;46585:19;;9219:71:3;46212:398:75;9219:71:3;-1:-1:-1;;;;;9324:18:3;;:9;:18;;;;;;;;;;9345:23;;;9324:44;;9388:12;:22;;9362:6;;9324:9;9388:22;;9362:6;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:3;;2673:25:75;;;9452:1:3;;-1:-1:-1;;;;;9426:37:3;;;;;2661:2:75;2646:18;9426:37:3;;;;;;;948:295:5;882:361;;:::o;25154:2012:42:-;25257:10;:17;25229:18;:25;25210:16;;25229:45;;;:::i;:::-;25210:64;;25284:17;25315:32;25362:8;-1:-1:-1;;;;;25348:23:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25348:23:42;;25315:56;;25461:9;25480:1028;25491:18;:25;25489:27;;25480:1028;;;25541:22;25585:18;25604:1;25585:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;:37;25989:18;:21;;-1:-1:-1;;;;;25585:37:42;;;;-1:-1:-1;25585:21:42;;;;:37;;25973:15;;25989:18;26008:1;;25989:21;;;;;;:::i;:::-;;;;;;;;;;;:24;;;25973:41;;;;;;;;;;;;;2673:25:75;;2661:2;2646:18;;2527:177;25973:41:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25641:373;;;;;;;;;;;;;;;26045:1;26035:9;:11;26032:86;;;26068:3;-1:-1:-1;;;;;26068:13:42;;26082:18;26101:1;26082:21;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;26108:9;26068:50;;;;;;;;;;;;;;;22849:25:75;;;22905:2;22890:18;;22883:34;22837:2;22822:18;;22675:248;26068:50:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26032:86;26139:11;;26136:86;;26172:3;-1:-1:-1;;;;;26172:13:42;;26186:18;26205:1;26186:21;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;26212:9;26172:50;;;;;;;;;;;;;;;22849:25:75;;;22905:2;22890:18;;22883:34;22837:2;22822:18;;22675:248;26172:50:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26136:86;26292:47;26301:18;26320:1;26301:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:37;-1:-1:-1;;;;;26301:37:42;1160:20:46;;:11;:20;;;;;:27;;;;1080:115;26292:47:42;:67;;;;-1:-1:-1;26355:4:42;26343:16;;;;26292:67;26289:209;;;26409:18;26428:1;26409:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;26382:26;;-1:-1:-1;;;;;26409:37:42;;;;26382:15;;26398:9;;26382:26;;;;;;:::i;:::-;-1:-1:-1;;;;;26382:64:42;;;:26;;;;;;;;;;;:64;26468:11;;;;:::i;:::-;;;;26289:209;25523:985;;;;25518:3;;;;;:::i;:::-;;;;25480:1028;;;-1:-1:-1;26595:1:42;26589:276;26600:10;:17;26598:19;;26589:276;;;26653:10;26664:1;26653:13;;;;;;;;:::i;:::-;;;;;;;;;;;26642:54;;-1:-1:-1;;;26642:54:42;;26690:4;26642:54;;;160:51:75;-1:-1:-1;;;;;26653:13:42;;;;26642:39;;133:18:75;;26642:54:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26717:23;26726:10;26737:1;26726:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;26726:13:42;1160:20:46;;:11;:20;;;;;:27;;;;1080:115;26717:23:42;26714:141;;;26790:10;26801:1;26790:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26790:13:42;26763:15;26779:9;26763:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26763:40:42;;;:26;;;;;;;;;;;:40;26825:11;;;;:::i;:::-;;;;26714:141;26619:3;;;;:::i;:::-;;;;26589:276;;;26907:19;:17;:19::i;:::-;-1:-1:-1;26966:16:42;:29;;-1:-1:-1;;;;;;26966:29:42;;;26993:1;27069:82;27080:9;27078:1;:11;27069:82;;;27110:30;27121:15;27137:1;27121:18;;;;;;;;:::i;27110:30::-;27091:3;;;;:::i;:::-;;;;27069:82;;28264:125;28343:16;:39;;-1:-1:-1;;;;;;28343:39:42;-1:-1:-1;;;;;28343:39:42;;;;;;;;;;28264:125::o;35916:380::-;36079:27;;-1:-1:-1;;;36079:27:42;;-1:-1:-1;;;;;178:32:75;;;36079:27:42;;;160:51:75;36055:21:42;;36079:23;;;;;;133:18:75;;36079:27:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;36055:51;-1:-1:-1;36116:48:42;-1:-1:-1;;;;;36116:30:42;;36147:4;36153:2;36157:6;36116:30;:48::i;:::-;36213:25;:13;36231:6;36213:17;:25::i;:::-;36182:27;;-1:-1:-1;;;36182:27:42;;-1:-1:-1;;;;;178:32:75;;;36182:27:42;;;160:51:75;36182:23:42;;;;;133:18:75;;36182:27:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;36174:115;;;;-1:-1:-1;;;36174:115:42;;48420:2:75;36174:115:42;;;48402:21:75;48459:2;48439:18;;;48432:30;48498:28;48478:18;;;48471:56;48544:18;;36174:115:42;48218:350:75;36174:115:42;36045:251;35916:380;;;;:::o;3039:96:11:-;3097:7;3123:5;3127:1;3123;:5;:::i;38030:524:42:-;38106:7;38125:9;38144;38163:7;38184:3;:10;38198:2;38184:16;38180:62;;38229:1;38214:17;;;;;;;38180:62;-1:-1:-1;;;38292:2:42;38283:12;;38277:19;38325:2;38316:12;;38310:19;38362:2;38353:12;;38347:19;38368:3;38343:29;38399:2;38395:6;;38391:42;;;38415:7;38420:2;38415:7;;:::i;:::-;;;38391:42;38449:1;:7;;38454:2;38449:7;;:18;;;;;38460:1;:7;;38465:2;38460:7;;38449:18;38445:62;;;38494:1;38479:17;;;;;;;38445:62;38523:24;;;;;;;;;;;;40240:25:75;;;40313:4;40301:17;;40281:18;;;40274:45;;;;40335:18;;;40328:34;;;40378:18;;;40371:34;;;38523:24:42;;40212:19:75;;38523:24:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;38523:24:42;;-1:-1:-1;;38523:24:42;;;38030:524;-1:-1:-1;;;;;;;38030:524:42:o;2603:471:46:-;-1:-1:-1;;;;;2680:31:46;;;2677:391;;-1:-1:-1;;;;;2752:30:46;;2726:23;2752:30;;;:11;:30;;;;;2804:19;;;;;;;:28;2796:75;;;;-1:-1:-1;;;2796:75:46;;48984:2:75;2796:75:46;;;48966:21:75;49023:2;49003:18;;;48996:30;49062:34;49042:18;;;49035:62;-1:-1:-1;;;49113:18:75;;;49106:32;49155:19;;2796:75:46;48782:398:75;2796:75:46;2885:26;;-1:-1:-1;;2885:26:46;;;;;2925:35;2942:17;2925:16;:35::i;:::-;2979:78;;;3028:15;22849:25:75;;3044:12:46;22905:2:75;22890:18;;22883:34;3017:10:46;;-1:-1:-1;;;;;2979:78:46;;;;;22822:18:75;2979:78:46;22675:248:75;9084:2135:42;9300:4;9316:21;9340:17;9358:1;9340:20;;;;;;;;:::i;:::-;;;;;;;9316:44;;9379:17;9397:1;9379:20;;;;;;;;:::i;:::-;;;;;;;;;;;9370:6;:29;;-1:-1:-1;;;;;;9370:29:42;-1:-1:-1;;;;;9370:29:42;;;;;;9430:27;;9409:118;;;;-1:-1:-1;;;9409:118:42;;49387:2:75;9409:118:42;;;49369:21:75;49426:2;49406:18;;;49399:30;49465:34;49445:18;;;49438:62;-1:-1:-1;;;49516:18:75;;;49509:42;49568:19;;9409:118:42;49185:408:75;9409:118:42;9559:6;;-1:-1:-1;;;;;9559:6:42;9538:110;;;;-1:-1:-1;;;9538:110:42;;49800:2:75;9538:110:42;;;49782:21:75;49839:2;49819:18;;;49812:30;49878:34;49858:18;;;49851:62;-1:-1:-1;;;49929:18:75;;;49922:41;49980:19;;9538:110:42;49598:407:75;9538:110:42;-1:-1:-1;;9764:4:42;:73;9855:11;;:8;;9864:1;;9855:11;;;;:::i;:::-;;;;;;;9847:5;:19;;;;;;;;;;;;:::i;:::-;;9886:8;9895:1;9886:11;;;;;;;;:::i;:::-;;;;;;;9876:7;:21;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9907:14:42;:30;;-1:-1:-1;;;;;;;9907:30:42;;;;9947:18;-1:-1:-1;;;;;;9947:18:42;;;;9907:14;9947:18;;;10076:13;;10065:25;;10076:10;;-1:-1:-1;;10076:13:42;;;;:::i;10065:25::-;10129:1;-1:-1:-1;;;;;10104:27:42;:10;10115:1;10104:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10104:27:42;;10100:267;;10147:35;10168:10;10179:1;10168:13;;;;;;;;:::i;:::-;;;;;;;10147:20;:35::i;:::-;10266:10;10277:1;10266:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10201:155:42;10238:10;-1:-1:-1;;;;;10201:155:42;;10297:15;10330:12;10201:155;;;;;;22849:25:75;;;22905:2;22890:18;;22883:34;22837:2;22822:18;;22675:248;10201:155:42;;;;;;;;10100:267;10402:10;10413:1;10402:13;;;;;;;;:::i;:::-;;;;;;;10376:23;;:39;;;;;-1:-1:-1;;;;;10376:39:42;;;;;-1:-1:-1;;;;;10376:39:42;;;;;;10449:10;10460:1;10449:13;;;;;;;;:::i;:::-;;;;;;;10425:21;;:37;;;;;-1:-1:-1;;;;;10425:37:42;;;;;-1:-1:-1;;;;;10425:37:42;;;;;;10497:6;10504:1;10497:9;;;;;;;;:::i;:::-;;;;;;;;;;;;10472:22;:34;;;10582:23;;10619:21;;10521:165;;;10558:10;24424:34:75;;-1:-1:-1;;;;;10582:23:42;;;24474:18:75;;;24467:43;;;;10619:21:42;;24526:18:75;;;24519:43;24593:2;24578:18;;24571:34;10521:165:42;;24373:3:75;24358:19;10521:165:42;;;;;;;11004:23;;10755:9;;10853:133;;11004:23;;11020:5;;11004:23;:::i;:::-;;;;;;;;;;11055:10;;;;;;;;-1:-1:-1;;;11055:10:42;;;;;10825:348;;;;;51507:25:75;;;;51548:18;;51541:34;;;;11045:21:42;51591:18:75;;;51584:34;51634:18;;;51627:34;;;11154:4:42;51677:19:75;;;51670:61;51479:19;;10825:348:42;;;;;;-1:-1:-1;;10825:348:42;;;;;;10802:381;;10825:348;10802:381;;;;10783:16;:400;-1:-1:-1;;11201:11:42;;;;;9084:2135;-1:-1:-1;;;;;;9084:2135:42:o;4270:294:46:-;4329:9;4348:94;4364:9;:16;4360:20;;4348:94;;;4420:4;-1:-1:-1;;;;;4404:20:46;:9;4414:1;4404:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4404:12:46;:20;4401:30;;;4426:5;;4401:30;4382:3;;;;:::i;:::-;;;;4348:94;;;4459:9;:16;4454:21;;4451:107;;;4527:9;:20;;;;;;;-1:-1:-1;4527:20:46;;;;;;;;-1:-1:-1;;;;;4527:20:46;;-1:-1:-1;;;;;;4527:20:46;;;;;;4319:245;4270:294;:::o;4765:516::-;-1:-1:-1;;;;;4863:17:46;;4832:28;4863:17;;;:11;:17;;;;;4894:16;;;;:25;;;:74;;-1:-1:-1;4935:24:46;;;;;;;:33;4894:74;4890:385;;;4992:9;5015:102;5031:9;:16;5027:20;;5015:102;;;5091:4;-1:-1:-1;;;;;5075:20:46;:9;5085:1;5075:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5075:12:46;:20;5072:30;;;5097:5;;5072:30;5049:3;;;;:::i;:::-;;;;5015:102;;;5137:9;:16;5133:20;;5130:135;;;5187:9;5197:16;;:19;;5215:1;;5197:19;:::i;:::-;5187:30;;;;;;;;:::i;:::-;;;;;;;;;;;5172:9;:12;;-1:-1:-1;;;;;5187:30:46;;;;5182:1;;5172:12;;;;;;:::i;:::-;;;;;;;;;:45;;;;;-1:-1:-1;;;;;5172:45:46;;;;;-1:-1:-1;;;;;5172:45:46;;;;;;5235:9;:15;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;5235:15:46;;;;;-1:-1:-1;;;;;;5235:15:46;;;;;;4978:297;4822:459;4765:516;:::o;3382:96:11:-;3440:7;3466:5;3470:1;3466;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;634:205:7:-;773:58;;-1:-1:-1;;;;;52461:32:75;;773:58:7;;;52443:51:75;52510:18;;;52503:34;;;746:86:7;;766:5;;-1:-1:-1;;;796:23:7;52416:18:75;;773:58:7;;;;-1:-1:-1;;773:58:7;;;;;;;;;;;;;;-1:-1:-1;;;;;773:58:7;-1:-1:-1;;;;;;773:58:7;;;;;;;;;;746:19;:86::i;3717:379:46:-;3779:9;3774:198;3798:9;:16;3794:20;;3774:198;;;3835:23;3861:11;:25;3873:9;3883:1;3873:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3873:12:46;3861:25;;;;;;;;;;;;3900:19;;-1:-1:-1;;3933:27:46;;;-1:-1:-1;3816:3:46;;;;:::i;:::-;;;;3774:198;;;-1:-1:-1;3990:16:46;3997:9;;3990:16;:::i;:::-;4021:59;;;4051:15;22849:25:75;;4067:12:46;22905:2:75;22890:18;;22883:34;4040:10:46;;4021:59;;22822:18:75;4021:59:46;;;;;;;3717:379::o;845:241:7:-;1010:68;;-1:-1:-1;;;;;5191:15:75;;;1010:68:7;;;5173:34:75;5243:15;;5223:18;;;5216:43;5275:18;;;5268:34;;;983:96:7;;1003:5;;-1:-1:-1;;;1033:27:7;5108:18:75;;1010:68:7;4933:375:75;3140:706:7;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:7;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:7;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:7;;53000:2:75;3744:85:7;;;52982:21:75;53039:2;53019:18;;;53012:30;53078:34;53058:18;;;53051:62;-1:-1:-1;;;53129:18:75;;;53122:40;53179:19;;3744:85:7;52798:406:75;3461:223:8;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;3461:223;-1:-1:-1;;;;3461:223:8:o;4548:500::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:8;;53411:2:75;4737:81:8;;;53393:21:75;53450:2;53430:18;;;53423:30;53489:34;53469:18;;;53462:62;-1:-1:-1;;;53540:18:75;;;53533:36;53586:19;;4737:81:8;53209:402:75;4737:81:8;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:8;;53818:2:75;4828:60:8;;;53800:21:75;53857:2;53837:18;;;53830:30;53896:31;53876:18;;;53869:59;53945:18;;4828:60:8;53616:353:75;4828:60:8;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:8;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;4989:17;:52::i;:::-;4982:59;4548:500;-1:-1:-1;;;;;;;4548:500:8:o;6950:692::-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:8;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7598:12;7591:20;;-1:-1:-1;;;7591:20:8;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;222:131:75;-1:-1:-1;;;;;297:31:75;;287:42;;277:70;;343:1;340;333:12;358:134;426:20;;455:31;426:20;455:31;:::i;:::-;358:134;;;:::o;497:247::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;664:9;651:23;683:31;708:5;683:31;:::i;1022:258::-;1094:1;1104:113;1118:6;1115:1;1112:13;1104:113;;;1194:11;;;1188:18;1175:11;;;1168:39;1140:2;1133:10;1104:113;;;1235:6;1232:1;1229:13;1226:48;;;-1:-1:-1;;1270:1:75;1252:16;;1245:27;1022:258::o;1285:383::-;1434:2;1423:9;1416:21;1397:4;1466:6;1460:13;1509:6;1504:2;1493:9;1489:18;1482:34;1525:66;1584:6;1579:2;1568:9;1564:18;1559:2;1551:6;1547:15;1525:66;:::i;:::-;1652:2;1631:15;-1:-1:-1;;1627:29:75;1612:45;;;;1659:2;1608:54;;1285:383;-1:-1:-1;;1285:383:75:o;1673:315::-;1741:6;1749;1802:2;1790:9;1781:7;1777:23;1773:32;1770:52;;;1818:1;1815;1808:12;1770:52;1857:9;1844:23;1876:31;1901:5;1876:31;:::i;:::-;1926:5;1978:2;1963:18;;;;1950:32;;-1:-1:-1;;;1673:315:75:o;2709:118::-;2795:5;2788:13;2781:21;2774:5;2771:32;2761:60;;2817:1;2814;2807:12;2832:661;2924:6;2932;2940;2948;2956;3009:3;2997:9;2988:7;2984:23;2980:33;2977:53;;;3026:1;3023;3016:12;2977:53;3065:9;3052:23;3084:31;3109:5;3084:31;:::i;:::-;3134:5;-1:-1:-1;3186:2:75;3171:18;;3158:32;;-1:-1:-1;3237:2:75;3222:18;;3209:32;;-1:-1:-1;3293:2:75;3278:18;;3265:32;3306:30;3265:32;3306:30;:::i;:::-;3355:7;-1:-1:-1;3414:3:75;3399:19;;3386:33;3428;3386;3428;:::i;:::-;3480:7;3470:17;;;2832:661;;;;;;;;:::o;3498:456::-;3575:6;3583;3591;3644:2;3632:9;3623:7;3619:23;3615:32;3612:52;;;3660:1;3657;3650:12;3612:52;3699:9;3686:23;3718:31;3743:5;3718:31;:::i;:::-;3768:5;-1:-1:-1;3825:2:75;3810:18;;3797:32;3838:33;3797:32;3838:33;:::i;:::-;3498:456;;3890:7;;-1:-1:-1;;;3944:2:75;3929:18;;;;3916:32;;3498:456::o;4330:160::-;4394:5;4439:3;4430:6;4425:3;4421:16;4417:26;4414:46;;;4456:1;4453;4446:12;4414:46;-1:-1:-1;4478:6:75;4330:160;-1:-1:-1;4330:160:75:o;4495:433::-;4595:6;4603;4656:2;4644:9;4635:7;4631:23;4627:32;4624:52;;;4672:1;4669;4662:12;4624:52;4708:9;4695:23;4685:33;;4769:2;4758:9;4754:18;4741:32;-1:-1:-1;;;;;4788:6:75;4785:30;4782:50;;;4828:1;4825;4818:12;4782:50;4851:71;4914:7;4905:6;4894:9;4890:22;4851:71;:::i;:::-;4841:81;;;4495:433;;;;;:::o;5313:180::-;5372:6;5425:2;5413:9;5404:7;5400:23;5396:32;5393:52;;;5441:1;5438;5431:12;5393:52;-1:-1:-1;5464:23:75;;5313:180;-1:-1:-1;5313:180:75:o;5498:461::-;5551:3;5589:5;5583:12;5616:6;5611:3;5604:19;5642:4;5671:2;5666:3;5662:12;5655:19;;5708:2;5701:5;5697:14;5729:1;5739:195;5753:6;5750:1;5747:13;5739:195;;;5818:13;;-1:-1:-1;;;;;5814:39:75;5802:52;;5874:12;;;;5909:15;;;;5850:1;5768:9;5739:195;;;-1:-1:-1;5950:3:75;;5498:461;-1:-1:-1;;;;;5498:461:75:o;5964:261::-;6143:2;6132:9;6125:21;6106:4;6163:56;6215:2;6204:9;6200:18;6192:6;6163:56;:::i;6230:127::-;6291:10;6286:3;6282:20;6279:1;6272:31;6322:4;6319:1;6312:15;6346:4;6343:1;6336:15;6362:275;6433:2;6427:9;6498:2;6479:13;;-1:-1:-1;;6475:27:75;6463:40;;-1:-1:-1;;;;;6518:34:75;;6554:22;;;6515:62;6512:88;;;6580:18;;:::i;:::-;6616:2;6609:22;6362:275;;-1:-1:-1;6362:275:75:o;6642:183::-;6702:4;-1:-1:-1;;;;;6727:6:75;6724:30;6721:56;;;6757:18;;:::i;:::-;-1:-1:-1;6802:1:75;6798:14;6814:4;6794:25;;6642:183::o;6830:662::-;6884:5;6937:3;6930:4;6922:6;6918:17;6914:27;6904:55;;6955:1;6952;6945:12;6904:55;6991:6;6978:20;7017:4;7041:60;7057:43;7097:2;7057:43;:::i;:::-;7041:60;:::i;:::-;7135:15;;;7221:1;7217:10;;;;7205:23;;7201:32;;;7166:12;;;;7245:15;;;7242:35;;;7273:1;7270;7263:12;7242:35;7309:2;7301:6;7297:15;7321:142;7337:6;7332:3;7329:15;7321:142;;;7403:17;;7391:30;;7441:12;;;;7354;;7321:142;;;-1:-1:-1;7481:5:75;6830:662;-1:-1:-1;;;;;;6830:662:75:o;7497:737::-;7551:5;7604:3;7597:4;7589:6;7585:17;7581:27;7571:55;;7622:1;7619;7612:12;7571:55;7658:6;7645:20;7684:4;7708:60;7724:43;7764:2;7724:43;:::i;7708:60::-;7802:15;;;7888:1;7884:10;;;;7872:23;;7868:32;;;7833:12;;;;7912:15;;;7909:35;;;7940:1;7937;7930:12;7909:35;7976:2;7968:6;7964:15;7988:217;8004:6;7999:3;7996:15;7988:217;;;8084:3;8071:17;8101:31;8126:5;8101:31;:::i;:::-;8145:18;;8183:12;;;;8021;;7988:217;;8239:821;8391:6;8399;8407;8460:2;8448:9;8439:7;8435:23;8431:32;8428:52;;;8476:1;8473;8466:12;8428:52;8516:9;8503:23;-1:-1:-1;;;;;8586:2:75;8578:6;8575:14;8572:34;;;8602:1;8599;8592:12;8572:34;8625:61;8678:7;8669:6;8658:9;8654:22;8625:61;:::i;:::-;8615:71;;8739:2;8728:9;8724:18;8711:32;8695:48;;8768:2;8758:8;8755:16;8752:36;;;8784:1;8781;8774:12;8752:36;8807:63;8862:7;8851:8;8840:9;8836:24;8807:63;:::i;:::-;8797:73;;8923:2;8912:9;8908:18;8895:32;8879:48;;8952:2;8942:8;8939:16;8936:36;;;8968:1;8965;8958:12;8936:36;;8991:63;9046:7;9035:8;9024:9;9020:24;8991:63;:::i;:::-;8981:73;;;8239:821;;;;;:::o;9065:735::-;9220:6;9228;9236;9244;9288:9;9279:7;9275:23;9318:3;9314:2;9310:12;9307:32;;;9335:1;9332;9325:12;9307:32;9374:9;9361:23;9393:31;9418:5;9393:31;:::i;:::-;9443:5;-1:-1:-1;9495:2:75;9480:18;;9467:32;;-1:-1:-1;9550:2:75;9535:18;;9522:32;-1:-1:-1;;;;;9566:30:75;;9563:50;;;9609:1;9606;9599:12;9563:50;9632:71;9695:7;9686:6;9675:9;9671:22;9632:71;:::i;:::-;9622:81;-1:-1:-1;;9737:2:75;-1:-1:-1;;9719:16:75;;9715:25;9712:45;;;9753:1;9750;9743:12;9712:45;-1:-1:-1;9065:735:75;;;;-1:-1:-1;9065:735:75;9791:2;9776:18;;-1:-1:-1;9065:735:75:o;9805:820::-;10032:2;10084:21;;;10154:13;;10057:18;;;10176:22;;;10003:4;;10032:2;10217;;10235:18;;;;10276:15;;;10003:4;10319:280;10333:6;10330:1;10327:13;10319:280;;;10392:13;;10434:9;;-1:-1:-1;;;;;10430:35:75;10418:48;;10506:11;;10500:18;10486:12;;;10479:40;10539:12;;;;10574:15;;;;10462:1;10348:9;10319:280;;;-1:-1:-1;10616:3:75;;9805:820;-1:-1:-1;;;;;;;9805:820:75:o;10630:347::-;10681:8;10691:6;10745:3;10738:4;10730:6;10726:17;10722:27;10712:55;;10763:1;10760;10753:12;10712:55;-1:-1:-1;10786:20:75;;-1:-1:-1;;;;;10818:30:75;;10815:50;;;10861:1;10858;10851:12;10815:50;10898:4;10890:6;10886:17;10874:29;;10950:3;10943:4;10934:6;10926;10922:19;10918:30;10915:39;10912:59;;;10967:1;10964;10957:12;10912:59;10630:347;;;;;:::o;10982:1436::-;11130:6;11138;11146;11154;11162;11170;11178;11186;11194;11202;11255:3;11243:9;11234:7;11230:23;11226:33;11223:53;;;11272:1;11269;11262:12;11223:53;11308:9;11295:23;11285:33;;11369:2;11358:9;11354:18;11341:32;-1:-1:-1;;;;;11433:2:75;11425:6;11422:14;11419:34;;;11449:1;11446;11439:12;11419:34;11488:58;11538:7;11529:6;11518:9;11514:22;11488:58;:::i;:::-;11565:8;;-1:-1:-1;11462:84:75;-1:-1:-1;11653:2:75;11638:18;;11625:32;;-1:-1:-1;11669:16:75;;;11666:36;;;11698:1;11695;11688:12;11666:36;11737:60;11789:7;11778:8;11767:9;11763:24;11737:60;:::i;:::-;11816:8;;-1:-1:-1;11711:86:75;-1:-1:-1;11904:2:75;11889:18;;11876:32;;-1:-1:-1;11920:16:75;;;11917:36;;;11949:1;11946;11939:12;11917:36;11988:60;12040:7;12029:8;12018:9;12014:24;11988:60;:::i;:::-;12067:8;;-1:-1:-1;11962:86:75;-1:-1:-1;12155:3:75;12140:19;;12127:33;;-1:-1:-1;12172:16:75;;;12169:36;;;12201:1;12198;12191:12;12169:36;;12240:60;12292:7;12281:8;12270:9;12266:24;12240:60;:::i;:::-;12319:8;;-1:-1:-1;12214:86:75;-1:-1:-1;12373:39:75;;-1:-1:-1;12407:3:75;12392:19;;12373:39;:::i;:::-;12363:49;;10982:1436;;;;;;;;;;;;;:::o;12423:730::-;12550:6;12558;12566;12619:2;12607:9;12598:7;12594:23;12590:32;12587:52;;;12635:1;12632;12625:12;12587:52;12674:9;12661:23;12693:31;12718:5;12693:31;:::i;:::-;12743:5;-1:-1:-1;12799:2:75;12784:18;;12771:32;-1:-1:-1;;;;;12852:14:75;;;12849:34;;;12879:1;12876;12869:12;12849:34;12902:61;12955:7;12946:6;12935:9;12931:22;12902:61;:::i;:::-;12892:71;;13016:2;13005:9;13001:18;12988:32;12972:48;;13045:2;13035:8;13032:16;13029:36;;;13061:1;13058;13051:12;13029:36;;13084:63;13139:7;13128:8;13117:9;13113:24;13084:63;:::i;13158:409::-;13228:6;13236;13289:2;13277:9;13268:7;13264:23;13260:32;13257:52;;;13305:1;13302;13295:12;13257:52;13345:9;13332:23;-1:-1:-1;;;;;13370:6:75;13367:30;13364:50;;;13410:1;13407;13400:12;13364:50;13449:58;13499:7;13490:6;13479:9;13475:22;13449:58;:::i;:::-;13526:8;;13423:84;;-1:-1:-1;13158:409:75;-1:-1:-1;;;;13158:409:75:o;13572:375::-;13643:8;13653:6;13707:3;13700:4;13692:6;13688:17;13684:27;13674:55;;13725:1;13722;13715:12;13674:55;-1:-1:-1;13748:20:75;;-1:-1:-1;;;;;13780:30:75;;13777:50;;;13823:1;13820;13813:12;13777:50;13860:4;13852:6;13848:17;13836:29;;13920:3;13913:4;13903:6;13900:1;13896:14;13888:6;13884:27;13880:38;13877:47;13874:67;;;13937:1;13934;13927:12;13952:1783;14205:6;14213;14221;14229;14237;14245;14253;14261;14269;14277;14330:3;14318:9;14309:7;14305:23;14301:33;14298:53;;;14347:1;14344;14337:12;14298:53;14387:9;14374:23;-1:-1:-1;;;;;14457:2:75;14449:6;14446:14;14443:34;;;14473:1;14470;14463:12;14443:34;14512:78;14582:7;14573:6;14562:9;14558:22;14512:78;:::i;:::-;14609:8;;-1:-1:-1;14486:104:75;-1:-1:-1;14697:2:75;14682:18;;14669:32;;-1:-1:-1;14713:16:75;;;14710:36;;;14742:1;14739;14732:12;14710:36;14781:80;14853:7;14842:8;14831:9;14827:24;14781:80;:::i;:::-;14880:8;;-1:-1:-1;14755:106:75;-1:-1:-1;14968:2:75;14953:18;;14940:32;;-1:-1:-1;14984:16:75;;;14981:36;;;15013:1;15010;15003:12;14981:36;15052:80;15124:7;15113:8;15102:9;15098:24;15052:80;:::i;:::-;15151:8;;-1:-1:-1;15026:106:75;-1:-1:-1;15239:2:75;15224:18;;15211:32;;-1:-1:-1;15255:16:75;;;15252:36;;;15284:1;15281;15274:12;15252:36;15323:80;15395:7;15384:8;15373:9;15369:24;15323:80;:::i;:::-;15422:8;;-1:-1:-1;15297:106:75;-1:-1:-1;15510:3:75;15495:19;;15482:33;;-1:-1:-1;15527:16:75;;;15524:36;;;15556:1;15553;15546:12;15524:36;;15595:80;15667:7;15656:8;15645:9;15641:24;15595:80;:::i;:::-;15569:106;;15694:8;15684:18;;;15721:8;15711:18;;;13952:1783;;;;;;;;;;;;;:::o;15740:156::-;15806:20;;15866:4;15855:16;;15845:27;;15835:55;;15886:1;15883;15876:12;15901:734;16012:6;16020;16028;16036;16044;16052;16060;16113:3;16101:9;16092:7;16088:23;16084:33;16081:53;;;16130:1;16127;16120:12;16081:53;16169:9;16156:23;16188:31;16213:5;16188:31;:::i;:::-;16238:5;-1:-1:-1;16295:2:75;16280:18;;16267:32;16308:33;16267:32;16308:33;:::i;:::-;16360:7;-1:-1:-1;16414:2:75;16399:18;;16386:32;;-1:-1:-1;16465:2:75;16450:18;;16437:32;;-1:-1:-1;16488:37:75;16520:3;16505:19;;16488:37;:::i;:::-;16478:47;;16572:3;16561:9;16557:19;16544:33;16534:43;;16624:3;16613:9;16609:19;16596:33;16586:43;;15901:734;;;;;;;;;;:::o;16640:388::-;16708:6;16716;16769:2;16757:9;16748:7;16744:23;16740:32;16737:52;;;16785:1;16782;16775:12;16737:52;16824:9;16811:23;16843:31;16868:5;16843:31;:::i;:::-;16893:5;-1:-1:-1;16950:2:75;16935:18;;16922:32;16963:33;16922:32;16963:33;:::i;:::-;17015:7;17005:17;;;16640:388;;;;;:::o;17033:380::-;17112:1;17108:12;;;;17155;;;17176:61;;17230:4;17222:6;17218:17;17208:27;;17176:61;17283:2;17275:6;17272:14;17252:18;17249:38;17246:161;;;17329:10;17324:3;17320:20;17317:1;17310:31;17364:4;17361:1;17354:15;17392:4;17389:1;17382:15;17418:893;17511:6;17564:3;17552:9;17543:7;17539:23;17535:33;17532:53;;;17581:1;17578;17571:12;17532:53;17614:2;17608:9;17656:3;17648:6;17644:16;17726:6;17714:10;17711:22;-1:-1:-1;;;;;17678:10:75;17675:34;17672:62;17669:88;;;17737:18;;:::i;:::-;17773:2;17766:22;17810:16;;17835:28;17810:16;17835:28;:::i;:::-;17872:21;;17938:2;17923:18;;17917:25;17951:30;17917:25;17951:30;:::i;:::-;18009:2;17997:15;;17990:32;18067:2;18052:18;;18046:25;18080:30;18046:25;18080:30;:::i;:::-;18138:2;18126:15;;18119:32;18196:2;18181:18;;18175:25;18209:30;18175:25;18209:30;:::i;:::-;18267:2;18255:15;;18248:32;18259:6;17418:893;-1:-1:-1;;;17418:893:75:o;18506:251::-;18576:6;18629:2;18617:9;18608:7;18604:23;18600:32;18597:52;;;18645:1;18642;18635:12;18597:52;18677:9;18671:16;18696:31;18721:5;18696:31;:::i;18762:356::-;18964:2;18946:21;;;18983:18;;;18976:30;19042:34;19037:2;19022:18;;19015:62;19109:2;19094:18;;18762:356::o;19123:355::-;19325:2;19307:21;;;19364:2;19344:18;;;19337:30;19403:33;19398:2;19383:18;;19376:61;19469:2;19454:18;;19123:355::o;20928:127::-;20989:10;20984:3;20980:20;20977:1;20970:31;21020:4;21017:1;21010:15;21044:4;21041:1;21034:15;21060:128;21100:3;21131:1;21127:6;21124:1;21121:13;21118:39;;;21137:18;;:::i;:::-;-1:-1:-1;21173:9:75;;21060:128::o;25021:127::-;25082:10;25077:3;25073:20;25070:1;25063:31;25113:4;25110:1;25103:15;25137:4;25134:1;25127:15;25153:184;25223:6;25276:2;25264:9;25255:7;25251:23;25247:32;25244:52;;;25292:1;25289;25282:12;25244:52;-1:-1:-1;25315:16:75;;25153:184;-1:-1:-1;25153:184:75:o;25832:435::-;25885:3;25923:5;25917:12;25950:6;25945:3;25938:19;25976:4;26005:2;26000:3;25996:12;25989:19;;26042:2;26035:5;26031:14;26063:1;26073:169;26087:6;26084:1;26081:13;26073:169;;;26148:13;;26136:26;;26182:12;;;;26217:15;;;;26109:1;26102:9;26073:169;;26272:1086;26644:4;26674:9;26731:6;26644:4;26765:220;26779:4;26776:1;26773:11;26765:220;;;26842:13;;-1:-1:-1;;;;;26838:39:75;26826:52;;26901:4;26925:12;;;;26960:15;;;;26874:1;26792:9;26765:220;;;26769:3;;;27021;27016:2;27005:9;27001:18;26994:31;27048:57;27100:3;27089:9;27085:19;27077:6;27048:57;:::i;:::-;27153:9;27145:6;27141:22;27136:2;27125:9;27121:18;27114:50;27187:44;27224:6;27216;27187:44;:::i;:::-;27173:58;;27280:9;27272:6;27268:22;27262:3;27251:9;27247:19;27240:51;27308:44;27345:6;27337;27308:44;:::i;30488:345::-;30685:6;30680:3;30673:19;30736:6;30728;30723:2;30718:3;30714:12;30701:42;30655:3;30766:16;;30784:2;30762:25;30796:13;;;30762:25;30488:345;-1:-1:-1;;30488:345:75:o;30838:370::-;30995:3;31033:6;31027:13;31049:53;31095:6;31090:3;31083:4;31075:6;31071:17;31049:53;:::i;:::-;31124:16;;;;31149:21;;;-1:-1:-1;31197:4:75;31186:16;;30838:370;-1:-1:-1;30838:370:75:o;31573:271::-;31756:6;31748;31743:3;31730:33;31712:3;31782:16;;31807:13;;;31782:16;31573:271;-1:-1:-1;31573:271:75:o;32209:266::-;32297:6;32292:3;32285:19;32349:6;32342:5;32335:4;32330:3;32326:14;32313:43;-1:-1:-1;32401:1:75;32376:16;;;32394:4;32372:27;;;32365:38;;;;32457:2;32436:15;;;-1:-1:-1;;32432:29:75;32423:39;;;32419:50;;32209:266::o;32480:1025::-;32890:6;32879:9;32872:25;32933:3;32928:2;32917:9;32913:18;32906:31;32853:4;32960:62;33017:3;33006:9;33002:19;32994:6;32986;32960:62;:::i;:::-;33070:9;33062:6;33058:22;33053:2;33042:9;33038:18;33031:50;33104:49;33146:6;33138;33130;33104:49;:::i;:::-;33090:63;;33201:9;33193:6;33189:22;33184:2;33173:9;33169:18;33162:50;33235:49;33277:6;33269;33261;33235:49;:::i;:::-;33221:63;;33333:9;33325:6;33321:22;33315:3;33304:9;33300:19;33293:51;33361:49;33403:6;33395;33387;33361:49;:::i;:::-;33441:3;33426:19;;33419:35;;;;-1:-1:-1;;33485:3:75;33470:19;33463:36;33353:57;32480:1025;-1:-1:-1;;;;;;;;;32480:1025:75:o;33510:562::-;-1:-1:-1;;;;;33795:32:75;;33777:51;;33864:2;33859;33844:18;;33837:30;;;-1:-1:-1;;33890:56:75;;33927:18;;33919:6;33890:56;:::i;:::-;33994:9;33986:6;33982:22;33977:2;33966:9;33962:18;33955:50;34022:44;34059:6;34051;34022:44;:::i;:::-;34014:52;33510:562;-1:-1:-1;;;;;;33510:562:75:o;35185:315::-;35370:6;35359:9;35352:25;35413:2;35408;35397:9;35393:18;35386:30;35333:4;35433:61;35490:2;35479:9;35475:18;35467:6;35459;35433:61;:::i;:::-;35425:69;35185:315;-1:-1:-1;;;;;35185:315:75:o;35923:407::-;35988:5;-1:-1:-1;;;;;36014:6:75;36011:30;36008:56;;;36044:18;;:::i;:::-;36082:57;36127:2;36106:15;;-1:-1:-1;;36102:29:75;36133:4;36098:40;36082:57;:::i;:::-;36073:66;;36162:6;36155:5;36148:21;36202:3;36193:6;36188:3;36184:16;36181:25;36178:45;;;36219:1;36216;36209:12;36178:45;36268:6;36263:3;36256:4;36249:5;36245:16;36232:43;36322:1;36315:4;36306:6;36299:5;36295:18;36291:29;36284:40;35923:407;;;;;:::o;36335:1096::-;36473:9;36508:64;36524:47;36564:6;36524:47;:::i;36508:64::-;36594:3;36618:6;36613:3;36606:19;36644:4;36673:2;36668:3;36664:12;36657:19;;36717:6;36714:1;36710:14;36703:5;36699:26;36748:14;36740:6;36737:26;36734:46;;;36776:1;36773;36766:12;36734:46;36800:5;36814:584;36830:6;36825:3;36822:15;36814:584;;;36916:3;36903:17;-1:-1:-1;;;;;36939:11:75;36936:35;36933:125;;;37012:1;37041:2;37037;37030:14;36933:125;37081:23;;37146:14;37139:4;37131:13;;37127:34;37117:132;;37203:1;37232:2;37228;37221:14;37117:132;37274:81;37340:14;37335:2;37322:16;37317:2;37313;37309:11;37274:81;:::i;:::-;37262:94;;-1:-1:-1;37376:12:75;;;;36847;;36814:584;;;-1:-1:-1;37420:5:75;;36335:1096;-1:-1:-1;;;;;;36335:1096:75:o;37436:1094::-;37572:9;37607:64;37623:47;37663:6;37623:47;:::i;37607:64::-;37693:3;37717:6;37712:3;37705:19;37743:4;37772:2;37767:3;37763:12;37756:19;;37816:6;37813:1;37809:14;37802:5;37798:26;37847:14;37839:6;37836:26;37833:46;;;37875:1;37872;37865:12;37833:46;37899:5;37913:584;37929:6;37924:3;37921:15;37913:584;;;38015:3;38002:17;-1:-1:-1;;;;;38038:11:75;38035:35;38032:125;;;38111:1;38140:2;38136;38129:14;38032:125;38180:23;;38245:14;38238:4;38230:13;;38226:34;38216:132;;38302:1;38331:2;38327;38320:14;38216:132;38373:81;38439:14;38434:2;38421:16;38416:2;38412;38408:11;38373:81;:::i;:::-;38361:94;;-1:-1:-1;38475:12:75;;;;37946;;37913:584;;38880:135;38919:3;-1:-1:-1;;38940:17:75;;38937:43;;;38960:18;;:::i;:::-;-1:-1:-1;39007:1:75;38996:13;;38880:135::o;43154:521::-;43231:4;43237:6;43297:11;43284:25;43391:2;43387:7;43376:8;43360:14;43356:29;43352:43;43332:18;43328:68;43318:96;;43410:1;43407;43400:12;43318:96;43437:33;;43489:20;;;-1:-1:-1;;;;;;43521:30:75;;43518:50;;;43564:1;43561;43554:12;43518:50;43597:4;43585:17;;-1:-1:-1;43628:14:75;43624:27;;;43614:38;;43611:58;;;43665:1;43662;43655:12;43680:614;43975:6;43967;43962:3;43949:33;-1:-1:-1;;44117:2:75;44113:15;;;44109:24;;44001:16;;;;44098:36;;;44167:15;;;;44163:24;;;44158:2;44150:11;;44143:45;44212:2;44204:11;;44197:27;44248:2;44240:11;;44233:27;44284:3;44276:12;;;-1:-1:-1;43680:614:75:o;44299:182::-;44356:6;44409:2;44397:9;44388:7;44384:23;44380:32;44377:52;;;44425:1;44422;44415:12;44377:52;44448:27;44465:9;44448:27;:::i;44835:610::-;45128:6;45117:9;45110:25;45171:3;45166:2;45155:9;45151:18;45144:31;45091:4;45192:62;45249:3;45238:9;45234:19;45226:6;45218;45192:62;:::i;:::-;45184:70;;45302:4;45294:6;45290:17;45285:2;45274:9;45270:18;45263:45;45344:6;45339:2;45328:9;45324:18;45317:34;45388:6;45382:3;45371:9;45367:19;45360:35;45432:6;45426:3;45415:9;45411:19;45404:35;44835:610;;;;;;;;;;:::o;46615:125::-;46655:4;46683:1;46680;46677:8;46674:34;;;46688:18;;:::i;:::-;-1:-1:-1;46725:9:75;;46615:125::o;46745:1215::-;46908:6;46916;46924;46932;46940;46948;46956;46964;46972;46980;46988:7;46997;47051:3;47039:9;47030:7;47026:23;47022:33;47019:53;;;47068:1;47065;47058:12;47019:53;47100:9;47094:16;47119:31;47144:5;47119:31;:::i;:::-;47219:2;47204:18;;47198:25;47169:5;;-1:-1:-1;47232:33:75;47198:25;47232:33;:::i;:::-;47331:2;47316:18;;47310:25;47380:2;47365:18;;47359:25;47284:7;;-1:-1:-1;47310:25:75;-1:-1:-1;47393:33:75;47359:25;47393:33;:::i;:::-;47445:7;47435:17;;;47492:3;47481:9;47477:19;47471:26;47461:36;;47537:3;47526:9;47522:19;47516:26;47506:36;;47587:3;47576:9;47572:19;47566:26;47601:30;47623:7;47601:30;:::i;:::-;47650:7;47640:17;;;47697:3;47686:9;47682:19;47676:26;47666:36;;47742:3;47731:9;47727:19;47721:26;47711:36;;47787:3;47776:9;47772:19;47766:26;47756:36;;47833:3;47822:9;47818:19;47812:26;47801:37;;47883:3;47872:9;47868:19;47862:26;47897:30;47919:7;47897:30;:::i;:::-;47947:7;47936:18;;;46745:1215;;;;;;;;;;;;;;:::o;48573:204::-;48611:3;48647:4;48644:1;48640:12;48679:4;48676:1;48672:12;48714:3;48708:4;48704:14;48699:3;48696:23;48693:49;;;48722:18;;:::i;:::-;48758:13;;48573:204;-1:-1:-1;;;48573:204:75:o;50139:1104::-;50269:3;50298:1;50331:6;50325:13;50361:3;50383:1;50411:9;50407:2;50403:18;50393:28;;50471:2;50460:9;50456:18;50493;50483:61;;50537:4;50529:6;50525:17;50515:27;;50483:61;50563:2;50611;50603:6;50600:14;50580:18;50577:38;50574:165;;;-1:-1:-1;;;50638:33:75;;50694:4;50691:1;50684:15;50724:4;50645:3;50712:17;50574:165;50755:18;50782:104;;;;50900:1;50895:323;;;;50748:470;;50782:104;-1:-1:-1;;50815:24:75;;50803:37;;50860:16;;;;-1:-1:-1;50782:104:75;;50895:323;50086:1;50079:14;;;50123:4;50110:18;;50993:1;51007:165;51021:6;51018:1;51015:13;51007:165;;;51099:14;;51086:11;;;51079:35;51142:16;;;;51036:10;;51007:165;;;51011:3;;51201:6;51196:3;51192:16;51185:23;;50748:470;-1:-1:-1;51234:3:75;;50139:1104;-1:-1:-1;;;;;;;;50139:1104:75:o;51742:127::-;51803:10;51798:3;51794:20;51791:1;51784:31;51834:4;51831:1;51824:15;51858:4;51855:1;51848:15;51874:168;51914:7;51980:1;51976;51972:6;51968:14;51965:1;51962:21;51957:1;51950:9;51943:17;51939:45;51936:71;;;51987:18;;:::i;:::-;-1:-1:-1;52027:9:75;;51874:168::o;52047:217::-;52087:1;52113;52103:132;;52157:10;52152:3;52148:20;52145:1;52138:31;52192:4;52189:1;52182:15;52220:4;52217:1;52210:15;52103:132;-1:-1:-1;52249:9:75;;52047:217::o;52548:245::-;52615:6;52668:2;52656:9;52647:7;52643:23;52639:32;52636:52;;;52684:1;52681;52674:12;52636:52;52716:9;52710:16;52735:28;52757:5;52735:28;:::i;53974:274::-;54103:3;54141:6;54135:13;54157:53;54203:6;54198:3;54191:4;54183:6;54179:17;54157:53;:::i;:::-;54226:16;;;;;53974:274;-1:-1:-1;;53974:274:75:o", "language": "Solidity", "natspec": {"details": "DatatokenTemplate is an ERC20 compliant token template      Used by the factory contract as a bytecode reference to      deploy new Datatokens.", "kind": "dev", "methods": {"addMinter(address)": {"details": "addMinter      Only ERC20Deployer (at 721 level) can update.      There can be multiple minters", "params": {"_minter": "new minter address"}}, "addPaymentManager(address)": {"details": "addPaymentManager (can set who's going to collect fee when consuming orders)      Only ERC20Deployer (at 721 level) can update.      There can be multiple paymentCollectors", "params": {"_paymentManager": "new minter address"}}, "allowance(address,address)": {"details": "See {IERC20-allowance}."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "burn(uint256)": {"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."}, "burnFrom(address,uint256)": {"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."}, "cap()": {"details": "cap      it returns the capital.", "returns": {"_0": "Datatoken cap."}}, "cleanFrom721()": {"details": "cleanFrom721()      OnlyNFT(721) Contract can call it.      This function allows to remove all minters, feeManagers and reset the paymentCollector       This function is used when transferring an NFT to a new owner, so that permissions at ERC20level (minter,feeManager,paymentCollector) can be reset."}, "cleanPermissions()": {"details": "cleanPermissions()      Only NFT Owner (at 721 level) can call it.      This function allows to remove all minters, feeManagers and reset the paymentCollector"}, "createDispenser(address,uint256,uint256,bool,address)": {"details": "createDispenser      Creates a new Dispenser", "params": {"_dispenser": "dispenser contract address", "allowedSwapper": "- only account that can ask tokens. set address(0) if not required", "maxBalance": "- max balance of requester.", "maxTokens": "- max tokens to dispense", "withMint": "- true if we want to allow the dispenser to be a minter"}}, "createFixedRate(address,address[],uint256[])": {"details": "createFixedRate      Creates a new FixedRateExchange setup.", "params": {"addresses": "array of addresses [baseToken,owner,marketFeeCollector]", "fixedPriceAddress": "fixedPriceAddress", "uints": "array of uints [baseTokenDecimals,datatokenDecimals, fixedRate, marketFee, withMint]"}, "returns": {"exchangeId": "exchangeId"}}, "decimals()": {"details": "decimals      It returns the token decimals.      how many supported decimal points", "returns": {"_0": "Datatoken decimals."}}, "decreaseAllowance(address,uint256)": {"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."}, "deployPool(uint256[],uint256[],address[])": {"details": "deployPool      Function to deploy new Pool with 1SS. It also has a vesting schedule.     This function can only be called ONCE and ONLY if no token have been minted yet.      Requires baseToken approval", "params": {"addresses": "refers to an array of addresses passed by user                     [0]  = side staking contract address                     [1]  = baseToken address for pool creation(OCEAN or other)                     [2]  = baseTokenSender user which will provide the baseToken amount for initial liquidity                     [3]  = publisherAddress user which will be assigned the vested amount                     [4]  = marketFeeCollector marketFeeCollector address [5] = poolTemplateAddress", "ssParams": "params for the ssContract.                      [0]  = rate (wei)                     [1]  = baseToken decimals                     [2]  = vesting amount (wei)                     [3]  = vested blocks                     [4]  = initial liquidity in baseToken for pool creation", "swapFees": "swapFees (swapFee, swapMarketFee), swapOceanFee will be set automatically later                     [0] = swapFee for LP Providers                     [1] = swapFee for marketplace runner ."}}, "getDispensers()": {"details": "getDispensers      Returns the list of dispensers created for this datatoken"}, "getERC721Address()": {"details": "getERC721Address      It returns the parent ERC721", "returns": {"_0": "ERC721 address."}}, "getFixedRates()": {"details": "getFixedRates      Returns the list of fixedRateExchanges created for this datatoken"}, "getId()": {"details": "getId      Return template id in case we need different ABIs.       If you construct your own template, please make sure to change the hardcoded value"}, "getPaymentCollector()": {"details": "getPaymentCollector      It returns the current paymentCollector", "returns": {"_0": "paymentCollector address"}}, "getPermissions(address)": {"details": "getPermissions      Returns list of roles for an user", "params": {"user": "user address"}}, "getPools()": {"details": "getPools      Returns the list of pools created for this datatoken"}, "getPublishingMarketFee()": {"details": "getPublishingMarketFee      Get publishingMarket Fee      This function allows to get the current fee set by the publishing market"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "initialize(string[],address[],address[],uint256[],bytes[])": {"details": "initialize      Called prior contract initialization (e.g creating new Datatoken instance)      Calls private _initialize function. Only if contract is not initialized.", "params": {"addresses_": "refers to an array of addresses passed by user                     [0]  = minter account who can mint datatokens (can have multiple minters)                     [1]  = paymentCollector  initial paymentCollector  for this DT                     [2]  = publishing Market Address                     [3]  = publishing Market Fee Token", "bytes_": "refers to an array of bytes                     Currently not used, usefull for future templates", "factoryAddresses_": "refers to an array of addresses passed by the factory                     [0]  = erc721Address                     [1]  = router address", "strings_": "refers to an array of strings                      [0] = name token                      [1] = symbol", "uints_": "refers to an array of uints                     [0] = cap_ the total ERC20 cap                     [1] = publishing Market Fee Amount"}}, "isERC20Deployer(address)": {"details": "isERC20Deployer      returns true if address has deployERC20 role"}, "isInitialized()": {"details": "isInitialized      It checks whether the contract is initialized.", "returns": {"_0": "true if the contract is initialized."}}, "isMinter(address)": {"details": "isMinter      Check if an address has the minter role", "params": {"account": "refers to an address that is checked"}}, "mint(address,uint256)": {"details": "mint      Only the minter address can call it.      msg.value should be higher than zero and gt or eq minting fee", "params": {"account": "refers to an address that token is going to be minted to.", "value": "refers to amount of tokens that is going to be minted."}}, "name()": {"details": "name      It returns the token name.", "returns": {"_0": "Datatoken name."}}, "orderExecuted(bytes32,bytes,bytes,bytes,bytes,address)": {"details": "orderExecuted      Providers should call this to prove order execution", "params": {"consumerAddress": "consumer address", "consumerData": "consumer data", "consumerSignature": "consumer signature", "orderTxId": "order tx", "providerData": "provider data", "providerSignature": "provider signature"}}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "permit      used for signed approvals, see ERC20Template test for more details", "params": {"deadline": "deadline after which signed message is no more valid", "owner": "user who signed the message", "r": "parameters from signed message", "s": "parameters from signed message", "spender": "spender", "v": "parameters from signed message", "value": "token amount"}}, "removeMinter(address)": {"details": "removeMinter      Only ERC20Deployer (at 721 level) can update.      There can be multiple minters", "params": {"_minter": "minter address to remove"}}, "removePaymentManager(address)": {"details": "removePaymentManager      Only ERC20Deployer (at 721 level) can update.      There can be multiple paymentManagers", "params": {"_paymentManager": "_paymentManager address to remove"}}, "reuseOrder(bytes32,(address,address,uint256,uint8,bytes32,bytes32,uint256,bytes))": {"details": "reuseOrder      called by payer or consumer having a valid order, but with expired provider access      Pays the provider fee again, but it will not require a new datatoken payment      Requires previous approval of provider fee.", "params": {"_providerFee": "provider feee", "orderTxId": "previous valid order"}}, "setData(bytes)": {"details": "setData      Only ERC20Deployer (at 721 level) can call it.      This function allows to store data with a preset key (keccak256(ERC20Address)) into NFT 725 Store", "params": {"_value": "data to be set with this key"}}, "setPaymentCollector(address)": {"details": "setPaymentCollector      Only feeManager can call it      This function allows to set a newPaymentCollector (receives DT when consuming) If not set the paymentCollector is the NFT Owner", "params": {"_newPaymentCollector": "new fee collector "}}, "setPublishingMarketFee(address,address,uint256)": {"details": "setPublishingMarketFee      Only publishMarketFeeAddress can call it      This function allows to set the fee required by the publisherMarket", "params": {"_publishMarketFeeAddress": "new _publishMarketFeeAddress", "_publishMarketFeeAmount": "new fee amount", "_publishMarketFeeToken": "new _publishMarketFeeToken"}}, "startOrder(address,uint256,(address,address,uint256,uint8,bytes32,bytes32,uint256,bytes),(address,address,uint256))": {"details": "startOrder      called by payer or consumer prior ordering a service consume on a marketplace.      Requires previous approval of consumeFeeToken and publishMarketFeeToken", "params": {"_consumeMarketFee": "consume market fee", "_providerFee": "provider fee", "consumer": "is the consumer address (payer could be different address)", "serviceIndex": "service index in the metadata"}}, "symbol()": {"details": "symbol      It returns the token symbol.", "returns": {"_0": "Datatoken symbol."}}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}, "withdrawETH()": {"details": "withdrawETH      transfers all the accumlated ether the collector account"}}, "title": "DatatokenTemplate", "version": 1}, "offset": [1178, 38557], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 GT PUSH2 0x17E JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x8F JUMPI DUP1 PUSH4 0xE487C2E8 GT PUSH2 0x6C JUMPI DUP1 PUSH4 0xE487C2E8 EQ PUSH2 0x9A3 JUMPI DUP1 PUSH4 0xEC342AD0 EQ PUSH2 0x9B8 JUMPI DUP1 PUSH4 0xEF867FF4 EQ PUSH2 0x9D4 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x9F4 JUMPI STOP JUMPDEST DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x935 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x955 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x99B JUMPI STOP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x85C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x87C JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x89C JUMPI DUP1 PUSH4 0xAA492EF9 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xAB62F0E1 EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0xB3998BE0 EQ PUSH2 0x915 JUMPI STOP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x13A JUMPI DUP1 PUSH4 0x8B96412B GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x8B96412B EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x807 JUMPI DUP1 PUSH4 0x96FB3EAF EQ PUSH2 0x81C JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x83C JUMPI STOP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x785 JUMPI DUP1 PUSH4 0x82C03DA5 EQ PUSH2 0x7B2 JUMPI DUP1 PUSH4 0x89208F0F EQ PUSH2 0x7C7 JUMPI STOP JUMPDEST DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0x673A2A1F EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6ED JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x79D9D7F3 EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0x7DDA231E EQ PUSH2 0x763 JUMPI STOP JUMPDEST DUP1 PUSH4 0x355274EA GT PUSH2 0x234 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x4F189CB2 GT PUSH2 0x1CD JUMPI DUP1 PUSH4 0x4F189CB2 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0x57A3A31B EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0x57AD5FF6 EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0x5BFE4DA0 EQ PUSH2 0x6A4 JUMPI STOP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0x47AC7D55 EQ PUSH2 0x62D JUMPI STOP JUMPDEST DUP1 PUSH4 0x355274EA EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x361FEF49 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x397B3743 EQ PUSH2 0x5B1 JUMPI STOP JUMPDEST DUP1 PUSH4 0x191C918A GT PUSH2 0x283 JUMPI DUP1 PUSH4 0x191C918A EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x25B00243 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x50C JUMPI STOP JUMPDEST DUP1 PUSH3 0x7FFB78 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x1E88208 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x160A7925 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x439 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x2CD JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x370 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x4E5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP5 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EC8 JUMP JUMPDEST PUSH2 0xABD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F27 JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0xDCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0xEE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x44A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x4F81 JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x39D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x5AC CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x1083 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x10BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x628 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FC7 JUMP JUMPDEST PUSH2 0x1190 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x642 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x5024 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x11FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x67F CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x69F CALLDATASIZE PUSH1 0x4 PUSH2 0x4F27 JUMP JUMPDEST PUSH2 0x149D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x6BF CALLDATASIZE PUSH1 0x4 PUSH2 0x516F JUMP JUMPDEST PUSH2 0x1656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x51C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x642 PUSH2 0x1AE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0x708 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x73E CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x1B41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x75E CALLDATASIZE PUSH1 0x4 PUSH2 0x51F6 JUMP JUMPDEST PUSH2 0x1BC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x778 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x5269 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0x7A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x2073 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x7E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x5309 JUMP JUMPDEST PUSH2 0x20D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0x802 CALLDATASIZE PUSH1 0x4 PUSH2 0x53E6 JUMP JUMPDEST PUSH2 0x23BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x370 PUSH2 0x26D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x837 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0x26E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x857 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0x2765 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x877 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x2881 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x897 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x291A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x8B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x8F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0x2927 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x910 CALLDATASIZE PUSH1 0x4 PUSH2 0x5451 JUMP JUMPDEST PUSH2 0x2A43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x930 CALLDATASIZE PUSH1 0x4 PUSH2 0x54D6 JUMP JUMPDEST PUSH2 0x2BFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x950 CALLDATASIZE PUSH1 0x4 PUSH2 0x55D7 JUMP JUMPDEST PUSH2 0x2D31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0x970 CALLDATASIZE PUSH1 0x4 PUSH2 0x5645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x2F43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x2F83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x9EF CALLDATASIZE PUSH1 0x4 PUSH2 0x4FC7 JUMP JUMPDEST PUSH2 0x301C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x2EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0xA23 SWAP1 PUSH2 0x567E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA4F SWAP1 PUSH2 0x567E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA9C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA71 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA9C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA7F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 CALLER DUP5 DUP5 PUSH2 0x3046 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0xBB4 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA9 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5789 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE DUP2 ISZERO PUSH2 0xC10 JUMPI PUSH2 0xC10 DUP6 PUSH2 0x316A JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA31FFD41531537EB31BFD827A3F5372B5F62BF4DD8579E5354B280DC58490E70 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6B14D005 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP7 SWAP1 MSTORE CALLER PUSH1 0x84 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xD629A00A SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2B DUP5 DUP5 DUP5 PUSH2 0x3241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0xDBD DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x3046 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3A SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0xEC1 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB6 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xEDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x3411 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0xFE0 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD5 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x3483 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5789 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE NUMBER PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x526E31449EA46E2AECF9B480C8D7DFA191348EF74FFDF75B445A6AB726DAA6FF SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH2 0x107A DUP2 PUSH2 0x34E3 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xAB3 SWAP2 DUP6 SWAP1 PUSH2 0x10BA SWAP1 DUP7 SWAP1 PUSH2 0x57D6 JUMP JUMPDEST PUSH2 0x3046 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A204E4F54204D494E54455200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1134 DUP3 PUSH2 0x112E PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x38F5 JUMP JUMPDEST GT ISZERO PUSH2 0x1182 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44617461746F6B656E54656D706C6174653A2063617020657863656564656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x118C DUP3 DUP3 PUSH2 0x3901 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xEE6 CALLER DUP3 PUSH2 0x39E0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x15 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA9C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11D4 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1248 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A206E6F74204E46544F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x12D4 PUSH2 0x3B2E JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1369 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1364 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD JUMPDEST DUP1 PUSH2 0x13EC JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13E1 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A204E4F54205041594D454E54204D414E4147 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x22A91037B91027ABA722A9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x1455 DUP2 PUSH2 0x3FFC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 CALLER SWAP2 PUSH32 0x4D7694D695C57CC54947177C8E8A0E61AAE664E9223492A798C32FADFC6419CC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A206E6F74207075626C6973684D61726B6574 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x46656541646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1571 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205F7075626C6973684D61726B657446656541646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205F7075626C6973684D61726B6574466565546F6B656E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0xE DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xF DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x2AB4B3FC023109C2D0DA394BDA239166C833F63C42B71B67ED4B836DCA0DDFE SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16C8 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x174F JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1720 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1744 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x176B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x178E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5789 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE PUSH2 0x179C PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x17F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A20746F6B656E7320616C7265616479206D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1B9D1959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x1818 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x180B JUMPI PUSH2 0x180B PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x316A JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x510F3465 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x186B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x188F SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST DUP5 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x18A2 JUMPI PUSH2 0x18A2 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x1938 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x51 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A2056657374696E6720706572696F6420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F206C6F772E2053656520466163746F7279526F757465722E6D696E56657374 PUSH1 0x64 DUP3 ADD MSTORE PUSH17 0x696E67506572696F64496E426C6F636B73 PUSH1 0x78 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1970 JUMPI PUSH2 0x1970 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEE3BC635 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xEE3BC635 SWAP1 PUSH2 0x19B8 SWAP1 DUP5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x584D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FB SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP5 MLOAD SWAP2 SWAP4 POP PUSH32 0xD02DA1BEC30F7F750AA0A131745DFB9CE96767C45A192DC26409F5D690E0B967 SWAP2 DUP5 SWAP2 DUP7 SWAP2 PUSH2 0x1A7C JUMPI PUSH2 0x1A7C PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A97 JUMPI PUSH2 0x1A97 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1ACC SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x7 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x13 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA9C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11D4 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4D DUP4 CALLER PUSH2 0x970 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x1BB8 DUP4 CALLER DUP5 DUP5 SUB PUSH2 0x3046 JUMP JUMPDEST PUSH2 0x1BC2 DUP4 DUP4 PUSH2 0x39E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1BEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5789 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 GT ISZERO PUSH2 0x1C64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682064617461746F6B656E7320746F207374617274204F PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x393232B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE NUMBER PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH32 0xE1C4FA794EDFA8F619B8257A077398950357B9C6398528F94480307352F9AFCC SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0xF SLOAD GT DUP1 ISZERO PUSH2 0x1CDF JUMPI POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1CF5 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1D6A JUMPI PUSH1 0xE SLOAD PUSH1 0xD SLOAD PUSH1 0xF SLOAD PUSH2 0x1D1D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 CALLER SWAP3 SWAP2 AND SWAP1 PUSH2 0x401E JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xD SLOAD PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH32 0x4049A448AC6F0284A98D2CB9199E73605944EA5BEC901A037F88C84703DE82B2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD CALLDATALOAD GT DUP1 ISZERO PUSH2 0x1D97 JUMPI POP PUSH1 0x0 PUSH2 0x1D8B PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1DB9 JUMPI POP PUSH1 0x0 PUSH2 0x1DAD PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1E56 JUMPI PUSH2 0x1DE9 PUSH2 0x1DD1 PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x4E12 JUMP JUMPDEST CALLER PUSH2 0x1DDF PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x4E12 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x401E JUMP JUMPDEST PUSH2 0x1DF9 PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E0F PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6D11837F46CC09B011CF4AAE09FCADE046C020AAC088090AE4F77FF67B707972 DUP5 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x1E4D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH2 0x1E5F DUP4 PUSH2 0x34E3 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7D28354D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7D28354D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ECD SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EE4 PUSH2 0x1EDA PUSH2 0x2F83 JUMP JUMPDEST PUSH2 0x897 DUP5 DUP5 PUSH2 0x416C JUMP JUMPDEST PUSH2 0x1F30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420445420746F207075626C69736865720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1A81876D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x1FA5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1A81876D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F9F SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST DUP3 PUSH2 0x291A JUMP JUMPDEST PUSH2 0x1FF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420445420746F204F50430000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x14 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x206A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2022 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A204E4F542037323120436F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x212B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465722063616E6E6F742062652074686520636F6E73756D657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x217D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x58B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21A4 SWAP3 SWAP2 SWAP1 PUSH2 0x58D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2206 DUP3 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x4178 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x225C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7669646572207369676E617475726520636865636B206661696C656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2272 SWAP3 SWAP2 SWAP1 PUSH2 0x58F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2299 SWAP3 SWAP2 SWAP1 PUSH2 0x58D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22FB DUP3 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x4178 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E73756D6572207369676E617475726520636865636B206661696C656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC9A10280E9C735C63092FA5431E6ACB3ED342E08B69A083E5E676994EB7070F9 DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0x23A8 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x592D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x240D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2431 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x24B8 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2489 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24AD SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x24D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x24F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5789 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x2514 JUMPI PUSH2 0x2514 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x252B JUMPI PUSH2 0x252B DUP5 PUSH2 0x316A JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x82449375 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x82449375 SWAP1 PUSH2 0x255F SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x599F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x257E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25A2 SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x25B7 JUMPI PUSH2 0x25B7 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25DB JUMPI PUSH2 0x25DB PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB3FAC3AE95956DBAC74E63BA8DAC94081832395C8788E3049C900A7732F34805 DUP4 DUP8 PUSH1 0x40 MLOAD PUSH2 0x262F SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE SWAP3 MLOAD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC PUSH1 0x2 SWAP1 SWAP5 MUL SWAP4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP9 AND OR SWAP1 SWAP7 SSTORE MLOAD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4ED SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SWAP4 SWAP1 SWAP4 SSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0xA23 SWAP1 PUSH2 0x567E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x275B SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27D5 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x285C JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x282D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2851 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x2878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x316A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x2910 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x3046 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 CALLER DUP5 DUP5 PUSH2 0x3241 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2973 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2997 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x2A1E JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A13 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x2A3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AB3 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x2B3A JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B2F SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x2B56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0xB SLOAD PUSH4 0x1CAF8FD PUSH1 0xE3 SHL DUP4 MSTORE SWAP1 SWAP3 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE57C7E8 SWAP1 PUSH2 0x2BC7 SWAP1 DUP5 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x59DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2C6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A20746F6B656E20696E7374616E636520616C PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x2D22 PUSH2 0x2C7B DUP12 DUP14 PUSH2 0x5A59 JUMP JUMPDEST DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2D1D SWAP3 POP DUP10 SWAP2 POP DUP11 SWAP1 POP PUSH2 0x5AE0 JUMP JUMPDEST PUSH2 0x4331 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST NUMBER DUP5 LT ISZERO PUSH2 0x2D74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x115490CC8C11150E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP12 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 DUP8 PUSH2 0x2DC7 DUP4 PUSH2 0x5B5B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E40 SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2EE1 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x2F2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323044543A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x2F38 DUP10 DUP10 DUP10 PUSH2 0x3046 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2F4B PUSH2 0x2F83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x300C JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3007 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x302C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x30A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x31E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230526F6C65733A2020414C52454144592041204D494E544552000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH2 0x31F7 DUP3 PUSH2 0x4789 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x4F7E100EB1EE13E903798BD0D6AA854152E07EB05544F392B9409C12935C8095 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x32A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3307 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x337F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x33B6 SWAP1 DUP5 SWAP1 PUSH2 0x57D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3402 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFF00 NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xAEE911EEC8B2DF8F3AE0464841541B1E5F339519BD5CF51889FE8B07FECFF658 SWAP1 PUSH2 0x3472 SWAP1 TIMESTAMP SWAP1 NUMBER SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x118C DUP3 PUSH2 0x4840 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xEFA2735987005AAA89C050C0FF8CC9AE7D9079D19382081C429130F98C52D480 SWAP1 PUSH2 0x3472 SWAP1 TIMESTAMP SWAP1 NUMBER SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH2 0x3527 PUSH1 0xE0 DUP6 ADD DUP6 PUSH2 0x5B76 JUMP JUMPDEST PUSH2 0x3534 PUSH1 0x20 DUP8 ADD DUP8 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0x3544 PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x4E12 JUMP JUMPDEST DUP8 PUSH1 0x40 ADD CALLDATALOAD DUP9 PUSH1 0xC0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3563 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5BBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x358A SWAP3 SWAP2 SWAP1 PUSH2 0x58D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x35B9 PUSH1 0x80 DUP8 ADD PUSH1 0x60 DUP9 ADD PUSH2 0x5BFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP8 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 DUP9 ADD CALLDATALOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3610 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x362B SWAP1 POP PUSH1 0x20 DUP6 ADD DUP6 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3682 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C69642070726F766964657220666565 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x3692 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x36A8 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF8ED11CDAAF10ECA2B6C941FB802CB8682AFE86CAC1EB93F70D0780FA062C544 PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x36E4 PUSH1 0xE0 DUP10 ADD DUP10 PUSH2 0x5B76 JUMP JUMPDEST PUSH2 0x36F4 PUSH1 0x80 DUP12 ADD PUSH1 0x60 DUP13 ADD PUSH2 0x5BFA JUMP JUMPDEST DUP11 PUSH1 0x80 ADD CALLDATALOAD DUP12 PUSH1 0xA0 ADD CALLDATALOAD DUP13 PUSH1 0xC0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x3716 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD GT DUP1 ISZERO PUSH2 0x374B JUMPI POP PUSH1 0x0 PUSH2 0x373F PUSH1 0x40 DUP7 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x376D JUMPI POP PUSH1 0x0 PUSH2 0x3761 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x340B JUMPI PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6C45E881 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6C45E881 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37E0 SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 ISZERO PUSH2 0x380D JUMPI PUSH2 0x380A PUSH8 0xDE0B6B3A7640000 PUSH2 0x3804 PUSH1 0x40 DUP10 ADD CALLDATALOAD DUP6 PUSH2 0x498E JUMP JUMPDEST SWAP1 PUSH2 0x499A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x381D PUSH1 0x40 DUP9 ADD CALLDATALOAD DUP4 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH2 0x383E PUSH2 0x3832 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x4E12 JUMP JUMPDEST CALLER ADDRESS DUP11 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x401E JUMP JUMPDEST PUSH2 0x386F PUSH2 0x384E PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x4E12 JUMP JUMPDEST DUP3 PUSH2 0x385F PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x49A6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2BF5 JUMPI PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1A81876D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x2BF5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1A81876D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38E4 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST DUP4 PUSH2 0x385F PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 DUP3 DUP5 PUSH2 0x57D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3969 SWAP2 SWAP1 PUSH2 0x57D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3996 SWAP1 DUP5 SWAP1 PUSH2 0x57D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3A40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3AB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3AE3 SWAP1 DUP5 SWAP1 PUSH2 0x5C58 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x14 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x3B40 SWAP2 PUSH2 0x57D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B5D JUMPI PUSH2 0x3B5D PUSH2 0x5037 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3B86 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x3E6C JUMPI PUSH1 0x0 PUSH1 0x14 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3BAB JUMPI PUSH2 0x3BAB PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP DUP3 SWAP2 DUP3 SWAP2 DUP6 SWAP2 PUSH4 0x4C87087D SWAP2 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x3BE9 JUMPI PUSH2 0x3BE9 PUSH2 0x57EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C19 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C5B SWAP2 SWAP1 PUSH2 0x5C6F JUMP JUMPDEST SWAP12 POP SWAP12 POP SWAP12 POP POP POP POP POP POP POP POP POP POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x3D01 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF32F9476 PUSH1 0x14 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x3C95 JUMPI PUSH2 0x3C95 PUSH2 0x57EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CCE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP3 ISZERO PUSH2 0x3D95 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC612E48A PUSH1 0x14 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x3D29 JUMPI PUSH2 0x3D29 PUSH2 0x57EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D62 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x3DD8 PUSH1 0x14 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x3DAB JUMPI PUSH2 0x3DAB PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DE6 JUMPI POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ JUMPDEST ISZERO PUSH2 0x3E55 JUMPI PUSH1 0x14 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x3DFE JUMPI PUSH2 0x3DFE PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 DUP10 SWAP1 DUP2 LT PUSH2 0x3E2F JUMPI PUSH2 0x3E2F PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP7 PUSH2 0x3E51 DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP8 POP POP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x3E64 SWAP1 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B8C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x3FB1 JUMPI PUSH1 0x15 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3E8D JUMPI PUSH2 0x3E8D PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xF9BFAA7D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF9BFAA7D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x3F31 PUSH1 0x15 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F09 JUMPI PUSH2 0x3F09 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3F9F JUMPI PUSH1 0x15 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3F49 JUMPI PUSH2 0x3F49 PUSH2 0x57EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3F79 JUMPI PUSH2 0x3F79 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP3 PUSH2 0x3F9B DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x3FA9 DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3E70 JUMP JUMPDEST PUSH2 0x3FB9 PUSH2 0x4A09 JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x340B JUMPI PUSH2 0x3FEA DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x180B JUMPI PUSH2 0x180B PUSH2 0x57EE JUMP JUMPDEST DUP1 PUSH2 0x3FF4 DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3FCD JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4068 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x408C SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST SWAP1 POP PUSH2 0x40A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 DUP6 DUP6 PUSH2 0x4AB8 JUMP JUMPDEST PUSH2 0x40AD DUP2 DUP4 PUSH2 0x38F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4117 SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST LT ISZERO PUSH2 0x4165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E7420697320746F6F206C6F77000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 DUP3 DUP5 PUSH2 0x5C58 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x41 EQ PUSH2 0x4193 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xAB7 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x41 DUP5 ADD MLOAD PUSH1 0xFF AND PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x41BF JUMPI PUSH2 0x41BC PUSH1 0x1B DUP3 PUSH2 0x5D2C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x41D7 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x41E8 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x423B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x42D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230526F6C65733A2020414C5245414459204120464545204D414E4147 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x22A9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE PUSH2 0x42EF DUP3 PUSH2 0x4789 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xB17DA2E9910B4BA5754E8872385BA315A238BAFB5AE221FC85093C33432C40A7 SWAP2 ADD PUSH2 0x3235 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4347 JUMPI PUSH2 0x4347 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x4364 JUMPI PUSH2 0x4364 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE DUP2 AND PUSH2 0x43EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A20496E76616C6964206D696E7465722C2020 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x445A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A20496E76616C696420726F757465722C207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xA SSTORE DUP7 MLOAD DUP8 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4473 JUMPI PUSH2 0x4473 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4490 SWAP3 SWAP2 SWAP1 PUSH2 0x4D3A JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x44A4 JUMPI PUSH2 0x44A4 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x44C1 SWAP3 SWAP2 SWAP1 PUSH2 0x4D3A JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x100 MUL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 OR SWAP1 SSTORE DUP6 MLOAD PUSH2 0x4501 SWAP1 DUP8 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x180B JUMPI PUSH2 0x180B PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x451F JUMPI PUSH2 0x451F PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x45C9 JUMPI PUSH2 0x4558 DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x454B JUMPI PUSH2 0x454B PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3FFC JUMP JUMPDEST DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x456B JUMPI PUSH2 0x456B PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4D7694D695C57CC54947177C8E8A0E61AAE664E9223492A798C32FADFC6419CC TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0x45C0 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x45DC JUMPI PUSH2 0x45DC PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x461D JUMPI PUSH2 0x461D PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x465E JUMPI PUSH2 0x465E PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x2AB4B3FC023109C2D0DA394BDA239166C833F63C42B71B67ED4B836DCA0DDFE SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD CHAINID SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP1 PUSH2 0x46F9 SWAP1 PUSH1 0x8 SWAP1 PUSH2 0x5D51 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x10 SSTORE POP POP PUSH1 0xB SLOAD PUSH1 0xFF AND SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x47E5 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x47B3 JUMPI PUSH2 0x47B3 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x47D3 JUMPI PUSH2 0x47E5 JUMP JUMPDEST DUP1 PUSH2 0x47DD DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x478C JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 EQ ISZERO PUSH2 0x118C JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4871 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x48D2 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48A0 JUMPI PUSH2 0x48A0 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x48C0 JUMPI PUSH2 0x48D2 JUMP JUMPDEST DUP1 PUSH2 0x48CA DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4879 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1BC2 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH2 0x48EC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x5C58 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x48FC JUMPI PUSH2 0x48FC PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x4928 JUMPI PUSH2 0x4928 PUSH2 0x57EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP1 SLOAD DUP1 PUSH2 0x4967 JUMPI PUSH2 0x4967 PUSH2 0x5DED JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 DUP3 DUP5 PUSH2 0x5E03 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 DUP3 DUP5 PUSH2 0x5E22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1BC2 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x4AF0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x4A6F JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4A2F JUMPI PUSH2 0x4A2F PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0x4A67 DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4A0C JUMP JUMPDEST POP PUSH2 0x4A7C PUSH1 0x6 PUSH1 0x0 PUSH2 0x4DBE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x712BC71DB81927A76B8BF1EA346247BB0AD58F18E4E5C1BD4AA0EC6573E02A2B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x340B SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x49D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B45 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4BC2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1BC2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4B63 SWAP2 SWAP1 PUSH2 0x5E44 JUMP JUMPDEST PUSH2 0x1BC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4BD1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4BD9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x4C3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x4C88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4CA4 SWAP2 SWAP1 PUSH2 0x5E61 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4CE1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4CE6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4CF6 DUP3 DUP3 DUP7 PUSH2 0x4D01 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4D10 JUMPI POP DUP2 PUSH2 0xDC3 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x4D20 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP2 SWAP1 PUSH2 0x4E5B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4D46 SWAP1 PUSH2 0x567E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4D68 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x4DAE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4D81 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4DAE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4DAE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4DAE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4D93 JUMP JUMPDEST POP PUSH2 0x4DBA SWAP3 SWAP2 POP PUSH2 0x4DD8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xEE6 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4DBA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4DD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x4E0D DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDC3 DUP2 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E4A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4E32 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x340B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4E7A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4E2F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4EA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4EAC DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4EEB DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x4F09 DUP2 PUSH2 0x4EBA JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x4F19 DUP2 PUSH2 0x4DED JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4F47 DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4F57 DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4F94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4FB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FBD DUP6 DUP3 DUP7 ADD PUSH2 0x4F68 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5019 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4FF4 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xDC3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4FE0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5075 JUMPI PUSH2 0x5075 PUSH2 0x5037 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x5096 JUMPI PUSH2 0x5096 PUSH2 0x5037 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x50B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x50C6 PUSH2 0x50C1 DUP4 PUSH2 0x507D JUMP JUMPDEST PUSH2 0x504D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x50E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x5100 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x50E9 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x511C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x512C PUSH2 0x50C1 DUP4 PUSH2 0x507D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x514B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x5100 JUMPI DUP1 CALLDATALOAD PUSH2 0x5162 DUP2 PUSH2 0x4DED JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x514F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x519B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51A7 DUP8 DUP4 DUP9 ADD PUSH2 0x50A0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x51BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51C9 DUP8 DUP4 DUP9 ADD PUSH2 0x50A0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x51DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51EC DUP7 DUP3 DUP8 ADD PUSH2 0x510B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP7 SUB PUSH1 0xC0 DUP2 SLT ISZERO PUSH2 0x520D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x5218 DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x523A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5246 DUP9 DUP3 DUP10 ADD PUSH2 0x4F68 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH1 0x5F NOT DUP3 ADD SLT ISZERO PUSH2 0x525B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 PUSH1 0x60 ADD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x52B4 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5286 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x52D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x52EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x5328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x5346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5352 DUP15 DUP4 DUP16 ADD PUSH2 0x52C1 JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x536B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5377 DUP15 DUP4 DUP16 ADD PUSH2 0x52C1 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x539C DUP15 DUP4 DUP16 ADD PUSH2 0x52C1 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x53B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53C2 DUP14 DUP3 DUP15 ADD PUSH2 0x52C1 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x53D5 SWAP1 POP PUSH1 0xA0 DUP13 ADD PUSH2 0x4E02 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x53FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x5406 DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x5422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x542E DUP8 DUP4 DUP9 ADD PUSH2 0x510B JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51EC DUP7 DUP3 DUP8 ADD PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x547A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5486 DUP6 DUP3 DUP7 ADD PUSH2 0x52C1 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x54A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x54BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x5302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x54F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x550C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5518 DUP15 DUP4 DUP16 ADD PUSH2 0x5492 JUMP JUMPDEST SWAP1 SWAP13 POP SWAP11 POP PUSH1 0x20 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x553D DUP15 DUP4 DUP16 ADD PUSH2 0x5492 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5562 DUP15 DUP4 DUP16 ADD PUSH2 0x5492 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x557B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5587 DUP15 DUP4 DUP16 ADD PUSH2 0x5492 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x55A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55AD DUP14 DUP3 DUP15 ADD PUSH2 0x5492 JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4E0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x55F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x55FD DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x560D DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x5629 PUSH1 0x80 DUP10 ADD PUSH2 0x55C6 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x5663 DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x5673 DUP2 PUSH2 0x4DED JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x5692 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4F7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x56E7 JUMPI PUSH2 0x56E7 PUSH2 0x5037 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x56F5 DUP2 PUSH2 0x4EBA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x5705 DUP2 PUSH2 0x4EBA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x5718 DUP2 PUSH2 0x4EBA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x572B DUP2 PUSH2 0x4EBA JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDC3 DUP2 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x455243323054656D706C6174653A204E4F54204445504C4F59455220524F4C45 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x57E9 JUMPI PUSH2 0x57E9 PUSH2 0x57C0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5019 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5831 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP7 DUP3 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x587B JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5853 JUMP JUMPDEST POP POP POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x5892 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x581D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x58A4 DUP2 DUP7 PUSH2 0x581D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x4CF6 DUP2 DUP6 PUSH2 0x4FE0 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP2 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 ADD PUSH1 0x20 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x58E4 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x4E2F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST DUP12 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5947 PUSH1 0xE0 DUP4 ADD DUP13 DUP15 PUSH2 0x5904 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x595A DUP2 DUP12 DUP14 PUSH2 0x5904 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x596F DUP2 DUP10 DUP12 PUSH2 0x5904 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x5984 DUP2 DUP8 DUP10 PUSH2 0x5904 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0xC0 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x59C3 SWAP1 DUP4 ADD DUP6 PUSH2 0x4FE0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x59D5 DUP2 DUP6 PUSH2 0x581D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x59F9 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x5904 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x5A1B JUMPI PUSH2 0x5A1B PUSH2 0x5037 JUMP JUMPDEST PUSH2 0x5A2E PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x504D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x5A42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A67 PUSH2 0x50C1 DUP5 PUSH2 0x507D JUMP JUMPDEST DUP1 DUP5 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 POP DUP6 PUSH1 0x5 SHL DUP6 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x5A85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5AD4 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5AA6 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD CALLDATASIZE PUSH1 0x1F DUP3 ADD SLT PUSH2 0x5AB8 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5AC6 CALLDATASIZE DUP3 CALLDATALOAD DUP7 DUP5 ADD PUSH2 0x5A02 JUMP JUMPDEST DUP7 MSTORE POP SWAP4 DUP3 ADD SWAP4 DUP3 ADD PUSH2 0x5A87 JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AEE PUSH2 0x50C1 DUP5 PUSH2 0x507D JUMP JUMPDEST DUP1 DUP5 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 POP DUP6 PUSH1 0x5 SHL DUP6 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x5B0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5AD4 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5B2D JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD CALLDATASIZE PUSH1 0x1F DUP3 ADD SLT PUSH2 0x5B3F JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5B4D CALLDATASIZE DUP3 CALLDATALOAD DUP7 DUP5 ADD PUSH2 0x5A02 JUMP JUMPDEST DUP7 MSTORE POP SWAP4 DUP3 ADD SWAP4 DUP3 ADD PUSH2 0x5B0E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x5B6F JUMPI PUSH2 0x5B6F PUSH2 0x57C0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x5B8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x5BA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x5302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP8 DUP3 CALLDATACOPY PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP6 DUP7 SHL DUP2 AND SWAP7 SWAP1 SWAP2 ADD SWAP6 DUP7 MSTORE SWAP3 SWAP1 SWAP4 SHL SWAP1 SWAP2 AND PUSH1 0x14 DUP5 ADD MSTORE PUSH1 0x28 DUP4 ADD MSTORE PUSH1 0x48 DUP3 ADD MSTORE PUSH1 0x68 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC3 DUP3 PUSH2 0x55C6 JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5C2F PUSH1 0xC0 DUP4 ADD DUP9 DUP11 PUSH2 0x5904 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP7 AND PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE DUP4 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5C6A JUMPI PUSH2 0x5C6A PUSH2 0x57C0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x5C92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 MLOAD PUSH2 0x5C9D DUP2 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x20 DUP15 ADD MLOAD SWAP1 SWAP13 POP PUSH2 0x5CAE DUP2 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x40 DUP15 ADD MLOAD PUSH1 0x60 DUP16 ADD MLOAD SWAP2 SWAP13 POP SWAP11 POP PUSH2 0x5CC6 DUP2 PUSH2 0x4DED JUMP JUMPDEST DUP1 SWAP10 POP POP PUSH1 0x80 DUP14 ADD MLOAD SWAP8 POP PUSH1 0xA0 DUP14 ADD MLOAD SWAP7 POP PUSH1 0xC0 DUP14 ADD MLOAD PUSH2 0x5CE6 DUP2 PUSH2 0x4EBA JUMP JUMPDEST DUP1 SWAP7 POP POP PUSH1 0xE0 DUP14 ADD MLOAD SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x140 DUP14 ADD MLOAD SWAP2 POP PUSH2 0x160 DUP14 ADD MLOAD PUSH2 0x5D18 DUP2 PUSH2 0x4EBA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x5D49 JUMPI PUSH2 0x5D49 PUSH2 0x57C0 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x5D6D JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x5D8D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x5DA1 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x5DB2 JUMPI PUSH2 0x5DDF JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x5DDF JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x5DD7 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x5DBE JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5E1D JUMPI PUSH2 0x5E1D PUSH2 0x57C0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5E3F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDC3 DUP2 PUSH2 0x4EBA JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5E73 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4E2F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP8 0xA9 MOD 0xB5 SWAP6 DIV 0xC4 0xA6 0xDB 0x4F CALLVALUE 0x2F CALL PUSH12 0x72AB394C370E0C31FD5DA80 SSTORE 0xDB 0xC9 DUP3 0x5E PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ", "sha1": "0b37c41a9a57b60a288e60f7238cfcca829ee8ef", "source": "pragma solidity 0.8.12;\n// Copyright BigchainDB GmbH and Ocean Protocol contributors\n// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\n// Code is Apache-2.0 and docs are CC-BY-4.0\n\nimport \"../interfaces/IERC721Template.sol\";\nimport \"../interfaces/IERC20Template.sol\";\nimport \"../interfaces/IFactoryRouter.sol\";\nimport \"../interfaces/IFixedRateExchange.sol\";\nimport \"../interfaces/IDispenser.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol\";\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol\";\nimport \"../utils/ERC20Roles.sol\";\n\n/**\n * @title DatatokenTemplate\n *\n * @dev DatatokenTemplate is an ERC20 compliant token template\n *      Used by the factory contract as a bytecode reference to\n *      deploy new Datatokens.\n */\ncontract ERC20Template is\n    ERC20(\"test\", \"testSymbol\"),\n    ERC20Roles,\n    ERC20Burnable,\n    ReentrancyGuard\n{\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    string private _name;\n    string private _symbol;\n    uint256 private _cap;\n    uint8 private constant _decimals = 18;\n    bool private initialized = false;\n    address private _erc721Address;\n    address private paymentCollector;\n    address private publishMarketFeeAddress;\n    address private publishMarketFeeToken;\n    uint256 private publishMarketFeeAmount;\n    uint256 public constant BASE = 1e18;\n    \n    // EIP 2612 SUPPORT\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    mapping(address => uint256) public nonces;\n\n    address public router;\n    address[] deployedPools;\n    struct fixedRate{\n        address contractAddress;\n        bytes32 id;\n    }\n    fixedRate[] fixedRateExchanges;\n    address[] dispensers;\n\n    struct providerFee{\n        address providerFeeAddress;\n        address providerFeeToken; // address of the token \n        uint256 providerFeeAmount; // amount to be transfered to provider\n        uint8 v; // v of provider signed message\n        bytes32 r; // r of provider signed message\n        bytes32 s; // s of provider signed message\n        uint256 validUntil; //validity expresses in unix timestamp\n        bytes providerData; //data encoded by provider   \n    }\n\n    struct consumeMarketFee{\n        address consumeMarketFeeAddress;\n        address consumeMarketFeeToken; // address of the token marketplace wants to add fee on top\n        uint256 consumeMarketFeeAmount; // amount to be transfered to marketFeeCollector\n    }\n\n    event OrderStarted(\n        address indexed consumer,\n        address payer,\n        uint256 amount,\n        uint256 serviceIndex,\n        uint256 timestamp,\n        address indexed publishMarketAddress,\n        uint256 blockNumber\n    );\n\n    event OrderReused(\n            bytes32 orderTxId,\n            address caller,\n            uint256 timestamp,\n            uint256 number\n    );\n\n    event OrderExecuted( \n        address indexed providerAddress,\n        address indexed consumerAddress,\n        bytes32 orderTxId,\n        bytes providerData,\n        bytes providerSignature,\n        bytes consumerData,\n        bytes consumerSignature,\n        uint256 timestamp,\n        uint256 blockNumber\n    );\n\n    event PublishMarketFeeChanged(\n        address caller,\n        address PublishMarketFeeAddress,\n        address PublishMarketFeeToken,\n        uint256 PublishMarketFeeAmount\n    );\n\n    // emited for every order\n    event PublishMarketFee(\n        address indexed PublishMarketFeeAddress,\n        address indexed PublishMarketFeeToken,\n        uint256 PublishMarketFeeAmount\n    );\n\n    // emited for every order\n    event ConsumeMarketFee(\n        address indexed consumeMarketFeeAddress,\n        address indexed consumeMarketFeeToken,\n        uint256 consumeMarketFeeAmount\n    );\n\n    // emited for every order\n    event ProviderFee(\n        address indexed providerFeeAddress,\n        address indexed providerFeeToken,\n        uint256 providerFeeAmount,\n        bytes providerData,\n        uint8 v, \n        bytes32 r, \n        bytes32 s,\n        uint256 validUntil\n    );\n    \n\n    event MinterProposed(address currentMinter, address newMinter);\n\n    event MinterApproved(address currentMinter, address newMinter);\n\n    event NewPool(\n        address poolAddress,\n        address ssContract,\n        address baseTokenAddress\n    );\n    event VestingCreated(address indexed datatokenAddress,\n        address indexed publisherAddress,\n        uint256 vestingEndBlock,\n        uint256 totalVestingAmount);\n    event NewFixedRate(bytes32 exchangeId, address indexed owner, address exchangeContract, address indexed baseToken);\n    event NewDispenser(address dispenserContract);\n\n    event NewPaymentCollector(\n        address indexed caller,\n        address indexed _newPaymentCollector,\n        uint256 timestamp,\n        uint256 blockNumber\n    );\n\n    modifier onlyNotInitialized() {\n        require(\n            !initialized,\n            \"ERC20Template: token instance already initialized\"\n        );\n        _;\n    }\n    modifier onlyNFTOwner() {\n        require(\n            msg.sender == IERC721Template(_erc721Address).ownerOf(1),\n            \"ERC20Template: not NFTOwner\"\n        );\n        _;\n    }\n\n    modifier onlyPublishingMarketFeeAddress() {\n        require(\n            msg.sender == publishMarketFeeAddress,\n            \"ERC20Template: not publishMarketFeeAddress\"\n        );\n        _;\n    }\n\n    modifier onlyERC20Deployer() {\n        require(\n            IERC721Template(_erc721Address)\n                .getPermissions(msg.sender)\n                .deployERC20 || IERC721Template(_erc721Address).ownerOf(1) == msg.sender,\n            \"ERC20Template: NOT DEPLOYER ROLE\"\n        );\n        _;\n    }\n\n    /**\n     * @dev initialize\n     *      Called prior contract initialization (e.g creating new Datatoken instance)\n     *      Calls private _initialize function. Only if contract is not initialized.\n     * @param strings_ refers to an array of strings\n     *                      [0] = name token\n     *                      [1] = symbol\n     * @param addresses_ refers to an array of addresses passed by user\n     *                     [0]  = minter account who can mint datatokens (can have multiple minters)\n     *                     [1]  = paymentCollector  initial paymentCollector  for this DT\n     *                     [2]  = publishing Market Address\n     *                     [3]  = publishing Market Fee Token\n     * @param factoryAddresses_ refers to an array of addresses passed by the factory\n     *                     [0]  = erc721Address\n     *                     [1]  = router address\n     *\n     * @param uints_  refers to an array of uints\n     *                     [0] = cap_ the total ERC20 cap\n     *                     [1] = publishing Market Fee Amount\n     * @param bytes_  refers to an array of bytes\n     *                     Currently not used, usefull for future templates\n     */\n    function initialize(\n        string[] calldata strings_,\n        address[] calldata addresses_,\n        address[] calldata factoryAddresses_,\n        uint256[] calldata uints_,\n        bytes[] calldata bytes_\n    ) external onlyNotInitialized returns (bool) {\n        return\n            _initialize(\n                strings_,\n                addresses_,\n                factoryAddresses_,\n                uints_,\n                bytes_\n            );\n    }\n\n    /**\n     * @dev _initialize\n     *      Private function called on contract initialization.\n     * @param strings_ refers to an array of strings\n     *                      [0] = name token\n     *                      [1] = symbol\n     * @param addresses_ refers to an array of addresses passed by user\n     *                     [0]  = minter account who can mint datatokens (can have multiple minters)\n     *                     [1]  = paymentCollector  initial paymentCollector  for this DT\n     *                     [2]  = publishing Market Address\n     *                     [3]  = publishing Market Fee Token\n     * @param factoryAddresses_ refers to an array of addresses passed by the factory\n     *                     [0]  = erc721Address\n     *                     [1]  = router address\n     *\n     * @param uints_  refers to an array of uints\n     *                     [0] = cap_ the total ERC20 cap\n     *                     [1] = publishing Market Fee Amount\n     * param bytes_  refers to an array of bytes\n     *                     Currently not used, usefull for future templates\n     */\n    function _initialize(\n        string[] memory strings_,\n        address[] memory addresses_,\n        address[] memory factoryAddresses_,\n        uint256[] memory uints_,\n        bytes[] memory\n    ) private returns (bool) {\n        address erc721Address = factoryAddresses_[0];\n        router = factoryAddresses_[1];\n        require(\n            erc721Address != address(0),\n            \"ERC20Template: Invalid minter,  zero address\"\n        );\n\n        require(\n            router != address(0),\n            \"ERC20Template: Invalid router, zero address\"\n        );\n\n        // require(uints_[0] != 0, \"DatatokenTemplate: Invalid cap value\");\n        // _cap = uints_[0];\n        _cap = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        _name = strings_[0];\n        _symbol = strings_[1];\n        _erc721Address = erc721Address;\n        initialized = true;\n        // add a default minter, similar to what happens with manager in the 721 contract\n        _addMinter(addresses_[0]);\n        if (addresses_[1] != address(0)) {\n            _setPaymentCollector(addresses_[1]);\n            emit NewPaymentCollector(\n                msg.sender,\n                addresses_[1],\n                block.timestamp,\n                block.number\n            );\n        }\n        publishMarketFeeAddress = addresses_[2];\n        publishMarketFeeToken = addresses_[3];\n        publishMarketFeeAmount = uints_[1];\n        emit PublishMarketFeeChanged(\n            msg.sender,\n            publishMarketFeeAddress,\n            publishMarketFeeToken,\n            publishMarketFeeAmount\n        );\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\n                    \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n                ),\n                keccak256(bytes(_name)),\n                keccak256(bytes(\"1\")), // version, could be any other value\n                chainId,\n                address(this)\n            )\n        );\n\n        return initialized;\n    }\n\n    /**\n     * @dev deployPool\n     *      Function to deploy new Pool with 1SS. It also has a vesting schedule.\n     *     This function can only be called ONCE and ONLY if no token have been minted yet.\n     *      Requires baseToken approval\n     * @param ssParams params for the ssContract. \n     *                     [0]  = rate (wei)\n     *                     [1]  = baseToken decimals\n     *                     [2]  = vesting amount (wei)\n     *                     [3]  = vested blocks\n     *                     [4]  = initial liquidity in baseToken for pool creation\n     * @param swapFees swapFees (swapFee, swapMarketFee), swapOceanFee will be set automatically later\n     *                     [0] = swapFee for LP Providers\n     *                     [1] = swapFee for marketplace runner\n      \n      .\n     * @param addresses refers to an array of addresses passed by user\n     *                     [0]  = side staking contract address\n     *                     [1]  = baseToken address for pool creation(OCEAN or other)\n     *                     [2]  = baseTokenSender user which will provide the baseToken amount for initial liquidity\n     *                     [3]  = publisherAddress user which will be assigned the vested amount\n     *                     [4]  = marketFeeCollector marketFeeCollector address\n                           [5] = poolTemplateAddress\n     */\n\n    function deployPool(\n        uint256[] memory ssParams,\n        uint256[] memory swapFees,\n        address[] memory addresses\n    ) external onlyERC20Deployer nonReentrant returns (address pool) {\n        require(totalSupply() == 0, \"ERC20Template: tokens already minted\");\n        _addMinter(addresses[0]);\n        // TODO: confirm minimum number of blocks required\n        require(\n            ssParams[3] >= IFactoryRouter(router).getMinVestingPeriod(),\n            \"ERC20Template: Vesting period too low. See FactoryRouter.minVestingPeriodInBlocks\"\n        );\n\n        address[2] memory tokens = [address(this), addresses[1]];\n        pool = IFactoryRouter(router).deployPool(\n            tokens,\n            ssParams,\n            swapFees,\n            addresses\n        );\n        deployedPools.push(pool);\n        emit NewPool(pool, addresses[0], addresses[1]);\n    }\n\n    /**\n     * @dev createFixedRate\n     *      Creates a new FixedRateExchange setup.\n     * @param fixedPriceAddress fixedPriceAddress\n     * @param addresses array of addresses [baseToken,owner,marketFeeCollector]\n     * @param uints array of uints [baseTokenDecimals,datatokenDecimals, fixedRate, marketFee, withMint]\n     * @return exchangeId\n     */\n    function createFixedRate(\n        address fixedPriceAddress,\n        address[] memory addresses,\n        uint256[] memory uints\n    ) external onlyERC20Deployer nonReentrant returns (bytes32 exchangeId) {\n        // add FixedPriced contract as minter if withMint == true\n        if (uints[4] > 0) _addMinter(fixedPriceAddress);\n        exchangeId = IFactoryRouter(router).deployFixedRate(\n            fixedPriceAddress,\n            addresses,\n            uints\n        );\n        emit NewFixedRate(exchangeId, addresses[1], fixedPriceAddress, addresses[0]);\n        fixedRateExchanges.push(fixedRate(fixedPriceAddress,exchangeId));\n\n    }\n\n    /**\n     * @dev createDispenser\n     *      Creates a new Dispenser\n     * @param _dispenser dispenser contract address\n     * @param maxTokens - max tokens to dispense\n     * @param maxBalance - max balance of requester.\n     * @param withMint - true if we want to allow the dispenser to be a minter\n     * @param allowedSwapper - only account that can ask tokens. set address(0) if not required\n     */\n    function createDispenser(\n        address _dispenser,\n        uint256 maxTokens,\n        uint256 maxBalance,\n        bool withMint,\n        address allowedSwapper\n    ) external onlyERC20Deployer nonReentrant {\n        // add FixedPriced contract as minter if withMint == true\n        if (withMint) _addMinter(_dispenser);\n        dispensers.push(_dispenser);\n        emit NewDispenser(_dispenser);\n        IFactoryRouter(router).deployDispenser(\n            _dispenser,\n            address(this),\n            maxTokens,\n            maxBalance,\n            msg.sender,\n            allowedSwapper\n        );\n    }\n\n    /**\n     * @dev mint\n     *      Only the minter address can call it.\n     *      msg.value should be higher than zero and gt or eq minting fee\n     * @param account refers to an address that token is going to be minted to.\n     * @param value refers to amount of tokens that is going to be minted.\n     */\n    function mint(address account, uint256 value) external {\n        require(permissions[msg.sender].minter, \"ERC20Template: NOT MINTER\");\n        require(\n            totalSupply().add(value) <= _cap,\n            \"DatatokenTemplate: cap exceeded\"\n        );\n        _mint(account, value);\n    }\n\n    \n    /**\n     * @dev _checkProviderFee\n     *      Checks if a providerFee structure is valid, signed and \n     *      transfers fee to providerAddress\n     * @param _providerFee providerFee structure\n     */\n    function _checkProviderFee(providerFee calldata _providerFee) internal{\n        // check if they are signed\n        bytes memory prefix = \"\\x19Ethereum Signed Message:\\n32\";\n        bytes32 message = keccak256(\n            abi.encodePacked(prefix,\n                keccak256(\n                    abi.encodePacked(\n                        _providerFee.providerData,\n                        _providerFee.providerFeeAddress,\n                        _providerFee.providerFeeToken,\n                        _providerFee.providerFeeAmount,\n                        _providerFee.validUntil\n                    )\n                )\n            )\n        );\n        address signer = ecrecover(message, _providerFee.v, _providerFee.r, _providerFee.s);\n        require(signer == _providerFee.providerFeeAddress, \"Invalid provider fee\");\n        emit ProviderFee(\n            _providerFee.providerFeeAddress,\n            _providerFee.providerFeeToken,\n            _providerFee.providerFeeAmount,\n            _providerFee.providerData,\n            _providerFee.v,\n            _providerFee.r,\n            _providerFee.s,\n            _providerFee.validUntil\n        );\n        // skip fee if amount == 0 or feeToken == 0x0 address or feeAddress == 0x0 address\n        // Requires approval for the providerFeeToken of providerFeeAmount\n        if (\n            _providerFee.providerFeeAmount > 0 &&\n            _providerFee.providerFeeToken != address(0) &&\n            _providerFee.providerFeeAddress != address(0)\n        ) {\n            uint256 OPCFee = IFactoryRouter(router).getOPCProviderFee();\n            uint256 OPCcut = 0;\n            if(OPCFee > 0)\n                OPCcut = _providerFee.providerFeeAmount.mul(OPCFee).div(BASE);\n            uint256 providerCut = _providerFee.providerFeeAmount.sub(OPCcut);\n\n            _pullUnderlying(_providerFee.providerFeeToken,msg.sender,\n                address(this),\n                _providerFee.providerFeeAmount);\n            IERC20(_providerFee.providerFeeToken).safeTransfer(\n                _providerFee.providerFeeAddress,\n                providerCut\n            );\n            if(OPCcut > 0){\n              IERC20(_providerFee.providerFeeToken).safeTransfer(\n                IFactoryRouter(router).getOPCCollector(),\n                OPCcut\n            );  \n            }\n        }\n    }\n    \n    /**\n     * @dev startOrder\n     *      called by payer or consumer prior ordering a service consume on a marketplace.\n     *      Requires previous approval of consumeFeeToken and publishMarketFeeToken\n     * @param consumer is the consumer address (payer could be different address)\n     * @param serviceIndex service index in the metadata\n     * @param _providerFee provider fee\n     * @param _consumeMarketFee consume market fee\n     */\n    function startOrder(\n        address consumer,\n        uint256 serviceIndex,\n        providerFee calldata _providerFee,\n        consumeMarketFee calldata _consumeMarketFee\n    ) external nonReentrant {\n        uint256 amount = 1e18; // we always pay 1 DT. No more, no less\n        require(\n            balanceOf(msg.sender) >= amount,\n            \"Not enough datatokens to start Order\"\n        );\n        emit OrderStarted(\n            consumer,\n            msg.sender,\n            amount,\n            serviceIndex,\n            block.timestamp,\n            publishMarketFeeAddress,\n            block.number\n        );\n        // publishMarketFee\n        // Requires approval for the publishMarketFeeToken of publishMarketFeeAmount\n        // skip fee if amount == 0 or feeToken == 0x0 address or feeAddress == 0x0 address\n        if (\n            publishMarketFeeAmount > 0 &&\n            publishMarketFeeToken != address(0) &&\n            publishMarketFeeAddress != address(0)\n        ) {\n            _pullUnderlying(publishMarketFeeToken,msg.sender,\n                publishMarketFeeAddress,\n                publishMarketFeeAmount);\n            \n            emit PublishMarketFee(\n                publishMarketFeeAddress,\n                publishMarketFeeToken,\n                publishMarketFeeAmount\n            );\n        }\n\n        // consumeMarketFee\n        // Requires approval for the FeeToken \n        // skip fee if amount == 0 or feeToken == 0x0 address or feeAddress == 0x0 address\n        if (\n            _consumeMarketFee.consumeMarketFeeAmount > 0 &&\n            _consumeMarketFee.consumeMarketFeeToken != address(0) &&\n            _consumeMarketFee.consumeMarketFeeAddress != address(0)\n        ) {\n            _pullUnderlying(_consumeMarketFee.consumeMarketFeeToken,msg.sender,\n                _consumeMarketFee.consumeMarketFeeAddress,\n                _consumeMarketFee.consumeMarketFeeAmount);\n            emit ConsumeMarketFee(\n                _consumeMarketFee.consumeMarketFeeAddress,\n                _consumeMarketFee.consumeMarketFeeToken,\n                _consumeMarketFee.consumeMarketFeeAmount\n            );\n        }\n        _checkProviderFee(_providerFee);\n        uint256 OPCFee = IFactoryRouter(router).getOPCConsumeFee();\n        \n        // send datatoken to publisher\n        require(\n            transfer(getPaymentCollector(), amount.sub(OPCFee)),\n            \"Failed to send DT to publisher\"\n        );\n        require(\n            transfer(IFactoryRouter(router).getOPCCollector(), OPCFee),\n            \"Failed to send DT to OPC\"\n        );\n    }\n\n    /**\n     * @dev reuseOrder\n     *      called by payer or consumer having a valid order, but with expired provider access\n     *      Pays the provider fee again, but it will not require a new datatoken payment\n     *      Requires previous approval of provider fee.\n     * @param orderTxId previous valid order\n     * @param _providerFee provider feee\n     */\n    function reuseOrder(\n        bytes32 orderTxId,\n        providerFee calldata _providerFee\n    ) external nonReentrant {\n        emit OrderReused(\n            orderTxId,\n            msg.sender,\n            block.timestamp,\n            block.number\n        );\n        _checkProviderFee(_providerFee);\n    }\n\n    /**\n     * @dev addMinter\n     *      Only ERC20Deployer (at 721 level) can update.\n     *      There can be multiple minters\n     * @param _minter new minter address\n     */\n\n    function addMinter(address _minter) external onlyERC20Deployer {\n        _addMinter(_minter);\n    }\n\n    /**\n     * @dev removeMinter\n     *      Only ERC20Deployer (at 721 level) can update.\n     *      There can be multiple minters\n     * @param _minter minter address to remove\n     */\n\n    function removeMinter(address _minter) external onlyERC20Deployer {\n        _removeMinter(_minter);\n    }\n\n    /**\n     * @dev addPaymentManager (can set who's going to collect fee when consuming orders)\n     *      Only ERC20Deployer (at 721 level) can update.\n     *      There can be multiple paymentCollectors\n     * @param _paymentManager new minter address\n     */\n\n    function addPaymentManager(address _paymentManager)\n        external\n        onlyERC20Deployer\n    {\n        _addPaymentManager(_paymentManager);\n    }\n\n    /**\n     * @dev removePaymentManager\n     *      Only ERC20Deployer (at 721 level) can update.\n     *      There can be multiple paymentManagers\n     * @param _paymentManager _paymentManager address to remove\n     */\n\n    function removePaymentManager(address _paymentManager)\n        external\n        onlyERC20Deployer\n    {\n        _removePaymentManager(_paymentManager);\n    }\n\n    /**\n     * @dev setData\n     *      Only ERC20Deployer (at 721 level) can call it.\n     *      This function allows to store data with a preset key (keccak256(ERC20Address)) into NFT 725 Store\n     * @param _value data to be set with this key\n     */\n\n    function setData(bytes calldata _value) external onlyERC20Deployer {\n        bytes32 key = keccak256(abi.encodePacked(address(this)));\n        IERC721Template(_erc721Address).setDataERC20(key, _value);\n    }\n\n    /**\n     * @dev cleanPermissions()\n     *      Only NFT Owner (at 721 level) can call it.\n     *      This function allows to remove all minters, feeManagers and reset the paymentCollector\n     *\n     */\n\n    function cleanPermissions() external onlyNFTOwner {\n        _internalCleanPermissions();\n        \n    }\n    \n    \n    /**\n     * @dev cleanFrom721()\n     *      OnlyNFT(721) Contract can call it.\n     *      This function allows to remove all minters, feeManagers and reset the paymentCollector\n     *       This function is used when transferring an NFT to a new owner,\n     * so that permissions at ERC20level (minter,feeManager,paymentCollector) can be reset.\n     *\n     */\n    function cleanFrom721() external {\n        require(\n            msg.sender == _erc721Address,\n            \"ERC20Template: NOT 721 Contract\"\n        );\n        _internalCleanPermissions();\n        \n    }\n\n    function _internalCleanPermissions() internal {\n        uint256 totalLen = fixedRateExchanges.length + dispensers.length;\n        uint256 curentLen = 0;\n        address[] memory previousMinters=new address[](totalLen);\n        // loop though fixedrates, empty and preserve the minter rols if exists\n        uint256 i;\n        for(i=0; i<fixedRateExchanges.length; i++) {\n                IFixedRateExchange fre = IFixedRateExchange(fixedRateExchanges[i].contractAddress);\n                (\n                    ,\n                    ,\n                    ,\n                    ,\n                    ,\n                    ,\n                    ,\n                    ,\n                    ,\n                    uint256 dtBalance,\n                    uint256 btBalance,\n                    bool withMint\n                ) = fre.getExchange(fixedRateExchanges[i].id);\n                if(btBalance>0)\n                    fre.collectBT(fixedRateExchanges[i].id, btBalance);\n                if(dtBalance>0)\n                    fre.collectDT(fixedRateExchanges[i].id, dtBalance);\n                // add it to the list of minters\n                if(isMinter(fixedRateExchanges[i].contractAddress) && withMint == true){\n                    previousMinters[curentLen]=fixedRateExchanges[i].contractAddress;\n                    curentLen++;\n                }\n        }\n        // loop though dispenser and preserve the minter rols if exists\n        for(i=0; i<dispensers.length; i++) {\n                IDispenser(dispensers[i]).ownerWithdraw(address(this));\n                if(isMinter(dispensers[i])){\n                    previousMinters[curentLen]=dispensers[i];\n                    curentLen++;\n                }\n        }\n        // clear all permisions\n         _cleanPermissions();\n        // set collector to 0\n        paymentCollector = address(0);\n        // add existing minter roles for fixedrate & dispensers\n        for(i=0; i<curentLen; i++) {\n            _addMinter(previousMinters[i]);\n        }\n        \n    }\n    /**\n     * @dev setPaymentCollector\n     *      Only feeManager can call it\n     *      This function allows to set a newPaymentCollector (receives DT when consuming)\n            If not set the paymentCollector is the NFT Owner\n     * @param _newPaymentCollector new fee collector \n     */\n\n    function setPaymentCollector(address _newPaymentCollector) external {\n        //we allow _newPaymentCollector = address(0), because it means that the collector is nft owner\n        require(\n            permissions[msg.sender].paymentManager ||\n                IERC721Template(_erc721Address).getPermissions(msg.sender).deployERC20 ||\n                IERC721Template(_erc721Address).ownerOf(1)==msg.sender,\n            \"ERC20Template: NOT PAYMENT MANAGER or OWNER\"\n        );\n        _setPaymentCollector(_newPaymentCollector);\n        emit NewPaymentCollector(\n            msg.sender,\n            _newPaymentCollector,\n            block.timestamp,\n            block.number\n        );\n    }\n\n    /**\n     * @dev _setPaymentCollector\n     * @param _newPaymentCollector new fee collector\n     */\n\n    function _setPaymentCollector(address _newPaymentCollector) internal {\n        paymentCollector = _newPaymentCollector;\n    }\n\n    /**\n     * @dev getPublishingMarketFee\n     *      Get publishingMarket Fee\n     *      This function allows to get the current fee set by the publishing market\n     */\n    function getPublishingMarketFee()\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        )\n    {\n        return (\n            publishMarketFeeAddress,\n            publishMarketFeeToken,\n            publishMarketFeeAmount\n        );\n    }\n\n    /**\n     * @dev setPublishingMarketFee\n     *      Only publishMarketFeeAddress can call it\n     *      This function allows to set the fee required by the publisherMarket\n     * @param _publishMarketFeeAddress  new _publishMarketFeeAddress\n     * @param _publishMarketFeeToken new _publishMarketFeeToken\n     * @param _publishMarketFeeAmount new fee amount\n     */\n    function setPublishingMarketFee(\n        address _publishMarketFeeAddress,\n        address _publishMarketFeeToken,\n        uint256 _publishMarketFeeAmount\n    ) external onlyPublishingMarketFeeAddress {\n        require(\n            _publishMarketFeeAddress != address(0),\n            \"Invalid _publishMarketFeeAddress address\"\n        );\n           require(\n            _publishMarketFeeToken != address(0),\n            \"Invalid _publishMarketFeeToken address\"\n        );\n        publishMarketFeeAddress = _publishMarketFeeAddress;\n        publishMarketFeeToken = _publishMarketFeeToken;\n        publishMarketFeeAmount = _publishMarketFeeAmount;\n        emit PublishMarketFeeChanged(\n            msg.sender,\n            _publishMarketFeeAddress,\n            _publishMarketFeeToken,\n            _publishMarketFeeAmount\n        );\n    }\n\n    /**\n     * @dev getId\n     *      Return template id in case we need different ABIs. \n     *      If you construct your own template, please make sure to change the hardcoded value\n     */\n    function getId() pure public returns (uint8) {\n        return 1;\n    }\n\n    /**\n     * @dev name\n     *      It returns the token name.\n     * @return Datatoken name.\n     */\n    function name() public view override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev symbol\n     *      It returns the token symbol.\n     * @return Datatoken symbol.\n     */\n    function symbol() public view override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev getERC721Address\n     *      It returns the parent ERC721\n     * @return ERC721 address.\n     */\n    function getERC721Address() public view returns (address) {\n        return _erc721Address;\n    }\n\n    /**\n     * @dev decimals\n     *      It returns the token decimals.\n     *      how many supported decimal points\n     * @return Datatoken decimals.\n     */\n    function decimals() public pure override returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev cap\n     *      it returns the capital.\n     * @return Datatoken cap.\n     */\n    function cap() external view returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev isInitialized\n     *      It checks whether the contract is initialized.\n     * @return true if the contract is initialized.\n     */\n\n    function isInitialized() external view returns (bool) {\n        return initialized;\n    }\n\n    /**\n     * @dev permit\n     *      used for signed approvals, see ERC20Template test for more details\n     * @param owner user who signed the message\n     * @param spender spender\n     * @param value token amount\n     * @param deadline deadline after which signed message is no more valid\n     * @param v parameters from signed message\n     * @param r parameters from signed message\n     * @param s parameters from signed message\n     */\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.number, \"ERC20DT: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(\n                    abi.encode(\n                        PERMIT_TYPEHASH,\n                        owner,\n                        spender,\n                        value,\n                        nonces[owner]++,\n                        deadline\n                    )\n                )\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(\n            recoveredAddress != address(0) && recoveredAddress == owner,\n            \"ERC20DT: INVALID_SIGNATURE\"\n        );\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev getAddressLength\n     *      It returns the array lentgh\n            @param array address array we want to get length\n     * @return length\n     */\n\n    function getAddressLength(address[] memory array)\n        private\n        pure\n        returns (uint256)\n    {\n        return array.length;\n    }\n\n    /**\n     * @dev getUintLength\n     *      It returns the array lentgh\n            @param array uint array we want to get length\n     * @return length\n     */\n\n    function getUintLength(uint256[] memory array)\n        private\n        pure\n        returns (uint256)\n    {\n        return array.length;\n    }\n\n    /**\n     * @dev getBytesLength\n     *      It returns the array lentgh\n            @param array bytes32 array we want to get length\n     * @return length\n     */\n\n    function getBytesLength(bytes32[] memory array)\n        private\n        pure\n        returns (uint256)\n    {\n        return array.length;\n    }\n\n    /**\n     * @dev getPaymentCollector\n     *      It returns the current paymentCollector\n     * @return paymentCollector address\n     */\n\n    function getPaymentCollector() public view returns (address) {\n        if (paymentCollector == address(0)) {\n            return IERC721Template(_erc721Address).ownerOf(1);\n        } else {\n            return paymentCollector;\n        }\n    }\n\n    /**\n     * @dev fallback function\n     *      this is a default fallback function in which receives\n     *      the collected ether.\n     */\n    fallback() external payable {}\n    \n    /**\n     * @dev receive function\n     *      this is a default receive function in which receives\n     *      the collected ether.\n     */\n    receive() external payable {}\n\n    /**\n     * @dev withdrawETH\n     *      transfers all the accumlated ether the collector account\n     */\n    function withdrawETH() external payable {\n        payable(getPaymentCollector()).transfer(address(this).balance);\n    }\n\n    /**\n    * @dev isERC20Deployer\n    *      returns true if address has deployERC20 role\n    */\n    function isERC20Deployer(address user) public view returns(bool){\n        return(IERC721Template(_erc721Address).getPermissions(user).deployERC20);\n    }\n\n    /**\n     * @dev getPools\n     *      Returns the list of pools created for this datatoken\n     */\n    function getPools() public view returns(address[] memory) {\n        return(deployedPools);\n    }\n    /**\n     * @dev getFixedRates\n     *      Returns the list of fixedRateExchanges created for this datatoken\n     */\n    function getFixedRates() public view returns(fixedRate[] memory) {\n        return(fixedRateExchanges);\n    }\n    /**\n     * @dev getDispensers\n     *      Returns the list of dispensers created for this datatoken\n     */\n    function getDispensers() public view returns(address[] memory) {\n        return(dispensers);\n    }\n\n    function _pullUnderlying(\n        address erc20,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        uint256 balanceBefore = IERC20(erc20).balanceOf(to);\n        IERC20(erc20).safeTransferFrom(from, to, amount);\n        require(IERC20(erc20).balanceOf(to) >= balanceBefore.add(amount),\n                    \"Transfer amount is too low\");\n    }\n\n\n    /**\n     * @dev orderExecuted\n     *      Providers should call this to prove order execution\n     * @param orderTxId order tx\n     * @param providerData provider data\n     * @param providerSignature provider signature\n     * @param consumerData consumer data\n     * @param consumerSignature consumer signature\n     * @param consumerAddress consumer address\n     */\n    function orderExecuted(\n        bytes32 orderTxId,\n        bytes calldata providerData,\n        bytes calldata providerSignature,\n        bytes calldata consumerData,\n        bytes calldata consumerSignature,\n        address consumerAddress\n    ) external {\n        require(msg.sender != consumerAddress, \"Provider cannot be the consumer\");\n        bytes memory prefix = \"\\x19Ethereum Signed Message:\\n32\";\n        bytes32 providerHash = keccak256(\n            abi.encodePacked(prefix,\n                keccak256(\n                    abi.encodePacked(\n                        orderTxId,\n                        providerData\n                    )\n                )\n            )\n        );\n        require(_ecrecovery(providerHash, providerSignature) == msg.sender, \"Provider signature check failed\");\n        bytes32 consumerHash = keccak256(\n            abi.encodePacked(prefix,\n                keccak256(\n                    abi.encodePacked(\n                        consumerData\n                    )\n                )\n            )\n        );\n        require(_ecrecovery(consumerHash, consumerSignature) == consumerAddress, \"Consumer signature check failed\");\n        emit OrderExecuted(msg.sender, consumerAddress ,orderTxId, providerData, providerSignature,\n                consumerData, consumerSignature, block.timestamp, block.number);\n    }\n\n\n\n    function _ecrecovery(bytes32 hash, bytes memory sig) pure internal returns (address) {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n        if (sig.length != 65) {\n          return address(0);\n        }\n        assembly {\n          r := mload(add(sig, 32))\n        s := mload(add(sig, 64))\n        v := and(mload(add(sig, 65)), 255)\n        }\n        if (v < 27) {\n          v += 27;\n        }   \n        if (v != 27 && v != 28) {\n        return address(0);\n        }\n        return ecrecover(hash, v, r, s);\n    }\n\n}\n", "sourceMap": "1178:37379:42:-:0;;;1486:32;;;-1:-1:-1;;1486:32:42;;;1178:37379;;;;;;;;;-1:-1:-1;1896:113:3;;;;;;;;;;;-1:-1:-1;;;1896:113:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:3;;;;1962:13;;1896:113;;;1962:13;;:5;;:13;:::i;:::-;-1:-1:-1;1985:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1637:1:2;1742:7;:22;-1:-1:-1;1178:37379:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1178:37379:42;;;-1:-1:-1;1178:37379:42;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:75;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;1178:37379:42;;;;;;", "sourcePath": "contracts/oceanv4/templates/ERC20Template.sol", "type": "contract", "deployment": {"address": "0x1d535147a97bd87c8443125376E6671B60556E07", "chainid": "5", "blockHeight": 8974884}}