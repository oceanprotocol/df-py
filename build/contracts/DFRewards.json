{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tos",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "Allocated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRetired",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "addStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tos",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "allocate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "claimFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "claimForStrat",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "claimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "isStrategy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "live_strategies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "retireStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdrawERCToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "12": "contracts/DFRewards.sol",
    "15": "contracts/interfaces/IDFRewards.sol",
    "2": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
    "4": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "7": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "8": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol",
    "9": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/DFRewards.sol",
    "exportedSymbols": {
      "Address": [
        29881
      ],
      "Context": [
        29252
      ],
      "DFRewards": [
        475
      ],
      "IDFRewards": [
        953
      ],
      "IERC20": [
        27843
      ],
      "Ownable": [
        27725
      ],
      "ReentrancyGuard": [
        27765
      ],
      "SafeERC20": [
        28067
      ]
    },
    "id": 476,
    "license": "(Apache-2.0 AND CC-BY-4.0)",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:23:12"
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 476,
        "sourceUnit": 27844,
        "src": "80:84:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 476,
        "sourceUnit": 28068,
        "src": "165:93:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 476,
        "sourceUnit": 27766,
        "src": "259:90:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 476,
        "sourceUnit": 27726,
        "src": "350:80:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IDFRewards.sol",
        "file": "./interfaces/IDFRewards.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 476,
        "sourceUnit": 954,
        "src": "431:37:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27725,
              "src": "492:7:12"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "492:7:12"
          },
          {
            "baseName": {
              "id": 9,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27765,
              "src": "501:15:12"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "501:15:12"
          },
          {
            "baseName": {
              "id": 11,
              "name": "IDFRewards",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 953,
              "src": "518:10:12"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "518:10:12"
          }
        ],
        "canonicalName": "DFRewards",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 475,
        "linearizedBaseContracts": [
          475,
          953,
          27765,
          27725,
          29252
        ],
        "name": "DFRewards",
        "nameLocation": "479:9:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 16,
            "libraryName": {
              "id": 13,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28067,
              "src": "541:9:12"
            },
            "nodeType": "UsingForDirective",
            "src": "535:27:12",
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27843,
                "src": "555:6:12"
              },
              "referencedDeclaration": 27843,
              "src": "555:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$27843",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "664:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 475,
            "src": "616:56:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "624:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "616:47:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 20,
                "keyType": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "643:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "635:27:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 19,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "654:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "allocated",
            "nameLocation": "706:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 475,
            "src": "678:37:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "686:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "678:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 24,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "697:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "d731060c",
            "id": 29,
            "mutability": "mutable",
            "name": "live_strategies",
            "nameLocation": "786:15:12",
            "nodeType": "VariableDeclaration",
            "scope": 475,
            "src": "769:32:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "769:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 28,
              "nodeType": "ArrayTypeName",
              "src": "769:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "1101:895:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43,
                            "name": "_tos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1119:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1119:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 45,
                            "name": "_values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "1134:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1134:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1119:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c656e67746873206d757374206d61746368",
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1150:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4deaa2b60dd914e2b93506276ae31b9172b56316ead7c0b874f6d0078d8a3972",
                          "typeString": "literal_string \"Lengths must match\""
                        },
                        "value": "Lengths must match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4deaa2b60dd914e2b93506276ae31b9172b56316ead7c0b874f6d0078d8a3972",
                          "typeString": "literal_string \"Lengths must match\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1111:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:60:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:60:12"
                },
                {
                  "assignments": [
                    52
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52,
                      "mutability": "mutable",
                      "name": "total_value",
                      "nameLocation": "1190:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 172,
                      "src": "1182:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1182:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54,
                  "initialValue": {
                    "hexValue": "302e30",
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1204:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0.0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1182:25:12"
                },
                {
                  "body": {
                    "id": 106,
                    "nodeType": "Block",
                    "src": "1265:226:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 68,
                                  "name": "_tos",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1287:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 70,
                                "indexExpression": {
                                  "id": 69,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "1292:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1287:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 73,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1306:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 72,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1298:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 71,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1298:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1298:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1287:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4164647265737320696e76616c6964",
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1310:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3ef2d7851f41c96be760a65633659d7e041ce327a7604982ef857d4c87c3aefc",
                                "typeString": "literal_string \"Address invalid\""
                              },
                              "value": "Address invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3ef2d7851f41c96be760a65633659d7e041ce327a7604982ef857d4c87c3aefc",
                                "typeString": "literal_string \"Address invalid\""
                              }
                            ],
                            "id": 67,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1279:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1279:49:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "1279:49:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 84,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 80,
                                  "name": "_values",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "1350:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 82,
                                "indexExpression": {
                                  "id": 81,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "1358:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1350:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 83,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1363:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1350:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c756520696e76616c6964",
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1366:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_076056698aacc9d5287586feaafe95b51751f7a2c6789bf4bf0fc20044b3b977",
                                "typeString": "literal_string \"Value invalid\""
                              },
                              "value": "Value invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_076056698aacc9d5287586feaafe95b51751f7a2c6789bf4bf0fc20044b3b977",
                                "typeString": "literal_string \"Value invalid\""
                              }
                            ],
                            "id": 79,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1342:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1342:40:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "1342:40:12"
                      },
                      {
                        "expression": {
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 88,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "1396:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 93,
                              "indexExpression": {
                                "id": 89,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "1405:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1396:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 94,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 90,
                                "name": "_tos",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "1419:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 92,
                              "indexExpression": {
                                "id": 91,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "1424:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1419:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1396:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 95,
                              "name": "_values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "1431:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 97,
                            "indexExpression": {
                              "id": 96,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "1439:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1431:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1396:45:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "1396:45:12"
                      },
                      {
                        "expression": {
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100,
                            "name": "total_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1455:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 101,
                              "name": "_values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "1470:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 103,
                            "indexExpression": {
                              "id": 102,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "1478:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1470:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1455:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 105,
                        "nodeType": "ExpressionStatement",
                        "src": "1455:25:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1237:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 60,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1241:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1241:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1237:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 107,
                  "initializationExpression": {
                    "assignments": [
                      56
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1230:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 107,
                        "src": "1222:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 58,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1234:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1222:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 63,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1257:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1262:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1257:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 66,
                    "nodeType": "ExpressionStatement",
                    "src": "1257:6:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "1217:274:12"
                },
                {
                  "assignments": [
                    109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 109,
                      "mutability": "mutable",
                      "name": "_before",
                      "nameLocation": "1509:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 172,
                      "src": "1501:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 108,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1501:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 116,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1558:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DFRewards_$475",
                              "typeString": "contract DFRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DFRewards_$475",
                              "typeString": "contract DFRewards"
                            }
                          ],
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1550:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 114,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1550:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1550:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 111,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "1526:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27843,
                          "src": "1519:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1519:20:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27843",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27782,
                      "src": "1519:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1519:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1501:63:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1625:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1625:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 128,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1657:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DFRewards_$475",
                              "typeString": "contract DFRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DFRewards_$475",
                              "typeString": "contract DFRewards"
                            }
                          ],
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1649:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1649:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1649:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 130,
                        "name": "total_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1676:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 121,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "1581:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 120,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27843,
                          "src": "1574:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1574:20:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27843",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27900,
                      "src": "1574:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27843_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27843_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1574:123:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:123:12"
                },
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "_after",
                      "nameLocation": "1715:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 172,
                      "src": "1707:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1707:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 141,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1763:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DFRewards_$475",
                              "typeString": "contract DFRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DFRewards_$475",
                              "typeString": "contract DFRewards"
                            }
                          ],
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1755:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 139,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1755:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1755:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 136,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "1731:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 135,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27843,
                          "src": "1724:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1724:20:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27843",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27782,
                      "src": "1724:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1724:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1707:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 146,
                            "name": "_after",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "1787:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 147,
                            "name": "_before",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "1796:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1787:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 149,
                          "name": "total_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "1807:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1787:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e73",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1820:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                          "typeString": "literal_string \"Not enough tokens\""
                        },
                        "value": "Not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                          "typeString": "literal_string \"Not enough tokens\""
                        }
                      ],
                      "id": 145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1779:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:61:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:61:12"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 154,
                        "name": "allocated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1851:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 156,
                      "indexExpression": {
                        "id": 155,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1861:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1851:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 157,
                          "name": "allocated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "1877:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 159,
                        "indexExpression": {
                          "id": 158,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1887:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1877:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 160,
                        "name": "total_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1903:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1877:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1851:63:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:63:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 165,
                        "name": "_tos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1940:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 166,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1946:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 167,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1955:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 164,
                      "name": "Allocated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 902,
                      "src": "1930:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address[] memory,uint256[] memory,address)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1930:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "EmitStatement",
                  "src": "1925:43:12"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1985:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 41,
                  "id": 171,
                  "nodeType": "Return",
                  "src": "1978:11:12"
                }
              ]
            },
            "functionSelector": "44469f98",
            "id": 173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allocate",
            "nameLocation": "963:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_tos",
                  "nameLocation": "1000:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "981:23:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "981:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 31,
                    "nodeType": "ArrayTypeName",
                    "src": "981:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_values",
                  "nameLocation": "1033:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1014:26:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1014:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34,
                    "nodeType": "ArrayTypeName",
                    "src": "1014:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1058:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1050:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:105:12"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1095:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:6:12"
            },
            "scope": 475,
            "src": "954:1042:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              927
            ],
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "2114:51:12",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 182,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2131:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 184,
                      "indexExpression": {
                        "id": 183,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "2140:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2131:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 186,
                    "indexExpression": {
                      "id": 185,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "2154:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2131:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 181,
                  "id": 187,
                  "nodeType": "Return",
                  "src": "2124:34:12"
                }
              ]
            },
            "functionSelector": "d4570c1c",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimable",
            "nameLocation": "2011:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2029:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2021:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2042:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2034:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2020:35:12"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2101:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2101:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2100:9:12"
            },
            "scope": 475,
            "src": "2002:163:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "2298:345:12",
              "statements": [
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "amt",
                      "nameLocation": "2316:3:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 249,
                      "src": "2308:11:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2308:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 202,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2322:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 204,
                      "indexExpression": {
                        "id": 203,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "2331:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2322:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 206,
                    "indexExpression": {
                      "id": 205,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "2345:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2322:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2308:41:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 208,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "2363:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2370:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2363:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 214,
                  "nodeType": "IfStatement",
                  "src": "2359:47:12",
                  "trueBody": {
                    "id": 213,
                    "nodeType": "Block",
                    "src": "2373:33:12",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2394:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 199,
                        "id": 212,
                        "nodeType": "Return",
                        "src": "2387:8:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 215,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2415:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 218,
                        "indexExpression": {
                          "id": 216,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "2424:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2415:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 219,
                      "indexExpression": {
                        "id": 217,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "2438:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2415:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2445:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2415:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2415:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 227,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2490:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 228,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2501:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 224,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "2463:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 223,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27843,
                          "src": "2456:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2456:20:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27843",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27874,
                      "src": "2456:33:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27843_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27843_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2456:49:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:49:12"
                },
                {
                  "expression": {
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 231,
                        "name": "allocated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2515:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 233,
                      "indexExpression": {
                        "id": 232,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "2525:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2515:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 234,
                          "name": "allocated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "2541:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 236,
                        "indexExpression": {
                          "id": 235,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "2551:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2541:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 237,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2567:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2541:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2515:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:55:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 242,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "2593:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 243,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2598:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 244,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "2603:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 241,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 910,
                      "src": "2585:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "EmitStatement",
                  "src": "2580:36:12"
                },
                {
                  "expression": {
                    "id": 247,
                    "name": "amt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 201,
                    "src": "2633:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 199,
                  "id": 248,
                  "nodeType": "Return",
                  "src": "2626:10:12"
                }
              ]
            },
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claim",
            "nameLocation": "2180:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2204:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "2196:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2225:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "2217:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "2255:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "2247:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2186:84:12"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "2289:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2289:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2288:9:12"
            },
            "scope": 475,
            "src": "2171:472:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              936
            ],
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "2811:54:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 262,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "2835:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 263,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "2840:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 264,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "2854:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 261,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "2828:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address) returns (uint256)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2828:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 260,
                  "id": 266,
                  "nodeType": "Return",
                  "src": "2821:37:12"
                }
              ]
            },
            "functionSelector": "b4ba9e11",
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 256,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27764,
                  "src": "2768:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2768:12:12"
              }
            ],
            "name": "claimFor",
            "nameLocation": "2701:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2718:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "2710:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2731:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "2723:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2723:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2709:35:12"
            },
            "returnParameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "2798:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2797:9:12"
            },
            "scope": 475,
            "src": "2692:173:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              952
            ],
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "3046:191:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 280,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "3064:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "3064:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 282,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "3077:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3064:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c657220646f65736e2774206d61746368",
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3082:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cac9f9f03a13c8b663190fa334da6a95bc88141532692b3574271df58749a056",
                          "typeString": "literal_string \"Caller doesn't match\""
                        },
                        "value": "Caller doesn't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cac9f9f03a13c8b663190fa334da6a95bc88141532692b3574271df58749a056",
                          "typeString": "literal_string \"Caller doesn't match\""
                        }
                      ],
                      "id": 279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3056:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3056:49:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "3056:49:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 289,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3134:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3134:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 288,
                          "name": "isStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 373,
                          "src": "3123:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3123:22:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652061207374726174656779",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3147:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b8840584aa02d3917d7f37cba734a9267f79beaff871ed61692e99a20a57d96",
                          "typeString": "literal_string \"Caller must be a strategy\""
                        },
                        "value": "Caller must be a strategy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b8840584aa02d3917d7f37cba734a9267f79beaff871ed61692e99a20a57d96",
                          "typeString": "literal_string \"Caller must be a strategy\""
                        }
                      ],
                      "id": 287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3115:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3115:60:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "3115:60:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 296,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "3200:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 297,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "3205:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3219:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3219:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 295,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "3193:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address) returns (uint256)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3193:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 278,
                  "id": 301,
                  "nodeType": "Return",
                  "src": "3186:44:12"
                }
              ]
            },
            "functionSelector": "2c71df62",
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 275,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 274,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27764,
                  "src": "3003:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3003:12:12"
              }
            ],
            "name": "claimForStrat",
            "nameLocation": "2931:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2953:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "2945:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2966:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "2958:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2958:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2944:35:12"
            },
            "returnParameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3033:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3032:9:12"
            },
            "scope": 475,
            "src": "2922:315:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              943
            ],
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "3557:233:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 319,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3621:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DFRewards_$475",
                                      "typeString": "contract DFRewards"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DFRewards_$475",
                                      "typeString": "contract DFRewards"
                                    }
                                  ],
                                  "id": 318,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3613:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 317,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3613:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3613:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 314,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 307,
                                    "src": "3595:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 313,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27843,
                                  "src": "3588:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3588:14:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$27843",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27782,
                              "src": "3588:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3588:39:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 322,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "3630:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3588:48:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 324,
                            "name": "allocated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "3656:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 326,
                          "indexExpression": {
                            "id": 325,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "3666:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3656:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3588:85:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420776974686472617720616c6c6f636174656420746f6b656e",
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3687:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df2671431f94edd13f72d427a733175706467a42192fb7247c65e9fd6870f7fe",
                          "typeString": "literal_string \"Cannot withdraw allocated token\""
                        },
                        "value": "Cannot withdraw allocated token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df2671431f94edd13f72d427a733175706467a42192fb7247c65e9fd6870f7fe",
                          "typeString": "literal_string \"Cannot withdraw allocated token\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3567:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3567:163:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:163:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 335,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3764:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3764:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 337,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3776:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 332,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "3747:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 331,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27843,
                          "src": "3740:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3740:14:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27843",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27792,
                      "src": "3740:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3740:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3740:43:12"
                }
              ]
            },
            "functionSelector": "b94b7a97",
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 309,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27668,
                  "src": "3543:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3543:9:12"
              }
            ],
            "name": "withdrawERCToken",
            "nameLocation": "3469:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3494:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "3486:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3510:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "3502:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3502:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3485:32:12"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3557:0:12"
            },
            "scope": 475,
            "src": "3460:330:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "4021:164:12",
              "statements": [
                {
                  "body": {
                    "id": 368,
                    "nodeType": "Block",
                    "src": "4084:73:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 360,
                              "name": "live_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "4102:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 362,
                            "indexExpression": {
                              "id": 361,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "4118:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4102:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 363,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "4124:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4102:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 367,
                        "nodeType": "IfStatement",
                        "src": "4098:48:12",
                        "trueBody": {
                          "expression": {
                            "hexValue": "74727565",
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4142:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 348,
                          "id": 366,
                          "nodeType": "Return",
                          "src": "4135:11:12"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 353,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "4051:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 354,
                        "name": "live_strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "4055:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4055:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4051:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 369,
                  "initializationExpression": {
                    "assignments": [
                      350
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 350,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4044:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "4036:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4036:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 352,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4048:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4036:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4079:3:12",
                      "subExpression": {
                        "id": 357,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "4079:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 359,
                    "nodeType": "ExpressionStatement",
                    "src": "4079:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "4031:126:12"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4173:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 348,
                  "id": 371,
                  "nodeType": "Return",
                  "src": "4166:12:12"
                }
              ]
            },
            "documentation": {
              "id": 342,
              "nodeType": "StructuredDocumentation",
              "src": "3796:154:12",
              "text": " @dev isStrategy\n      Returns true if strategy exists in the list\n  @param _strategy address Strategy address to be checked"
            },
            "functionSelector": "2e8ebaae",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStrategy",
            "nameLocation": "3964:10:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "3983:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "3975:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3975:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3974:19:12"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "4015:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4015:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4014:6:12"
            },
            "scope": 475,
            "src": "3955:230:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "4384:143:12",
              "statements": [
                {
                  "condition": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4398:22:12",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 382,
                          "name": "_strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 376,
                          "src": "4410:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 381,
                        "name": "isStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "4399:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4399:21:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 396,
                  "nodeType": "IfStatement",
                  "src": "4394:127:12",
                  "trueBody": {
                    "id": 395,
                    "nodeType": "Block",
                    "src": "4422:99:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 388,
                              "name": "_strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "4457:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 385,
                              "name": "live_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "4436:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4436:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4436:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "4436:31:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 392,
                              "name": "_strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "4500:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 391,
                            "name": "StrategyAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "4486:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4486:24:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 394,
                        "nodeType": "EmitStatement",
                        "src": "4481:29:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 374,
              "nodeType": "StructuredDocumentation",
              "src": "4191:129:12",
              "text": " @dev addStrategy\n      Adds a new strategy\n  @param _strategy address Strategy address to be added"
            },
            "functionSelector": "223e5479",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 379,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 378,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27668,
                  "src": "4374:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "4374:9:12"
              }
            ],
            "name": "addStrategy",
            "nameLocation": "4334:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "4354:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "4346:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4346:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4345:19:12"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4384:0:12"
            },
            "scope": 475,
            "src": "4325:202:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "4742:427:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 407,
                          "name": "_strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 401,
                          "src": "4760:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4781:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4773:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 408,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4773:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4773:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4760:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642073747261746567792061646472657373",
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4785:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_456134e13aba34b08c9c66e5eae1fec17d7ce9e8d729a5b48efeb15bfaeb9d04",
                          "typeString": "literal_string \"Invalid strategy address\""
                        },
                        "value": "Invalid strategy address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_456134e13aba34b08c9c66e5eae1fec17d7ce9e8d729a5b48efeb15bfaeb9d04",
                          "typeString": "literal_string \"Invalid strategy address\""
                        }
                      ],
                      "id": 406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4752:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4752:60:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "4752:60:12"
                },
                {
                  "assignments": [
                    417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 417,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "4830:1:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 465,
                      "src": "4822:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4822:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4822:9:12"
                },
                {
                  "body": {
                    "id": 437,
                    "nodeType": "Block",
                    "src": "4886:67:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 430,
                              "name": "live_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "4904:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 432,
                            "indexExpression": {
                              "id": 431,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "4920:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4904:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 433,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "4926:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4904:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 436,
                        "nodeType": "IfStatement",
                        "src": "4900:42:12",
                        "trueBody": {
                          "id": 435,
                          "nodeType": "Break",
                          "src": "4937:5:12"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 423,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "4853:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 424,
                        "name": "live_strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "4857:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4857:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4853:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 438,
                  "initializationExpression": {
                    "expression": {
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 419,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4846:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4850:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4846:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 422,
                    "nodeType": "ExpressionStatement",
                    "src": "4846:5:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4881:3:12",
                      "subExpression": {
                        "id": 427,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4881:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 429,
                    "nodeType": "ExpressionStatement",
                    "src": "4881:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "4841:112:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 439,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "4966:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 440,
                        "name": "live_strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "4970:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4970:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4966:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 464,
                  "nodeType": "IfStatement",
                  "src": "4962:201:12",
                  "trueBody": {
                    "id": 463,
                    "nodeType": "Block",
                    "src": "4994:169:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 443,
                              "name": "live_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "5008:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 445,
                            "indexExpression": {
                              "id": 444,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "5024:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5008:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 446,
                              "name": "live_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "5029:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 451,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 447,
                                  "name": "live_strategies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "5045:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5045:22:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5070:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5045:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5029:43:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5008:64:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 453,
                        "nodeType": "ExpressionStatement",
                        "src": "5008:64:12"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 454,
                              "name": "live_strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "5086:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "5086:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5086:21:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 458,
                        "nodeType": "ExpressionStatement",
                        "src": "5086:21:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 460,
                              "name": "_strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "5142:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 459,
                            "name": "StrategyRetired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 918,
                            "src": "5126:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5126:26:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 462,
                        "nodeType": "EmitStatement",
                        "src": "5121:31:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 399,
              "nodeType": "StructuredDocumentation",
              "src": "4533:142:12",
              "text": " @dev retireStrategy\n      Removes an existng strategy\n  @param _strategy address Strategy address to be removed"
            },
            "functionSelector": "69108363",
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 404,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 403,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27668,
                  "src": "4732:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "4732:9:12"
              }
            ],
            "name": "retireStrategy",
            "nameLocation": "4689:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "4712:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "4704:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4704:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4703:19:12"
            },
            "returnParameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4742:0:12"
            },
            "scope": 475,
            "src": "4680:489:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 473,
              "nodeType": "Block",
              "src": "5228:49:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "496e76616c6964206574686572207472616e73666572",
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5245:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5be3d347cb440bb217424dc7582093b31722956b33360aeeb72d36dbcbc806d8",
                          "typeString": "literal_string \"Invalid ether transfer\""
                        },
                        "value": "Invalid ether transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5be3d347cb440bb217424dc7582093b31722956b33360aeeb72d36dbcbc806d8",
                          "typeString": "literal_string \"Invalid ether transfer\""
                        }
                      ],
                      "id": 469,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "5238:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5238:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "5238:32:12"
                }
              ]
            },
            "id": 474,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5216:2:12"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5228:0:12"
            },
            "scope": 475,
            "src": "5208:69:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 476,
        "src": "470:4809:12",
        "usedErrors": []
      }
    ],
    "src": "55:5225:12"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114b8806100826000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610186578063b4ba9e11146101ab578063b94b7a97146101be578063d4570c1c146101d1578063d731060c1461020b578063f2fde38b1461021e576100b4565b8063223e5479146100fa5780632c71df621461010f5780632e8ebaae1461013557806344469f9814610158578063691083631461016b578063715018a61461017e575b60405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21032ba3432b9103a3930b739b332b960511b60448201526064015b60405180910390fd5b61010d61010836600461111d565b610231565b005b61012261011d366004611138565b6102ed565b6040519081526020015b60405180910390f35b61014861014336600461111d565b610401565b604051901515815260200161012c565b6101486101663660046111b7565b61046b565b61010d61017936600461111d565b610826565b61010d6109fd565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161012c565b6101226101b9366004611138565b610a33565b61010d6101cc366004611238565b610a98565b6101226101df366004611138565b6001600160a01b0380821660009081526002602090815260408083209386168352929052205492915050565b61019361021936600461125b565b610c0b565b61010d61022c36600461111d565b610c35565b6000546001600160a01b0316331461025b5760405162461bcd60e51b81526004016100f190611274565b61026481610401565b6102ea57600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0383169081179091556040519081527f3f008fd510eae7a9e7bee13513d7b83bef8003d488b5a3d0b0da4de71d6846f19060200160405180910390a15b50565b6000600260015414156103425760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f1565b6002600155326001600160a01b038416146103965760405162461bcd60e51b8152602060048201526014602482015273086c2d8d8cae440c8decae6dc4ee840dac2e8c6d60631b60448201526064016100f1565b61039f33610401565b6103eb5760405162461bcd60e51b815260206004820152601960248201527f43616c6c6572206d75737420626520612073747261746567790000000000000060448201526064016100f1565b6103f6838333610ccd565b600180559392505050565b6000805b60045481101561046257826001600160a01b03166004828154811061042c5761042c6112a9565b6000918252602090912001546001600160a01b031614156104505750600192915050565b8061045a816112d5565b915050610405565b50600092915050565b60008483146104b15760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b60448201526064016100f1565b6000805b8481101561065b5760008888838181106104d1576104d16112a9565b90506020020160208101906104e6919061111d565b6001600160a01b0316141561052f5760405162461bcd60e51b815260206004820152600f60248201526e1059191c995cdcc81a5b9d985b1a59608a1b60448201526064016100f1565b6000868683818110610543576105436112a9565b90506020020135116105875760405162461bcd60e51b815260206004820152600d60248201526c15985b1d59481a5b9d985b1a59609a1b60448201526064016100f1565b858582818110610599576105996112a9565b9050602002013560026000866001600160a01b03166001600160a01b0316815260200190815260200160002060008a8a858181106105d9576105d96112a9565b90506020020160208101906105ee919061111d565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461061d91906112f0565b909155508690508582818110610635576106356112a9565b905060200201358261064791906112f0565b91506106546001826112f0565b90506104b5565b506040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c79190611308565b90506106de6001600160a01b038516333085610dc6565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190611308565b9050826107568383611321565b146107975760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b60448201526064016100f1565b6001600160a01b0385166000908152600360205260409020546107bb9084906112f0565b6001600160a01b0386166000908152600360205260409081902091909155517fa6c91e0714fa5cea1a48a7903a4cb4fdfc6a5409b04c2f5e5f01140140846f749061080f908b908b908b908b908b90611338565b60405180910390a150600198975050505050505050565b6000546001600160a01b031633146108505760405162461bcd60e51b81526004016100f190611274565b6001600160a01b0381166108a65760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642073747261746567792061646472657373000000000000000060448201526064016100f1565b60005b60045481101561090257816001600160a01b0316600482815481106108d0576108d06112a9565b6000918252602090912001546001600160a01b031614156108f057610902565b806108fa816112d5565b9150506108a9565b6004548110156109f9576004805461091c90600190611321565b8154811061092c5761092c6112a9565b600091825260209091200154600480546001600160a01b039092169183908110610958576109586112a9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506004805480610997576109976113cf565b6000828152602090819020600019908301810180546001600160a01b03191690559091019091556040516001600160a01b03841681527f43328b6eb7f0f6711a295cfc22368af8227bf60b67a6f6a5454f6168726d3e25910160405180910390a15b5050565b6000546001600160a01b03163314610a275760405162461bcd60e51b81526004016100f190611274565b610a316000610e37565b565b600060026001541415610a885760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f1565b60026001556103f6838381610ccd565b6000546001600160a01b03163314610ac25760405162461bcd60e51b81526004016100f190611274565b6001600160a01b038116600081815260036020526040908190205490516370a0823160e01b8152306004820152909184916370a0823190602401602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611308565b610b479190611321565b1015610b955760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f7420776974686472617720616c6c6f636174656420746f6b656e0060448201526064016100f1565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0691906113e5565b505050565b60048181548110610c1b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610c5f5760405162461bcd60e51b81526004016100f190611274565b6001600160a01b038116610cc45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f1565b6102ea81610e37565b6001600160a01b03808316600090815260026020908152604080832093871683529290529081205480610d04576000915050610dbf565b6001600160a01b038085166000818152600260209081526040808320948a16835293905291822091909155610d3a908483610e87565b6001600160a01b038416600090815260036020526040902054610d5e908290611321565b6001600160a01b0385811660008181526003602090815260409182902094909455805192891683529282018490528183015290517f7e6632ca16a0ac6cf28448500b1a17d96c8b8163ad4c4a9b44ef5386cc02779e9181900360600190a190505b9392505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610e319085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610eb7565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038316602482015260448101829052610c0690849063a9059cbb60e01b90606401610dfa565b6000610f0c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f899092919063ffffffff16565b805190915015610c065780806020019051810190610f2a91906113e5565b610c065760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100f1565b6060610f988484600085610fa0565b949350505050565b6060824710156110015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100f1565b843b61104f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100f1565b600080866001600160a01b0316858760405161106b9190611433565b60006040518083038185875af1925050503d80600081146110a8576040519150601f19603f3d011682016040523d82523d6000602084013e6110ad565b606091505b50915091506110bd8282866110c8565b979650505050505050565b606083156110d7575081610dbf565b8251156110e75782518084602001fd5b8160405162461bcd60e51b81526004016100f1919061144f565b80356001600160a01b038116811461111857600080fd5b919050565b60006020828403121561112f57600080fd5b610dbf82611101565b6000806040838503121561114b57600080fd5b61115483611101565b915061116260208401611101565b90509250929050565b60008083601f84011261117d57600080fd5b50813567ffffffffffffffff81111561119557600080fd5b6020830191508360208260051b85010111156111b057600080fd5b9250929050565b6000806000806000606086880312156111cf57600080fd5b853567ffffffffffffffff808211156111e757600080fd5b6111f389838a0161116b565b9097509550602088013591508082111561120c57600080fd5b506112198882890161116b565b909450925061122c905060408701611101565b90509295509295909350565b6000806040838503121561124b57600080fd5b8235915061116260208401611101565b60006020828403121561126d57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156112e9576112e96112bf565b5060010190565b60008219821115611303576113036112bf565b500190565b60006020828403121561131a57600080fd5b5051919050565b600082821015611333576113336112bf565b500390565b6060808252810185905260008660808301825b88811015611379576001600160a01b0361136484611101565b1682526020928301929091019060010161134b565b5083810360208501528581526001600160fb1b0386111561139957600080fd5b8560051b915081876020830137600091016020019081526001600160a01b03939093166040929092019190915250949350505050565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156113f757600080fd5b81518015158114610dbf57600080fd5b60005b8381101561142257818101518382015260200161140a565b83811115610e315750506000910152565b60008251611445818460208701611407565b9190910192915050565b602081526000825180602084015261146e816040850160208701611407565b601f01601f1916919091016040019291505056fea26469706673582212205b591522bc2b3efab574899bdc8e83e00338f4b2155cb1a4d62397f3d7abf4b264736f6c634300080c0033",
  "bytecodeSha1": "5d1192112585208d0f74bb721b5d7c2ab6133002",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "DFRewards",
  "coverageMap": {
    "branches": {
      "1": {
        "Ownable.transferOwnership": {
          "68": [
            1934,
            1956,
            true
          ]
        }
      },
      "12": {
        "DFRewards._claim": {
          "64": [
            2363,
            2371,
            false
          ]
        },
        "DFRewards.addStrategy": {
          "52": [
            4399,
            4420,
            false
          ]
        },
        "DFRewards.allocate": {
          "56": [
            1119,
            1148,
            true
          ],
          "57": [
            1287,
            1308,
            true
          ],
          "58": [
            1350,
            1364,
            true
          ],
          "59": [
            1787,
            1818,
            true
          ]
        },
        "DFRewards.claimForStrat": {
          "53": [
            3064,
            3080,
            true
          ],
          "54": [
            3123,
            3145,
            true
          ]
        },
        "DFRewards.isStrategy": {
          "55": [
            4102,
            4133,
            false
          ]
        },
        "DFRewards.retireStrategy": {
          "60": [
            4760,
            4783,
            true
          ],
          "61": [
            4904,
            4935,
            false
          ],
          "62": [
            4966,
            4992,
            false
          ]
        },
        "DFRewards.withdrawERCToken": {
          "63": [
            3588,
            3673,
            true
          ]
        }
      },
      "15": {},
      "2": {
        "DFRewards.claimFor": {
          "69": [
            2259,
            2278,
            true
          ]
        }
      },
      "4": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "70": [
            3668,
            3689,
            false
          ],
          "71": [
            3752,
            3782,
            true
          ]
        }
      },
      "8": {
        "Address._verifyCallResult": {
          "66": [
            7124,
            7131,
            false
          ],
          "67": [
            7265,
            7286,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "65": [
            4745,
            4775,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "1": {
        "Ownable._setOwner": {
          "42": [
            2131,
            2148
          ],
          "43": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "1": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "29": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "33": [
            1926,
            1999
          ],
          "34": [
            2009,
            2028
          ]
        }
      },
      "12": {
        "DFRewards.<fallback>": {
          "0": [
            5238,
            5270
          ]
        },
        "DFRewards._claim": {
          "35": [
            2387,
            2395
          ],
          "36": [
            2415,
            2446
          ],
          "37": [
            2456,
            2505
          ],
          "38": [
            2515,
            2570
          ],
          "39": [
            2580,
            2616
          ],
          "40": [
            2626,
            2636
          ]
        },
        "DFRewards.addStrategy": {
          "4": [
            4436,
            4467
          ],
          "5": [
            4481,
            4510
          ]
        },
        "DFRewards.allocate": {
          "12": [
            1111,
            1171
          ],
          "13": [
            1279,
            1328
          ],
          "14": [
            1342,
            1382
          ],
          "15": [
            1396,
            1441
          ],
          "16": [
            1455,
            1480
          ],
          "17": [
            1257,
            1263
          ],
          "18": [
            1574,
            1697
          ],
          "19": [
            1779,
            1840
          ],
          "20": [
            1851,
            1914
          ],
          "21": [
            1925,
            1968
          ],
          "22": [
            1978,
            1989
          ]
        },
        "DFRewards.claimFor": {
          "30": [
            2821,
            2858
          ]
        },
        "DFRewards.claimForStrat": {
          "6": [
            3056,
            3105
          ],
          "7": [
            3115,
            3175
          ],
          "8": [
            3186,
            3230
          ]
        },
        "DFRewards.claimable": {
          "2": [
            2124,
            2158
          ]
        },
        "DFRewards.isStrategy": {
          "9": [
            4135,
            4146
          ],
          "10": [
            4079,
            4082
          ],
          "11": [
            4166,
            4178
          ]
        },
        "DFRewards.retireStrategy": {
          "23": [
            4752,
            4812
          ],
          "24": [
            4937,
            4942
          ],
          "25": [
            4881,
            4884
          ],
          "26": [
            5008,
            5072
          ],
          "27": [
            5086,
            5107
          ],
          "28": [
            5121,
            5152
          ]
        },
        "DFRewards.withdrawERCToken": {
          "31": [
            3567,
            3730
          ],
          "32": [
            3740,
            3783
          ]
        }
      },
      "15": {},
      "2": {},
      "4": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "45": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "44": [
            746,
            832
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "41": [
            983,
            1079
          ]
        }
      },
      "8": {
        "Address._verifyCallResult": {
          "50": [
            7147,
            7164
          ],
          "51": [
            7591,
            7611
          ]
        },
        "Address.functionCall": {
          "46": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "47": [
            4737,
            4818
          ],
          "48": [
            4828,
            4888
          ],
          "49": [
            4982,
            5041
          ]
        }
      },
      "9": {
        "Context._msgSender": {
          "3": [
            658,
            675
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "IDFRewards",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610186578063b4ba9e11146101ab578063b94b7a97146101be578063d4570c1c146101d1578063d731060c1461020b578063f2fde38b1461021e576100b4565b8063223e5479146100fa5780632c71df621461010f5780632e8ebaae1461013557806344469f9814610158578063691083631461016b578063715018a61461017e575b60405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21032ba3432b9103a3930b739b332b960511b60448201526064015b60405180910390fd5b61010d61010836600461111d565b610231565b005b61012261011d366004611138565b6102ed565b6040519081526020015b60405180910390f35b61014861014336600461111d565b610401565b604051901515815260200161012c565b6101486101663660046111b7565b61046b565b61010d61017936600461111d565b610826565b61010d6109fd565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161012c565b6101226101b9366004611138565b610a33565b61010d6101cc366004611238565b610a98565b6101226101df366004611138565b6001600160a01b0380821660009081526002602090815260408083209386168352929052205492915050565b61019361021936600461125b565b610c0b565b61010d61022c36600461111d565b610c35565b6000546001600160a01b0316331461025b5760405162461bcd60e51b81526004016100f190611274565b61026481610401565b6102ea57600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0383169081179091556040519081527f3f008fd510eae7a9e7bee13513d7b83bef8003d488b5a3d0b0da4de71d6846f19060200160405180910390a15b50565b6000600260015414156103425760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f1565b6002600155326001600160a01b038416146103965760405162461bcd60e51b8152602060048201526014602482015273086c2d8d8cae440c8decae6dc4ee840dac2e8c6d60631b60448201526064016100f1565b61039f33610401565b6103eb5760405162461bcd60e51b815260206004820152601960248201527f43616c6c6572206d75737420626520612073747261746567790000000000000060448201526064016100f1565b6103f6838333610ccd565b600180559392505050565b6000805b60045481101561046257826001600160a01b03166004828154811061042c5761042c6112a9565b6000918252602090912001546001600160a01b031614156104505750600192915050565b8061045a816112d5565b915050610405565b50600092915050565b60008483146104b15760405162461bcd60e51b8152602060048201526012602482015271098cadccee8d0e640daeae6e840dac2e8c6d60731b60448201526064016100f1565b6000805b8481101561065b5760008888838181106104d1576104d16112a9565b90506020020160208101906104e6919061111d565b6001600160a01b0316141561052f5760405162461bcd60e51b815260206004820152600f60248201526e1059191c995cdcc81a5b9d985b1a59608a1b60448201526064016100f1565b6000868683818110610543576105436112a9565b90506020020135116105875760405162461bcd60e51b815260206004820152600d60248201526c15985b1d59481a5b9d985b1a59609a1b60448201526064016100f1565b858582818110610599576105996112a9565b9050602002013560026000866001600160a01b03166001600160a01b0316815260200190815260200160002060008a8a858181106105d9576105d96112a9565b90506020020160208101906105ee919061111d565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461061d91906112f0565b909155508690508582818110610635576106356112a9565b905060200201358261064791906112f0565b91506106546001826112f0565b90506104b5565b506040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c79190611308565b90506106de6001600160a01b038516333085610dc6565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190611308565b9050826107568383611321565b146107975760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b60448201526064016100f1565b6001600160a01b0385166000908152600360205260409020546107bb9084906112f0565b6001600160a01b0386166000908152600360205260409081902091909155517fa6c91e0714fa5cea1a48a7903a4cb4fdfc6a5409b04c2f5e5f01140140846f749061080f908b908b908b908b908b90611338565b60405180910390a150600198975050505050505050565b6000546001600160a01b031633146108505760405162461bcd60e51b81526004016100f190611274565b6001600160a01b0381166108a65760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642073747261746567792061646472657373000000000000000060448201526064016100f1565b60005b60045481101561090257816001600160a01b0316600482815481106108d0576108d06112a9565b6000918252602090912001546001600160a01b031614156108f057610902565b806108fa816112d5565b9150506108a9565b6004548110156109f9576004805461091c90600190611321565b8154811061092c5761092c6112a9565b600091825260209091200154600480546001600160a01b039092169183908110610958576109586112a9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506004805480610997576109976113cf565b6000828152602090819020600019908301810180546001600160a01b03191690559091019091556040516001600160a01b03841681527f43328b6eb7f0f6711a295cfc22368af8227bf60b67a6f6a5454f6168726d3e25910160405180910390a15b5050565b6000546001600160a01b03163314610a275760405162461bcd60e51b81526004016100f190611274565b610a316000610e37565b565b600060026001541415610a885760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f1565b60026001556103f6838381610ccd565b6000546001600160a01b03163314610ac25760405162461bcd60e51b81526004016100f190611274565b6001600160a01b038116600081815260036020526040908190205490516370a0823160e01b8152306004820152909184916370a0823190602401602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611308565b610b479190611321565b1015610b955760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f7420776974686472617720616c6c6f636174656420746f6b656e0060448201526064016100f1565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0691906113e5565b505050565b60048181548110610c1b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610c5f5760405162461bcd60e51b81526004016100f190611274565b6001600160a01b038116610cc45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f1565b6102ea81610e37565b6001600160a01b03808316600090815260026020908152604080832093871683529290529081205480610d04576000915050610dbf565b6001600160a01b038085166000818152600260209081526040808320948a16835293905291822091909155610d3a908483610e87565b6001600160a01b038416600090815260036020526040902054610d5e908290611321565b6001600160a01b0385811660008181526003602090815260409182902094909455805192891683529282018490528183015290517f7e6632ca16a0ac6cf28448500b1a17d96c8b8163ad4c4a9b44ef5386cc02779e9181900360600190a190505b9392505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610e319085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610eb7565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038316602482015260448101829052610c0690849063a9059cbb60e01b90606401610dfa565b6000610f0c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f899092919063ffffffff16565b805190915015610c065780806020019051810190610f2a91906113e5565b610c065760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100f1565b6060610f988484600085610fa0565b949350505050565b6060824710156110015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100f1565b843b61104f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100f1565b600080866001600160a01b0316858760405161106b9190611433565b60006040518083038185875af1925050503d80600081146110a8576040519150601f19603f3d011682016040523d82523d6000602084013e6110ad565b606091505b50915091506110bd8282866110c8565b979650505050505050565b606083156110d7575081610dbf565b8251156110e75782518084602001fd5b8160405162461bcd60e51b81526004016100f1919061144f565b80356001600160a01b038116811461111857600080fd5b919050565b60006020828403121561112f57600080fd5b610dbf82611101565b6000806040838503121561114b57600080fd5b61115483611101565b915061116260208401611101565b90509250929050565b60008083601f84011261117d57600080fd5b50813567ffffffffffffffff81111561119557600080fd5b6020830191508360208260051b85010111156111b057600080fd5b9250929050565b6000806000806000606086880312156111cf57600080fd5b853567ffffffffffffffff808211156111e757600080fd5b6111f389838a0161116b565b9097509550602088013591508082111561120c57600080fd5b506112198882890161116b565b909450925061122c905060408701611101565b90509295509295909350565b6000806040838503121561124b57600080fd5b8235915061116260208401611101565b60006020828403121561126d57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156112e9576112e96112bf565b5060010190565b60008219821115611303576113036112bf565b500190565b60006020828403121561131a57600080fd5b5051919050565b600082821015611333576113336112bf565b500390565b6060808252810185905260008660808301825b88811015611379576001600160a01b0361136484611101565b1682526020928301929091019060010161134b565b5083810360208501528581526001600160fb1b0386111561139957600080fd5b8560051b915081876020830137600091016020019081526001600160a01b03939093166040929092019190915250949350505050565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156113f757600080fd5b81518015158114610dbf57600080fd5b60005b8381101561142257818101518382015260200161140a565b83811115610e315750506000910152565b60008251611445818460208701611407565b9190910192915050565b602081526000825180602084015261146e816040850160208701611407565b601f01601f1916919091016040019291505056fea26469706673582212205b591522bc2b3efab574899bdc8e83e00338f4b2155cb1a4d62397f3d7abf4b264736f6c634300080c0033",
  "deployedSourceMap": "470:4809:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5238:32;;-1:-1:-1;;;5238:32:12;;216:2:75;5238:32:12;;;198:21:75;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:75;;;267:52;336:18;;5238:32:12;;;;;;;;4325:202;;;;;;:::i;:::-;;:::i;:::-;;2922:315;;;;;;:::i;:::-;;:::i;:::-;;;1145:25:75;;;1133:2;1118:18;2922:315:12;;;;;;;;3955:230;;;;;;:::i;:::-;;:::i;:::-;;;1346:14:75;;1339:22;1321:41;;1309:2;1294:18;3955:230:12;1181:187:75;954:1042:12;;;;;;:::i;:::-;;:::i;4680:489::-;;;;;;:::i;:::-;;:::i;1605:92:1:-;;;:::i;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:1;973:85;;;-1:-1:-1;;;;;2761:32:75;;;2743:51;;2731:2;2716:18;973:85:1;2597:203:75;2692:173:12;;;;;;:::i;:::-;;:::i;3460:330::-;;;;;;:::i;:::-;;:::i;2002:163::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2131:22:12;;;2101:7;2131:22;;;:8;:22;;;;;;;;:27;;;;;;;;;;2002:163;;;;;769:32;;;;;;:::i;:::-;;:::i;1846:189:1:-;;;;;;:::i;:::-;;:::i;4325:202:12:-;1019:7:1;1045:6;-1:-1:-1;;;;;1045:6:1;665:10:9;1185:23:1;1177:68;;;;-1:-1:-1;;;1177:68:1;;;;;;;:::i;:::-;4399:21:12::1;4410:9;4399:10;:21::i;:::-;4394:127;;4436:15;:31:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;4436:31:12;;;;;::::1;::::0;;-1:-1:-1;;;;;;4436:31:12::1;-1:-1:-1::0;;;;;4436:31:12;::::1;::::0;;::::1;::::0;;;4486:24:::1;::::0;2743:51:75;;;4486:24:12::1;::::0;2731:2:75;2716:18;4486:24:12::1;;;;;;;4394:127;4325:202:::0;:::o;2922:315::-;3033:7;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;3812:2:75;2251:63:2;;;3794:21:75;3851:2;3831:18;;;3824:30;3890:33;3870:18;;;3863:61;3941:18;;2251:63:2;3610:355:75;2251:63:2;1680:1;2389:7;:18;3064:9:12::1;-1:-1:-1::0;;;;;3064:16:12;::::1;;3056:49;;;::::0;-1:-1:-1;;;3056:49:12;;4172:2:75;3056:49:12::1;::::0;::::1;4154:21:75::0;4211:2;4191:18;;;4184:30;-1:-1:-1;;;4230:18:75;;;4223:50;4290:18;;3056:49:12::1;3970:344:75::0;3056:49:12::1;3123:22;3134:10;3123;:22::i;:::-;3115:60;;;::::0;-1:-1:-1;;;3115:60:12;;4521:2:75;3115:60:12::1;::::0;::::1;4503:21:75::0;4560:2;4540:18;;;4533:30;4599:27;4579:18;;;4572:55;4644:18;;3115:60:12::1;4319:349:75::0;3115:60:12::1;3193:37;3200:3;3205:12;3219:10;3193:6;:37::i;:::-;1637:1:2::0;2562:22;;3186:44:12;2922:315;-1:-1:-1;;;2922:315:12:o;3955:230::-;4015:4;;4031:126;4055:15;:22;4051:26;;4031:126;;;4124:9;-1:-1:-1;;;;;4102:31:12;:15;4118:1;4102:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4102:18:12;:31;4098:48;;;-1:-1:-1;4142:4:12;;3955:230;-1:-1:-1;;3955:230:12:o;4098:48::-;4079:3;;;;:::i;:::-;;;;4031:126;;;-1:-1:-1;4173:5:12;;3955:230;-1:-1:-1;;3955:230:12:o;954:1042::-;1095:4;1119:29;;;1111:60;;;;-1:-1:-1;;;1111:60:12;;5279:2:75;1111:60:12;;;5261:21:75;5318:2;5298:18;;;5291:30;-1:-1:-1;;;5337:18:75;;;5330:48;5395:18;;1111:60:12;5077:342:75;1111:60:12;1182:19;1222:9;1217:274;1237:18;;;1217:274;;;1306:1;1287:4;;1292:1;1287:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1287:21:12;;;1279:49;;;;-1:-1:-1;;;1279:49:12;;5626:2:75;1279:49:12;;;5608:21:75;5665:2;5645:18;;;5638:30;-1:-1:-1;;;5684:18:75;;;5677:45;5739:18;;1279:49:12;5424:339:75;1279:49:12;1363:1;1350:7;;1358:1;1350:10;;;;;;;:::i;:::-;;;;;;;:14;1342:40;;;;-1:-1:-1;;;1342:40:12;;5970:2:75;1342:40:12;;;5952:21:75;6009:2;5989:18;;;5982:30;-1:-1:-1;;;6028:18:75;;;6021:43;6081:18;;1342:40:12;5768:337:75;1342:40:12;1431:7;;1439:1;1431:10;;;;;;;:::i;:::-;;;;;;;1396:8;:22;1405:12;-1:-1:-1;;;;;1396:22:12;-1:-1:-1;;;;;1396:22:12;;;;;;;;;;;;:31;1419:4;;1424:1;1419:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1396:31:12;-1:-1:-1;;;;;1396:31:12;;;;;;;;;;;;;:45;;;;;;;:::i;:::-;;;;-1:-1:-1;1470:7:12;;-1:-1:-1;1470:7:12;1478:1;1470:10;;;;;;;:::i;:::-;;;;;;;1455:25;;;;;:::i;:::-;;-1:-1:-1;1257:6:12;1262:1;1257:6;;:::i;:::-;;;1217:274;;;-1:-1:-1;1519:45:12;;-1:-1:-1;;;1519:45:12;;1558:4;1519:45;;;2743:51:75;1501:15:12;;-1:-1:-1;;;;;1519:30:12;;;;;2716:18:75;;1519:45:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1501:63;-1:-1:-1;1574:123:12;-1:-1:-1;;;;;1574:37:12;;1625:10;1657:4;1676:11;1574:37;:123::i;:::-;1724:45;;-1:-1:-1;;;1724:45:12;;1763:4;1724:45;;;2743:51:75;1707:14:12;;-1:-1:-1;;;;;1724:30:12;;;;;2716:18:75;;1724:45:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1707:62;-1:-1:-1;1807:11:12;1787:16;1796:7;1707:62;1787:16;:::i;:::-;:31;1779:61;;;;-1:-1:-1;;;1779:61:12;;6764:2:75;1779:61:12;;;6746:21:75;6803:2;6783:18;;;6776:30;-1:-1:-1;;;6822:18:75;;;6815:47;6879:18;;1779:61:12;6562:341:75;1779:61:12;-1:-1:-1;;;;;1877:23:12;;;;;;:9;:23;;;;;;:37;;1903:11;;1877:37;:::i;:::-;-1:-1:-1;;;;;1851:23:12;;;;;;:9;:23;;;;;;;:63;;;;1930:38;;;;;1940:4;;;;1946:7;;;;1861:12;;1930:38;:::i;:::-;;;;;;;;-1:-1:-1;1985:4:12;;954:1042;-1:-1:-1;;;;;;;;954:1042:12:o;4680:489::-;1019:7:1;1045:6;-1:-1:-1;;;;;1045:6:1;665:10:9;1185:23:1;1177:68;;;;-1:-1:-1;;;1177:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4760:23:12;::::1;4752:60;;;::::0;-1:-1:-1;;;4752:60:12;;8246:2:75;4752:60:12::1;::::0;::::1;8228:21:75::0;8285:2;8265:18;;;8258:30;8324:26;8304:18;;;8297:54;8368:18;;4752:60:12::1;8044:348:75::0;4752:60:12::1;4822:9;4841:112;4857:15;:22:::0;4853:26;::::1;4841:112;;;4926:9;-1:-1:-1::0;;;;;4904:31:12::1;:15;4920:1;4904:18;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;4904:18:12::1;:31;4900:42;;;4937:5;;4900:42;4881:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4841:112;;;4970:15;:22:::0;4966:26;::::1;4962:201;;;5029:15;5045:22:::0;;:26:::1;::::0;5070:1:::1;::::0;5045:26:::1;:::i;:::-;5029:43;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;5008:15:::1;:18:::0;;-1:-1:-1;;;;;5029:43:12;;::::1;::::0;5024:1;;5008:18;::::1;;;;;:::i;:::-;;;;;;;;;:64;;;;;-1:-1:-1::0;;;;;5008:64:12::1;;;;;-1:-1:-1::0;;;;;5008:64:12::1;;;;;;5086:15;:21;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;5086:21:12;;;;;;;-1:-1:-1;;;;;;5086:21:12::1;::::0;;;;;;;;5126:26:::1;::::0;-1:-1:-1;;;;;2761:32:75;;2743:51;;5126:26:12::1;::::0;2716:18:75;5126:26:12::1;;;;;;;4962:201;4742:427;4680:489:::0;:::o;1605:92:1:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:1;665:10:9;1185:23:1;1177:68;;;;-1:-1:-1;;;1177:68:1;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;2692:173:12:-;2798:7;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;3812:2:75;2251:63:2;;;3794:21:75;3851:2;3831:18;;;3824:30;3890:33;3870:18;;;3863:61;3941:18;;2251:63:2;3610:355:75;2251:63:2;1680:1;2389:7;:18;2828:30:12::1;2835:3:::0;2840:12;2835:3;2828:6:::1;:30::i;3460:330::-:0;1019:7:1;1045:6;-1:-1:-1;;;;;1045:6:1;665:10:9;1185:23:1;1177:68;;;;-1:-1:-1;;;1177:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3656:17:12;::::1;;::::0;;;:9:::1;:17;::::0;;;;;;;3588:39;;-1:-1:-1;;;3588:39:12;;3621:4:::1;3588:39;::::0;::::1;2743:51:75::0;3656:17:12;;3630:6;;3588:24:::1;::::0;2716:18:75;;3588:39:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;:85;;3567:163;;;::::0;-1:-1:-1;;;3567:163:12;;8731:2:75;3567:163:12::1;::::0;::::1;8713:21:75::0;8770:2;8750:18;;;8743:30;8809:33;8789:18;;;8782:61;8860:18;;3567:163:12::1;8529:355:75::0;3567:163:12::1;3740:43;::::0;-1:-1:-1;;;3740:43:12;;3764:10:::1;3740:43;::::0;::::1;9063:51:75::0;9130:18;;;9123:34;;;-1:-1:-1;;;;;3740:23:12;::::1;::::0;::::1;::::0;9036:18:75;;3740:43:12::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3460:330:::0;;:::o;769:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;769:32:12;;-1:-1:-1;769:32:12;:::o;1846:189:1:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:1;665:10:9;1185:23:1;1177:68;;;;-1:-1:-1;;;1177:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:1;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:1;;9652:2:75;1926:73:1::1;::::0;::::1;9634:21:75::0;9691:2;9671:18;;;9664:30;9730:34;9710:18;;;9703:62;-1:-1:-1;;;9781:18:75;;;9774:36;9827:19;;1926:73:1::1;9450:402:75::0;1926:73:1::1;2009:19;2019:8;2009:9;:19::i;2171:472:12:-:0;-1:-1:-1;;;;;2322:22:12;;;2289:7;2322:22;;;:8;:22;;;;;;;;:27;;;;;;;;;;;;2363:8;2359:47;;2394:1;2387:8;;;;;2359:47;-1:-1:-1;;;;;2415:22:12;;;2445:1;2415:22;;;:8;:22;;;;;;;;:27;;;;;;;;;;;:31;;;;2456:49;;2490:9;2501:3;2456:33;:49::i;:::-;-1:-1:-1;;;;;2541:23:12;;;;;;:9;:23;;;;;;:29;;2567:3;;2541:29;:::i;:::-;-1:-1:-1;;;;;2515:23:12;;;;;;;:9;:23;;;;;;;;;:55;;;;2585:31;;10115:15:75;;;10097:34;;10147:18;;;10140:34;;;10190:18;;;10183:43;2585:31:12;;;;;;;10047:2:75;2585:31:12;;;2633:3;-1:-1:-1;2171:472:12;;;;;;:::o;845:241:7:-;1010:68;;-1:-1:-1;;;;;10495:15:75;;;1010:68:7;;;10477:34:75;10547:15;;10527:18;;;10520:43;10579:18;;;10572:34;;;983:96:7;;1003:5;;-1:-1:-1;;;1033:27:7;10412:18:75;;1010:68:7;;;;-1:-1:-1;;1010:68:7;;;;;;;;;;;;;;-1:-1:-1;;;;;1010:68:7;-1:-1:-1;;;;;;1010:68:7;;;;;;;;;;983:19;:96::i;:::-;845:241;;;;:::o;2041:169:1:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:1;;;-1:-1:-1;;;;;;2131:17:1;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;634:205:7:-;773:58;;-1:-1:-1;;;;;9081:32:75;;773:58:7;;;9063:51:75;9130:18;;;9123:34;;;746:86:7;;766:5;;-1:-1:-1;;;796:23:7;9036:18:75;;773:58:7;8889:274:75;3140:706:7;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:7;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:7;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:7;;10819:2:75;3744:85:7;;;10801:21:75;10858:2;10838:18;;;10831:30;10897:34;10877:18;;;10870:62;-1:-1:-1;;;10948:18:75;;;10941:40;10998:19;;3744:85:7;10617:406:75;3461:223:8;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;3461:223;-1:-1:-1;;;;3461:223:8:o;4548:500::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:8;;11230:2:75;4737:81:8;;;11212:21:75;11269:2;11249:18;;;11242:30;11308:34;11288:18;;;11281:62;-1:-1:-1;;;11359:18:75;;;11352:36;11405:19;;4737:81:8;11028:402:75;4737:81:8;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:8;;11637:2:75;4828:60:8;;;11619:21:75;11676:2;11656:18;;;11649:30;11715:31;11695:18;;;11688:59;11764:18;;4828:60:8;11435:353:75;4828:60:8;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:8;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;4989:17;:52::i;:::-;4982:59;4548:500;-1:-1:-1;;;;;;;4548:500:8:o;6950:692::-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:8;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7598:12;7591:20;;-1:-1:-1;;;7591:20:8;;;;;;;;:::i;365:173:75:-;433:20;;-1:-1:-1;;;;;482:31:75;;472:42;;462:70;;528:1;525;518:12;462:70;365:173;;;:::o;543:186::-;602:6;655:2;643:9;634:7;630:23;626:32;623:52;;;671:1;668;661:12;623:52;694:29;713:9;694:29;:::i;734:260::-;802:6;810;863:2;851:9;842:7;838:23;834:32;831:52;;;879:1;876;869:12;831:52;902:29;921:9;902:29;:::i;:::-;892:39;;950:38;984:2;973:9;969:18;950:38;:::i;:::-;940:48;;734:260;;;;;:::o;1373:367::-;1436:8;1446:6;1500:3;1493:4;1485:6;1481:17;1477:27;1467:55;;1518:1;1515;1508:12;1467:55;-1:-1:-1;1541:20:75;;1584:18;1573:30;;1570:50;;;1616:1;1613;1606:12;1570:50;1653:4;1645:6;1641:17;1629:29;;1713:3;1706:4;1696:6;1693:1;1689:14;1681:6;1677:27;1673:38;1670:47;1667:67;;;1730:1;1727;1720:12;1667:67;1373:367;;;;;:::o;1745:847::-;1876:6;1884;1892;1900;1908;1961:2;1949:9;1940:7;1936:23;1932:32;1929:52;;;1977:1;1974;1967:12;1929:52;2017:9;2004:23;2046:18;2087:2;2079:6;2076:14;2073:34;;;2103:1;2100;2093:12;2073:34;2142:70;2204:7;2195:6;2184:9;2180:22;2142:70;:::i;:::-;2231:8;;-1:-1:-1;2116:96:75;-1:-1:-1;2319:2:75;2304:18;;2291:32;;-1:-1:-1;2335:16:75;;;2332:36;;;2364:1;2361;2354:12;2332:36;;2403:72;2467:7;2456:8;2445:9;2441:24;2403:72;:::i;:::-;2494:8;;-1:-1:-1;2377:98:75;-1:-1:-1;2548:38:75;;-1:-1:-1;2582:2:75;2567:18;;2548:38;:::i;:::-;2538:48;;1745:847;;;;;;;;:::o;2805:254::-;2873:6;2881;2934:2;2922:9;2913:7;2909:23;2905:32;2902:52;;;2950:1;2947;2940:12;2902:52;2986:9;2973:23;2963:33;;3015:38;3049:2;3038:9;3034:18;3015:38;:::i;3064:180::-;3123:6;3176:2;3164:9;3155:7;3151:23;3147:32;3144:52;;;3192:1;3189;3182:12;3144:52;-1:-1:-1;3215:23:75;;3064:180;-1:-1:-1;3064:180:75:o;3249:356::-;3451:2;3433:21;;;3470:18;;;3463:30;3529:34;3524:2;3509:18;;3502:62;3596:2;3581:18;;3249:356::o;4673:127::-;4734:10;4729:3;4725:20;4722:1;4715:31;4765:4;4762:1;4755:15;4789:4;4786:1;4779:15;4805:127;4866:10;4861:3;4857:20;4854:1;4847:31;4897:4;4894:1;4887:15;4921:4;4918:1;4911:15;4937:135;4976:3;-1:-1:-1;;4997:17:75;;4994:43;;;5017:18;;:::i;:::-;-1:-1:-1;5064:1:75;5053:13;;4937:135::o;6110:128::-;6150:3;6181:1;6177:6;6174:1;6171:13;6168:39;;;6187:18;;:::i;:::-;-1:-1:-1;6223:9:75;;6110:128::o;6243:184::-;6313:6;6366:2;6354:9;6345:7;6341:23;6337:32;6334:52;;;6382:1;6379;6372:12;6334:52;-1:-1:-1;6405:16:75;;6243:184;-1:-1:-1;6243:184:75:o;6432:125::-;6472:4;6500:1;6497;6494:8;6491:34;;;6505:18;;:::i;:::-;-1:-1:-1;6542:9:75;;6432:125::o;6908:1131::-;7224:2;7236:21;;;7209:18;;7292:22;;;7176:4;7372:6;7345:3;7330:19;;7176:4;7406:235;7420:6;7417:1;7414:13;7406:235;;;-1:-1:-1;;;;;7485:26:75;7504:6;7485:26;:::i;:::-;7481:52;7469:65;;7557:4;7616:15;;;;7581:12;;;;7442:1;7435:9;7406:235;;;-1:-1:-1;7679:19:75;;;7672:4;7657:20;;7650:49;7708:19;;;-1:-1:-1;;;;;7739:31:75;;7736:51;;;7783:1;7780;7773:12;7736:51;7817:6;7814:1;7810:14;7796:28;;7870:6;7862;7855:4;7850:3;7846:14;7833:44;7943:1;7900:16;;7918:4;7896:27;7932:13;;;-1:-1:-1;;;;;8000:32:75;;;;7995:2;7980:18;;;;7973:60;;;;-1:-1:-1;7896:27:75;6908:1131;-1:-1:-1;;;;6908:1131:75:o;8397:127::-;8458:10;8453:3;8449:20;8446:1;8439:31;8489:4;8486:1;8479:15;8513:4;8510:1;8503:15;9168:277;9235:6;9288:2;9276:9;9267:7;9263:23;9259:32;9256:52;;;9304:1;9301;9294:12;9256:52;9336:9;9330:16;9389:5;9382:13;9375:21;9368:5;9365:32;9355:60;;9411:1;9408;9401:12;11793:258;11865:1;11875:113;11889:6;11886:1;11883:13;11875:113;;;11965:11;;;11959:18;11946:11;;;11939:39;11911:2;11904:10;11875:113;;;12006:6;12003:1;12000:13;11997:48;;;-1:-1:-1;;12041:1:75;12023:16;;12016:27;11793:258::o;12056:274::-;12185:3;12223:6;12217:13;12239:53;12285:6;12280:3;12273:4;12265:6;12261:17;12239:53;:::i;:::-;12308:16;;;;;12056:274;-1:-1:-1;;12056:274:75:o;12335:383::-;12484:2;12473:9;12466:21;12447:4;12516:6;12510:13;12559:6;12554:2;12543:9;12539:18;12532:34;12575:66;12634:6;12629:2;12618:9;12614:18;12609:2;12601:6;12597:15;12575:66;:::i;:::-;12702:2;12681:15;-1:-1:-1;;12677:29:75;12662:45;;;;12709:2;12658:54;;12335:383;-1:-1:-1;;12335:383:75:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addStrategy(address)": {
        "details": "addStrategy      Adds a new strategy",
        "params": {
          "_strategy": "address Strategy address to be added"
        }
      },
      "isStrategy(address)": {
        "details": "isStrategy      Returns true if strategy exists in the list",
        "params": {
          "_strategy": "address Strategy address to be checked"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "retireStrategy(address)": {
        "details": "retireStrategy      Removes an existng strategy",
        "params": {
          "_strategy": "address Strategy address to be removed"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    470,
    5279
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xB4BA9E11 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xB94B7A97 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xD4570C1C EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xD731060C EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21E JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x223E5479 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x2C71DF62 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x2E8EBAAE EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x44469F98 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x69108363 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x24B73B30B634B21032BA3432B9103A3930B739B332B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x111D JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0x111D JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH2 0x148 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH2 0x10D PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x111D JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH2 0x122 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x193 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x125B JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x10D PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x111D JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x264 DUP2 PUSH2 0x401 JUMP JUMPDEST PUSH2 0x2EA JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x3F008FD510EAE7A9E7BEE13513D7B83BEF8003D488B5A3D0B0DA4DE71D6846F1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x342 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x86C2D8D8CAE440C8DECAE6DC4EE840DAC2E8C6D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0x39F CALLER PUSH2 0x401 JUMP JUMPDEST PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206265206120737472617465677900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0x3F6 DUP4 DUP4 CALLER PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x462 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x42C JUMPI PUSH2 0x42C PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x450 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x45A DUP2 PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x405 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP4 EQ PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x98CADCCEE8D0E640DAEAE6E840DAC2E8C6D PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x4D1 JUMPI PUSH2 0x4D1 PUSH2 0x12A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1059191C995CDCC81A5B9D985B1A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x12A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x587 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x15985B1D59481A5B9D985B1A59 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x12A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x2 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP11 DUP6 DUP2 DUP2 LT PUSH2 0x5D9 JUMPI PUSH2 0x5D9 PUSH2 0x12A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP7 SWAP1 POP DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x635 JUMPI PUSH2 0x635 PUSH2 0x12A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x654 PUSH1 0x1 DUP3 PUSH2 0x12F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP PUSH2 0x6DE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP6 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x725 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x756 DUP4 DUP4 PUSH2 0x1321 JUMP JUMPDEST EQ PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7420656E6F75676820746F6B656E73 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7BB SWAP1 DUP5 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xA6C91E0714FA5CEA1A48A7903A4CB4FDFC6A5409B04C2F5E5F01140140846F74 SWAP1 PUSH2 0x80F SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x1338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420737472617465677920616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x902 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D0 JUMPI PUSH2 0x8D0 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x8F0 JUMPI PUSH2 0x902 JUMP JUMPDEST DUP1 PUSH2 0x8FA DUP2 PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH2 0x91C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1321 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x92C JUMPI PUSH2 0x92C PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x958 JUMPI PUSH2 0x958 PUSH2 0x12A9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP1 SLOAD DUP1 PUSH2 0x997 JUMPI PUSH2 0x997 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x0 NOT SWAP1 DUP4 ADD DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0x43328B6EB7F0F6711A295CFC22368AF8227BF60B67A6F6A5454F6168726D3E25 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0xA31 PUSH1 0x0 PUSH2 0xE37 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xA88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x3F6 DUP4 DUP4 DUP2 PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH2 0xB47 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST LT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420776974686472617720616C6C6F636174656420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC06 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0x2EA DUP2 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0xD04 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xD3A SWAP1 DUP5 DUP4 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD5E SWAP1 DUP3 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD SWAP3 DUP10 AND DUP4 MSTORE SWAP3 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x7E6632CA16A0AC6CF28448500B1A17D96C8B8163AD4C4A9B44EF5386CC02779E SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xE31 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xC06 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF89 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xC06 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF2A SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF98 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xFA0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF1 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x104F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x106B SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10A8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10BD DUP3 DUP3 DUP7 PUSH2 0x10C8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x10D7 JUMPI POP DUP2 PUSH2 0xDBF JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x10E7 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDBF DUP3 PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1154 DUP4 PUSH2 0x1101 JUMP JUMPDEST SWAP2 POP PUSH2 0x1162 PUSH1 0x20 DUP5 ADD PUSH2 0x1101 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x117D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F3 DUP10 DUP4 DUP11 ADD PUSH2 0x116B JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1219 DUP9 DUP3 DUP10 ADD PUSH2 0x116B JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x122C SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0x1101 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x124B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1162 PUSH1 0x20 DUP5 ADD PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x126D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12E9 JUMPI PUSH2 0x12E9 PUSH2 0x12BF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1303 JUMPI PUSH2 0x1303 PUSH2 0x12BF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1333 JUMPI PUSH2 0x1333 PUSH2 0x12BF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 DUP7 PUSH1 0x80 DUP4 ADD DUP3 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x1379 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1364 DUP5 PUSH2 0x1101 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x134B JUMP JUMPDEST POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP7 GT ISZERO PUSH2 0x1399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x5 SHL SWAP2 POP DUP2 DUP8 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 ADD PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x40 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1422 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x140A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE31 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1445 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1407 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x146E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST MSIZE ISZERO 0x22 0xBC 0x2B RETURNDATACOPY STATICCALL 0xB5 PUSH21 0x899BDC8E83E00338F4B2155CB1A4D62397F3D7ABF4 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        470,
        5279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "6": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "POP",
      "path": "12"
    },
    "18": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "21": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "LT",
      "path": "12"
    },
    "22": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "29": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "SHR",
      "path": "12"
    },
    "32": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "33": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "GT",
      "path": "12"
    },
    "39": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "43": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "44": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "50": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x186"
    },
    "53": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "54": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "55": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB4BA9E11"
    },
    "60": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "61": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1AB"
    },
    "64": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "66": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB94B7A97"
    },
    "71": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "72": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BE"
    },
    "75": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "76": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "77": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD4570C1C"
    },
    "82": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "83": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D1"
    },
    "86": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "87": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "88": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD731060C"
    },
    "93": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "94": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20B"
    },
    "97": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "98": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "99": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "105": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21E"
    },
    "108": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "109": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB4"
    },
    "112": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMP",
      "path": "12"
    },
    "113": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "114": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "115": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x223E5479"
    },
    "120": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "121": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFA"
    },
    "124": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "125": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "126": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2C71DF62"
    },
    "131": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "132": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10F"
    },
    "135": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "136": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "137": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2E8EBAAE"
    },
    "142": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "143": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x135"
    },
    "146": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "147": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "148": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x44469F98"
    },
    "153": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "154": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x158"
    },
    "157": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "158": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "159": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x69108363"
    },
    "164": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "165": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16B"
    },
    "168": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "169": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "170": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x715018A6"
    },
    "175": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "EQ",
      "path": "12"
    },
    "176": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17E"
    },
    "179": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "180": {
      "fn": null,
      "offset": [
        470,
        5279
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "181": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x40"
    },
    "183": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "184": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "188": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "190": {
      "op": "SHL"
    },
    "191": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "DUP2",
      "path": "12"
    },
    "192": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "195": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "197": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "DUP3",
      "path": "12"
    },
    "198": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "ADD",
      "path": "12"
    },
    "199": {
      "op": "MSTORE"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "202": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "204": {
      "op": "DUP3"
    },
    "205": {
      "op": "ADD"
    },
    "206": {
      "op": "MSTORE"
    },
    "207": {
      "op": "PUSH22",
      "value": "0x24B73B30B634B21032BA3432B9103A3930B739B332B9"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "232": {
      "op": "SHL"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "235": {
      "op": "DUP3"
    },
    "236": {
      "op": "ADD"
    },
    "237": {
      "op": "MSTORE"
    },
    "238": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "240": {
      "op": "ADD"
    },
    "241": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "242": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "244": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "245": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "DUP1",
      "path": "12"
    },
    "246": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "247": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "SUB",
      "path": "12"
    },
    "248": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "249": {
      "fn": "DFRewards.<fallback>",
      "offset": [
        5238,
        5270
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "12"
    },
    "250": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "251": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10D"
    },
    "254": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x108"
    },
    "257": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "258": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "260": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x111D"
    },
    "263": {
      "fn": "DFRewards.addStrategy",
      "jump": "i",
      "offset": [
        4325,
        4527
      ],
      "op": "JUMP",
      "path": "12"
    },
    "264": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "265": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x231"
    },
    "268": {
      "fn": "DFRewards.addStrategy",
      "jump": "i",
      "offset": [
        4325,
        4527
      ],
      "op": "JUMP",
      "path": "12"
    },
    "269": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "270": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "STOP",
      "path": "12"
    },
    "271": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "272": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x122"
    },
    "275": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11D"
    },
    "278": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "279": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "281": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1138"
    },
    "284": {
      "fn": "DFRewards.claimForStrat",
      "jump": "i",
      "offset": [
        2922,
        3237
      ],
      "op": "JUMP",
      "path": "12"
    },
    "285": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "286": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ED"
    },
    "289": {
      "fn": "DFRewards.claimForStrat",
      "jump": "i",
      "offset": [
        2922,
        3237
      ],
      "op": "JUMP",
      "path": "12"
    },
    "290": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "291": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "293": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "294": {
      "op": "SWAP1"
    },
    "295": {
      "op": "DUP2"
    },
    "296": {
      "op": "MSTORE"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "299": {
      "op": "ADD"
    },
    "300": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "301": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "303": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "304": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "DUP1",
      "path": "12"
    },
    "305": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "306": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "SUB",
      "path": "12"
    },
    "307": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "308": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "RETURN",
      "path": "12"
    },
    "309": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "310": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x148"
    },
    "313": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x143"
    },
    "316": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "317": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "319": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x111D"
    },
    "322": {
      "fn": "DFRewards.isStrategy",
      "jump": "i",
      "offset": [
        3955,
        4185
      ],
      "op": "JUMP",
      "path": "12"
    },
    "323": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "324": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x401"
    },
    "327": {
      "fn": "DFRewards.isStrategy",
      "jump": "i",
      "offset": [
        3955,
        4185
      ],
      "op": "JUMP",
      "path": "12"
    },
    "328": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "329": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "331": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "332": {
      "op": "SWAP1"
    },
    "333": {
      "op": "ISZERO"
    },
    "334": {
      "op": "ISZERO"
    },
    "335": {
      "op": "DUP2"
    },
    "336": {
      "op": "MSTORE"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "339": {
      "op": "ADD"
    },
    "340": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12C"
    },
    "343": {
      "op": "JUMP"
    },
    "344": {
      "fn": "DFRewards.allocate",
      "offset": [
        954,
        1996
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "345": {
      "fn": "DFRewards.allocate",
      "offset": [
        954,
        1996
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x148"
    },
    "348": {
      "fn": "DFRewards.allocate",
      "offset": [
        954,
        1996
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x166"
    },
    "351": {
      "fn": "DFRewards.allocate",
      "offset": [
        954,
        1996
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "352": {
      "fn": "DFRewards.allocate",
      "offset": [
        954,
        1996
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "354": {
      "fn": "DFRewards.allocate",
      "offset": [
        954,
        1996
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11B7"
    },
    "357": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        954,
        1996
      ],
      "op": "JUMP",
      "path": "12"
    },
    "358": {
      "fn": "DFRewards.allocate",
      "offset": [
        954,
        1996
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "359": {
      "fn": "DFRewards.allocate",
      "offset": [
        954,
        1996
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x46B"
    },
    "362": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        954,
        1996
      ],
      "op": "JUMP",
      "path": "12"
    },
    "363": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4680,
        5169
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "364": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4680,
        5169
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10D"
    },
    "367": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4680,
        5169
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x179"
    },
    "370": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4680,
        5169
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "371": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4680,
        5169
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "373": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4680,
        5169
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x111D"
    },
    "376": {
      "fn": "DFRewards.retireStrategy",
      "jump": "i",
      "offset": [
        4680,
        5169
      ],
      "op": "JUMP",
      "path": "12"
    },
    "377": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4680,
        5169
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "378": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4680,
        5169
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x826"
    },
    "381": {
      "fn": "DFRewards.retireStrategy",
      "jump": "i",
      "offset": [
        4680,
        5169
      ],
      "op": "JUMP",
      "path": "12"
    },
    "382": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "383": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D"
    },
    "386": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9FD"
    },
    "389": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "1"
    },
    "390": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "391": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "393": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 1
    },
    "394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "400": {
      "op": "SHL"
    },
    "401": {
      "op": "SUB"
    },
    "402": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "1"
    },
    "403": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "404": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "406": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "413": {
      "op": "SHL"
    },
    "414": {
      "op": "SUB"
    },
    "415": {
      "op": "SWAP1"
    },
    "416": {
      "op": "SWAP2"
    },
    "417": {
      "op": "AND"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2692,
        2865
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "428": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2692,
        2865
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x122"
    },
    "431": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2692,
        2865
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B9"
    },
    "434": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2692,
        2865
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "435": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2692,
        2865
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "437": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2692,
        2865
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1138"
    },
    "440": {
      "fn": "DFRewards.claimFor",
      "jump": "i",
      "offset": [
        2692,
        2865
      ],
      "op": "JUMP",
      "path": "12"
    },
    "441": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2692,
        2865
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "442": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2692,
        2865
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA33"
    },
    "445": {
      "fn": "DFRewards.claimFor",
      "jump": "i",
      "offset": [
        2692,
        2865
      ],
      "op": "JUMP",
      "path": "12"
    },
    "446": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "447": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10D"
    },
    "450": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CC"
    },
    "453": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "454": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "456": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1238"
    },
    "459": {
      "fn": "DFRewards.withdrawERCToken",
      "jump": "i",
      "offset": [
        3460,
        3790
      ],
      "op": "JUMP",
      "path": "12"
    },
    "460": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "461": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA98"
    },
    "464": {
      "fn": "DFRewards.withdrawERCToken",
      "jump": "i",
      "offset": [
        3460,
        3790
      ],
      "op": "JUMP",
      "path": "12"
    },
    "465": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "466": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x122"
    },
    "469": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DF"
    },
    "472": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "473": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "475": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1138"
    },
    "478": {
      "fn": "DFRewards.claimable",
      "jump": "i",
      "offset": [
        2002,
        2165
      ],
      "op": "JUMP",
      "path": "12"
    },
    "479": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "486": {
      "op": "SHL"
    },
    "487": {
      "op": "SUB"
    },
    "488": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 2
    },
    "489": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "DUP3",
      "path": "12"
    },
    "490": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "AND",
      "path": "12"
    },
    "491": {
      "fn": "DFRewards.claimable",
      "offset": [
        2101,
        2108
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "493": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "494": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "DUP2",
      "path": "12"
    },
    "495": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "496": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "498": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "500": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "501": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "DUP2",
      "path": "12"
    },
    "502": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "503": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "505": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "DUP1",
      "path": "12"
    },
    "506": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "DUP4",
      "path": "12"
    },
    "507": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2153
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "508": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2158
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "509": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2158
      ],
      "op": "DUP7",
      "path": "12"
    },
    "510": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2158
      ],
      "op": "AND",
      "path": "12"
    },
    "511": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2158
      ],
      "op": "DUP4",
      "path": "12"
    },
    "512": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2158
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "513": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2158
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "514": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2158
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "515": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2158
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "516": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2158
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "517": {
      "fn": "DFRewards.claimable",
      "offset": [
        2131,
        2158
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "518": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "519": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "520": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "POP",
      "path": "12"
    },
    "521": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "POP",
      "path": "12"
    },
    "522": {
      "fn": "DFRewards.claimable",
      "offset": [
        2002,
        2165
      ],
      "op": "JUMP",
      "path": "12"
    },
    "523": {
      "offset": [
        769,
        801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "524": {
      "fn": "DFRewards.claimable",
      "offset": [
        769,
        801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x193"
    },
    "527": {
      "fn": "DFRewards.claimable",
      "offset": [
        769,
        801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x219"
    },
    "530": {
      "fn": "DFRewards.claimable",
      "offset": [
        769,
        801
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "531": {
      "fn": "DFRewards.claimable",
      "offset": [
        769,
        801
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "533": {
      "fn": "DFRewards.claimable",
      "offset": [
        769,
        801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x125B"
    },
    "536": {
      "fn": "DFRewards.claimable",
      "jump": "i",
      "offset": [
        769,
        801
      ],
      "op": "JUMP",
      "path": "12"
    },
    "537": {
      "fn": "DFRewards.claimable",
      "offset": [
        769,
        801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "538": {
      "fn": "DFRewards.claimable",
      "offset": [
        769,
        801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC0B"
    },
    "541": {
      "fn": "DFRewards.claimable",
      "jump": "i",
      "offset": [
        769,
        801
      ],
      "op": "JUMP",
      "path": "12"
    },
    "542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D"
    },
    "546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22C"
    },
    "549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x111D"
    },
    "555": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "1"
    },
    "556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "557": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC35"
    },
    "560": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "1"
    },
    "561": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "562": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "564": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "op": "SUB"
    },
    "573": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "1"
    },
    "574": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 3
    },
    "575": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "1"
    },
    "576": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25B"
    },
    "579": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "580": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "582": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "589": {
      "op": "SHL"
    },
    "590": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "591": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "592": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "594": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "1"
    },
    "595": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1"
    },
    "598": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "599": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1274"
    },
    "602": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "1"
    },
    "603": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "604": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4399,
        4420
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x264"
    },
    "607": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4410,
        4419
      ],
      "op": "DUP2",
      "path": "12"
    },
    "608": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4399,
        4409
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x401"
    },
    "611": {
      "fn": "DFRewards.addStrategy",
      "jump": "i",
      "offset": [
        4399,
        4420
      ],
      "op": "JUMP",
      "path": "12"
    },
    "612": {
      "branch": 52,
      "fn": "DFRewards.addStrategy",
      "offset": [
        4399,
        4420
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "613": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4394,
        4521
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EA"
    },
    "616": {
      "branch": 52,
      "fn": "DFRewards.addStrategy",
      "offset": [
        4394,
        4521
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "617": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4451
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 4,
      "value": "0x4"
    },
    "619": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "DUP1",
      "path": "12"
    },
    "620": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "621": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "623": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "DUP2",
      "path": "12"
    },
    "624": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "ADD",
      "path": "12"
    },
    "625": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "DUP3",
      "path": "12"
    },
    "626": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "629": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "630": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "631": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "632": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "633": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "666": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "ADD",
      "path": "12"
    },
    "667": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "DUP1",
      "path": "12"
    },
    "668": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "675": {
      "op": "SHL"
    },
    "676": {
      "op": "SUB"
    },
    "677": {
      "op": "NOT"
    },
    "678": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "AND",
      "path": "12"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "685": {
      "op": "SHL"
    },
    "686": {
      "op": "SUB"
    },
    "687": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "DUP4",
      "path": "12"
    },
    "688": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "AND",
      "path": "12"
    },
    "689": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "690": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "DUP2",
      "path": "12"
    },
    "691": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "OR",
      "path": "12"
    },
    "692": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "693": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "694": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4436,
        4467
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "695": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 5,
      "value": "0x40"
    },
    "697": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "698": {
      "op": "SWAP1"
    },
    "699": {
      "op": "DUP2"
    },
    "700": {
      "op": "MSTORE"
    },
    "701": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x3F008FD510EAE7A9E7BEE13513D7B83BEF8003D488B5A3D0B0DA4DE71D6846F1"
    },
    "734": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "737": {
      "op": "ADD"
    },
    "738": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "740": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "741": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "DUP1",
      "path": "12"
    },
    "742": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "743": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "SUB",
      "path": "12"
    },
    "744": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "745": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4486,
        4510
      ],
      "op": "LOG1",
      "path": "12"
    },
    "746": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4394,
        4521
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "747": {
      "fn": "DFRewards.addStrategy",
      "offset": [
        4325,
        4527
      ],
      "op": "POP",
      "path": "12"
    },
    "748": {
      "fn": "DFRewards.addStrategy",
      "jump": "o",
      "offset": [
        4325,
        4527
      ],
      "op": "JUMP",
      "path": "12"
    },
    "749": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "750": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3033,
        3040
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "752": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "754": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "756": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "757": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "758": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "759": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342"
    },
    "762": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "763": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "765": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "766": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "770": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "774": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "777": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "779": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "780": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "781": {
      "op": "MSTORE"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "786": {
      "op": "DUP3"
    },
    "787": {
      "op": "ADD"
    },
    "788": {
      "op": "MSTORE"
    },
    "789": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "824": {
      "op": "DUP3"
    },
    "825": {
      "op": "ADD"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "829": {
      "op": "ADD"
    },
    "830": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF1"
    },
    "833": {
      "op": "JUMP"
    },
    "834": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "835": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "837": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "839": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "840": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3064,
        3073
      ],
      "op": "ORIGIN",
      "path": "12",
      "statement": 6
    },
    "841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "847": {
      "op": "SHL"
    },
    "848": {
      "op": "SUB"
    },
    "849": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3064,
        3080
      ],
      "op": "DUP5",
      "path": "12"
    },
    "850": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3064,
        3080
      ],
      "op": "AND",
      "path": "12"
    },
    "851": {
      "branch": 53,
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3064,
        3080
      ],
      "op": "EQ",
      "path": "12"
    },
    "852": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x396"
    },
    "855": {
      "branch": 53,
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "856": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "858": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "859": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "DUP2",
      "path": "12"
    },
    "867": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "870": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "872": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "DUP3",
      "path": "12"
    },
    "873": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "ADD",
      "path": "12"
    },
    "874": {
      "op": "MSTORE"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "879": {
      "op": "DUP3"
    },
    "880": {
      "op": "ADD"
    },
    "881": {
      "op": "MSTORE"
    },
    "882": {
      "op": "PUSH20",
      "value": "0x86C2D8D8CAE440C8DECAE6DC4EE840DAC2E8C6D"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "905": {
      "op": "SHL"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "908": {
      "op": "DUP3"
    },
    "909": {
      "op": "ADD"
    },
    "910": {
      "op": "MSTORE"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "913": {
      "op": "ADD"
    },
    "914": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF1"
    },
    "917": {
      "op": "JUMP"
    },
    "918": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3056,
        3105
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "919": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3123,
        3145
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 7,
      "value": "0x39F"
    },
    "922": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3134,
        3144
      ],
      "op": "CALLER",
      "path": "12"
    },
    "923": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3123,
        3133
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x401"
    },
    "926": {
      "fn": "DFRewards.claimForStrat",
      "jump": "i",
      "offset": [
        3123,
        3145
      ],
      "op": "JUMP",
      "path": "12"
    },
    "927": {
      "branch": 54,
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3123,
        3145
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "928": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3EB"
    },
    "931": {
      "branch": 54,
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "932": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "934": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "935": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "DUP2",
      "path": "12"
    },
    "943": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "946": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "948": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "DUP3",
      "path": "12"
    },
    "949": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "ADD",
      "path": "12"
    },
    "950": {
      "op": "MSTORE"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "955": {
      "op": "DUP3"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D757374206265206120737472617465677900000000000000"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "993": {
      "op": "DUP3"
    },
    "994": {
      "op": "ADD"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF1"
    },
    "1002": {
      "op": "JUMP"
    },
    "1003": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3115,
        3175
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1004": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3193,
        3230
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 8,
      "value": "0x3F6"
    },
    "1007": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3200,
        3203
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1008": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3205,
        3217
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1009": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3219,
        3229
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1010": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3193,
        3199
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCCD"
    },
    "1013": {
      "fn": "DFRewards.claimForStrat",
      "jump": "i",
      "offset": [
        3193,
        3230
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1014": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3193,
        3230
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1015": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1017": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1018": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1019": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        3186,
        3230
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1020": {
      "fn": "DFRewards.claimForStrat",
      "offset": [
        2922,
        3237
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1021": {
      "op": "POP"
    },
    "1022": {
      "op": "POP"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "fn": "DFRewards.claimForStrat",
      "jump": "o",
      "offset": [
        2922,
        3237
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1025": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1026": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4015,
        4019
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1028": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4015,
        4019
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1029": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4031,
        4157
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1030": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4055,
        4070
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1032": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4055,
        4077
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1033": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4051,
        4077
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1034": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4051,
        4077
      ],
      "op": "LT",
      "path": "12"
    },
    "1035": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4031,
        4157
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1036": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4031,
        4157
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x462"
    },
    "1039": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4031,
        4157
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1040": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4124,
        4133
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1047": {
      "op": "SHL"
    },
    "1048": {
      "op": "SUB"
    },
    "1049": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4133
      ],
      "op": "AND",
      "path": "12"
    },
    "1050": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4117
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1052": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4118,
        4119
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1053": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1054": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1055": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1056": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "LT",
      "path": "12"
    },
    "1057": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x42C"
    },
    "1060": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1061": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x42C"
    },
    "1064": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A9"
    },
    "1067": {
      "fn": "DFRewards.isStrategy",
      "jump": "i",
      "offset": [
        4102,
        4120
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1068": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1069": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1071": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1072": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1073": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1074": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1076": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1077": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1078": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1079": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "ADD",
      "path": "12"
    },
    "1080": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1087": {
      "op": "SHL"
    },
    "1088": {
      "op": "SUB"
    },
    "1089": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4120
      ],
      "op": "AND",
      "path": "12"
    },
    "1090": {
      "branch": 55,
      "fn": "DFRewards.isStrategy",
      "offset": [
        4102,
        4133
      ],
      "op": "EQ",
      "path": "12"
    },
    "1091": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4098,
        4146
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1092": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4098,
        4146
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x450"
    },
    "1095": {
      "branch": 55,
      "fn": "DFRewards.isStrategy",
      "offset": [
        4098,
        4146
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1096": {
      "op": "POP"
    },
    "1097": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4142,
        4146
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 9,
      "value": "0x1"
    },
    "1099": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4142,
        4146
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1100": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1101": {
      "op": "POP"
    },
    "1102": {
      "op": "POP"
    },
    "1103": {
      "fn": "DFRewards.isStrategy",
      "jump": "o",
      "offset": [
        3955,
        4185
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1104": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4098,
        4146
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1105": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4079,
        4082
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 10
    },
    "1106": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4079,
        4082
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x45A"
    },
    "1109": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4079,
        4082
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1110": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4079,
        4082
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12D5"
    },
    "1113": {
      "fn": "DFRewards.isStrategy",
      "jump": "i",
      "offset": [
        4079,
        4082
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1114": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4079,
        4082
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1115": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4079,
        4082
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1116": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4079,
        4082
      ],
      "op": "POP",
      "path": "12"
    },
    "1117": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4079,
        4082
      ],
      "op": "POP",
      "path": "12"
    },
    "1118": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4031,
        4157
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x405"
    },
    "1121": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4031,
        4157
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1122": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4031,
        4157
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1123": {
      "op": "POP"
    },
    "1124": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4173,
        4178
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 11,
      "value": "0x0"
    },
    "1126": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        4173,
        4178
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1127": {
      "fn": "DFRewards.isStrategy",
      "offset": [
        3955,
        4185
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "op": "POP"
    },
    "1130": {
      "fn": "DFRewards.isStrategy",
      "jump": "o",
      "offset": [
        3955,
        4185
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1131": {
      "fn": "DFRewards.allocate",
      "offset": [
        954,
        1996
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1132": {
      "fn": "DFRewards.allocate",
      "offset": [
        1095,
        1099
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1134": {
      "fn": "DFRewards.allocate",
      "offset": [
        1119,
        1148
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 12
    },
    "1135": {
      "fn": "DFRewards.allocate",
      "offset": [
        1119,
        1148
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1136": {
      "branch": 56,
      "fn": "DFRewards.allocate",
      "offset": [
        1119,
        1148
      ],
      "op": "EQ",
      "path": "12"
    },
    "1137": {
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B1"
    },
    "1140": {
      "branch": 56,
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1141": {
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1143": {
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1144": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1150": {
      "op": "SHL"
    },
    "1151": {
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1152": {
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1155": {
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1157": {
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1158": {
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "ADD",
      "path": "12"
    },
    "1159": {
      "op": "MSTORE"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1164": {
      "op": "DUP3"
    },
    "1165": {
      "op": "ADD"
    },
    "1166": {
      "op": "MSTORE"
    },
    "1167": {
      "op": "PUSH18",
      "value": "0x98CADCCEE8D0E640DAEAE6E840DAC2E8C6D"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "1188": {
      "op": "SHL"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1191": {
      "op": "DUP3"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "op": "MSTORE"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1196": {
      "op": "ADD"
    },
    "1197": {
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF1"
    },
    "1200": {
      "op": "JUMP"
    },
    "1201": {
      "fn": "DFRewards.allocate",
      "offset": [
        1111,
        1171
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1202": {
      "fn": "DFRewards.allocate",
      "offset": [
        1182,
        1201
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1204": {
      "fn": "DFRewards.allocate",
      "offset": [
        1222,
        1231
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1205": {
      "fn": "DFRewards.allocate",
      "offset": [
        1217,
        1491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1206": {
      "fn": "DFRewards.allocate",
      "offset": [
        1237,
        1255
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1207": {
      "fn": "DFRewards.allocate",
      "offset": [
        1237,
        1255
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1208": {
      "fn": "DFRewards.allocate",
      "offset": [
        1237,
        1255
      ],
      "op": "LT",
      "path": "12"
    },
    "1209": {
      "fn": "DFRewards.allocate",
      "offset": [
        1217,
        1491
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1210": {
      "fn": "DFRewards.allocate",
      "offset": [
        1217,
        1491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x65B"
    },
    "1213": {
      "fn": "DFRewards.allocate",
      "offset": [
        1217,
        1491
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1214": {
      "fn": "DFRewards.allocate",
      "offset": [
        1306,
        1307
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 13,
      "value": "0x0"
    },
    "1216": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1291
      ],
      "op": "DUP9",
      "path": "12"
    },
    "1217": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1291
      ],
      "op": "DUP9",
      "path": "12"
    },
    "1218": {
      "fn": "DFRewards.allocate",
      "offset": [
        1292,
        1293
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1219": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1220": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1221": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "LT",
      "path": "12"
    },
    "1222": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D1"
    },
    "1225": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1226": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D1"
    },
    "1229": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A9"
    },
    "1232": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1287,
        1294
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1233": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1234": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1235": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "POP",
      "path": "12"
    },
    "1236": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1238": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "MUL",
      "path": "12"
    },
    "1239": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "ADD",
      "path": "12"
    },
    "1240": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1242": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1243": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "ADD",
      "path": "12"
    },
    "1244": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1245": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4E6"
    },
    "1248": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1249": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1250": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x111D"
    },
    "1253": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1287,
        1294
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1254": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1294
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1261": {
      "op": "SHL"
    },
    "1262": {
      "op": "SUB"
    },
    "1263": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1308
      ],
      "op": "AND",
      "path": "12"
    },
    "1264": {
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1308
      ],
      "op": "EQ",
      "path": "12"
    },
    "1265": {
      "branch": 57,
      "fn": "DFRewards.allocate",
      "offset": [
        1287,
        1308
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1266": {
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52F"
    },
    "1269": {
      "branch": 57,
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1270": {
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1272": {
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1273": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1279": {
      "op": "SHL"
    },
    "1280": {
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1281": {
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1284": {
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1286": {
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1287": {
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "ADD",
      "path": "12"
    },
    "1288": {
      "op": "MSTORE"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1293": {
      "op": "DUP3"
    },
    "1294": {
      "op": "ADD"
    },
    "1295": {
      "op": "MSTORE"
    },
    "1296": {
      "op": "PUSH15",
      "value": "0x1059191C995CDCC81A5B9D985B1A59"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1314": {
      "op": "SHL"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1317": {
      "op": "DUP3"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "op": "MSTORE"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1322": {
      "op": "ADD"
    },
    "1323": {
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF1"
    },
    "1326": {
      "op": "JUMP"
    },
    "1327": {
      "fn": "DFRewards.allocate",
      "offset": [
        1279,
        1328
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1328": {
      "fn": "DFRewards.allocate",
      "offset": [
        1363,
        1364
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 14,
      "value": "0x0"
    },
    "1330": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1357
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1331": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1357
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1332": {
      "fn": "DFRewards.allocate",
      "offset": [
        1358,
        1359
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1333": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1334": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1335": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "LT",
      "path": "12"
    },
    "1336": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x543"
    },
    "1339": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1340": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x543"
    },
    "1343": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A9"
    },
    "1346": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1350,
        1360
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1347": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1348": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1349": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "POP",
      "path": "12"
    },
    "1350": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1352": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "MUL",
      "path": "12"
    },
    "1353": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "ADD",
      "path": "12"
    },
    "1354": {
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1360
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1355": {
      "branch": 58,
      "fn": "DFRewards.allocate",
      "offset": [
        1350,
        1364
      ],
      "op": "GT",
      "path": "12"
    },
    "1356": {
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x587"
    },
    "1359": {
      "branch": 58,
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1360": {
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1362": {
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1363": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1369": {
      "op": "SHL"
    },
    "1370": {
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1371": {
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1374": {
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1376": {
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1377": {
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "ADD",
      "path": "12"
    },
    "1378": {
      "op": "MSTORE"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1383": {
      "op": "DUP3"
    },
    "1384": {
      "op": "ADD"
    },
    "1385": {
      "op": "MSTORE"
    },
    "1386": {
      "op": "PUSH13",
      "value": "0x15985B1D59481A5B9D985B1A59"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1405": {
      "op": "DUP3"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1410": {
      "op": "ADD"
    },
    "1411": {
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF1"
    },
    "1414": {
      "op": "JUMP"
    },
    "1415": {
      "fn": "DFRewards.allocate",
      "offset": [
        1342,
        1382
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1416": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1438
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 15
    },
    "1417": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1438
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1418": {
      "fn": "DFRewards.allocate",
      "offset": [
        1439,
        1440
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1419": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1420": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1421": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "LT",
      "path": "12"
    },
    "1422": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x599"
    },
    "1425": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1426": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x599"
    },
    "1429": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A9"
    },
    "1432": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1431,
        1441
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1433": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1434": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1435": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "POP",
      "path": "12"
    },
    "1436": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1438": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "MUL",
      "path": "12"
    },
    "1439": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "ADD",
      "path": "12"
    },
    "1440": {
      "fn": "DFRewards.allocate",
      "offset": [
        1431,
        1441
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1441": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1404
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1443": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1445": {
      "fn": "DFRewards.allocate",
      "offset": [
        1405,
        1417
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "op": "SUB"
    },
    "1454": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "AND",
      "path": "12"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "op": "SUB"
    },
    "1463": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "AND",
      "path": "12"
    },
    "1464": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1465": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1466": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1468": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "ADD",
      "path": "12"
    },
    "1469": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1470": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1471": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1472": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1474": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "ADD",
      "path": "12"
    },
    "1475": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1477": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1418
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1478": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1480": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1423
      ],
      "op": "DUP11",
      "path": "12"
    },
    "1481": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1423
      ],
      "op": "DUP11",
      "path": "12"
    },
    "1482": {
      "fn": "DFRewards.allocate",
      "offset": [
        1424,
        1425
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1483": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1484": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1485": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "LT",
      "path": "12"
    },
    "1486": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5D9"
    },
    "1489": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1490": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5D9"
    },
    "1493": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A9"
    },
    "1496": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1419,
        1426
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1497": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1498": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1499": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "POP",
      "path": "12"
    },
    "1500": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1502": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "MUL",
      "path": "12"
    },
    "1503": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "ADD",
      "path": "12"
    },
    "1504": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1506": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1507": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "ADD",
      "path": "12"
    },
    "1508": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1509": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5EE"
    },
    "1512": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1513": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1514": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x111D"
    },
    "1517": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1419,
        1426
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1518": {
      "fn": "DFRewards.allocate",
      "offset": [
        1419,
        1426
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1525": {
      "op": "SHL"
    },
    "1526": {
      "op": "SUB"
    },
    "1527": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "AND",
      "path": "12"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "op": "SUB"
    },
    "1536": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "AND",
      "path": "12"
    },
    "1537": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1538": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1539": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1541": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "ADD",
      "path": "12"
    },
    "1542": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1543": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1544": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1545": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1547": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "ADD",
      "path": "12"
    },
    "1548": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1550": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1551": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1553": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1554": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1555": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1556": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x61D"
    },
    "1559": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1560": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1561": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F0"
    },
    "1564": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1396,
        1441
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1565": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1566": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1567": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1568": {
      "fn": "DFRewards.allocate",
      "offset": [
        1396,
        1441
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1477
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 16
    },
    "1571": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1477
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1572": {
      "op": "POP"
    },
    "1573": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1477
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1574": {
      "fn": "DFRewards.allocate",
      "offset": [
        1478,
        1479
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1575": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1576": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1577": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "LT",
      "path": "12"
    },
    "1578": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x635"
    },
    "1581": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1582": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x635"
    },
    "1585": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A9"
    },
    "1588": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1470,
        1480
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1589": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1590": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1591": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "POP",
      "path": "12"
    },
    "1592": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1594": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "MUL",
      "path": "12"
    },
    "1595": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "ADD",
      "path": "12"
    },
    "1596": {
      "fn": "DFRewards.allocate",
      "offset": [
        1470,
        1480
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1597": {
      "fn": "DFRewards.allocate",
      "offset": [
        1455,
        1480
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1598": {
      "fn": "DFRewards.allocate",
      "offset": [
        1455,
        1480
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x647"
    },
    "1601": {
      "fn": "DFRewards.allocate",
      "offset": [
        1455,
        1480
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1602": {
      "fn": "DFRewards.allocate",
      "offset": [
        1455,
        1480
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1603": {
      "fn": "DFRewards.allocate",
      "offset": [
        1455,
        1480
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F0"
    },
    "1606": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1455,
        1480
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1607": {
      "fn": "DFRewards.allocate",
      "offset": [
        1455,
        1480
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1608": {
      "fn": "DFRewards.allocate",
      "offset": [
        1455,
        1480
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "fn": "DFRewards.allocate",
      "offset": [
        1257,
        1263
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 17,
      "value": "0x654"
    },
    "1613": {
      "fn": "DFRewards.allocate",
      "offset": [
        1262,
        1263
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1615": {
      "fn": "DFRewards.allocate",
      "offset": [
        1257,
        1263
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1616": {
      "fn": "DFRewards.allocate",
      "offset": [
        1257,
        1263
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F0"
    },
    "1619": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1257,
        1263
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1620": {
      "fn": "DFRewards.allocate",
      "offset": [
        1257,
        1263
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1621": {
      "fn": "DFRewards.allocate",
      "offset": [
        1257,
        1263
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1622": {
      "fn": "DFRewards.allocate",
      "offset": [
        1257,
        1263
      ],
      "op": "POP",
      "path": "12"
    },
    "1623": {
      "fn": "DFRewards.allocate",
      "offset": [
        1217,
        1491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B5"
    },
    "1626": {
      "fn": "DFRewards.allocate",
      "offset": [
        1217,
        1491
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1627": {
      "fn": "DFRewards.allocate",
      "offset": [
        1217,
        1491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1628": {
      "op": "POP"
    },
    "1629": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1631": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1632": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1639": {
      "op": "SHL"
    },
    "1640": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1641": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1642": {
      "fn": "DFRewards.allocate",
      "offset": [
        1558,
        1562
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "1643": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1645": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1646": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "ADD",
      "path": "12"
    },
    "1647": {
      "op": "MSTORE"
    },
    "1648": {
      "fn": "DFRewards.allocate",
      "offset": [
        1501,
        1516
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1650": {
      "fn": "DFRewards.allocate",
      "offset": [
        1501,
        1516
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1657": {
      "op": "SHL"
    },
    "1658": {
      "op": "SUB"
    },
    "1659": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1549
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1660": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1549
      ],
      "op": "AND",
      "path": "12"
    },
    "1661": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1549
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1662": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1549
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "1667": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1549
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1670": {
      "op": "ADD"
    },
    "1671": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1673": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1675": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1676": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1677": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1678": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "SUB",
      "path": "12"
    },
    "1679": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1680": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1681": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "GAS",
      "path": "12"
    },
    "1682": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "1683": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1684": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1685": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1686": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6A3"
    },
    "1689": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1690": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1691": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1693": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1694": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1695": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1696": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1698": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1699": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1700": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "POP",
      "path": "12"
    },
    "1701": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "POP",
      "path": "12"
    },
    "1702": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "POP",
      "path": "12"
    },
    "1703": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "POP",
      "path": "12"
    },
    "1704": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1706": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1707": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1708": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "1710": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "NOT",
      "path": "12"
    },
    "1711": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "1713": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1714": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "ADD",
      "path": "12"
    },
    "1715": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "AND",
      "path": "12"
    },
    "1716": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1717": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "ADD",
      "path": "12"
    },
    "1718": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1719": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1721": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1722": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "POP",
      "path": "12"
    },
    "1723": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1724": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "ADD",
      "path": "12"
    },
    "1725": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1726": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6C7"
    },
    "1729": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1730": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1731": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1308"
    },
    "1734": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1519,
        1564
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1735": {
      "fn": "DFRewards.allocate",
      "offset": [
        1519,
        1564
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1736": {
      "fn": "DFRewards.allocate",
      "offset": [
        1501,
        1564
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1737": {
      "op": "POP"
    },
    "1738": {
      "fn": "DFRewards.allocate",
      "offset": [
        1574,
        1697
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 18,
      "value": "0x6DE"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1747": {
      "op": "SHL"
    },
    "1748": {
      "op": "SUB"
    },
    "1749": {
      "fn": "DFRewards.allocate",
      "offset": [
        1574,
        1611
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1750": {
      "fn": "DFRewards.allocate",
      "offset": [
        1574,
        1611
      ],
      "op": "AND",
      "path": "12"
    },
    "1751": {
      "fn": "DFRewards.allocate",
      "offset": [
        1625,
        1635
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1752": {
      "fn": "DFRewards.allocate",
      "offset": [
        1657,
        1661
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "1753": {
      "fn": "DFRewards.allocate",
      "offset": [
        1676,
        1687
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1754": {
      "fn": "DFRewards.allocate",
      "offset": [
        1574,
        1611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC6"
    },
    "1757": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1574,
        1697
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1758": {
      "fn": "DFRewards.allocate",
      "offset": [
        1574,
        1697
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1759": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1761": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1762": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1769": {
      "op": "SHL"
    },
    "1770": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1771": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1772": {
      "fn": "DFRewards.allocate",
      "offset": [
        1763,
        1767
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "1773": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1775": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1776": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "ADD",
      "path": "12"
    },
    "1777": {
      "op": "MSTORE"
    },
    "1778": {
      "fn": "DFRewards.allocate",
      "offset": [
        1707,
        1721
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1780": {
      "fn": "DFRewards.allocate",
      "offset": [
        1707,
        1721
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "op": "SUB"
    },
    "1789": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1754
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1790": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1754
      ],
      "op": "AND",
      "path": "12"
    },
    "1791": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1754
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1792": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1754
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "1797": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1754
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1800": {
      "op": "ADD"
    },
    "1801": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1803": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1805": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1806": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1807": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1808": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "SUB",
      "path": "12"
    },
    "1809": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1810": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1811": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "GAS",
      "path": "12"
    },
    "1812": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "1813": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1814": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1815": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1816": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x725"
    },
    "1819": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1820": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1821": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1823": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1824": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1825": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1826": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1828": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1829": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1830": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "POP",
      "path": "12"
    },
    "1831": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "POP",
      "path": "12"
    },
    "1832": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "POP",
      "path": "12"
    },
    "1833": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "POP",
      "path": "12"
    },
    "1834": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1836": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1837": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1838": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "1840": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "NOT",
      "path": "12"
    },
    "1841": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "1843": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1844": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "ADD",
      "path": "12"
    },
    "1845": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "AND",
      "path": "12"
    },
    "1846": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1847": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "ADD",
      "path": "12"
    },
    "1848": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1849": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1851": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1852": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "POP",
      "path": "12"
    },
    "1853": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1854": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "ADD",
      "path": "12"
    },
    "1855": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1856": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x749"
    },
    "1859": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1860": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1861": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1308"
    },
    "1864": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1724,
        1769
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1865": {
      "fn": "DFRewards.allocate",
      "offset": [
        1724,
        1769
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1866": {
      "fn": "DFRewards.allocate",
      "offset": [
        1707,
        1769
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "fn": "DFRewards.allocate",
      "offset": [
        1807,
        1818
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 19
    },
    "1869": {
      "fn": "DFRewards.allocate",
      "offset": [
        1787,
        1803
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x756"
    },
    "1872": {
      "fn": "DFRewards.allocate",
      "offset": [
        1796,
        1803
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1873": {
      "fn": "DFRewards.allocate",
      "offset": [
        1707,
        1769
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1874": {
      "fn": "DFRewards.allocate",
      "offset": [
        1787,
        1803
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1321"
    },
    "1877": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1787,
        1803
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1878": {
      "fn": "DFRewards.allocate",
      "offset": [
        1787,
        1803
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1879": {
      "branch": 59,
      "fn": "DFRewards.allocate",
      "offset": [
        1787,
        1818
      ],
      "op": "EQ",
      "path": "12"
    },
    "1880": {
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x797"
    },
    "1883": {
      "branch": 59,
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1884": {
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1886": {
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1887": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1893": {
      "op": "SHL"
    },
    "1894": {
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1895": {
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1898": {
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1900": {
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1901": {
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "ADD",
      "path": "12"
    },
    "1902": {
      "op": "MSTORE"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1907": {
      "op": "DUP3"
    },
    "1908": {
      "op": "ADD"
    },
    "1909": {
      "op": "MSTORE"
    },
    "1910": {
      "op": "PUSH17",
      "value": "0x4E6F7420656E6F75676820746F6B656E73"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1933": {
      "op": "DUP3"
    },
    "1934": {
      "op": "ADD"
    },
    "1935": {
      "op": "MSTORE"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1938": {
      "op": "ADD"
    },
    "1939": {
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF1"
    },
    "1942": {
      "op": "JUMP"
    },
    "1943": {
      "fn": "DFRewards.allocate",
      "offset": [
        1779,
        1840
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1950": {
      "op": "SHL"
    },
    "1951": {
      "op": "SUB"
    },
    "1952": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 20
    },
    "1953": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "AND",
      "path": "12"
    },
    "1954": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1956": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1957": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1958": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1959": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1886
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "1961": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1963": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1964": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1966": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1967": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1968": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1900
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1969": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1914
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7BB"
    },
    "1972": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1914
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1973": {
      "fn": "DFRewards.allocate",
      "offset": [
        1903,
        1914
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1974": {
      "fn": "DFRewards.allocate",
      "offset": [
        1903,
        1914
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1975": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1914
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F0"
    },
    "1978": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1877,
        1914
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1979": {
      "fn": "DFRewards.allocate",
      "offset": [
        1877,
        1914
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1986": {
      "op": "SHL"
    },
    "1987": {
      "op": "SUB"
    },
    "1988": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1989": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "AND",
      "path": "12"
    },
    "1990": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1992": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1993": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1994": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1995": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "1997": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1999": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2000": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2002": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2003": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2004": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2005": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1874
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2006": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1914
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2007": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1914
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2008": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1914
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2009": {
      "fn": "DFRewards.allocate",
      "offset": [
        1851,
        1914
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2010": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "MLOAD",
      "path": "12",
      "statement": 21
    },
    "2011": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xA6C91E0714FA5CEA1A48A7903A4CB4FDFC6A5409B04C2F5E5F01140140846F74"
    },
    "2044": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2045": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80F"
    },
    "2048": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2049": {
      "fn": "DFRewards.allocate",
      "offset": [
        1940,
        1944
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2050": {
      "fn": "DFRewards.allocate",
      "offset": [
        1940,
        1944
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2051": {
      "fn": "DFRewards.allocate",
      "offset": [
        1940,
        1944
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2052": {
      "fn": "DFRewards.allocate",
      "offset": [
        1940,
        1944
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2053": {
      "fn": "DFRewards.allocate",
      "offset": [
        1946,
        1953
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2054": {
      "fn": "DFRewards.allocate",
      "offset": [
        1946,
        1953
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2055": {
      "fn": "DFRewards.allocate",
      "offset": [
        1946,
        1953
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2056": {
      "fn": "DFRewards.allocate",
      "offset": [
        1946,
        1953
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2057": {
      "fn": "DFRewards.allocate",
      "offset": [
        1861,
        1873
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2058": {
      "fn": "DFRewards.allocate",
      "offset": [
        1861,
        1873
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2059": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1338"
    },
    "2062": {
      "fn": "DFRewards.allocate",
      "jump": "i",
      "offset": [
        1930,
        1968
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2063": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2064": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2066": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2067": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2068": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2069": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "SUB",
      "path": "12"
    },
    "2070": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2071": {
      "fn": "DFRewards.allocate",
      "offset": [
        1930,
        1968
      ],
      "op": "LOG1",
      "path": "12"
    },
    "2072": {
      "op": "POP"
    },
    "2073": {
      "fn": "DFRewards.allocate",
      "offset": [
        1985,
        1989
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 22,
      "value": "0x1"
    },
    "2075": {
      "fn": "DFRewards.allocate",
      "offset": [
        1985,
        1989
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "2076": {
      "fn": "DFRewards.allocate",
      "offset": [
        954,
        1996
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "2077": {
      "op": "POP"
    },
    "2078": {
      "op": "POP"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "POP"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "op": "POP"
    },
    "2084": {
      "op": "POP"
    },
    "2085": {
      "fn": "DFRewards.allocate",
      "jump": "o",
      "offset": [
        954,
        1996
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2086": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4680,
        5169
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2087": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2089": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "op": "SUB"
    },
    "2098": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "1"
    },
    "2099": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2100": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "1"
    },
    "2101": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x850"
    },
    "2104": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2105": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2107": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2114": {
      "op": "SHL"
    },
    "2115": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2116": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2117": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2119": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2120": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1"
    },
    "2123": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2124": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1274"
    },
    "2127": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2128": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2135": {
      "op": "SHL"
    },
    "2136": {
      "op": "SUB"
    },
    "2137": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4760,
        4783
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 23
    },
    "2138": {
      "branch": 60,
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4760,
        4783
      ],
      "op": "AND",
      "path": "12"
    },
    "2139": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8A6"
    },
    "2142": {
      "branch": 60,
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2143": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2145": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2146": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2152": {
      "op": "SHL"
    },
    "2153": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2154": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2157": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2159": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2160": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "ADD",
      "path": "12"
    },
    "2161": {
      "op": "MSTORE"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2166": {
      "op": "DUP3"
    },
    "2167": {
      "op": "ADD"
    },
    "2168": {
      "op": "MSTORE"
    },
    "2169": {
      "op": "PUSH32",
      "value": "0x496E76616C696420737472617465677920616464726573730000000000000000"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2204": {
      "op": "DUP3"
    },
    "2205": {
      "op": "ADD"
    },
    "2206": {
      "op": "MSTORE"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF1"
    },
    "2213": {
      "op": "JUMP"
    },
    "2214": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4752,
        4812
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2215": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4822,
        4831
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2217": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4841,
        4953
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2218": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4857,
        4872
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2220": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4857,
        4879
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2221": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4853,
        4879
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2222": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4853,
        4879
      ],
      "op": "LT",
      "path": "12"
    },
    "2223": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4841,
        4953
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2224": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4841,
        4953
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x902"
    },
    "2227": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4841,
        4953
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2228": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4926,
        4935
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2235": {
      "op": "SHL"
    },
    "2236": {
      "op": "SUB"
    },
    "2237": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4935
      ],
      "op": "AND",
      "path": "12"
    },
    "2238": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4919
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2240": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4920,
        4921
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2241": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2242": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2243": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2244": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "LT",
      "path": "12"
    },
    "2245": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8D0"
    },
    "2248": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2249": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8D0"
    },
    "2252": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A9"
    },
    "2255": {
      "fn": "DFRewards.retireStrategy",
      "jump": "i",
      "offset": [
        4904,
        4922
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2256": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2257": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2259": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2260": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2261": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2262": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2264": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2265": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2266": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2267": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "ADD",
      "path": "12"
    },
    "2268": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2275": {
      "op": "SHL"
    },
    "2276": {
      "op": "SUB"
    },
    "2277": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4922
      ],
      "op": "AND",
      "path": "12"
    },
    "2278": {
      "branch": 61,
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4904,
        4935
      ],
      "op": "EQ",
      "path": "12"
    },
    "2279": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4900,
        4942
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2280": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4900,
        4942
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8F0"
    },
    "2283": {
      "branch": 61,
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4900,
        4942
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2284": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4937,
        4942
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 24,
      "value": "0x902"
    },
    "2287": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4937,
        4942
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2288": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4900,
        4942
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2289": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4881,
        4884
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 25
    },
    "2290": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4881,
        4884
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8FA"
    },
    "2293": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4881,
        4884
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2294": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4881,
        4884
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12D5"
    },
    "2297": {
      "fn": "DFRewards.retireStrategy",
      "jump": "i",
      "offset": [
        4881,
        4884
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2298": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4881,
        4884
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2299": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4881,
        4884
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2300": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4881,
        4884
      ],
      "op": "POP",
      "path": "12"
    },
    "2301": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4881,
        4884
      ],
      "op": "POP",
      "path": "12"
    },
    "2302": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4841,
        4953
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8A9"
    },
    "2305": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4841,
        4953
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2306": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4841,
        4953
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2307": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4970,
        4985
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2309": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4970,
        4992
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2310": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4966,
        4992
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2311": {
      "branch": 62,
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4966,
        4992
      ],
      "op": "LT",
      "path": "12"
    },
    "2312": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4962,
        5163
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2313": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4962,
        5163
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9F9"
    },
    "2316": {
      "branch": 62,
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4962,
        5163
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2317": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5044
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 26,
      "value": "0x4"
    },
    "2319": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5045,
        5067
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2320": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5045,
        5067
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2321": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5045,
        5071
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x91C"
    },
    "2324": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5045,
        5071
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2325": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5070,
        5071
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2327": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5070,
        5071
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2328": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5045,
        5071
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1321"
    },
    "2331": {
      "fn": "DFRewards.retireStrategy",
      "jump": "i",
      "offset": [
        5045,
        5071
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2332": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5045,
        5071
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2333": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2334": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2335": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2336": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "LT",
      "path": "12"
    },
    "2337": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x92C"
    },
    "2340": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2341": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x92C"
    },
    "2344": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A9"
    },
    "2347": {
      "fn": "DFRewards.retireStrategy",
      "jump": "i",
      "offset": [
        5029,
        5072
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2348": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2349": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2351": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2352": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2353": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2354": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2356": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2357": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2358": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2359": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "ADD",
      "path": "12"
    },
    "2360": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2361": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5023
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2363": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2364": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2371": {
      "op": "SHL"
    },
    "2372": {
      "op": "SUB"
    },
    "2373": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2374": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2375": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "AND",
      "path": "12"
    },
    "2376": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5029,
        5072
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2377": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5024,
        5025
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2378": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5024,
        5025
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2379": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2380": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "LT",
      "path": "12"
    },
    "2381": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x958"
    },
    "2384": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2385": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x958"
    },
    "2388": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A9"
    },
    "2391": {
      "fn": "DFRewards.retireStrategy",
      "jump": "i",
      "offset": [
        5008,
        5026
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2392": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2393": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2394": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2396": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2397": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2399": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2401": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2402": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "ADD",
      "path": "12"
    },
    "2403": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2405": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "2408": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "EXP",
      "path": "12"
    },
    "2409": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2410": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2411": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2418": {
      "op": "SHL"
    },
    "2419": {
      "op": "SUB"
    },
    "2420": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "MUL",
      "path": "12"
    },
    "2421": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "NOT",
      "path": "12"
    },
    "2422": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "AND",
      "path": "12"
    },
    "2423": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2424": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2431": {
      "op": "SHL"
    },
    "2432": {
      "op": "SUB"
    },
    "2433": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "AND",
      "path": "12"
    },
    "2434": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "MUL",
      "path": "12"
    },
    "2435": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "OR",
      "path": "12"
    },
    "2436": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2437": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2438": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5008,
        5072
      ],
      "op": "POP",
      "path": "12"
    },
    "2439": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5101
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 27,
      "value": "0x4"
    },
    "2441": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2442": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2443": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2444": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x997"
    },
    "2447": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2448": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x997"
    },
    "2451": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13CF"
    },
    "2454": {
      "fn": "DFRewards.retireStrategy",
      "jump": "i",
      "offset": [
        5086,
        5107
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2455": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2456": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2458": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2459": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2460": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2461": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2463": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2464": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2465": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2466": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2469": {
      "op": "NOT"
    },
    "2470": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2471": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2472": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "ADD",
      "path": "12"
    },
    "2473": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2474": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "ADD",
      "path": "12"
    },
    "2475": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2476": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2483": {
      "op": "SHL"
    },
    "2484": {
      "op": "SUB"
    },
    "2485": {
      "op": "NOT"
    },
    "2486": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "AND",
      "path": "12"
    },
    "2487": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2488": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2489": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2490": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2491": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "ADD",
      "path": "12"
    },
    "2492": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2493": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2494": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5086,
        5107
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2495": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 28,
      "value": "0x40"
    },
    "2497": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2504": {
      "op": "SHL"
    },
    "2505": {
      "op": "SUB"
    },
    "2506": {
      "op": "DUP5"
    },
    "2507": {
      "op": "AND"
    },
    "2508": {
      "op": "DUP2"
    },
    "2509": {
      "op": "MSTORE"
    },
    "2510": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x43328B6EB7F0F6711A295CFC22368AF8227BF60B67A6F6A5454F6168726D3E25"
    },
    "2543": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2544": {
      "op": "ADD"
    },
    "2545": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2547": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2548": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2549": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2550": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "SUB",
      "path": "12"
    },
    "2551": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2552": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        5126,
        5152
      ],
      "op": "LOG1",
      "path": "12"
    },
    "2553": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4962,
        5163
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2554": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4742,
        5169
      ],
      "op": "POP",
      "path": "12"
    },
    "2555": {
      "fn": "DFRewards.retireStrategy",
      "offset": [
        4680,
        5169
      ],
      "op": "POP",
      "path": "12"
    },
    "2556": {
      "fn": "DFRewards.retireStrategy",
      "jump": "o",
      "offset": [
        4680,
        5169
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2557": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2558": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2560": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2567": {
      "op": "SHL"
    },
    "2568": {
      "op": "SUB"
    },
    "2569": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "1"
    },
    "2570": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2571": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "1"
    },
    "2572": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA27"
    },
    "2575": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2576": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2578": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2579": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2585": {
      "op": "SHL"
    },
    "2586": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2587": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2588": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2590": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2591": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1"
    },
    "2594": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2595": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1274"
    },
    "2598": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2599": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2600": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 29,
      "value": "0xA31"
    },
    "2603": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2605": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE37"
    },
    "2608": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2609": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2610": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2611": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2692,
        2865
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2612": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2798,
        2805
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2614": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2616": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2618": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2619": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "2620": {
      "branch": 69,
      "fn": "DFRewards.claimFor",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2621": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA88"
    },
    "2624": {
      "branch": 69,
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2625": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2627": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2628": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2634": {
      "op": "SHL"
    },
    "2635": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2636": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2639": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2641": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2642": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "2643": {
      "op": "MSTORE"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2648": {
      "op": "DUP3"
    },
    "2649": {
      "op": "ADD"
    },
    "2650": {
      "op": "MSTORE"
    },
    "2651": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2686": {
      "op": "DUP3"
    },
    "2687": {
      "op": "ADD"
    },
    "2688": {
      "op": "MSTORE"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2691": {
      "op": "ADD"
    },
    "2692": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF1"
    },
    "2695": {
      "op": "JUMP"
    },
    "2696": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2697": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2699": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2701": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2702": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2828,
        2858
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 30,
      "value": "0x3F6"
    },
    "2705": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2835,
        2838
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2706": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2840,
        2852
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2707": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2835,
        2838
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2708": {
      "fn": "DFRewards.claimFor",
      "offset": [
        2828,
        2834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCCD"
    },
    "2711": {
      "fn": "DFRewards.claimFor",
      "jump": "i",
      "offset": [
        2828,
        2858
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2712": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2713": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2715": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2722": {
      "op": "SHL"
    },
    "2723": {
      "op": "SUB"
    },
    "2724": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "1"
    },
    "2725": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2726": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "1"
    },
    "2727": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAC2"
    },
    "2730": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2731": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2733": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2734": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2740": {
      "op": "SHL"
    },
    "2741": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2742": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2743": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2745": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2746": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1"
    },
    "2749": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2750": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1274"
    },
    "2753": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2754": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2761": {
      "op": "SHL"
    },
    "2762": {
      "op": "SUB"
    },
    "2763": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 31
    },
    "2764": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "AND",
      "path": "12"
    },
    "2765": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2767": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2768": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2769": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2770": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3665
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2772": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2774": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2775": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2777": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2778": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2779": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2780": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2781": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2782": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2783": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2784": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2791": {
      "op": "SHL"
    },
    "2792": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2793": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2794": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3621,
        3625
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "2795": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2797": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2798": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "ADD",
      "path": "12"
    },
    "2799": {
      "op": "MSTORE"
    },
    "2800": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2801": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3656,
        3673
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2802": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3630,
        3636
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2803": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3630,
        3636
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2804": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3612
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "2809": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3612
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2812": {
      "op": "ADD"
    },
    "2813": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2815": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2817": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2818": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2819": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2820": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "SUB",
      "path": "12"
    },
    "2821": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2822": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2823": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "GAS",
      "path": "12"
    },
    "2824": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "2825": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2826": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2827": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2828": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB19"
    },
    "2831": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2832": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2833": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2835": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2836": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2837": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2838": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2840": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2841": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2842": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "POP",
      "path": "12"
    },
    "2843": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "POP",
      "path": "12"
    },
    "2844": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "POP",
      "path": "12"
    },
    "2845": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "POP",
      "path": "12"
    },
    "2846": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2848": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2849": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2850": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2852": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "NOT",
      "path": "12"
    },
    "2853": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2855": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2856": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "ADD",
      "path": "12"
    },
    "2857": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "AND",
      "path": "12"
    },
    "2858": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2859": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "ADD",
      "path": "12"
    },
    "2860": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2861": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2863": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2864": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "POP",
      "path": "12"
    },
    "2865": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2866": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "ADD",
      "path": "12"
    },
    "2867": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2868": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB3D"
    },
    "2871": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2872": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2873": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1308"
    },
    "2876": {
      "fn": "DFRewards.withdrawERCToken",
      "jump": "i",
      "offset": [
        3588,
        3627
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2877": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3627
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2878": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3636
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB47"
    },
    "2881": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3636
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2882": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3636
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2883": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3636
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1321"
    },
    "2886": {
      "fn": "DFRewards.withdrawERCToken",
      "jump": "i",
      "offset": [
        3588,
        3636
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2887": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3636
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2888": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3673
      ],
      "op": "LT",
      "path": "12"
    },
    "2889": {
      "branch": 63,
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3588,
        3673
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2890": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB95"
    },
    "2893": {
      "branch": 63,
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2894": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2896": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2897": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2903": {
      "op": "SHL"
    },
    "2904": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2905": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2908": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2910": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2911": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "ADD",
      "path": "12"
    },
    "2912": {
      "op": "MSTORE"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2917": {
      "op": "DUP3"
    },
    "2918": {
      "op": "ADD"
    },
    "2919": {
      "op": "MSTORE"
    },
    "2920": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420776974686472617720616C6C6F636174656420746F6B656E00"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2955": {
      "op": "DUP3"
    },
    "2956": {
      "op": "ADD"
    },
    "2957": {
      "op": "MSTORE"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2960": {
      "op": "ADD"
    },
    "2961": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF1"
    },
    "2964": {
      "op": "JUMP"
    },
    "2965": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3567,
        3730
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2966": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 32,
      "value": "0x40"
    },
    "2968": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2969": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2978": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2979": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3764,
        3774
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2980": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2982": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2983": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "ADD",
      "path": "12"
    },
    "2984": {
      "op": "MSTORE"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2987": {
      "op": "DUP2"
    },
    "2988": {
      "op": "ADD"
    },
    "2989": {
      "op": "DUP4"
    },
    "2990": {
      "op": "SWAP1"
    },
    "2991": {
      "op": "MSTORE"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2998": {
      "op": "SHL"
    },
    "2999": {
      "op": "SUB"
    },
    "3000": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3763
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3001": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3763
      ],
      "op": "AND",
      "path": "12"
    },
    "3002": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3763
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3003": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA9059CBB"
    },
    "3008": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3763
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3011": {
      "op": "ADD"
    },
    "3012": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3014": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3016": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3017": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3018": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3019": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "SUB",
      "path": "12"
    },
    "3020": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3021": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3023": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3024": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "GAS",
      "path": "12"
    },
    "3025": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "CALL",
      "path": "12"
    },
    "3026": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3027": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3028": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3029": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBE2"
    },
    "3032": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3033": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3034": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3036": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3037": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "3038": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3039": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3041": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3042": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3043": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "POP",
      "path": "12"
    },
    "3044": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "POP",
      "path": "12"
    },
    "3045": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "POP",
      "path": "12"
    },
    "3046": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "POP",
      "path": "12"
    },
    "3047": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3049": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3050": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3051": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "3053": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "NOT",
      "path": "12"
    },
    "3054": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "3056": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3057": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "ADD",
      "path": "12"
    },
    "3058": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "AND",
      "path": "12"
    },
    "3059": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3060": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "ADD",
      "path": "12"
    },
    "3061": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3062": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3064": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3065": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "POP",
      "path": "12"
    },
    "3066": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3067": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "ADD",
      "path": "12"
    },
    "3068": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3069": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC06"
    },
    "3072": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3073": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3074": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13E5"
    },
    "3077": {
      "fn": "DFRewards.withdrawERCToken",
      "jump": "i",
      "offset": [
        3740,
        3783
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3078": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3079": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3740,
        3783
      ],
      "op": "POP",
      "path": "12"
    },
    "3080": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "POP",
      "path": "12"
    },
    "3081": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        3460,
        3790
      ],
      "op": "POP",
      "path": "12"
    },
    "3082": {
      "fn": "DFRewards.withdrawERCToken",
      "jump": "o",
      "offset": [
        3460,
        3790
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3083": {
      "offset": [
        769,
        801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3084": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3086": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3087": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3088": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3089": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3090": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "LT",
      "path": "12"
    },
    "3091": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC1B"
    },
    "3094": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3095": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3097": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3098": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3099": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3100": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3102": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3103": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3104": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3105": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3107": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3108": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3109": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3110": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "ADD",
      "path": "12"
    },
    "3111": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3118": {
      "op": "SHL"
    },
    "3119": {
      "op": "SUB"
    },
    "3120": {
      "offset": [
        769,
        801
      ],
      "op": "AND",
      "path": "12"
    },
    "3121": {
      "fn": "DFRewards.withdrawERCToken",
      "offset": [
        769,
        801
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3122": {
      "op": "POP"
    },
    "3123": {
      "offset": [
        769,
        801
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3124": {
      "fn": "DFRewards.withdrawERCToken",
      "jump": "o",
      "offset": [
        769,
        801
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3126": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3128": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3135": {
      "op": "SHL"
    },
    "3136": {
      "op": "SUB"
    },
    "3137": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "1"
    },
    "3138": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3139": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "1"
    },
    "3140": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5F"
    },
    "3143": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3144": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3146": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3147": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3153": {
      "op": "SHL"
    },
    "3154": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3155": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3156": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3158": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "1"
    },
    "3159": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1"
    },
    "3162": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3163": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1274"
    },
    "3166": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3167": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3174": {
      "op": "SHL"
    },
    "3175": {
      "op": "SUB"
    },
    "3176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 33
    },
    "3177": {
      "branch": 68,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "1"
    },
    "3178": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC4"
    },
    "3181": {
      "branch": 68,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3184": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3185": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3191": {
      "op": "SHL"
    },
    "3192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3193": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3196": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3198": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3199": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "1"
    },
    "3200": {
      "op": "MSTORE"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3205": {
      "op": "DUP3"
    },
    "3206": {
      "op": "ADD"
    },
    "3207": {
      "op": "MSTORE"
    },
    "3208": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3243": {
      "op": "DUP3"
    },
    "3244": {
      "op": "ADD"
    },
    "3245": {
      "op": "MSTORE"
    },
    "3246": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3255": {
      "op": "SHL"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3258": {
      "op": "DUP3"
    },
    "3259": {
      "op": "ADD"
    },
    "3260": {
      "op": "MSTORE"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3263": {
      "op": "ADD"
    },
    "3264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1"
    },
    "3267": {
      "op": "JUMP"
    },
    "3268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 34,
      "value": "0x2EA"
    },
    "3272": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3273": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE37"
    },
    "3276": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3277": {
      "fn": "DFRewards._claim",
      "offset": [
        2171,
        2643
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3284": {
      "op": "SHL"
    },
    "3285": {
      "op": "SUB"
    },
    "3286": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3287": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3288": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "AND",
      "path": "12"
    },
    "3289": {
      "fn": "DFRewards._claim",
      "offset": [
        2289,
        2296
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3291": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3292": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3293": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3294": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2330
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3296": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3298": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3299": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3300": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3301": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3303": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3304": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3305": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2344
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3306": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3307": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3308": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "AND",
      "path": "12"
    },
    "3309": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3310": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3311": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3312": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3313": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3314": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3315": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3316": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3317": {
      "fn": "DFRewards._claim",
      "offset": [
        2322,
        2349
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3318": {
      "branch": 64,
      "fn": "DFRewards._claim",
      "offset": [
        2363,
        2371
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3319": {
      "fn": "DFRewards._claim",
      "offset": [
        2359,
        2406
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD04"
    },
    "3322": {
      "branch": 64,
      "fn": "DFRewards._claim",
      "offset": [
        2359,
        2406
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3323": {
      "fn": "DFRewards._claim",
      "offset": [
        2394,
        2395
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 35,
      "value": "0x0"
    },
    "3325": {
      "fn": "DFRewards._claim",
      "offset": [
        2387,
        2395
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3326": {
      "fn": "DFRewards._claim",
      "offset": [
        2387,
        2395
      ],
      "op": "POP",
      "path": "12"
    },
    "3327": {
      "fn": "DFRewards._claim",
      "offset": [
        2387,
        2395
      ],
      "op": "POP",
      "path": "12"
    },
    "3328": {
      "fn": "DFRewards._claim",
      "offset": [
        2387,
        2395
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDBF"
    },
    "3331": {
      "fn": "DFRewards._claim",
      "offset": [
        2387,
        2395
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3332": {
      "fn": "DFRewards._claim",
      "offset": [
        2359,
        2406
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3339": {
      "op": "SHL"
    },
    "3340": {
      "op": "SUB"
    },
    "3341": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 36
    },
    "3342": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3343": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "AND",
      "path": "12"
    },
    "3344": {
      "fn": "DFRewards._claim",
      "offset": [
        2445,
        2446
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3346": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3347": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3348": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3349": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2423
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3351": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3353": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3354": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3355": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3356": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3358": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3359": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3360": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2437
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3361": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "3362": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "DUP11",
      "path": "12"
    },
    "3363": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "AND",
      "path": "12"
    },
    "3364": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3365": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3366": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3367": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3368": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3369": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3370": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3371": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2442
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3372": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2446
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3373": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2446
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3374": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2446
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3375": {
      "fn": "DFRewards._claim",
      "offset": [
        2415,
        2446
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3376": {
      "fn": "DFRewards._claim",
      "offset": [
        2456,
        2505
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 37,
      "value": "0xD3A"
    },
    "3379": {
      "fn": "DFRewards._claim",
      "offset": [
        2456,
        2505
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3380": {
      "fn": "DFRewards._claim",
      "offset": [
        2490,
        2499
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3381": {
      "fn": "DFRewards._claim",
      "offset": [
        2501,
        2504
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3382": {
      "fn": "DFRewards._claim",
      "offset": [
        2456,
        2489
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE87"
    },
    "3385": {
      "fn": "DFRewards._claim",
      "jump": "i",
      "offset": [
        2456,
        2505
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3386": {
      "fn": "DFRewards._claim",
      "offset": [
        2456,
        2505
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 38
    },
    "3396": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "AND",
      "path": "12"
    },
    "3397": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3399": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3400": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3401": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3402": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2550
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "3404": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3406": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3407": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3409": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3410": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3411": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2564
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3412": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2570
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD5E"
    },
    "3415": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2570
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3416": {
      "fn": "DFRewards._claim",
      "offset": [
        2567,
        2570
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3417": {
      "fn": "DFRewards._claim",
      "offset": [
        2567,
        2570
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3418": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2570
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1321"
    },
    "3421": {
      "fn": "DFRewards._claim",
      "jump": "i",
      "offset": [
        2541,
        2570
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3422": {
      "fn": "DFRewards._claim",
      "offset": [
        2541,
        2570
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3429": {
      "op": "SHL"
    },
    "3430": {
      "op": "SUB"
    },
    "3431": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3432": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3433": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "AND",
      "path": "12"
    },
    "3434": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3436": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3437": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3438": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3439": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2524
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "3441": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3443": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3444": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3445": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3446": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3448": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3449": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3450": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3451": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2538
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3452": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2570
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "3453": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2570
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3454": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2570
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "3455": {
      "fn": "DFRewards._claim",
      "offset": [
        2515,
        2570
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3456": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 39
    },
    "3457": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3458": {
      "op": "SWAP3"
    },
    "3459": {
      "op": "DUP10"
    },
    "3460": {
      "op": "AND"
    },
    "3461": {
      "op": "DUP4"
    },
    "3462": {
      "op": "MSTORE"
    },
    "3463": {
      "op": "SWAP3"
    },
    "3464": {
      "op": "DUP3"
    },
    "3465": {
      "op": "ADD"
    },
    "3466": {
      "op": "DUP5"
    },
    "3467": {
      "op": "SWAP1"
    },
    "3468": {
      "op": "MSTORE"
    },
    "3469": {
      "op": "DUP2"
    },
    "3470": {
      "op": "DUP4"
    },
    "3471": {
      "op": "ADD"
    },
    "3472": {
      "op": "MSTORE"
    },
    "3473": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3474": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3475": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x7E6632CA16A0AC6CF28448500B1A17D96C8B8163AD4C4A9B44EF5386CC02779E"
    },
    "3508": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3509": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3510": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3511": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "SUB",
      "path": "12"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3514": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "ADD",
      "path": "12"
    },
    "3515": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3516": {
      "fn": "DFRewards._claim",
      "offset": [
        2585,
        2616
      ],
      "op": "LOG1",
      "path": "12"
    },
    "3517": {
      "fn": "DFRewards._claim",
      "offset": [
        2633,
        2636
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 40
    },
    "3518": {
      "op": "POP"
    },
    "3519": {
      "fn": "DFRewards._claim",
      "offset": [
        2171,
        2643
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3520": {
      "fn": "DFRewards._claim",
      "offset": [
        2171,
        2643
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3521": {
      "fn": "DFRewards._claim",
      "offset": [
        2171,
        2643
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3522": {
      "fn": "DFRewards._claim",
      "offset": [
        2171,
        2643
      ],
      "op": "POP",
      "path": "12"
    },
    "3523": {
      "fn": "DFRewards._claim",
      "offset": [
        2171,
        2643
      ],
      "op": "POP",
      "path": "12"
    },
    "3524": {
      "fn": "DFRewards._claim",
      "offset": [
        2171,
        2643
      ],
      "op": "POP",
      "path": "12"
    },
    "3525": {
      "fn": "DFRewards._claim",
      "jump": "o",
      "offset": [
        2171,
        2643
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3526": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3527": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 41,
      "value": "0x40"
    },
    "3529": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3536": {
      "op": "SHL"
    },
    "3537": {
      "op": "SUB"
    },
    "3538": {
      "op": "DUP1"
    },
    "3539": {
      "op": "DUP6"
    },
    "3540": {
      "op": "AND"
    },
    "3541": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "3543": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3544": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "3545": {
      "op": "MSTORE"
    },
    "3546": {
      "op": "DUP4"
    },
    "3547": {
      "op": "AND"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3550": {
      "op": "DUP3"
    },
    "3551": {
      "op": "ADD"
    },
    "3552": {
      "op": "MSTORE"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3555": {
      "op": "DUP2"
    },
    "3556": {
      "op": "ADD"
    },
    "3557": {
      "op": "DUP3"
    },
    "3558": {
      "op": "SWAP1"
    },
    "3559": {
      "op": "MSTORE"
    },
    "3560": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE31"
    },
    "3563": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3564": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3565": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3566": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3573": {
      "op": "SHL"
    },
    "3574": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1033,
        1060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3577": {
      "op": "ADD"
    },
    "3578": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3579": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3581": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3582": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3585": {
      "op": "NOT"
    },
    "3586": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3587": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3588": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SUB",
      "path": "7"
    },
    "3589": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "3590": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3591": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3592": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3593": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3594": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3595": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3597": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3598": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "3599": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3600": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3607": {
      "op": "SHL"
    },
    "3608": {
      "op": "SUB"
    },
    "3609": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "7"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3616": {
      "op": "SHL"
    },
    "3617": {
      "op": "SUB"
    },
    "3618": {
      "op": "NOT"
    },
    "3619": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3620": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3621": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "7"
    },
    "3622": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3623": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3624": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3625": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "OR",
      "path": "7"
    },
    "3626": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3627": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3628": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3629": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB7"
    },
    "3632": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        983,
        1079
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3633": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3634": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "7"
    },
    "3635": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "7"
    },
    "3636": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "7"
    },
    "3637": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "7"
    },
    "3638": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        845,
        1086
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3639": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3640": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3642": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3643": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3650": {
      "op": "SHL"
    },
    "3651": {
      "op": "SUB"
    },
    "3652": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 42
    },
    "3653": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3654": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "1"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3661": {
      "op": "SHL"
    },
    "3662": {
      "op": "SUB"
    },
    "3663": {
      "op": "NOT"
    },
    "3664": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3665": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "1"
    },
    "3666": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3667": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "1"
    },
    "3668": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3669": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3670": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 43,
      "value": "0x40"
    },
    "3672": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3673": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3674": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3675": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3676": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "1"
    },
    "3677": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3678": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3679": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3680": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3713": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3714": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3715": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3716": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "1"
    },
    "3717": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "1"
    },
    "3718": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3719": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3720": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 44,
      "value": "0x40"
    },
    "3722": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3729": {
      "op": "SHL"
    },
    "3730": {
      "op": "SUB"
    },
    "3731": {
      "op": "DUP4"
    },
    "3732": {
      "op": "AND"
    },
    "3733": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "3735": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3736": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "7"
    },
    "3737": {
      "op": "MSTORE"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3740": {
      "op": "DUP2"
    },
    "3741": {
      "op": "ADD"
    },
    "3742": {
      "op": "DUP3"
    },
    "3743": {
      "op": "SWAP1"
    },
    "3744": {
      "op": "MSTORE"
    },
    "3745": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC06"
    },
    "3748": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3749": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3750": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3751": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3758": {
      "op": "SHL"
    },
    "3759": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        796,
        819
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3762": {
      "op": "ADD"
    },
    "3763": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDFA"
    },
    "3766": {
      "op": "JUMP"
    },
    "3767": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3768": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3770": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF0C"
    },
    "3773": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3774": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3776": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3777": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3778": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3780": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "3781": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3783": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3784": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3785": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3787": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3788": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3789": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3791": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "3792": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3825": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3826": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3827": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "7"
    },
    "3828": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3835": {
      "op": "SHL"
    },
    "3836": {
      "op": "SUB"
    },
    "3837": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "7"
    },
    "3838": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF89"
    },
    "3841": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3842": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3843": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3844": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3845": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "3850": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "7"
    },
    "3851": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3852": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3853": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3854": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3855": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3856": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3857": {
      "op": "POP"
    },
    "3858": {
      "branch": 70,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3859": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC06"
    },
    "3862": {
      "branch": 70,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3863": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 45
    },
    "3864": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3865": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "3868": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3869": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3870": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3871": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "3872": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3873": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF2A"
    },
    "3876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3878": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13E5"
    },
    "3881": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3882": {
      "branch": 71,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC06"
    },
    "3886": {
      "branch": 71,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3887": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3889": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3896": {
      "op": "SHL"
    },
    "3897": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3898": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3901": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3904": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "7"
    },
    "3905": {
      "op": "MSTORE"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3910": {
      "op": "DUP3"
    },
    "3911": {
      "op": "ADD"
    },
    "3912": {
      "op": "MSTORE"
    },
    "3913": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3948": {
      "op": "DUP3"
    },
    "3949": {
      "op": "ADD"
    },
    "3950": {
      "op": "MSTORE"
    },
    "3951": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3964": {
      "op": "SHL"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3967": {
      "op": "DUP3"
    },
    "3968": {
      "op": "ADD"
    },
    "3969": {
      "op": "MSTORE"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3972": {
      "op": "ADD"
    },
    "3973": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF1"
    },
    "3976": {
      "op": "JUMP"
    },
    "3977": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3978": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "3980": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 46,
      "value": "0xF98"
    },
    "3983": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3984": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3985": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3987": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3988": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFA0"
    },
    "3991": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3992": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3993": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "3994": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3995": {
      "op": "POP"
    },
    "3996": {
      "op": "POP"
    },
    "3997": {
      "op": "POP"
    },
    "3998": {
      "op": "POP"
    },
    "3999": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "4003": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 47
    },
    "4004": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "4005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "8"
    },
    "4006": {
      "branch": 65,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1001"
    },
    "4010": {
      "branch": 65,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4011": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4013": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4014": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4020": {
      "op": "SHL"
    },
    "4021": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4022": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4027": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4028": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "8"
    },
    "4029": {
      "op": "MSTORE"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4034": {
      "op": "DUP3"
    },
    "4035": {
      "op": "ADD"
    },
    "4036": {
      "op": "MSTORE"
    },
    "4037": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4072": {
      "op": "DUP3"
    },
    "4073": {
      "op": "ADD"
    },
    "4074": {
      "op": "MSTORE"
    },
    "4075": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4084": {
      "op": "SHL"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4087": {
      "op": "DUP3"
    },
    "4088": {
      "op": "ADD"
    },
    "4089": {
      "op": "MSTORE"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4092": {
      "op": "ADD"
    },
    "4093": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF1"
    },
    "4096": {
      "op": "JUMP"
    },
    "4097": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4098": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4099": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "4100": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 48,
      "value": "0x104F"
    },
    "4103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4113": {
      "op": "SHL"
    },
    "4114": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4120": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4121": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "8"
    },
    "4122": {
      "op": "MSTORE"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4127": {
      "op": "DUP3"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "MSTORE"
    },
    "4130": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4165": {
      "op": "DUP3"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "MSTORE"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4170": {
      "op": "ADD"
    },
    "4171": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF1"
    },
    "4174": {
      "op": "JUMP"
    },
    "4175": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4176": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4178": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4179": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4186": {
      "op": "SHL"
    },
    "4187": {
      "op": "SUB"
    },
    "4188": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "8"
    },
    "4189": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "8"
    },
    "4190": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "8"
    },
    "4191": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4193": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4194": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x106B"
    },
    "4197": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4198": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4199": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1433"
    },
    "4202": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4203": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4204": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4208": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4209": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4210": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4211": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "8"
    },
    "4212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4213": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "8"
    },
    "4214": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "8"
    },
    "4215": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "8"
    },
    "4216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "8"
    },
    "4217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4218": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "4219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "4220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "4221": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4222": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4223": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4225": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4226": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "8"
    },
    "4227": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10A8"
    },
    "4230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4231": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4233": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4235": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "4236": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4238": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "8"
    },
    "4239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "4241": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4242": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "8"
    },
    "4243": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "8"
    },
    "4244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "8"
    },
    "4246": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4248": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4249": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4250": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4253": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "8"
    },
    "4259": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "4260": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10AD"
    },
    "4263": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4264": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4265": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "4267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "4269": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4270": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "4271": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4272": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "4273": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "4275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 49,
      "value": "0x10BD"
    },
    "4278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5007,
        5014
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5016,
        5026
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5028,
        5040
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5006
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10C8"
    },
    "4284": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5041
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4285": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5041
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "4287": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "4288": {
      "op": "POP"
    },
    "4289": {
      "op": "POP"
    },
    "4290": {
      "op": "POP"
    },
    "4291": {
      "op": "POP"
    },
    "4292": {
      "op": "POP"
    },
    "4293": {
      "op": "POP"
    },
    "4294": {
      "op": "POP"
    },
    "4295": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5048
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4296": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6950,
        7642
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4297": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7096,
        7108
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "4299": {
      "branch": 66,
      "fn": "Address._verifyCallResult",
      "offset": [
        7124,
        7131
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4300": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4301": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D7"
    },
    "4304": {
      "branch": 66,
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4305": {
      "op": "POP"
    },
    "4306": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7154,
        7164
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 50
    },
    "4307": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDBF"
    },
    "4310": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4311": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4312": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4313": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4314": {
      "branch": 67,
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7286
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4315": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10E7"
    },
    "4318": {
      "branch": 67,
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4319": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7459,
        7469
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4320": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7453,
        7470
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4321": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7519,
        7534
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4322": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7506,
        7516
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4323": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7502,
        7504
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4325": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7498,
        7517
      ],
      "op": "ADD",
      "path": "8"
    },
    "4326": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7491,
        7535
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4327": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4328": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7598,
        7610
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 51
    },
    "4329": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4331": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4338": {
      "op": "SHL"
    },
    "4339": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4340": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4341": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4343": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "ADD",
      "path": "8"
    },
    "4344": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF1"
    },
    "4347": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4348": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4349": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x144F"
    },
    "4352": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7591,
        7611
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4353": {
      "op": "JUMPDEST"
    },
    "4354": {
      "op": "DUP1"
    },
    "4355": {
      "op": "CALLDATALOAD"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4362": {
      "op": "SHL"
    },
    "4363": {
      "op": "SUB"
    },
    "4364": {
      "op": "DUP2"
    },
    "4365": {
      "op": "AND"
    },
    "4366": {
      "op": "DUP2"
    },
    "4367": {
      "op": "EQ"
    },
    "4368": {
      "op": "PUSH2",
      "value": "0x1118"
    },
    "4371": {
      "op": "JUMPI"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4374": {
      "op": "DUP1"
    },
    "4375": {
      "op": "REVERT"
    },
    "4376": {
      "op": "JUMPDEST"
    },
    "4377": {
      "op": "SWAP2"
    },
    "4378": {
      "op": "SWAP1"
    },
    "4379": {
      "op": "POP"
    },
    "4380": {
      "jump": "o",
      "op": "JUMP"
    },
    "4381": {
      "op": "JUMPDEST"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4386": {
      "op": "DUP3"
    },
    "4387": {
      "op": "DUP5"
    },
    "4388": {
      "op": "SUB"
    },
    "4389": {
      "op": "SLT"
    },
    "4390": {
      "op": "ISZERO"
    },
    "4391": {
      "op": "PUSH2",
      "value": "0x112F"
    },
    "4394": {
      "op": "JUMPI"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4397": {
      "op": "DUP1"
    },
    "4398": {
      "op": "REVERT"
    },
    "4399": {
      "op": "JUMPDEST"
    },
    "4400": {
      "op": "PUSH2",
      "value": "0xDBF"
    },
    "4403": {
      "op": "DUP3"
    },
    "4404": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4407": {
      "jump": "i",
      "op": "JUMP"
    },
    "4408": {
      "op": "JUMPDEST"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4411": {
      "op": "DUP1"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4414": {
      "op": "DUP4"
    },
    "4415": {
      "op": "DUP6"
    },
    "4416": {
      "op": "SUB"
    },
    "4417": {
      "op": "SLT"
    },
    "4418": {
      "op": "ISZERO"
    },
    "4419": {
      "op": "PUSH2",
      "value": "0x114B"
    },
    "4422": {
      "op": "JUMPI"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4425": {
      "op": "DUP1"
    },
    "4426": {
      "op": "REVERT"
    },
    "4427": {
      "op": "JUMPDEST"
    },
    "4428": {
      "op": "PUSH2",
      "value": "0x1154"
    },
    "4431": {
      "op": "DUP4"
    },
    "4432": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4435": {
      "jump": "i",
      "op": "JUMP"
    },
    "4436": {
      "op": "JUMPDEST"
    },
    "4437": {
      "op": "SWAP2"
    },
    "4438": {
      "op": "POP"
    },
    "4439": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4444": {
      "op": "DUP5"
    },
    "4445": {
      "op": "ADD"
    },
    "4446": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4449": {
      "jump": "i",
      "op": "JUMP"
    },
    "4450": {
      "op": "JUMPDEST"
    },
    "4451": {
      "op": "SWAP1"
    },
    "4452": {
      "op": "POP"
    },
    "4453": {
      "op": "SWAP3"
    },
    "4454": {
      "op": "POP"
    },
    "4455": {
      "op": "SWAP3"
    },
    "4456": {
      "op": "SWAP1"
    },
    "4457": {
      "op": "POP"
    },
    "4458": {
      "jump": "o",
      "op": "JUMP"
    },
    "4459": {
      "op": "JUMPDEST"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4462": {
      "op": "DUP1"
    },
    "4463": {
      "op": "DUP4"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4466": {
      "op": "DUP5"
    },
    "4467": {
      "op": "ADD"
    },
    "4468": {
      "op": "SLT"
    },
    "4469": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4472": {
      "op": "JUMPI"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4475": {
      "op": "DUP1"
    },
    "4476": {
      "op": "REVERT"
    },
    "4477": {
      "op": "JUMPDEST"
    },
    "4478": {
      "op": "POP"
    },
    "4479": {
      "op": "DUP2"
    },
    "4480": {
      "op": "CALLDATALOAD"
    },
    "4481": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4490": {
      "op": "DUP2"
    },
    "4491": {
      "op": "GT"
    },
    "4492": {
      "op": "ISZERO"
    },
    "4493": {
      "op": "PUSH2",
      "value": "0x1195"
    },
    "4496": {
      "op": "JUMPI"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4499": {
      "op": "DUP1"
    },
    "4500": {
      "op": "REVERT"
    },
    "4501": {
      "op": "JUMPDEST"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4504": {
      "op": "DUP4"
    },
    "4505": {
      "op": "ADD"
    },
    "4506": {
      "op": "SWAP2"
    },
    "4507": {
      "op": "POP"
    },
    "4508": {
      "op": "DUP4"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4511": {
      "op": "DUP3"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4514": {
      "op": "SHL"
    },
    "4515": {
      "op": "DUP6"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "ADD"
    },
    "4518": {
      "op": "GT"
    },
    "4519": {
      "op": "ISZERO"
    },
    "4520": {
      "op": "PUSH2",
      "value": "0x11B0"
    },
    "4523": {
      "op": "JUMPI"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4526": {
      "op": "DUP1"
    },
    "4527": {
      "op": "REVERT"
    },
    "4528": {
      "op": "JUMPDEST"
    },
    "4529": {
      "op": "SWAP3"
    },
    "4530": {
      "op": "POP"
    },
    "4531": {
      "op": "SWAP3"
    },
    "4532": {
      "op": "SWAP1"
    },
    "4533": {
      "op": "POP"
    },
    "4534": {
      "jump": "o",
      "op": "JUMP"
    },
    "4535": {
      "op": "JUMPDEST"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4538": {
      "op": "DUP1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4541": {
      "op": "DUP1"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4546": {
      "op": "DUP7"
    },
    "4547": {
      "op": "DUP9"
    },
    "4548": {
      "op": "SUB"
    },
    "4549": {
      "op": "SLT"
    },
    "4550": {
      "op": "ISZERO"
    },
    "4551": {
      "op": "PUSH2",
      "value": "0x11CF"
    },
    "4554": {
      "op": "JUMPI"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4557": {
      "op": "DUP1"
    },
    "4558": {
      "op": "REVERT"
    },
    "4559": {
      "op": "JUMPDEST"
    },
    "4560": {
      "op": "DUP6"
    },
    "4561": {
      "op": "CALLDATALOAD"
    },
    "4562": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4571": {
      "op": "DUP1"
    },
    "4572": {
      "op": "DUP3"
    },
    "4573": {
      "op": "GT"
    },
    "4574": {
      "op": "ISZERO"
    },
    "4575": {
      "op": "PUSH2",
      "value": "0x11E7"
    },
    "4578": {
      "op": "JUMPI"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4581": {
      "op": "DUP1"
    },
    "4582": {
      "op": "REVERT"
    },
    "4583": {
      "op": "JUMPDEST"
    },
    "4584": {
      "op": "PUSH2",
      "value": "0x11F3"
    },
    "4587": {
      "op": "DUP10"
    },
    "4588": {
      "op": "DUP4"
    },
    "4589": {
      "op": "DUP11"
    },
    "4590": {
      "op": "ADD"
    },
    "4591": {
      "op": "PUSH2",
      "value": "0x116B"
    },
    "4594": {
      "jump": "i",
      "op": "JUMP"
    },
    "4595": {
      "op": "JUMPDEST"
    },
    "4596": {
      "op": "SWAP1"
    },
    "4597": {
      "op": "SWAP8"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "SWAP6"
    },
    "4600": {
      "op": "POP"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4603": {
      "op": "DUP9"
    },
    "4604": {
      "op": "ADD"
    },
    "4605": {
      "op": "CALLDATALOAD"
    },
    "4606": {
      "op": "SWAP2"
    },
    "4607": {
      "op": "POP"
    },
    "4608": {
      "op": "DUP1"
    },
    "4609": {
      "op": "DUP3"
    },
    "4610": {
      "op": "GT"
    },
    "4611": {
      "op": "ISZERO"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x120C"
    },
    "4615": {
      "op": "JUMPI"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4618": {
      "op": "DUP1"
    },
    "4619": {
      "op": "REVERT"
    },
    "4620": {
      "op": "JUMPDEST"
    },
    "4621": {
      "op": "POP"
    },
    "4622": {
      "op": "PUSH2",
      "value": "0x1219"
    },
    "4625": {
      "op": "DUP9"
    },
    "4626": {
      "op": "DUP3"
    },
    "4627": {
      "op": "DUP10"
    },
    "4628": {
      "op": "ADD"
    },
    "4629": {
      "op": "PUSH2",
      "value": "0x116B"
    },
    "4632": {
      "jump": "i",
      "op": "JUMP"
    },
    "4633": {
      "op": "JUMPDEST"
    },
    "4634": {
      "op": "SWAP1"
    },
    "4635": {
      "op": "SWAP5"
    },
    "4636": {
      "op": "POP"
    },
    "4637": {
      "op": "SWAP3"
    },
    "4638": {
      "op": "POP"
    },
    "4639": {
      "op": "PUSH2",
      "value": "0x122C"
    },
    "4642": {
      "op": "SWAP1"
    },
    "4643": {
      "op": "POP"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4646": {
      "op": "DUP8"
    },
    "4647": {
      "op": "ADD"
    },
    "4648": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4651": {
      "jump": "i",
      "op": "JUMP"
    },
    "4652": {
      "op": "JUMPDEST"
    },
    "4653": {
      "op": "SWAP1"
    },
    "4654": {
      "op": "POP"
    },
    "4655": {
      "op": "SWAP3"
    },
    "4656": {
      "op": "SWAP6"
    },
    "4657": {
      "op": "POP"
    },
    "4658": {
      "op": "SWAP3"
    },
    "4659": {
      "op": "SWAP6"
    },
    "4660": {
      "op": "SWAP1"
    },
    "4661": {
      "op": "SWAP4"
    },
    "4662": {
      "op": "POP"
    },
    "4663": {
      "jump": "o",
      "op": "JUMP"
    },
    "4664": {
      "op": "JUMPDEST"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4667": {
      "op": "DUP1"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4670": {
      "op": "DUP4"
    },
    "4671": {
      "op": "DUP6"
    },
    "4672": {
      "op": "SUB"
    },
    "4673": {
      "op": "SLT"
    },
    "4674": {
      "op": "ISZERO"
    },
    "4675": {
      "op": "PUSH2",
      "value": "0x124B"
    },
    "4678": {
      "op": "JUMPI"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4681": {
      "op": "DUP1"
    },
    "4682": {
      "op": "REVERT"
    },
    "4683": {
      "op": "JUMPDEST"
    },
    "4684": {
      "op": "DUP3"
    },
    "4685": {
      "op": "CALLDATALOAD"
    },
    "4686": {
      "op": "SWAP2"
    },
    "4687": {
      "op": "POP"
    },
    "4688": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4693": {
      "op": "DUP5"
    },
    "4694": {
      "op": "ADD"
    },
    "4695": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4698": {
      "jump": "i",
      "op": "JUMP"
    },
    "4699": {
      "op": "JUMPDEST"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4704": {
      "op": "DUP3"
    },
    "4705": {
      "op": "DUP5"
    },
    "4706": {
      "op": "SUB"
    },
    "4707": {
      "op": "SLT"
    },
    "4708": {
      "op": "ISZERO"
    },
    "4709": {
      "op": "PUSH2",
      "value": "0x126D"
    },
    "4712": {
      "op": "JUMPI"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4715": {
      "op": "DUP1"
    },
    "4716": {
      "op": "REVERT"
    },
    "4717": {
      "op": "JUMPDEST"
    },
    "4718": {
      "op": "POP"
    },
    "4719": {
      "op": "CALLDATALOAD"
    },
    "4720": {
      "op": "SWAP2"
    },
    "4721": {
      "op": "SWAP1"
    },
    "4722": {
      "op": "POP"
    },
    "4723": {
      "jump": "o",
      "op": "JUMP"
    },
    "4724": {
      "op": "JUMPDEST"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4727": {
      "op": "DUP1"
    },
    "4728": {
      "op": "DUP3"
    },
    "4729": {
      "op": "MSTORE"
    },
    "4730": {
      "op": "DUP2"
    },
    "4731": {
      "op": "DUP2"
    },
    "4732": {
      "op": "ADD"
    },
    "4733": {
      "op": "MSTORE"
    },
    "4734": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4769": {
      "op": "DUP3"
    },
    "4770": {
      "op": "ADD"
    },
    "4771": {
      "op": "MSTORE"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4774": {
      "op": "ADD"
    },
    "4775": {
      "op": "SWAP1"
    },
    "4776": {
      "jump": "o",
      "op": "JUMP"
    },
    "4777": {
      "op": "JUMPDEST"
    },
    "4778": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4783": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4785": {
      "op": "SHL"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4788": {
      "op": "MSTORE"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4793": {
      "op": "MSTORE"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4798": {
      "op": "REVERT"
    },
    "4799": {
      "op": "JUMPDEST"
    },
    "4800": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4807": {
      "op": "SHL"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4810": {
      "op": "MSTORE"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4815": {
      "op": "MSTORE"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4820": {
      "op": "REVERT"
    },
    "4821": {
      "op": "JUMPDEST"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4826": {
      "op": "NOT"
    },
    "4827": {
      "op": "DUP3"
    },
    "4828": {
      "op": "EQ"
    },
    "4829": {
      "op": "ISZERO"
    },
    "4830": {
      "op": "PUSH2",
      "value": "0x12E9"
    },
    "4833": {
      "op": "JUMPI"
    },
    "4834": {
      "op": "PUSH2",
      "value": "0x12E9"
    },
    "4837": {
      "op": "PUSH2",
      "value": "0x12BF"
    },
    "4840": {
      "jump": "i",
      "op": "JUMP"
    },
    "4841": {
      "op": "JUMPDEST"
    },
    "4842": {
      "op": "POP"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "ADD"
    },
    "4846": {
      "op": "SWAP1"
    },
    "4847": {
      "jump": "o",
      "op": "JUMP"
    },
    "4848": {
      "op": "JUMPDEST"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4851": {
      "op": "DUP3"
    },
    "4852": {
      "op": "NOT"
    },
    "4853": {
      "op": "DUP3"
    },
    "4854": {
      "op": "GT"
    },
    "4855": {
      "op": "ISZERO"
    },
    "4856": {
      "op": "PUSH2",
      "value": "0x1303"
    },
    "4859": {
      "op": "JUMPI"
    },
    "4860": {
      "op": "PUSH2",
      "value": "0x1303"
    },
    "4863": {
      "op": "PUSH2",
      "value": "0x12BF"
    },
    "4866": {
      "jump": "i",
      "op": "JUMP"
    },
    "4867": {
      "op": "JUMPDEST"
    },
    "4868": {
      "op": "POP"
    },
    "4869": {
      "op": "ADD"
    },
    "4870": {
      "op": "SWAP1"
    },
    "4871": {
      "jump": "o",
      "op": "JUMP"
    },
    "4872": {
      "op": "JUMPDEST"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4877": {
      "op": "DUP3"
    },
    "4878": {
      "op": "DUP5"
    },
    "4879": {
      "op": "SUB"
    },
    "4880": {
      "op": "SLT"
    },
    "4881": {
      "op": "ISZERO"
    },
    "4882": {
      "op": "PUSH2",
      "value": "0x131A"
    },
    "4885": {
      "op": "JUMPI"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4888": {
      "op": "DUP1"
    },
    "4889": {
      "op": "REVERT"
    },
    "4890": {
      "op": "JUMPDEST"
    },
    "4891": {
      "op": "POP"
    },
    "4892": {
      "op": "MLOAD"
    },
    "4893": {
      "op": "SWAP2"
    },
    "4894": {
      "op": "SWAP1"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "jump": "o",
      "op": "JUMP"
    },
    "4897": {
      "op": "JUMPDEST"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4900": {
      "op": "DUP3"
    },
    "4901": {
      "op": "DUP3"
    },
    "4902": {
      "op": "LT"
    },
    "4903": {
      "op": "ISZERO"
    },
    "4904": {
      "op": "PUSH2",
      "value": "0x1333"
    },
    "4907": {
      "op": "JUMPI"
    },
    "4908": {
      "op": "PUSH2",
      "value": "0x1333"
    },
    "4911": {
      "op": "PUSH2",
      "value": "0x12BF"
    },
    "4914": {
      "jump": "i",
      "op": "JUMP"
    },
    "4915": {
      "op": "JUMPDEST"
    },
    "4916": {
      "op": "POP"
    },
    "4917": {
      "op": "SUB"
    },
    "4918": {
      "op": "SWAP1"
    },
    "4919": {
      "jump": "o",
      "op": "JUMP"
    },
    "4920": {
      "op": "JUMPDEST"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4923": {
      "op": "DUP1"
    },
    "4924": {
      "op": "DUP3"
    },
    "4925": {
      "op": "MSTORE"
    },
    "4926": {
      "op": "DUP2"
    },
    "4927": {
      "op": "ADD"
    },
    "4928": {
      "op": "DUP6"
    },
    "4929": {
      "op": "SWAP1"
    },
    "4930": {
      "op": "MSTORE"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4933": {
      "op": "DUP7"
    },
    "4934": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4936": {
      "op": "DUP4"
    },
    "4937": {
      "op": "ADD"
    },
    "4938": {
      "op": "DUP3"
    },
    "4939": {
      "op": "JUMPDEST"
    },
    "4940": {
      "op": "DUP9"
    },
    "4941": {
      "op": "DUP2"
    },
    "4942": {
      "op": "LT"
    },
    "4943": {
      "op": "ISZERO"
    },
    "4944": {
      "op": "PUSH2",
      "value": "0x1379"
    },
    "4947": {
      "op": "JUMPI"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4954": {
      "op": "SHL"
    },
    "4955": {
      "op": "SUB"
    },
    "4956": {
      "op": "PUSH2",
      "value": "0x1364"
    },
    "4959": {
      "op": "DUP5"
    },
    "4960": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4963": {
      "jump": "i",
      "op": "JUMP"
    },
    "4964": {
      "op": "JUMPDEST"
    },
    "4965": {
      "op": "AND"
    },
    "4966": {
      "op": "DUP3"
    },
    "4967": {
      "op": "MSTORE"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4970": {
      "op": "SWAP3"
    },
    "4971": {
      "op": "DUP4"
    },
    "4972": {
      "op": "ADD"
    },
    "4973": {
      "op": "SWAP3"
    },
    "4974": {
      "op": "SWAP1"
    },
    "4975": {
      "op": "SWAP2"
    },
    "4976": {
      "op": "ADD"
    },
    "4977": {
      "op": "SWAP1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4980": {
      "op": "ADD"
    },
    "4981": {
      "op": "PUSH2",
      "value": "0x134B"
    },
    "4984": {
      "op": "JUMP"
    },
    "4985": {
      "op": "JUMPDEST"
    },
    "4986": {
      "op": "POP"
    },
    "4987": {
      "op": "DUP4"
    },
    "4988": {
      "op": "DUP2"
    },
    "4989": {
      "op": "SUB"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4992": {
      "op": "DUP6"
    },
    "4993": {
      "op": "ADD"
    },
    "4994": {
      "op": "MSTORE"
    },
    "4995": {
      "op": "DUP6"
    },
    "4996": {
      "op": "DUP2"
    },
    "4997": {
      "op": "MSTORE"
    },
    "4998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "5004": {
      "op": "SHL"
    },
    "5005": {
      "op": "SUB"
    },
    "5006": {
      "op": "DUP7"
    },
    "5007": {
      "op": "GT"
    },
    "5008": {
      "op": "ISZERO"
    },
    "5009": {
      "op": "PUSH2",
      "value": "0x1399"
    },
    "5012": {
      "op": "JUMPI"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5015": {
      "op": "DUP1"
    },
    "5016": {
      "op": "REVERT"
    },
    "5017": {
      "op": "JUMPDEST"
    },
    "5018": {
      "op": "DUP6"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5021": {
      "op": "SHL"
    },
    "5022": {
      "op": "SWAP2"
    },
    "5023": {
      "op": "POP"
    },
    "5024": {
      "op": "DUP2"
    },
    "5025": {
      "op": "DUP8"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5028": {
      "op": "DUP4"
    },
    "5029": {
      "op": "ADD"
    },
    "5030": {
      "op": "CALLDATACOPY"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5033": {
      "op": "SWAP2"
    },
    "5034": {
      "op": "ADD"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5037": {
      "op": "ADD"
    },
    "5038": {
      "op": "SWAP1"
    },
    "5039": {
      "op": "DUP2"
    },
    "5040": {
      "op": "MSTORE"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5047": {
      "op": "SHL"
    },
    "5048": {
      "op": "SUB"
    },
    "5049": {
      "op": "SWAP4"
    },
    "5050": {
      "op": "SWAP1"
    },
    "5051": {
      "op": "SWAP4"
    },
    "5052": {
      "op": "AND"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5055": {
      "op": "SWAP3"
    },
    "5056": {
      "op": "SWAP1"
    },
    "5057": {
      "op": "SWAP3"
    },
    "5058": {
      "op": "ADD"
    },
    "5059": {
      "op": "SWAP2"
    },
    "5060": {
      "op": "SWAP1"
    },
    "5061": {
      "op": "SWAP2"
    },
    "5062": {
      "op": "MSTORE"
    },
    "5063": {
      "op": "POP"
    },
    "5064": {
      "op": "SWAP5"
    },
    "5065": {
      "op": "SWAP4"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "op": "POP"
    },
    "5069": {
      "op": "POP"
    },
    "5070": {
      "jump": "o",
      "op": "JUMP"
    },
    "5071": {
      "op": "JUMPDEST"
    },
    "5072": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5079": {
      "op": "SHL"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5082": {
      "op": "MSTORE"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5087": {
      "op": "MSTORE"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5092": {
      "op": "REVERT"
    },
    "5093": {
      "op": "JUMPDEST"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5098": {
      "op": "DUP3"
    },
    "5099": {
      "op": "DUP5"
    },
    "5100": {
      "op": "SUB"
    },
    "5101": {
      "op": "SLT"
    },
    "5102": {
      "op": "ISZERO"
    },
    "5103": {
      "op": "PUSH2",
      "value": "0x13F7"
    },
    "5106": {
      "op": "JUMPI"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5109": {
      "op": "DUP1"
    },
    "5110": {
      "op": "REVERT"
    },
    "5111": {
      "op": "JUMPDEST"
    },
    "5112": {
      "op": "DUP2"
    },
    "5113": {
      "op": "MLOAD"
    },
    "5114": {
      "op": "DUP1"
    },
    "5115": {
      "op": "ISZERO"
    },
    "5116": {
      "op": "ISZERO"
    },
    "5117": {
      "op": "DUP2"
    },
    "5118": {
      "op": "EQ"
    },
    "5119": {
      "op": "PUSH2",
      "value": "0xDBF"
    },
    "5122": {
      "op": "JUMPI"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5125": {
      "op": "DUP1"
    },
    "5126": {
      "op": "REVERT"
    },
    "5127": {
      "op": "JUMPDEST"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5130": {
      "op": "JUMPDEST"
    },
    "5131": {
      "op": "DUP4"
    },
    "5132": {
      "op": "DUP2"
    },
    "5133": {
      "op": "LT"
    },
    "5134": {
      "op": "ISZERO"
    },
    "5135": {
      "op": "PUSH2",
      "value": "0x1422"
    },
    "5138": {
      "op": "JUMPI"
    },
    "5139": {
      "op": "DUP2"
    },
    "5140": {
      "op": "DUP2"
    },
    "5141": {
      "op": "ADD"
    },
    "5142": {
      "op": "MLOAD"
    },
    "5143": {
      "op": "DUP4"
    },
    "5144": {
      "op": "DUP3"
    },
    "5145": {
      "op": "ADD"
    },
    "5146": {
      "op": "MSTORE"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5149": {
      "op": "ADD"
    },
    "5150": {
      "op": "PUSH2",
      "value": "0x140A"
    },
    "5153": {
      "op": "JUMP"
    },
    "5154": {
      "op": "JUMPDEST"
    },
    "5155": {
      "op": "DUP4"
    },
    "5156": {
      "op": "DUP2"
    },
    "5157": {
      "op": "GT"
    },
    "5158": {
      "op": "ISZERO"
    },
    "5159": {
      "op": "PUSH2",
      "value": "0xE31"
    },
    "5162": {
      "op": "JUMPI"
    },
    "5163": {
      "op": "POP"
    },
    "5164": {
      "op": "POP"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5167": {
      "op": "SWAP2"
    },
    "5168": {
      "op": "ADD"
    },
    "5169": {
      "op": "MSTORE"
    },
    "5170": {
      "jump": "o",
      "op": "JUMP"
    },
    "5171": {
      "op": "JUMPDEST"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5174": {
      "op": "DUP3"
    },
    "5175": {
      "op": "MLOAD"
    },
    "5176": {
      "op": "PUSH2",
      "value": "0x1445"
    },
    "5179": {
      "op": "DUP2"
    },
    "5180": {
      "op": "DUP5"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5183": {
      "op": "DUP8"
    },
    "5184": {
      "op": "ADD"
    },
    "5185": {
      "op": "PUSH2",
      "value": "0x1407"
    },
    "5188": {
      "jump": "i",
      "op": "JUMP"
    },
    "5189": {
      "op": "JUMPDEST"
    },
    "5190": {
      "op": "SWAP2"
    },
    "5191": {
      "op": "SWAP1"
    },
    "5192": {
      "op": "SWAP2"
    },
    "5193": {
      "op": "ADD"
    },
    "5194": {
      "op": "SWAP3"
    },
    "5195": {
      "op": "SWAP2"
    },
    "5196": {
      "op": "POP"
    },
    "5197": {
      "op": "POP"
    },
    "5198": {
      "jump": "o",
      "op": "JUMP"
    },
    "5199": {
      "op": "JUMPDEST"
    },
    "5200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5202": {
      "op": "DUP2"
    },
    "5203": {
      "op": "MSTORE"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5206": {
      "op": "DUP3"
    },
    "5207": {
      "op": "MLOAD"
    },
    "5208": {
      "op": "DUP1"
    },
    "5209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5211": {
      "op": "DUP5"
    },
    "5212": {
      "op": "ADD"
    },
    "5213": {
      "op": "MSTORE"
    },
    "5214": {
      "op": "PUSH2",
      "value": "0x146E"
    },
    "5217": {
      "op": "DUP2"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5220": {
      "op": "DUP6"
    },
    "5221": {
      "op": "ADD"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5224": {
      "op": "DUP8"
    },
    "5225": {
      "op": "ADD"
    },
    "5226": {
      "op": "PUSH2",
      "value": "0x1407"
    },
    "5229": {
      "jump": "i",
      "op": "JUMP"
    },
    "5230": {
      "op": "JUMPDEST"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5233": {
      "op": "ADD"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5236": {
      "op": "NOT"
    },
    "5237": {
      "op": "AND"
    },
    "5238": {
      "op": "SWAP2"
    },
    "5239": {
      "op": "SWAP1"
    },
    "5240": {
      "op": "SWAP2"
    },
    "5241": {
      "op": "ADD"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5244": {
      "op": "ADD"
    },
    "5245": {
      "op": "SWAP3"
    },
    "5246": {
      "op": "SWAP2"
    },
    "5247": {
      "op": "POP"
    },
    "5248": {
      "op": "POP"
    },
    "5249": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "891fc84022bae566888100f4e69383b924b2c329",
  "source": "// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\npragma solidity 0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol\";\nimport \"./interfaces/IDFRewards.sol\";\n\ncontract DFRewards is Ownable, ReentrancyGuard, IDFRewards {\n    using SafeERC20 for IERC20;\n\n    // token address => user address => balance\n    mapping(address => mapping(address => uint256)) balances;\n    mapping(address => uint256) allocated;\n    //mapping(address => bool) live_strategies;\n    address[] public live_strategies;\n\n    // Caller calls token.safeApprove(contract_addr, sum(values)),\n    // then it calls this function. Anyone can call this, if can they fund it!\n    function allocate(\n        address[] calldata _tos,\n        uint256[] calldata _values,\n        address tokenAddress\n    ) external returns (bool) {\n        require(_tos.length == _values.length, \"Lengths must match\");\n\n        uint256 total_value = 0.0;\n        for (uint256 i = 0; i < _values.length; i += 1) {\n            require(_tos[i] != address(0), \"Address invalid\");\n            require(_values[i] > 0, \"Value invalid\");\n            balances[tokenAddress][_tos[i]] += _values[i];\n            total_value += _values[i];\n        }\n\n        uint256 _before = IERC20(tokenAddress).balanceOf(address(this));\n        IERC20(tokenAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            total_value\n        );\n        uint256 _after = IERC20(tokenAddress).balanceOf(address(this));\n        require(_after - _before == total_value, \"Not enough tokens\");\n\n        allocated[tokenAddress] = allocated[tokenAddress] + total_value;\n\n        emit Allocated(_tos, _values, tokenAddress);\n        return true;\n    }\n\n    function claimable(address _to, address tokenAddress)\n        public\n        view\n        returns (uint256)\n    {\n        return balances[tokenAddress][_to];\n    }\n\n    function _claim(\n        address _to,\n        address tokenAddress,\n        address _receiver\n    ) internal returns (uint256) {\n        uint256 amt = balances[tokenAddress][_to];\n        if (amt == 0) {\n            return 0;\n        }\n        balances[tokenAddress][_to] = 0;\n        IERC20(tokenAddress).safeTransfer(_receiver, amt);\n        allocated[tokenAddress] = allocated[tokenAddress] - amt;\n        emit Claimed(_to, amt, tokenAddress);\n        return amt;\n    }\n\n    // Others claim on behalf of recipient\n    function claimFor(address _to, address tokenAddress)\n        public\n        nonReentrant\n        returns (uint256)\n    {\n        return _claim(_to, tokenAddress, _to);\n    }\n\n    // Strategies can claim on behalf of recipient\n    function claimForStrat(address _to, address tokenAddress)\n        public\n        nonReentrant\n        returns (uint256)\n    {\n        require(tx.origin == _to, \"Caller doesn't match\");\n        require(isStrategy(msg.sender), \"Caller must be a strategy\");\n\n        return _claim(_to, tokenAddress, msg.sender);\n    }\n\n    /*\n     * @dev Withdraw any ERC20 token from the contract, cannot withdraw the allocated amount.\n     * @param _amount The amount of tokens to withdraw.\n     * @param _token The token address to withdraw.\n     */\n    function withdrawERCToken(uint256 amount, address _token)\n        external\n        onlyOwner\n    {\n        require(\n            IERC20(_token).balanceOf(address(this)) - amount >=\n                allocated[_token],\n            \"Cannot withdraw allocated token\"\n        );\n        IERC20(_token).transfer(msg.sender, amount);\n    }\n\n    /**\n     * @dev isStrategy\n     *      Returns true if strategy exists in the list\n     *  @param _strategy address Strategy address to be checked\n     */\n    function isStrategy(address _strategy) public view returns (bool) {\n        for (uint256 i = 0; i < live_strategies.length; i++) {\n            if (live_strategies[i] == _strategy) return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev addStrategy\n     *      Adds a new strategy\n     *  @param _strategy address Strategy address to be added\n     */\n    function addStrategy(address _strategy) external onlyOwner {\n        if (!isStrategy(_strategy)) {\n            live_strategies.push(_strategy);\n            emit StrategyAdded(_strategy);\n        }\n    }\n\n    /**\n     * @dev retireStrategy\n     *      Removes an existng strategy\n     *  @param _strategy address Strategy address to be removed\n     */\n    function retireStrategy(address _strategy) external onlyOwner {\n        require(_strategy != address(0), \"Invalid strategy address\");\n        uint256 i;\n        for (i = 0; i < live_strategies.length; i++) {\n            if (live_strategies[i] == _strategy) break;\n        }\n        if (i < live_strategies.length) {\n            live_strategies[i] = live_strategies[live_strategies.length - 1];\n            live_strategies.pop();\n            emit StrategyRetired(_strategy);\n        }\n    }\n\n    // Don't allow eth transfers\n    fallback() external {\n        revert(\"Invalid ether transfer\");\n    }\n}\n",
  "sourceMap": "470:4809:12:-:0;;;;;;;;;;;;-1:-1:-1;867:23:1;665:10:9;867:9:1;:23::i;:::-;1637:1:2;1742:22;;470:4809:12;;2041:169:1;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:1;;;-1:-1:-1;;;;;;2131:17:1;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;470:4809:12:-;;;;;;;",
  "sourcePath": "contracts/DFRewards.sol",
  "type": "contract"
}