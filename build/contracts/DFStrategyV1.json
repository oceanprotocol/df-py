{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dfrewards",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "claimMultiple",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "claimables",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "result",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "13": "contracts/DFStrategyV1.sol",
    "15": "contracts/interfaces/IDFRewards.sol",
    "2": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
    "4": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "7": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "8": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/DFStrategyV1.sol",
    "exportedSymbols": {
      "Address": [
        29881
      ],
      "DFStrategyV1": [
        605
      ],
      "IDFRewards": [
        953
      ],
      "IERC20": [
        27843
      ],
      "IPool": [
        998
      ],
      "IVeOCEAN": [
        1015
      ],
      "ReentrancyGuard": [
        27765
      ],
      "SafeERC20": [
        28067
      ]
    },
    "id": 606,
    "license": "(Apache-2.0 AND CC-BY-4.0)",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 477,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:23:13"
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "id": 478,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 27844,
        "src": "80:84:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 479,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 28068,
        "src": "165:93:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
        "id": 480,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 27766,
        "src": "259:90:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IDFRewards.sol",
        "file": "./interfaces/IDFRewards.sol",
        "id": 481,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 954,
        "src": "350:37:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IPool.sol",
        "file": "./interfaces/IPool.sol",
        "id": 482,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 999,
        "src": "388:32:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IVeOCEAN.sol",
        "file": "./interfaces/IVeOCEAN.sol",
        "id": 483,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 1016,
        "src": "421:35:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 484,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27765,
              "src": "485:15:13"
            },
            "id": 485,
            "nodeType": "InheritanceSpecifier",
            "src": "485:15:13"
          }
        ],
        "canonicalName": "DFStrategyV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 605,
        "linearizedBaseContracts": [
          605,
          27765
        ],
        "name": "DFStrategyV1",
        "nameLocation": "469:12:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 489,
            "libraryName": {
              "id": 486,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28067,
              "src": "513:9:13"
            },
            "nodeType": "UsingForDirective",
            "src": "507:27:13",
            "typeName": {
              "id": 488,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 487,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27843,
                "src": "527:6:13"
              },
              "referencedDeclaration": 27843,
              "src": "527:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$27843",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 492,
            "mutability": "mutable",
            "name": "dfrewards",
            "nameLocation": "550:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 605,
            "src": "539:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDFRewards_$953",
              "typeString": "contract IDFRewards"
            },
            "typeName": {
              "id": 491,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 490,
                "name": "IDFRewards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 953,
                "src": "539:10:13"
              },
              "referencedDeclaration": 953,
              "src": "539:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDFRewards_$953",
                "typeString": "contract IDFRewards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "af640d0f",
            "id": 495,
            "mutability": "mutable",
            "name": "id",
            "nameLocation": "578:2:13",
            "nodeType": "VariableDeclaration",
            "scope": 605,
            "src": "565:19:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 493,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "565:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 494,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "583:1:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "623:51:13",
              "statements": [
                {
                  "expression": {
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 500,
                      "name": "dfrewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "633:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDFRewards_$953",
                        "typeString": "contract IDFRewards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 502,
                          "name": "_dfrewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "656:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 501,
                        "name": "IDFRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "645:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDFRewards_$953_$",
                          "typeString": "type(contract IDFRewards)"
                        }
                      },
                      "id": 503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "645:22:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDFRewards_$953",
                        "typeString": "contract IDFRewards"
                      }
                    },
                    "src": "633:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDFRewards_$953",
                      "typeString": "contract IDFRewards"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "633:34:13"
                }
              ]
            },
            "id": 507,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "_dfrewards",
                  "nameLocation": "611:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "603:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:20:13"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:0:13"
            },
            "scope": 605,
            "src": "591:83:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "770:135:13",
              "statements": [
                {
                  "body": {
                    "id": 535,
                    "nodeType": "Block",
                    "src": "832:67:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 529,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 509,
                              "src": "865:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 530,
                                "name": "tokenAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 512,
                                "src": "870:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 532,
                              "indexExpression": {
                                "id": 531,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 516,
                                "src": "885:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "870:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 526,
                              "name": "dfrewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 492,
                              "src": "846:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDFRewards_$953",
                                "typeString": "contract IDFRewards"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimFor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 936,
                            "src": "846:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) external returns (uint256)"
                            }
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "846:42:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 534,
                        "nodeType": "ExpressionStatement",
                        "src": "846:42:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 519,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "800:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 520,
                        "name": "tokenAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "804:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "804:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "800:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 536,
                  "initializationExpression": {
                    "assignments": [
                      516
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "793:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 536,
                        "src": "785:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "785:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 518,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "797:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "785:13:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "827:3:13",
                      "subExpression": {
                        "id": 523,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "827:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 525,
                    "nodeType": "ExpressionStatement",
                    "src": "827:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "780:119:13"
                }
              ]
            },
            "functionSelector": "081df9c3",
            "id": 538,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimMultiple",
            "nameLocation": "689:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "711:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "703:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "tokenAddresses",
                  "nameLocation": "735:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "716:33:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 510,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "716:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 511,
                    "nodeType": "ArrayTypeName",
                    "src": "716:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "702:48:13"
            },
            "returnParameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "770:0:13"
            },
            "scope": 605,
            "src": "680:225:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 554,
              "nodeType": "Block",
              "src": "1024:79:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 547,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1048:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1048:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 549,
                        "name": "tokenAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "1060:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "id": 546,
                      "name": "claimMultiple",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "1034:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address[] calldata)"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:41:13"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1092:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 545,
                  "id": 553,
                  "nodeType": "Return",
                  "src": "1085:11:13"
                }
              ]
            },
            "functionSelector": "318d9e5d",
            "id": 555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "959:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "tokenAddresses",
                  "nameLocation": "984:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 555,
                  "src": "965:33:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 539,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "965:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 540,
                    "nodeType": "ArrayTypeName",
                    "src": "965:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "964:35:13"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 555,
                  "src": "1018:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1017:6:13"
            },
            "scope": 605,
            "src": "950:153:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "1253:229:13",
              "statements": [
                {
                  "expression": {
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 566,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "1263:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 570,
                            "name": "tokenAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "1286:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1286:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1272:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 567,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1276:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 568,
                          "nodeType": "ArrayTypeName",
                          "src": "1276:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1272:36:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "1263:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:45:13"
                },
                {
                  "body": {
                    "id": 599,
                    "nodeType": "Block",
                    "src": "1373:80:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 587,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 564,
                              "src": "1387:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 589,
                            "indexExpression": {
                              "id": 588,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "1394:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1387:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 592,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 557,
                                "src": "1419:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 593,
                                  "name": "tokenAddresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 560,
                                  "src": "1424:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 595,
                                "indexExpression": {
                                  "id": 594,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 576,
                                  "src": "1439:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1424:17:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 590,
                                "name": "dfrewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 492,
                                "src": "1399:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDFRewards_$953",
                                  "typeString": "contract IDFRewards"
                                }
                              },
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "claimable",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 927,
                              "src": "1399:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view external returns (uint256)"
                              }
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1399:43:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1387:55:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 598,
                        "nodeType": "ExpressionStatement",
                        "src": "1387:55:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 579,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "1338:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 580,
                        "name": "tokenAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "1342:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1342:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1338:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 600,
                  "initializationExpression": {
                    "assignments": [
                      576
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 576,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1331:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "1323:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 575,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1323:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 578,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1335:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1323:13:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 583,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "1365:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1370:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1365:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 586,
                    "nodeType": "ExpressionStatement",
                    "src": "1365:6:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "1318:135:13"
                },
                {
                  "expression": {
                    "id": 601,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 564,
                    "src": "1469:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 565,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "1462:13:13"
                }
              ]
            },
            "functionSelector": "0758ca75",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimables",
            "nameLocation": "1118:10:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 557,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1137:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1129:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "tokenAddresses",
                  "nameLocation": "1161:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1142:33:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 558,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1142:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 559,
                    "nodeType": "ArrayTypeName",
                    "src": "1142:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1128:48:13"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1241:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1224:23:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 562,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1224:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 563,
                    "nodeType": "ArrayTypeName",
                    "src": "1224:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1223:25:13"
            },
            "scope": 605,
            "src": "1109:373:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 606,
        "src": "460:1025:13",
        "usedErrors": []
      }
    ],
    "src": "55:1431:13"
  },
  "bytecode": "60806040526001805460ff60a01b1916600160a01b17905534801561002357600080fd5b506040516105bf3803806105bf8339810160408190526100429161006c565b6001600081905580546001600160a01b0319166001600160a01b039290921691909117905561009c565b60006020828403121561007e57600080fd5b81516001600160a01b038116811461009557600080fd5b9392505050565b610514806100ab6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630758ca7514610051578063081df9c31461007a578063318d9e5d1461008f578063af640d0f146100b2575b600080fd5b61006461005f366004610355565b6100d8565b60405161007191906103a8565b60405180910390f35b61008d610088366004610355565b610209565b005b6100a261009d3660046103ec565b6102d7565b6040519015158152602001610071565b6001546100c690600160a01b900460ff1681565b60405160ff9091168152602001610071565b60608167ffffffffffffffff8111156100f3576100f361042e565b60405190808252806020026020018201604052801561011c578160200160208202803683370190505b50905060005b82811015610201576001546001600160a01b031663d4570c1c8686868581811061014e5761014e610444565b9050602002016020810190610163919061045a565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156101ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d2919061047c565b8282815181106101e4576101e4610444565b60209081029190910101526101fa6001826104ab565b9050610122565b509392505050565b60005b818110156102d1576001546001600160a01b031663b4ba9e118585858581811061023857610238610444565b905060200201602081019061024d919061045a565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561029a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102be919061047c565b50806102c9816104c3565b91505061020c565b50505050565b60006102e4338484610209565b50600192915050565b80356001600160a01b038116811461030457600080fd5b919050565b60008083601f84011261031b57600080fd5b50813567ffffffffffffffff81111561033357600080fd5b6020830191508360208260051b850101111561034e57600080fd5b9250929050565b60008060006040848603121561036a57600080fd5b610373846102ed565b9250602084013567ffffffffffffffff81111561038f57600080fd5b61039b86828701610309565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b818110156103e0578351835292840192918401916001016103c4565b50909695505050505050565b600080602083850312156103ff57600080fd5b823567ffffffffffffffff81111561041657600080fd5b61042285828601610309565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561046c57600080fd5b610475826102ed565b9392505050565b60006020828403121561048e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156104be576104be610495565b500190565b60006000198214156104d7576104d7610495565b506001019056fea2646970667358221220ddc550b188ad513f6c5d7178c8ce7494e2dd2090a20809d4774b3fb56ad5d38c64736f6c634300080c0033",
  "bytecodeSha1": "1e358ad632590053cb45e715f17dd92a998f342d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "DFStrategyV1",
  "coverageMap": {
    "branches": {
      "13": {},
      "15": {},
      "2": {},
      "4": {},
      "7": {},
      "8": {}
    },
    "statements": {
      "13": {
        "DFStrategyV1.claim": {
          "5": [
            1034,
            1075
          ],
          "6": [
            1085,
            1096
          ]
        },
        "DFStrategyV1.claimMultiple": {
          "3": [
            846,
            888
          ],
          "4": [
            827,
            830
          ]
        },
        "DFStrategyV1.claimables": {
          "0": [
            1263,
            1308
          ],
          "1": [
            1387,
            1442
          ],
          "2": [
            1365,
            1371
          ]
        }
      },
      "15": {},
      "2": {},
      "4": {},
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Address",
    "IDFRewards",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630758ca7514610051578063081df9c31461007a578063318d9e5d1461008f578063af640d0f146100b2575b600080fd5b61006461005f366004610355565b6100d8565b60405161007191906103a8565b60405180910390f35b61008d610088366004610355565b610209565b005b6100a261009d3660046103ec565b6102d7565b6040519015158152602001610071565b6001546100c690600160a01b900460ff1681565b60405160ff9091168152602001610071565b60608167ffffffffffffffff8111156100f3576100f361042e565b60405190808252806020026020018201604052801561011c578160200160208202803683370190505b50905060005b82811015610201576001546001600160a01b031663d4570c1c8686868581811061014e5761014e610444565b9050602002016020810190610163919061045a565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156101ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d2919061047c565b8282815181106101e4576101e4610444565b60209081029190910101526101fa6001826104ab565b9050610122565b509392505050565b60005b818110156102d1576001546001600160a01b031663b4ba9e118585858581811061023857610238610444565b905060200201602081019061024d919061045a565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561029a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102be919061047c565b50806102c9816104c3565b91505061020c565b50505050565b60006102e4338484610209565b50600192915050565b80356001600160a01b038116811461030457600080fd5b919050565b60008083601f84011261031b57600080fd5b50813567ffffffffffffffff81111561033357600080fd5b6020830191508360208260051b850101111561034e57600080fd5b9250929050565b60008060006040848603121561036a57600080fd5b610373846102ed565b9250602084013567ffffffffffffffff81111561038f57600080fd5b61039b86828701610309565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b818110156103e0578351835292840192918401916001016103c4565b50909695505050505050565b600080602083850312156103ff57600080fd5b823567ffffffffffffffff81111561041657600080fd5b61042285828601610309565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561046c57600080fd5b610475826102ed565b9392505050565b60006020828403121561048e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156104be576104be610495565b500190565b60006000198214156104d7576104d7610495565b506001019056fea2646970667358221220ddc550b188ad513f6c5d7178c8ce7494e2dd2090a20809d4774b3fb56ad5d38c64736f6c634300080c0033",
  "deployedSourceMap": "460:1025:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1109:373;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;680:225;;;;;;:::i;:::-;;:::i;:::-;;950:153;;;;;;:::i;:::-;;:::i;:::-;;;2324:14:75;;2317:22;2299:41;;2287:2;2272:18;950:153:13;2159:187:75;565:19:13;;;;;-1:-1:-1;;;565:19:13;;;;;;;;;2523:4:75;2511:17;;;2493:36;;2481:2;2466:18;565:19:13;2351:184:75;1109:373:13;1224:23;1286:14;1272:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1272:36:13;;1263:45;;1323:9;1318:135;1338:25;;;1318:135;;;1399:9;;-1:-1:-1;;;;;1399:9:13;:19;1419:3;1424:14;;1439:1;1424:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1399:43;;-1:-1:-1;;;;;;1399:43:13;;;;;;;-1:-1:-1;;;;;3225:15:75;;;1399:43:13;;;3207:34:75;3277:15;;3257:18;;;3250:43;3142:18;;1399:43:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:6;1394:1;1387:9;;;;;;;;:::i;:::-;;;;;;;;;;:55;1365:6;1370:1;1365:6;;:::i;:::-;;;1318:135;;;;1109:373;;;;;:::o;680:225::-;785:9;780:119;800:25;;;780:119;;;846:9;;-1:-1:-1;;;;;846:9:13;:18;865:3;870:14;;885:1;870:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;846:42;;-1:-1:-1;;;;;;846:42:13;;;;;;;-1:-1:-1;;;;;3225:15:75;;;846:42:13;;;3207:34:75;3277:15;;3257:18;;;3250:43;3142:18;;846:42:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;827:3:13;;;;:::i;:::-;;;;780:119;;;;680:225;;;:::o;950:153::-;1018:4;1034:41;1048:10;1060:14;;1034:13;:41::i;:::-;-1:-1:-1;1092:4:13;950:153;;;;:::o;14:173:75:-;82:20;;-1:-1:-1;;;;;131:31:75;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:367::-;255:8;265:6;319:3;312:4;304:6;300:17;296:27;286:55;;337:1;334;327:12;286:55;-1:-1:-1;360:20:75;;403:18;392:30;;389:50;;;435:1;432;425:12;389:50;472:4;464:6;460:17;448:29;;532:3;525:4;515:6;512:1;508:14;500:6;496:27;492:38;489:47;486:67;;;549:1;546;539:12;486:67;192:367;;;;;:::o;564:511::-;659:6;667;675;728:2;716:9;707:7;703:23;699:32;696:52;;;744:1;741;734:12;696:52;767:29;786:9;767:29;:::i;:::-;757:39;;847:2;836:9;832:18;819:32;874:18;866:6;863:30;860:50;;;906:1;903;896:12;860:50;945:70;1007:7;998:6;987:9;983:22;945:70;:::i;:::-;564:511;;1034:8;;-1:-1:-1;919:96:75;;-1:-1:-1;;;;564:511:75:o;1080:632::-;1251:2;1303:21;;;1373:13;;1276:18;;;1395:22;;;1222:4;;1251:2;1474:15;;;;1448:2;1433:18;;;1222:4;1517:169;1531:6;1528:1;1525:13;1517:169;;;1592:13;;1580:26;;1661:15;;;;1626:12;;;;1553:1;1546:9;1517:169;;;-1:-1:-1;1703:3:75;;1080:632;-1:-1:-1;;;;;;1080:632:75:o;1717:437::-;1803:6;1811;1864:2;1852:9;1843:7;1839:23;1835:32;1832:52;;;1880:1;1877;1870:12;1832:52;1920:9;1907:23;1953:18;1945:6;1942:30;1939:50;;;1985:1;1982;1975:12;1939:50;2024:70;2086:7;2077:6;2066:9;2062:22;2024:70;:::i;:::-;2113:8;;1998:96;;-1:-1:-1;1717:437:75;-1:-1:-1;;;;1717:437:75:o;2540:127::-;2601:10;2596:3;2592:20;2589:1;2582:31;2632:4;2629:1;2622:15;2656:4;2653:1;2646:15;2672:127;2733:10;2728:3;2724:20;2721:1;2714:31;2764:4;2761:1;2754:15;2788:4;2785:1;2778:15;2804:186;2863:6;2916:2;2904:9;2895:7;2891:23;2887:32;2884:52;;;2932:1;2929;2922:12;2884:52;2955:29;2974:9;2955:29;:::i;:::-;2945:39;2804:186;-1:-1:-1;;;2804:186:75:o;3304:184::-;3374:6;3427:2;3415:9;3406:7;3402:23;3398:32;3395:52;;;3443:1;3440;3433:12;3395:52;-1:-1:-1;3466:16:75;;3304:184;-1:-1:-1;3304:184:75:o;3493:127::-;3554:10;3549:3;3545:20;3542:1;3535:31;3585:4;3582:1;3575:15;3609:4;3606:1;3599:15;3625:128;3665:3;3696:1;3692:6;3689:1;3686:13;3683:39;;;3702:18;;:::i;:::-;-1:-1:-1;3738:9:75;;3625:128::o;3758:135::-;3797:3;-1:-1:-1;;3818:17:75;;3815:43;;;3838:18;;:::i;:::-;-1:-1:-1;3885:1:75;3874:13;;3758:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    460,
    1485
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x758CA75 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x81DF9C3 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x318D9E5D EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xAF640D0F EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x355 JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0x355 JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA2 PUSH2 0x9D CALLDATASIZE PUSH1 0x4 PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x71 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC6 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x71 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF3 JUMPI PUSH2 0xF3 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x201 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD4570C1C DUP7 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x14E JUMPI PUSH2 0x14E PUSH2 0x444 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E4 JUMPI PUSH2 0x1E4 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x1FA PUSH1 0x1 DUP3 PUSH2 0x4AB JUMP JUMPDEST SWAP1 POP PUSH2 0x122 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB4BA9E11 DUP6 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x238 JUMPI PUSH2 0x238 PUSH2 0x444 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST POP DUP1 PUSH2 0x2C9 DUP2 PUSH2 0x4C3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4 CALLER DUP5 DUP5 PUSH2 0x209 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x373 DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39B DUP7 DUP3 DUP8 ADD PUSH2 0x309 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E0 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3C4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x422 DUP6 DUP3 DUP7 ADD PUSH2 0x309 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x475 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BE PUSH2 0x495 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4D7 JUMPI PUSH2 0x4D7 PUSH2 0x495 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xC5 POP 0xB1 DUP9 0xAD MLOAD EXTCODEHASH PUSH13 0x5D7178C8CE7494E2DD2090A208 MULMOD 0xD4 PUSH24 0x4B3FB56AD5D38C64736F6C634300080C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        460,
        1485
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "6": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "DUP1",
      "path": "13"
    },
    "7": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "DUP1",
      "path": "13"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "REVERT",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "POP",
      "path": "13"
    },
    "18": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "LT",
      "path": "13"
    },
    "22": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "29": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "SHR",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x758CA75"
    },
    "38": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "EQ",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "43": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "DUP1",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x81DF9C3"
    },
    "49": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "EQ",
      "path": "13"
    },
    "50": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7A"
    },
    "53": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "54": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "DUP1",
      "path": "13"
    },
    "55": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x318D9E5D"
    },
    "60": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "EQ",
      "path": "13"
    },
    "61": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8F"
    },
    "64": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "65": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "DUP1",
      "path": "13"
    },
    "66": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xAF640D0F"
    },
    "71": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "EQ",
      "path": "13"
    },
    "72": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB2"
    },
    "75": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "76": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "77": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "DUP1",
      "path": "13"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        460,
        1485
      ],
      "op": "REVERT",
      "path": "13"
    },
    "81": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "82": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x64"
    },
    "85": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5F"
    },
    "88": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "89": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "91": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x355"
    },
    "94": {
      "fn": "DFStrategyV1.claimables",
      "jump": "i",
      "offset": [
        1109,
        1482
      ],
      "op": "JUMP",
      "path": "13"
    },
    "95": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "96": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD8"
    },
    "99": {
      "fn": "DFStrategyV1.claimables",
      "jump": "i",
      "offset": [
        1109,
        1482
      ],
      "op": "JUMP",
      "path": "13"
    },
    "100": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "101": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "103": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "104": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x71"
    },
    "107": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "108": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "109": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3A8"
    },
    "112": {
      "fn": "DFStrategyV1.claimables",
      "jump": "i",
      "offset": [
        1109,
        1482
      ],
      "op": "JUMP",
      "path": "13"
    },
    "113": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "114": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "116": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "117": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "DUP1",
      "path": "13"
    },
    "118": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "119": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "SUB",
      "path": "13"
    },
    "120": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "121": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "RETURN",
      "path": "13"
    },
    "122": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "123": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8D"
    },
    "126": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x88"
    },
    "129": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "130": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "132": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x355"
    },
    "135": {
      "fn": "DFStrategyV1.claimMultiple",
      "jump": "i",
      "offset": [
        680,
        905
      ],
      "op": "JUMP",
      "path": "13"
    },
    "136": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "137": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x209"
    },
    "140": {
      "fn": "DFStrategyV1.claimMultiple",
      "jump": "i",
      "offset": [
        680,
        905
      ],
      "op": "JUMP",
      "path": "13"
    },
    "141": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "142": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "STOP",
      "path": "13"
    },
    "143": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "144": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA2"
    },
    "147": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9D"
    },
    "150": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "151": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "153": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3EC"
    },
    "156": {
      "fn": "DFStrategyV1.claim",
      "jump": "i",
      "offset": [
        950,
        1103
      ],
      "op": "JUMP",
      "path": "13"
    },
    "157": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "158": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D7"
    },
    "161": {
      "fn": "DFStrategyV1.claim",
      "jump": "i",
      "offset": [
        950,
        1103
      ],
      "op": "JUMP",
      "path": "13"
    },
    "162": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "163": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "165": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "166": {
      "op": "SWAP1"
    },
    "167": {
      "op": "ISZERO"
    },
    "168": {
      "op": "ISZERO"
    },
    "169": {
      "op": "DUP2"
    },
    "170": {
      "op": "MSTORE"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "173": {
      "op": "ADD"
    },
    "174": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x71"
    },
    "177": {
      "op": "JUMP"
    },
    "178": {
      "offset": [
        565,
        584
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "179": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "181": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "182": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC6"
    },
    "185": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "190": {
      "op": "SHL"
    },
    "191": {
      "offset": [
        565,
        584
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "192": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "DIV",
      "path": "13"
    },
    "193": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "195": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "AND",
      "path": "13"
    },
    "196": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "DUP2",
      "path": "13"
    },
    "197": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "JUMP",
      "path": "13"
    },
    "198": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "199": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "201": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        565,
        584
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "202": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "204": {
      "op": "SWAP1"
    },
    "205": {
      "op": "SWAP2"
    },
    "206": {
      "op": "AND"
    },
    "207": {
      "op": "DUP2"
    },
    "208": {
      "op": "MSTORE"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "211": {
      "op": "ADD"
    },
    "212": {
      "offset": [
        565,
        584
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x71"
    },
    "215": {
      "op": "JUMP"
    },
    "216": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "217": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1224,
        1247
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "219": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1286,
        1300
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 0
    },
    "220": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH8",
      "path": "13",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "229": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "DUP2",
      "path": "13"
    },
    "230": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "GT",
      "path": "13"
    },
    "231": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "232": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF3"
    },
    "235": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "236": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF3"
    },
    "239": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x42E"
    },
    "242": {
      "fn": "DFStrategyV1.claimables",
      "jump": "i",
      "offset": [
        1272,
        1308
      ],
      "op": "JUMP",
      "path": "13"
    },
    "243": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "244": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "246": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "247": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "248": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "DUP1",
      "path": "13"
    },
    "249": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "DUP3",
      "path": "13"
    },
    "250": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "251": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "DUP1",
      "path": "13"
    },
    "252": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "254": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "MUL",
      "path": "13"
    },
    "255": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "257": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "ADD",
      "path": "13"
    },
    "258": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "DUP3",
      "path": "13"
    },
    "259": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "ADD",
      "path": "13"
    },
    "260": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "262": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "263": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "DUP1",
      "path": "13"
    },
    "264": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "265": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11C"
    },
    "268": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "269": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "DUP2",
      "path": "13"
    },
    "270": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "272": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "ADD",
      "path": "13"
    },
    "273": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "275": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "DUP3",
      "path": "13"
    },
    "276": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "MUL",
      "path": "13"
    },
    "277": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "DUP1",
      "path": "13"
    },
    "278": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "279": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "DUP4",
      "path": "13"
    },
    "280": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "CALLDATACOPY",
      "path": "13"
    },
    "281": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "ADD",
      "path": "13"
    },
    "282": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "283": {
      "op": "POP"
    },
    "284": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "285": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1272,
        1308
      ],
      "op": "POP",
      "path": "13"
    },
    "286": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1263,
        1308
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "287": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1263,
        1308
      ],
      "op": "POP",
      "path": "13"
    },
    "288": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1323,
        1332
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "290": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1318,
        1453
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "291": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1338,
        1363
      ],
      "op": "DUP3",
      "path": "13"
    },
    "292": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1338,
        1363
      ],
      "op": "DUP2",
      "path": "13"
    },
    "293": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1338,
        1363
      ],
      "op": "LT",
      "path": "13"
    },
    "294": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1318,
        1453
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "295": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1318,
        1453
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x201"
    },
    "298": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1318,
        1453
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "299": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1408
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 1,
      "value": "0x1"
    },
    "301": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1408
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "308": {
      "op": "SHL"
    },
    "309": {
      "op": "SUB"
    },
    "310": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1408
      ],
      "op": "AND",
      "path": "13"
    },
    "311": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1418
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD4570C1C"
    },
    "316": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1419,
        1422
      ],
      "op": "DUP7",
      "path": "13"
    },
    "317": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1438
      ],
      "op": "DUP7",
      "path": "13"
    },
    "318": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1438
      ],
      "op": "DUP7",
      "path": "13"
    },
    "319": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1439,
        1440
      ],
      "op": "DUP6",
      "path": "13"
    },
    "320": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "DUP2",
      "path": "13"
    },
    "321": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "DUP2",
      "path": "13"
    },
    "322": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "LT",
      "path": "13"
    },
    "323": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14E"
    },
    "326": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "327": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14E"
    },
    "330": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x444"
    },
    "333": {
      "fn": "DFStrategyV1.claimables",
      "jump": "i",
      "offset": [
        1424,
        1441
      ],
      "op": "JUMP",
      "path": "13"
    },
    "334": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "335": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "336": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "POP",
      "path": "13"
    },
    "337": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "339": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "MUL",
      "path": "13"
    },
    "340": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "ADD",
      "path": "13"
    },
    "341": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "343": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "DUP2",
      "path": "13"
    },
    "344": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "ADD",
      "path": "13"
    },
    "345": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "346": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x163"
    },
    "349": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "350": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "351": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x45A"
    },
    "354": {
      "fn": "DFStrategyV1.claimables",
      "jump": "i",
      "offset": [
        1424,
        1441
      ],
      "op": "JUMP",
      "path": "13"
    },
    "355": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1424,
        1441
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "356": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "358": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "363": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "365": {
      "op": "SHL"
    },
    "366": {
      "op": "SUB"
    },
    "367": {
      "op": "NOT"
    },
    "368": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "370": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP6",
      "path": "13"
    },
    "371": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "372": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "SHL",
      "path": "13"
    },
    "373": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "AND",
      "path": "13"
    },
    "374": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP2",
      "path": "13"
    },
    "375": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "op": "SUB"
    },
    "384": {
      "op": "SWAP3"
    },
    "385": {
      "op": "DUP4"
    },
    "386": {
      "op": "AND"
    },
    "387": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "389": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP3",
      "path": "13"
    },
    "390": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "ADD",
      "path": "13"
    },
    "391": {
      "op": "MSTORE"
    },
    "392": {
      "op": "SWAP2"
    },
    "393": {
      "op": "AND"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "396": {
      "op": "DUP3"
    },
    "397": {
      "op": "ADD"
    },
    "398": {
      "op": "MSTORE"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "401": {
      "op": "ADD"
    },
    "402": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "404": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "406": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "407": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP1",
      "path": "13"
    },
    "408": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP4",
      "path": "13"
    },
    "409": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "SUB",
      "path": "13"
    },
    "410": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP2",
      "path": "13"
    },
    "411": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP7",
      "path": "13"
    },
    "412": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "GAS",
      "path": "13"
    },
    "413": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "414": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "415": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP1",
      "path": "13"
    },
    "416": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "417": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AE"
    },
    "420": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "421": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "422": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "424": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP1",
      "path": "13"
    },
    "425": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "426": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "427": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "429": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "REVERT",
      "path": "13"
    },
    "430": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "431": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "POP",
      "path": "13"
    },
    "432": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "POP",
      "path": "13"
    },
    "433": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "POP",
      "path": "13"
    },
    "434": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "POP",
      "path": "13"
    },
    "435": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "437": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "438": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "439": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "441": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "NOT",
      "path": "13"
    },
    "442": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "444": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP3",
      "path": "13"
    },
    "445": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "ADD",
      "path": "13"
    },
    "446": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "AND",
      "path": "13"
    },
    "447": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP3",
      "path": "13"
    },
    "448": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "ADD",
      "path": "13"
    },
    "449": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP1",
      "path": "13"
    },
    "450": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "452": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "453": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "POP",
      "path": "13"
    },
    "454": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "DUP2",
      "path": "13"
    },
    "455": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "ADD",
      "path": "13"
    },
    "456": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "457": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1D2"
    },
    "460": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "461": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "462": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x47C"
    },
    "465": {
      "fn": "DFStrategyV1.claimables",
      "jump": "i",
      "offset": [
        1399,
        1442
      ],
      "op": "JUMP",
      "path": "13"
    },
    "466": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1399,
        1442
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "467": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1393
      ],
      "op": "DUP3",
      "path": "13"
    },
    "468": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1394,
        1395
      ],
      "op": "DUP3",
      "path": "13"
    },
    "469": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "DUP2",
      "path": "13"
    },
    "470": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "471": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "DUP2",
      "path": "13"
    },
    "472": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "LT",
      "path": "13"
    },
    "473": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E4"
    },
    "476": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "477": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E4"
    },
    "480": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x444"
    },
    "483": {
      "fn": "DFStrategyV1.claimables",
      "jump": "i",
      "offset": [
        1387,
        1396
      ],
      "op": "JUMP",
      "path": "13"
    },
    "484": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "485": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "487": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "488": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "DUP2",
      "path": "13"
    },
    "489": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "MUL",
      "path": "13"
    },
    "490": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "491": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "492": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "493": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "ADD",
      "path": "13"
    },
    "494": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1396
      ],
      "op": "ADD",
      "path": "13"
    },
    "495": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1387,
        1442
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "496": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1365,
        1371
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 2,
      "value": "0x1FA"
    },
    "499": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1370,
        1371
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "501": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1365,
        1371
      ],
      "op": "DUP3",
      "path": "13"
    },
    "502": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1365,
        1371
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4AB"
    },
    "505": {
      "fn": "DFStrategyV1.claimables",
      "jump": "i",
      "offset": [
        1365,
        1371
      ],
      "op": "JUMP",
      "path": "13"
    },
    "506": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1365,
        1371
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "507": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1365,
        1371
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "508": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1365,
        1371
      ],
      "op": "POP",
      "path": "13"
    },
    "509": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1318,
        1453
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x122"
    },
    "512": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1318,
        1453
      ],
      "op": "JUMP",
      "path": "13"
    },
    "513": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1318,
        1453
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "514": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1318,
        1453
      ],
      "op": "POP",
      "path": "13"
    },
    "515": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "516": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "517": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "POP",
      "path": "13"
    },
    "518": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "POP",
      "path": "13"
    },
    "519": {
      "fn": "DFStrategyV1.claimables",
      "offset": [
        1109,
        1482
      ],
      "op": "POP",
      "path": "13"
    },
    "520": {
      "fn": "DFStrategyV1.claimables",
      "jump": "o",
      "offset": [
        1109,
        1482
      ],
      "op": "JUMP",
      "path": "13"
    },
    "521": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "522": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        785,
        794
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "524": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        780,
        899
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "525": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        800,
        825
      ],
      "op": "DUP2",
      "path": "13"
    },
    "526": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        800,
        825
      ],
      "op": "DUP2",
      "path": "13"
    },
    "527": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        800,
        825
      ],
      "op": "LT",
      "path": "13"
    },
    "528": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        780,
        899
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "529": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        780,
        899
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D1"
    },
    "532": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        780,
        899
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "533": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        855
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 3,
      "value": "0x1"
    },
    "535": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        855
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "op": "SUB"
    },
    "544": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        855
      ],
      "op": "AND",
      "path": "13"
    },
    "545": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        864
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB4BA9E11"
    },
    "550": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        865,
        868
      ],
      "op": "DUP6",
      "path": "13"
    },
    "551": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        884
      ],
      "op": "DUP6",
      "path": "13"
    },
    "552": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        884
      ],
      "op": "DUP6",
      "path": "13"
    },
    "553": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        885,
        886
      ],
      "op": "DUP6",
      "path": "13"
    },
    "554": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "DUP2",
      "path": "13"
    },
    "555": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "DUP2",
      "path": "13"
    },
    "556": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "LT",
      "path": "13"
    },
    "557": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x238"
    },
    "560": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "561": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x238"
    },
    "564": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x444"
    },
    "567": {
      "fn": "DFStrategyV1.claimMultiple",
      "jump": "i",
      "offset": [
        870,
        887
      ],
      "op": "JUMP",
      "path": "13"
    },
    "568": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "569": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "570": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "POP",
      "path": "13"
    },
    "571": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "573": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "MUL",
      "path": "13"
    },
    "574": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "ADD",
      "path": "13"
    },
    "575": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "577": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "DUP2",
      "path": "13"
    },
    "578": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "ADD",
      "path": "13"
    },
    "579": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "580": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x24D"
    },
    "583": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "584": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "585": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x45A"
    },
    "588": {
      "fn": "DFStrategyV1.claimMultiple",
      "jump": "i",
      "offset": [
        870,
        887
      ],
      "op": "JUMP",
      "path": "13"
    },
    "589": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        870,
        887
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "590": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "592": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "op": "SUB"
    },
    "601": {
      "op": "NOT"
    },
    "602": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "604": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP6",
      "path": "13"
    },
    "605": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "606": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "SHL",
      "path": "13"
    },
    "607": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "AND",
      "path": "13"
    },
    "608": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP2",
      "path": "13"
    },
    "609": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "616": {
      "op": "SHL"
    },
    "617": {
      "op": "SUB"
    },
    "618": {
      "op": "SWAP3"
    },
    "619": {
      "op": "DUP4"
    },
    "620": {
      "op": "AND"
    },
    "621": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "623": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP3",
      "path": "13"
    },
    "624": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "ADD",
      "path": "13"
    },
    "625": {
      "op": "MSTORE"
    },
    "626": {
      "op": "SWAP2"
    },
    "627": {
      "op": "AND"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "630": {
      "op": "DUP3"
    },
    "631": {
      "op": "ADD"
    },
    "632": {
      "op": "MSTORE"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "635": {
      "op": "ADD"
    },
    "636": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "638": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "640": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "641": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP1",
      "path": "13"
    },
    "642": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP4",
      "path": "13"
    },
    "643": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "SUB",
      "path": "13"
    },
    "644": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP2",
      "path": "13"
    },
    "645": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "647": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP8",
      "path": "13"
    },
    "648": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "GAS",
      "path": "13"
    },
    "649": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "CALL",
      "path": "13"
    },
    "650": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "651": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP1",
      "path": "13"
    },
    "652": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "653": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29A"
    },
    "656": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "657": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "658": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "660": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP1",
      "path": "13"
    },
    "661": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "662": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "663": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "665": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "REVERT",
      "path": "13"
    },
    "666": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "667": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "POP",
      "path": "13"
    },
    "668": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "POP",
      "path": "13"
    },
    "669": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "POP",
      "path": "13"
    },
    "670": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "POP",
      "path": "13"
    },
    "671": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "673": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "674": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "675": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "677": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "NOT",
      "path": "13"
    },
    "678": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "680": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP3",
      "path": "13"
    },
    "681": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "ADD",
      "path": "13"
    },
    "682": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "AND",
      "path": "13"
    },
    "683": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP3",
      "path": "13"
    },
    "684": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "ADD",
      "path": "13"
    },
    "685": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP1",
      "path": "13"
    },
    "686": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "688": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "689": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "POP",
      "path": "13"
    },
    "690": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "DUP2",
      "path": "13"
    },
    "691": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "ADD",
      "path": "13"
    },
    "692": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "693": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BE"
    },
    "696": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "697": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "698": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x47C"
    },
    "701": {
      "fn": "DFStrategyV1.claimMultiple",
      "jump": "i",
      "offset": [
        846,
        888
      ],
      "op": "JUMP",
      "path": "13"
    },
    "702": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        846,
        888
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "703": {
      "op": "POP"
    },
    "704": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        827,
        830
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 4
    },
    "705": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        827,
        830
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2C9"
    },
    "708": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        827,
        830
      ],
      "op": "DUP2",
      "path": "13"
    },
    "709": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        827,
        830
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4C3"
    },
    "712": {
      "fn": "DFStrategyV1.claimMultiple",
      "jump": "i",
      "offset": [
        827,
        830
      ],
      "op": "JUMP",
      "path": "13"
    },
    "713": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        827,
        830
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "714": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        827,
        830
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "715": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        827,
        830
      ],
      "op": "POP",
      "path": "13"
    },
    "716": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        827,
        830
      ],
      "op": "POP",
      "path": "13"
    },
    "717": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        780,
        899
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x20C"
    },
    "720": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        780,
        899
      ],
      "op": "JUMP",
      "path": "13"
    },
    "721": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        780,
        899
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "722": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        780,
        899
      ],
      "op": "POP",
      "path": "13"
    },
    "723": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "POP",
      "path": "13"
    },
    "724": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "POP",
      "path": "13"
    },
    "725": {
      "fn": "DFStrategyV1.claimMultiple",
      "offset": [
        680,
        905
      ],
      "op": "POP",
      "path": "13"
    },
    "726": {
      "fn": "DFStrategyV1.claimMultiple",
      "jump": "o",
      "offset": [
        680,
        905
      ],
      "op": "JUMP",
      "path": "13"
    },
    "727": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "728": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        1018,
        1022
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "730": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        1034,
        1075
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 5,
      "value": "0x2E4"
    },
    "733": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        1048,
        1058
      ],
      "op": "CALLER",
      "path": "13"
    },
    "734": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        1060,
        1074
      ],
      "op": "DUP5",
      "path": "13"
    },
    "735": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        1060,
        1074
      ],
      "op": "DUP5",
      "path": "13"
    },
    "736": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        1034,
        1047
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x209"
    },
    "739": {
      "fn": "DFStrategyV1.claim",
      "jump": "i",
      "offset": [
        1034,
        1075
      ],
      "op": "JUMP",
      "path": "13"
    },
    "740": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        1034,
        1075
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "741": {
      "op": "POP"
    },
    "742": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 6,
      "value": "0x1"
    },
    "744": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "745": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "746": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "POP",
      "path": "13"
    },
    "747": {
      "fn": "DFStrategyV1.claim",
      "offset": [
        950,
        1103
      ],
      "op": "POP",
      "path": "13"
    },
    "748": {
      "fn": "DFStrategyV1.claim",
      "jump": "o",
      "offset": [
        950,
        1103
      ],
      "op": "JUMP",
      "path": "13"
    },
    "749": {
      "op": "JUMPDEST"
    },
    "750": {
      "op": "DUP1"
    },
    "751": {
      "op": "CALLDATALOAD"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "op": "DUP2"
    },
    "761": {
      "op": "AND"
    },
    "762": {
      "op": "DUP2"
    },
    "763": {
      "op": "EQ"
    },
    "764": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "767": {
      "op": "JUMPI"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "770": {
      "op": "DUP1"
    },
    "771": {
      "op": "REVERT"
    },
    "772": {
      "op": "JUMPDEST"
    },
    "773": {
      "op": "SWAP2"
    },
    "774": {
      "op": "SWAP1"
    },
    "775": {
      "op": "POP"
    },
    "776": {
      "jump": "o",
      "op": "JUMP"
    },
    "777": {
      "op": "JUMPDEST"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "780": {
      "op": "DUP1"
    },
    "781": {
      "op": "DUP4"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "784": {
      "op": "DUP5"
    },
    "785": {
      "op": "ADD"
    },
    "786": {
      "op": "SLT"
    },
    "787": {
      "op": "PUSH2",
      "value": "0x31B"
    },
    "790": {
      "op": "JUMPI"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "793": {
      "op": "DUP1"
    },
    "794": {
      "op": "REVERT"
    },
    "795": {
      "op": "JUMPDEST"
    },
    "796": {
      "op": "POP"
    },
    "797": {
      "op": "DUP2"
    },
    "798": {
      "op": "CALLDATALOAD"
    },
    "799": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "808": {
      "op": "DUP2"
    },
    "809": {
      "op": "GT"
    },
    "810": {
      "op": "ISZERO"
    },
    "811": {
      "op": "PUSH2",
      "value": "0x333"
    },
    "814": {
      "op": "JUMPI"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "817": {
      "op": "DUP1"
    },
    "818": {
      "op": "REVERT"
    },
    "819": {
      "op": "JUMPDEST"
    },
    "820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "822": {
      "op": "DUP4"
    },
    "823": {
      "op": "ADD"
    },
    "824": {
      "op": "SWAP2"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "op": "DUP4"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "829": {
      "op": "DUP3"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "832": {
      "op": "SHL"
    },
    "833": {
      "op": "DUP6"
    },
    "834": {
      "op": "ADD"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "op": "GT"
    },
    "837": {
      "op": "ISZERO"
    },
    "838": {
      "op": "PUSH2",
      "value": "0x34E"
    },
    "841": {
      "op": "JUMPI"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "844": {
      "op": "DUP1"
    },
    "845": {
      "op": "REVERT"
    },
    "846": {
      "op": "JUMPDEST"
    },
    "847": {
      "op": "SWAP3"
    },
    "848": {
      "op": "POP"
    },
    "849": {
      "op": "SWAP3"
    },
    "850": {
      "op": "SWAP1"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "jump": "o",
      "op": "JUMP"
    },
    "853": {
      "op": "JUMPDEST"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "856": {
      "op": "DUP1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "861": {
      "op": "DUP5"
    },
    "862": {
      "op": "DUP7"
    },
    "863": {
      "op": "SUB"
    },
    "864": {
      "op": "SLT"
    },
    "865": {
      "op": "ISZERO"
    },
    "866": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "869": {
      "op": "JUMPI"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "872": {
      "op": "DUP1"
    },
    "873": {
      "op": "REVERT"
    },
    "874": {
      "op": "JUMPDEST"
    },
    "875": {
      "op": "PUSH2",
      "value": "0x373"
    },
    "878": {
      "op": "DUP5"
    },
    "879": {
      "op": "PUSH2",
      "value": "0x2ED"
    },
    "882": {
      "jump": "i",
      "op": "JUMP"
    },
    "883": {
      "op": "JUMPDEST"
    },
    "884": {
      "op": "SWAP3"
    },
    "885": {
      "op": "POP"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "888": {
      "op": "DUP5"
    },
    "889": {
      "op": "ADD"
    },
    "890": {
      "op": "CALLDATALOAD"
    },
    "891": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "900": {
      "op": "DUP2"
    },
    "901": {
      "op": "GT"
    },
    "902": {
      "op": "ISZERO"
    },
    "903": {
      "op": "PUSH2",
      "value": "0x38F"
    },
    "906": {
      "op": "JUMPI"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "909": {
      "op": "DUP1"
    },
    "910": {
      "op": "REVERT"
    },
    "911": {
      "op": "JUMPDEST"
    },
    "912": {
      "op": "PUSH2",
      "value": "0x39B"
    },
    "915": {
      "op": "DUP7"
    },
    "916": {
      "op": "DUP3"
    },
    "917": {
      "op": "DUP8"
    },
    "918": {
      "op": "ADD"
    },
    "919": {
      "op": "PUSH2",
      "value": "0x309"
    },
    "922": {
      "jump": "i",
      "op": "JUMP"
    },
    "923": {
      "op": "JUMPDEST"
    },
    "924": {
      "op": "SWAP5"
    },
    "925": {
      "op": "SWAP8"
    },
    "926": {
      "op": "SWAP1"
    },
    "927": {
      "op": "SWAP7"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "op": "SWAP4"
    },
    "930": {
      "op": "SWAP5"
    },
    "931": {
      "op": "POP"
    },
    "932": {
      "op": "POP"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "op": "POP"
    },
    "935": {
      "jump": "o",
      "op": "JUMP"
    },
    "936": {
      "op": "JUMPDEST"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "939": {
      "op": "DUP1"
    },
    "940": {
      "op": "DUP3"
    },
    "941": {
      "op": "MSTORE"
    },
    "942": {
      "op": "DUP3"
    },
    "943": {
      "op": "MLOAD"
    },
    "944": {
      "op": "DUP3"
    },
    "945": {
      "op": "DUP3"
    },
    "946": {
      "op": "ADD"
    },
    "947": {
      "op": "DUP2"
    },
    "948": {
      "op": "SWAP1"
    },
    "949": {
      "op": "MSTORE"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "952": {
      "op": "SWAP2"
    },
    "953": {
      "op": "SWAP1"
    },
    "954": {
      "op": "DUP5"
    },
    "955": {
      "op": "DUP3"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "op": "SWAP1"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "960": {
      "op": "DUP6"
    },
    "961": {
      "op": "ADD"
    },
    "962": {
      "op": "SWAP1"
    },
    "963": {
      "op": "DUP5"
    },
    "964": {
      "op": "JUMPDEST"
    },
    "965": {
      "op": "DUP2"
    },
    "966": {
      "op": "DUP2"
    },
    "967": {
      "op": "LT"
    },
    "968": {
      "op": "ISZERO"
    },
    "969": {
      "op": "PUSH2",
      "value": "0x3E0"
    },
    "972": {
      "op": "JUMPI"
    },
    "973": {
      "op": "DUP4"
    },
    "974": {
      "op": "MLOAD"
    },
    "975": {
      "op": "DUP4"
    },
    "976": {
      "op": "MSTORE"
    },
    "977": {
      "op": "SWAP3"
    },
    "978": {
      "op": "DUP5"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "op": "SWAP3"
    },
    "981": {
      "op": "SWAP2"
    },
    "982": {
      "op": "DUP5"
    },
    "983": {
      "op": "ADD"
    },
    "984": {
      "op": "SWAP2"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "ADD"
    },
    "988": {
      "op": "PUSH2",
      "value": "0x3C4"
    },
    "991": {
      "op": "JUMP"
    },
    "992": {
      "op": "JUMPDEST"
    },
    "993": {
      "op": "POP"
    },
    "994": {
      "op": "SWAP1"
    },
    "995": {
      "op": "SWAP7"
    },
    "996": {
      "op": "SWAP6"
    },
    "997": {
      "op": "POP"
    },
    "998": {
      "op": "POP"
    },
    "999": {
      "op": "POP"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "op": "POP"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "jump": "o",
      "op": "JUMP"
    },
    "1004": {
      "op": "JUMPDEST"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1007": {
      "op": "DUP1"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1010": {
      "op": "DUP4"
    },
    "1011": {
      "op": "DUP6"
    },
    "1012": {
      "op": "SUB"
    },
    "1013": {
      "op": "SLT"
    },
    "1014": {
      "op": "ISZERO"
    },
    "1015": {
      "op": "PUSH2",
      "value": "0x3FF"
    },
    "1018": {
      "op": "JUMPI"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1021": {
      "op": "DUP1"
    },
    "1022": {
      "op": "REVERT"
    },
    "1023": {
      "op": "JUMPDEST"
    },
    "1024": {
      "op": "DUP3"
    },
    "1025": {
      "op": "CALLDATALOAD"
    },
    "1026": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1035": {
      "op": "DUP2"
    },
    "1036": {
      "op": "GT"
    },
    "1037": {
      "op": "ISZERO"
    },
    "1038": {
      "op": "PUSH2",
      "value": "0x416"
    },
    "1041": {
      "op": "JUMPI"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1044": {
      "op": "DUP1"
    },
    "1045": {
      "op": "REVERT"
    },
    "1046": {
      "op": "JUMPDEST"
    },
    "1047": {
      "op": "PUSH2",
      "value": "0x422"
    },
    "1050": {
      "op": "DUP6"
    },
    "1051": {
      "op": "DUP3"
    },
    "1052": {
      "op": "DUP7"
    },
    "1053": {
      "op": "ADD"
    },
    "1054": {
      "op": "PUSH2",
      "value": "0x309"
    },
    "1057": {
      "jump": "i",
      "op": "JUMP"
    },
    "1058": {
      "op": "JUMPDEST"
    },
    "1059": {
      "op": "SWAP1"
    },
    "1060": {
      "op": "SWAP7"
    },
    "1061": {
      "op": "SWAP1"
    },
    "1062": {
      "op": "SWAP6"
    },
    "1063": {
      "op": "POP"
    },
    "1064": {
      "op": "SWAP4"
    },
    "1065": {
      "op": "POP"
    },
    "1066": {
      "op": "POP"
    },
    "1067": {
      "op": "POP"
    },
    "1068": {
      "op": "POP"
    },
    "1069": {
      "jump": "o",
      "op": "JUMP"
    },
    "1070": {
      "op": "JUMPDEST"
    },
    "1071": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1078": {
      "op": "SHL"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1081": {
      "op": "MSTORE"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1091": {
      "op": "REVERT"
    },
    "1092": {
      "op": "JUMPDEST"
    },
    "1093": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1100": {
      "op": "SHL"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1103": {
      "op": "MSTORE"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1108": {
      "op": "MSTORE"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1113": {
      "op": "REVERT"
    },
    "1114": {
      "op": "JUMPDEST"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1119": {
      "op": "DUP3"
    },
    "1120": {
      "op": "DUP5"
    },
    "1121": {
      "op": "SUB"
    },
    "1122": {
      "op": "SLT"
    },
    "1123": {
      "op": "ISZERO"
    },
    "1124": {
      "op": "PUSH2",
      "value": "0x46C"
    },
    "1127": {
      "op": "JUMPI"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1130": {
      "op": "DUP1"
    },
    "1131": {
      "op": "REVERT"
    },
    "1132": {
      "op": "JUMPDEST"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x475"
    },
    "1136": {
      "op": "DUP3"
    },
    "1137": {
      "op": "PUSH2",
      "value": "0x2ED"
    },
    "1140": {
      "jump": "i",
      "op": "JUMP"
    },
    "1141": {
      "op": "JUMPDEST"
    },
    "1142": {
      "op": "SWAP4"
    },
    "1143": {
      "op": "SWAP3"
    },
    "1144": {
      "op": "POP"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "op": "POP"
    },
    "1147": {
      "jump": "o",
      "op": "JUMP"
    },
    "1148": {
      "op": "JUMPDEST"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1153": {
      "op": "DUP3"
    },
    "1154": {
      "op": "DUP5"
    },
    "1155": {
      "op": "SUB"
    },
    "1156": {
      "op": "SLT"
    },
    "1157": {
      "op": "ISZERO"
    },
    "1158": {
      "op": "PUSH2",
      "value": "0x48E"
    },
    "1161": {
      "op": "JUMPI"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1164": {
      "op": "DUP1"
    },
    "1165": {
      "op": "REVERT"
    },
    "1166": {
      "op": "JUMPDEST"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "op": "MLOAD"
    },
    "1169": {
      "op": "SWAP2"
    },
    "1170": {
      "op": "SWAP1"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "jump": "o",
      "op": "JUMP"
    },
    "1173": {
      "op": "JUMPDEST"
    },
    "1174": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1181": {
      "op": "SHL"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1184": {
      "op": "MSTORE"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1194": {
      "op": "REVERT"
    },
    "1195": {
      "op": "JUMPDEST"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1198": {
      "op": "DUP3"
    },
    "1199": {
      "op": "NOT"
    },
    "1200": {
      "op": "DUP3"
    },
    "1201": {
      "op": "GT"
    },
    "1202": {
      "op": "ISZERO"
    },
    "1203": {
      "op": "PUSH2",
      "value": "0x4BE"
    },
    "1206": {
      "op": "JUMPI"
    },
    "1207": {
      "op": "PUSH2",
      "value": "0x4BE"
    },
    "1210": {
      "op": "PUSH2",
      "value": "0x495"
    },
    "1213": {
      "jump": "i",
      "op": "JUMP"
    },
    "1214": {
      "op": "JUMPDEST"
    },
    "1215": {
      "op": "POP"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "SWAP1"
    },
    "1218": {
      "jump": "o",
      "op": "JUMP"
    },
    "1219": {
      "op": "JUMPDEST"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1224": {
      "op": "NOT"
    },
    "1225": {
      "op": "DUP3"
    },
    "1226": {
      "op": "EQ"
    },
    "1227": {
      "op": "ISZERO"
    },
    "1228": {
      "op": "PUSH2",
      "value": "0x4D7"
    },
    "1231": {
      "op": "JUMPI"
    },
    "1232": {
      "op": "PUSH2",
      "value": "0x4D7"
    },
    "1235": {
      "op": "PUSH2",
      "value": "0x495"
    },
    "1238": {
      "jump": "i",
      "op": "JUMP"
    },
    "1239": {
      "op": "JUMPDEST"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "ADD"
    },
    "1244": {
      "op": "SWAP1"
    },
    "1245": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "44109254e738f6b9680b457138d1f4d8ad55ddbe",
  "source": "// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\npragma solidity 0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol\";\nimport \"./interfaces/IDFRewards.sol\";\nimport \"./interfaces/IPool.sol\";\nimport \"./interfaces/IVeOCEAN.sol\";\n\n\n\ncontract DFStrategyV1 is ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    IDFRewards dfrewards;\n    uint8 public id = 1;\n\n    constructor(address _dfrewards) {\n        dfrewards = IDFRewards(_dfrewards);\n    }\n\n    function claimMultiple(address _to, address[] calldata tokenAddresses)\n        public\n    {\n        for (uint256 i = 0; i < tokenAddresses.length; i++) {\n            dfrewards.claimFor(_to, tokenAddresses[i]);\n        }\n    }\n\n    // Recipient claims for themselves\n    function claim(address[] calldata tokenAddresses) external returns (bool) {\n        claimMultiple(msg.sender, tokenAddresses);\n        return true;\n    }\n\n    function claimables(address _to, address[] calldata tokenAddresses)\n        external\n        view\n        returns (uint256[] memory result)\n    {\n        result = new uint256[](tokenAddresses.length);\n        for (uint256 i = 0; i < tokenAddresses.length; i += 1) {\n            result[i] = dfrewards.claimable(_to, tokenAddresses[i]);\n        }\n        return result;\n    }\n\n}\n",
  "sourceMap": "460:1025:13:-:0;;;583:1;565:19;;-1:-1:-1;;;;565:19:13;-1:-1:-1;;;565:19:13;;;591:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1637:1:2;1742:7;:22;;;633:34:13;;-1:-1:-1;;;;;;633:34:13;-1:-1:-1;;;;;633:34:13;;;;;;;;;;460:1025;;14:290:75;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:75;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:75:o;:::-;460:1025:13;;;;;;",
  "sourcePath": "contracts/DFStrategyV1.sol",
  "type": "contract"
}