{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "ContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_operation",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "Executed",
      "type": "event"
    }
  ],
  "allSourcePaths": {
    "25": "contracts/oceanv4/interfaces/IERC725X.sol"
  },
  "ast": {
    "absolutePath": "contracts/oceanv4/interfaces/IERC725X.sol",
    "exportedSymbols": {
      "IERC725X": [
        3717
      ]
    },
    "id": 3718,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3699,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:25"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC725X",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3700,
          "nodeType": "StructuredDocumentation",
          "src": "61:456:25",
          "text": " @dev Contract module which provides the ability to call arbitrary functions at any other smart contract and itself,\n including using `delegatecall`, as well creating contracts using `create` and `create2`.\n This is the basis for a smart contract based account system, but could also be used as a proxy account system.\n ERC 165 interface id: 0x44c028fe\n `execute` should only be callable by the owner of the contract set via ERC173."
        },
        "fullyImplemented": true,
        "id": 3717,
        "linearizedBaseContracts": [
          3717
        ],
        "name": "IERC725X",
        "nameLocation": "528:8:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 3701,
              "nodeType": "StructuredDocumentation",
              "src": "569:57:25",
              "text": " @dev Emitted when a contract is created."
            },
            "id": 3705,
            "name": "ContractCreated",
            "nameLocation": "637:15:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3703,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "669:15:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3705,
                  "src": "653:31:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:33:25"
            },
            "src": "631:55:25"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3706,
              "nodeType": "StructuredDocumentation",
              "src": "692:55:25",
              "text": " @dev Emitted when a contract executed."
            },
            "id": 3716,
            "name": "Executed",
            "nameLocation": "758:8:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3708,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_operation",
                  "nameLocation": "783:10:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3716,
                  "src": "767:26:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3710,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "811:3:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3716,
                  "src": "795:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3712,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "833:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3716,
                  "src": "816:23:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3714,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "847:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3716,
                  "src": "841:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3713,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "766:87:25"
            },
            "src": "752:102:25"
          }
        ],
        "scope": 3718,
        "src": "518:980:25",
        "usedErrors": []
      }
    ],
    "src": "36:1463:25"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "IERC725X",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Contract module which provides the ability to call arbitrary functions at any other smart contract and itself, including using `delegatecall`, as well creating contracts using `create` and `create2`. This is the basis for a smart contract based account system, but could also be used as a proxy account system. ERC 165 interface id: 0x44c028fe `execute` should only be callable by the owner of the contract set via ERC173.",
    "events": {
      "ContractCreated(address)": {
        "details": "Emitted when a contract is created."
      },
      "Executed(uint256,address,uint256,bytes)": {
        "details": "Emitted when a contract executed."
      }
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    518,
    1498
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "48c794a6b537f563e3705d79a64b7dc182681876",
  "source": "// SPDX-License-Identifier: CC0-1.0\npragma solidity 0.8.12;\n\n/**\n * @dev Contract module which provides the ability to call arbitrary functions at any other smart contract and itself,\n * including using `delegatecall`, as well creating contracts using `create` and `create2`.\n * This is the basis for a smart contract based account system, but could also be used as a proxy account system.\n *\n * ERC 165 interface id: 0x44c028fe\n *\n * `execute` should only be callable by the owner of the contract set via ERC173.\n */\ninterface IERC725X  /* is ERC165, ERC173 */ {\n\n    /**\n    * @dev Emitted when a contract is created.\n    */\n    event ContractCreated(address indexed contractAddress);\n\n    /**\n    * @dev Emitted when a contract executed.\n    */\n    event Executed(uint256 indexed _operation, address indexed _to, uint256 indexed  _value, bytes _data);\n\n\n    /**\n     * @dev Executes any other smart contract.\n     * SHOULD only be callable by the owner of the contract set via ERC173.\n     *\n     * Requirements:\n     *\n     * - `operationType`, the operation to execute. So far defined is:\n     *     CALL = 0;\n     *     DELEGATECALL = 1;\n     *     CREATE2 = 2;\n     *     CREATE = 3;\n     *\n     * - `data` the call data that will be used with the contract at `to`\n     *\n     * Emits a {ContractCreated} event, when a contract is created under `operationType` 2 and 3.\n     */\n   // function execute(uint256 operationType, address to, uint256 value, bytes calldata data) internal payable;\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/oceanv4/interfaces/IERC725X.sol",
  "type": "interface"
}