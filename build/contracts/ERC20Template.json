{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "AddedMinter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "AddedPaymentManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "CleanedPermissions",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "consumeMarketFeeAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "consumeMarketFeeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "consumeMarketFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "ConsumeMarketFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currentMinter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newMinter",
          "type": "address"
        }
      ],
      "name": "MinterApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "currentMinter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newMinter",
          "type": "address"
        }
      ],
      "name": "MinterProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dispenserContract",
          "type": "address"
        }
      ],
      "name": "NewDispenser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "exchangeId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "exchangeContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "NewFixedRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newPaymentCollector",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "NewPaymentCollector",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "ssContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "baseTokenAddress",
          "type": "address"
        }
      ],
      "name": "NewPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "providerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "consumerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderTxId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "providerData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "providerSignature",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "consumerData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "consumerSignature",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "OrderExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderTxId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        }
      ],
      "name": "OrderReused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "consumer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "serviceIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "publishMarketAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "OrderStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "providerFeeAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "providerFeeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "providerFeeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "providerData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "validUntil",
          "type": "uint256"
        }
      ],
      "name": "ProviderFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "PublishMarketFeeAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "PublishMarketFeeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "PublishMarketFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "PublishMarketFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "PublishMarketFeeAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "PublishMarketFeeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "PublishMarketFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "PublishMarketFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "RemovedMinter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "RemovedPaymentManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "datatokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "publisherAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vestingEndBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalVestingAmount",
          "type": "uint256"
        }
      ],
      "name": "VestingCreated",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "BASE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_paymentManager",
          "type": "address"
        }
      ],
      "name": "addPaymentManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "authERC20",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cleanFrom721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cleanPermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dispenser",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxBalance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withMint",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "allowedSwapper",
          "type": "address"
        }
      ],
      "name": "createDispenser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fixedPriceAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "createFixedRate",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "exchangeId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ssParams",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "swapFees",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        }
      ],
      "name": "deployPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDispensers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getERC721Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFixedRates",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ERC20Template.fixedRate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPaymentCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getPermissions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "minter",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "paymentManager",
              "type": "bool"
            }
          ],
          "internalType": "struct ERC20Roles.RolesERC20",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPools",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPublishingMarketFee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "strings_",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "addresses_",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "factoryAddresses_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "uints_",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "bytes_",
          "type": "bytes[]"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isERC20Deployer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderTxId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "providerData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "providerSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "consumerData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "consumerSignature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "consumerAddress",
          "type": "address"
        }
      ],
      "name": "orderExecuted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "permissions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "minter",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "paymentManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_paymentManager",
          "type": "address"
        }
      ],
      "name": "removePaymentManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderTxId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "providerFeeAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "providerFeeToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "providerFeeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "providerData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ERC20Template.providerFee",
          "name": "_providerFee",
          "type": "tuple"
        }
      ],
      "name": "reuseOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_value",
          "type": "bytes"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newPaymentCollector",
          "type": "address"
        }
      ],
      "name": "setPaymentCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_publishMarketFeeAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_publishMarketFeeToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_publishMarketFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "setPublishingMarketFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "consumer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "serviceIndex",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "providerFeeAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "providerFeeToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "providerFeeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "providerData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ERC20Template.providerFee",
          "name": "_providerFee",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "consumeMarketFeeAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consumeMarketFeeToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "consumeMarketFeeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20Template.consumeMarketFee",
          "name": "_consumeMarketFee",
          "type": "tuple"
        }
      ],
      "name": "startOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "11": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
    "2": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
    "21": "contracts/oceanv4/interfaces/IDispenser.sol",
    "24": "contracts/oceanv4/interfaces/IERC721Template.sol",
    "28": "contracts/oceanv4/interfaces/IFactoryRouter.sol",
    "29": "contracts/oceanv4/interfaces/IFixedRateExchange.sol",
    "3": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
    "4": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "42": "contracts/oceanv4/templates/ERC20Template.sol",
    "46": "contracts/oceanv4/utils/ERC20Roles.sol",
    "5": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
    "6": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "7": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "8": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol",
    "9": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/oceanv4/templates/ERC20Template.sol",
    "exportedSymbols": {
      "Address": [
        29881
      ],
      "Context": [
        29252
      ],
      "ERC20": [
        29058
      ],
      "ERC20Burnable": [
        29120
      ],
      "ERC20Roles": [
        21585
      ],
      "ERC20Template": [
        17877
      ],
      "IDispenser": [
        3001
      ],
      "IERC20": [
        27843
      ],
      "IERC20Metadata": [
        29906
      ],
      "IERC20Template": [
        3402
      ],
      "IERC721Template": [
        3697
      ],
      "IFactoryRouter": [
        4096
      ],
      "IFixedRateExchange": [
        4270
      ],
      "ReentrancyGuard": [
        27765
      ],
      "SafeERC20": [
        28067
      ],
      "SafeMath": [
        28379
      ]
    },
    "id": 17878,
    "license": "(Apache-2.0 AND CC-BY-4.0)",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15851,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:42"
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/IERC721Template.sol",
        "file": "../interfaces/IERC721Template.sol",
        "id": 15852,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 3698,
        "src": "186:43:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/IERC20Template.sol",
        "file": "../interfaces/IERC20Template.sol",
        "id": 15853,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 3403,
        "src": "230:42:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/IFactoryRouter.sol",
        "file": "../interfaces/IFactoryRouter.sol",
        "id": 15854,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 4097,
        "src": "273:42:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/IFixedRateExchange.sol",
        "file": "../interfaces/IFixedRateExchange.sol",
        "id": 15855,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 4271,
        "src": "316:46:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/IDispenser.sol",
        "file": "../interfaces/IDispenser.sol",
        "id": 15856,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 3002,
        "src": "363:38:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol",
        "id": 15857,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 29059,
        "src": "402:83:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 15858,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 29121,
        "src": "486:102:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "id": 15859,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 27844,
        "src": "589:84:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol",
        "id": 15860,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 28380,
        "src": "674:85:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 15861,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 28068,
        "src": "761:93:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/calina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol",
        "id": 15862,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 27766,
        "src": "855:90:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/utils/ERC20Roles.sol",
        "file": "../utils/ERC20Roles.sol",
        "id": 15863,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17878,
        "sourceUnit": 21586,
        "src": "946:33:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "74657374",
                "id": 15866,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1214:6:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                  "typeString": "literal_string \"test\""
                },
                "value": "test"
              },
              {
                "hexValue": "7465737453796d626f6c",
                "id": 15867,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1222:12:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_6a2f03a1dba5e9dbeb18b55ac2076e1af9f5f2b7411cb1dbef111c70934e1686",
                  "typeString": "literal_string \"testSymbol\""
                },
                "value": "testSymbol"
              }
            ],
            "baseName": {
              "id": 15865,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29058,
              "src": "1208:5:42"
            },
            "id": 15868,
            "nodeType": "InheritanceSpecifier",
            "src": "1208:27:42"
          },
          {
            "baseName": {
              "id": 15869,
              "name": "ERC20Roles",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21585,
              "src": "1241:10:42"
            },
            "id": 15870,
            "nodeType": "InheritanceSpecifier",
            "src": "1241:10:42"
          },
          {
            "baseName": {
              "id": 15871,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29120,
              "src": "1257:13:42"
            },
            "id": 15872,
            "nodeType": "InheritanceSpecifier",
            "src": "1257:13:42"
          },
          {
            "baseName": {
              "id": 15873,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27765,
              "src": "1276:15:42"
            },
            "id": 15874,
            "nodeType": "InheritanceSpecifier",
            "src": "1276:15:42"
          }
        ],
        "canonicalName": "ERC20Template",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15864,
          "nodeType": "StructuredDocumentation",
          "src": "981:196:42",
          "text": " @title DatatokenTemplate\n @dev DatatokenTemplate is an ERC20 compliant token template\n      Used by the factory contract as a bytecode reference to\n      deploy new Datatokens."
        },
        "fullyImplemented": true,
        "id": 17877,
        "linearizedBaseContracts": [
          17877,
          27765,
          29120,
          21585,
          29058,
          29906,
          27843,
          29252
        ],
        "name": "ERC20Template",
        "nameLocation": "1187:13:42",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15877,
            "libraryName": {
              "id": 15875,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28379,
              "src": "1304:8:42"
            },
            "nodeType": "UsingForDirective",
            "src": "1298:27:42",
            "typeName": {
              "id": 15876,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1317:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 15881,
            "libraryName": {
              "id": 15878,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28067,
              "src": "1336:9:42"
            },
            "nodeType": "UsingForDirective",
            "src": "1330:27:42",
            "typeName": {
              "id": 15880,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15879,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27843,
                "src": "1350:6:42"
              },
              "referencedDeclaration": 27843,
              "src": "1350:6:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$27843",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 15883,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1378:5:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1363:20:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 15882,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1363:6:42",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15885,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1404:7:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1389:22:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 15884,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1389:6:42",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15887,
            "mutability": "mutable",
            "name": "_cap",
            "nameLocation": "1433:4:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1417:20:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15886,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1417:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 15890,
            "mutability": "constant",
            "name": "_decimals",
            "nameLocation": "1466:9:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1443:37:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 15888,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1443:5:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 15889,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1478:2:42",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15893,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "1499:11:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1486:32:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 15891,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1486:4:42",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 15892,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1513:5:42",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15895,
            "mutability": "mutable",
            "name": "_erc721Address",
            "nameLocation": "1540:14:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1524:30:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15894,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1524:7:42",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15897,
            "mutability": "mutable",
            "name": "paymentCollector",
            "nameLocation": "1576:16:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1560:32:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15896,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1560:7:42",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15899,
            "mutability": "mutable",
            "name": "publishMarketFeeAddress",
            "nameLocation": "1614:23:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1598:39:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15898,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1598:7:42",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15901,
            "mutability": "mutable",
            "name": "publishMarketFeeToken",
            "nameLocation": "1659:21:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1643:37:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15900,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1643:7:42",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15903,
            "mutability": "mutable",
            "name": "publishMarketFeeAmount",
            "nameLocation": "1702:22:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1686:38:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15902,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1686:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "ec342ad0",
            "id": 15906,
            "mutability": "constant",
            "name": "BASE",
            "nameLocation": "1754:4:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1730:35:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15904,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1730:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 15905,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1761:4:42",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3644e515",
            "id": 15908,
            "mutability": "mutable",
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "1815:16:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1800:31:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15907,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1800:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "30adf81f",
            "id": 15911,
            "mutability": "constant",
            "name": "PERMIT_TYPEHASH",
            "nameLocation": "1965:15:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "1941:116:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15909,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1941:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
              "id": 15910,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1991:66:42",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
                "typeString": "int_const 4995...(69 digits omitted)...3241"
              },
              "value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7ecebe00",
            "id": 15915,
            "mutability": "mutable",
            "name": "nonces",
            "nameLocation": "2099:6:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "2064:41:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15914,
              "keyType": {
                "id": 15912,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2072:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2064:27:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15913,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2083:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f887ea40",
            "id": 15917,
            "mutability": "mutable",
            "name": "router",
            "nameLocation": "2127:6:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "2112:21:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15916,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2112:7:42",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15920,
            "mutability": "mutable",
            "name": "deployedPools",
            "nameLocation": "2149:13:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "2139:23:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 15918,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2139:7:42",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 15919,
              "nodeType": "ArrayTypeName",
              "src": "2139:9:42",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "ERC20Template.fixedRate",
            "id": 15925,
            "members": [
              {
                "constant": false,
                "id": 15922,
                "mutability": "mutable",
                "name": "contractAddress",
                "nameLocation": "2202:15:42",
                "nodeType": "VariableDeclaration",
                "scope": 15925,
                "src": "2194:23:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 15921,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2194:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15924,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2235:2:42",
                "nodeType": "VariableDeclaration",
                "scope": 15925,
                "src": "2227:10:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15923,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2227:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "fixedRate",
            "nameLocation": "2175:9:42",
            "nodeType": "StructDefinition",
            "scope": 17877,
            "src": "2168:76:42",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15929,
            "mutability": "mutable",
            "name": "fixedRateExchanges",
            "nameLocation": "2261:18:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "2249:30:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
              "typeString": "struct ERC20Template.fixedRate[]"
            },
            "typeName": {
              "baseType": {
                "id": 15927,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 15926,
                  "name": "fixedRate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15925,
                  "src": "2249:9:42"
                },
                "referencedDeclaration": 15925,
                "src": "2249:9:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_fixedRate_$15925_storage_ptr",
                  "typeString": "struct ERC20Template.fixedRate"
                }
              },
              "id": 15928,
              "nodeType": "ArrayTypeName",
              "src": "2249:11:42",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage_ptr",
                "typeString": "struct ERC20Template.fixedRate[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15932,
            "mutability": "mutable",
            "name": "dispensers",
            "nameLocation": "2295:10:42",
            "nodeType": "VariableDeclaration",
            "scope": 17877,
            "src": "2285:20:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 15930,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2285:7:42",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 15931,
              "nodeType": "ArrayTypeName",
              "src": "2285:9:42",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "ERC20Template.providerFee",
            "id": 15949,
            "members": [
              {
                "constant": false,
                "id": 15934,
                "mutability": "mutable",
                "name": "providerFeeAddress",
                "nameLocation": "2348:18:42",
                "nodeType": "VariableDeclaration",
                "scope": 15949,
                "src": "2340:26:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 15933,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2340:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15936,
                "mutability": "mutable",
                "name": "providerFeeToken",
                "nameLocation": "2384:16:42",
                "nodeType": "VariableDeclaration",
                "scope": 15949,
                "src": "2376:24:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 15935,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2376:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15938,
                "mutability": "mutable",
                "name": "providerFeeAmount",
                "nameLocation": "2443:17:42",
                "nodeType": "VariableDeclaration",
                "scope": 15949,
                "src": "2435:25:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15937,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2435:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15940,
                "mutability": "mutable",
                "name": "v",
                "nameLocation": "2515:1:42",
                "nodeType": "VariableDeclaration",
                "scope": 15949,
                "src": "2509:7:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 15939,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2509:5:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15942,
                "mutability": "mutable",
                "name": "r",
                "nameLocation": "2566:1:42",
                "nodeType": "VariableDeclaration",
                "scope": 15949,
                "src": "2558:9:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15941,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2558:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15944,
                "mutability": "mutable",
                "name": "s",
                "nameLocation": "2617:1:42",
                "nodeType": "VariableDeclaration",
                "scope": 15949,
                "src": "2609:9:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15943,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2609:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15946,
                "mutability": "mutable",
                "name": "validUntil",
                "nameLocation": "2668:10:42",
                "nodeType": "VariableDeclaration",
                "scope": 15949,
                "src": "2660:18:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15945,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2660:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15948,
                "mutability": "mutable",
                "name": "providerData",
                "nameLocation": "2733:12:42",
                "nodeType": "VariableDeclaration",
                "scope": 15949,
                "src": "2727:18:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 15947,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "2727:5:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "providerFee",
            "nameLocation": "2319:11:42",
            "nodeType": "StructDefinition",
            "scope": 17877,
            "src": "2312:470:42",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20Template.consumeMarketFee",
            "id": 15956,
            "members": [
              {
                "constant": false,
                "id": 15951,
                "mutability": "mutable",
                "name": "consumeMarketFeeAddress",
                "nameLocation": "2829:23:42",
                "nodeType": "VariableDeclaration",
                "scope": 15956,
                "src": "2821:31:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 15950,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2821:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15953,
                "mutability": "mutable",
                "name": "consumeMarketFeeToken",
                "nameLocation": "2870:21:42",
                "nodeType": "VariableDeclaration",
                "scope": 15956,
                "src": "2862:29:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 15952,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2862:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15955,
                "mutability": "mutable",
                "name": "consumeMarketFeeAmount",
                "nameLocation": "2969:22:42",
                "nodeType": "VariableDeclaration",
                "scope": 15956,
                "src": "2961:30:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15954,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2961:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "consumeMarketFee",
            "nameLocation": "2795:16:42",
            "nodeType": "StructDefinition",
            "scope": 17877,
            "src": "2788:259:42",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 15972,
            "name": "OrderStarted",
            "nameLocation": "3059:12:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15958,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "consumer",
                  "nameLocation": "3097:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15972,
                  "src": "3081:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3081:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15960,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "payer",
                  "nameLocation": "3123:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15972,
                  "src": "3115:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3115:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15962,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3146:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15972,
                  "src": "3138:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3138:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15964,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "serviceIndex",
                  "nameLocation": "3170:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15972,
                  "src": "3162:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3162:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15966,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3200:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15972,
                  "src": "3192:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15968,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "publishMarketAddress",
                  "nameLocation": "3235:20:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15972,
                  "src": "3219:36:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3219:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15970,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "3273:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15972,
                  "src": "3265:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3265:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3071:219:42"
            },
            "src": "3053:238:42"
          },
          {
            "anonymous": false,
            "id": 15982,
            "name": "OrderReused",
            "nameLocation": "3303:11:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15974,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "orderTxId",
                  "nameLocation": "3336:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15982,
                  "src": "3328:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15973,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3328:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15976,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "3367:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15982,
                  "src": "3359:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15978,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3395:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15982,
                  "src": "3387:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3387:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15980,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "number",
                  "nameLocation": "3426:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 15982,
                  "src": "3418:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3418:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3314:124:42"
            },
            "src": "3297:142:42"
          },
          {
            "anonymous": false,
            "id": 16002,
            "name": "OrderExecuted",
            "nameLocation": "3451:13:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15984,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "providerAddress",
                  "nameLocation": "3491:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16002,
                  "src": "3475:31:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3475:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15986,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "consumerAddress",
                  "nameLocation": "3532:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16002,
                  "src": "3516:31:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3516:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15988,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "orderTxId",
                  "nameLocation": "3565:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16002,
                  "src": "3557:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15987,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3557:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15990,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "providerData",
                  "nameLocation": "3590:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16002,
                  "src": "3584:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15989,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15992,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "providerSignature",
                  "nameLocation": "3618:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16002,
                  "src": "3612:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15991,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3612:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15994,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "consumerData",
                  "nameLocation": "3651:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16002,
                  "src": "3645:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15993,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3645:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15996,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "consumerSignature",
                  "nameLocation": "3679:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16002,
                  "src": "3673:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15995,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3673:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15998,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3714:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16002,
                  "src": "3706:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3706:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16000,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "3741:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16002,
                  "src": "3733:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3464:294:42"
            },
            "src": "3445:314:42"
          },
          {
            "anonymous": false,
            "id": 16012,
            "name": "PublishMarketFeeChanged",
            "nameLocation": "3771:23:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16004,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "3812:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16012,
                  "src": "3804:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3804:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16006,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "PublishMarketFeeAddress",
                  "nameLocation": "3836:23:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16012,
                  "src": "3828:31:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3828:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16008,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "PublishMarketFeeToken",
                  "nameLocation": "3877:21:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16012,
                  "src": "3869:29:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3869:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16010,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "PublishMarketFeeAmount",
                  "nameLocation": "3916:22:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16012,
                  "src": "3908:30:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3908:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3794:150:42"
            },
            "src": "3765:180:42"
          },
          {
            "anonymous": false,
            "id": 16020,
            "name": "PublishMarketFee",
            "nameLocation": "3987:16:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16014,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "PublishMarketFeeAddress",
                  "nameLocation": "4029:23:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "4013:39:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4013:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16016,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "PublishMarketFeeToken",
                  "nameLocation": "4078:21:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "4062:37:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4062:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16018,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "PublishMarketFeeAmount",
                  "nameLocation": "4117:22:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "4109:30:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4109:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4003:142:42"
            },
            "src": "3981:165:42"
          },
          {
            "anonymous": false,
            "id": 16028,
            "name": "ConsumeMarketFee",
            "nameLocation": "4188:16:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16022,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "consumeMarketFeeAddress",
                  "nameLocation": "4230:23:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16028,
                  "src": "4214:39:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4214:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16024,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "consumeMarketFeeToken",
                  "nameLocation": "4279:21:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16028,
                  "src": "4263:37:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4263:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16026,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "consumeMarketFeeAmount",
                  "nameLocation": "4318:22:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16028,
                  "src": "4310:30:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4310:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4204:142:42"
            },
            "src": "4182:165:42"
          },
          {
            "anonymous": false,
            "id": 16046,
            "name": "ProviderFee",
            "nameLocation": "4389:11:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16030,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "providerFeeAddress",
                  "nameLocation": "4426:18:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16046,
                  "src": "4410:34:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4410:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16032,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "providerFeeToken",
                  "nameLocation": "4470:16:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16046,
                  "src": "4454:32:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4454:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "providerFeeAmount",
                  "nameLocation": "4504:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16046,
                  "src": "4496:25:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16036,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "providerData",
                  "nameLocation": "4537:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16046,
                  "src": "4531:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16035,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16038,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "4565:1:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16046,
                  "src": "4559:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 16037,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16040,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "4585:1:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16046,
                  "src": "4577:9:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16039,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4577:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16042,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "4605:1:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16046,
                  "src": "4597:9:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16041,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4597:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16044,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "4624:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16046,
                  "src": "4616:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4400:240:42"
            },
            "src": "4383:258:42"
          },
          {
            "anonymous": false,
            "id": 16052,
            "name": "MinterProposed",
            "nameLocation": "4658:14:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16048,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currentMinter",
                  "nameLocation": "4681:13:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16052,
                  "src": "4673:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4673:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16050,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMinter",
                  "nameLocation": "4704:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16052,
                  "src": "4696:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4696:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4672:42:42"
            },
            "src": "4652:63:42"
          },
          {
            "anonymous": false,
            "id": 16058,
            "name": "MinterApproved",
            "nameLocation": "4727:14:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16054,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currentMinter",
                  "nameLocation": "4750:13:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16058,
                  "src": "4742:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4742:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16056,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMinter",
                  "nameLocation": "4773:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16058,
                  "src": "4765:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4765:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4741:42:42"
            },
            "src": "4721:63:42"
          },
          {
            "anonymous": false,
            "id": 16066,
            "name": "NewPool",
            "nameLocation": "4796:7:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16060,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "4821:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16066,
                  "src": "4813:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4813:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16062,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ssContract",
                  "nameLocation": "4850:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16066,
                  "src": "4842:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4842:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16064,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseTokenAddress",
                  "nameLocation": "4878:16:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16066,
                  "src": "4870:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4870:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4803:97:42"
            },
            "src": "4790:111:42"
          },
          {
            "anonymous": false,
            "id": 16076,
            "name": "VestingCreated",
            "nameLocation": "4912:14:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16068,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "datatokenAddress",
                  "nameLocation": "4943:16:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16076,
                  "src": "4927:32:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4927:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16070,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "publisherAddress",
                  "nameLocation": "4985:16:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16076,
                  "src": "4969:32:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4969:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16072,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vestingEndBlock",
                  "nameLocation": "5019:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16076,
                  "src": "5011:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5011:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16074,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalVestingAmount",
                  "nameLocation": "5052:18:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16076,
                  "src": "5044:26:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5044:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4926:145:42"
            },
            "src": "4906:166:42"
          },
          {
            "anonymous": false,
            "id": 16086,
            "name": "NewFixedRate",
            "nameLocation": "5083:12:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16078,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchangeId",
                  "nameLocation": "5104:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16086,
                  "src": "5096:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16077,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5096:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16080,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5132:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16086,
                  "src": "5116:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5116:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchangeContract",
                  "nameLocation": "5147:16:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16086,
                  "src": "5139:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5139:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16084,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "5181:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16086,
                  "src": "5165:25:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5165:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5095:96:42"
            },
            "src": "5077:115:42"
          },
          {
            "anonymous": false,
            "id": 16090,
            "name": "NewDispenser",
            "nameLocation": "5203:12:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16088,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dispenserContract",
                  "nameLocation": "5224:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16090,
                  "src": "5216:25:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5216:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5215:27:42"
            },
            "src": "5197:46:42"
          },
          {
            "anonymous": false,
            "id": 16100,
            "name": "NewPaymentCollector",
            "nameLocation": "5255:19:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16092,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "5300:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16100,
                  "src": "5284:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5284:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16094,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_newPaymentCollector",
                  "nameLocation": "5332:20:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16100,
                  "src": "5316:36:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5316:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16096,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "5370:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16100,
                  "src": "5362:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5362:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16098,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "5397:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16100,
                  "src": "5389:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5389:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5274:140:42"
            },
            "src": "5249:166:42"
          },
          {
            "body": {
              "id": 16109,
              "nodeType": "Block",
              "src": "5451:136:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5482:12:42",
                        "subExpression": {
                          "id": 16103,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15893,
                          "src": "5483:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a20746f6b656e20696e7374616e636520616c726561647920696e697469616c697a6564",
                        "id": 16105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5508:51:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c7de0dde46143591b41a95c3e9fcd2b400a6e71817818e6e1b4d0776dca49a",
                          "typeString": "literal_string \"ERC20Template: token instance already initialized\""
                        },
                        "value": "ERC20Template: token instance already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c7de0dde46143591b41a95c3e9fcd2b400a6e71817818e6e1b4d0776dca49a",
                          "typeString": "literal_string \"ERC20Template: token instance already initialized\""
                        }
                      ],
                      "id": 16102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5461:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5461:108:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16107,
                  "nodeType": "ExpressionStatement",
                  "src": "5461:108:42"
                },
                {
                  "id": 16108,
                  "nodeType": "PlaceholderStatement",
                  "src": "5579:1:42"
                }
              ]
            },
            "id": 16110,
            "name": "onlyNotInitialized",
            "nameLocation": "5430:18:42",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5448:2:42"
            },
            "src": "5421:166:42",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16126,
              "nodeType": "Block",
              "src": "5616:158:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 16113,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5647:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5647:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 16119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5701:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 16116,
                                  "name": "_erc721Address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15895,
                                  "src": "5677:14:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 16115,
                                "name": "IERC721Template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3697,
                                "src": "5661:15:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$",
                                  "typeString": "type(contract IERC721Template)"
                                }
                              },
                              "id": 16117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5661:31:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Template_$3697",
                                "typeString": "contract IERC721Template"
                              }
                            },
                            "id": 16118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3499,
                            "src": "5661:39:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 16120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5661:42:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5647:56:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a206e6f74204e46544f776e6572",
                        "id": 16122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5717:29:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be9368c7475aecb7a349f96a2f49f02ec29a44ee3f7721d6c445b9755fddd9b8",
                          "typeString": "literal_string \"ERC20Template: not NFTOwner\""
                        },
                        "value": "ERC20Template: not NFTOwner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be9368c7475aecb7a349f96a2f49f02ec29a44ee3f7721d6c445b9755fddd9b8",
                          "typeString": "literal_string \"ERC20Template: not NFTOwner\""
                        }
                      ],
                      "id": 16112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5626:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5626:130:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16124,
                  "nodeType": "ExpressionStatement",
                  "src": "5626:130:42"
                },
                {
                  "id": 16125,
                  "nodeType": "PlaceholderStatement",
                  "src": "5766:1:42"
                }
              ]
            },
            "id": 16127,
            "name": "onlyNFTOwner",
            "nameLocation": "5601:12:42",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5613:2:42"
            },
            "src": "5592:182:42",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16138,
              "nodeType": "Block",
              "src": "5822:154:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 16130,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5853:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5853:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 16132,
                          "name": "publishMarketFeeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15899,
                          "src": "5867:23:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5853:37:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a206e6f74207075626c6973684d61726b657446656541646472657373",
                        "id": 16134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5904:44:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02cf993cb7006234fc4cd8a37d1b888dac0ca64edbf6ebb80d36c296d8dc4861",
                          "typeString": "literal_string \"ERC20Template: not publishMarketFeeAddress\""
                        },
                        "value": "ERC20Template: not publishMarketFeeAddress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02cf993cb7006234fc4cd8a37d1b888dac0ca64edbf6ebb80d36c296d8dc4861",
                          "typeString": "literal_string \"ERC20Template: not publishMarketFeeAddress\""
                        }
                      ],
                      "id": 16129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5832:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5832:126:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16136,
                  "nodeType": "ExpressionStatement",
                  "src": "5832:126:42"
                },
                {
                  "id": 16137,
                  "nodeType": "PlaceholderStatement",
                  "src": "5968:1:42"
                }
              ]
            },
            "id": 16139,
            "name": "onlyPublishingMarketFeeAddress",
            "nameLocation": "5789:30:42",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5819:2:42"
            },
            "src": "5780:196:42",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16164,
              "nodeType": "Block",
              "src": "6011:271:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 16159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 16146,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6106:3:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 16147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6106:10:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 16143,
                                    "name": "_erc721Address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15895,
                                    "src": "6058:14:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 16142,
                                  "name": "IERC721Template",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3697,
                                  "src": "6042:15:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$",
                                    "typeString": "type(contract IERC721Template)"
                                  }
                                },
                                "id": 16144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6042:31:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Template_$3697",
                                  "typeString": "contract IERC721Template"
                                }
                              },
                              "id": 16145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getPermissions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3615,
                              "src": "6042:63:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Roles_$3598_memory_ptr_$",
                                "typeString": "function (address) view external returns (struct IERC721Template.Roles memory)"
                              }
                            },
                            "id": 16148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6042:75:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Roles_$3598_memory_ptr",
                              "typeString": "struct IERC721Template.Roles memory"
                            }
                          },
                          "id": 16149,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deployERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3593,
                          "src": "6042:104:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 16158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 16154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6190:1:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 16151,
                                    "name": "_erc721Address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15895,
                                    "src": "6166:14:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 16150,
                                  "name": "IERC721Template",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3697,
                                  "src": "6150:15:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$",
                                    "typeString": "type(contract IERC721Template)"
                                  }
                                },
                                "id": 16152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6150:31:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Template_$3697",
                                  "typeString": "contract IERC721Template"
                                }
                              },
                              "id": 16153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3499,
                              "src": "6150:39:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 16155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6150:42:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 16156,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6196:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 16157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6196:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6150:56:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6042:164:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a204e4f54204445504c4f59455220524f4c45",
                        "id": 16160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6220:34:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77cf58615996877a057ecbbf646f8e692d1cea8795623d88deb1de4615cdd45c",
                          "typeString": "literal_string \"ERC20Template: NOT DEPLOYER ROLE\""
                        },
                        "value": "ERC20Template: NOT DEPLOYER ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77cf58615996877a057ecbbf646f8e692d1cea8795623d88deb1de4615cdd45c",
                          "typeString": "literal_string \"ERC20Template: NOT DEPLOYER ROLE\""
                        }
                      ],
                      "id": 16141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6021:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6021:243:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16162,
                  "nodeType": "ExpressionStatement",
                  "src": "6021:243:42"
                },
                {
                  "id": 16163,
                  "nodeType": "PlaceholderStatement",
                  "src": "6274:1:42"
                }
              ]
            },
            "id": 16165,
            "name": "onlyERC20Deployer",
            "nameLocation": "5991:17:42",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6008:2:42"
            },
            "src": "5982:300:42",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16196,
              "nodeType": "Block",
              "src": "7767:198:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16189,
                        "name": "strings_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16169,
                        "src": "7825:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "string calldata[] calldata"
                        }
                      },
                      {
                        "id": 16190,
                        "name": "addresses_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16172,
                        "src": "7851:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 16191,
                        "name": "factoryAddresses_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16175,
                        "src": "7879:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 16192,
                        "name": "uints_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16178,
                        "src": "7914:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 16193,
                        "name": "bytes_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16181,
                        "src": "7938:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "string calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      ],
                      "id": 16188,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16369,
                      "src": "7796:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory[] memory,address[] memory,address[] memory,uint256[] memory,bytes memory[] memory) returns (bool)"
                      }
                    },
                    "id": 16194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7796:162:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16187,
                  "id": 16195,
                  "nodeType": "Return",
                  "src": "7777:181:42"
                }
              ]
            },
            "documentation": {
              "id": 16166,
              "nodeType": "StructuredDocumentation",
              "src": "6288:1216:42",
              "text": " @dev initialize\n      Called prior contract initialization (e.g creating new Datatoken instance)\n      Calls private _initialize function. Only if contract is not initialized.\n @param strings_ refers to an array of strings\n                      [0] = name token\n                      [1] = symbol\n @param addresses_ refers to an array of addresses passed by user\n                     [0]  = minter account who can mint datatokens (can have multiple minters)\n                     [1]  = paymentCollector  initial paymentCollector  for this DT\n                     [2]  = publishing Market Address\n                     [3]  = publishing Market Fee Token\n @param factoryAddresses_ refers to an array of addresses passed by the factory\n                     [0]  = erc721Address\n                     [1]  = router address\n @param uints_  refers to an array of uints\n                     [0] = cap_ the total ERC20 cap\n                     [1] = publishing Market Fee Amount\n @param bytes_  refers to an array of bytes\n                     Currently not used, usefull for future templates"
            },
            "functionSelector": "b3998be0",
            "id": 16197,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16184,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16183,
                  "name": "onlyNotInitialized",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16110,
                  "src": "7733:18:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "7733:18:42"
              }
            ],
            "name": "initialize",
            "nameLocation": "7518:10:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16169,
                  "mutability": "mutable",
                  "name": "strings_",
                  "nameLocation": "7556:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16197,
                  "src": "7538:26:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16167,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "7538:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 16168,
                    "nodeType": "ArrayTypeName",
                    "src": "7538:8:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16172,
                  "mutability": "mutable",
                  "name": "addresses_",
                  "nameLocation": "7593:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16197,
                  "src": "7574:29:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16170,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7574:7:42",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16171,
                    "nodeType": "ArrayTypeName",
                    "src": "7574:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16175,
                  "mutability": "mutable",
                  "name": "factoryAddresses_",
                  "nameLocation": "7632:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16197,
                  "src": "7613:36:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16173,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7613:7:42",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16174,
                    "nodeType": "ArrayTypeName",
                    "src": "7613:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16178,
                  "mutability": "mutable",
                  "name": "uints_",
                  "nameLocation": "7678:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16197,
                  "src": "7659:25:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16176,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7659:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16177,
                    "nodeType": "ArrayTypeName",
                    "src": "7659:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16181,
                  "mutability": "mutable",
                  "name": "bytes_",
                  "nameLocation": "7711:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16197,
                  "src": "7694:23:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16179,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "7694:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 16180,
                    "nodeType": "ArrayTypeName",
                    "src": "7694:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7528:195:42"
            },
            "returnParameters": {
              "id": 16187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16197,
                  "src": "7761:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7761:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7760:6:42"
            },
            "scope": 17877,
            "src": "7509:456:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16368,
              "nodeType": "Block",
              "src": "9306:1913:42",
              "statements": [
                {
                  "assignments": [
                    16219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16219,
                      "mutability": "mutable",
                      "name": "erc721Address",
                      "nameLocation": "9324:13:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 16368,
                      "src": "9316:21:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16218,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9316:7:42",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16223,
                  "initialValue": {
                    "baseExpression": {
                      "id": 16220,
                      "name": "factoryAddresses_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16207,
                      "src": "9340:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 16222,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 16221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9358:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9340:20:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9316:44:42"
                },
                {
                  "expression": {
                    "id": 16228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16224,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15917,
                      "src": "9370:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 16225,
                        "name": "factoryAddresses_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16207,
                        "src": "9379:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 16227,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 16226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9397:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9379:20:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9370:29:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16229,
                  "nodeType": "ExpressionStatement",
                  "src": "9370:29:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16231,
                          "name": "erc721Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16219,
                          "src": "9430:13:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9455:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9447:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16232,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9447:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9447:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9430:27:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a20496e76616c6964206d696e7465722c20207a65726f2061646472657373",
                        "id": 16237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9471:46:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17a58682b4a194348f2f85dfc6e6e84deae3a6889f6b609c81e256e8553e444b",
                          "typeString": "literal_string \"ERC20Template: Invalid minter,  zero address\""
                        },
                        "value": "ERC20Template: Invalid minter,  zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17a58682b4a194348f2f85dfc6e6e84deae3a6889f6b609c81e256e8553e444b",
                          "typeString": "literal_string \"ERC20Template: Invalid minter,  zero address\""
                        }
                      ],
                      "id": 16230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9409:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9409:118:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16239,
                  "nodeType": "ExpressionStatement",
                  "src": "9409:118:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16241,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15917,
                          "src": "9559:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9577:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9569:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16242,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9569:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9569:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9559:20:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a20496e76616c696420726f757465722c207a65726f2061646472657373",
                        "id": 16247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9593:45:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_913f63a258d169030e65466d70d20bcca191415fe678e58d5beea11e5bd55b42",
                          "typeString": "literal_string \"ERC20Template: Invalid router, zero address\""
                        },
                        "value": "ERC20Template: Invalid router, zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_913f63a258d169030e65466d70d20bcca191415fe678e58d5beea11e5bd55b42",
                          "typeString": "literal_string \"ERC20Template: Invalid router, zero address\""
                        }
                      ],
                      "id": 16240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9538:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9538:110:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16249,
                  "nodeType": "ExpressionStatement",
                  "src": "9538:110:42"
                },
                {
                  "expression": {
                    "id": 16252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16250,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15887,
                      "src": "9764:4:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
                      "id": 16251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9771:66:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9935"
                      },
                      "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                    },
                    "src": "9764:73:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16253,
                  "nodeType": "ExpressionStatement",
                  "src": "9764:73:42"
                },
                {
                  "expression": {
                    "id": 16258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16254,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15883,
                      "src": "9847:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 16255,
                        "name": "strings_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16201,
                        "src": "9855:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16257,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 16256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9864:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9855:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9847:19:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 16259,
                  "nodeType": "ExpressionStatement",
                  "src": "9847:19:42"
                },
                {
                  "expression": {
                    "id": 16264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16260,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15885,
                      "src": "9876:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 16261,
                        "name": "strings_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16201,
                        "src": "9886:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16263,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 16262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9895:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9886:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9876:21:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 16265,
                  "nodeType": "ExpressionStatement",
                  "src": "9876:21:42"
                },
                {
                  "expression": {
                    "id": 16268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16266,
                      "name": "_erc721Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15895,
                      "src": "9907:14:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 16267,
                      "name": "erc721Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16219,
                      "src": "9924:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9907:30:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16269,
                  "nodeType": "ExpressionStatement",
                  "src": "9907:30:42"
                },
                {
                  "expression": {
                    "id": 16272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16270,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15893,
                      "src": "9947:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 16271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9961:4:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9947:18:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16273,
                  "nodeType": "ExpressionStatement",
                  "src": "9947:18:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 16275,
                          "name": "addresses_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16204,
                          "src": "10076:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 16277,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 16276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10087:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10076:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16274,
                      "name": "_addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21276,
                      "src": "10065:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 16278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10065:25:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16279,
                  "nodeType": "ExpressionStatement",
                  "src": "10065:25:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 16287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 16280,
                        "name": "addresses_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16204,
                        "src": "10104:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 16282,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 16281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10115:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10104:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 16285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10129:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 16284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10121:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 16283,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10121:7:42",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 16286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10121:10:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10104:27:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16307,
                  "nodeType": "IfStatement",
                  "src": "10100:267:42",
                  "trueBody": {
                    "id": 16306,
                    "nodeType": "Block",
                    "src": "10133:234:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 16289,
                                "name": "addresses_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16204,
                                "src": "10168:10:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 16291,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 16290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10179:1:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10168:13:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 16288,
                            "name": "_setPaymentCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17315,
                            "src": "10147:20:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 16292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10147:35:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16293,
                        "nodeType": "ExpressionStatement",
                        "src": "10147:35:42"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16295,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10238:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 16296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10238:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 16297,
                                "name": "addresses_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16204,
                                "src": "10266:10:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 16299,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 16298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10277:1:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10266:13:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 16300,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10297:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 16301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10297:15:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 16302,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10330:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 16303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "10330:12:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 16294,
                            "name": "NewPaymentCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16100,
                            "src": "10201:19:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 16304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10201:155:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16305,
                        "nodeType": "EmitStatement",
                        "src": "10196:160:42"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 16312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16308,
                      "name": "publishMarketFeeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15899,
                      "src": "10376:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 16309,
                        "name": "addresses_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16204,
                        "src": "10402:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 16311,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 16310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10413:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10402:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10376:39:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16313,
                  "nodeType": "ExpressionStatement",
                  "src": "10376:39:42"
                },
                {
                  "expression": {
                    "id": 16318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16314,
                      "name": "publishMarketFeeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15901,
                      "src": "10425:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 16315,
                        "name": "addresses_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16204,
                        "src": "10449:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 16317,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 16316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10460:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10449:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10425:37:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16319,
                  "nodeType": "ExpressionStatement",
                  "src": "10425:37:42"
                },
                {
                  "expression": {
                    "id": 16324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16320,
                      "name": "publishMarketFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15903,
                      "src": "10472:22:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 16321,
                        "name": "uints_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16210,
                        "src": "10497:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 16323,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 16322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10504:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10497:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10472:34:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16325,
                  "nodeType": "ExpressionStatement",
                  "src": "10472:34:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16327,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10558:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10558:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16329,
                        "name": "publishMarketFeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15899,
                        "src": "10582:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16330,
                        "name": "publishMarketFeeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15901,
                        "src": "10619:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16331,
                        "name": "publishMarketFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15903,
                        "src": "10654:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16326,
                      "name": "PublishMarketFeeChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16012,
                      "src": "10521:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 16332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10521:165:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16333,
                  "nodeType": "EmitStatement",
                  "src": "10516:170:42"
                },
                {
                  "assignments": [
                    16335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16335,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nameLocation": "10704:7:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 16368,
                      "src": "10696:15:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16334,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10696:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16336,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10696:15:42"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10730:44:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10744:20:42",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "10755:7:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10755:9:42"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "10744:7:42"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 16335,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10744:7:42",
                      "valueSize": 1
                    }
                  ],
                  "id": 16337,
                  "nodeType": "InlineAssembly",
                  "src": "10721:53:42"
                },
                {
                  "expression": {
                    "id": 16364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16338,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15908,
                      "src": "10783:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                  "id": 16343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10884:84:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  },
                                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  }
                                ],
                                "id": 16342,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "10853:9:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 16344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10853:133:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 16348,
                                      "name": "_name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15883,
                                      "src": "11020:5:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    ],
                                    "id": 16347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11014:5:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 16346,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11014:5:42",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 16349,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11014:12:42",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes storage pointer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes storage pointer"
                                  }
                                ],
                                "id": 16345,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "11004:9:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 16350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11004:23:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 16354,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11061:3:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                        "typeString": "literal_string \"1\""
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                        "typeString": "literal_string \"1\""
                                      }
                                    ],
                                    "id": 16353,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11055:5:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 16352,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11055:5:42",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 16355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11055:10:42",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 16351,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "11045:9:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 16356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11045:21:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 16357,
                              "name": "chainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16335,
                              "src": "11121:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 16360,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11154:4:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Template_$17877",
                                    "typeString": "contract ERC20Template"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Template_$17877",
                                    "typeString": "contract ERC20Template"
                                  }
                                ],
                                "id": 16359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11146:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 16358,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11146:7:42",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 16361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11146:13:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 16340,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "10825:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 16341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "10825:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 16362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10825:348:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 16339,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "10802:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 16363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10802:381:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10783:400:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 16365,
                  "nodeType": "ExpressionStatement",
                  "src": "10783:400:42"
                },
                {
                  "expression": {
                    "id": 16366,
                    "name": "initialized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15893,
                    "src": "11201:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16217,
                  "id": 16367,
                  "nodeType": "Return",
                  "src": "11194:18:42"
                }
              ]
            },
            "documentation": {
              "id": 16198,
              "nodeType": "StructuredDocumentation",
              "src": "7971:1108:42",
              "text": " @dev _initialize\n      Private function called on contract initialization.\n @param strings_ refers to an array of strings\n                      [0] = name token\n                      [1] = symbol\n @param addresses_ refers to an array of addresses passed by user\n                     [0]  = minter account who can mint datatokens (can have multiple minters)\n                     [1]  = paymentCollector  initial paymentCollector  for this DT\n                     [2]  = publishing Market Address\n                     [3]  = publishing Market Fee Token\n @param factoryAddresses_ refers to an array of addresses passed by the factory\n                     [0]  = erc721Address\n                     [1]  = router address\n @param uints_  refers to an array of uints\n                     [0] = cap_ the total ERC20 cap\n                     [1] = publishing Market Fee Amount\n param bytes_  refers to an array of bytes\n                     Currently not used, usefull for future templates"
            },
            "id": 16369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initialize",
            "nameLocation": "9093:11:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16201,
                  "mutability": "mutable",
                  "name": "strings_",
                  "nameLocation": "9130:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16369,
                  "src": "9114:24:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16199,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "9114:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 16200,
                    "nodeType": "ArrayTypeName",
                    "src": "9114:8:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16204,
                  "mutability": "mutable",
                  "name": "addresses_",
                  "nameLocation": "9165:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16369,
                  "src": "9148:27:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16202,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9148:7:42",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16203,
                    "nodeType": "ArrayTypeName",
                    "src": "9148:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16207,
                  "mutability": "mutable",
                  "name": "factoryAddresses_",
                  "nameLocation": "9202:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16369,
                  "src": "9185:34:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16205,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9185:7:42",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16206,
                    "nodeType": "ArrayTypeName",
                    "src": "9185:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16210,
                  "mutability": "mutable",
                  "name": "uints_",
                  "nameLocation": "9246:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16369,
                  "src": "9229:23:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16208,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9229:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16209,
                    "nodeType": "ArrayTypeName",
                    "src": "9229:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16213,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16369,
                  "src": "9262:14:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16211,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "9262:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 16212,
                    "nodeType": "ArrayTypeName",
                    "src": "9262:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9104:178:42"
            },
            "returnParameters": {
              "id": 16217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16216,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16369,
                  "src": "9300:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16215,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9300:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9299:6:42"
            },
            "scope": 17877,
            "src": "9084:2135:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 16458,
              "nodeType": "Block",
              "src": "12817:678:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 16389,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28597,
                            "src": "12835:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 16390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12835:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 16391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12852:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12835:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a20746f6b656e7320616c7265616479206d696e746564",
                        "id": 16393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12855:38:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2456f69cf03975c7645133a05194b609eeb10a9a91c5c538f004673567c0500",
                          "typeString": "literal_string \"ERC20Template: tokens already minted\""
                        },
                        "value": "ERC20Template: tokens already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2456f69cf03975c7645133a05194b609eeb10a9a91c5c538f004673567c0500",
                          "typeString": "literal_string \"ERC20Template: tokens already minted\""
                        }
                      ],
                      "id": 16388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12827:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12827:67:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16395,
                  "nodeType": "ExpressionStatement",
                  "src": "12827:67:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 16397,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16379,
                          "src": "12915:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 16399,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 16398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12925:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12915:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16396,
                      "name": "_addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21276,
                      "src": "12904:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 16400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12904:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16401,
                  "nodeType": "ExpressionStatement",
                  "src": "12904:24:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 16403,
                            "name": "ssParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16373,
                            "src": "13018:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 16405,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 16404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13027:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13018:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 16407,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15917,
                                  "src": "13048:6:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 16406,
                                "name": "IFactoryRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4096,
                                "src": "13033:14:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$",
                                  "typeString": "type(contract IFactoryRouter)"
                                }
                              },
                              "id": 16408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13033:22:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactoryRouter_$4096",
                                "typeString": "contract IFactoryRouter"
                              }
                            },
                            "id": 16409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMinVestingPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3957,
                            "src": "13033:42:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 16410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13033:44:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13018:59:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a2056657374696e6720706572696f6420746f6f206c6f772e2053656520466163746f7279526f757465722e6d696e56657374696e67506572696f64496e426c6f636b73",
                        "id": 16412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13091:83:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a392b8de34db9b58222d8a07ada86306e4b876728850068292beb7ca6d044f3f",
                          "typeString": "literal_string \"ERC20Template: Vesting period too low. See FactoryRouter.minVestingPeriodInBlocks\""
                        },
                        "value": "ERC20Template: Vesting period too low. See FactoryRouter.minVestingPeriodInBlocks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a392b8de34db9b58222d8a07ada86306e4b876728850068292beb7ca6d044f3f",
                          "typeString": "literal_string \"ERC20Template: Vesting period too low. See FactoryRouter.minVestingPeriodInBlocks\""
                        }
                      ],
                      "id": 16402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12997:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12997:187:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16414,
                  "nodeType": "ExpressionStatement",
                  "src": "12997:187:42"
                },
                {
                  "assignments": [
                    16420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16420,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "13213:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 16458,
                      "src": "13195:24:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                        "typeString": "address[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 16418,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13195:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 16419,
                        "length": {
                          "hexValue": "32",
                          "id": 16417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13203:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "13195:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                          "typeString": "address[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16429,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 16423,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13231:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Template_$17877",
                              "typeString": "contract ERC20Template"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Template_$17877",
                              "typeString": "contract ERC20Template"
                            }
                          ],
                          "id": 16422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13223:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16421,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13223:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13223:13:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 16425,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16379,
                          "src": "13238:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 16427,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 16426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13248:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13238:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 16428,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "13222:29:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                      "typeString": "address[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13195:56:42"
                },
                {
                  "expression": {
                    "id": 16440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16430,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16386,
                      "src": "13261:4:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16435,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16420,
                          "src": "13315:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                            "typeString": "address[2] memory"
                          }
                        },
                        {
                          "id": 16436,
                          "name": "ssParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16373,
                          "src": "13335:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 16437,
                          "name": "swapFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16376,
                          "src": "13357:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 16438,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16379,
                          "src": "13379:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                            "typeString": "address[2] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 16432,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15917,
                              "src": "13283:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 16431,
                            "name": "IFactoryRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4096,
                            "src": "13268:14:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$",
                              "typeString": "type(contract IFactoryRouter)"
                            }
                          },
                          "id": 16433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13268:22:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactoryRouter_$4096",
                            "typeString": "contract IFactoryRouter"
                          }
                        },
                        "id": 16434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deployPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3915,
                        "src": "13268:33:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (address[2] memory,uint256[] memory,uint256[] memory,address[] memory) external returns (address)"
                        }
                      },
                      "id": 16439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13268:130:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13261:137:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16441,
                  "nodeType": "ExpressionStatement",
                  "src": "13261:137:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16445,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16386,
                        "src": "13427:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16442,
                        "name": "deployedPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15920,
                        "src": "13408:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 16444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "13408:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 16446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13408:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16447,
                  "nodeType": "ExpressionStatement",
                  "src": "13408:24:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16449,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16386,
                        "src": "13455:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 16450,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16379,
                          "src": "13461:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 16452,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 16451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13471:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13461:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 16453,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16379,
                          "src": "13475:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 16455,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 16454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13485:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13475:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16448,
                      "name": "NewPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16066,
                      "src": "13447:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 16456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13447:41:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16457,
                  "nodeType": "EmitStatement",
                  "src": "13442:46:42"
                }
              ]
            },
            "documentation": {
              "id": 16370,
              "nodeType": "StructuredDocumentation",
              "src": "11225:1391:42",
              "text": " @dev deployPool\n      Function to deploy new Pool with 1SS. It also has a vesting schedule.\n     This function can only be called ONCE and ONLY if no token have been minted yet.\n      Requires baseToken approval\n @param ssParams params for the ssContract. \n                     [0]  = rate (wei)\n                     [1]  = baseToken decimals\n                     [2]  = vesting amount (wei)\n                     [3]  = vested blocks\n                     [4]  = initial liquidity in baseToken for pool creation\n @param swapFees swapFees (swapFee, swapMarketFee), swapOceanFee will be set automatically later\n                     [0] = swapFee for LP Providers\n                     [1] = swapFee for marketplace runner\n.\n @param addresses refers to an array of addresses passed by user\n                     [0]  = side staking contract address\n                     [1]  = baseToken address for pool creation(OCEAN or other)\n                     [2]  = baseTokenSender user which will provide the baseToken amount for initial liquidity\n                     [3]  = publisherAddress user which will be assigned the vested amount\n                     [4]  = marketFeeCollector marketFeeCollector address\n[5] = poolTemplateAddress"
            },
            "functionSelector": "5bfe4da0",
            "id": 16459,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16382,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16381,
                  "name": "onlyERC20Deployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16165,
                  "src": "12763:17:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "12763:17:42"
              },
              {
                "id": 16384,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16383,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27764,
                  "src": "12781:12:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "12781:12:42"
              }
            ],
            "name": "deployPool",
            "nameLocation": "12631:10:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16373,
                  "mutability": "mutable",
                  "name": "ssParams",
                  "nameLocation": "12668:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16459,
                  "src": "12651:25:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16371,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12651:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16372,
                    "nodeType": "ArrayTypeName",
                    "src": "12651:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16376,
                  "mutability": "mutable",
                  "name": "swapFees",
                  "nameLocation": "12703:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16459,
                  "src": "12686:25:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16374,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12686:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16375,
                    "nodeType": "ArrayTypeName",
                    "src": "12686:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16379,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "12738:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16459,
                  "src": "12721:26:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16377,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12721:7:42",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16378,
                    "nodeType": "ArrayTypeName",
                    "src": "12721:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12641:112:42"
            },
            "returnParameters": {
              "id": 16387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16386,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "12811:4:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16459,
                  "src": "12803:12:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12803:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12802:14:42"
            },
            "scope": 17877,
            "src": "12622:873:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16518,
              "nodeType": "Block",
              "src": "14060:435:42",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 16477,
                        "name": "uints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16468,
                        "src": "14140:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 16479,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 16478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14146:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14140:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 16480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14151:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14140:12:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16486,
                  "nodeType": "IfStatement",
                  "src": "14136:47:42",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 16483,
                          "name": "fixedPriceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16462,
                          "src": "14165:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 16482,
                        "name": "_addMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21276,
                        "src": "14154:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 16484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14154:29:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 16485,
                    "nodeType": "ExpressionStatement",
                    "src": "14154:29:42"
                  }
                },
                {
                  "expression": {
                    "id": 16496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16487,
                      "name": "exchangeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16475,
                      "src": "14193:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16492,
                          "name": "fixedPriceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16462,
                          "src": "14258:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 16493,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16465,
                          "src": "14289:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 16494,
                          "name": "uints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16468,
                          "src": "14312:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 16489,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15917,
                              "src": "14221:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 16488,
                            "name": "IFactoryRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4096,
                            "src": "14206:14:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$",
                              "typeString": "type(contract IFactoryRouter)"
                            }
                          },
                          "id": 16490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14206:22:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactoryRouter_$4096",
                            "typeString": "contract IFactoryRouter"
                          }
                        },
                        "id": 16491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deployFixedRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3928,
                        "src": "14206:38:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (address,address[] memory,uint256[] memory) external returns (bytes32)"
                        }
                      },
                      "id": 16495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14206:121:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "14193:134:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 16497,
                  "nodeType": "ExpressionStatement",
                  "src": "14193:134:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16499,
                        "name": "exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16475,
                        "src": "14355:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 16500,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16465,
                          "src": "14367:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 16502,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 16501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14377:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14367:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16503,
                        "name": "fixedPriceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16462,
                        "src": "14381:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 16504,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16465,
                          "src": "14400:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 16506,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 16505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14410:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14400:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16498,
                      "name": "NewFixedRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16086,
                      "src": "14342:12:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address,address)"
                      }
                    },
                    "id": 16507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14342:71:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16508,
                  "nodeType": "EmitStatement",
                  "src": "14337:76:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 16513,
                            "name": "fixedPriceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16462,
                            "src": "14457:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 16514,
                            "name": "exchangeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16475,
                            "src": "14475:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 16512,
                          "name": "fixedRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15925,
                          "src": "14447:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_fixedRate_$15925_storage_ptr_$",
                            "typeString": "type(struct ERC20Template.fixedRate storage pointer)"
                          }
                        },
                        "id": 16515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14447:39:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_fixedRate_$15925_memory_ptr",
                          "typeString": "struct ERC20Template.fixedRate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_fixedRate_$15925_memory_ptr",
                          "typeString": "struct ERC20Template.fixedRate memory"
                        }
                      ],
                      "expression": {
                        "id": 16509,
                        "name": "fixedRateExchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15929,
                        "src": "14423:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                          "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                        }
                      },
                      "id": 16511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "14423:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage_ptr_$_t_struct$_fixedRate_$15925_storage_$returns$__$bound_to$_t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct ERC20Template.fixedRate storage ref[] storage pointer,struct ERC20Template.fixedRate storage ref)"
                      }
                    },
                    "id": 16516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14423:64:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16517,
                  "nodeType": "ExpressionStatement",
                  "src": "14423:64:42"
                }
              ]
            },
            "documentation": {
              "id": 16460,
              "nodeType": "StructuredDocumentation",
              "src": "13501:351:42",
              "text": " @dev createFixedRate\n      Creates a new FixedRateExchange setup.\n @param fixedPriceAddress fixedPriceAddress\n @param addresses array of addresses [baseToken,owner,marketFeeCollector]\n @param uints array of uints [baseTokenDecimals,datatokenDecimals, fixedRate, marketFee, withMint]\n @return exchangeId"
            },
            "functionSelector": "8b96412b",
            "id": 16519,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16471,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16470,
                  "name": "onlyERC20Deployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16165,
                  "src": "14000:17:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "14000:17:42"
              },
              {
                "id": 16473,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16472,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27764,
                  "src": "14018:12:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "14018:12:42"
              }
            ],
            "name": "createFixedRate",
            "nameLocation": "13866:15:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16462,
                  "mutability": "mutable",
                  "name": "fixedPriceAddress",
                  "nameLocation": "13899:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16519,
                  "src": "13891:25:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13891:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16465,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "13943:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16519,
                  "src": "13926:26:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16463,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13926:7:42",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16464,
                    "nodeType": "ArrayTypeName",
                    "src": "13926:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16468,
                  "mutability": "mutable",
                  "name": "uints",
                  "nameLocation": "13979:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16519,
                  "src": "13962:22:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16466,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13962:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16467,
                    "nodeType": "ArrayTypeName",
                    "src": "13962:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13881:109:42"
            },
            "returnParameters": {
              "id": 16476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16475,
                  "mutability": "mutable",
                  "name": "exchangeId",
                  "nameLocation": "14048:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16519,
                  "src": "14040:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16474,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14040:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14039:20:42"
            },
            "scope": 17877,
            "src": "13857:638:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16569,
              "nodeType": "Block",
              "src": "15119:403:42",
              "statements": [
                {
                  "condition": {
                    "id": 16537,
                    "name": "withMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16528,
                    "src": "15199:8:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16542,
                  "nodeType": "IfStatement",
                  "src": "15195:36:42",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 16539,
                          "name": "_dispenser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16522,
                          "src": "15220:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 16538,
                        "name": "_addMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21276,
                        "src": "15209:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 16540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15209:22:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 16541,
                    "nodeType": "ExpressionStatement",
                    "src": "15209:22:42"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16546,
                        "name": "_dispenser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16522,
                        "src": "15257:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16543,
                        "name": "dispensers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15932,
                        "src": "15241:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 16545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "15241:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 16547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15241:27:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16548,
                  "nodeType": "ExpressionStatement",
                  "src": "15241:27:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16550,
                        "name": "_dispenser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16522,
                        "src": "15296:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16549,
                      "name": "NewDispenser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16090,
                      "src": "15283:12:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 16551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15283:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16552,
                  "nodeType": "EmitStatement",
                  "src": "15278:29:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16557,
                        "name": "_dispenser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16522,
                        "src": "15369:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 16560,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15401:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Template_$17877",
                              "typeString": "contract ERC20Template"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Template_$17877",
                              "typeString": "contract ERC20Template"
                            }
                          ],
                          "id": 16559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15393:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16558,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15393:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15393:13:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16562,
                        "name": "maxTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16524,
                        "src": "15420:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16563,
                        "name": "maxBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16526,
                        "src": "15443:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 16564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15467:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15467:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16566,
                        "name": "allowedSwapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16530,
                        "src": "15491:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 16554,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15917,
                            "src": "15332:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 16553,
                          "name": "IFactoryRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4096,
                          "src": "15317:14:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$",
                            "typeString": "type(contract IFactoryRouter)"
                          }
                        },
                        "id": 16555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15317:22:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactoryRouter_$4096",
                          "typeString": "contract IFactoryRouter"
                        }
                      },
                      "id": 16556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deployDispenser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3972,
                      "src": "15317:38:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address,address) external"
                      }
                    },
                    "id": 16567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15317:198:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16568,
                  "nodeType": "ExpressionStatement",
                  "src": "15317:198:42"
                }
              ]
            },
            "documentation": {
              "id": 16520,
              "nodeType": "StructuredDocumentation",
              "src": "14501:404:42",
              "text": " @dev createDispenser\n      Creates a new Dispenser\n @param _dispenser dispenser contract address\n @param maxTokens - max tokens to dispense\n @param maxBalance - max balance of requester.\n @param withMint - true if we want to allow the dispenser to be a minter\n @param allowedSwapper - only account that can ask tokens. set address(0) if not required"
            },
            "functionSelector": "191c918a",
            "id": 16570,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16532,
                  "name": "onlyERC20Deployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16165,
                  "src": "15088:17:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "15088:17:42"
              },
              {
                "id": 16535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16534,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27764,
                  "src": "15106:12:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "15106:12:42"
              }
            ],
            "name": "createDispenser",
            "nameLocation": "14919:15:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16522,
                  "mutability": "mutable",
                  "name": "_dispenser",
                  "nameLocation": "14952:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "14944:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14944:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16524,
                  "mutability": "mutable",
                  "name": "maxTokens",
                  "nameLocation": "14980:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "14972:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14972:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16526,
                  "mutability": "mutable",
                  "name": "maxBalance",
                  "nameLocation": "15007:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "14999:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14999:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16528,
                  "mutability": "mutable",
                  "name": "withMint",
                  "nameLocation": "15032:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "15027:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16527,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15027:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16530,
                  "mutability": "mutable",
                  "name": "allowedSwapper",
                  "nameLocation": "15058:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "15050:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15050:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14934:144:42"
            },
            "returnParameters": {
              "id": 16536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15119:0:42"
            },
            "scope": 17877,
            "src": "14910:612:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16603,
              "nodeType": "Block",
              "src": "15894:236:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 16579,
                            "name": "permissions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21169,
                            "src": "15912:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RolesERC20_$21177_storage_$",
                              "typeString": "mapping(address => struct ERC20Roles.RolesERC20 storage ref)"
                            }
                          },
                          "id": 16582,
                          "indexExpression": {
                            "expression": {
                              "id": 16580,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15924:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 16581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "15924:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15912:23:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RolesERC20_$21177_storage",
                            "typeString": "struct ERC20Roles.RolesERC20 storage ref"
                          }
                        },
                        "id": 16583,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21174,
                        "src": "15912:30:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a204e4f54204d494e544552",
                        "id": 16584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15944:27:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b855f38fc797c9a23b8a31367acc9351f4e0a226900edee084fc323b5d66c063",
                          "typeString": "literal_string \"ERC20Template: NOT MINTER\""
                        },
                        "value": "ERC20Template: NOT MINTER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b855f38fc797c9a23b8a31367acc9351f4e0a226900edee084fc323b5d66c063",
                          "typeString": "literal_string \"ERC20Template: NOT MINTER\""
                        }
                      ],
                      "id": 16578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15904:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15904:68:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16586,
                  "nodeType": "ExpressionStatement",
                  "src": "15904:68:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 16591,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16575,
                              "src": "16021:5:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 16588,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28597,
                                "src": "16003:11:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 16589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16003:13:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 16590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28243,
                            "src": "16003:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 16592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16003:24:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 16593,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15887,
                          "src": "16031:4:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16003:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44617461746f6b656e54656d706c6174653a20636170206578636565646564",
                        "id": 16595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16049:33:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba68139f57f0fbe8534105ad7a9312832aa13f0377dac6f8e73b83f9c40d5149",
                          "typeString": "literal_string \"DatatokenTemplate: cap exceeded\""
                        },
                        "value": "DatatokenTemplate: cap exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba68139f57f0fbe8534105ad7a9312832aa13f0377dac6f8e73b83f9c40d5149",
                          "typeString": "literal_string \"DatatokenTemplate: cap exceeded\""
                        }
                      ],
                      "id": 16587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15982:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15982:110:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16597,
                  "nodeType": "ExpressionStatement",
                  "src": "15982:110:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16599,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16573,
                        "src": "16108:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16600,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16575,
                        "src": "16117:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16598,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28918,
                      "src": "16102:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 16601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16102:21:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16602,
                  "nodeType": "ExpressionStatement",
                  "src": "16102:21:42"
                }
              ]
            },
            "documentation": {
              "id": 16571,
              "nodeType": "StructuredDocumentation",
              "src": "15528:306:42",
              "text": " @dev mint\n      Only the minter address can call it.\n      msg.value should be higher than zero and gt or eq minting fee\n @param account refers to an address that token is going to be minted to.\n @param value refers to amount of tokens that is going to be minted."
            },
            "functionSelector": "40c10f19",
            "id": 16604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "15848:4:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16573,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "15861:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16604,
                  "src": "15853:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15853:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16575,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "15878:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16604,
                  "src": "15870:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15870:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15852:32:42"
            },
            "returnParameters": {
              "id": 16577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15894:0:42"
            },
            "scope": 17877,
            "src": "15839:291:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16776,
              "nodeType": "Block",
              "src": "16419:2255:42",
              "statements": [
                {
                  "assignments": [
                    16612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16612,
                      "mutability": "mutable",
                      "name": "prefix",
                      "nameLocation": "16478:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 16776,
                      "src": "16465:19:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 16611,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16465:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16614,
                  "initialValue": {
                    "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                    "id": 16613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16487:34:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                      "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                    },
                    "value": "\u0019Ethereum Signed Message:\n32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16465:56:42"
                },
                {
                  "assignments": [
                    16616
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16616,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "16539:7:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 16776,
                      "src": "16531:15:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 16615,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16531:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16638,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 16620,
                            "name": "prefix",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16612,
                            "src": "16589:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 16624,
                                      "name": "_providerFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16608,
                                      "src": "16686:12:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                        "typeString": "struct ERC20Template.providerFee calldata"
                                      }
                                    },
                                    "id": 16625,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "providerData",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15948,
                                    "src": "16686:25:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 16626,
                                      "name": "_providerFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16608,
                                      "src": "16737:12:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                        "typeString": "struct ERC20Template.providerFee calldata"
                                      }
                                    },
                                    "id": 16627,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "providerFeeAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15934,
                                    "src": "16737:31:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 16628,
                                      "name": "_providerFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16608,
                                      "src": "16794:12:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                        "typeString": "struct ERC20Template.providerFee calldata"
                                      }
                                    },
                                    "id": 16629,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "providerFeeToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15936,
                                    "src": "16794:29:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 16630,
                                      "name": "_providerFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16608,
                                      "src": "16849:12:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                        "typeString": "struct ERC20Template.providerFee calldata"
                                      }
                                    },
                                    "id": 16631,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "providerFeeAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15938,
                                    "src": "16849:30:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 16632,
                                      "name": "_providerFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16608,
                                      "src": "16905:12:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                        "typeString": "struct ERC20Template.providerFee calldata"
                                      }
                                    },
                                    "id": 16633,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "validUntil",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15946,
                                    "src": "16905:23:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 16622,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "16644:3:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 16623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "16644:16:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 16634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16644:306:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 16621,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "16613:9:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 16635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16613:355:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 16618,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16572:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 16619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "16572:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 16636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16572:410:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16617,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "16549:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 16637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16549:443:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16531:461:42"
                },
                {
                  "assignments": [
                    16640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16640,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "17010:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 16776,
                      "src": "17002:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16639,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17002:7:42",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16650,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 16642,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16616,
                        "src": "17029:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 16643,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17038:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "v",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15940,
                        "src": "17038:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 16645,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17054:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "r",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15942,
                        "src": "17054:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 16647,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17070:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "s",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15944,
                        "src": "17070:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 16641,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "17019:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 16649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17019:66:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17002:83:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16652,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16640,
                          "src": "17103:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 16653,
                            "name": "_providerFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16608,
                            "src": "17113:12:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                              "typeString": "struct ERC20Template.providerFee calldata"
                            }
                          },
                          "id": 16654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "providerFeeAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15934,
                          "src": "17113:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17103:41:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642070726f766964657220666565",
                        "id": 16656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17146:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eb2ec0cb030f8bc86e78ba789aa7828b1165afd6879d4fd90cdc0d7baa8484e",
                          "typeString": "literal_string \"Invalid provider fee\""
                        },
                        "value": "Invalid provider fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eb2ec0cb030f8bc86e78ba789aa7828b1165afd6879d4fd90cdc0d7baa8484e",
                          "typeString": "literal_string \"Invalid provider fee\""
                        }
                      ],
                      "id": 16651,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17095:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17095:74:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16658,
                  "nodeType": "ExpressionStatement",
                  "src": "17095:74:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16660,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17209:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "providerFeeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15934,
                        "src": "17209:31:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 16662,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17254:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "providerFeeToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15936,
                        "src": "17254:29:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 16664,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17297:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "providerFeeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15938,
                        "src": "17297:30:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 16666,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17341:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "providerData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15948,
                        "src": "17341:25:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 16668,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17380:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "v",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15940,
                        "src": "17380:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 16670,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17408:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "r",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15942,
                        "src": "17408:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 16672,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17436:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "s",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15944,
                        "src": "17436:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 16674,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17464:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "validUntil",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15946,
                        "src": "17464:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16659,
                      "name": "ProviderFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16046,
                      "src": "17184:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint8_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,uint8,bytes32,bytes32,uint256)"
                      }
                    },
                    "id": 16676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17184:313:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16677,
                  "nodeType": "EmitStatement",
                  "src": "17179:318:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 16697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 16689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 16678,
                            "name": "_providerFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16608,
                            "src": "17690:12:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                              "typeString": "struct ERC20Template.providerFee calldata"
                            }
                          },
                          "id": 16679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "providerFeeAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15938,
                          "src": "17690:30:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 16680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17723:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17690:34:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 16682,
                            "name": "_providerFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16608,
                            "src": "17740:12:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                              "typeString": "struct ERC20Template.providerFee calldata"
                            }
                          },
                          "id": 16683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "providerFeeToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15936,
                          "src": "17740:29:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17781:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17773:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16684,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17773:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17773:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17740:43:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "17690:93:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 16696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 16690,
                          "name": "_providerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16608,
                          "src": "17799:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                            "typeString": "struct ERC20Template.providerFee calldata"
                          }
                        },
                        "id": 16691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "providerFeeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15934,
                        "src": "17799:31:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 16694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17842:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17834:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16692,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17834:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17834:10:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "17799:45:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17690:154:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16775,
                  "nodeType": "IfStatement",
                  "src": "17673:995:42",
                  "trueBody": {
                    "id": 16774,
                    "nodeType": "Block",
                    "src": "17855:813:42",
                    "statements": [
                      {
                        "assignments": [
                          16699
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 16699,
                            "mutability": "mutable",
                            "name": "OPCFee",
                            "nameLocation": "17877:6:42",
                            "nodeType": "VariableDeclaration",
                            "scope": 16774,
                            "src": "17869:14:42",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 16698,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17869:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 16705,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 16701,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15917,
                                  "src": "17901:6:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 16700,
                                "name": "IFactoryRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4096,
                                "src": "17886:14:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$",
                                  "typeString": "type(contract IFactoryRouter)"
                                }
                              },
                              "id": 16702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17886:22:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactoryRouter_$4096",
                                "typeString": "contract IFactoryRouter"
                              }
                            },
                            "id": 16703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOPCProviderFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3952,
                            "src": "17886:40:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 16704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17886:42:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17869:59:42"
                      },
                      {
                        "assignments": [
                          16707
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 16707,
                            "mutability": "mutable",
                            "name": "OPCcut",
                            "nameLocation": "17950:6:42",
                            "nodeType": "VariableDeclaration",
                            "scope": 16774,
                            "src": "17942:14:42",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 16706,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17942:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 16709,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 16708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17959:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17942:18:42"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 16710,
                            "name": "OPCFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16699,
                            "src": "17977:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 16711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17986:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17977:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 16724,
                        "nodeType": "IfStatement",
                        "src": "17974:92:42",
                        "trueBody": {
                          "expression": {
                            "id": 16722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 16713,
                              "name": "OPCcut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16707,
                              "src": "18005:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 16720,
                                  "name": "BASE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15906,
                                  "src": "18061:4:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 16717,
                                      "name": "OPCFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16699,
                                      "src": "18049:6:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 16714,
                                        "name": "_providerFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 16608,
                                        "src": "18014:12:42",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                          "typeString": "struct ERC20Template.providerFee calldata"
                                        }
                                      },
                                      "id": 16715,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "providerFeeAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 15938,
                                      "src": "18014:30:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 16716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 28273,
                                    "src": "18014:34:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 16718,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18014:42:42",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 16719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 28288,
                                "src": "18014:46:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 16721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18014:52:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18005:61:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 16723,
                          "nodeType": "ExpressionStatement",
                          "src": "18005:61:42"
                        }
                      },
                      {
                        "assignments": [
                          16726
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 16726,
                            "mutability": "mutable",
                            "name": "providerCut",
                            "nameLocation": "18088:11:42",
                            "nodeType": "VariableDeclaration",
                            "scope": 16774,
                            "src": "18080:19:42",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 16725,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18080:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 16732,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 16730,
                              "name": "OPCcut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16707,
                              "src": "18137:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 16727,
                                "name": "_providerFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16608,
                                "src": "18102:12:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                  "typeString": "struct ERC20Template.providerFee calldata"
                                }
                              },
                              "id": 16728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "providerFeeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15938,
                              "src": "18102:30:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 16729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28258,
                            "src": "18102:34:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 16731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18102:42:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18080:64:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16734,
                                "name": "_providerFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16608,
                                "src": "18175:12:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                  "typeString": "struct ERC20Template.providerFee calldata"
                                }
                              },
                              "id": 16735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "providerFeeToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15936,
                              "src": "18175:29:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 16736,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "18205:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 16737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "18205:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 16740,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "18241:4:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Template_$17877",
                                    "typeString": "contract ERC20Template"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Template_$17877",
                                    "typeString": "contract ERC20Template"
                                  }
                                ],
                                "id": 16739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18233:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 16738,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18233:7:42",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 16741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18233:13:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 16742,
                                "name": "_providerFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16608,
                                "src": "18264:12:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                  "typeString": "struct ERC20Template.providerFee calldata"
                                }
                              },
                              "id": 16743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "providerFeeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15938,
                              "src": "18264:30:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 16733,
                            "name": "_pullUnderlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17719,
                            "src": "18159:15:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 16744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18159:136:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16745,
                        "nodeType": "ExpressionStatement",
                        "src": "18159:136:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16751,
                                "name": "_providerFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16608,
                                "src": "18377:12:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                  "typeString": "struct ERC20Template.providerFee calldata"
                                }
                              },
                              "id": 16752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "providerFeeAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15934,
                              "src": "18377:31:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16753,
                              "name": "providerCut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16726,
                              "src": "18426:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 16747,
                                    "name": "_providerFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16608,
                                    "src": "18316:12:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                      "typeString": "struct ERC20Template.providerFee calldata"
                                    }
                                  },
                                  "id": 16748,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "providerFeeToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15936,
                                  "src": "18316:29:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 16746,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27843,
                                "src": "18309:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 16749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18309:37:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27843",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 16750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27874,
                            "src": "18309:50:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27843_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27843_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 16754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18309:142:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16755,
                        "nodeType": "ExpressionStatement",
                        "src": "18309:142:42"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 16756,
                            "name": "OPCcut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16707,
                            "src": "18468:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 16757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18477:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "18468:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 16773,
                        "nodeType": "IfStatement",
                        "src": "18465:193:42",
                        "trueBody": {
                          "id": 16772,
                          "nodeType": "Block",
                          "src": "18479:179:42",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 16765,
                                            "name": "router",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 15917,
                                            "src": "18578:6:42",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 16764,
                                          "name": "IFactoryRouter",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4096,
                                          "src": "18563:14:42",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$",
                                            "typeString": "type(contract IFactoryRouter)"
                                          }
                                        },
                                        "id": 16766,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18563:22:42",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IFactoryRouter_$4096",
                                          "typeString": "contract IFactoryRouter"
                                        }
                                      },
                                      "id": 16767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getOPCCollector",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4095,
                                      "src": "18563:38:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 16768,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18563:40:42",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 16769,
                                    "name": "OPCcut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16707,
                                    "src": "18621:6:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 16760,
                                          "name": "_providerFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 16608,
                                          "src": "18502:12:42",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                                            "typeString": "struct ERC20Template.providerFee calldata"
                                          }
                                        },
                                        "id": 16761,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "providerFeeToken",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 15936,
                                        "src": "18502:29:42",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 16759,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27843,
                                      "src": "18495:6:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 16762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18495:37:42",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$27843",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 16763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 27874,
                                  "src": "18495:50:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27843_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27843_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 16770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18495:146:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 16771,
                              "nodeType": "ExpressionStatement",
                              "src": "18495:146:42"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 16605,
              "nodeType": "StructuredDocumentation",
              "src": "16141:203:42",
              "text": " @dev _checkProviderFee\n      Checks if a providerFee structure is valid, signed and \n      transfers fee to providerAddress\n @param _providerFee providerFee structure"
            },
            "id": 16777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkProviderFee",
            "nameLocation": "16358:17:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16608,
                  "mutability": "mutable",
                  "name": "_providerFee",
                  "nameLocation": "16397:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16777,
                  "src": "16376:33:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                    "typeString": "struct ERC20Template.providerFee"
                  },
                  "typeName": {
                    "id": 16607,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16606,
                      "name": "providerFee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15949,
                      "src": "16376:11:42"
                    },
                    "referencedDeclaration": 15949,
                    "src": "16376:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_providerFee_$15949_storage_ptr",
                      "typeString": "struct ERC20Template.providerFee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16375:35:42"
            },
            "returnParameters": {
              "id": 16610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16419:0:42"
            },
            "scope": 17877,
            "src": "16349:2325:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16931,
              "nodeType": "Block",
              "src": "19328:2385:42",
              "statements": [
                {
                  "assignments": [
                    16794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16794,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "19346:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 16931,
                      "src": "19338:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19338:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16796,
                  "initialValue": {
                    "hexValue": "31653138",
                    "id": 16795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19355:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19338:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16799,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "19440:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 16800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "19440:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 16798,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28611,
                            "src": "19430:9:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 16801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19430:21:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 16802,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16794,
                          "src": "19455:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19430:31:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682064617461746f6b656e7320746f207374617274204f72646572",
                        "id": 16804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19475:38:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2fb433bc65a1adf47fe35c09caf2b66194c4e8f335bac7afc336a5965ea5a6ac",
                          "typeString": "literal_string \"Not enough datatokens to start Order\""
                        },
                        "value": "Not enough datatokens to start Order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2fb433bc65a1adf47fe35c09caf2b66194c4e8f335bac7afc336a5965ea5a6ac",
                          "typeString": "literal_string \"Not enough datatokens to start Order\""
                        }
                      ],
                      "id": 16797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19409:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19409:114:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16806,
                  "nodeType": "ExpressionStatement",
                  "src": "19409:114:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16808,
                        "name": "consumer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16780,
                        "src": "19564:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 16809,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19586:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19586:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16811,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16794,
                        "src": "19610:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16812,
                        "name": "serviceIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16782,
                        "src": "19630:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 16813,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "19656:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 16814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "19656:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16815,
                        "name": "publishMarketFeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15899,
                        "src": "19685:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 16816,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "19722:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 16817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "19722:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16807,
                      "name": "OrderStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15972,
                      "src": "19538:12:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,address,uint256)"
                      }
                    },
                    "id": 16818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19538:206:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16819,
                  "nodeType": "EmitStatement",
                  "src": "19533:211:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 16836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 16829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16820,
                          "name": "publishMarketFeeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15903,
                          "src": "19975:22:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 16821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20000:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19975:26:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16823,
                          "name": "publishMarketFeeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15901,
                          "src": "20017:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20050:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "20042:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16824,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20042:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20042:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "20017:35:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "19975:77:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 16835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 16830,
                        "name": "publishMarketFeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15899,
                        "src": "20068:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 16833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20103:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20095:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20095:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20095:10:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "20068:37:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19975:130:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16852,
                  "nodeType": "IfStatement",
                  "src": "19958:495:42",
                  "trueBody": {
                    "id": 16851,
                    "nodeType": "Block",
                    "src": "20116:337:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 16838,
                              "name": "publishMarketFeeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15901,
                              "src": "20146:21:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 16839,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "20168:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 16840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "20168:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16841,
                              "name": "publishMarketFeeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15899,
                              "src": "20196:23:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16842,
                              "name": "publishMarketFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15903,
                              "src": "20237:22:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 16837,
                            "name": "_pullUnderlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17719,
                            "src": "20130:15:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 16843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20130:130:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16844,
                        "nodeType": "ExpressionStatement",
                        "src": "20130:130:42"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 16846,
                              "name": "publishMarketFeeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15899,
                              "src": "20326:23:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16847,
                              "name": "publishMarketFeeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15901,
                              "src": "20367:21:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16848,
                              "name": "publishMarketFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15903,
                              "src": "20406:22:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 16845,
                            "name": "PublishMarketFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16020,
                            "src": "20292:16:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 16849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20292:150:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16850,
                        "nodeType": "EmitStatement",
                        "src": "20287:155:42"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 16872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 16864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 16853,
                            "name": "_consumeMarketFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16788,
                            "src": "20646:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr",
                              "typeString": "struct ERC20Template.consumeMarketFee calldata"
                            }
                          },
                          "id": 16854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "consumeMarketFeeAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15955,
                          "src": "20646:40:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 16855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20689:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "20646:44:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 16857,
                            "name": "_consumeMarketFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16788,
                            "src": "20706:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr",
                              "typeString": "struct ERC20Template.consumeMarketFee calldata"
                            }
                          },
                          "id": 16858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "consumeMarketFeeToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15953,
                          "src": "20706:39:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20757:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "20749:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16859,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20749:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20749:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "20706:53:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "20646:113:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 16871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 16865,
                          "name": "_consumeMarketFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16788,
                          "src": "20775:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr",
                            "typeString": "struct ERC20Template.consumeMarketFee calldata"
                          }
                        },
                        "id": 16866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "consumeMarketFeeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15951,
                        "src": "20775:41:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 16869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20828:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20820:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 16867,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20820:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 16870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20820:10:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "20775:55:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "20646:184:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16894,
                  "nodeType": "IfStatement",
                  "src": "20629:644:42",
                  "trueBody": {
                    "id": 16893,
                    "nodeType": "Block",
                    "src": "20841:432:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16874,
                                "name": "_consumeMarketFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16788,
                                "src": "20871:17:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr",
                                  "typeString": "struct ERC20Template.consumeMarketFee calldata"
                                }
                              },
                              "id": 16875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "consumeMarketFeeToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15953,
                              "src": "20871:39:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 16876,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "20911:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 16877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "20911:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 16878,
                                "name": "_consumeMarketFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16788,
                                "src": "20939:17:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr",
                                  "typeString": "struct ERC20Template.consumeMarketFee calldata"
                                }
                              },
                              "id": 16879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "consumeMarketFeeAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15951,
                              "src": "20939:41:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 16880,
                                "name": "_consumeMarketFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16788,
                                "src": "20998:17:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr",
                                  "typeString": "struct ERC20Template.consumeMarketFee calldata"
                                }
                              },
                              "id": 16881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "consumeMarketFeeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15955,
                              "src": "20998:40:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 16873,
                            "name": "_pullUnderlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17719,
                            "src": "20855:15:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 16882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20855:184:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16883,
                        "nodeType": "ExpressionStatement",
                        "src": "20855:184:42"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16885,
                                "name": "_consumeMarketFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16788,
                                "src": "21092:17:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr",
                                  "typeString": "struct ERC20Template.consumeMarketFee calldata"
                                }
                              },
                              "id": 16886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "consumeMarketFeeAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15951,
                              "src": "21092:41:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 16887,
                                "name": "_consumeMarketFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16788,
                                "src": "21151:17:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr",
                                  "typeString": "struct ERC20Template.consumeMarketFee calldata"
                                }
                              },
                              "id": 16888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "consumeMarketFeeToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15953,
                              "src": "21151:39:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 16889,
                                "name": "_consumeMarketFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16788,
                                "src": "21208:17:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr",
                                  "typeString": "struct ERC20Template.consumeMarketFee calldata"
                                }
                              },
                              "id": 16890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "consumeMarketFeeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15955,
                              "src": "21208:40:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 16884,
                            "name": "ConsumeMarketFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16028,
                            "src": "21058:16:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 16891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21058:204:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16892,
                        "nodeType": "EmitStatement",
                        "src": "21053:209:42"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16896,
                        "name": "_providerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16785,
                        "src": "21300:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                          "typeString": "struct ERC20Template.providerFee calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                          "typeString": "struct ERC20Template.providerFee calldata"
                        }
                      ],
                      "id": 16895,
                      "name": "_checkProviderFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16777,
                      "src": "21282:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_providerFee_$15949_calldata_ptr_$returns$__$",
                        "typeString": "function (struct ERC20Template.providerFee calldata)"
                      }
                    },
                    "id": 16897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21282:31:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16898,
                  "nodeType": "ExpressionStatement",
                  "src": "21282:31:42"
                },
                {
                  "assignments": [
                    16900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16900,
                      "mutability": "mutable",
                      "name": "OPCFee",
                      "nameLocation": "21331:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 16931,
                      "src": "21323:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16899,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21323:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16906,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 16902,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15917,
                            "src": "21355:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 16901,
                          "name": "IFactoryRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4096,
                          "src": "21340:14:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$",
                            "typeString": "type(contract IFactoryRouter)"
                          }
                        },
                        "id": 16903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21340:22:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactoryRouter_$4096",
                          "typeString": "contract IFactoryRouter"
                        }
                      },
                      "id": 16904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getOPCConsumeFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3947,
                      "src": "21340:39:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 16905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21340:41:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21323:58:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 16909,
                              "name": "getPaymentCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17594,
                              "src": "21469:19:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 16910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21469:21:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 16913,
                                "name": "OPCFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16900,
                                "src": "21503:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 16911,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16794,
                                "src": "21492:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 16912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28258,
                              "src": "21492:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 16914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21492:18:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16908,
                          "name": "transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28632,
                          "src": "21460:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 16915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21460:51:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e6420445420746f207075626c6973686572",
                        "id": 16916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21525:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_505e5a3d25a2a61c542451fb77ef778c17102a417cd6b8f3e490fd904702842e",
                          "typeString": "literal_string \"Failed to send DT to publisher\""
                        },
                        "value": "Failed to send DT to publisher"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_505e5a3d25a2a61c542451fb77ef778c17102a417cd6b8f3e490fd904702842e",
                          "typeString": "literal_string \"Failed to send DT to publisher\""
                        }
                      ],
                      "id": 16907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21439:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21439:128:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16918,
                  "nodeType": "ExpressionStatement",
                  "src": "21439:128:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 16922,
                                    "name": "router",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15917,
                                    "src": "21622:6:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 16921,
                                  "name": "IFactoryRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4096,
                                  "src": "21607:14:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$",
                                    "typeString": "type(contract IFactoryRouter)"
                                  }
                                },
                                "id": 16923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21607:22:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IFactoryRouter_$4096",
                                  "typeString": "contract IFactoryRouter"
                                }
                              },
                              "id": 16924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getOPCCollector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4095,
                              "src": "21607:38:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 16925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21607:40:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 16926,
                            "name": "OPCFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16900,
                            "src": "21649:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16920,
                          "name": "transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28632,
                          "src": "21598:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 16927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21598:58:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e6420445420746f204f5043",
                        "id": 16928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21670:26:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18add486da42db80c28142050c2583e021ebac1881f9714debcbbe4b12881a0d",
                          "typeString": "literal_string \"Failed to send DT to OPC\""
                        },
                        "value": "Failed to send DT to OPC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18add486da42db80c28142050c2583e021ebac1881f9714debcbbe4b12881a0d",
                          "typeString": "literal_string \"Failed to send DT to OPC\""
                        }
                      ],
                      "id": 16919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21577:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21577:129:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16930,
                  "nodeType": "ExpressionStatement",
                  "src": "21577:129:42"
                }
              ]
            },
            "documentation": {
              "id": 16778,
              "nodeType": "StructuredDocumentation",
              "src": "18684:439:42",
              "text": " @dev startOrder\n      called by payer or consumer prior ordering a service consume on a marketplace.\n      Requires previous approval of consumeFeeToken and publishMarketFeeToken\n @param consumer is the consumer address (payer could be different address)\n @param serviceIndex service index in the metadata\n @param _providerFee provider fee\n @param _consumeMarketFee consume market fee"
            },
            "functionSelector": "79d9d7f3",
            "id": 16932,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16791,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16790,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27764,
                  "src": "19315:12:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "19315:12:42"
              }
            ],
            "name": "startOrder",
            "nameLocation": "19137:10:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16780,
                  "mutability": "mutable",
                  "name": "consumer",
                  "nameLocation": "19165:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16932,
                  "src": "19157:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19157:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16782,
                  "mutability": "mutable",
                  "name": "serviceIndex",
                  "nameLocation": "19191:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16932,
                  "src": "19183:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19183:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16785,
                  "mutability": "mutable",
                  "name": "_providerFee",
                  "nameLocation": "19234:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16932,
                  "src": "19213:33:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                    "typeString": "struct ERC20Template.providerFee"
                  },
                  "typeName": {
                    "id": 16784,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16783,
                      "name": "providerFee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15949,
                      "src": "19213:11:42"
                    },
                    "referencedDeclaration": 15949,
                    "src": "19213:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_providerFee_$15949_storage_ptr",
                      "typeString": "struct ERC20Template.providerFee"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16788,
                  "mutability": "mutable",
                  "name": "_consumeMarketFee",
                  "nameLocation": "19282:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16932,
                  "src": "19256:43:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_consumeMarketFee_$15956_calldata_ptr",
                    "typeString": "struct ERC20Template.consumeMarketFee"
                  },
                  "typeName": {
                    "id": 16787,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16786,
                      "name": "consumeMarketFee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15956,
                      "src": "19256:16:42"
                    },
                    "referencedDeclaration": 15956,
                    "src": "19256:16:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_consumeMarketFee_$15956_storage_ptr",
                      "typeString": "struct ERC20Template.consumeMarketFee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19147:158:42"
            },
            "returnParameters": {
              "id": 16792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19328:0:42"
            },
            "scope": 17877,
            "src": "19128:2585:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16957,
              "nodeType": "Block",
              "src": "22202:186:42",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16944,
                        "name": "orderTxId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16935,
                        "src": "22242:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 16945,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22265:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22265:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 16947,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "22289:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 16948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "22289:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 16949,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "22318:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 16950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "22318:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16943,
                      "name": "OrderReused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15982,
                      "src": "22217:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,uint256)"
                      }
                    },
                    "id": 16951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22217:123:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16952,
                  "nodeType": "EmitStatement",
                  "src": "22212:128:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16954,
                        "name": "_providerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16938,
                        "src": "22368:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                          "typeString": "struct ERC20Template.providerFee calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                          "typeString": "struct ERC20Template.providerFee calldata"
                        }
                      ],
                      "id": 16953,
                      "name": "_checkProviderFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16777,
                      "src": "22350:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_providerFee_$15949_calldata_ptr_$returns$__$",
                        "typeString": "function (struct ERC20Template.providerFee calldata)"
                      }
                    },
                    "id": 16955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22350:31:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16956,
                  "nodeType": "ExpressionStatement",
                  "src": "22350:31:42"
                }
              ]
            },
            "documentation": {
              "id": 16933,
              "nodeType": "StructuredDocumentation",
              "src": "21719:360:42",
              "text": " @dev reuseOrder\n      called by payer or consumer having a valid order, but with expired provider access\n      Pays the provider fee again, but it will not require a new datatoken payment\n      Requires previous approval of provider fee.\n @param orderTxId previous valid order\n @param _providerFee provider feee"
            },
            "functionSelector": "361fef49",
            "id": 16958,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16941,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16940,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27764,
                  "src": "22189:12:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "22189:12:42"
              }
            ],
            "name": "reuseOrder",
            "nameLocation": "22093:10:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16935,
                  "mutability": "mutable",
                  "name": "orderTxId",
                  "nameLocation": "22121:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16958,
                  "src": "22113:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16934,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22113:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16938,
                  "mutability": "mutable",
                  "name": "_providerFee",
                  "nameLocation": "22161:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16958,
                  "src": "22140:33:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_providerFee_$15949_calldata_ptr",
                    "typeString": "struct ERC20Template.providerFee"
                  },
                  "typeName": {
                    "id": 16937,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16936,
                      "name": "providerFee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15949,
                      "src": "22140:11:42"
                    },
                    "referencedDeclaration": 15949,
                    "src": "22140:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_providerFee_$15949_storage_ptr",
                      "typeString": "struct ERC20Template.providerFee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22103:76:42"
            },
            "returnParameters": {
              "id": 16942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22202:0:42"
            },
            "scope": 17877,
            "src": "22084:304:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16970,
              "nodeType": "Block",
              "src": "22637:36:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16967,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16961,
                        "src": "22658:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16966,
                      "name": "_addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21276,
                      "src": "22647:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 16968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22647:19:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16969,
                  "nodeType": "ExpressionStatement",
                  "src": "22647:19:42"
                }
              ]
            },
            "documentation": {
              "id": 16959,
              "nodeType": "StructuredDocumentation",
              "src": "22394:174:42",
              "text": " @dev addMinter\n      Only ERC20Deployer (at 721 level) can update.\n      There can be multiple minters\n @param _minter new minter address"
            },
            "functionSelector": "983b2d56",
            "id": 16971,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16964,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16963,
                  "name": "onlyERC20Deployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16165,
                  "src": "22619:17:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "22619:17:42"
              }
            ],
            "name": "addMinter",
            "nameLocation": "22583:9:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16961,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "22601:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16971,
                  "src": "22593:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22593:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22592:17:42"
            },
            "returnParameters": {
              "id": 16965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22637:0:42"
            },
            "scope": 17877,
            "src": "22574:99:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16983,
              "nodeType": "Block",
              "src": "22934:39:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16980,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16974,
                        "src": "22958:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16979,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21310,
                      "src": "22944:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 16981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22944:22:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16982,
                  "nodeType": "ExpressionStatement",
                  "src": "22944:22:42"
                }
              ]
            },
            "documentation": {
              "id": 16972,
              "nodeType": "StructuredDocumentation",
              "src": "22679:183:42",
              "text": " @dev removeMinter\n      Only ERC20Deployer (at 721 level) can update.\n      There can be multiple minters\n @param _minter minter address to remove"
            },
            "functionSelector": "3092afd5",
            "id": 16984,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16977,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16976,
                  "name": "onlyERC20Deployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16165,
                  "src": "22916:17:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "22916:17:42"
              }
            ],
            "name": "removeMinter",
            "nameLocation": "22877:12:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16974,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "22898:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16984,
                  "src": "22890:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22890:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22889:17:42"
            },
            "returnParameters": {
              "id": 16978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22934:0:42"
            },
            "scope": 17877,
            "src": "22868:105:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16996,
              "nodeType": "Block",
              "src": "23343:52:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16993,
                        "name": "_paymentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16987,
                        "src": "23372:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16992,
                      "name": "_addPaymentManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21380,
                      "src": "23353:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 16994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23353:35:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16995,
                  "nodeType": "ExpressionStatement",
                  "src": "23353:35:42"
                }
              ]
            },
            "documentation": {
              "id": 16985,
              "nodeType": "StructuredDocumentation",
              "src": "22979:259:42",
              "text": " @dev addPaymentManager (can set who's going to collect fee when consuming orders)\n      Only ERC20Deployer (at 721 level) can update.\n      There can be multiple paymentCollectors\n @param _paymentManager new minter address"
            },
            "functionSelector": "aa492ef9",
            "id": 16997,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16990,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16989,
                  "name": "onlyERC20Deployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16165,
                  "src": "23321:17:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "23321:17:42"
              }
            ],
            "name": "addPaymentManager",
            "nameLocation": "23253:17:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16987,
                  "mutability": "mutable",
                  "name": "_paymentManager",
                  "nameLocation": "23279:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 16997,
                  "src": "23271:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23271:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23270:25:42"
            },
            "returnParameters": {
              "id": 16991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23343:0:42"
            },
            "scope": 17877,
            "src": "23244:151:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17009,
              "nodeType": "Block",
              "src": "23725:55:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17006,
                        "name": "_paymentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17000,
                        "src": "23757:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17005,
                      "name": "_removePaymentManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21414,
                      "src": "23735:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 17007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23735:38:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17008,
                  "nodeType": "ExpressionStatement",
                  "src": "23735:38:42"
                }
              ]
            },
            "documentation": {
              "id": 16998,
              "nodeType": "StructuredDocumentation",
              "src": "23401:216:42",
              "text": " @dev removePaymentManager\n      Only ERC20Deployer (at 721 level) can update.\n      There can be multiple paymentManagers\n @param _paymentManager _paymentManager address to remove"
            },
            "functionSelector": "25b00243",
            "id": 17010,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17003,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17002,
                  "name": "onlyERC20Deployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16165,
                  "src": "23703:17:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "23703:17:42"
              }
            ],
            "name": "removePaymentManager",
            "nameLocation": "23632:20:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17000,
                  "mutability": "mutable",
                  "name": "_paymentManager",
                  "nameLocation": "23661:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17010,
                  "src": "23653:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23653:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23652:25:42"
            },
            "returnParameters": {
              "id": 17004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23725:0:42"
            },
            "scope": 17877,
            "src": "23623:157:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17038,
              "nodeType": "Block",
              "src": "24109:140:42",
              "statements": [
                {
                  "assignments": [
                    17019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17019,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "24127:3:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17038,
                      "src": "24119:11:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 17018,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "24119:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17029,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 17025,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "24168:4:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Template_$17877",
                                  "typeString": "contract ERC20Template"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Template_$17877",
                                  "typeString": "contract ERC20Template"
                                }
                              ],
                              "id": 17024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24160:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 17023,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24160:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 17026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24160:13:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 17021,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "24143:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 17022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "24143:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 17027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24143:31:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 17020,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "24133:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 17028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24133:42:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24119:56:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17034,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17019,
                        "src": "24230:3:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 17035,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17013,
                        "src": "24235:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 17031,
                            "name": "_erc721Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15895,
                            "src": "24201:14:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17030,
                          "name": "IERC721Template",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3697,
                          "src": "24185:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$",
                            "typeString": "type(contract IERC721Template)"
                          }
                        },
                        "id": 17032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24185:31:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721Template_$3697",
                          "typeString": "contract IERC721Template"
                        }
                      },
                      "id": 17033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDataERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3622,
                      "src": "24185:44:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory) external"
                      }
                    },
                    "id": 17036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24185:57:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17037,
                  "nodeType": "ExpressionStatement",
                  "src": "24185:57:42"
                }
              ]
            },
            "documentation": {
              "id": 17011,
              "nodeType": "StructuredDocumentation",
              "src": "23786:250:42",
              "text": " @dev setData\n      Only ERC20Deployer (at 721 level) can call it.\n      This function allows to store data with a preset key (keccak256(ERC20Address)) into NFT 725 Store\n @param _value data to be set with this key"
            },
            "functionSelector": "ab62f0e1",
            "id": 17039,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17016,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17015,
                  "name": "onlyERC20Deployer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16165,
                  "src": "24091:17:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "24091:17:42"
              }
            ],
            "name": "setData",
            "nameLocation": "24051:7:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17013,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "24074:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17039,
                  "src": "24059:21:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 17012,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24059:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24058:23:42"
            },
            "returnParameters": {
              "id": 17017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24109:0:42"
            },
            "scope": 17877,
            "src": "24042:207:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17048,
              "nodeType": "Block",
              "src": "24514:53:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17045,
                      "name": "_internalCleanPermissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17255,
                      "src": "24524:25:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24524:27:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17047,
                  "nodeType": "ExpressionStatement",
                  "src": "24524:27:42"
                }
              ]
            },
            "documentation": {
              "id": 17040,
              "nodeType": "StructuredDocumentation",
              "src": "24255:203:42",
              "text": " @dev cleanPermissions()\n      Only NFT Owner (at 721 level) can call it.\n      This function allows to remove all minters, feeManagers and reset the paymentCollector"
            },
            "functionSelector": "4f189cb2",
            "id": 17049,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17042,
                  "name": "onlyNFTOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16127,
                  "src": "24501:12:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "24501:12:42"
              }
            ],
            "name": "cleanPermissions",
            "nameLocation": "24473:16:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24489:2:42"
            },
            "returnParameters": {
              "id": 17044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24514:0:42"
            },
            "scope": 17877,
            "src": "24464:103:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17064,
              "nodeType": "Block",
              "src": "24979:169:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 17054,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "25010:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 17055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "25010:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 17056,
                          "name": "_erc721Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15895,
                          "src": "25024:14:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "25010:28:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a204e4f542037323120436f6e7472616374",
                        "id": 17058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25052:33:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41dbc1fb97058030e6e1c41a97d5776c4ff7614ef70186ad13a73b1775a45833",
                          "typeString": "literal_string \"ERC20Template: NOT 721 Contract\""
                        },
                        "value": "ERC20Template: NOT 721 Contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41dbc1fb97058030e6e1c41a97d5776c4ff7614ef70186ad13a73b1775a45833",
                          "typeString": "literal_string \"ERC20Template: NOT 721 Contract\""
                        }
                      ],
                      "id": 17053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24989:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24989:106:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17060,
                  "nodeType": "ExpressionStatement",
                  "src": "24989:106:42"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17061,
                      "name": "_internalCleanPermissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17255,
                      "src": "25105:25:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25105:27:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17063,
                  "nodeType": "ExpressionStatement",
                  "src": "25105:27:42"
                }
              ]
            },
            "documentation": {
              "id": 17050,
              "nodeType": "StructuredDocumentation",
              "src": "24582:359:42",
              "text": " @dev cleanFrom721()\n      OnlyNFT(721) Contract can call it.\n      This function allows to remove all minters, feeManagers and reset the paymentCollector\n       This function is used when transferring an NFT to a new owner,\n so that permissions at ERC20level (minter,feeManager,paymentCollector) can be reset."
            },
            "functionSelector": "82c03da5",
            "id": 17065,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cleanFrom721",
            "nameLocation": "24955:12:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24967:2:42"
            },
            "returnParameters": {
              "id": 17052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24979:0:42"
            },
            "scope": 17877,
            "src": "24946:202:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17254,
              "nodeType": "Block",
              "src": "25200:1966:42",
              "statements": [
                {
                  "assignments": [
                    17069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17069,
                      "mutability": "mutable",
                      "name": "totalLen",
                      "nameLocation": "25218:8:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17254,
                      "src": "25210:16:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17068,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25210:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17075,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 17070,
                        "name": "fixedRateExchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15929,
                        "src": "25229:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                          "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                        }
                      },
                      "id": 17071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "25229:25:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "expression": {
                        "id": 17072,
                        "name": "dispensers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15932,
                        "src": "25257:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 17073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "25257:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25229:45:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25210:64:42"
                },
                {
                  "assignments": [
                    17077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17077,
                      "mutability": "mutable",
                      "name": "curentLen",
                      "nameLocation": "25292:9:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17254,
                      "src": "25284:17:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17076,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25284:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17079,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 17078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "25304:1:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25284:21:42"
                },
                {
                  "assignments": [
                    17084
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17084,
                      "mutability": "mutable",
                      "name": "previousMinters",
                      "nameLocation": "25332:15:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17254,
                      "src": "25315:32:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 17082,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25315:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 17083,
                        "nodeType": "ArrayTypeName",
                        "src": "25315:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17090,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 17088,
                        "name": "totalLen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17069,
                        "src": "25362:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "25348:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 17085,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25352:7:42",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 17086,
                        "nodeType": "ArrayTypeName",
                        "src": "25352:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 17089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25348:23:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25315:56:42"
                },
                {
                  "assignments": [
                    17092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17092,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "25469:1:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17254,
                      "src": "25461:9:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17091,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25461:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17093,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25461:9:42"
                },
                {
                  "body": {
                    "id": 17181,
                    "nodeType": "Block",
                    "src": "25523:985:42",
                    "statements": [
                      {
                        "assignments": [
                          17107
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 17107,
                            "mutability": "mutable",
                            "name": "fre",
                            "nameLocation": "25560:3:42",
                            "nodeType": "VariableDeclaration",
                            "scope": 17181,
                            "src": "25541:22:42",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFixedRateExchange_$4270",
                              "typeString": "contract IFixedRateExchange"
                            },
                            "typeName": {
                              "id": 17106,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 17105,
                                "name": "IFixedRateExchange",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4270,
                                "src": "25541:18:42"
                              },
                              "referencedDeclaration": 4270,
                              "src": "25541:18:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFixedRateExchange_$4270",
                                "typeString": "contract IFixedRateExchange"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 17114,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 17109,
                                  "name": "fixedRateExchanges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15929,
                                  "src": "25585:18:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                                    "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                                  }
                                },
                                "id": 17111,
                                "indexExpression": {
                                  "id": 17110,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17092,
                                  "src": "25604:1:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "25585:21:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_fixedRate_$15925_storage",
                                  "typeString": "struct ERC20Template.fixedRate storage ref"
                                }
                              },
                              "id": 17112,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "contractAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15922,
                              "src": "25585:37:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17108,
                            "name": "IFixedRateExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4270,
                            "src": "25566:18:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFixedRateExchange_$4270_$",
                              "typeString": "type(contract IFixedRateExchange)"
                            }
                          },
                          "id": 17113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25566:57:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFixedRateExchange_$4270",
                            "typeString": "contract IFixedRateExchange"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25541:82:42"
                      },
                      {
                        "assignments": [
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          17116,
                          17118,
                          17120
                        ],
                        "declarations": [
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          {
                            "constant": false,
                            "id": 17116,
                            "mutability": "mutable",
                            "name": "dtBalance",
                            "nameLocation": "25869:9:42",
                            "nodeType": "VariableDeclaration",
                            "scope": 17181,
                            "src": "25861:17:42",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 17115,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25861:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 17118,
                            "mutability": "mutable",
                            "name": "btBalance",
                            "nameLocation": "25908:9:42",
                            "nodeType": "VariableDeclaration",
                            "scope": 17181,
                            "src": "25900:17:42",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 17117,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25900:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 17120,
                            "mutability": "mutable",
                            "name": "withMint",
                            "nameLocation": "25944:8:42",
                            "nodeType": "VariableDeclaration",
                            "scope": 17181,
                            "src": "25939:13:42",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 17119,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "25939:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 17128,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 17123,
                                  "name": "fixedRateExchanges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15929,
                                  "src": "25989:18:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                                    "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                                  }
                                },
                                "id": 17125,
                                "indexExpression": {
                                  "id": 17124,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17092,
                                  "src": "26008:1:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "25989:21:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_fixedRate_$15925_storage",
                                  "typeString": "struct ERC20Template.fixedRate storage ref"
                                }
                              },
                              "id": 17126,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15924,
                              "src": "25989:24:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 17121,
                              "name": "fre",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17107,
                              "src": "25973:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFixedRateExchange_$4270",
                                "typeString": "contract IFixedRateExchange"
                              }
                            },
                            "id": 17122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getExchange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4173,
                            "src": "25973:15:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                              "typeString": "function (bytes32) view external returns (address,address,uint256,address,uint256,uint256,bool,uint256,uint256,uint256,uint256,bool)"
                            }
                          },
                          "id": 17127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25973:41:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                            "typeString": "tuple(address,address,uint256,address,uint256,uint256,bool,uint256,uint256,uint256,uint256,bool)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25641:373:42"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 17131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 17129,
                            "name": "btBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17118,
                            "src": "26035:9:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 17130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26045:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "26035:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 17142,
                        "nodeType": "IfStatement",
                        "src": "26032:86:42",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 17135,
                                    "name": "fixedRateExchanges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15929,
                                    "src": "26082:18:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                                      "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                                    }
                                  },
                                  "id": 17137,
                                  "indexExpression": {
                                    "id": 17136,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17092,
                                    "src": "26101:1:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "26082:21:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_fixedRate_$15925_storage",
                                    "typeString": "struct ERC20Template.fixedRate storage ref"
                                  }
                                },
                                "id": 17138,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15924,
                                "src": "26082:24:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 17139,
                                "name": "btBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17118,
                                "src": "26108:9:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 17132,
                                "name": "fre",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17107,
                                "src": "26068:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IFixedRateExchange_$4270",
                                  "typeString": "contract IFixedRateExchange"
                                }
                              },
                              "id": 17134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "collectBT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4262,
                              "src": "26068:13:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                                "typeString": "function (bytes32,uint256) external"
                              }
                            },
                            "id": 17140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26068:50:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 17141,
                          "nodeType": "ExpressionStatement",
                          "src": "26068:50:42"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 17145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 17143,
                            "name": "dtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17116,
                            "src": "26139:9:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 17144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26149:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "26139:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 17156,
                        "nodeType": "IfStatement",
                        "src": "26136:86:42",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 17149,
                                    "name": "fixedRateExchanges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15929,
                                    "src": "26186:18:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                                      "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                                    }
                                  },
                                  "id": 17151,
                                  "indexExpression": {
                                    "id": 17150,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17092,
                                    "src": "26205:1:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "26186:21:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_fixedRate_$15925_storage",
                                    "typeString": "struct ERC20Template.fixedRate storage ref"
                                  }
                                },
                                "id": 17152,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15924,
                                "src": "26186:24:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 17153,
                                "name": "dtBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17116,
                                "src": "26212:9:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 17146,
                                "name": "fre",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17107,
                                "src": "26172:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IFixedRateExchange_$4270",
                                  "typeString": "contract IFixedRateExchange"
                                }
                              },
                              "id": 17148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "collectDT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4269,
                              "src": "26172:13:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                                "typeString": "function (bytes32,uint256) external"
                              }
                            },
                            "id": 17154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26172:50:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 17155,
                          "nodeType": "ExpressionStatement",
                          "src": "26172:50:42"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 17166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 17158,
                                    "name": "fixedRateExchanges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15929,
                                    "src": "26301:18:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                                      "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                                    }
                                  },
                                  "id": 17160,
                                  "indexExpression": {
                                    "id": 17159,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17092,
                                    "src": "26320:1:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "26301:21:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_fixedRate_$15925_storage",
                                    "typeString": "struct ERC20Template.fixedRate storage ref"
                                  }
                                },
                                "id": 17161,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "contractAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15922,
                                "src": "26301:37:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 17157,
                              "name": "isMinter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21226,
                              "src": "26292:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 17162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26292:47:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 17165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 17163,
                              "name": "withMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17120,
                              "src": "26343:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "74727565",
                              "id": 17164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26355:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "26343:16:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "26292:67:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 17180,
                        "nodeType": "IfStatement",
                        "src": "26289:209:42",
                        "trueBody": {
                          "id": 17179,
                          "nodeType": "Block",
                          "src": "26360:138:42",
                          "statements": [
                            {
                              "expression": {
                                "id": 17174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 17167,
                                    "name": "previousMinters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17084,
                                    "src": "26382:15:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 17169,
                                  "indexExpression": {
                                    "id": 17168,
                                    "name": "curentLen",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17077,
                                    "src": "26398:9:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "26382:26:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 17170,
                                      "name": "fixedRateExchanges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15929,
                                      "src": "26409:18:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                                        "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                                      }
                                    },
                                    "id": 17172,
                                    "indexExpression": {
                                      "id": 17171,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17092,
                                      "src": "26428:1:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26409:21:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_fixedRate_$15925_storage",
                                      "typeString": "struct ERC20Template.fixedRate storage ref"
                                    }
                                  },
                                  "id": 17173,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "contractAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15922,
                                  "src": "26409:37:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "26382:64:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 17175,
                              "nodeType": "ExpressionStatement",
                              "src": "26382:64:42"
                            },
                            {
                              "expression": {
                                "id": 17177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "26468:11:42",
                                "subExpression": {
                                  "id": 17176,
                                  "name": "curentLen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17077,
                                  "src": "26468:9:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 17178,
                              "nodeType": "ExpressionStatement",
                              "src": "26468:11:42"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17098,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17092,
                      "src": "25489:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 17099,
                        "name": "fixedRateExchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15929,
                        "src": "25491:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                          "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                        }
                      },
                      "id": 17100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "25491:25:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25489:27:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17182,
                  "initializationExpression": {
                    "expression": {
                      "id": 17096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 17094,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17092,
                        "src": "25484:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 17095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25486:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "25484:3:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17097,
                    "nodeType": "ExpressionStatement",
                    "src": "25484:3:42"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 17103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "25518:3:42",
                      "subExpression": {
                        "id": 17102,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17092,
                        "src": "25518:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17104,
                    "nodeType": "ExpressionStatement",
                    "src": "25518:3:42"
                  },
                  "nodeType": "ForStatement",
                  "src": "25480:1028:42"
                },
                {
                  "body": {
                    "id": 17224,
                    "nodeType": "Block",
                    "src": "26624:241:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 17202,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "26690:4:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Template_$17877",
                                    "typeString": "contract ERC20Template"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Template_$17877",
                                    "typeString": "contract ERC20Template"
                                  }
                                ],
                                "id": 17201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "26682:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 17200,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "26682:7:42",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 17203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26682:13:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 17195,
                                    "name": "dispensers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15932,
                                    "src": "26653:10:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 17197,
                                  "indexExpression": {
                                    "id": 17196,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17092,
                                    "src": "26664:1:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "26653:13:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 17194,
                                "name": "IDispenser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3001,
                                "src": "26642:10:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IDispenser_$3001_$",
                                  "typeString": "type(contract IDispenser)"
                                }
                              },
                              "id": 17198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26642:25:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDispenser_$3001",
                                "typeString": "contract IDispenser"
                              }
                            },
                            "id": 17199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2988,
                            "src": "26642:39:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 17204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26642:54:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17205,
                        "nodeType": "ExpressionStatement",
                        "src": "26642:54:42"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 17207,
                                "name": "dispensers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15932,
                                "src": "26726:10:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 17209,
                              "indexExpression": {
                                "id": 17208,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17092,
                                "src": "26737:1:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26726:13:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17206,
                            "name": "isMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21226,
                            "src": "26717:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 17210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26717:23:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 17223,
                        "nodeType": "IfStatement",
                        "src": "26714:141:42",
                        "trueBody": {
                          "id": 17222,
                          "nodeType": "Block",
                          "src": "26741:114:42",
                          "statements": [
                            {
                              "expression": {
                                "id": 17217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 17211,
                                    "name": "previousMinters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17084,
                                    "src": "26763:15:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 17213,
                                  "indexExpression": {
                                    "id": 17212,
                                    "name": "curentLen",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17077,
                                    "src": "26779:9:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "26763:26:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 17214,
                                    "name": "dispensers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15932,
                                    "src": "26790:10:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 17216,
                                  "indexExpression": {
                                    "id": 17215,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17092,
                                    "src": "26801:1:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "26790:13:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "26763:40:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 17218,
                              "nodeType": "ExpressionStatement",
                              "src": "26763:40:42"
                            },
                            {
                              "expression": {
                                "id": 17220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "26825:11:42",
                                "subExpression": {
                                  "id": 17219,
                                  "name": "curentLen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17077,
                                  "src": "26825:9:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 17221,
                              "nodeType": "ExpressionStatement",
                              "src": "26825:11:42"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17187,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17092,
                      "src": "26598:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 17188,
                        "name": "dispensers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15932,
                        "src": "26600:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 17189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "26600:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26598:19:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17225,
                  "initializationExpression": {
                    "expression": {
                      "id": 17185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 17183,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17092,
                        "src": "26593:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 17184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26595:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "26593:3:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17186,
                    "nodeType": "ExpressionStatement",
                    "src": "26593:3:42"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 17192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "26619:3:42",
                      "subExpression": {
                        "id": 17191,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17092,
                        "src": "26619:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17193,
                    "nodeType": "ExpressionStatement",
                    "src": "26619:3:42"
                  },
                  "nodeType": "ForStatement",
                  "src": "26589:276:42"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17226,
                      "name": "_cleanPermissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21472,
                      "src": "26907:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26907:19:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17228,
                  "nodeType": "ExpressionStatement",
                  "src": "26907:19:42"
                },
                {
                  "expression": {
                    "id": 17234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17229,
                      "name": "paymentCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15897,
                      "src": "26966:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 17232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26993:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 17231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26985:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 17230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26985:7:42",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 17233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26985:10:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26966:29:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17235,
                  "nodeType": "ExpressionStatement",
                  "src": "26966:29:42"
                },
                {
                  "body": {
                    "id": 17252,
                    "nodeType": "Block",
                    "src": "27096:55:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 17247,
                                "name": "previousMinters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17084,
                                "src": "27121:15:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 17249,
                              "indexExpression": {
                                "id": 17248,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17092,
                                "src": "27137:1:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "27121:18:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17246,
                            "name": "_addMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21276,
                            "src": "27110:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 17250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27110:30:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17251,
                        "nodeType": "ExpressionStatement",
                        "src": "27110:30:42"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17240,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17092,
                      "src": "27078:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 17241,
                      "name": "curentLen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17077,
                      "src": "27080:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27078:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17253,
                  "initializationExpression": {
                    "expression": {
                      "id": 17238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 17236,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17092,
                        "src": "27073:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 17237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27075:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "27073:3:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17239,
                    "nodeType": "ExpressionStatement",
                    "src": "27073:3:42"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 17244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "27091:3:42",
                      "subExpression": {
                        "id": 17243,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17092,
                        "src": "27091:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17245,
                    "nodeType": "ExpressionStatement",
                    "src": "27091:3:42"
                  },
                  "nodeType": "ForStatement",
                  "src": "27069:82:42"
                }
              ]
            },
            "id": 17255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_internalCleanPermissions",
            "nameLocation": "25163:25:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25188:2:42"
            },
            "returnParameters": {
              "id": 17067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25200:0:42"
            },
            "scope": 17877,
            "src": "25154:2012:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17303,
              "nodeType": "Block",
              "src": "27534:621:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 17285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 17275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 17262,
                                "name": "permissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21169,
                                "src": "27668:11:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RolesERC20_$21177_storage_$",
                                  "typeString": "mapping(address => struct ERC20Roles.RolesERC20 storage ref)"
                                }
                              },
                              "id": 17265,
                              "indexExpression": {
                                "expression": {
                                  "id": 17263,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "27680:3:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 17264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "27680:10:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "27668:23:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RolesERC20_$21177_storage",
                                "typeString": "struct ERC20Roles.RolesERC20 storage ref"
                              }
                            },
                            "id": 17266,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "paymentManager",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21176,
                            "src": "27668:38:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 17271,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "27773:3:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 17272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "27773:10:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 17268,
                                      "name": "_erc721Address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15895,
                                      "src": "27742:14:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 17267,
                                    "name": "IERC721Template",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3697,
                                    "src": "27726:15:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$",
                                      "typeString": "type(contract IERC721Template)"
                                    }
                                  },
                                  "id": 17269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "27726:31:42",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721Template_$3697",
                                    "typeString": "contract IERC721Template"
                                  }
                                },
                                "id": 17270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getPermissions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3615,
                                "src": "27726:46:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Roles_$3598_memory_ptr_$",
                                  "typeString": "function (address) view external returns (struct IERC721Template.Roles memory)"
                                }
                              },
                              "id": 17273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27726:58:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Roles_$3598_memory_ptr",
                                "typeString": "struct IERC721Template.Roles memory"
                              }
                            },
                            "id": 17274,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deployERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3593,
                            "src": "27726:70:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "27668:128:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 17284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 17280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "27856:1:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 17277,
                                    "name": "_erc721Address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15895,
                                    "src": "27832:14:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 17276,
                                  "name": "IERC721Template",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3697,
                                  "src": "27816:15:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$",
                                    "typeString": "type(contract IERC721Template)"
                                  }
                                },
                                "id": 17278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27816:31:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Template_$3697",
                                  "typeString": "contract IERC721Template"
                                }
                              },
                              "id": 17279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3499,
                              "src": "27816:39:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 17281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27816:42:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 17282,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "27860:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 17283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "27860:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "27816:54:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "27668:202:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323054656d706c6174653a204e4f54205041594d454e54204d414e41474552206f72204f574e4552",
                        "id": 17286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27884:45:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b97044b3298700df129caa9f11d041917fa241af13f8a2124a8c124bcaee2639",
                          "typeString": "literal_string \"ERC20Template: NOT PAYMENT MANAGER or OWNER\""
                        },
                        "value": "ERC20Template: NOT PAYMENT MANAGER or OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b97044b3298700df129caa9f11d041917fa241af13f8a2124a8c124bcaee2639",
                          "typeString": "literal_string \"ERC20Template: NOT PAYMENT MANAGER or OWNER\""
                        }
                      ],
                      "id": 17261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27647:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27647:292:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17288,
                  "nodeType": "ExpressionStatement",
                  "src": "27647:292:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17290,
                        "name": "_newPaymentCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17258,
                        "src": "27970:20:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17289,
                      "name": "_setPaymentCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17315,
                      "src": "27949:20:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 17291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27949:42:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17292,
                  "nodeType": "ExpressionStatement",
                  "src": "27949:42:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 17294,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "28039:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "28039:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17296,
                        "name": "_newPaymentCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17258,
                        "src": "28063:20:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 17297,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "28097:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 17298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "28097:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 17299,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "28126:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 17300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "28126:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17293,
                      "name": "NewPaymentCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16100,
                      "src": "28006:19:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 17301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28006:142:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17302,
                  "nodeType": "EmitStatement",
                  "src": "28001:147:42"
                }
              ]
            },
            "documentation": {
              "id": 17256,
              "nodeType": "StructuredDocumentation",
              "src": "27171:289:42",
              "text": " @dev setPaymentCollector\n      Only feeManager can call it\n      This function allows to set a newPaymentCollector (receives DT when consuming)\nIf not set the paymentCollector is the NFT Owner\n @param _newPaymentCollector new fee collector "
            },
            "functionSelector": "57a3a31b",
            "id": 17304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPaymentCollector",
            "nameLocation": "27475:19:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17258,
                  "mutability": "mutable",
                  "name": "_newPaymentCollector",
                  "nameLocation": "27503:20:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17304,
                  "src": "27495:28:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27495:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27494:30:42"
            },
            "returnParameters": {
              "id": 17260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27534:0:42"
            },
            "scope": 17877,
            "src": "27466:689:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17314,
              "nodeType": "Block",
              "src": "28333:56:42",
              "statements": [
                {
                  "expression": {
                    "id": 17312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17310,
                      "name": "paymentCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15897,
                      "src": "28343:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17311,
                      "name": "_newPaymentCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17307,
                      "src": "28362:20:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "28343:39:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17313,
                  "nodeType": "ExpressionStatement",
                  "src": "28343:39:42"
                }
              ]
            },
            "documentation": {
              "id": 17305,
              "nodeType": "StructuredDocumentation",
              "src": "28161:97:42",
              "text": " @dev _setPaymentCollector\n @param _newPaymentCollector new fee collector"
            },
            "id": 17315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setPaymentCollector",
            "nameLocation": "28273:20:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17307,
                  "mutability": "mutable",
                  "name": "_newPaymentCollector",
                  "nameLocation": "28302:20:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17315,
                  "src": "28294:28:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28294:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28293:30:42"
            },
            "returnParameters": {
              "id": 17309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28333:0:42"
            },
            "scope": 17877,
            "src": "28264:125:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17330,
              "nodeType": "Block",
              "src": "28726:142:42",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 17325,
                        "name": "publishMarketFeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15899,
                        "src": "28757:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17326,
                        "name": "publishMarketFeeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15901,
                        "src": "28794:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17327,
                        "name": "publishMarketFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15903,
                        "src": "28829:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 17328,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "28743:118:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,address,uint256)"
                    }
                  },
                  "functionReturnParameters": 17324,
                  "id": 17329,
                  "nodeType": "Return",
                  "src": "28736:125:42"
                }
              ]
            },
            "documentation": {
              "id": 17316,
              "nodeType": "StructuredDocumentation",
              "src": "28395:168:42",
              "text": " @dev getPublishingMarketFee\n      Get publishingMarket Fee\n      This function allows to get the current fee set by the publishing market"
            },
            "functionSelector": "397b3743",
            "id": 17331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPublishingMarketFee",
            "nameLocation": "28577:22:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28599:2:42"
            },
            "returnParameters": {
              "id": 17324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17319,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17331,
                  "src": "28662:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28662:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17331,
                  "src": "28683:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28683:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17331,
                  "src": "28704:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28704:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28648:73:42"
            },
            "scope": 17877,
            "src": "28568:300:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17383,
              "nodeType": "Block",
              "src": "29445:633:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17344,
                          "name": "_publishMarketFeeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17334,
                          "src": "29476:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29512:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "29504:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17345,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "29504:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29504:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "29476:38:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964205f7075626c6973684d61726b6574466565416464726573732061646472657373",
                        "id": 17350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29528:42:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3f55fac716322b51222e69759221521c34bdbccab64038794ad115ac250107c",
                          "typeString": "literal_string \"Invalid _publishMarketFeeAddress address\""
                        },
                        "value": "Invalid _publishMarketFeeAddress address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3f55fac716322b51222e69759221521c34bdbccab64038794ad115ac250107c",
                          "typeString": "literal_string \"Invalid _publishMarketFeeAddress address\""
                        }
                      ],
                      "id": 17343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29455:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29455:125:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17352,
                  "nodeType": "ExpressionStatement",
                  "src": "29455:125:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17354,
                          "name": "_publishMarketFeeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17336,
                          "src": "29614:22:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29648:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "29640:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17355,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "29640:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29640:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "29614:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964205f7075626c6973684d61726b6574466565546f6b656e2061646472657373",
                        "id": 17360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29664:40:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf6a8559d3f7adfa35d1ac4963179b4e633898286a263e929627f03040d28eb7",
                          "typeString": "literal_string \"Invalid _publishMarketFeeToken address\""
                        },
                        "value": "Invalid _publishMarketFeeToken address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf6a8559d3f7adfa35d1ac4963179b4e633898286a263e929627f03040d28eb7",
                          "typeString": "literal_string \"Invalid _publishMarketFeeToken address\""
                        }
                      ],
                      "id": 17353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29593:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29593:121:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17362,
                  "nodeType": "ExpressionStatement",
                  "src": "29593:121:42"
                },
                {
                  "expression": {
                    "id": 17365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17363,
                      "name": "publishMarketFeeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15899,
                      "src": "29724:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17364,
                      "name": "_publishMarketFeeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17334,
                      "src": "29750:24:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "29724:50:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17366,
                  "nodeType": "ExpressionStatement",
                  "src": "29724:50:42"
                },
                {
                  "expression": {
                    "id": 17369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17367,
                      "name": "publishMarketFeeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15901,
                      "src": "29784:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17368,
                      "name": "_publishMarketFeeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17336,
                      "src": "29808:22:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "29784:46:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17370,
                  "nodeType": "ExpressionStatement",
                  "src": "29784:46:42"
                },
                {
                  "expression": {
                    "id": 17373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17371,
                      "name": "publishMarketFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15903,
                      "src": "29840:22:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17372,
                      "name": "_publishMarketFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17338,
                      "src": "29865:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29840:48:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17374,
                  "nodeType": "ExpressionStatement",
                  "src": "29840:48:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 17376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "29940:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "29940:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17378,
                        "name": "_publishMarketFeeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17334,
                        "src": "29964:24:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17379,
                        "name": "_publishMarketFeeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17336,
                        "src": "30002:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17380,
                        "name": "_publishMarketFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17338,
                        "src": "30038:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17375,
                      "name": "PublishMarketFeeChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16012,
                      "src": "29903:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 17381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29903:168:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17382,
                  "nodeType": "EmitStatement",
                  "src": "29898:173:42"
                }
              ]
            },
            "documentation": {
              "id": 17332,
              "nodeType": "StructuredDocumentation",
              "src": "28874:365:42",
              "text": " @dev setPublishingMarketFee\n      Only publishMarketFeeAddress can call it\n      This function allows to set the fee required by the publisherMarket\n @param _publishMarketFeeAddress  new _publishMarketFeeAddress\n @param _publishMarketFeeToken new _publishMarketFeeToken\n @param _publishMarketFeeAmount new fee amount"
            },
            "functionSelector": "57ad5ff6",
            "id": 17384,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17341,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17340,
                  "name": "onlyPublishingMarketFeeAddress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16139,
                  "src": "29414:30:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "29414:30:42"
              }
            ],
            "name": "setPublishingMarketFee",
            "nameLocation": "29253:22:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17334,
                  "mutability": "mutable",
                  "name": "_publishMarketFeeAddress",
                  "nameLocation": "29293:24:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17384,
                  "src": "29285:32:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29285:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17336,
                  "mutability": "mutable",
                  "name": "_publishMarketFeeToken",
                  "nameLocation": "29335:22:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17384,
                  "src": "29327:30:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29327:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17338,
                  "mutability": "mutable",
                  "name": "_publishMarketFeeAmount",
                  "nameLocation": "29375:23:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17384,
                  "src": "29367:31:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29367:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29275:129:42"
            },
            "returnParameters": {
              "id": 17342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29445:0:42"
            },
            "scope": 17877,
            "src": "29244:834:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17392,
              "nodeType": "Block",
              "src": "30322:25:42",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 17390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "30339:1:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 17389,
                  "id": 17391,
                  "nodeType": "Return",
                  "src": "30332:8:42"
                }
              ]
            },
            "documentation": {
              "id": 17385,
              "nodeType": "StructuredDocumentation",
              "src": "30084:188:42",
              "text": " @dev getId\n      Return template id in case we need different ABIs. \n      If you construct your own template, please make sure to change the hardcoded value"
            },
            "functionSelector": "5d1ca631",
            "id": 17393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getId",
            "nameLocation": "30286:5:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30291:2:42"
            },
            "returnParameters": {
              "id": 17389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17388,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17393,
                  "src": "30315:5:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17387,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "30315:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30314:7:42"
            },
            "scope": 17877,
            "src": "30277:70:42",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              28567
            ],
            "body": {
              "id": 17402,
              "nodeType": "Block",
              "src": "30517:29:42",
              "statements": [
                {
                  "expression": {
                    "id": 17400,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15883,
                    "src": "30534:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 17399,
                  "id": 17401,
                  "nodeType": "Return",
                  "src": "30527:12:42"
                }
              ]
            },
            "documentation": {
              "id": 17394,
              "nodeType": "StructuredDocumentation",
              "src": "30353:98:42",
              "text": " @dev name\n      It returns the token name.\n @return Datatoken name."
            },
            "functionSelector": "06fdde03",
            "id": 17403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "30465:4:42",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17396,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "30484:8:42"
            },
            "parameters": {
              "id": 17395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30469:2:42"
            },
            "returnParameters": {
              "id": 17399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17398,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17403,
                  "src": "30502:13:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17397,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "30502:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30501:15:42"
            },
            "scope": 17877,
            "src": "30456:90:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              28577
            ],
            "body": {
              "id": 17412,
              "nodeType": "Block",
              "src": "30724:31:42",
              "statements": [
                {
                  "expression": {
                    "id": 17410,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15885,
                    "src": "30741:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 17409,
                  "id": 17411,
                  "nodeType": "Return",
                  "src": "30734:14:42"
                }
              ]
            },
            "documentation": {
              "id": 17404,
              "nodeType": "StructuredDocumentation",
              "src": "30552:104:42",
              "text": " @dev symbol\n      It returns the token symbol.\n @return Datatoken symbol."
            },
            "functionSelector": "95d89b41",
            "id": 17413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "30670:6:42",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17406,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "30691:8:42"
            },
            "parameters": {
              "id": 17405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30676:2:42"
            },
            "returnParameters": {
              "id": 17409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17413,
                  "src": "30709:13:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17407,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "30709:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30708:15:42"
            },
            "scope": 17877,
            "src": "30661:94:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17421,
              "nodeType": "Block",
              "src": "30936:38:42",
              "statements": [
                {
                  "expression": {
                    "id": 17419,
                    "name": "_erc721Address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15895,
                    "src": "30953:14:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 17418,
                  "id": 17420,
                  "nodeType": "Return",
                  "src": "30946:21:42"
                }
              ]
            },
            "documentation": {
              "id": 17414,
              "nodeType": "StructuredDocumentation",
              "src": "30761:112:42",
              "text": " @dev getERC721Address\n      It returns the parent ERC721\n @return ERC721 address."
            },
            "functionSelector": "007ffb78",
            "id": 17422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getERC721Address",
            "nameLocation": "30887:16:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30903:2:42"
            },
            "returnParameters": {
              "id": 17418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17417,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17422,
                  "src": "30927:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30927:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30926:9:42"
            },
            "scope": 17877,
            "src": "30878:96:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              28587
            ],
            "body": {
              "id": 17431,
              "nodeType": "Block",
              "src": "31198:33:42",
              "statements": [
                {
                  "expression": {
                    "id": 17429,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15890,
                    "src": "31215:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 17428,
                  "id": 17430,
                  "nodeType": "Return",
                  "src": "31208:16:42"
                }
              ]
            },
            "documentation": {
              "id": 17423,
              "nodeType": "StructuredDocumentation",
              "src": "30980:156:42",
              "text": " @dev decimals\n      It returns the token decimals.\n      how many supported decimal points\n @return Datatoken decimals."
            },
            "functionSelector": "313ce567",
            "id": 17432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "31150:8:42",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17425,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "31173:8:42"
            },
            "parameters": {
              "id": 17424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31158:2:42"
            },
            "returnParameters": {
              "id": 17428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17427,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17432,
                  "src": "31191:5:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17426,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "31191:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31190:7:42"
            },
            "scope": 17877,
            "src": "31141:90:42",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17440,
              "nodeType": "Block",
              "src": "31382:28:42",
              "statements": [
                {
                  "expression": {
                    "id": 17438,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15887,
                    "src": "31399:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 17437,
                  "id": 17439,
                  "nodeType": "Return",
                  "src": "31392:11:42"
                }
              ]
            },
            "documentation": {
              "id": 17433,
              "nodeType": "StructuredDocumentation",
              "src": "31237:93:42",
              "text": " @dev cap\n      it returns the capital.\n @return Datatoken cap."
            },
            "functionSelector": "355274ea",
            "id": 17441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cap",
            "nameLocation": "31344:3:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31347:2:42"
            },
            "returnParameters": {
              "id": 17437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17436,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17441,
                  "src": "31373:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31373:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31372:9:42"
            },
            "scope": 17877,
            "src": "31335:75:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17449,
              "nodeType": "Block",
              "src": "31624:35:42",
              "statements": [
                {
                  "expression": {
                    "id": 17447,
                    "name": "initialized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15893,
                    "src": "31641:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 17446,
                  "id": 17448,
                  "nodeType": "Return",
                  "src": "31634:18:42"
                }
              ]
            },
            "documentation": {
              "id": 17442,
              "nodeType": "StructuredDocumentation",
              "src": "31416:148:42",
              "text": " @dev isInitialized\n      It checks whether the contract is initialized.\n @return true if the contract is initialized."
            },
            "functionSelector": "392e53cd",
            "id": 17450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInitialized",
            "nameLocation": "31579:13:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31592:2:42"
            },
            "returnParameters": {
              "id": 17446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17450,
                  "src": "31618:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17444,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "31618:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31617:6:42"
            },
            "scope": 17877,
            "src": "31570:89:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17529,
              "nodeType": "Block",
              "src": "32291:778:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17469,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17459,
                          "src": "32309:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 17470,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "32321:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 17471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "32321:12:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "32309:24:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323044543a2045585049524544",
                        "id": 17473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32335:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4c2ba5eb21081cb84544fd07100fdb35b4fe847127b86c9c3b26ac4cf5ea686",
                          "typeString": "literal_string \"ERC20DT: EXPIRED\""
                        },
                        "value": "ERC20DT: EXPIRED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4c2ba5eb21081cb84544fd07100fdb35b4fe847127b86c9c3b26ac4cf5ea686",
                          "typeString": "literal_string \"ERC20DT: EXPIRED\""
                        }
                      ],
                      "id": 17468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32301:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32301:53:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17475,
                  "nodeType": "ExpressionStatement",
                  "src": "32301:53:42"
                },
                {
                  "assignments": [
                    17477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17477,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "32372:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17529,
                      "src": "32364:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 17476,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "32364:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17499,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 17481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32438:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 17482,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15908,
                            "src": "32466:16:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 17486,
                                    "name": "PERMIT_TYPEHASH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15911,
                                    "src": "32567:15:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 17487,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17453,
                                    "src": "32608:5:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 17488,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17455,
                                    "src": "32639:7:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 17489,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17457,
                                    "src": "32672:5:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 17493,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "32703:15:42",
                                    "subExpression": {
                                      "baseExpression": {
                                        "id": 17490,
                                        "name": "nonces",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15915,
                                        "src": "32703:6:42",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 17492,
                                      "indexExpression": {
                                        "id": 17491,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 17453,
                                        "src": "32710:5:42",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "32703:13:42",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 17494,
                                    "name": "deadline",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17459,
                                    "src": "32744:8:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 17484,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "32531:3:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 17485,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "32531:10:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 17495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "32531:243:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 17483,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "32500:9:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 17496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "32500:292:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 17479,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "32404:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 17480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "32404:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 17497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32404:402:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 17478,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "32381:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 17498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32381:435:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32364:452:42"
                },
                {
                  "assignments": [
                    17501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17501,
                      "mutability": "mutable",
                      "name": "recoveredAddress",
                      "nameLocation": "32834:16:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17529,
                      "src": "32826:24:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17500,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "32826:7:42",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17508,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 17503,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17477,
                        "src": "32863:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 17504,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17461,
                        "src": "32871:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 17505,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17463,
                        "src": "32874:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 17506,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17465,
                        "src": "32877:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 17502,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "32853:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 17507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32853:26:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32826:53:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 17519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 17515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 17510,
                            "name": "recoveredAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17501,
                            "src": "32910:16:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 17513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "32938:1:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 17512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "32930:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 17511,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "32930:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 17514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "32930:10:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "32910:30:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 17518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 17516,
                            "name": "recoveredAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17501,
                            "src": "32944:16:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 17517,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17453,
                            "src": "32964:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "32944:25:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "32910:59:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323044543a20494e56414c49445f5349474e4154555245",
                        "id": 17520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32983:28:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8c73974ef15a063ffd05dfeebb16968b8307901d6cad005ec27f8f4b20316a3",
                          "typeString": "literal_string \"ERC20DT: INVALID_SIGNATURE\""
                        },
                        "value": "ERC20DT: INVALID_SIGNATURE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8c73974ef15a063ffd05dfeebb16968b8307901d6cad005ec27f8f4b20316a3",
                          "typeString": "literal_string \"ERC20DT: INVALID_SIGNATURE\""
                        }
                      ],
                      "id": 17509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32889:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32889:132:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17522,
                  "nodeType": "ExpressionStatement",
                  "src": "32889:132:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17524,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17453,
                        "src": "33040:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17525,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17455,
                        "src": "33047:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17526,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17457,
                        "src": "33056:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17523,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29035,
                      "src": "33031:8:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 17527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33031:31:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17528,
                  "nodeType": "ExpressionStatement",
                  "src": "33031:31:42"
                }
              ]
            },
            "documentation": {
              "id": 17451,
              "nodeType": "StructuredDocumentation",
              "src": "31665:437:42",
              "text": " @dev permit\n      used for signed approvals, see ERC20Template test for more details\n @param owner user who signed the message\n @param spender spender\n @param value token amount\n @param deadline deadline after which signed message is no more valid\n @param v parameters from signed message\n @param r parameters from signed message\n @param s parameters from signed message"
            },
            "functionSelector": "d505accf",
            "id": 17530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nameLocation": "32117:6:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17453,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "32141:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17530,
                  "src": "32133:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32133:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17455,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "32164:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17530,
                  "src": "32156:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32156:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17457,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "32189:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17530,
                  "src": "32181:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32181:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17459,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "32212:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17530,
                  "src": "32204:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32204:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17461,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "32236:1:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17530,
                  "src": "32230:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17460,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "32230:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17463,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "32255:1:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17530,
                  "src": "32247:9:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17462,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "32247:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17465,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "32274:1:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17530,
                  "src": "32266:9:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17464,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "32266:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32123:158:42"
            },
            "returnParameters": {
              "id": 17467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32291:0:42"
            },
            "scope": 17877,
            "src": "32108:961:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17542,
              "nodeType": "Block",
              "src": "33353:36:42",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 17539,
                      "name": "array",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17534,
                      "src": "33370:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 17540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "33370:12:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 17538,
                  "id": 17541,
                  "nodeType": "Return",
                  "src": "33363:19:42"
                }
              ]
            },
            "documentation": {
              "id": 17531,
              "nodeType": "StructuredDocumentation",
              "src": "33075:163:42",
              "text": " @dev getAddressLength\n      It returns the array lentgh\n@param array address array we want to get length\n @return length"
            },
            "id": 17543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddressLength",
            "nameLocation": "33253:16:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17534,
                  "mutability": "mutable",
                  "name": "array",
                  "nameLocation": "33287:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17543,
                  "src": "33270:22:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17532,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "33270:7:42",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 17533,
                    "nodeType": "ArrayTypeName",
                    "src": "33270:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33269:24:42"
            },
            "returnParameters": {
              "id": 17538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17537,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17543,
                  "src": "33340:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33340:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33339:9:42"
            },
            "scope": 17877,
            "src": "33244:145:42",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 17555,
              "nodeType": "Block",
              "src": "33664:36:42",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 17552,
                      "name": "array",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17547,
                      "src": "33681:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 17553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "33681:12:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 17551,
                  "id": 17554,
                  "nodeType": "Return",
                  "src": "33674:19:42"
                }
              ]
            },
            "documentation": {
              "id": 17544,
              "nodeType": "StructuredDocumentation",
              "src": "33395:157:42",
              "text": " @dev getUintLength\n      It returns the array lentgh\n@param array uint array we want to get length\n @return length"
            },
            "id": 17556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUintLength",
            "nameLocation": "33567:13:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17547,
                  "mutability": "mutable",
                  "name": "array",
                  "nameLocation": "33598:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17556,
                  "src": "33581:22:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17545,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "33581:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17546,
                    "nodeType": "ArrayTypeName",
                    "src": "33581:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33580:24:42"
            },
            "returnParameters": {
              "id": 17551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17550,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17556,
                  "src": "33651:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33651:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33650:9:42"
            },
            "scope": 17877,
            "src": "33558:142:42",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 17568,
              "nodeType": "Block",
              "src": "33980:36:42",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 17565,
                      "name": "array",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17560,
                      "src": "33997:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "id": 17566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "33997:12:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 17564,
                  "id": 17567,
                  "nodeType": "Return",
                  "src": "33990:19:42"
                }
              ]
            },
            "documentation": {
              "id": 17557,
              "nodeType": "StructuredDocumentation",
              "src": "33706:161:42",
              "text": " @dev getBytesLength\n      It returns the array lentgh\n@param array bytes32 array we want to get length\n @return length"
            },
            "id": 17569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBytesLength",
            "nameLocation": "33882:14:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17560,
                  "mutability": "mutable",
                  "name": "array",
                  "nameLocation": "33914:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17569,
                  "src": "33897:22:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17558,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "33897:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 17559,
                    "nodeType": "ArrayTypeName",
                    "src": "33897:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33896:24:42"
            },
            "returnParameters": {
              "id": 17564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17569,
                  "src": "33967:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33967:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33966:9:42"
            },
            "scope": 17877,
            "src": "33873:143:42",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 17593,
              "nodeType": "Block",
              "src": "34224:180:42",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 17580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17575,
                      "name": "paymentCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15897,
                      "src": "34238:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 17578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "34266:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 17577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "34258:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 17576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "34258:7:42",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 17579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "34258:10:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "34238:30:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 17591,
                    "nodeType": "Block",
                    "src": "34350:48:42",
                    "statements": [
                      {
                        "expression": {
                          "id": 17589,
                          "name": "paymentCollector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15897,
                          "src": "34371:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 17574,
                        "id": 17590,
                        "nodeType": "Return",
                        "src": "34364:23:42"
                      }
                    ]
                  },
                  "id": 17592,
                  "nodeType": "IfStatement",
                  "src": "34234:164:42",
                  "trueBody": {
                    "id": 17588,
                    "nodeType": "Block",
                    "src": "34270:74:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 17585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "34331:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 17582,
                                  "name": "_erc721Address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15895,
                                  "src": "34307:14:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 17581,
                                "name": "IERC721Template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3697,
                                "src": "34291:15:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$",
                                  "typeString": "type(contract IERC721Template)"
                                }
                              },
                              "id": 17583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "34291:31:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Template_$3697",
                                "typeString": "contract IERC721Template"
                              }
                            },
                            "id": 17584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3499,
                            "src": "34291:39:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 17586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34291:42:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 17574,
                        "id": 17587,
                        "nodeType": "Return",
                        "src": "34284:49:42"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 17570,
              "nodeType": "StructuredDocumentation",
              "src": "34022:135:42",
              "text": " @dev getPaymentCollector\n      It returns the current paymentCollector\n @return paymentCollector address"
            },
            "functionSelector": "e487c2e8",
            "id": 17594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPaymentCollector",
            "nameLocation": "34172:19:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34191:2:42"
            },
            "returnParameters": {
              "id": 17574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17573,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17594,
                  "src": "34215:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34215:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34214:9:42"
            },
            "scope": 17877,
            "src": "34163:241:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17598,
              "nodeType": "Block",
              "src": "34583:2:42",
              "statements": []
            },
            "documentation": {
              "id": 17595,
              "nodeType": "StructuredDocumentation",
              "src": "34410:140:42",
              "text": " @dev fallback function\n      this is a default fallback function in which receives\n      the collected ether."
            },
            "id": 17599,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34563:2:42"
            },
            "returnParameters": {
              "id": 17597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34583:0:42"
            },
            "scope": 17877,
            "src": "34555:30:42",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17603,
              "nodeType": "Block",
              "src": "34765:2:42",
              "statements": []
            },
            "documentation": {
              "id": 17600,
              "nodeType": "StructuredDocumentation",
              "src": "34595:138:42",
              "text": " @dev receive function\n      this is a default receive function in which receives\n      the collected ether."
            },
            "id": 17604,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34745:2:42"
            },
            "returnParameters": {
              "id": 17602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34765:0:42"
            },
            "scope": 17877,
            "src": "34738:29:42",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17621,
              "nodeType": "Block",
              "src": "34922:79:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 17616,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "34980:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Template_$17877",
                                "typeString": "contract ERC20Template"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Template_$17877",
                                "typeString": "contract ERC20Template"
                              }
                            ],
                            "id": 17615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "34972:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17614,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "34972:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34972:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 17618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "34972:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 17610,
                              "name": "getPaymentCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17594,
                              "src": "34940:19:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 17611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "34940:21:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "34932:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 17608,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "34932:8:42",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 17612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34932:30:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 17613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "34932:39:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 17619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34932:62:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17620,
                  "nodeType": "ExpressionStatement",
                  "src": "34932:62:42"
                }
              ]
            },
            "documentation": {
              "id": 17605,
              "nodeType": "StructuredDocumentation",
              "src": "34773:104:42",
              "text": " @dev withdrawETH\n      transfers all the accumlated ether the collector account"
            },
            "functionSelector": "e086e5ec",
            "id": 17622,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawETH",
            "nameLocation": "34891:11:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34902:2:42"
            },
            "returnParameters": {
              "id": 17607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34922:0:42"
            },
            "scope": 17877,
            "src": "34882:119:42",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17639,
              "nodeType": "Block",
              "src": "35169:89:42",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 17634,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17625,
                              "src": "35233:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 17631,
                                  "name": "_erc721Address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15895,
                                  "src": "35202:14:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 17630,
                                "name": "IERC721Template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3697,
                                "src": "35186:15:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Template_$3697_$",
                                  "typeString": "type(contract IERC721Template)"
                                }
                              },
                              "id": 17632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "35186:31:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Template_$3697",
                                "typeString": "contract IERC721Template"
                              }
                            },
                            "id": 17633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPermissions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3615,
                            "src": "35186:46:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Roles_$3598_memory_ptr_$",
                              "typeString": "function (address) view external returns (struct IERC721Template.Roles memory)"
                            }
                          },
                          "id": 17635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35186:52:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Roles_$3598_memory_ptr",
                            "typeString": "struct IERC721Template.Roles memory"
                          }
                        },
                        "id": 17636,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deployERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3593,
                        "src": "35186:64:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 17637,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "35185:66:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 17629,
                  "id": 17638,
                  "nodeType": "Return",
                  "src": "35179:72:42"
                }
              ]
            },
            "documentation": {
              "id": 17623,
              "nodeType": "StructuredDocumentation",
              "src": "35007:93:42",
              "text": " @dev isERC20Deployer\n      returns true if address has deployERC20 role"
            },
            "functionSelector": "96fb3eaf",
            "id": 17640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isERC20Deployer",
            "nameLocation": "35114:15:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17625,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "35138:4:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17640,
                  "src": "35130:12:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35130:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35129:14:42"
            },
            "returnParameters": {
              "id": 17629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17640,
                  "src": "35164:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17627,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "35164:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35163:6:42"
            },
            "scope": 17877,
            "src": "35105:153:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17650,
              "nodeType": "Block",
              "src": "35424:38:42",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 17647,
                        "name": "deployedPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15920,
                        "src": "35441:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "id": 17648,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "35440:15:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 17646,
                  "id": 17649,
                  "nodeType": "Return",
                  "src": "35434:21:42"
                }
              ]
            },
            "documentation": {
              "id": 17641,
              "nodeType": "StructuredDocumentation",
              "src": "35264:97:42",
              "text": " @dev getPools\n      Returns the list of pools created for this datatoken"
            },
            "functionSelector": "673a2a1f",
            "id": 17651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPools",
            "nameLocation": "35375:8:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35383:2:42"
            },
            "returnParameters": {
              "id": 17646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17645,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17651,
                  "src": "35406:16:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17643,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "35406:7:42",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 17644,
                    "nodeType": "ArrayTypeName",
                    "src": "35406:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35405:18:42"
            },
            "scope": 17877,
            "src": "35366:96:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17662,
              "nodeType": "Block",
              "src": "35652:43:42",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 17659,
                        "name": "fixedRateExchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15929,
                        "src": "35669:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                          "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                        }
                      }
                    ],
                    "id": 17660,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "35668:20:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage",
                      "typeString": "struct ERC20Template.fixedRate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 17658,
                  "id": 17661,
                  "nodeType": "Return",
                  "src": "35662:26:42"
                }
              ]
            },
            "documentation": {
              "id": 17652,
              "nodeType": "StructuredDocumentation",
              "src": "35467:115:42",
              "text": " @dev getFixedRates\n      Returns the list of fixedRateExchanges created for this datatoken"
            },
            "functionSelector": "7dda231e",
            "id": 17663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFixedRates",
            "nameLocation": "35596:13:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35609:2:42"
            },
            "returnParameters": {
              "id": 17658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17663,
                  "src": "35632:18:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20Template.fixedRate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17655,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 17654,
                        "name": "fixedRate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 15925,
                        "src": "35632:9:42"
                      },
                      "referencedDeclaration": 15925,
                      "src": "35632:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_fixedRate_$15925_storage_ptr",
                        "typeString": "struct ERC20Template.fixedRate"
                      }
                    },
                    "id": 17656,
                    "nodeType": "ArrayTypeName",
                    "src": "35632:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_fixedRate_$15925_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20Template.fixedRate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35631:20:42"
            },
            "scope": 17877,
            "src": "35587:108:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17673,
              "nodeType": "Block",
              "src": "35875:35:42",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 17670,
                        "name": "dispensers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15932,
                        "src": "35892:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "id": 17671,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "35891:12:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 17669,
                  "id": 17672,
                  "nodeType": "Return",
                  "src": "35885:18:42"
                }
              ]
            },
            "documentation": {
              "id": 17664,
              "nodeType": "StructuredDocumentation",
              "src": "35700:107:42",
              "text": " @dev getDispensers\n      Returns the list of dispensers created for this datatoken"
            },
            "functionSelector": "47ac7d55",
            "id": 17674,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDispensers",
            "nameLocation": "35821:13:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35834:2:42"
            },
            "returnParameters": {
              "id": 17669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17668,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17674,
                  "src": "35857:16:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17666,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "35857:7:42",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 17667,
                    "nodeType": "ArrayTypeName",
                    "src": "35857:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35856:18:42"
            },
            "scope": 17877,
            "src": "35812:98:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17718,
              "nodeType": "Block",
              "src": "36045:251:42",
              "statements": [
                {
                  "assignments": [
                    17686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17686,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "36063:13:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17718,
                      "src": "36055:21:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17685,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "36055:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17693,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 17691,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17680,
                        "src": "36103:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 17688,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17676,
                            "src": "36086:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17687,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27843,
                          "src": "36079:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 17689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36079:13:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27843",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 17690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27782,
                      "src": "36079:23:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 17692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36079:27:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36055:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17698,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17678,
                        "src": "36147:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17699,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17680,
                        "src": "36153:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17700,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17682,
                        "src": "36157:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 17695,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17676,
                            "src": "36123:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17694,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27843,
                          "src": "36116:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 17696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36116:13:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27843",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 17697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27900,
                      "src": "36116:30:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27843_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27843_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 17701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36116:48:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17702,
                  "nodeType": "ExpressionStatement",
                  "src": "36116:48:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 17708,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17680,
                              "src": "36206:2:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 17705,
                                  "name": "erc20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17676,
                                  "src": "36189:5:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 17704,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27843,
                                "src": "36182:6:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$27843_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 17706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "36182:13:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27843",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 17707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27782,
                            "src": "36182:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 17709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36182:27:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 17712,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17682,
                              "src": "36231:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 17710,
                              "name": "balanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17686,
                              "src": "36213:13:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 17711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28243,
                            "src": "36213:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 17713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36213:25:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "36182:56:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657220616d6f756e7420697320746f6f206c6f77",
                        "id": 17715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36260:28:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc64ab46a7322dccc3bfe7ade6ffceda60a180db11389567270dab250e90d5c1",
                          "typeString": "literal_string \"Transfer amount is too low\""
                        },
                        "value": "Transfer amount is too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc64ab46a7322dccc3bfe7ade6ffceda60a180db11389567270dab250e90d5c1",
                          "typeString": "literal_string \"Transfer amount is too low\""
                        }
                      ],
                      "id": 17703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "36174:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36174:115:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17717,
                  "nodeType": "ExpressionStatement",
                  "src": "36174:115:42"
                }
              ]
            },
            "id": 17719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pullUnderlying",
            "nameLocation": "35925:15:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17676,
                  "mutability": "mutable",
                  "name": "erc20",
                  "nameLocation": "35958:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17719,
                  "src": "35950:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35950:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17678,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "35981:4:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17719,
                  "src": "35973:12:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35973:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17680,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "36003:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17719,
                  "src": "35995:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35995:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17682,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "36023:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17719,
                  "src": "36015:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "36015:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35940:95:42"
            },
            "returnParameters": {
              "id": 17684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36045:0:42"
            },
            "scope": 17877,
            "src": "35916:380:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17814,
              "nodeType": "Block",
              "src": "36929:1093:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 17736,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "36947:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 17737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "36947:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 17738,
                          "name": "consumerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17732,
                          "src": "36961:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "36947:29:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76696465722063616e6e6f742062652074686520636f6e73756d6572",
                        "id": 17740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36978:33:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9866e342fceb89983818c3628520a6b76286cece247d78afa8b61d9a7e4fd16",
                          "typeString": "literal_string \"Provider cannot be the consumer\""
                        },
                        "value": "Provider cannot be the consumer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9866e342fceb89983818c3628520a6b76286cece247d78afa8b61d9a7e4fd16",
                          "typeString": "literal_string \"Provider cannot be the consumer\""
                        }
                      ],
                      "id": 17735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "36939:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36939:73:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17742,
                  "nodeType": "ExpressionStatement",
                  "src": "36939:73:42"
                },
                {
                  "assignments": [
                    17744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17744,
                      "mutability": "mutable",
                      "name": "prefix",
                      "nameLocation": "37035:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17814,
                      "src": "37022:19:42",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 17743,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "37022:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17746,
                  "initialValue": {
                    "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                    "id": 17745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "37044:34:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                      "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                    },
                    "value": "\u0019Ethereum Signed Message:\n32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37022:56:42"
                },
                {
                  "assignments": [
                    17748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17748,
                      "mutability": "mutable",
                      "name": "providerHash",
                      "nameLocation": "37096:12:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17814,
                      "src": "37088:20:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 17747,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "37088:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17762,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 17752,
                            "name": "prefix",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17744,
                            "src": "37151:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 17756,
                                    "name": "orderTxId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17722,
                                    "src": "37248:9:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 17757,
                                    "name": "providerData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17724,
                                    "src": "37283:12:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "expression": {
                                    "id": 17754,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "37206:3:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 17755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "37206:16:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 17758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37206:111:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 17753,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "37175:9:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 17759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37175:160:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 17750,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "37134:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 17751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "37134:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 17760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "37134:215:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 17749,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "37111:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 17761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37111:248:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37088:271:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 17765,
                              "name": "providerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17748,
                              "src": "37389:12:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 17766,
                              "name": "providerSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17726,
                              "src": "37403:17:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 17764,
                            "name": "_ecrecovery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17876,
                            "src": "37377:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 17767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "37377:44:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 17768,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "37425:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 17769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "37425:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "37377:58:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f7669646572207369676e617475726520636865636b206661696c6564",
                        "id": 17771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "37437:33:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80fdb21793ff9b0393185578b5970e57d3e88edde259189c27f02867878f1646",
                          "typeString": "literal_string \"Provider signature check failed\""
                        },
                        "value": "Provider signature check failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80fdb21793ff9b0393185578b5970e57d3e88edde259189c27f02867878f1646",
                          "typeString": "literal_string \"Provider signature check failed\""
                        }
                      ],
                      "id": 17763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "37369:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37369:102:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17773,
                  "nodeType": "ExpressionStatement",
                  "src": "37369:102:42"
                },
                {
                  "assignments": [
                    17775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17775,
                      "mutability": "mutable",
                      "name": "consumerHash",
                      "nameLocation": "37489:12:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17814,
                      "src": "37481:20:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 17774,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "37481:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17788,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 17779,
                            "name": "prefix",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17744,
                            "src": "37544:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 17783,
                                    "name": "consumerData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17728,
                                    "src": "37641:12:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "expression": {
                                    "id": 17781,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "37599:3:42",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 17782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "37599:16:42",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 17784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37599:76:42",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 17780,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "37568:9:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 17785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37568:125:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 17777,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "37527:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 17778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "37527:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 17786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "37527:180:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 17776,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "37504:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 17787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37504:213:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37481:236:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 17791,
                              "name": "consumerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17775,
                              "src": "37747:12:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 17792,
                              "name": "consumerSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17730,
                              "src": "37761:17:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 17790,
                            "name": "_ecrecovery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17876,
                            "src": "37735:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 17793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "37735:44:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 17794,
                          "name": "consumerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17732,
                          "src": "37783:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "37735:63:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e73756d6572207369676e617475726520636865636b206661696c6564",
                        "id": 17796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "37800:33:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b28f658b704c8faea2c17997bd50361d62e5b7493de843084ea5e47f9ddfd3a4",
                          "typeString": "literal_string \"Consumer signature check failed\""
                        },
                        "value": "Consumer signature check failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b28f658b704c8faea2c17997bd50361d62e5b7493de843084ea5e47f9ddfd3a4",
                          "typeString": "literal_string \"Consumer signature check failed\""
                        }
                      ],
                      "id": 17789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "37727:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37727:107:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17798,
                  "nodeType": "ExpressionStatement",
                  "src": "37727:107:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 17800,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "37863:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "37863:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17802,
                        "name": "consumerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17732,
                        "src": "37875:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17803,
                        "name": "orderTxId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17722,
                        "src": "37892:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 17804,
                        "name": "providerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17724,
                        "src": "37903:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 17805,
                        "name": "providerSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17726,
                        "src": "37917:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 17806,
                        "name": "consumerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17728,
                        "src": "37952:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 17807,
                        "name": "consumerSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17730,
                        "src": "37966:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 17808,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "37985:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 17809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "37985:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 17810,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "38002:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 17811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "38002:12:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17799,
                      "name": "OrderExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16002,
                      "src": "37849:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes memory,bytes memory,bytes memory,bytes memory,uint256,uint256)"
                      }
                    },
                    "id": 17812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37849:166:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17813,
                  "nodeType": "EmitStatement",
                  "src": "37844:171:42"
                }
              ]
            },
            "documentation": {
              "id": 17720,
              "nodeType": "StructuredDocumentation",
              "src": "36303:365:42",
              "text": " @dev orderExecuted\n      Providers should call this to prove order execution\n @param orderTxId order tx\n @param providerData provider data\n @param providerSignature provider signature\n @param consumerData consumer data\n @param consumerSignature consumer signature\n @param consumerAddress consumer address"
            },
            "functionSelector": "89208f0f",
            "id": 17815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "orderExecuted",
            "nameLocation": "36682:13:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17722,
                  "mutability": "mutable",
                  "name": "orderTxId",
                  "nameLocation": "36713:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17815,
                  "src": "36705:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17721,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "36705:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17724,
                  "mutability": "mutable",
                  "name": "providerData",
                  "nameLocation": "36747:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17815,
                  "src": "36732:27:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 17723,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "36732:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17726,
                  "mutability": "mutable",
                  "name": "providerSignature",
                  "nameLocation": "36784:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17815,
                  "src": "36769:32:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 17725,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "36769:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17728,
                  "mutability": "mutable",
                  "name": "consumerData",
                  "nameLocation": "36826:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17815,
                  "src": "36811:27:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 17727,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "36811:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17730,
                  "mutability": "mutable",
                  "name": "consumerSignature",
                  "nameLocation": "36863:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17815,
                  "src": "36848:32:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 17729,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "36848:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17732,
                  "mutability": "mutable",
                  "name": "consumerAddress",
                  "nameLocation": "36898:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17815,
                  "src": "36890:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36890:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36695:224:42"
            },
            "returnParameters": {
              "id": 17734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36929:0:42"
            },
            "scope": 17877,
            "src": "36673:1349:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17875,
              "nodeType": "Block",
              "src": "38115:439:42",
              "statements": [
                {
                  "assignments": [
                    17825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17825,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "38133:1:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17875,
                      "src": "38125:9:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 17824,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "38125:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17826,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38125:9:42"
                },
                {
                  "assignments": [
                    17828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17828,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "38152:1:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17875,
                      "src": "38144:9:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 17827,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "38144:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17829,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38144:9:42"
                },
                {
                  "assignments": [
                    17831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17831,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "38169:1:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 17875,
                      "src": "38163:7:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 17830,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "38163:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17832,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38163:7:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 17833,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17819,
                        "src": "38184:3:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 17834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "38184:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "3635",
                      "id": 17835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "38198:2:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_65_by_1",
                        "typeString": "int_const 65"
                      },
                      "value": "65"
                    },
                    "src": "38184:16:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17843,
                  "nodeType": "IfStatement",
                  "src": "38180:62:42",
                  "trueBody": {
                    "id": 17842,
                    "nodeType": "Block",
                    "src": "38202:40:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "38229:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "38221:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17837,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "38221:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38221:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 17823,
                        "id": 17841,
                        "nodeType": "Return",
                        "src": "38214:17:42"
                      }
                    ]
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "38260:122:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "38272:24:42",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "38287:3:42"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "38292:2:42",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "38283:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "38283:12:42"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "38277:5:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "38277:19:42"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "38272:1:42"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "38305:24:42",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "38320:3:42"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "38325:2:42",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "38316:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "38316:12:42"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "38310:5:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "38310:19:42"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "38305:1:42"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "38338:34:42",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "sig",
                                      "nodeType": "YulIdentifier",
                                      "src": "38357:3:42"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "38362:2:42",
                                      "type": "",
                                      "value": "65"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "38353:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "38353:12:42"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "38347:5:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "38347:19:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "38368:3:42",
                              "type": "",
                              "value": "255"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "38343:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "38343:29:42"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "38338:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 17825,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "38272:1:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17828,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "38305:1:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17819,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "38287:3:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17819,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "38320:3:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17819,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "38357:3:42",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17831,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "38338:1:42",
                      "valueSize": 1
                    }
                  ],
                  "id": 17844,
                  "nodeType": "InlineAssembly",
                  "src": "38251:131:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 17847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17845,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17831,
                      "src": "38395:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3237",
                      "id": 17846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "38399:2:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_27_by_1",
                        "typeString": "int_const 27"
                      },
                      "value": "27"
                    },
                    "src": "38395:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17853,
                  "nodeType": "IfStatement",
                  "src": "38391:42:42",
                  "trueBody": {
                    "id": 17852,
                    "nodeType": "Block",
                    "src": "38403:30:42",
                    "statements": [
                      {
                        "expression": {
                          "id": 17850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 17848,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17831,
                            "src": "38415:1:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "3237",
                            "id": 17849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "38420:2:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_27_by_1",
                              "typeString": "int_const 27"
                            },
                            "value": "27"
                          },
                          "src": "38415:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 17851,
                        "nodeType": "ExpressionStatement",
                        "src": "38415:7:42"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 17860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 17856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 17854,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17831,
                        "src": "38449:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "3237",
                        "id": 17855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38454:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_27_by_1",
                          "typeString": "int_const 27"
                        },
                        "value": "27"
                      },
                      "src": "38449:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 17859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 17857,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17831,
                        "src": "38460:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "3238",
                        "id": 17858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38465:2:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_28_by_1",
                          "typeString": "int_const 28"
                        },
                        "value": "28"
                      },
                      "src": "38460:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "38449:18:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17867,
                  "nodeType": "IfStatement",
                  "src": "38445:62:42",
                  "trueBody": {
                    "id": 17866,
                    "nodeType": "Block",
                    "src": "38469:38:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "38494:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "38486:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17861,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "38486:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38486:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 17823,
                        "id": 17865,
                        "nodeType": "Return",
                        "src": "38479:17:42"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17869,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17817,
                        "src": "38533:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 17870,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17831,
                        "src": "38539:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 17871,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17825,
                        "src": "38542:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 17872,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17828,
                        "src": "38545:1:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 17868,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "38523:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 17873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38523:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 17823,
                  "id": 17874,
                  "nodeType": "Return",
                  "src": "38516:31:42"
                }
              ]
            },
            "id": 17876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ecrecovery",
            "nameLocation": "38039:11:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17817,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "38059:4:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17876,
                  "src": "38051:12:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17816,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "38051:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17819,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "38078:3:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 17876,
                  "src": "38065:16:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 17818,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "38065:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38050:32:42"
            },
            "returnParameters": {
              "id": 17823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17876,
                  "src": "38106:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38106:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38105:9:42"
            },
            "scope": 17877,
            "src": "38030:524:42",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 17878,
        "src": "1178:37379:42",
        "usedErrors": []
      }
    ],
    "src": "0:38558:42"
  },
  "bytecode": "6080604052600b805460ff191690553480156200001b57600080fd5b5060408051808201825260048152631d195cdd60e21b60208083019182528351808501909452600a8452691d195cdd14de5b589bdb60b21b9084015281519192916200006a916003916200008e565b508051620000809060049060208401906200008e565b505060016007555062000171565b8280546200009c9062000134565b90600052602060002090601f016020900481019282620000c057600085556200010b565b82601f10620000db57805160ff19168380011785556200010b565b828001600101855582156200010b579182015b828111156200010b578251825591602001919060010190620000ee565b50620001199291506200011d565b5090565b5b808211156200011957600081556001016200011e565b600181811c908216806200014957607f821691505b602082108114156200016b57634e487b7160e01b600052602260045260246000fd5b50919050565b615eb380620001816000396000f3fe6080604052600436106102c65760003560e01c80635d1ca6311161017e578063a457c2d7116100d3578063d505accf1161008f578063e487c2e81161006c578063e487c2e8146109a3578063ec342ad0146109b8578063ef867ff4146109d4578063f887ea40146109f457005b8063d505accf14610935578063dd62ed3e14610955578063e086e5ec1461099b57005b8063a457c2d71461085c578063a9059cbb1461087c578063aa271e1a1461089c578063aa492ef9146108d5578063ab62f0e1146108f5578063b3998be01461091557005b80637ecebe001161013a5780638b96412b116101175780638b96412b146107e757806395d89b411461080757806396fb3eaf1461081c578063983b2d561461083c57005b80637ecebe001461078557806382c03da5146107b257806389208f0f146107c757005b80635d1ca631146106c4578063673a2a1f146106d857806370a08231146106ed57806379cc67901461072357806379d9d7f3146107435780637dda231e1461076357005b8063355274ea1161023457806340c10f19116101f05780634f189cb2116101cd5780634f189cb21461064f57806357a3a31b1461066457806357ad5ff6146106845780635bfe4da0146106a457005b806340c10f19146105ed57806342966c681461060d57806347ac7d551461062d57005b8063355274ea1461052e578063361fef49146105435780633644e51514610563578063392e53cd146105795780633950935114610591578063397b3743146105b157005b8063191c918a11610283578063191c918a1461045857806323b872dd1461047857806325b00243146104985780633092afd5146104b857806330adf81f146104d8578063313ce5671461050c57005b80627ffb78146102cf57806301e882081461030b57806306fdde031461035b578063095ea7b31461037d578063160a7925146103ad57806318160ddd1461043957005b366102cd57005b005b3480156102db57600080fd5b50600b5461010090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561031757600080fd5b50610344610326366004614e12565b60056020526000908152604090205460ff8082169161010090041682565b604080519215158352901515602083015201610302565b34801561036757600080fd5b50610370610a14565b6040516103029190614e5b565b34801561038957600080fd5b5061039d610398366004614e8e565b610aa6565b6040519015158152602001610302565b3480156103b957600080fd5b5061041a6103c8366004614e12565b6040805180820190915260008082526020820152506001600160a01b031660009081526005602090815260409182902082518084019093525460ff808216151584526101009091041615159082015290565b6040805182511515815260209283015115159281019290925201610302565b34801561044557600080fd5b506002545b604051908152602001610302565b34801561046457600080fd5b506102cd610473366004614ec8565b610abd565b34801561048457600080fd5b5061039d610493366004614f27565b610d1e565b3480156104a457600080fd5b506102cd6104b3366004614e12565b610dca565b3480156104c457600080fd5b506102cd6104d3366004614e12565b610ee9565b3480156104e457600080fd5b5061044a7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b34801561051857600080fd5b5060125b60405160ff9091168152602001610302565b34801561053a57600080fd5b50600a5461044a565b34801561054f57600080fd5b506102cd61055e366004614f81565b611005565b34801561056f57600080fd5b5061044a60105481565b34801561058557600080fd5b50600b5460ff1661039d565b34801561059d57600080fd5b5061039d6105ac366004614e8e565b611083565b3480156105bd57600080fd5b50600d54600e54600f54604080516001600160a01b03948516815293909216602084015290820152606001610302565b3480156105f957600080fd5b506102cd610608366004614e8e565b6110bf565b34801561061957600080fd5b506102cd610628366004614fc7565b611190565b34801561063957600080fd5b5061064261119a565b6040516103029190615024565b34801561065b57600080fd5b506102cd6111fb565b34801561067057600080fd5b506102cd61067f366004614e12565b6112d6565b34801561069057600080fd5b506102cd61069f366004614f27565b61149d565b3480156106b057600080fd5b506102ee6106bf36600461516f565b611656565b3480156106d057600080fd5b50600161051c565b3480156106e457600080fd5b50610642611ae1565b3480156106f957600080fd5b5061044a610708366004614e12565b6001600160a01b031660009081526020819052604090205490565b34801561072f57600080fd5b506102cd61073e366004614e8e565b611b41565b34801561074f57600080fd5b506102cd61075e3660046151f6565b611bc7565b34801561076f57600080fd5b50610778611ffe565b6040516103029190615269565b34801561079157600080fd5b5061044a6107a0366004614e12565b60116020526000908152604090205481565b3480156107be57600080fd5b506102cd612073565b3480156107d357600080fd5b506102cd6107e2366004615309565b6120d2565b3480156107f357600080fd5b5061044a6108023660046153e6565b6123bf565b34801561081357600080fd5b506103706126d8565b34801561082857600080fd5b5061039d610837366004614e12565b6126e7565b34801561084857600080fd5b506102cd610857366004614e12565b612765565b34801561086857600080fd5b5061039d610877366004614e8e565b612881565b34801561088857600080fd5b5061039d610897366004614e8e565b61291a565b3480156108a857600080fd5b5061039d6108b7366004614e12565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156108e157600080fd5b506102cd6108f0366004614e12565b612927565b34801561090157600080fd5b506102cd610910366004615451565b612a43565b34801561092157600080fd5b5061039d6109303660046154d6565b612bfe565b34801561094157600080fd5b506102cd6109503660046155d7565b612d31565b34801561096157600080fd5b5061044a610970366004615645565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102cd612f43565b3480156109af57600080fd5b506102ee612f83565b3480156109c457600080fd5b5061044a670de0b6b3a764000081565b3480156109e057600080fd5b506102ee6109ef366004614fc7565b61301c565b348015610a0057600080fd5b506012546102ee906001600160a01b031681565b606060088054610a239061567e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4f9061567e565b8015610a9c5780601f10610a7157610100808354040283529160200191610a9c565b820191906000526020600020905b815481529060010190602001808311610a7f57829003601f168201915b5050505050905090565b6000610ab3338484613046565b5060015b92915050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d91906156b3565b6020015180610bb45750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba99190615737565b6001600160a01b0316145b610bd95760405162461bcd60e51b8152600401610bd090615754565b60405180910390fd5b60026007541415610bfc5760405162461bcd60e51b8152600401610bd090615789565b60026007558115610c1057610c108561316a565b601580546001810182556000919091527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750180546001600160a01b0319166001600160a01b0387169081179091556040519081527fa31ffd41531537eb31bfd827a3f5372b5f62bf4dd8579e5354b280dc58490e709060200160405180910390a1601254604051636b14d00560e11b81526001600160a01b038781166004830152306024830152604482018790526064820186905233608483015283811660a48301529091169063d629a00a9060c401600060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b5050600160075550505050505050565b6000610d2b848484613241565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610db05760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610bd0565b610dbd8533858403613046565b60019150505b9392505050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3a91906156b3565b6020015180610ec15750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190615737565b6001600160a01b0316145b610edd5760405162461bcd60e51b8152600401610bd090615754565b610ee681613411565b50565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5991906156b3565b6020015180610fe05750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190615737565b6001600160a01b0316145b610ffc5760405162461bcd60e51b8152600401610bd090615754565b610ee681613483565b600260075414156110285760405162461bcd60e51b8152600401610bd090615789565b600260075560408051838152336020820152428183015243606082015290517f526e31449ea46e2aecf9b480c8d7dfa191348ef74ffdf75b445a6ab726daa6ff9181900360800190a161107a816134e3565b50506001600755565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610ab39185906110ba9086906157d6565b613046565b3360009081526005602052604090205460ff1661111e5760405162461bcd60e51b815260206004820152601960248201527f455243323054656d706c6174653a204e4f54204d494e544552000000000000006044820152606401610bd0565b600a546111348261112e60025490565b906138f5565b11156111825760405162461bcd60e51b815260206004820152601f60248201527f44617461746f6b656e54656d706c6174653a20636170206578636565646564006044820152606401610bd0565b61118c8282613901565b5050565b610ee633826139e0565b60606015805480602002602001604051908101604052809291908181526020018280548015610a9c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111d4575050505050905090565b600b546040516331a9108f60e11b8152600160048201526101009091046001600160a01b031690636352211e90602401602060405180830381865afa158015611248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126c9190615737565b6001600160a01b0316336001600160a01b0316146112cc5760405162461bcd60e51b815260206004820152601b60248201527f455243323054656d706c6174653a206e6f74204e46544f776e657200000000006044820152606401610bd0565b6112d4613b2e565b565b33600090815260056020526040902054610100900460ff16806113695750600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015611340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136491906156b3565b602001515b806113ec5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa1580156113bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e19190615737565b6001600160a01b0316145b61144c5760405162461bcd60e51b815260206004820152602b60248201527f455243323054656d706c6174653a204e4f54205041594d454e54204d414e414760448201526a22a91037b91027aba722a960a91b6064820152608401610bd0565b61145581613ffc565b604080514281524360208201526001600160a01b0383169133917f4d7694d695c57cc54947177c8e8a0e61aae664e9223492a798c32fadfc6419cc910160405180910390a350565b600d546001600160a01b0316331461150a5760405162461bcd60e51b815260206004820152602a60248201527f455243323054656d706c6174653a206e6f74207075626c6973684d61726b65746044820152694665654164647265737360b01b6064820152608401610bd0565b6001600160a01b0383166115715760405162461bcd60e51b815260206004820152602860248201527f496e76616c6964205f7075626c6973684d61726b657446656541646472657373604482015267206164647265737360c01b6064820152608401610bd0565b6001600160a01b0382166115d65760405162461bcd60e51b815260206004820152602660248201527f496e76616c6964205f7075626c6973684d61726b6574466565546f6b656e206160448201526564647265737360d01b6064820152608401610bd0565b600d80546001600160a01b038581166001600160a01b03199283168117909355600e8054918616919092168117909155600f839055604080513381526020810193909352820152606081018290527f02ab4b3fc023109c2d0da394bda239166c833f63c42b71b67ed4b836dca0ddfe9060800160405180910390a1505050565b600b5460405163160a792560e01b815233600482015260009161010090046001600160a01b03169063160a792590602401608060405180830381865afa1580156116a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c891906156b3565b602001518061174f5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015611720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117449190615737565b6001600160a01b0316145b61176b5760405162461bcd60e51b8152600401610bd090615754565b6002600754141561178e5760405162461bcd60e51b8152600401610bd090615789565b600260075561179c60025490565b156117f55760405162461bcd60e51b8152602060048201526024808201527f455243323054656d706c6174653a20746f6b656e7320616c7265616479206d696044820152631b9d195960e21b6064820152608401610bd0565b6118188260008151811061180b5761180b6157ee565b602002602001015161316a565b601260009054906101000a90046001600160a01b03166001600160a01b031663510f34656040518163ffffffff1660e01b8152600401602060405180830381865afa15801561186b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188f9190615804565b846003815181106118a2576118a26157ee565b602002602001015110156119385760405162461bcd60e51b815260206004820152605160248201527f455243323054656d706c6174653a2056657374696e6720706572696f6420746f60448201527f6f206c6f772e2053656520466163746f7279526f757465722e6d696e56657374606482015270696e67506572696f64496e426c6f636b7360781b608482015260a401610bd0565b60006040518060400160405280306001600160a01b03166001600160a01b0316815260200184600181518110611970576119706157ee565b60209081029190910101516001600160a01b0390811690915260125460405163ee3bc63560e01b8152929350169063ee3bc635906119b890849089908990899060040161584d565b6020604051808303816000875af11580156119d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fb9190615737565b6013805460018101825560009182527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180546001600160a01b0319166001600160a01b03841617905584519193507fd02da1bec30f7f750aa0a131745dfb9ce96767c45a192dc26409f5d690e0b9679184918691611a7c57611a7c6157ee565b602002602001015185600181518110611a9757611a976157ee565b6020026020010151604051611acc939291906001600160a01b0393841681529183166020830152909116604082015260600190565b60405180910390a15060016007559392505050565b60606013805480602002602001604051908101604052809291908181526020018280548015610a9c576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116111d4575050505050905090565b6000611b4d8333610970565b905081811015611bab5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610bd0565b611bb88333848403613046565b611bc283836139e0565b505050565b60026007541415611bea5760405162461bcd60e51b8152600401610bd090615789565b600260075533600090815260208190526040902054670de0b6b3a764000090811115611c645760405162461bcd60e51b8152602060048201526024808201527f4e6f7420656e6f7567682064617461746f6b656e7320746f207374617274204f604482015263393232b960e11b6064820152608401610bd0565b600d5460408051338152602081018490529081018690524260608201524360808201526001600160a01b03918216918716907fe1c4fa794edfa8f619b8257a077398950357b9c6398528f94480307352f9afcc9060a00160405180910390a36000600f54118015611cdf5750600e546001600160a01b031615155b8015611cf55750600d546001600160a01b031615155b15611d6a57600e54600d54600f54611d1d926001600160a01b0390811692339291169061401e565b600e54600d54600f546040519081526001600160a01b0392831692909116907f4049a448ac6f0284a98d2cb9199e73605944ea5bec901a037f88c84703de82b29060200160405180910390a35b60008260400135118015611d9757506000611d8b6040840160208501614e12565b6001600160a01b031614155b8015611db957506000611dad6020840184614e12565b6001600160a01b031614155b15611e5657611de9611dd16040840160208501614e12565b33611ddf6020860186614e12565b856040013561401e565b611df96040830160208401614e12565b6001600160a01b0316611e0f6020840184614e12565b6001600160a01b03167f6d11837f46cc09b011cf4aae09fcade046c020aac088090ae4f77ff67b7079728460400135604051611e4d91815260200190565b60405180910390a35b611e5f836134e3565b60125460408051637d28354d60e01b815290516000926001600160a01b031691637d28354d9160048083019260209291908290030181865afa158015611ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ecd9190615804565b9050611ee4611eda612f83565b610897848461416c565b611f305760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2073656e6420445420746f207075626c697368657200006044820152606401610bd0565b60125460408051631a81876d60e01b81529051611fa5926001600160a01b031691631a81876d9160048083019260209291908290030181865afa158015611f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9f9190615737565b8261291a565b611ff15760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f2073656e6420445420746f204f504300000000000000006044820152606401610bd0565b5050600160075550505050565b60606014805480602002602001604051908101604052809291908181526020016000905b8282101561206a576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101612022565b50505050905090565b600b5461010090046001600160a01b031633146112cc5760405162461bcd60e51b815260206004820152601f60248201527f455243323054656d706c6174653a204e4f542037323120436f6e7472616374006044820152606401610bd0565b336001600160a01b038216141561212b5760405162461bcd60e51b815260206004820152601f60248201527f50726f76696465722063616e6e6f742062652074686520636f6e73756d6572006044820152606401610bd0565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525090506000818c8c8c60405160200161217d939291906158b8565b604051602081830303815290604052805190602001206040516020016121a49291906158d2565b604051602081830303815290604052805190602001209050336001600160a01b0316612206828b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061417892505050565b6001600160a01b03161461225c5760405162461bcd60e51b815260206004820152601f60248201527f50726f7669646572207369676e617475726520636865636b206661696c6564006044820152606401610bd0565b60008288886040516020016122729291906158f4565b604051602081830303815290604052805190602001206040516020016122999291906158d2565b604051602081830303815290604052805190602001209050836001600160a01b03166122fb8288888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061417892505050565b6001600160a01b0316146123515760405162461bcd60e51b815260206004820152601f60248201527f436f6e73756d6572207369676e617475726520636865636b206661696c6564006044820152606401610bd0565b836001600160a01b0316336001600160a01b03167fc9a10280e9c735c63092fa5431e6acb3ed342e08b69a083e5e676994eb7070f98f8f8f8f8f8f8f8f8f42436040516123a89b9a9998979695949392919061592d565b60405180910390a350505050505050505050505050565b600b5460405163160a792560e01b815233600482015260009161010090046001600160a01b03169063160a792590602401608060405180830381865afa15801561240d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243191906156b3565b60200151806124b85750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015612489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ad9190615737565b6001600160a01b0316145b6124d45760405162461bcd60e51b8152600401610bd090615754565b600260075414156124f75760405162461bcd60e51b8152600401610bd090615789565b6002600781905550600082600481518110612514576125146157ee565b6020026020010151111561252b5761252b8461316a565b601254604051638244937560e01b81526001600160a01b039091169063824493759061255f9087908790879060040161599f565b6020604051808303816000875af115801561257e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a29190615804565b9050826000815181106125b7576125b76157ee565b60200260200101516001600160a01b0316836001815181106125db576125db6157ee565b60200260200101516001600160a01b03167fb3fac3ae95956dbac74e63ba8dac94081832395c8788e3049c900a7732f34805838760405161262f9291909182526001600160a01b0316602082015260400190565b60405180910390a3604080518082019091526001600160a01b03948516815260208101828152601480546001808201835560009290925292517fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec600290940293840180546001600160a01b0319169190981617909655517fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ed909101556007939093555090919050565b606060098054610a239061567e565b600b5460405163160a792560e01b81526001600160a01b0383811660048301526000926101009004169063160a792590602401608060405180830381865afa158015612737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275b91906156b3565b6020015192915050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa1580156127b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d591906156b3565b602001518061285c5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa15801561282d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128519190615737565b6001600160a01b0316145b6128785760405162461bcd60e51b8152600401610bd090615754565b610ee68161316a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156129035760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610bd0565b6129103385858403613046565b5060019392505050565b6000610ab3338484613241565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015612973573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061299791906156b3565b6020015180612a1e5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa1580156129ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a139190615737565b6001600160a01b0316145b612a3a5760405162461bcd60e51b8152600401610bd090615754565b610ee681614250565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015612a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab391906156b3565b6020015180612b3a5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015612b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2f9190615737565b6001600160a01b0316145b612b565760405162461bcd60e51b8152600401610bd090615754565b6040516bffffffffffffffffffffffff193060601b16602082015260009060340160408051808303601f19018152908290528051602090910120600b546301caf8fd60e31b835290925061010090046001600160a01b031690630e57c7e890612bc7908490879087906004016159df565b600060405180830381600087803b158015612be157600080fd5b505af1158015612bf5573d6000803e3d6000fd5b50505050505050565b600b5460009060ff1615612c6e5760405162461bcd60e51b815260206004820152603160248201527f455243323054656d706c6174653a20746f6b656e20696e7374616e636520616c6044820152701c9958591e481a5b9a5d1a585b1a5e9959607a1b6064820152608401610bd0565b612d22612c7b8b8d615a59565b8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c91829185019084908082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b918291850190849080828437600092019190915250612d1d92508991508a9050615ae0565b614331565b9b9a5050505050505050505050565b43841015612d745760405162461bcd60e51b815260206004820152601060248201526f115490cc8c11150e881156141254915160821b6044820152606401610bd0565b6010546001600160a01b038816600090815260116020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087612dc783615b5b565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001612e4092919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015612eab573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590612ee15750886001600160a01b0316816001600160a01b0316145b612f2d5760405162461bcd60e51b815260206004820152601a60248201527f455243323044543a20494e56414c49445f5349474e41545552450000000000006044820152606401610bd0565b612f38898989613046565b505050505050505050565b612f4b612f83565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015610ee6573d6000803e3d6000fd5b600c546000906001600160a01b031661300c57600b546040516331a9108f60e11b8152600160048201526101009091046001600160a01b031690636352211e90602401602060405180830381865afa158015612fe3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130079190615737565b905090565b50600c546001600160a01b031690565b6006818154811061302c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0383166130a85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610bd0565b6001600160a01b0382166131095760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610bd0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03811615610ee6576001600160a01b0381166000908152600560205260409020805460ff16156131e35760405162461bcd60e51b815260206004820152601d60248201527f4552433230526f6c65733a2020414c52454144592041204d494e5445520000006044820152606401610bd0565b805460ff191660011781556131f782614789565b6040805142815243602082015233916001600160a01b038516917f4f7e100eb1ee13e903798bd0d6aa854152e07eb05544f392b9409c12935c809591015b60405180910390a35050565b6001600160a01b0383166132a55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610bd0565b6001600160a01b0382166133075760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610bd0565b6001600160a01b0383166000908152602081905260409020548181101561337f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610bd0565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906133b69084906157d6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161340291815260200190565b60405180910390a35b50505050565b6001600160a01b03811660008181526005602052604090819020805461ff00191681559051909133917faee911eec8b2df8f3ae0464841541b1e5f339519bd5cf51889fe8b07fecff658906134729042904390918252602082015260400190565b60405180910390a361118c82614840565b6001600160a01b03811660008181526005602052604090819020805460ff191681559051909133917fefa2735987005aaa89c050c0ff8cc9ae7d9079d19382081c429130f98c52d480906134729042904390918252602082015260400190565b60408051808201909152601c81527f19457468657265756d205369676e6564204d6573736167653a0a333200000000602082015260008161352760e0850185615b76565b6135346020870187614e12565b6135446040880160208901614e12565b87604001358860c0013560405160200161356396959493929190615bbc565b6040516020818303038152906040528051906020012060405160200161358a9291906158d2565b60408051601f198184030181529190528051602090910120905060006001826135b96080870160608801615bfa565b6040805160008152602081018083529390935260ff90911690820152608080870135606083015260a08088013591830191909152016020604051602081039080840390855afa158015613610573d6000803e3d6000fd5b5050604051601f190151915061362b90506020850185614e12565b6001600160a01b0316816001600160a01b0316146136825760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642070726f76696465722066656560601b6044820152606401610bd0565b6136926040850160208601614e12565b6001600160a01b03166136a86020860186614e12565b6001600160a01b03167ff8ed11cdaaf10eca2b6c941fb802cb8682afe86cac1eb93f70d0780fa062c54460408701356136e460e0890189615b76565b6136f460808b0160608c01615bfa565b8a608001358b60a001358c60c001356040516137169796959493929190615c15565b60405180910390a36000846040013511801561374b5750600061373f6040860160208701614e12565b6001600160a01b031614155b801561376d575060006137616020860186614e12565b6001600160a01b031614155b1561340b5760125460408051636c45e88160e01b815290516000926001600160a01b031691636c45e8819160048083019260209291908290030181865afa1580156137bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137e09190615804565b90506000811561380d5761380a670de0b6b3a764000061380460408901358561498e565b9061499a565b90505b600061381d60408801358361416c565b905061383e6138326040890160208a01614e12565b33308a6040013561401e565b61386f61384e6020890189614e12565b8261385f60408b0160208c01614e12565b6001600160a01b031691906149a6565b8115612bf55760125460408051631a81876d60e01b81529051612bf5926001600160a01b031691631a81876d9160048083019260209291908290030181865afa1580156138c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138e49190615737565b8361385f60408b0160208c01614e12565b6000610dc382846157d6565b6001600160a01b0382166139575760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610bd0565b806002600082825461396991906157d6565b90915550506001600160a01b038216600090815260208190526040812080548392906139969084906157d6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216613a405760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610bd0565b6001600160a01b03821660009081526020819052604090205481811015613ab45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610bd0565b6001600160a01b0383166000908152602081905260408120838303905560028054849290613ae3908490615c58565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b601554601454600091613b40916157d6565b9050600080826001600160401b03811115613b5d57613b5d615037565b604051908082528060200260200182016040528015613b86578160200160208202803683370190505b50905060005b601454811015613e6c57600060148281548110613bab57613bab6157ee565b60009182526020822060029091020154601480546001600160a01b039092169350829182918591634c87087d919088908110613be957613be96157ee565b9060005260206000209060020201600101546040518263ffffffff1660e01b8152600401613c1991815260200190565b61018060405180830381865afa158015613c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c5b9190615c6f565b9b509b509b505050505050505050506000821115613d0157836001600160a01b031663f32f947660148781548110613c9557613c956157ee565b906000526020600020906002020160010154846040518363ffffffff1660e01b8152600401613cce929190918252602082015260400190565b600060405180830381600087803b158015613ce857600080fd5b505af1158015613cfc573d6000803e3d6000fd5b505050505b8215613d9557836001600160a01b031663c612e48a60148781548110613d2957613d296157ee565b906000526020600020906002020160010154856040518363ffffffff1660e01b8152600401613d62929190918252602082015260400190565b600060405180830381600087803b158015613d7c57600080fd5b505af1158015613d90573d6000803e3d6000fd5b505050505b613dd860148681548110613dab57613dab6157ee565b600091825260208083206002909202909101546001600160a01b0316825260059052604090205460ff1690565b8015613de657506001811515145b15613e555760148581548110613dfe57613dfe6157ee565b600091825260209091206002909102015486516001600160a01b0390911690879089908110613e2f57613e2f6157ee565b6001600160a01b039092166020928302919091019091015286613e5181615b5b565b9750505b505050508080613e6490615b5b565b915050613b8c565b5060005b601554811015613fb15760158181548110613e8d57613e8d6157ee565b60009182526020909120015460405163f9bfaa7d60e01b81523060048201526001600160a01b039091169063f9bfaa7d90602401600060405180830381600087803b158015613edb57600080fd5b505af1158015613eef573d6000803e3d6000fd5b50505050613f3160158281548110613f0957613f096157ee565b60009182526020808320909101546001600160a01b0316825260059052604090205460ff1690565b15613f9f5760158181548110613f4957613f496157ee565b9060005260206000200160009054906101000a90046001600160a01b0316828481518110613f7957613f796157ee565b6001600160a01b039092166020928302919091019091015282613f9b81615b5b565b9350505b80613fa981615b5b565b915050613e70565b613fb9614a09565b50600c80546001600160a01b031916905560005b8281101561340b57613fea82828151811061180b5761180b6157ee565b80613ff481615b5b565b915050613fcd565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908616906370a0823190602401602060405180830381865afa158015614068573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061408c9190615804565b90506140a36001600160a01b038616858585614ab8565b6140ad81836138f5565b6040516370a0823160e01b81526001600160a01b0385811660048301528716906370a0823190602401602060405180830381865afa1580156140f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141179190615804565b10156141655760405162461bcd60e51b815260206004820152601a60248201527f5472616e7366657220616d6f756e7420697320746f6f206c6f770000000000006044820152606401610bd0565b5050505050565b6000610dc38284615c58565b60008060008084516041146141935760009350505050610ab7565b50505060208201516040830151604184015160ff16601b8110156141bf576141bc601b82615d2c565b90505b8060ff16601b141580156141d757508060ff16601c14155b156141e85760009350505050610ab7565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561423b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6001600160a01b03811615610ee6576001600160a01b03811660009081526005602052604090208054610100900460ff16156142d95760405162461bcd60e51b815260206004820152602260248201527f4552433230526f6c65733a2020414c5245414459204120464545204d414e414760448201526122a960f11b6064820152608401610bd0565b805461ff0019166101001781556142ef82614789565b6040805142815243602082015233916001600160a01b038516917fb17da2e9910b4ba5754e8872385ba315a238bafb5ae221fc85093c33432c40a79101613235565b60008084600081518110614347576143476157ee565b6020026020010151905084600181518110614364576143646157ee565b6020908102919091010151601280546001600160a01b0319166001600160a01b0392831617905581166143ee5760405162461bcd60e51b815260206004820152602c60248201527f455243323054656d706c6174653a20496e76616c6964206d696e7465722c202060448201526b7a65726f206164647265737360a01b6064820152608401610bd0565b6012546001600160a01b031661445a5760405162461bcd60e51b815260206004820152602b60248201527f455243323054656d706c6174653a20496e76616c696420726f757465722c207a60448201526a65726f206164647265737360a81b6064820152608401610bd0565b600019600a5586518790600090614473576144736157ee565b602002602001015160089080519060200190614490929190614d3a565b50866001815181106144a4576144a46157ee565b6020026020010151600990805190602001906144c1929190614d3a565b50600b805460ff196001600160a01b03841661010002166001600160a81b0319909116176001179055855161450190879060009061180b5761180b6157ee565b60006001600160a01b03168660018151811061451f5761451f6157ee565b60200260200101516001600160a01b0316146145c9576145588660018151811061454b5761454b6157ee565b6020026020010151613ffc565b8560018151811061456b5761456b6157ee565b60200260200101516001600160a01b0316336001600160a01b03167f4d7694d695c57cc54947177c8e8a0e61aae664e9223492a798c32fadfc6419cc42436040516145c0929190918252602082015260400190565b60405180910390a35b856002815181106145dc576145dc6157ee565b6020026020010151600d60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508560038151811061461d5761461d6157ee565b6020026020010151600e60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508360018151811061465e5761465e6157ee565b602090810291909101810151600f819055600d54600e54604080513381526001600160a01b039384169581019590955291169083015260608201527f02ab4b3fc023109c2d0da394bda239166c833f63c42b71b67ed4b836dca0ddfe9060800160405180910390a160405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f906146f990600890615d51565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051808303601f1901815291905280516020909101206010555050600b5460ff169695505050505050565b60005b6006548110156147e557816001600160a01b0316600682815481106147b3576147b36157ee565b6000918252602090912001546001600160a01b031614156147d3576147e5565b806147dd81615b5b565b91505061478c565b60065481141561118c57600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0384166001600160a01b03199091161790555050565b6001600160a01b0381166000908152600560205260409020805460ff1615801561487157508054610100900460ff16155b1561118c5760005b6006548110156148d257826001600160a01b0316600682815481106148a0576148a06157ee565b6000918252602090912001546001600160a01b031614156148c0576148d2565b806148ca81615b5b565b915050614879565b600654811015611bc257600680546148ec90600190615c58565b815481106148fc576148fc6157ee565b600091825260209091200154600680546001600160a01b039092169183908110614928576149286157ee565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600680548061496757614967615ded565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b6000610dc38284615e03565b6000610dc38284615e22565b6040516001600160a01b038316602482015260448101829052611bc290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614af0565b60005b600654811015614a6f5760006005600060068481548110614a2f57614a2f6157ee565b60009182526020808320909101546001600160a01b031683528201929092526040019020805461ffff191690555080614a6781615b5b565b915050614a0c565b50614a7c60066000614dbe565b6040805142815243602082015233917f712bc71db81927a76b8bf1ea346247bb0ad58f18e4e5c1bd4aa0ec6573e02a2b910160405180910390a2565b6040516001600160a01b038085166024830152831660448201526064810182905261340b9085906323b872dd60e01b906084016149d2565b6000614b45826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614bc29092919063ffffffff16565b805190915015611bc25780806020019051810190614b639190615e44565b611bc25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bd0565b6060614bd18484600085614bd9565b949350505050565b606082471015614c3a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610bd0565b843b614c885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bd0565b600080866001600160a01b03168587604051614ca49190615e61565b60006040518083038185875af1925050503d8060008114614ce1576040519150601f19603f3d011682016040523d82523d6000602084013e614ce6565b606091505b5091509150614cf6828286614d01565b979650505050505050565b60608315614d10575081610dc3565b825115614d205782518084602001fd5b8160405162461bcd60e51b8152600401610bd09190614e5b565b828054614d469061567e565b90600052602060002090601f016020900481019282614d685760008555614dae565b82601f10614d8157805160ff1916838001178555614dae565b82800160010185558215614dae579182015b82811115614dae578251825591602001919060010190614d93565b50614dba929150614dd8565b5090565b5080546000825590600052602060002090810190610ee691905b5b80821115614dba5760008155600101614dd9565b6001600160a01b0381168114610ee657600080fd5b8035614e0d81614ded565b919050565b600060208284031215614e2457600080fd5b8135610dc381614ded565b60005b83811015614e4a578181015183820152602001614e32565b8381111561340b5750506000910152565b6020815260008251806020840152614e7a816040850160208701614e2f565b601f01601f19169190910160400192915050565b60008060408385031215614ea157600080fd5b8235614eac81614ded565b946020939093013593505050565b8015158114610ee657600080fd5b600080600080600060a08688031215614ee057600080fd5b8535614eeb81614ded565b945060208601359350604086013592506060860135614f0981614eba565b91506080860135614f1981614ded565b809150509295509295909350565b600080600060608486031215614f3c57600080fd5b8335614f4781614ded565b92506020840135614f5781614ded565b929592945050506040919091013590565b60006101008284031215614f7b57600080fd5b50919050565b60008060408385031215614f9457600080fd5b8235915060208301356001600160401b03811115614fb157600080fd5b614fbd85828601614f68565b9150509250929050565b600060208284031215614fd957600080fd5b5035919050565b600081518084526020808501945080840160005b838110156150195781516001600160a01b031687529582019590820190600101614ff4565b509495945050505050565b602081526000610dc36020830184614fe0565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561507557615075615037565b604052919050565b60006001600160401b0382111561509657615096615037565b5060051b60200190565b600082601f8301126150b157600080fd5b813560206150c66150c18361507d565b61504d565b82815260059290921b840181019181810190868411156150e557600080fd5b8286015b8481101561510057803583529183019183016150e9565b509695505050505050565b600082601f83011261511c57600080fd5b8135602061512c6150c18361507d565b82815260059290921b8401810191818101908684111561514b57600080fd5b8286015b8481101561510057803561516281614ded565b835291830191830161514f565b60008060006060848603121561518457600080fd5b83356001600160401b038082111561519b57600080fd5b6151a7878388016150a0565b945060208601359150808211156151bd57600080fd5b6151c9878388016150a0565b935060408601359150808211156151df57600080fd5b506151ec8682870161510b565b9150509250925092565b60008060008084860360c081121561520d57600080fd5b853561521881614ded565b94506020860135935060408601356001600160401b0381111561523a57600080fd5b61524688828901614f68565b9350506060605f198201121561525b57600080fd5b509295919450926060019150565b602080825282518282018190526000919060409081850190868401855b828110156152b457815180516001600160a01b03168552860151868501529284019290850190600101615286565b5091979650505050505050565b60008083601f8401126152d357600080fd5b5081356001600160401b038111156152ea57600080fd5b60208301915083602082850101111561530257600080fd5b9250929050565b60008060008060008060008060008060c08b8d03121561532857600080fd5b8a35995060208b01356001600160401b038082111561534657600080fd5b6153528e838f016152c1565b909b50995060408d013591508082111561536b57600080fd5b6153778e838f016152c1565b909950975060608d013591508082111561539057600080fd5b61539c8e838f016152c1565b909750955060808d01359150808211156153b557600080fd5b506153c28d828e016152c1565b90945092506153d5905060a08c01614e02565b90509295989b9194979a5092959850565b6000806000606084860312156153fb57600080fd5b833561540681614ded565b925060208401356001600160401b038082111561542257600080fd5b61542e8783880161510b565b9350604086013591508082111561544457600080fd5b506151ec868287016150a0565b6000806020838503121561546457600080fd5b82356001600160401b0381111561547a57600080fd5b615486858286016152c1565b90969095509350505050565b60008083601f8401126154a457600080fd5b5081356001600160401b038111156154bb57600080fd5b6020830191508360208260051b850101111561530257600080fd5b60008060008060008060008060008060a08b8d0312156154f557600080fd5b8a356001600160401b038082111561550c57600080fd5b6155188e838f01615492565b909c509a5060208d013591508082111561553157600080fd5b61553d8e838f01615492565b909a50985060408d013591508082111561555657600080fd5b6155628e838f01615492565b909850965060608d013591508082111561557b57600080fd5b6155878e838f01615492565b909650945060808d01359150808211156155a057600080fd5b506155ad8d828e01615492565b915080935050809150509295989b9194979a5092959850565b803560ff81168114614e0d57600080fd5b600080600080600080600060e0888a0312156155f257600080fd5b87356155fd81614ded565b9650602088013561560d81614ded565b95506040880135945060608801359350615629608089016155c6565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561565857600080fd5b823561566381614ded565b9150602083013561567381614ded565b809150509250929050565b600181811c9082168061569257607f821691505b60208210811415614f7b57634e487b7160e01b600052602260045260246000fd5b6000608082840312156156c557600080fd5b604051608081018181106001600160401b03821117156156e7576156e7615037565b60405282516156f581614eba565b8152602083015161570581614eba565b6020820152604083015161571881614eba565b6040820152606083015161572b81614eba565b60608201529392505050565b60006020828403121561574957600080fd5b8151610dc381614ded565b6020808252818101527f455243323054656d706c6174653a204e4f54204445504c4f59455220524f4c45604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156157e9576157e96157c0565b500190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561581657600080fd5b5051919050565b600081518084526020808501945080840160005b8381101561501957815187529582019590820190600101615831565b60008186825b600281101561587b5781516001600160a01b0316835260209283019290910190600101615853565b50505060a0604083015261589260a083018661581d565b82810360608401526158a4818661581d565b90508281036080840152614cf68185614fe0565b838152818360208301376000910160200190815292915050565b600083516158e4818460208801614e2f565b9190910191825250602001919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8b815260e06020820152600061594760e083018c8e615904565b828103604084015261595a818b8d615904565b9050828103606084015261596f81898b615904565b90508281036080840152615984818789615904565b60a0840195909552505060c001529998505050505050505050565b6001600160a01b03841681526060602082018190526000906159c390830185614fe0565b82810360408401526159d5818561581d565b9695505050505050565b8381526040602082015260006159f9604083018486615904565b95945050505050565b60006001600160401b03831115615a1b57615a1b615037565b615a2e601f8401601f191660200161504d565b9050828152838383011115615a4257600080fd5b828260208301376000602084830101529392505050565b6000615a676150c18461507d565b80848252602080830192508560051b850136811115615a8557600080fd5b855b81811015615ad45780356001600160401b03811115615aa65760008081fd5b870136601f820112615ab85760008081fd5b615ac6368235868401615a02565b865250938201938201615a87565b50919695505050505050565b6000615aee6150c18461507d565b80848252602080830192508560051b850136811115615b0c57600080fd5b855b81811015615ad45780356001600160401b03811115615b2d5760008081fd5b870136601f820112615b3f5760008081fd5b615b4d368235868401615a02565b865250938201938201615b0e565b6000600019821415615b6f57615b6f6157c0565b5060010190565b6000808335601e19843603018112615b8d57600080fd5b8301803591506001600160401b03821115615ba757600080fd5b60200191503681900382131561530257600080fd5b858782376bffffffffffffffffffffffff19606095861b8116969091019586529290931b909116601484015260288301526048820152606801919050565b600060208284031215615c0c57600080fd5b610dc3826155c6565b87815260c060208201526000615c2f60c08301888a615904565b905060ff861660408301528460608301528360808301528260a083015298975050505050505050565b600082821015615c6a57615c6a6157c0565b500390565b6000806000806000806000806000806000806101808d8f031215615c9257600080fd5b8c51615c9d81614ded565b60208e0151909c50615cae81614ded565b60408e015160608f0151919c509a50615cc681614ded565b8099505060808d0151975060a08d0151965060c08d0151615ce681614eba565b8096505060e08d015194506101008d015193506101208d015192506101408d015191506101608d0151615d1881614eba565b809150509295989b509295989b509295989b565b600060ff821660ff84168060ff03821115615d4957615d496157c0565b019392505050565b600080835481600182811c915080831680615d6d57607f831692505b6020808410821415615d8d57634e487b7160e01b86526022600452602486fd5b818015615da15760018114615db257615ddf565b60ff19861689528489019650615ddf565b60008a81526020902060005b86811015615dd75781548b820152908501908301615dbe565b505084890196505b509498975050505050505050565b634e487b7160e01b600052603160045260246000fd5b6000816000190483118215151615615e1d57615e1d6157c0565b500290565b600082615e3f57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215615e5657600080fd5b8151610dc381614eba565b60008251615e73818460208701614e2f565b919091019291505056fea26469706673582212209697a906b59504c4a6db4f342ff16b072ab394c370e0c31fd5da8055dbc9825e64736f6c634300080c0033",
  "bytecodeSha1": "de606e8aeba84e21f529001f314de990b3370168",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC20Template",
  "coverageMap": {
    "branches": {
      "11": {},
      "2": {
        "ERC20Template.createFixedRate": {
          "260": [
            2259,
            2278,
            true
          ]
        }
      },
      "21": {},
      "24": {},
      "28": {},
      "29": {},
      "3": {
        "ERC20._approve": {
          "241": [
            10083,
            10102,
            true
          ],
          "242": [
            10161,
            10182,
            true
          ]
        },
        "ERC20._burn": {
          "247": [
            9036,
            9057,
            true
          ],
          "248": [
            9227,
            9251,
            true
          ]
        },
        "ERC20._mint": {
          "246": [
            8327,
            8348,
            true
          ]
        },
        "ERC20._transfer": {
          "243": [
            7390,
            7410,
            true
          ],
          "244": [
            7470,
            7493,
            true
          ],
          "245": [
            7661,
            7684,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "240": [
            6564,
            6599,
            true
          ]
        },
        "ERC20.transferFrom": {
          "239": [
            5081,
            5107,
            true
          ]
        }
      },
      "4": {},
      "42": {
        "ERC20Template._checkProviderFee": {
          "218": [
            17103,
            17144,
            true
          ],
          "219": [
            17690,
            17724,
            false
          ],
          "220": [
            17740,
            17783,
            false
          ],
          "221": [
            17799,
            17844,
            false
          ],
          "222": [
            17977,
            17987,
            false
          ],
          "223": [
            18468,
            18478,
            false
          ]
        },
        "ERC20Template._ecrecovery": {
          "230": [
            38184,
            38200,
            false
          ],
          "231": [
            38395,
            38401,
            false
          ],
          "232": [
            38449,
            38456,
            false
          ],
          "233": [
            38460,
            38467,
            false
          ]
        },
        "ERC20Template._initialize": {
          "234": [
            9430,
            9457,
            true
          ],
          "235": [
            10104,
            10131,
            false
          ]
        },
        "ERC20Template._internalCleanPermissions": {
          "224": [
            26035,
            26046,
            false
          ],
          "225": [
            26139,
            26150,
            false
          ],
          "226": [
            26292,
            26339,
            false
          ],
          "227": [
            26343,
            26359,
            false
          ],
          "228": [
            26717,
            26740,
            false
          ]
        },
        "ERC20Template._pullUnderlying": {
          "229": [
            36182,
            36238,
            true
          ]
        },
        "ERC20Template.cleanFrom721": {
          "208": [
            25010,
            25038,
            true
          ]
        },
        "ERC20Template.cleanPermissions": {
          "191": [
            5647,
            5703,
            true
          ]
        },
        "ERC20Template.createFixedRate": {
          "212": [
            14140,
            14152,
            false
          ]
        },
        "ERC20Template.deployPool": {
          "197": [
            12835,
            12853,
            true
          ],
          "198": [
            13018,
            13077,
            true
          ]
        },
        "ERC20Template.mint": {
          "189": [
            15912,
            15942,
            true
          ],
          "190": [
            16003,
            16035,
            true
          ]
        },
        "ERC20Template.orderExecuted": {
          "209": [
            36947,
            36976,
            true
          ],
          "210": [
            37377,
            37435,
            true
          ],
          "211": [
            37735,
            37798,
            true
          ]
        },
        "ERC20Template.permit": {
          "215": [
            32309,
            32333,
            true
          ],
          "216": [
            32910,
            32940,
            false
          ],
          "217": [
            32944,
            32969,
            true
          ]
        },
        "ERC20Template.setData": {
          "213": [
            6042,
            6146,
            true
          ],
          "214": [
            6150,
            6206,
            true
          ]
        },
        "ERC20Template.setPaymentCollector": {
          "192": [
            27668,
            27706,
            true
          ],
          "193": [
            27726,
            27796,
            true
          ],
          "194": [
            27816,
            27870,
            true
          ]
        },
        "ERC20Template.setPublishingMarketFee": {
          "195": [
            29476,
            29514,
            true
          ],
          "196": [
            29614,
            29650,
            true
          ]
        },
        "ERC20Template.startOrder": {
          "199": [
            19430,
            19461,
            true
          ],
          "200": [
            19975,
            20001,
            false
          ],
          "201": [
            20017,
            20052,
            false
          ],
          "202": [
            20068,
            20105,
            false
          ],
          "203": [
            20646,
            20690,
            false
          ],
          "204": [
            20706,
            20759,
            false
          ],
          "205": [
            20775,
            20830,
            false
          ],
          "206": [
            21460,
            21511,
            true
          ],
          "207": [
            21598,
            21656,
            true
          ]
        }
      },
      "46": {
        "ERC20Roles._SafeRemoveFromAuthERC20": {
          "256": [
            4894,
            4919,
            false
          ],
          "257": [
            4935,
            4968,
            false
          ],
          "258": [
            5075,
            5095,
            false
          ],
          "259": [
            5133,
            5153,
            false
          ]
        },
        "ERC20Roles._addMinter": {
          "250": [
            1396,
            1417,
            false
          ],
          "251": [
            1500,
            1520,
            true
          ]
        },
        "ERC20Roles._addPaymentManager": {
          "252": [
            2680,
            2711,
            false
          ],
          "253": [
            2804,
            2832,
            true
          ]
        },
        "ERC20Roles._pushToAuthERC20": {
          "254": [
            4404,
            4424,
            false
          ],
          "255": [
            4454,
            4475,
            false
          ]
        }
      },
      "5": {
        "ERC20Burnable.burnFrom": {
          "249": [
            1035,
            1061,
            true
          ]
        }
      },
      "6": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "261": [
            3668,
            3689,
            false
          ],
          "262": [
            3752,
            3782,
            true
          ]
        }
      },
      "8": {
        "Address._verifyCallResult": {
          "237": [
            7124,
            7131,
            false
          ],
          "238": [
            7265,
            7286,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "236": [
            4745,
            4775,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "11": {
        "SafeMath.add": {
          "113": [
            2749,
            2761
          ]
        },
        "SafeMath.div": {
          "174": [
            3844,
            3856
          ]
        },
        "SafeMath.mul": {
          "173": [
            3459,
            3471
          ]
        },
        "SafeMath.sub": {
          "140": [
            3116,
            3128
          ]
        }
      },
      "2": {},
      "21": {},
      "24": {},
      "28": {},
      "29": {},
      "3": {
        "ERC20._approve": {
          "87": [
            10075,
            10143
          ],
          "88": [
            10153,
            10221
          ],
          "89": [
            10232,
            10268
          ],
          "90": [
            10278,
            10315
          ]
        },
        "ERC20._burn": {
          "118": [
            9028,
            9095
          ],
          "119": [
            9219,
            9290
          ],
          "120": [
            9324,
            9368
          ],
          "121": [
            9388,
            9410
          ],
          "122": [
            9421,
            9463
          ]
        },
        "ERC20._mint": {
          "114": [
            8319,
            8384
          ],
          "115": [
            8455,
            8477
          ],
          "116": [
            8487,
            8515
          ],
          "117": [
            8525,
            8567
          ]
        },
        "ERC20._transfer": {
          "95": [
            7382,
            7452
          ],
          "96": [
            7462,
            7533
          ],
          "97": [
            7653,
            7727
          ],
          "98": [
            7761,
            7803
          ],
          "99": [
            7823,
            7853
          ],
          "100": [
            7864,
            7904
          ],
          "101": [
            7915,
            7961
          ]
        },
        "ERC20.allowance": {
          "9": [
            3992,
            4026
          ]
        },
        "ERC20.approve": {
          "11": [
            4270,
            4309
          ],
          "13": [
            4319,
            4330
          ]
        },
        "ERC20.balanceOf": {
          "7": [
            3419,
            3444
          ]
        },
        "ERC20.decreaseAllowance": {
          "74": [
            6556,
            6641
          ],
          "75": [
            6675,
            6742
          ],
          "76": [
            6763,
            6774
          ]
        },
        "ERC20.increaseAllowance": {
          "26": [
            5781,
            5861
          ]
        },
        "ERC20.totalSupply": {
          "2": [
            3242,
            3261
          ]
        },
        "ERC20.transfer": {
          "77": [
            3756,
            3798
          ]
        },
        "ERC20.transferFrom": {
          "18": [
            4956,
            4992
          ],
          "19": [
            5073,
            5152
          ],
          "20": [
            5186,
            5243
          ],
          "21": [
            5264,
            5275
          ]
        }
      },
      "4": {},
      "42": {
        "ERC20Template._checkProviderFee": {
          "107": [
            17095,
            17169
          ],
          "108": [
            17179,
            17497
          ],
          "109": [
            18005,
            18066
          ],
          "110": [
            18159,
            18295
          ],
          "111": [
            18309,
            18451
          ],
          "112": [
            18495,
            18641
          ]
        },
        "ERC20Template._ecrecovery": {
          "141": [
            38214,
            38231
          ],
          "142": [
            38415,
            38422
          ],
          "143": [
            38479,
            38496
          ],
          "144": [
            38516,
            38547
          ]
        },
        "ERC20Template._initialize": {
          "149": [
            9370,
            9399
          ],
          "150": [
            9409,
            9527
          ],
          "151": [
            9538,
            9648
          ],
          "152": [
            9764,
            9837
          ],
          "153": [
            9847,
            9866
          ],
          "154": [
            9876,
            9897
          ],
          "155": [
            9907,
            9937
          ],
          "156": [
            9947,
            9965
          ],
          "157": [
            10065,
            10090
          ],
          "158": [
            10147,
            10182
          ],
          "159": [
            10196,
            10356
          ],
          "160": [
            10376,
            10415
          ],
          "161": [
            10425,
            10462
          ],
          "162": [
            10472,
            10506
          ],
          "163": [
            10516,
            10686
          ],
          "164": [
            10783,
            11183
          ],
          "165": [
            11194,
            11212
          ]
        },
        "ERC20Template._internalCleanPermissions": {
          "123": [
            26068,
            26118
          ],
          "124": [
            26172,
            26222
          ],
          "125": [
            26382,
            26446
          ],
          "126": [
            26468,
            26479
          ],
          "127": [
            25518,
            25521
          ],
          "128": [
            26593,
            26596
          ],
          "129": [
            26642,
            26696
          ],
          "130": [
            26763,
            26803
          ],
          "131": [
            26825,
            26836
          ],
          "132": [
            26619,
            26622
          ],
          "133": [
            26907,
            26926
          ],
          "134": [
            26966,
            26995
          ],
          "135": [
            27110,
            27140
          ],
          "136": [
            27091,
            27094
          ]
        },
        "ERC20Template._pullUnderlying": {
          "138": [
            36116,
            36164
          ],
          "139": [
            36174,
            36289
          ]
        },
        "ERC20Template._setPaymentCollector": {
          "137": [
            28343,
            28382
          ]
        },
        "ERC20Template.addMinter": {
          "73": [
            22647,
            22666
          ]
        },
        "ERC20Template.addPaymentManager": {
          "78": [
            23353,
            23388
          ]
        },
        "ERC20Template.cap": {
          "3": [
            31392,
            31403
          ]
        },
        "ERC20Template.cleanFrom721": {
          "62": [
            24989,
            25095
          ]
        },
        "ERC20Template.cleanPermissions": {
          "32": [
            24524,
            24551
          ]
        },
        "ERC20Template.createDispenser": {
          "14": [
            15209,
            15231
          ],
          "15": [
            15241,
            15268
          ],
          "16": [
            15278,
            15307
          ],
          "17": [
            15317,
            15515
          ]
        },
        "ERC20Template.createFixedRate": {
          "67": [
            14154,
            14183
          ],
          "68": [
            14193,
            14327
          ],
          "69": [
            14337,
            14413
          ],
          "70": [
            14423,
            14487
          ]
        },
        "ERC20Template.deployPool": {
          "42": [
            12827,
            12894
          ],
          "43": [
            12904,
            12928
          ],
          "44": [
            12997,
            13184
          ],
          "45": [
            13261,
            13398
          ],
          "46": [
            13408,
            13432
          ],
          "47": [
            13442,
            13488
          ]
        },
        "ERC20Template.getDispensers": {
          "31": [
            35885,
            35903
          ]
        },
        "ERC20Template.getERC721Address": {
          "0": [
            30946,
            30967
          ]
        },
        "ERC20Template.getFixedRates": {
          "61": [
            35662,
            35688
          ]
        },
        "ERC20Template.getId": {
          "6": [
            30332,
            30340
          ]
        },
        "ERC20Template.getPaymentCollector": {
          "85": [
            34284,
            34333
          ],
          "86": [
            34364,
            34387
          ]
        },
        "ERC20Template.getPools": {
          "48": [
            35434,
            35455
          ]
        },
        "ERC20Template.getPublishingMarketFee": {
          "5": [
            28736,
            28861
          ]
        },
        "ERC20Template.initialize": {
          "80": [
            7777,
            7958
          ]
        },
        "ERC20Template.isERC20Deployer": {
          "72": [
            35179,
            35251
          ]
        },
        "ERC20Template.isInitialized": {
          "4": [
            31634,
            31652
          ]
        },
        "ERC20Template.mint": {
          "27": [
            15904,
            15972
          ],
          "28": [
            15982,
            16092
          ],
          "29": [
            16102,
            16123
          ]
        },
        "ERC20Template.name": {
          "10": [
            30527,
            30539
          ]
        },
        "ERC20Template.orderExecuted": {
          "63": [
            36939,
            37012
          ],
          "64": [
            37369,
            37471
          ],
          "65": [
            37727,
            37834
          ],
          "66": [
            37844,
            38015
          ]
        },
        "ERC20Template.permit": {
          "81": [
            32301,
            32354
          ],
          "82": [
            32889,
            33021
          ],
          "83": [
            33031,
            33062
          ]
        },
        "ERC20Template.removeMinter": {
          "23": [
            22944,
            22966
          ]
        },
        "ERC20Template.removePaymentManager": {
          "22": [
            23735,
            23773
          ]
        },
        "ERC20Template.reuseOrder": {
          "24": [
            22212,
            22340
          ],
          "25": [
            22350,
            22381
          ]
        },
        "ERC20Template.setData": {
          "79": [
            24185,
            24242
          ]
        },
        "ERC20Template.setPaymentCollector": {
          "33": [
            27647,
            27939
          ],
          "34": [
            27949,
            27991
          ],
          "35": [
            28001,
            28148
          ]
        },
        "ERC20Template.setPublishingMarketFee": {
          "36": [
            29455,
            29580
          ],
          "37": [
            29593,
            29714
          ],
          "38": [
            29724,
            29774
          ],
          "39": [
            29784,
            29830
          ],
          "40": [
            29840,
            29888
          ],
          "41": [
            29898,
            30071
          ]
        },
        "ERC20Template.startOrder": {
          "52": [
            19409,
            19523
          ],
          "53": [
            19533,
            19744
          ],
          "54": [
            20130,
            20260
          ],
          "55": [
            20287,
            20442
          ],
          "56": [
            20855,
            21039
          ],
          "57": [
            21053,
            21262
          ],
          "58": [
            21282,
            21313
          ],
          "59": [
            21439,
            21567
          ],
          "60": [
            21577,
            21706
          ]
        },
        "ERC20Template.symbol": {
          "71": [
            30734,
            30748
          ]
        },
        "ERC20Template.withdrawETH": {
          "84": [
            34932,
            34994
          ]
        }
      },
      "46": {
        "ERC20Roles._SafeRemoveFromAuthERC20": {
          "169": [
            5097,
            5102
          ],
          "170": [
            5049,
            5052
          ],
          "171": [
            5172,
            5217
          ],
          "172": [
            5235,
            5250
          ]
        },
        "ERC20Roles._addMinter": {
          "91": [
            1492,
            1554
          ],
          "92": [
            1568,
            1586
          ],
          "93": [
            1600,
            1625
          ],
          "94": [
            1639,
            1704
          ]
        },
        "ERC20Roles._addPaymentManager": {
          "145": [
            2796,
            2871
          ],
          "146": [
            2885,
            2911
          ],
          "147": [
            2925,
            2960
          ],
          "148": [
            2974,
            3057
          ]
        },
        "ERC20Roles._cleanPermissions": {
          "176": [
            3900,
            3919
          ],
          "177": [
            3933,
            3960
          ],
          "178": [
            3816,
            3819
          ],
          "179": [
            3990,
            4006
          ],
          "180": [
            4016,
            4080
          ]
        },
        "ERC20Roles._pushToAuthERC20": {
          "166": [
            4426,
            4431
          ],
          "167": [
            4382,
            4385
          ],
          "168": [
            4527,
            4547
          ]
        },
        "ERC20Roles._removeMinter": {
          "105": [
            1981,
            2000
          ],
          "106": [
            2010,
            2077
          ]
        },
        "ERC20Roles._removePaymentManager": {
          "102": [
            3388,
            3415
          ],
          "103": [
            3425,
            3510
          ],
          "104": [
            3520,
            3563
          ]
        },
        "ERC20Roles.getPermissions": {
          "1": [
            895,
            919
          ]
        },
        "ERC20Roles.isMinter": {
          "8": [
            1152,
            1188
          ]
        }
      },
      "5": {
        "ERC20Burnable.burn": {
          "30": [
            542,
            569
          ]
        },
        "ERC20Burnable.burnFrom": {
          "49": [
            1027,
            1102
          ],
          "50": [
            1136,
            1194
          ],
          "51": [
            1214,
            1236
          ]
        }
      },
      "6": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "182": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "175": [
            746,
            832
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "181": [
            983,
            1079
          ]
        }
      },
      "8": {
        "Address._verifyCallResult": {
          "187": [
            7147,
            7164
          ],
          "188": [
            7591,
            7611
          ]
        },
        "Address.functionCall": {
          "183": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "184": [
            4737,
            4818
          ],
          "185": [
            4828,
            4888
          ],
          "186": [
            4982,
            5041
          ]
        }
      },
      "9": {
        "Context._msgSender": {
          "12": [
            658,
            675
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC20Burnable",
    "ERC20Roles",
    "IDispenser",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20Metadata",
    "IERC721Template",
    "IFactoryRouter",
    "IFixedRateExchange",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/SafeMath"
  ],
  "deployedBytecode": "6080604052600436106102c65760003560e01c80635d1ca6311161017e578063a457c2d7116100d3578063d505accf1161008f578063e487c2e81161006c578063e487c2e8146109a3578063ec342ad0146109b8578063ef867ff4146109d4578063f887ea40146109f457005b8063d505accf14610935578063dd62ed3e14610955578063e086e5ec1461099b57005b8063a457c2d71461085c578063a9059cbb1461087c578063aa271e1a1461089c578063aa492ef9146108d5578063ab62f0e1146108f5578063b3998be01461091557005b80637ecebe001161013a5780638b96412b116101175780638b96412b146107e757806395d89b411461080757806396fb3eaf1461081c578063983b2d561461083c57005b80637ecebe001461078557806382c03da5146107b257806389208f0f146107c757005b80635d1ca631146106c4578063673a2a1f146106d857806370a08231146106ed57806379cc67901461072357806379d9d7f3146107435780637dda231e1461076357005b8063355274ea1161023457806340c10f19116101f05780634f189cb2116101cd5780634f189cb21461064f57806357a3a31b1461066457806357ad5ff6146106845780635bfe4da0146106a457005b806340c10f19146105ed57806342966c681461060d57806347ac7d551461062d57005b8063355274ea1461052e578063361fef49146105435780633644e51514610563578063392e53cd146105795780633950935114610591578063397b3743146105b157005b8063191c918a11610283578063191c918a1461045857806323b872dd1461047857806325b00243146104985780633092afd5146104b857806330adf81f146104d8578063313ce5671461050c57005b80627ffb78146102cf57806301e882081461030b57806306fdde031461035b578063095ea7b31461037d578063160a7925146103ad57806318160ddd1461043957005b366102cd57005b005b3480156102db57600080fd5b50600b5461010090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561031757600080fd5b50610344610326366004614e12565b60056020526000908152604090205460ff8082169161010090041682565b604080519215158352901515602083015201610302565b34801561036757600080fd5b50610370610a14565b6040516103029190614e5b565b34801561038957600080fd5b5061039d610398366004614e8e565b610aa6565b6040519015158152602001610302565b3480156103b957600080fd5b5061041a6103c8366004614e12565b6040805180820190915260008082526020820152506001600160a01b031660009081526005602090815260409182902082518084019093525460ff808216151584526101009091041615159082015290565b6040805182511515815260209283015115159281019290925201610302565b34801561044557600080fd5b506002545b604051908152602001610302565b34801561046457600080fd5b506102cd610473366004614ec8565b610abd565b34801561048457600080fd5b5061039d610493366004614f27565b610d1e565b3480156104a457600080fd5b506102cd6104b3366004614e12565b610dca565b3480156104c457600080fd5b506102cd6104d3366004614e12565b610ee9565b3480156104e457600080fd5b5061044a7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b34801561051857600080fd5b5060125b60405160ff9091168152602001610302565b34801561053a57600080fd5b50600a5461044a565b34801561054f57600080fd5b506102cd61055e366004614f81565b611005565b34801561056f57600080fd5b5061044a60105481565b34801561058557600080fd5b50600b5460ff1661039d565b34801561059d57600080fd5b5061039d6105ac366004614e8e565b611083565b3480156105bd57600080fd5b50600d54600e54600f54604080516001600160a01b03948516815293909216602084015290820152606001610302565b3480156105f957600080fd5b506102cd610608366004614e8e565b6110bf565b34801561061957600080fd5b506102cd610628366004614fc7565b611190565b34801561063957600080fd5b5061064261119a565b6040516103029190615024565b34801561065b57600080fd5b506102cd6111fb565b34801561067057600080fd5b506102cd61067f366004614e12565b6112d6565b34801561069057600080fd5b506102cd61069f366004614f27565b61149d565b3480156106b057600080fd5b506102ee6106bf36600461516f565b611656565b3480156106d057600080fd5b50600161051c565b3480156106e457600080fd5b50610642611ae1565b3480156106f957600080fd5b5061044a610708366004614e12565b6001600160a01b031660009081526020819052604090205490565b34801561072f57600080fd5b506102cd61073e366004614e8e565b611b41565b34801561074f57600080fd5b506102cd61075e3660046151f6565b611bc7565b34801561076f57600080fd5b50610778611ffe565b6040516103029190615269565b34801561079157600080fd5b5061044a6107a0366004614e12565b60116020526000908152604090205481565b3480156107be57600080fd5b506102cd612073565b3480156107d357600080fd5b506102cd6107e2366004615309565b6120d2565b3480156107f357600080fd5b5061044a6108023660046153e6565b6123bf565b34801561081357600080fd5b506103706126d8565b34801561082857600080fd5b5061039d610837366004614e12565b6126e7565b34801561084857600080fd5b506102cd610857366004614e12565b612765565b34801561086857600080fd5b5061039d610877366004614e8e565b612881565b34801561088857600080fd5b5061039d610897366004614e8e565b61291a565b3480156108a857600080fd5b5061039d6108b7366004614e12565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156108e157600080fd5b506102cd6108f0366004614e12565b612927565b34801561090157600080fd5b506102cd610910366004615451565b612a43565b34801561092157600080fd5b5061039d6109303660046154d6565b612bfe565b34801561094157600080fd5b506102cd6109503660046155d7565b612d31565b34801561096157600080fd5b5061044a610970366004615645565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102cd612f43565b3480156109af57600080fd5b506102ee612f83565b3480156109c457600080fd5b5061044a670de0b6b3a764000081565b3480156109e057600080fd5b506102ee6109ef366004614fc7565b61301c565b348015610a0057600080fd5b506012546102ee906001600160a01b031681565b606060088054610a239061567e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4f9061567e565b8015610a9c5780601f10610a7157610100808354040283529160200191610a9c565b820191906000526020600020905b815481529060010190602001808311610a7f57829003601f168201915b5050505050905090565b6000610ab3338484613046565b5060015b92915050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d91906156b3565b6020015180610bb45750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba99190615737565b6001600160a01b0316145b610bd95760405162461bcd60e51b8152600401610bd090615754565b60405180910390fd5b60026007541415610bfc5760405162461bcd60e51b8152600401610bd090615789565b60026007558115610c1057610c108561316a565b601580546001810182556000919091527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750180546001600160a01b0319166001600160a01b0387169081179091556040519081527fa31ffd41531537eb31bfd827a3f5372b5f62bf4dd8579e5354b280dc58490e709060200160405180910390a1601254604051636b14d00560e11b81526001600160a01b038781166004830152306024830152604482018790526064820186905233608483015283811660a48301529091169063d629a00a9060c401600060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b5050600160075550505050505050565b6000610d2b848484613241565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610db05760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610bd0565b610dbd8533858403613046565b60019150505b9392505050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3a91906156b3565b6020015180610ec15750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190615737565b6001600160a01b0316145b610edd5760405162461bcd60e51b8152600401610bd090615754565b610ee681613411565b50565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5991906156b3565b6020015180610fe05750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190615737565b6001600160a01b0316145b610ffc5760405162461bcd60e51b8152600401610bd090615754565b610ee681613483565b600260075414156110285760405162461bcd60e51b8152600401610bd090615789565b600260075560408051838152336020820152428183015243606082015290517f526e31449ea46e2aecf9b480c8d7dfa191348ef74ffdf75b445a6ab726daa6ff9181900360800190a161107a816134e3565b50506001600755565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610ab39185906110ba9086906157d6565b613046565b3360009081526005602052604090205460ff1661111e5760405162461bcd60e51b815260206004820152601960248201527f455243323054656d706c6174653a204e4f54204d494e544552000000000000006044820152606401610bd0565b600a546111348261112e60025490565b906138f5565b11156111825760405162461bcd60e51b815260206004820152601f60248201527f44617461746f6b656e54656d706c6174653a20636170206578636565646564006044820152606401610bd0565b61118c8282613901565b5050565b610ee633826139e0565b60606015805480602002602001604051908101604052809291908181526020018280548015610a9c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111d4575050505050905090565b600b546040516331a9108f60e11b8152600160048201526101009091046001600160a01b031690636352211e90602401602060405180830381865afa158015611248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126c9190615737565b6001600160a01b0316336001600160a01b0316146112cc5760405162461bcd60e51b815260206004820152601b60248201527f455243323054656d706c6174653a206e6f74204e46544f776e657200000000006044820152606401610bd0565b6112d4613b2e565b565b33600090815260056020526040902054610100900460ff16806113695750600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015611340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136491906156b3565b602001515b806113ec5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa1580156113bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e19190615737565b6001600160a01b0316145b61144c5760405162461bcd60e51b815260206004820152602b60248201527f455243323054656d706c6174653a204e4f54205041594d454e54204d414e414760448201526a22a91037b91027aba722a960a91b6064820152608401610bd0565b61145581613ffc565b604080514281524360208201526001600160a01b0383169133917f4d7694d695c57cc54947177c8e8a0e61aae664e9223492a798c32fadfc6419cc910160405180910390a350565b600d546001600160a01b0316331461150a5760405162461bcd60e51b815260206004820152602a60248201527f455243323054656d706c6174653a206e6f74207075626c6973684d61726b65746044820152694665654164647265737360b01b6064820152608401610bd0565b6001600160a01b0383166115715760405162461bcd60e51b815260206004820152602860248201527f496e76616c6964205f7075626c6973684d61726b657446656541646472657373604482015267206164647265737360c01b6064820152608401610bd0565b6001600160a01b0382166115d65760405162461bcd60e51b815260206004820152602660248201527f496e76616c6964205f7075626c6973684d61726b6574466565546f6b656e206160448201526564647265737360d01b6064820152608401610bd0565b600d80546001600160a01b038581166001600160a01b03199283168117909355600e8054918616919092168117909155600f839055604080513381526020810193909352820152606081018290527f02ab4b3fc023109c2d0da394bda239166c833f63c42b71b67ed4b836dca0ddfe9060800160405180910390a1505050565b600b5460405163160a792560e01b815233600482015260009161010090046001600160a01b03169063160a792590602401608060405180830381865afa1580156116a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c891906156b3565b602001518061174f5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015611720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117449190615737565b6001600160a01b0316145b61176b5760405162461bcd60e51b8152600401610bd090615754565b6002600754141561178e5760405162461bcd60e51b8152600401610bd090615789565b600260075561179c60025490565b156117f55760405162461bcd60e51b8152602060048201526024808201527f455243323054656d706c6174653a20746f6b656e7320616c7265616479206d696044820152631b9d195960e21b6064820152608401610bd0565b6118188260008151811061180b5761180b6157ee565b602002602001015161316a565b601260009054906101000a90046001600160a01b03166001600160a01b031663510f34656040518163ffffffff1660e01b8152600401602060405180830381865afa15801561186b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188f9190615804565b846003815181106118a2576118a26157ee565b602002602001015110156119385760405162461bcd60e51b815260206004820152605160248201527f455243323054656d706c6174653a2056657374696e6720706572696f6420746f60448201527f6f206c6f772e2053656520466163746f7279526f757465722e6d696e56657374606482015270696e67506572696f64496e426c6f636b7360781b608482015260a401610bd0565b60006040518060400160405280306001600160a01b03166001600160a01b0316815260200184600181518110611970576119706157ee565b60209081029190910101516001600160a01b0390811690915260125460405163ee3bc63560e01b8152929350169063ee3bc635906119b890849089908990899060040161584d565b6020604051808303816000875af11580156119d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fb9190615737565b6013805460018101825560009182527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180546001600160a01b0319166001600160a01b03841617905584519193507fd02da1bec30f7f750aa0a131745dfb9ce96767c45a192dc26409f5d690e0b9679184918691611a7c57611a7c6157ee565b602002602001015185600181518110611a9757611a976157ee565b6020026020010151604051611acc939291906001600160a01b0393841681529183166020830152909116604082015260600190565b60405180910390a15060016007559392505050565b60606013805480602002602001604051908101604052809291908181526020018280548015610a9c576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116111d4575050505050905090565b6000611b4d8333610970565b905081811015611bab5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610bd0565b611bb88333848403613046565b611bc283836139e0565b505050565b60026007541415611bea5760405162461bcd60e51b8152600401610bd090615789565b600260075533600090815260208190526040902054670de0b6b3a764000090811115611c645760405162461bcd60e51b8152602060048201526024808201527f4e6f7420656e6f7567682064617461746f6b656e7320746f207374617274204f604482015263393232b960e11b6064820152608401610bd0565b600d5460408051338152602081018490529081018690524260608201524360808201526001600160a01b03918216918716907fe1c4fa794edfa8f619b8257a077398950357b9c6398528f94480307352f9afcc9060a00160405180910390a36000600f54118015611cdf5750600e546001600160a01b031615155b8015611cf55750600d546001600160a01b031615155b15611d6a57600e54600d54600f54611d1d926001600160a01b0390811692339291169061401e565b600e54600d54600f546040519081526001600160a01b0392831692909116907f4049a448ac6f0284a98d2cb9199e73605944ea5bec901a037f88c84703de82b29060200160405180910390a35b60008260400135118015611d9757506000611d8b6040840160208501614e12565b6001600160a01b031614155b8015611db957506000611dad6020840184614e12565b6001600160a01b031614155b15611e5657611de9611dd16040840160208501614e12565b33611ddf6020860186614e12565b856040013561401e565b611df96040830160208401614e12565b6001600160a01b0316611e0f6020840184614e12565b6001600160a01b03167f6d11837f46cc09b011cf4aae09fcade046c020aac088090ae4f77ff67b7079728460400135604051611e4d91815260200190565b60405180910390a35b611e5f836134e3565b60125460408051637d28354d60e01b815290516000926001600160a01b031691637d28354d9160048083019260209291908290030181865afa158015611ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ecd9190615804565b9050611ee4611eda612f83565b610897848461416c565b611f305760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2073656e6420445420746f207075626c697368657200006044820152606401610bd0565b60125460408051631a81876d60e01b81529051611fa5926001600160a01b031691631a81876d9160048083019260209291908290030181865afa158015611f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9f9190615737565b8261291a565b611ff15760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f2073656e6420445420746f204f504300000000000000006044820152606401610bd0565b5050600160075550505050565b60606014805480602002602001604051908101604052809291908181526020016000905b8282101561206a576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101612022565b50505050905090565b600b5461010090046001600160a01b031633146112cc5760405162461bcd60e51b815260206004820152601f60248201527f455243323054656d706c6174653a204e4f542037323120436f6e7472616374006044820152606401610bd0565b336001600160a01b038216141561212b5760405162461bcd60e51b815260206004820152601f60248201527f50726f76696465722063616e6e6f742062652074686520636f6e73756d6572006044820152606401610bd0565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525090506000818c8c8c60405160200161217d939291906158b8565b604051602081830303815290604052805190602001206040516020016121a49291906158d2565b604051602081830303815290604052805190602001209050336001600160a01b0316612206828b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061417892505050565b6001600160a01b03161461225c5760405162461bcd60e51b815260206004820152601f60248201527f50726f7669646572207369676e617475726520636865636b206661696c6564006044820152606401610bd0565b60008288886040516020016122729291906158f4565b604051602081830303815290604052805190602001206040516020016122999291906158d2565b604051602081830303815290604052805190602001209050836001600160a01b03166122fb8288888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061417892505050565b6001600160a01b0316146123515760405162461bcd60e51b815260206004820152601f60248201527f436f6e73756d6572207369676e617475726520636865636b206661696c6564006044820152606401610bd0565b836001600160a01b0316336001600160a01b03167fc9a10280e9c735c63092fa5431e6acb3ed342e08b69a083e5e676994eb7070f98f8f8f8f8f8f8f8f8f42436040516123a89b9a9998979695949392919061592d565b60405180910390a350505050505050505050505050565b600b5460405163160a792560e01b815233600482015260009161010090046001600160a01b03169063160a792590602401608060405180830381865afa15801561240d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243191906156b3565b60200151806124b85750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015612489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ad9190615737565b6001600160a01b0316145b6124d45760405162461bcd60e51b8152600401610bd090615754565b600260075414156124f75760405162461bcd60e51b8152600401610bd090615789565b6002600781905550600082600481518110612514576125146157ee565b6020026020010151111561252b5761252b8461316a565b601254604051638244937560e01b81526001600160a01b039091169063824493759061255f9087908790879060040161599f565b6020604051808303816000875af115801561257e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a29190615804565b9050826000815181106125b7576125b76157ee565b60200260200101516001600160a01b0316836001815181106125db576125db6157ee565b60200260200101516001600160a01b03167fb3fac3ae95956dbac74e63ba8dac94081832395c8788e3049c900a7732f34805838760405161262f9291909182526001600160a01b0316602082015260400190565b60405180910390a3604080518082019091526001600160a01b03948516815260208101828152601480546001808201835560009290925292517fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec600290940293840180546001600160a01b0319169190981617909655517fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ed909101556007939093555090919050565b606060098054610a239061567e565b600b5460405163160a792560e01b81526001600160a01b0383811660048301526000926101009004169063160a792590602401608060405180830381865afa158015612737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275b91906156b3565b6020015192915050565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa1580156127b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d591906156b3565b602001518061285c5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa15801561282d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128519190615737565b6001600160a01b0316145b6128785760405162461bcd60e51b8152600401610bd090615754565b610ee68161316a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156129035760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610bd0565b6129103385858403613046565b5060019392505050565b6000610ab3338484613241565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015612973573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061299791906156b3565b6020015180612a1e5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa1580156129ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a139190615737565b6001600160a01b0316145b612a3a5760405162461bcd60e51b8152600401610bd090615754565b610ee681614250565b600b5460405163160a792560e01b81523360048201526101009091046001600160a01b03169063160a792590602401608060405180830381865afa158015612a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab391906156b3565b6020015180612b3a5750600b546040516331a9108f60e11b815260016004820152339161010090046001600160a01b031690636352211e90602401602060405180830381865afa158015612b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2f9190615737565b6001600160a01b0316145b612b565760405162461bcd60e51b8152600401610bd090615754565b6040516bffffffffffffffffffffffff193060601b16602082015260009060340160408051808303601f19018152908290528051602090910120600b546301caf8fd60e31b835290925061010090046001600160a01b031690630e57c7e890612bc7908490879087906004016159df565b600060405180830381600087803b158015612be157600080fd5b505af1158015612bf5573d6000803e3d6000fd5b50505050505050565b600b5460009060ff1615612c6e5760405162461bcd60e51b815260206004820152603160248201527f455243323054656d706c6174653a20746f6b656e20696e7374616e636520616c6044820152701c9958591e481a5b9a5d1a585b1a5e9959607a1b6064820152608401610bd0565b612d22612c7b8b8d615a59565b8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c91829185019084908082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b918291850190849080828437600092019190915250612d1d92508991508a9050615ae0565b614331565b9b9a5050505050505050505050565b43841015612d745760405162461bcd60e51b815260206004820152601060248201526f115490cc8c11150e881156141254915160821b6044820152606401610bd0565b6010546001600160a01b038816600090815260116020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087612dc783615b5b565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001612e4092919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015612eab573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590612ee15750886001600160a01b0316816001600160a01b0316145b612f2d5760405162461bcd60e51b815260206004820152601a60248201527f455243323044543a20494e56414c49445f5349474e41545552450000000000006044820152606401610bd0565b612f38898989613046565b505050505050505050565b612f4b612f83565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015610ee6573d6000803e3d6000fd5b600c546000906001600160a01b031661300c57600b546040516331a9108f60e11b8152600160048201526101009091046001600160a01b031690636352211e90602401602060405180830381865afa158015612fe3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130079190615737565b905090565b50600c546001600160a01b031690565b6006818154811061302c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0383166130a85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610bd0565b6001600160a01b0382166131095760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610bd0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03811615610ee6576001600160a01b0381166000908152600560205260409020805460ff16156131e35760405162461bcd60e51b815260206004820152601d60248201527f4552433230526f6c65733a2020414c52454144592041204d494e5445520000006044820152606401610bd0565b805460ff191660011781556131f782614789565b6040805142815243602082015233916001600160a01b038516917f4f7e100eb1ee13e903798bd0d6aa854152e07eb05544f392b9409c12935c809591015b60405180910390a35050565b6001600160a01b0383166132a55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610bd0565b6001600160a01b0382166133075760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610bd0565b6001600160a01b0383166000908152602081905260409020548181101561337f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610bd0565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906133b69084906157d6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161340291815260200190565b60405180910390a35b50505050565b6001600160a01b03811660008181526005602052604090819020805461ff00191681559051909133917faee911eec8b2df8f3ae0464841541b1e5f339519bd5cf51889fe8b07fecff658906134729042904390918252602082015260400190565b60405180910390a361118c82614840565b6001600160a01b03811660008181526005602052604090819020805460ff191681559051909133917fefa2735987005aaa89c050c0ff8cc9ae7d9079d19382081c429130f98c52d480906134729042904390918252602082015260400190565b60408051808201909152601c81527f19457468657265756d205369676e6564204d6573736167653a0a333200000000602082015260008161352760e0850185615b76565b6135346020870187614e12565b6135446040880160208901614e12565b87604001358860c0013560405160200161356396959493929190615bbc565b6040516020818303038152906040528051906020012060405160200161358a9291906158d2565b60408051601f198184030181529190528051602090910120905060006001826135b96080870160608801615bfa565b6040805160008152602081018083529390935260ff90911690820152608080870135606083015260a08088013591830191909152016020604051602081039080840390855afa158015613610573d6000803e3d6000fd5b5050604051601f190151915061362b90506020850185614e12565b6001600160a01b0316816001600160a01b0316146136825760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642070726f76696465722066656560601b6044820152606401610bd0565b6136926040850160208601614e12565b6001600160a01b03166136a86020860186614e12565b6001600160a01b03167ff8ed11cdaaf10eca2b6c941fb802cb8682afe86cac1eb93f70d0780fa062c54460408701356136e460e0890189615b76565b6136f460808b0160608c01615bfa565b8a608001358b60a001358c60c001356040516137169796959493929190615c15565b60405180910390a36000846040013511801561374b5750600061373f6040860160208701614e12565b6001600160a01b031614155b801561376d575060006137616020860186614e12565b6001600160a01b031614155b1561340b5760125460408051636c45e88160e01b815290516000926001600160a01b031691636c45e8819160048083019260209291908290030181865afa1580156137bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137e09190615804565b90506000811561380d5761380a670de0b6b3a764000061380460408901358561498e565b9061499a565b90505b600061381d60408801358361416c565b905061383e6138326040890160208a01614e12565b33308a6040013561401e565b61386f61384e6020890189614e12565b8261385f60408b0160208c01614e12565b6001600160a01b031691906149a6565b8115612bf55760125460408051631a81876d60e01b81529051612bf5926001600160a01b031691631a81876d9160048083019260209291908290030181865afa1580156138c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138e49190615737565b8361385f60408b0160208c01614e12565b6000610dc382846157d6565b6001600160a01b0382166139575760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610bd0565b806002600082825461396991906157d6565b90915550506001600160a01b038216600090815260208190526040812080548392906139969084906157d6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216613a405760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610bd0565b6001600160a01b03821660009081526020819052604090205481811015613ab45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610bd0565b6001600160a01b0383166000908152602081905260408120838303905560028054849290613ae3908490615c58565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b601554601454600091613b40916157d6565b9050600080826001600160401b03811115613b5d57613b5d615037565b604051908082528060200260200182016040528015613b86578160200160208202803683370190505b50905060005b601454811015613e6c57600060148281548110613bab57613bab6157ee565b60009182526020822060029091020154601480546001600160a01b039092169350829182918591634c87087d919088908110613be957613be96157ee565b9060005260206000209060020201600101546040518263ffffffff1660e01b8152600401613c1991815260200190565b61018060405180830381865afa158015613c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c5b9190615c6f565b9b509b509b505050505050505050506000821115613d0157836001600160a01b031663f32f947660148781548110613c9557613c956157ee565b906000526020600020906002020160010154846040518363ffffffff1660e01b8152600401613cce929190918252602082015260400190565b600060405180830381600087803b158015613ce857600080fd5b505af1158015613cfc573d6000803e3d6000fd5b505050505b8215613d9557836001600160a01b031663c612e48a60148781548110613d2957613d296157ee565b906000526020600020906002020160010154856040518363ffffffff1660e01b8152600401613d62929190918252602082015260400190565b600060405180830381600087803b158015613d7c57600080fd5b505af1158015613d90573d6000803e3d6000fd5b505050505b613dd860148681548110613dab57613dab6157ee565b600091825260208083206002909202909101546001600160a01b0316825260059052604090205460ff1690565b8015613de657506001811515145b15613e555760148581548110613dfe57613dfe6157ee565b600091825260209091206002909102015486516001600160a01b0390911690879089908110613e2f57613e2f6157ee565b6001600160a01b039092166020928302919091019091015286613e5181615b5b565b9750505b505050508080613e6490615b5b565b915050613b8c565b5060005b601554811015613fb15760158181548110613e8d57613e8d6157ee565b60009182526020909120015460405163f9bfaa7d60e01b81523060048201526001600160a01b039091169063f9bfaa7d90602401600060405180830381600087803b158015613edb57600080fd5b505af1158015613eef573d6000803e3d6000fd5b50505050613f3160158281548110613f0957613f096157ee565b60009182526020808320909101546001600160a01b0316825260059052604090205460ff1690565b15613f9f5760158181548110613f4957613f496157ee565b9060005260206000200160009054906101000a90046001600160a01b0316828481518110613f7957613f796157ee565b6001600160a01b039092166020928302919091019091015282613f9b81615b5b565b9350505b80613fa981615b5b565b915050613e70565b613fb9614a09565b50600c80546001600160a01b031916905560005b8281101561340b57613fea82828151811061180b5761180b6157ee565b80613ff481615b5b565b915050613fcd565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908616906370a0823190602401602060405180830381865afa158015614068573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061408c9190615804565b90506140a36001600160a01b038616858585614ab8565b6140ad81836138f5565b6040516370a0823160e01b81526001600160a01b0385811660048301528716906370a0823190602401602060405180830381865afa1580156140f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141179190615804565b10156141655760405162461bcd60e51b815260206004820152601a60248201527f5472616e7366657220616d6f756e7420697320746f6f206c6f770000000000006044820152606401610bd0565b5050505050565b6000610dc38284615c58565b60008060008084516041146141935760009350505050610ab7565b50505060208201516040830151604184015160ff16601b8110156141bf576141bc601b82615d2c565b90505b8060ff16601b141580156141d757508060ff16601c14155b156141e85760009350505050610ab7565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561423b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6001600160a01b03811615610ee6576001600160a01b03811660009081526005602052604090208054610100900460ff16156142d95760405162461bcd60e51b815260206004820152602260248201527f4552433230526f6c65733a2020414c5245414459204120464545204d414e414760448201526122a960f11b6064820152608401610bd0565b805461ff0019166101001781556142ef82614789565b6040805142815243602082015233916001600160a01b038516917fb17da2e9910b4ba5754e8872385ba315a238bafb5ae221fc85093c33432c40a79101613235565b60008084600081518110614347576143476157ee565b6020026020010151905084600181518110614364576143646157ee565b6020908102919091010151601280546001600160a01b0319166001600160a01b0392831617905581166143ee5760405162461bcd60e51b815260206004820152602c60248201527f455243323054656d706c6174653a20496e76616c6964206d696e7465722c202060448201526b7a65726f206164647265737360a01b6064820152608401610bd0565b6012546001600160a01b031661445a5760405162461bcd60e51b815260206004820152602b60248201527f455243323054656d706c6174653a20496e76616c696420726f757465722c207a60448201526a65726f206164647265737360a81b6064820152608401610bd0565b600019600a5586518790600090614473576144736157ee565b602002602001015160089080519060200190614490929190614d3a565b50866001815181106144a4576144a46157ee565b6020026020010151600990805190602001906144c1929190614d3a565b50600b805460ff196001600160a01b03841661010002166001600160a81b0319909116176001179055855161450190879060009061180b5761180b6157ee565b60006001600160a01b03168660018151811061451f5761451f6157ee565b60200260200101516001600160a01b0316146145c9576145588660018151811061454b5761454b6157ee565b6020026020010151613ffc565b8560018151811061456b5761456b6157ee565b60200260200101516001600160a01b0316336001600160a01b03167f4d7694d695c57cc54947177c8e8a0e61aae664e9223492a798c32fadfc6419cc42436040516145c0929190918252602082015260400190565b60405180910390a35b856002815181106145dc576145dc6157ee565b6020026020010151600d60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508560038151811061461d5761461d6157ee565b6020026020010151600e60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508360018151811061465e5761465e6157ee565b602090810291909101810151600f819055600d54600e54604080513381526001600160a01b039384169581019590955291169083015260608201527f02ab4b3fc023109c2d0da394bda239166c833f63c42b71b67ed4b836dca0ddfe9060800160405180910390a160405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f906146f990600890615d51565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051808303601f1901815291905280516020909101206010555050600b5460ff169695505050505050565b60005b6006548110156147e557816001600160a01b0316600682815481106147b3576147b36157ee565b6000918252602090912001546001600160a01b031614156147d3576147e5565b806147dd81615b5b565b91505061478c565b60065481141561118c57600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0384166001600160a01b03199091161790555050565b6001600160a01b0381166000908152600560205260409020805460ff1615801561487157508054610100900460ff16155b1561118c5760005b6006548110156148d257826001600160a01b0316600682815481106148a0576148a06157ee565b6000918252602090912001546001600160a01b031614156148c0576148d2565b806148ca81615b5b565b915050614879565b600654811015611bc257600680546148ec90600190615c58565b815481106148fc576148fc6157ee565b600091825260209091200154600680546001600160a01b039092169183908110614928576149286157ee565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600680548061496757614967615ded565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b6000610dc38284615e03565b6000610dc38284615e22565b6040516001600160a01b038316602482015260448101829052611bc290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614af0565b60005b600654811015614a6f5760006005600060068481548110614a2f57614a2f6157ee565b60009182526020808320909101546001600160a01b031683528201929092526040019020805461ffff191690555080614a6781615b5b565b915050614a0c565b50614a7c60066000614dbe565b6040805142815243602082015233917f712bc71db81927a76b8bf1ea346247bb0ad58f18e4e5c1bd4aa0ec6573e02a2b910160405180910390a2565b6040516001600160a01b038085166024830152831660448201526064810182905261340b9085906323b872dd60e01b906084016149d2565b6000614b45826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614bc29092919063ffffffff16565b805190915015611bc25780806020019051810190614b639190615e44565b611bc25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bd0565b6060614bd18484600085614bd9565b949350505050565b606082471015614c3a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610bd0565b843b614c885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bd0565b600080866001600160a01b03168587604051614ca49190615e61565b60006040518083038185875af1925050503d8060008114614ce1576040519150601f19603f3d011682016040523d82523d6000602084013e614ce6565b606091505b5091509150614cf6828286614d01565b979650505050505050565b60608315614d10575081610dc3565b825115614d205782518084602001fd5b8160405162461bcd60e51b8152600401610bd09190614e5b565b828054614d469061567e565b90600052602060002090601f016020900481019282614d685760008555614dae565b82601f10614d8157805160ff1916838001178555614dae565b82800160010185558215614dae579182015b82811115614dae578251825591602001919060010190614d93565b50614dba929150614dd8565b5090565b5080546000825590600052602060002090810190610ee691905b5b80821115614dba5760008155600101614dd9565b6001600160a01b0381168114610ee657600080fd5b8035614e0d81614ded565b919050565b600060208284031215614e2457600080fd5b8135610dc381614ded565b60005b83811015614e4a578181015183820152602001614e32565b8381111561340b5750506000910152565b6020815260008251806020840152614e7a816040850160208701614e2f565b601f01601f19169190910160400192915050565b60008060408385031215614ea157600080fd5b8235614eac81614ded565b946020939093013593505050565b8015158114610ee657600080fd5b600080600080600060a08688031215614ee057600080fd5b8535614eeb81614ded565b945060208601359350604086013592506060860135614f0981614eba565b91506080860135614f1981614ded565b809150509295509295909350565b600080600060608486031215614f3c57600080fd5b8335614f4781614ded565b92506020840135614f5781614ded565b929592945050506040919091013590565b60006101008284031215614f7b57600080fd5b50919050565b60008060408385031215614f9457600080fd5b8235915060208301356001600160401b03811115614fb157600080fd5b614fbd85828601614f68565b9150509250929050565b600060208284031215614fd957600080fd5b5035919050565b600081518084526020808501945080840160005b838110156150195781516001600160a01b031687529582019590820190600101614ff4565b509495945050505050565b602081526000610dc36020830184614fe0565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561507557615075615037565b604052919050565b60006001600160401b0382111561509657615096615037565b5060051b60200190565b600082601f8301126150b157600080fd5b813560206150c66150c18361507d565b61504d565b82815260059290921b840181019181810190868411156150e557600080fd5b8286015b8481101561510057803583529183019183016150e9565b509695505050505050565b600082601f83011261511c57600080fd5b8135602061512c6150c18361507d565b82815260059290921b8401810191818101908684111561514b57600080fd5b8286015b8481101561510057803561516281614ded565b835291830191830161514f565b60008060006060848603121561518457600080fd5b83356001600160401b038082111561519b57600080fd5b6151a7878388016150a0565b945060208601359150808211156151bd57600080fd5b6151c9878388016150a0565b935060408601359150808211156151df57600080fd5b506151ec8682870161510b565b9150509250925092565b60008060008084860360c081121561520d57600080fd5b853561521881614ded565b94506020860135935060408601356001600160401b0381111561523a57600080fd5b61524688828901614f68565b9350506060605f198201121561525b57600080fd5b509295919450926060019150565b602080825282518282018190526000919060409081850190868401855b828110156152b457815180516001600160a01b03168552860151868501529284019290850190600101615286565b5091979650505050505050565b60008083601f8401126152d357600080fd5b5081356001600160401b038111156152ea57600080fd5b60208301915083602082850101111561530257600080fd5b9250929050565b60008060008060008060008060008060c08b8d03121561532857600080fd5b8a35995060208b01356001600160401b038082111561534657600080fd5b6153528e838f016152c1565b909b50995060408d013591508082111561536b57600080fd5b6153778e838f016152c1565b909950975060608d013591508082111561539057600080fd5b61539c8e838f016152c1565b909750955060808d01359150808211156153b557600080fd5b506153c28d828e016152c1565b90945092506153d5905060a08c01614e02565b90509295989b9194979a5092959850565b6000806000606084860312156153fb57600080fd5b833561540681614ded565b925060208401356001600160401b038082111561542257600080fd5b61542e8783880161510b565b9350604086013591508082111561544457600080fd5b506151ec868287016150a0565b6000806020838503121561546457600080fd5b82356001600160401b0381111561547a57600080fd5b615486858286016152c1565b90969095509350505050565b60008083601f8401126154a457600080fd5b5081356001600160401b038111156154bb57600080fd5b6020830191508360208260051b850101111561530257600080fd5b60008060008060008060008060008060a08b8d0312156154f557600080fd5b8a356001600160401b038082111561550c57600080fd5b6155188e838f01615492565b909c509a5060208d013591508082111561553157600080fd5b61553d8e838f01615492565b909a50985060408d013591508082111561555657600080fd5b6155628e838f01615492565b909850965060608d013591508082111561557b57600080fd5b6155878e838f01615492565b909650945060808d01359150808211156155a057600080fd5b506155ad8d828e01615492565b915080935050809150509295989b9194979a5092959850565b803560ff81168114614e0d57600080fd5b600080600080600080600060e0888a0312156155f257600080fd5b87356155fd81614ded565b9650602088013561560d81614ded565b95506040880135945060608801359350615629608089016155c6565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561565857600080fd5b823561566381614ded565b9150602083013561567381614ded565b809150509250929050565b600181811c9082168061569257607f821691505b60208210811415614f7b57634e487b7160e01b600052602260045260246000fd5b6000608082840312156156c557600080fd5b604051608081018181106001600160401b03821117156156e7576156e7615037565b60405282516156f581614eba565b8152602083015161570581614eba565b6020820152604083015161571881614eba565b6040820152606083015161572b81614eba565b60608201529392505050565b60006020828403121561574957600080fd5b8151610dc381614ded565b6020808252818101527f455243323054656d706c6174653a204e4f54204445504c4f59455220524f4c45604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156157e9576157e96157c0565b500190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561581657600080fd5b5051919050565b600081518084526020808501945080840160005b8381101561501957815187529582019590820190600101615831565b60008186825b600281101561587b5781516001600160a01b0316835260209283019290910190600101615853565b50505060a0604083015261589260a083018661581d565b82810360608401526158a4818661581d565b90508281036080840152614cf68185614fe0565b838152818360208301376000910160200190815292915050565b600083516158e4818460208801614e2f565b9190910191825250602001919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8b815260e06020820152600061594760e083018c8e615904565b828103604084015261595a818b8d615904565b9050828103606084015261596f81898b615904565b90508281036080840152615984818789615904565b60a0840195909552505060c001529998505050505050505050565b6001600160a01b03841681526060602082018190526000906159c390830185614fe0565b82810360408401526159d5818561581d565b9695505050505050565b8381526040602082015260006159f9604083018486615904565b95945050505050565b60006001600160401b03831115615a1b57615a1b615037565b615a2e601f8401601f191660200161504d565b9050828152838383011115615a4257600080fd5b828260208301376000602084830101529392505050565b6000615a676150c18461507d565b80848252602080830192508560051b850136811115615a8557600080fd5b855b81811015615ad45780356001600160401b03811115615aa65760008081fd5b870136601f820112615ab85760008081fd5b615ac6368235868401615a02565b865250938201938201615a87565b50919695505050505050565b6000615aee6150c18461507d565b80848252602080830192508560051b850136811115615b0c57600080fd5b855b81811015615ad45780356001600160401b03811115615b2d5760008081fd5b870136601f820112615b3f5760008081fd5b615b4d368235868401615a02565b865250938201938201615b0e565b6000600019821415615b6f57615b6f6157c0565b5060010190565b6000808335601e19843603018112615b8d57600080fd5b8301803591506001600160401b03821115615ba757600080fd5b60200191503681900382131561530257600080fd5b858782376bffffffffffffffffffffffff19606095861b8116969091019586529290931b909116601484015260288301526048820152606801919050565b600060208284031215615c0c57600080fd5b610dc3826155c6565b87815260c060208201526000615c2f60c08301888a615904565b905060ff861660408301528460608301528360808301528260a083015298975050505050505050565b600082821015615c6a57615c6a6157c0565b500390565b6000806000806000806000806000806000806101808d8f031215615c9257600080fd5b8c51615c9d81614ded565b60208e0151909c50615cae81614ded565b60408e015160608f0151919c509a50615cc681614ded565b8099505060808d0151975060a08d0151965060c08d0151615ce681614eba565b8096505060e08d015194506101008d015193506101208d015192506101408d015191506101608d0151615d1881614eba565b809150509295989b509295989b509295989b565b600060ff821660ff84168060ff03821115615d4957615d496157c0565b019392505050565b600080835481600182811c915080831680615d6d57607f831692505b6020808410821415615d8d57634e487b7160e01b86526022600452602486fd5b818015615da15760018114615db257615ddf565b60ff19861689528489019650615ddf565b60008a81526020902060005b86811015615dd75781548b820152908501908301615dbe565b505084890196505b509498975050505050505050565b634e487b7160e01b600052603160045260246000fd5b6000816000190483118215151615615e1d57615e1d6157c0565b500290565b600082615e3f57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215615e5657600080fd5b8151610dc381614eba565b60008251615e73818460208701614e2f565b919091019291505056fea26469706673582212209697a906b59504c4a6db4f342ff16b072ab394c370e0c31fd5da8055dbc9825e64736f6c634300080c0033",
  "deployedSourceMap": "1178:37379:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30878:96;;;;;;;;;;-1:-1:-1;30953:14:42;;;;;-1:-1:-1;;;;;30953:14:42;30878:96;;;-1:-1:-1;;;;;178:32:75;;;160:51;;148:2;133:18;30878:96:42;;;;;;;;222:49:46;;;;;;;;;;-1:-1:-1;222:49:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;936:14:75;;929:22;911:41;;995:14;;988:22;983:2;968:18;;961:50;884:18;222:49:46;749:268:75;30456:90:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4171:166:3:-;;;;;;;;;;-1:-1:-1;4171:166:3;;;;;:::i;:::-;;:::i;:::-;;;2158:14:75;;2151:22;2133:41;;2121:2;2106:18;4171:166:3;1993:187:75;807:119:46;;;;;;;;;;-1:-1:-1;807:119:46;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;902:17:46;;;;;:11;:17;;;;;;;;;895:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;807:119;;;;;2421:13:75;;2414:21;2407:29;2389:48;;2507:4;2495:17;;;2489:24;2482:32;2475:40;2453:20;;;2446:70;;;;2362:18;807:119:46;2185:337:75;3162:106:3;;;;;;;;;;-1:-1:-1;3249:12:3;;3162:106;;;2673:25:75;;;2661:2;2646:18;3162:106:3;2527:177:75;14910:612:42;;;;;;;;;;-1:-1:-1;14910:612:42;;;;;:::i;:::-;;:::i;4804:478:3:-;;;;;;;;;;-1:-1:-1;4804:478:3;;;;;:::i;:::-;;:::i;23623:157:42:-;;;;;;;;;;-1:-1:-1;23623:157:42;;;;;:::i;:::-;;:::i;22868:105::-;;;;;;;;;;-1:-1:-1;22868:105:42;;;;;:::i;:::-;;:::i;1941:116::-;;;;;;;;;;-1:-1:-1;1941:116:42;1991:66;1941:116;;31141:90;;;;;;;;;;-1:-1:-1;1478:2:42;31141:90;;;4313:4:75;4301:17;;;4283:36;;4271:2;4256:18;31141:90:42;4141:184:75;31335:75:42;;;;;;;;;;-1:-1:-1;31399:4:42;;31335:75;;22084:304;;;;;;;;;;-1:-1:-1;22084:304:42;;;;;:::i;:::-;;:::i;1800:31::-;;;;;;;;;;;;;;;;31570:89;;;;;;;;;;-1:-1:-1;31641:11:42;;;;31570:89;;5677:212:3;;;;;;;;;;-1:-1:-1;5677:212:3;;;;;:::i;:::-;;:::i;28568:300:42:-;;;;;;;;;;-1:-1:-1;28757:23:42;;28794:21;;28829:22;;28568:300;;;-1:-1:-1;;;;;28757:23:42;;;5173:34:75;;28794:21:42;;;;5238:2:75;5223:18;;5216:43;5275:18;;;5268:34;5123:2;5108:18;28568:300:42;4933:375:75;15839:291:42;;;;;;;;;;-1:-1:-1;15839:291:42;;;;;:::i;:::-;;:::i;487:89:5:-;;;;;;;;;;-1:-1:-1;487:89:5;;;;;:::i;:::-;;:::i;35812:98:42:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;24464:103::-;;;;;;;;;;;;;:::i;27466:689::-;;;;;;;;;;-1:-1:-1;27466:689:42;;;;;:::i;:::-;;:::i;29244:834::-;;;;;;;;;;-1:-1:-1;29244:834:42;;;;;:::i;:::-;;:::i;12622:873::-;;;;;;;;;;-1:-1:-1;12622:873:42;;;;;:::i;:::-;;:::i;30277:70::-;;;;;;;;;;-1:-1:-1;30339:1:42;30277:70;;35366:96;;;;;;;;;;;;;:::i;3326:125:3:-;;;;;;;;;;-1:-1:-1;3326:125:3;;;;;:::i;:::-;-1:-1:-1;;;;;3426:18:3;3400:7;3426:18;;;;;;;;;;;;3326:125;882:361:5;;;;;;;;;;-1:-1:-1;882:361:5;;;;;:::i;:::-;;:::i;19128:2585:42:-;;;;;;;;;;-1:-1:-1;19128:2585:42;;;;;:::i;:::-;;:::i;35587:108::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2064:41::-;;;;;;;;;;-1:-1:-1;2064:41:42;;;;;:::i;:::-;;;;;;;;;;;;;;24946:202;;;;;;;;;;;;;:::i;36673:1349::-;;;;;;;;;;-1:-1:-1;36673:1349:42;;;;;:::i;:::-;;:::i;13857:638::-;;;;;;;;;;-1:-1:-1;13857:638:42;;;;;:::i;:::-;;:::i;30661:94::-;;;;;;;;;;;;;:::i;35105:153::-;;;;;;;;;;-1:-1:-1;35105:153:42;;;;;:::i;:::-;;:::i;22574:99::-;;;;;;;;;;-1:-1:-1;22574:99:42;;;;;:::i;:::-;;:::i;6376:405:3:-;;;;;;;;;;-1:-1:-1;6376:405:3;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;;;;;-1:-1:-1;3654:172:3;;;;;:::i;:::-;;:::i;1080:115:46:-;;;;;;;;;;-1:-1:-1;1080:115:46;;;;;:::i;:::-;-1:-1:-1;;;;;1160:20:46;1136:4;1160:20;;;:11;:20;;;;;:27;;;;1080:115;23244:151:42;;;;;;;;;;-1:-1:-1;23244:151:42;;;;;:::i;:::-;;:::i;24042:207::-;;;;;;;;;;-1:-1:-1;24042:207:42;;;;;:::i;:::-;;:::i;7509:456::-;;;;;;;;;;-1:-1:-1;7509:456:42;;;;;:::i;:::-;;:::i;32108:961::-;;;;;;;;;;-1:-1:-1;32108:961:42;;;;;:::i;:::-;;:::i;3884:149:3:-;;;;;;;;;;-1:-1:-1;3884:149:3;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:3;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149;34882:119:42;;;:::i;34163:241::-;;;;;;;;;;;;;:::i;1730:35::-;;;;;;;;;;;;1761:4;1730:35;;278:26:46;;;;;;;;;;-1:-1:-1;278:26:46;;;;;:::i;:::-;;:::i;2112:21:42:-;;;;;;;;;;-1:-1:-1;2112:21:42;;;;-1:-1:-1;;;;;2112:21:42;;;30456:90;30502:13;30534:5;30527:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30456:90;:::o;4171:166:3:-;4254:4;4270:39;665:10:9;4293:7:3;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:3;4171:166;;;;;:::o;14910:612:42:-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;;;;;;;;;1680:1:2::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:2::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;15195:36:42;::::2;;;15209:22;15220:10;15209;:22::i;:::-;15241:10;:27:::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;15241:27:42;;;;;::::2;::::0;;-1:-1:-1;;;;;;15241:27:42::2;-1:-1:-1::0;;;;;15241:27:42;::::2;::::0;;::::2;::::0;;;15283:24:::2;::::0;160:51:75;;;15283:24:42::2;::::0;148:2:75;133:18;15283:24:42::2;;;;;;;15332:6;::::0;15317:198:::2;::::0;-1:-1:-1;;;15317:198:42;;-1:-1:-1;;;;;19826:15:75;;;15317:198:42::2;::::0;::::2;19808:34:75::0;15401:4:42::2;19858:18:75::0;;;19851:43;19910:18;;;19903:34;;;19953:18;;;19946:34;;;15467:10:42::2;19996:19:75::0;;;19989:44;20070:15;;;20049:19;;;20042:44;15332:6:42;;::::2;::::0;15317:38:::2;::::0;19742:19:75;;15317:198:42::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1637:1:2::1;2562:7;:22:::0;-1:-1:-1;;;;;;;14910:612:42:o;4804:478:3:-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:3;;5003:24;5030:19;;;:11;:19;;;;;;;;665:10:9;5030:33:3;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:3;;20299:2:75;5073:79:3;;;20281:21:75;20338:2;20318:18;;;20311:30;20377:34;20357:18;;;20350:62;-1:-1:-1;;;20428:18:75;;;20421:38;20476:19;;5073:79:3;20097:404:75;5073:79:3;5186:57;5195:6;665:10:9;5236:6:3;5217:16;:25;5186:8;:57::i;:::-;5271:4;5264:11;;;4804:478;;;;;;:::o;23623:157:42:-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;23735:38:::1;23757:15;23735:21;:38::i;:::-;23623:157:::0;:::o;22868:105::-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;22944:22:::1;22958:7;22944:13;:22::i;22084:304::-:0;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;;;;;;:::i;:::-;1680:1;2389:7;:18;22217:123:42::1;::::0;;20737:25:75;;;22265:10:42::1;20793:2:75::0;20778:18;;20771:60;22289:15:42::1;20847:18:75::0;;;20840:34;22318:12:42::1;20905:2:75::0;20890:18;;20883:34;22217:123:42;;::::1;::::0;;;;20724:3:75;22217:123:42;;::::1;22350:31;22368:12;22350:17;:31::i;:::-;-1:-1:-1::0;;1637:1:2;2562:7;:22;22084:304:42:o;5677:212:3:-;665:10:9;5765:4:3;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:3;;;;;;;;;;5765:4;;5781:80;;5804:7;;5813:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;15839:291:42:-;15924:10;15912:23;;;;:11;:23;;;;;:30;;;15904:68;;;;-1:-1:-1;;;15904:68:42;;21395:2:75;15904:68:42;;;21377:21:75;21434:2;21414:18;;;21407:30;21473:27;21453:18;;;21446:55;21518:18;;15904:68:42;21193:349:75;15904:68:42;16031:4;;16003:24;16021:5;16003:13;3249:12:3;;;3162:106;16003:13:42;:17;;:24::i;:::-;:32;;15982:110;;;;-1:-1:-1;;;15982:110:42;;21749:2:75;15982:110:42;;;21731:21:75;21788:2;21768:18;;;21761:30;21827:33;21807:18;;;21800:61;21878:18;;15982:110:42;21547:355:75;15982:110:42;16102:21;16108:7;16117:5;16102;:21::i;:::-;15839:291;;:::o;487:89:5:-;542:27;665:10:9;562:6:5;542:5;:27::i;35812:98:42:-;35857:16;35892:10;35885:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;35885:18:42;;;;;;;;;;;;;;;;;;;;;;35812:98;:::o;24464:103::-;5677:14;;5661:42;;-1:-1:-1;;;5661:42:42;;5677:14;5661:42;;;2673:25:75;5677:14:42;;;;-1:-1:-1;;;;;5677:14:42;;5661:39;;2646:18:75;;5661:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5647:56:42;:10;-1:-1:-1;;;;;5647:56:42;;5626:130;;;;-1:-1:-1;;;5626:130:42;;22109:2:75;5626:130:42;;;22091:21:75;22148:2;22128:18;;;22121:30;22187:29;22167:18;;;22160:57;22234:18;;5626:130:42;21907:351:75;5626:130:42;24524:27:::1;:25;:27::i;:::-;24464:103::o:0;27466:689::-;27680:10;27668:23;;;;:11;:23;;;;;:38;;;;;;;:128;;-1:-1:-1;27742:14:42;;27726:58;;-1:-1:-1;;;27726:58:42;;27773:10;27726:58;;;160:51:75;27742:14:42;;;;-1:-1:-1;;;;;27742:14:42;;27726:46;;133:18:75;;27726:58:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;;27668:128;:202;;;-1:-1:-1;27832:14:42;;27816:42;;-1:-1:-1;;;27816:42:42;;27832:14;27816:42;;;2673:25:75;27860:10:42;;27832:14;;;-1:-1:-1;;;;;27832:14:42;;27816:39;;2646:18:75;;27816:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;27816:54:42;;27668:202;27647:292;;;;-1:-1:-1;;;27647:292:42;;22465:2:75;27647:292:42;;;22447:21:75;22504:2;22484:18;;;22477:30;22543:34;22523:18;;;22516:62;-1:-1:-1;;;22594:18:75;;;22587:41;22645:19;;27647:292:42;22263:407:75;27647:292:42;27949:42;27970:20;27949;:42::i;:::-;28006:142;;;28097:15;22849:25:75;;28126:12:42;22905:2:75;22890:18;;22883:34;-1:-1:-1;;;;;28006:142:42;;;28039:10;;28006:142;;22822:18:75;28006:142:42;;;;;;;27466:689;:::o;29244:834::-;5867:23;;-1:-1:-1;;;;;5867:23:42;5853:10;:37;5832:126;;;;-1:-1:-1;;;5832:126:42;;23130:2:75;5832:126:42;;;23112:21:75;23169:2;23149:18;;;23142:30;23208:34;23188:18;;;23181:62;-1:-1:-1;;;23259:18:75;;;23252:40;23309:19;;5832:126:42;22928:406:75;5832:126:42;-1:-1:-1;;;;;29476:38:42;::::1;29455:125;;;::::0;-1:-1:-1;;;29455:125:42;;23541:2:75;29455:125:42::1;::::0;::::1;23523:21:75::0;23580:2;23560:18;;;23553:30;23619:34;23599:18;;;23592:62;-1:-1:-1;;;23670:18:75;;;23663:38;23718:19;;29455:125:42::1;23339:404:75::0;29455:125:42::1;-1:-1:-1::0;;;;;29614:36:42;::::1;29593:121;;;::::0;-1:-1:-1;;;29593:121:42;;23950:2:75;29593:121:42::1;::::0;::::1;23932:21:75::0;23989:2;23969:18;;;23962:30;24028:34;24008:18;;;24001:62;-1:-1:-1;;;24079:18:75;;;24072:36;24125:19;;29593:121:42::1;23748:402:75::0;29593:121:42::1;29724:23;:50:::0;;-1:-1:-1;;;;;29724:50:42;;::::1;-1:-1:-1::0;;;;;;29724:50:42;;::::1;::::0;::::1;::::0;;;29784:21:::1;:46:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;29840:22:::1;:48:::0;;;29903:168:::1;::::0;;29940:10:::1;24424:34:75::0;;24489:2;24474:18;;24467:43;;;;24526:18;;24519:43;24593:2;24578:18;;24571:34;;;29903:168:42::1;::::0;24373:3:75;24358:19;29903:168:42::1;;;;;;;29244:834:::0;;;:::o;12622:873::-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;12803:12:42;;6058:14;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;1680:1:2::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:2::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;12835:13:42::2;3249:12:3::0;;;3162:106;12835:13:42::2;:18:::0;12827:67:::2;;;::::0;-1:-1:-1;;;12827:67:42;;24818:2:75;12827:67:42::2;::::0;::::2;24800:21:75::0;24857:2;24837:18;;;24830:30;24896:34;24876:18;;;24869:62;-1:-1:-1;;;24947:18:75;;;24940:34;24991:19;;12827:67:42::2;24616:400:75::0;12827:67:42::2;12904:24;12915:9;12925:1;12915:12;;;;;;;;:::i;:::-;;;;;;;12904:10;:24::i;:::-;13048:6;;;;;;;;;-1:-1:-1::0;;;;;13048:6:42::2;-1:-1:-1::0;;;;;13033:42:42::2;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13018:8;13027:1;13018:11;;;;;;;;:::i;:::-;;;;;;;:59;;12997:187;;;::::0;-1:-1:-1;;;12997:187:42;;25544:2:75;12997:187:42::2;::::0;::::2;25526:21:75::0;25583:2;25563:18;;;25556:30;25622:34;25602:18;;;25595:62;25693:34;25673:18;;;25666:62;-1:-1:-1;;;25744:19:75;;;25737:48;25802:19;;12997:187:42::2;25342:485:75::0;12997:187:42::2;13195:24;:56;;;;;;;;13231:4;-1:-1:-1::0;;;;;13195:56:42::2;-1:-1:-1::0;;;;;13195:56:42::2;;;;;13238:9;13248:1;13238:12;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;-1:-1:-1;;;;;13195:56:42;;::::2;::::0;;;13283:6:::2;::::0;13268:130:::2;::::0;-1:-1:-1;;;13268:130:42;;13195:56;;-1:-1:-1;13283:6:42::2;::::0;13268:33:::2;::::0;:130:::2;::::0;13195:56;;13335:8;;13357;;13379:9;;13268:130:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13408:13;:24:::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;13408:24:42;;;;::::2;::::0;;-1:-1:-1;;;;;;13408:24:42::2;-1:-1:-1::0;;;;;13408:24:42;::::2;;::::0;;13461:12;;13408:24;;-1:-1:-1;13447:41:42::2;::::0;13408:24;;13461:12;;::::2;;;;:::i;:::-;;;;;;;13475:9;13485:1;13475:12;;;;;;;;:::i;:::-;;;;;;;13447:41;;;;;;;-1:-1:-1::0;;;;;27621:15:75;;;27603:34;;27673:15;;;27668:2;27653:18;;27646:43;27725:15;;;27720:2;27705:18;;27698:43;27553:2;27538:18;;27363:384;13447:41:42::2;;;;;;;;-1:-1:-1::0;1637:1:2::1;2562:7;:22:::0;12622:873:42;;-1:-1:-1;;;12622:873:42:o;35366:96::-;35406:16;35441:13;35434:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;35434:21:42;;;;;;;;;;;;;;;;;;;;;;35366:96;:::o;882:361:5:-;958:24;985:32;995:7;665:10:9;3884:149:3;:::i;985:32:5:-;958:59;;1055:6;1035:16;:26;;1027:75;;;;-1:-1:-1;;;1027:75:5;;27954:2:75;1027:75:5;;;27936:21:75;27993:2;27973:18;;;27966:30;28032:34;28012:18;;;28005:62;-1:-1:-1;;;28083:18:75;;;28076:34;28127:19;;1027:75:5;27752:400:75;1027:75:5;1136:58;1145:7;665:10:9;1187:6:5;1168:16;:25;1136:8;:58::i;:::-;1214:22;1220:7;1229:6;1214:5;:22::i;:::-;948:295;882:361;;:::o;19128:2585:42:-;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;;;;;;:::i;:::-;1680:1;2389:7;:18;19440:10:42::1;3400:7:3::0;3426:18;;;;;;;;;;;19355:4:42::1;::::0;;-1:-1:-1;19430:31:42::1;19409:114;;;::::0;-1:-1:-1;;;19409:114:42;;28359:2:75;19409:114:42::1;::::0;::::1;28341:21:75::0;28398:2;28378:18;;;28371:30;28437:34;28417:18;;;28410:62;-1:-1:-1;;;28488:18:75;;;28481:34;28532:19;;19409:114:42::1;28157:400:75::0;19409:114:42::1;19685:23;::::0;19538:206:::1;::::0;;19586:10:::1;28821:51:75::0;;28903:2;28888:18;;28881:34;;;28931:18;;;28924:34;;;19656:15:42::1;28989:2:75::0;28974:18;;28967:34;19722:12:42::1;29032:3:75::0;29017:19;;29010:35;-1:-1:-1;;;;;19685:23:42;;::::1;::::0;19538:206;::::1;::::0;::::1;::::0;28808:3:75;28793:19;19538:206:42::1;;;;;;;20000:1;19975:22;;:26;:77;;;;-1:-1:-1::0;20017:21:42::1;::::0;-1:-1:-1;;;;;20017:21:42::1;:35:::0;::::1;19975:77;:130;;;;-1:-1:-1::0;20068:23:42::1;::::0;-1:-1:-1;;;;;20068:23:42::1;:37:::0;::::1;19975:130;19958:495;;;20146:21;::::0;20196:23:::1;::::0;20237:22:::1;::::0;20130:130:::1;::::0;-1:-1:-1;;;;;20146:21:42;;::::1;::::0;20168:10:::1;::::0;20196:23;::::1;::::0;20130:15:::1;:130::i;:::-;20367:21;::::0;20326:23:::1;::::0;20406:22:::1;::::0;20292:150:::1;::::0;2673:25:75;;;-1:-1:-1;;;;;20367:21:42;;::::1;::::0;20326:23;;::::1;::::0;20292:150:::1;::::0;2661:2:75;2646:18;20292:150:42::1;;;;;;;19958:495;20689:1;20646:17;:40;;;:44;:113;;;;-1:-1:-1::0;20757:1:42::1;20706:39;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;20706:53:42::1;;;20646:113;:184;;;;-1:-1:-1::0;20828:1:42::1;20775:41;;::::0;::::1;:17:::0;:41:::1;:::i;:::-;-1:-1:-1::0;;;;;20775:55:42::1;;;20646:184;20629:644;;;20855:184;20871:39;::::0;;;::::1;::::0;::::1;;:::i;:::-;20911:10;20939:41;;::::0;::::1;:17:::0;:41:::1;:::i;:::-;20998:17;:40;;;20855:15;:184::i;:::-;21151:39;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;21058:204:42::1;21092:41;;::::0;::::1;:17:::0;:41:::1;:::i;:::-;-1:-1:-1::0;;;;;21058:204:42::1;;21208:17;:40;;;21058:204;;;;2673:25:75::0;;2661:2;2646:18;;2527:177;21058:204:42::1;;;;;;;;20629:644;21282:31;21300:12;21282:17;:31::i;:::-;21355:6;::::0;21340:41:::1;::::0;;-1:-1:-1;;;21340:41:42;;;;21323:14:::1;::::0;-1:-1:-1;;;;;21355:6:42::1;::::0;21340:39:::1;::::0;:41:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;21355:6;21340:41:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21323:58;;21460:51;21469:21;:19;:21::i;:::-;21492:18;:6:::0;21503;21492:10:::1;:18::i;21460:51::-;21439:128;;;::::0;-1:-1:-1;;;21439:128:42;;29258:2:75;21439:128:42::1;::::0;::::1;29240:21:75::0;29297:2;29277:18;;;29270:30;29336:32;29316:18;;;29309:60;29386:18;;21439:128:42::1;29056:354:75::0;21439:128:42::1;21622:6;::::0;21607:40:::1;::::0;;-1:-1:-1;;;21607:40:42;;;;21598:58:::1;::::0;-1:-1:-1;;;;;21622:6:42::1;::::0;21607:38:::1;::::0;:40:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;21622:6;21607:40:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21649:6;21598:8;:58::i;:::-;21577:129;;;::::0;-1:-1:-1;;;21577:129:42;;29617:2:75;21577:129:42::1;::::0;::::1;29599:21:75::0;29656:2;29636:18;;;29629:30;29695:26;29675:18;;;29668:54;29739:18;;21577:129:42::1;29415:348:75::0;21577:129:42::1;-1:-1:-1::0;;1637:1:2;2562:7;:22;-1:-1:-1;;;;19128:2585:42:o;35587:108::-;35632:18;35669;35662:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;35662:26:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35587:108;:::o;24946:202::-;25024:14;;;;;-1:-1:-1;;;;;25024:14:42;25010:10;:28;24989:106;;;;-1:-1:-1;;;24989:106:42;;29970:2:75;24989:106:42;;;29952:21:75;30009:2;29989:18;;;29982:30;30048:33;30028:18;;;30021:61;30099:18;;24989:106:42;29768:355:75;36673:1349:42;36947:10;-1:-1:-1;;;;;36947:29:42;;;;36939:73;;;;-1:-1:-1;;;36939:73:42;;30330:2:75;36939:73:42;;;30312:21:75;30369:2;30349:18;;;30342:30;30408:33;30388:18;;;30381:61;30459:18;;36939:73:42;30128:355:75;36939:73:42;37022:19;:56;;;;;;;;;;;;;;;;;;;37088:20;37151:6;37248:9;37283:12;;37206:111;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37175:160;;;;;;37134:215;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37111:248;;;;;;37088:271;;37425:10;-1:-1:-1;;;;;37377:58:42;:44;37389:12;37403:17;;37377:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37377:11:42;;-1:-1:-1;;;37377:44:42:i;:::-;-1:-1:-1;;;;;37377:58:42;;37369:102;;;;-1:-1:-1;;;37369:102:42;;31415:2:75;37369:102:42;;;31397:21:75;31454:2;31434:18;;;31427:30;31493:33;31473:18;;;31466:61;31544:18;;37369:102:42;31213:355:75;37369:102:42;37481:20;37544:6;37641:12;;37599:76;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37568:125;;;;;;37527:180;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37504:213;;;;;;37481:236;;37783:15;-1:-1:-1;;;;;37735:63:42;:44;37747:12;37761:17;;37735:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37735:11:42;;-1:-1:-1;;;37735:44:42:i;:::-;-1:-1:-1;;;;;37735:63:42;;37727:107;;;;-1:-1:-1;;;37727:107:42;;32051:2:75;37727:107:42;;;32033:21:75;32090:2;32070:18;;;32063:30;32129:33;32109:18;;;32102:61;32180:18;;37727:107:42;31849:355:75;37727:107:42;37875:15;-1:-1:-1;;;;;37849:166:42;37863:10;-1:-1:-1;;;;;37849:166:42;;37892:9;37903:12;;37917:17;;37952:12;;37966:17;;37985:15;38002:12;37849:166;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;36929:1093;;;36673:1349;;;;;;;;;;:::o;13857:638::-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;14040:18:42;;6058:14;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;1680:1:2::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:2::1;;;;;;;:::i;:::-;1680:1;2389:7;:18;;;;14151:1:42::2;14140:5;14146:1;14140:8;;;;;;;;:::i;:::-;;;;;;;:12;14136:47;;;14154:29;14165:17;14154:10;:29::i;:::-;14221:6;::::0;14206:121:::2;::::0;-1:-1:-1;;;14206:121:42;;-1:-1:-1;;;;;14221:6:42;;::::2;::::0;14206:38:::2;::::0;:121:::2;::::0;14258:17;;14289:9;;14312:5;;14206:121:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14193:134;;14400:9;14410:1;14400:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;14342:71:42::2;14367:9;14377:1;14367:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;14342:71:42::2;;14355:10;14381:17;14342:71;;;;;;34440:25:75::0;;;-1:-1:-1;;;;;34501:32:75;34496:2;34481:18;;34474:60;34428:2;34413:18;;34266:274;14342:71:42::2;;;;;;;;14447:39;::::0;;;;::::2;::::0;;;-1:-1:-1;;;;;14447:39:42;;::::2;::::0;;::::2;::::0;::::2;::::0;;;14423:18:::2;:64:::0;;::::2;::::0;;::::2;::::0;;-1:-1:-1;14423:64:42;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;;14423:64:42::2;::::0;;;::::2;;::::0;;;;;;;;;2562:7:2::1;:22:::0;;;;-1:-1:-1;14447:39:42;;14475:10;-1:-1:-1;13857:638:42:o;30661:94::-;30709:13;30741:7;30734:14;;;;;:::i;35105:153::-;35202:14;;35186:52;;-1:-1:-1;;;35186:52:42;;-1:-1:-1;;;;;178:32:75;;;35186:52:42;;;160:51:75;35164:4:42;;35202:14;;;;;35186:46;;133:18:75;;35186:52:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;;;35105:153;-1:-1:-1;;35105:153:42:o;22574:99::-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;22647:19:::1;22658:7;22647:10;:19::i;6376:405:3:-:0;665:10:9;6469:4:3;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:3;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:3;;34747:2:75;6556:85:3;;;34729:21:75;34786:2;34766:18;;;34759:30;34825:34;34805:18;;;34798:62;-1:-1:-1;;;34876:18:75;;;34869:35;34921:19;;6556:85:3;34545:401:75;6556:85:3;6675:67;665:10:9;6698:7:3;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:3;;6376:405;-1:-1:-1;;;6376:405:3:o;3654:172::-;3740:4;3756:42;665:10:9;3780:9:3;3791:6;3756:9;:42::i;23244:151:42:-;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;23353:35:::1;23372:15;23353:18;:35::i;24042:207::-:0;6058:14;;6042:75;;-1:-1:-1;;;6042:75:42;;6106:10;6042:75;;;160:51:75;6058:14:42;;;;-1:-1:-1;;;;;6058:14:42;;6042:63;;133:18:75;;6042:75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:104;;;:164;;;-1:-1:-1;6166:14:42;;6150:42;;-1:-1:-1;;;6150:42:42;;6166:14;6150:42;;;2673:25:75;6196:10:42;;6166:14;;;-1:-1:-1;;;;;6166:14:42;;6150:39;;2646:18:75;;6150:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6150:56:42;;6042:164;6021:243;;;;-1:-1:-1;;;6021:243:42;;;;;;;:::i;:::-;24143:31:::1;::::0;-1:-1:-1;;24168:4:42::1;35100:2:75::0;35096:15;35092:53;24143:31:42::1;::::0;::::1;35080:66:75::0;24119:11:42::1;::::0;35162:12:75;;24143:31:42::1;::::0;;;;::::1;-1:-1:-1::0;;24143:31:42;;;;;;;24133:42;;24143:31:::1;24133:42:::0;;::::1;::::0;24201:14:::1;::::0;-1:-1:-1;;;24185:57:42;;24133:42;;-1:-1:-1;24201:14:42::1;::::0;::::1;-1:-1:-1::0;;;;;24201:14:42::1;::::0;24185:44:::1;::::0;:57:::1;::::0;24133:42;;24235:6;;;;24185:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;24109:140;24042:207:::0;;:::o;7509:456::-;5483:11;;7761:4;;5483:11;;5482:12;5461:108;;;;-1:-1:-1;;;5461:108:42;;35707:2:75;5461:108:42;;;35689:21:75;35746:2;35726:18;;;35719:30;35785:34;35765:18;;;35758:62;-1:-1:-1;;;35836:18:75;;;35829:47;35893:19;;5461:108:42;35505:413:75;5461:108:42;7796:162:::1;;7825:8:::0;;7796:162:::1;:::i;:::-;7851:10;;7796:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;7796:162:42::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;7879:17:42;;-1:-1:-1;7879:17:42;;;;7796:162;::::1;::::0;7879:17;;7796:162;7879:17;7796:162;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;7796:162:42::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;7914:6:42;;-1:-1:-1;7914:6:42;;;;7796:162;::::1;::::0;7914:6;;7796:162;7914:6;7796:162;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;7796:162:42::1;::::0;-1:-1:-1;7938:6:42;;-1:-1:-1;7938:6:42;;-1:-1:-1;7796:162:42::1;:::i;:::-;:11;:162::i;:::-;7777:181:::0;7509:456;-1:-1:-1;;;;;;;;;;;7509:456:42:o;32108:961::-;32321:12;32309:8;:24;;32301:53;;;;-1:-1:-1;;;32301:53:42;;38737:2:75;32301:53:42;;;38719:21:75;38776:2;38756:18;;;38749:30;-1:-1:-1;;;38795:18:75;;;38788:46;38851:18;;32301:53:42;38535:340:75;32301:53:42;32466:16;;-1:-1:-1;;;;;32703:13:42;;32364:14;32703:13;;;:6;:13;;;;;:15;;32364:14;;32466:16;1991:66;;32608:5;;32639:7;;32672:5;;32703:15;32364:14;32703:15;;;:::i;:::-;;;;-1:-1:-1;32531:243:42;;;;;;39307:25:75;;;;-1:-1:-1;;;;;39406:15:75;;;39386:18;;;39379:43;39458:15;;;;39438:18;;;39431:43;39490:18;;;39483:34;39533:19;;;39526:35;39577:19;;;39570:35;;;39279:19;;32531:243:42;;;;;;;;;;;;32500:292;;;;;;32404:402;;;;;;;;-1:-1:-1;;;39874:27:75;;39926:1;39917:11;;39910:27;;;;39962:2;39953:12;;39946:28;39999:2;39990:12;;39616:392;32404:402:42;;;;-1:-1:-1;;32404:402:42;;;;;;;;;32381:435;;32404:402;32381:435;;;;32826:24;32853:26;;;;;;;;;40240:25:75;;;40313:4;40301:17;;40281:18;;;40274:45;;;;40335:18;;;40328:34;;;40378:18;;;40371:34;;;32381:435:42;;-1:-1:-1;32826:24:42;32853:26;;40212:19:75;;32853:26:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;32853:26:42;;-1:-1:-1;;32853:26:42;;;-1:-1:-1;;;;;;;32910:30:42;;;;;;:59;;;32964:5;-1:-1:-1;;;;;32944:25:42;:16;-1:-1:-1;;;;;32944:25:42;;32910:59;32889:132;;;;-1:-1:-1;;;32889:132:42;;40618:2:75;32889:132:42;;;40600:21:75;40657:2;40637:18;;;40630:30;40696:28;40676:18;;;40669:56;40742:18;;32889:132:42;40416:350:75;32889:132:42;33031:31;33040:5;33047:7;33056:5;33031:8;:31::i;:::-;32291:778;;32108:961;;;;;;;:::o;34882:119::-;34940:21;:19;:21::i;:::-;-1:-1:-1;;;;;34932:39:42;:62;34972:21;34932:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34163:241;34238:16;;34215:7;;-1:-1:-1;;;;;34238:16:42;34234:164;;34307:14;;34291:42;;-1:-1:-1;;;34291:42:42;;34307:14;34291:42;;;2673:25:75;34307:14:42;;;;-1:-1:-1;;;;;34307:14:42;;34291:39;;2646:18:75;;34291:42:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34284:49;;34163:241;:::o;34234:164::-;-1:-1:-1;34371:16:42;;-1:-1:-1;;;;;34371:16:42;;34163:241::o;278:26:46:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;278:26:46;;-1:-1:-1;278:26:46;:::o;9952:370:3:-;-1:-1:-1;;;;;10083:19:3;;10075:68;;;;-1:-1:-1;;;10075:68:3;;40973:2:75;10075:68:3;;;40955:21:75;41012:2;40992:18;;;40985:30;41051:34;41031:18;;;41024:62;-1:-1:-1;;;41102:18:75;;;41095:34;41146:19;;10075:68:3;40771:400:75;10075:68:3;-1:-1:-1;;;;;10161:21:3;;10153:68;;;;-1:-1:-1;;;10153:68:3;;41378:2:75;10153:68:3;;;41360:21:75;41417:2;41397:18;;;41390:30;41456:34;41436:18;;;41429:62;-1:-1:-1;;;41507:18:75;;;41500:32;41549:19;;10153:68:3;41176:398:75;10153:68:3;-1:-1:-1;;;;;10232:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;2673:25:75;;;10283:32:3;;2646:18:75;10283:32:3;;;;;;;9952:370;;;:::o;1337:384:46:-;-1:-1:-1;;;;;1396:21:46;;;1393:322;;-1:-1:-1;;;;;1458:20:46;;1432:23;1458:20;;;:11;:20;;;;;1500:11;;;;:20;1492:62;;;;-1:-1:-1;;;1492:62:46;;41781:2:75;1492:62:46;;;41763:21:75;41820:2;41800:18;;;41793:30;41859:31;41839:18;;;41832:59;41908:18;;1492:62:46;41579:353:75;1492:62:46;1568:18;;-1:-1:-1;;1568:18:46;1582:4;1568:18;;;1600:25;1617:7;1600:16;:25::i;:::-;1644:60;;;1675:15;22849:25:75;;1691:12:46;22905:2:75;22890:18;;22883:34;1664:10:46;;-1:-1:-1;;;;;1644:60:46;;;;;22822:18:75;1644:60:46;;;;;;;;1418:297;1337:384;:::o;7255:713:3:-;-1:-1:-1;;;;;7390:20:3;;7382:70;;;;-1:-1:-1;;;7382:70:3;;42139:2:75;7382:70:3;;;42121:21:75;42178:2;42158:18;;;42151:30;42217:34;42197:18;;;42190:62;-1:-1:-1;;;42268:18:75;;;42261:35;42313:19;;7382:70:3;41937:401:75;7382:70:3;-1:-1:-1;;;;;7470:23:3;;7462:71;;;;-1:-1:-1;;;7462:71:3;;42545:2:75;7462:71:3;;;42527:21:75;42584:2;42564:18;;;42557:30;42623:34;42603:18;;;42596:62;-1:-1:-1;;;42674:18:75;;;42667:33;42717:19;;7462:71:3;42343:399:75;7462:71:3;-1:-1:-1;;;;;7626:17:3;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:3;;42949:2:75;7653:74:3;;;42931:21:75;42988:2;42968:18;;;42961:30;43027:34;43007:18;;;43000:62;-1:-1:-1;;;43078:18:75;;;43071:36;43124:19;;7653:74:3;42747:402:75;7653:74:3;-1:-1:-1;;;;;7761:17:3;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:9;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:3;7878:6;-1:-1:-1;;;;;7869:35:3;;7897:6;7869:35;;;;2673:25:75;;2661:2;2646:18;;2527:177;7869:35:3;;;;;;;;7915:46;7372:596;7255:713;;;:::o;3245:325:46:-;-1:-1:-1;;;;;3348:30:46;;3322:23;3348:30;;;:11;:30;;;;;;;3388:27;;-1:-1:-1;;3388:27:46;;;3430:80;;3348:30;;3470:10;;3430:80;;;;3481:15;;3497:12;;22849:25:75;;;22905:2;22890:18;;22883:34;22837:2;22822:18;;22675:248;3430:80:46;;;;;;;;3520:43;3545:17;3520:24;:43::i;1866:261::-;-1:-1:-1;;;;;1951:20:46;;1925:23;1951:20;;;:11;:20;;;;;;;1981:19;;-1:-1:-1;;1981:19:46;;;2015:62;;1951:20;;2037:10;;2015:62;;;;2048:15;;2064:12;;22849:25:75;;;22905:2;22890:18;;22883:34;22837:2;22822:18;;22675:248;16349:2325:42;16465:56;;;;;;;;;;;;;;;;;:19;:56;16686:25;;;;:12;:25;:::i;:::-;16737:31;;;;:12;:31;:::i;:::-;16794:29;;;;;;;;:::i;:::-;16849:12;:30;;;16905:12;:23;;;16644:306;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16613:355;;;;;;16572:410;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;16572:410:42;;;;;;;;;16549:443;;16572:410;16549:443;;;;;-1:-1:-1;17002:14:42;17019:66;16549:443;17038:14;;;;;;;;:::i;:::-;17019:66;;;;;;;;;;;;40240:25:75;;;;40313:4;40301:17;;;40281:18;;;40274:45;17054:14:42;;;;;40335:18:75;;;40328:34;17070:14:42;;;;;40378:18:75;;;40371:34;;;;40212:19;17019:66:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17019:66:42;;-1:-1:-1;;17019:66:42;;;-1:-1:-1;17113:31:42;;-1:-1:-1;17019:66:42;17113:31;;:12;:31;:::i;:::-;-1:-1:-1;;;;;17103:41:42;:6;-1:-1:-1;;;;;17103:41:42;;17095:74;;;;-1:-1:-1;;;17095:74:42;;44688:2:75;17095:74:42;;;44670:21:75;44727:2;44707:18;;;44700:30;-1:-1:-1;;;44746:18:75;;;44739:50;44806:18;;17095:74:42;44486:344:75;17095:74:42;17254:29;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17184:313:42;17209:31;;;;:12;:31;:::i;:::-;-1:-1:-1;;;;;17184:313:42;;17297:30;;;;17341:25;;;;17297:12;17341:25;:::i;:::-;17380:14;;;;;;;;:::i;:::-;17408:12;:14;;;17436:12;:14;;;17464:12;:23;;;17184:313;;;;;;;;;;;;:::i;:::-;;;;;;;;17723:1;17690:12;:30;;;:34;:93;;;;-1:-1:-1;17781:1:42;17740:29;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17740:43:42;;;17690:93;:154;;;;-1:-1:-1;17842:1:42;17799:31;;;;:12;:31;:::i;:::-;-1:-1:-1;;;;;17799:45:42;;;17690:154;17673:995;;;17901:6;;17886:42;;;-1:-1:-1;;;17886:42:42;;;;17869:14;;-1:-1:-1;;;;;17901:6:42;;17886:40;;:42;;;;;;;;;;;;;;17901:6;17886:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17869:59;-1:-1:-1;17942:14:42;17977:10;;17974:92;;18014:52;1761:4;18014:42;:30;;;;18049:6;18014:34;:42::i;:::-;:46;;:52::i;:::-;18005:61;;17974:92;18080:19;18102:42;:30;;;;18137:6;18102:34;:42::i;:::-;18080:64;-1:-1:-1;18159:136:42;18175:29;;;;;;;;:::i;:::-;18205:10;18241:4;18264:12;:30;;;18159:15;:136::i;:::-;18309:142;18377:31;;;;:12;:31;:::i;:::-;18426:11;18316:29;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18309:50:42;;:142;:50;:142::i;:::-;18468:10;;18465:193;;18578:6;;18563:40;;;-1:-1:-1;;;18563:40:42;;;;18495:146;;-1:-1:-1;;;;;18578:6:42;;18563:38;;:40;;;;;;;;;;;;;;18578:6;18563:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18621:6;18502:29;;;;;;;;:::i;2672:96:11:-;2730:7;2756:5;2760:1;2756;:5;:::i;8244:389:3:-;-1:-1:-1;;;;;8327:21:3;;8319:65;;;;-1:-1:-1;;;8319:65:3;;45652:2:75;8319:65:3;;;45634:21:75;45691:2;45671:18;;;45664:30;45730:33;45710:18;;;45703:61;45781:18;;8319:65:3;45450:355:75;8319:65:3;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:3;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:3;;2673:25:75;;;-1:-1:-1;;;;;8530:37:3;;;8547:1;;8530:37;;2661:2:75;2646:18;8530:37:3;;;;;;;15839:291:42;;:::o;8953:576:3:-;-1:-1:-1;;;;;9036:21:3;;9028:67;;;;-1:-1:-1;;;9028:67:3;;46012:2:75;9028:67:3;;;45994:21:75;46051:2;46031:18;;;46024:30;46090:34;46070:18;;;46063:62;-1:-1:-1;;;46141:18:75;;;46134:31;46182:19;;9028:67:3;45810:397:75;9028:67:3;-1:-1:-1;;;;;9191:18:3;;9166:22;9191:18;;;;;;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:3;;46414:2:75;9219:71:3;;;46396:21:75;46453:2;46433:18;;;46426:30;46492:34;46472:18;;;46465:62;-1:-1:-1;;;46543:18:75;;;46536:32;46585:19;;9219:71:3;46212:398:75;9219:71:3;-1:-1:-1;;;;;9324:18:3;;:9;:18;;;;;;;;;;9345:23;;;9324:44;;9388:12;:22;;9362:6;;9324:9;9388:22;;9362:6;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:3;;2673:25:75;;;9452:1:3;;-1:-1:-1;;;;;9426:37:3;;;;;2661:2:75;2646:18;9426:37:3;;;;;;;948:295:5;882:361;;:::o;25154:2012:42:-;25257:10;:17;25229:18;:25;25210:16;;25229:45;;;:::i;:::-;25210:64;;25284:17;25315:32;25362:8;-1:-1:-1;;;;;25348:23:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25348:23:42;;25315:56;;25461:9;25480:1028;25491:18;:25;25489:27;;25480:1028;;;25541:22;25585:18;25604:1;25585:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;:37;25989:18;:21;;-1:-1:-1;;;;;25585:37:42;;;;-1:-1:-1;25585:21:42;;;;:37;;25973:15;;25989:18;26008:1;;25989:21;;;;;;:::i;:::-;;;;;;;;;;;:24;;;25973:41;;;;;;;;;;;;;2673:25:75;;2661:2;2646:18;;2527:177;25973:41:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25641:373;;;;;;;;;;;;;;;26045:1;26035:9;:11;26032:86;;;26068:3;-1:-1:-1;;;;;26068:13:42;;26082:18;26101:1;26082:21;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;26108:9;26068:50;;;;;;;;;;;;;;;22849:25:75;;;22905:2;22890:18;;22883:34;22837:2;22822:18;;22675:248;26068:50:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26032:86;26139:11;;26136:86;;26172:3;-1:-1:-1;;;;;26172:13:42;;26186:18;26205:1;26186:21;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;26212:9;26172:50;;;;;;;;;;;;;;;22849:25:75;;;22905:2;22890:18;;22883:34;22837:2;22822:18;;22675:248;26172:50:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26136:86;26292:47;26301:18;26320:1;26301:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:37;-1:-1:-1;;;;;26301:37:42;1160:20:46;;:11;:20;;;;;:27;;;;1080:115;26292:47:42;:67;;;;-1:-1:-1;26355:4:42;26343:16;;;;26292:67;26289:209;;;26409:18;26428:1;26409:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;26382:26;;-1:-1:-1;;;;;26409:37:42;;;;26382:15;;26398:9;;26382:26;;;;;;:::i;:::-;-1:-1:-1;;;;;26382:64:42;;;:26;;;;;;;;;;;:64;26468:11;;;;:::i;:::-;;;;26289:209;25523:985;;;;25518:3;;;;;:::i;:::-;;;;25480:1028;;;-1:-1:-1;26595:1:42;26589:276;26600:10;:17;26598:19;;26589:276;;;26653:10;26664:1;26653:13;;;;;;;;:::i;:::-;;;;;;;;;;;26642:54;;-1:-1:-1;;;26642:54:42;;26690:4;26642:54;;;160:51:75;-1:-1:-1;;;;;26653:13:42;;;;26642:39;;133:18:75;;26642:54:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26717:23;26726:10;26737:1;26726:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;26726:13:42;1160:20:46;;:11;:20;;;;;:27;;;;1080:115;26717:23:42;26714:141;;;26790:10;26801:1;26790:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26790:13:42;26763:15;26779:9;26763:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26763:40:42;;;:26;;;;;;;;;;;:40;26825:11;;;;:::i;:::-;;;;26714:141;26619:3;;;;:::i;:::-;;;;26589:276;;;26907:19;:17;:19::i;:::-;-1:-1:-1;26966:16:42;:29;;-1:-1:-1;;;;;;26966:29:42;;;26993:1;27069:82;27080:9;27078:1;:11;27069:82;;;27110:30;27121:15;27137:1;27121:18;;;;;;;;:::i;27110:30::-;27091:3;;;;:::i;:::-;;;;27069:82;;28264:125;28343:16;:39;;-1:-1:-1;;;;;;28343:39:42;-1:-1:-1;;;;;28343:39:42;;;;;;;;;;28264:125::o;35916:380::-;36079:27;;-1:-1:-1;;;36079:27:42;;-1:-1:-1;;;;;178:32:75;;;36079:27:42;;;160:51:75;36055:21:42;;36079:23;;;;;;133:18:75;;36079:27:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;36055:51;-1:-1:-1;36116:48:42;-1:-1:-1;;;;;36116:30:42;;36147:4;36153:2;36157:6;36116:30;:48::i;:::-;36213:25;:13;36231:6;36213:17;:25::i;:::-;36182:27;;-1:-1:-1;;;36182:27:42;;-1:-1:-1;;;;;178:32:75;;;36182:27:42;;;160:51:75;36182:23:42;;;;;133:18:75;;36182:27:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;36174:115;;;;-1:-1:-1;;;36174:115:42;;48420:2:75;36174:115:42;;;48402:21:75;48459:2;48439:18;;;48432:30;48498:28;48478:18;;;48471:56;48544:18;;36174:115:42;48218:350:75;36174:115:42;36045:251;35916:380;;;;:::o;3039:96:11:-;3097:7;3123:5;3127:1;3123;:5;:::i;38030:524:42:-;38106:7;38125:9;38144;38163:7;38184:3;:10;38198:2;38184:16;38180:62;;38229:1;38214:17;;;;;;;38180:62;-1:-1:-1;;;38292:2:42;38283:12;;38277:19;38325:2;38316:12;;38310:19;38362:2;38353:12;;38347:19;38368:3;38343:29;38399:2;38395:6;;38391:42;;;38415:7;38420:2;38415:7;;:::i;:::-;;;38391:42;38449:1;:7;;38454:2;38449:7;;:18;;;;;38460:1;:7;;38465:2;38460:7;;38449:18;38445:62;;;38494:1;38479:17;;;;;;;38445:62;38523:24;;;;;;;;;;;;40240:25:75;;;40313:4;40301:17;;40281:18;;;40274:45;;;;40335:18;;;40328:34;;;40378:18;;;40371:34;;;38523:24:42;;40212:19:75;;38523:24:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;38523:24:42;;-1:-1:-1;;38523:24:42;;;38030:524;-1:-1:-1;;;;;;;38030:524:42:o;2603:471:46:-;-1:-1:-1;;;;;2680:31:46;;;2677:391;;-1:-1:-1;;;;;2752:30:46;;2726:23;2752:30;;;:11;:30;;;;;2804:19;;;;;;;:28;2796:75;;;;-1:-1:-1;;;2796:75:46;;48984:2:75;2796:75:46;;;48966:21:75;49023:2;49003:18;;;48996:30;49062:34;49042:18;;;49035:62;-1:-1:-1;;;49113:18:75;;;49106:32;49155:19;;2796:75:46;48782:398:75;2796:75:46;2885:26;;-1:-1:-1;;2885:26:46;;;;;2925:35;2942:17;2925:16;:35::i;:::-;2979:78;;;3028:15;22849:25:75;;3044:12:46;22905:2:75;22890:18;;22883:34;3017:10:46;;-1:-1:-1;;;;;2979:78:46;;;;;22822:18:75;2979:78:46;22675:248:75;9084:2135:42;9300:4;9316:21;9340:17;9358:1;9340:20;;;;;;;;:::i;:::-;;;;;;;9316:44;;9379:17;9397:1;9379:20;;;;;;;;:::i;:::-;;;;;;;;;;;9370:6;:29;;-1:-1:-1;;;;;;9370:29:42;-1:-1:-1;;;;;9370:29:42;;;;;;9430:27;;9409:118;;;;-1:-1:-1;;;9409:118:42;;49387:2:75;9409:118:42;;;49369:21:75;49426:2;49406:18;;;49399:30;49465:34;49445:18;;;49438:62;-1:-1:-1;;;49516:18:75;;;49509:42;49568:19;;9409:118:42;49185:408:75;9409:118:42;9559:6;;-1:-1:-1;;;;;9559:6:42;9538:110;;;;-1:-1:-1;;;9538:110:42;;49800:2:75;9538:110:42;;;49782:21:75;49839:2;49819:18;;;49812:30;49878:34;49858:18;;;49851:62;-1:-1:-1;;;49929:18:75;;;49922:41;49980:19;;9538:110:42;49598:407:75;9538:110:42;-1:-1:-1;;9764:4:42;:73;9855:11;;:8;;9864:1;;9855:11;;;;:::i;:::-;;;;;;;9847:5;:19;;;;;;;;;;;;:::i;:::-;;9886:8;9895:1;9886:11;;;;;;;;:::i;:::-;;;;;;;9876:7;:21;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9907:14:42;:30;;-1:-1:-1;;;;;;;9907:30:42;;;;9947:18;-1:-1:-1;;;;;;9947:18:42;;;;9907:14;9947:18;;;10076:13;;10065:25;;10076:10;;-1:-1:-1;;10076:13:42;;;;:::i;10065:25::-;10129:1;-1:-1:-1;;;;;10104:27:42;:10;10115:1;10104:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10104:27:42;;10100:267;;10147:35;10168:10;10179:1;10168:13;;;;;;;;:::i;:::-;;;;;;;10147:20;:35::i;:::-;10266:10;10277:1;10266:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10201:155:42;10238:10;-1:-1:-1;;;;;10201:155:42;;10297:15;10330:12;10201:155;;;;;;22849:25:75;;;22905:2;22890:18;;22883:34;22837:2;22822:18;;22675:248;10201:155:42;;;;;;;;10100:267;10402:10;10413:1;10402:13;;;;;;;;:::i;:::-;;;;;;;10376:23;;:39;;;;;-1:-1:-1;;;;;10376:39:42;;;;;-1:-1:-1;;;;;10376:39:42;;;;;;10449:10;10460:1;10449:13;;;;;;;;:::i;:::-;;;;;;;10425:21;;:37;;;;;-1:-1:-1;;;;;10425:37:42;;;;;-1:-1:-1;;;;;10425:37:42;;;;;;10497:6;10504:1;10497:9;;;;;;;;:::i;:::-;;;;;;;;;;;;10472:22;:34;;;10582:23;;10619:21;;10521:165;;;10558:10;24424:34:75;;-1:-1:-1;;;;;10582:23:42;;;24474:18:75;;;24467:43;;;;10619:21:42;;24526:18:75;;;24519:43;24593:2;24578:18;;24571:34;10521:165:42;;24373:3:75;24358:19;10521:165:42;;;;;;;11004:23;;10755:9;;10853:133;;11004:23;;11020:5;;11004:23;:::i;:::-;;;;;;;;;;11055:10;;;;;;;;-1:-1:-1;;;11055:10:42;;;;;10825:348;;;;;51507:25:75;;;;51548:18;;51541:34;;;;11045:21:42;51591:18:75;;;51584:34;51634:18;;;51627:34;;;11154:4:42;51677:19:75;;;51670:61;51479:19;;10825:348:42;;;;;;-1:-1:-1;;10825:348:42;;;;;;10802:381;;10825:348;10802:381;;;;10783:16;:400;-1:-1:-1;;11201:11:42;;;;;9084:2135;-1:-1:-1;;;;;;9084:2135:42:o;4270:294:46:-;4329:9;4348:94;4364:9;:16;4360:20;;4348:94;;;4420:4;-1:-1:-1;;;;;4404:20:46;:9;4414:1;4404:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4404:12:46;:20;4401:30;;;4426:5;;4401:30;4382:3;;;;:::i;:::-;;;;4348:94;;;4459:9;:16;4454:21;;4451:107;;;4527:9;:20;;;;;;;-1:-1:-1;4527:20:46;;;;;;;;-1:-1:-1;;;;;4527:20:46;;-1:-1:-1;;;;;;4527:20:46;;;;;;4319:245;4270:294;:::o;4765:516::-;-1:-1:-1;;;;;4863:17:46;;4832:28;4863:17;;;:11;:17;;;;;4894:16;;;;:25;;;:74;;-1:-1:-1;4935:24:46;;;;;;;:33;4894:74;4890:385;;;4992:9;5015:102;5031:9;:16;5027:20;;5015:102;;;5091:4;-1:-1:-1;;;;;5075:20:46;:9;5085:1;5075:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5075:12:46;:20;5072:30;;;5097:5;;5072:30;5049:3;;;;:::i;:::-;;;;5015:102;;;5137:9;:16;5133:20;;5130:135;;;5187:9;5197:16;;:19;;5215:1;;5197:19;:::i;:::-;5187:30;;;;;;;;:::i;:::-;;;;;;;;;;;5172:9;:12;;-1:-1:-1;;;;;5187:30:46;;;;5182:1;;5172:12;;;;;;:::i;:::-;;;;;;;;;:45;;;;;-1:-1:-1;;;;;5172:45:46;;;;;-1:-1:-1;;;;;5172:45:46;;;;;;5235:9;:15;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;5235:15:46;;;;;-1:-1:-1;;;;;;5235:15:46;;;;;;4978:297;4822:459;4765:516;:::o;3382:96:11:-;3440:7;3466:5;3470:1;3466;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;634:205:7:-;773:58;;-1:-1:-1;;;;;52461:32:75;;773:58:7;;;52443:51:75;52510:18;;;52503:34;;;746:86:7;;766:5;;-1:-1:-1;;;796:23:7;52416:18:75;;773:58:7;;;;-1:-1:-1;;773:58:7;;;;;;;;;;;;;;-1:-1:-1;;;;;773:58:7;-1:-1:-1;;;;;;773:58:7;;;;;;;;;;746:19;:86::i;3717:379:46:-;3779:9;3774:198;3798:9;:16;3794:20;;3774:198;;;3835:23;3861:11;:25;3873:9;3883:1;3873:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3873:12:46;3861:25;;;;;;;;;;;;3900:19;;-1:-1:-1;;3933:27:46;;;-1:-1:-1;3816:3:46;;;;:::i;:::-;;;;3774:198;;;-1:-1:-1;3990:16:46;3997:9;;3990:16;:::i;:::-;4021:59;;;4051:15;22849:25:75;;4067:12:46;22905:2:75;22890:18;;22883:34;4040:10:46;;4021:59;;22822:18:75;4021:59:46;;;;;;;3717:379::o;845:241:7:-;1010:68;;-1:-1:-1;;;;;5191:15:75;;;1010:68:7;;;5173:34:75;5243:15;;5223:18;;;5216:43;5275:18;;;5268:34;;;983:96:7;;1003:5;;-1:-1:-1;;;1033:27:7;5108:18:75;;1010:68:7;4933:375:75;3140:706:7;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:7;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:7;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:7;;53000:2:75;3744:85:7;;;52982:21:75;53039:2;53019:18;;;53012:30;53078:34;53058:18;;;53051:62;-1:-1:-1;;;53129:18:75;;;53122:40;53179:19;;3744:85:7;52798:406:75;3461:223:8;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;3461:223;-1:-1:-1;;;;3461:223:8:o;4548:500::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:8;;53411:2:75;4737:81:8;;;53393:21:75;53450:2;53430:18;;;53423:30;53489:34;53469:18;;;53462:62;-1:-1:-1;;;53540:18:75;;;53533:36;53586:19;;4737:81:8;53209:402:75;4737:81:8;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:8;;53818:2:75;4828:60:8;;;53800:21:75;53857:2;53837:18;;;53830:30;53896:31;53876:18;;;53869:59;53945:18;;4828:60:8;53616:353:75;4828:60:8;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:8;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;4989:17;:52::i;:::-;4982:59;4548:500;-1:-1:-1;;;;;;;4548:500:8:o;6950:692::-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:8;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7598:12;7591:20;;-1:-1:-1;;;7591:20:8;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;222:131:75;-1:-1:-1;;;;;297:31:75;;287:42;;277:70;;343:1;340;333:12;358:134;426:20;;455:31;426:20;455:31;:::i;:::-;358:134;;;:::o;497:247::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;664:9;651:23;683:31;708:5;683:31;:::i;1022:258::-;1094:1;1104:113;1118:6;1115:1;1112:13;1104:113;;;1194:11;;;1188:18;1175:11;;;1168:39;1140:2;1133:10;1104:113;;;1235:6;1232:1;1229:13;1226:48;;;-1:-1:-1;;1270:1:75;1252:16;;1245:27;1022:258::o;1285:383::-;1434:2;1423:9;1416:21;1397:4;1466:6;1460:13;1509:6;1504:2;1493:9;1489:18;1482:34;1525:66;1584:6;1579:2;1568:9;1564:18;1559:2;1551:6;1547:15;1525:66;:::i;:::-;1652:2;1631:15;-1:-1:-1;;1627:29:75;1612:45;;;;1659:2;1608:54;;1285:383;-1:-1:-1;;1285:383:75:o;1673:315::-;1741:6;1749;1802:2;1790:9;1781:7;1777:23;1773:32;1770:52;;;1818:1;1815;1808:12;1770:52;1857:9;1844:23;1876:31;1901:5;1876:31;:::i;:::-;1926:5;1978:2;1963:18;;;;1950:32;;-1:-1:-1;;;1673:315:75:o;2709:118::-;2795:5;2788:13;2781:21;2774:5;2771:32;2761:60;;2817:1;2814;2807:12;2832:661;2924:6;2932;2940;2948;2956;3009:3;2997:9;2988:7;2984:23;2980:33;2977:53;;;3026:1;3023;3016:12;2977:53;3065:9;3052:23;3084:31;3109:5;3084:31;:::i;:::-;3134:5;-1:-1:-1;3186:2:75;3171:18;;3158:32;;-1:-1:-1;3237:2:75;3222:18;;3209:32;;-1:-1:-1;3293:2:75;3278:18;;3265:32;3306:30;3265:32;3306:30;:::i;:::-;3355:7;-1:-1:-1;3414:3:75;3399:19;;3386:33;3428;3386;3428;:::i;:::-;3480:7;3470:17;;;2832:661;;;;;;;;:::o;3498:456::-;3575:6;3583;3591;3644:2;3632:9;3623:7;3619:23;3615:32;3612:52;;;3660:1;3657;3650:12;3612:52;3699:9;3686:23;3718:31;3743:5;3718:31;:::i;:::-;3768:5;-1:-1:-1;3825:2:75;3810:18;;3797:32;3838:33;3797:32;3838:33;:::i;:::-;3498:456;;3890:7;;-1:-1:-1;;;3944:2:75;3929:18;;;;3916:32;;3498:456::o;4330:160::-;4394:5;4439:3;4430:6;4425:3;4421:16;4417:26;4414:46;;;4456:1;4453;4446:12;4414:46;-1:-1:-1;4478:6:75;4330:160;-1:-1:-1;4330:160:75:o;4495:433::-;4595:6;4603;4656:2;4644:9;4635:7;4631:23;4627:32;4624:52;;;4672:1;4669;4662:12;4624:52;4708:9;4695:23;4685:33;;4769:2;4758:9;4754:18;4741:32;-1:-1:-1;;;;;4788:6:75;4785:30;4782:50;;;4828:1;4825;4818:12;4782:50;4851:71;4914:7;4905:6;4894:9;4890:22;4851:71;:::i;:::-;4841:81;;;4495:433;;;;;:::o;5313:180::-;5372:6;5425:2;5413:9;5404:7;5400:23;5396:32;5393:52;;;5441:1;5438;5431:12;5393:52;-1:-1:-1;5464:23:75;;5313:180;-1:-1:-1;5313:180:75:o;5498:461::-;5551:3;5589:5;5583:12;5616:6;5611:3;5604:19;5642:4;5671:2;5666:3;5662:12;5655:19;;5708:2;5701:5;5697:14;5729:1;5739:195;5753:6;5750:1;5747:13;5739:195;;;5818:13;;-1:-1:-1;;;;;5814:39:75;5802:52;;5874:12;;;;5909:15;;;;5850:1;5768:9;5739:195;;;-1:-1:-1;5950:3:75;;5498:461;-1:-1:-1;;;;;5498:461:75:o;5964:261::-;6143:2;6132:9;6125:21;6106:4;6163:56;6215:2;6204:9;6200:18;6192:6;6163:56;:::i;6230:127::-;6291:10;6286:3;6282:20;6279:1;6272:31;6322:4;6319:1;6312:15;6346:4;6343:1;6336:15;6362:275;6433:2;6427:9;6498:2;6479:13;;-1:-1:-1;;6475:27:75;6463:40;;-1:-1:-1;;;;;6518:34:75;;6554:22;;;6515:62;6512:88;;;6580:18;;:::i;:::-;6616:2;6609:22;6362:275;;-1:-1:-1;6362:275:75:o;6642:183::-;6702:4;-1:-1:-1;;;;;6727:6:75;6724:30;6721:56;;;6757:18;;:::i;:::-;-1:-1:-1;6802:1:75;6798:14;6814:4;6794:25;;6642:183::o;6830:662::-;6884:5;6937:3;6930:4;6922:6;6918:17;6914:27;6904:55;;6955:1;6952;6945:12;6904:55;6991:6;6978:20;7017:4;7041:60;7057:43;7097:2;7057:43;:::i;:::-;7041:60;:::i;:::-;7135:15;;;7221:1;7217:10;;;;7205:23;;7201:32;;;7166:12;;;;7245:15;;;7242:35;;;7273:1;7270;7263:12;7242:35;7309:2;7301:6;7297:15;7321:142;7337:6;7332:3;7329:15;7321:142;;;7403:17;;7391:30;;7441:12;;;;7354;;7321:142;;;-1:-1:-1;7481:5:75;6830:662;-1:-1:-1;;;;;;6830:662:75:o;7497:737::-;7551:5;7604:3;7597:4;7589:6;7585:17;7581:27;7571:55;;7622:1;7619;7612:12;7571:55;7658:6;7645:20;7684:4;7708:60;7724:43;7764:2;7724:43;:::i;7708:60::-;7802:15;;;7888:1;7884:10;;;;7872:23;;7868:32;;;7833:12;;;;7912:15;;;7909:35;;;7940:1;7937;7930:12;7909:35;7976:2;7968:6;7964:15;7988:217;8004:6;7999:3;7996:15;7988:217;;;8084:3;8071:17;8101:31;8126:5;8101:31;:::i;:::-;8145:18;;8183:12;;;;8021;;7988:217;;8239:821;8391:6;8399;8407;8460:2;8448:9;8439:7;8435:23;8431:32;8428:52;;;8476:1;8473;8466:12;8428:52;8516:9;8503:23;-1:-1:-1;;;;;8586:2:75;8578:6;8575:14;8572:34;;;8602:1;8599;8592:12;8572:34;8625:61;8678:7;8669:6;8658:9;8654:22;8625:61;:::i;:::-;8615:71;;8739:2;8728:9;8724:18;8711:32;8695:48;;8768:2;8758:8;8755:16;8752:36;;;8784:1;8781;8774:12;8752:36;8807:63;8862:7;8851:8;8840:9;8836:24;8807:63;:::i;:::-;8797:73;;8923:2;8912:9;8908:18;8895:32;8879:48;;8952:2;8942:8;8939:16;8936:36;;;8968:1;8965;8958:12;8936:36;;8991:63;9046:7;9035:8;9024:9;9020:24;8991:63;:::i;:::-;8981:73;;;8239:821;;;;;:::o;9065:735::-;9220:6;9228;9236;9244;9288:9;9279:7;9275:23;9318:3;9314:2;9310:12;9307:32;;;9335:1;9332;9325:12;9307:32;9374:9;9361:23;9393:31;9418:5;9393:31;:::i;:::-;9443:5;-1:-1:-1;9495:2:75;9480:18;;9467:32;;-1:-1:-1;9550:2:75;9535:18;;9522:32;-1:-1:-1;;;;;9566:30:75;;9563:50;;;9609:1;9606;9599:12;9563:50;9632:71;9695:7;9686:6;9675:9;9671:22;9632:71;:::i;:::-;9622:81;-1:-1:-1;;9737:2:75;-1:-1:-1;;9719:16:75;;9715:25;9712:45;;;9753:1;9750;9743:12;9712:45;-1:-1:-1;9065:735:75;;;;-1:-1:-1;9065:735:75;9791:2;9776:18;;-1:-1:-1;9065:735:75:o;9805:820::-;10032:2;10084:21;;;10154:13;;10057:18;;;10176:22;;;10003:4;;10032:2;10217;;10235:18;;;;10276:15;;;10003:4;10319:280;10333:6;10330:1;10327:13;10319:280;;;10392:13;;10434:9;;-1:-1:-1;;;;;10430:35:75;10418:48;;10506:11;;10500:18;10486:12;;;10479:40;10539:12;;;;10574:15;;;;10462:1;10348:9;10319:280;;;-1:-1:-1;10616:3:75;;9805:820;-1:-1:-1;;;;;;;9805:820:75:o;10630:347::-;10681:8;10691:6;10745:3;10738:4;10730:6;10726:17;10722:27;10712:55;;10763:1;10760;10753:12;10712:55;-1:-1:-1;10786:20:75;;-1:-1:-1;;;;;10818:30:75;;10815:50;;;10861:1;10858;10851:12;10815:50;10898:4;10890:6;10886:17;10874:29;;10950:3;10943:4;10934:6;10926;10922:19;10918:30;10915:39;10912:59;;;10967:1;10964;10957:12;10912:59;10630:347;;;;;:::o;10982:1436::-;11130:6;11138;11146;11154;11162;11170;11178;11186;11194;11202;11255:3;11243:9;11234:7;11230:23;11226:33;11223:53;;;11272:1;11269;11262:12;11223:53;11308:9;11295:23;11285:33;;11369:2;11358:9;11354:18;11341:32;-1:-1:-1;;;;;11433:2:75;11425:6;11422:14;11419:34;;;11449:1;11446;11439:12;11419:34;11488:58;11538:7;11529:6;11518:9;11514:22;11488:58;:::i;:::-;11565:8;;-1:-1:-1;11462:84:75;-1:-1:-1;11653:2:75;11638:18;;11625:32;;-1:-1:-1;11669:16:75;;;11666:36;;;11698:1;11695;11688:12;11666:36;11737:60;11789:7;11778:8;11767:9;11763:24;11737:60;:::i;:::-;11816:8;;-1:-1:-1;11711:86:75;-1:-1:-1;11904:2:75;11889:18;;11876:32;;-1:-1:-1;11920:16:75;;;11917:36;;;11949:1;11946;11939:12;11917:36;11988:60;12040:7;12029:8;12018:9;12014:24;11988:60;:::i;:::-;12067:8;;-1:-1:-1;11962:86:75;-1:-1:-1;12155:3:75;12140:19;;12127:33;;-1:-1:-1;12172:16:75;;;12169:36;;;12201:1;12198;12191:12;12169:36;;12240:60;12292:7;12281:8;12270:9;12266:24;12240:60;:::i;:::-;12319:8;;-1:-1:-1;12214:86:75;-1:-1:-1;12373:39:75;;-1:-1:-1;12407:3:75;12392:19;;12373:39;:::i;:::-;12363:49;;10982:1436;;;;;;;;;;;;;:::o;12423:730::-;12550:6;12558;12566;12619:2;12607:9;12598:7;12594:23;12590:32;12587:52;;;12635:1;12632;12625:12;12587:52;12674:9;12661:23;12693:31;12718:5;12693:31;:::i;:::-;12743:5;-1:-1:-1;12799:2:75;12784:18;;12771:32;-1:-1:-1;;;;;12852:14:75;;;12849:34;;;12879:1;12876;12869:12;12849:34;12902:61;12955:7;12946:6;12935:9;12931:22;12902:61;:::i;:::-;12892:71;;13016:2;13005:9;13001:18;12988:32;12972:48;;13045:2;13035:8;13032:16;13029:36;;;13061:1;13058;13051:12;13029:36;;13084:63;13139:7;13128:8;13117:9;13113:24;13084:63;:::i;13158:409::-;13228:6;13236;13289:2;13277:9;13268:7;13264:23;13260:32;13257:52;;;13305:1;13302;13295:12;13257:52;13345:9;13332:23;-1:-1:-1;;;;;13370:6:75;13367:30;13364:50;;;13410:1;13407;13400:12;13364:50;13449:58;13499:7;13490:6;13479:9;13475:22;13449:58;:::i;:::-;13526:8;;13423:84;;-1:-1:-1;13158:409:75;-1:-1:-1;;;;13158:409:75:o;13572:375::-;13643:8;13653:6;13707:3;13700:4;13692:6;13688:17;13684:27;13674:55;;13725:1;13722;13715:12;13674:55;-1:-1:-1;13748:20:75;;-1:-1:-1;;;;;13780:30:75;;13777:50;;;13823:1;13820;13813:12;13777:50;13860:4;13852:6;13848:17;13836:29;;13920:3;13913:4;13903:6;13900:1;13896:14;13888:6;13884:27;13880:38;13877:47;13874:67;;;13937:1;13934;13927:12;13952:1783;14205:6;14213;14221;14229;14237;14245;14253;14261;14269;14277;14330:3;14318:9;14309:7;14305:23;14301:33;14298:53;;;14347:1;14344;14337:12;14298:53;14387:9;14374:23;-1:-1:-1;;;;;14457:2:75;14449:6;14446:14;14443:34;;;14473:1;14470;14463:12;14443:34;14512:78;14582:7;14573:6;14562:9;14558:22;14512:78;:::i;:::-;14609:8;;-1:-1:-1;14486:104:75;-1:-1:-1;14697:2:75;14682:18;;14669:32;;-1:-1:-1;14713:16:75;;;14710:36;;;14742:1;14739;14732:12;14710:36;14781:80;14853:7;14842:8;14831:9;14827:24;14781:80;:::i;:::-;14880:8;;-1:-1:-1;14755:106:75;-1:-1:-1;14968:2:75;14953:18;;14940:32;;-1:-1:-1;14984:16:75;;;14981:36;;;15013:1;15010;15003:12;14981:36;15052:80;15124:7;15113:8;15102:9;15098:24;15052:80;:::i;:::-;15151:8;;-1:-1:-1;15026:106:75;-1:-1:-1;15239:2:75;15224:18;;15211:32;;-1:-1:-1;15255:16:75;;;15252:36;;;15284:1;15281;15274:12;15252:36;15323:80;15395:7;15384:8;15373:9;15369:24;15323:80;:::i;:::-;15422:8;;-1:-1:-1;15297:106:75;-1:-1:-1;15510:3:75;15495:19;;15482:33;;-1:-1:-1;15527:16:75;;;15524:36;;;15556:1;15553;15546:12;15524:36;;15595:80;15667:7;15656:8;15645:9;15641:24;15595:80;:::i;:::-;15569:106;;15694:8;15684:18;;;15721:8;15711:18;;;13952:1783;;;;;;;;;;;;;:::o;15740:156::-;15806:20;;15866:4;15855:16;;15845:27;;15835:55;;15886:1;15883;15876:12;15901:734;16012:6;16020;16028;16036;16044;16052;16060;16113:3;16101:9;16092:7;16088:23;16084:33;16081:53;;;16130:1;16127;16120:12;16081:53;16169:9;16156:23;16188:31;16213:5;16188:31;:::i;:::-;16238:5;-1:-1:-1;16295:2:75;16280:18;;16267:32;16308:33;16267:32;16308:33;:::i;:::-;16360:7;-1:-1:-1;16414:2:75;16399:18;;16386:32;;-1:-1:-1;16465:2:75;16450:18;;16437:32;;-1:-1:-1;16488:37:75;16520:3;16505:19;;16488:37;:::i;:::-;16478:47;;16572:3;16561:9;16557:19;16544:33;16534:43;;16624:3;16613:9;16609:19;16596:33;16586:43;;15901:734;;;;;;;;;;:::o;16640:388::-;16708:6;16716;16769:2;16757:9;16748:7;16744:23;16740:32;16737:52;;;16785:1;16782;16775:12;16737:52;16824:9;16811:23;16843:31;16868:5;16843:31;:::i;:::-;16893:5;-1:-1:-1;16950:2:75;16935:18;;16922:32;16963:33;16922:32;16963:33;:::i;:::-;17015:7;17005:17;;;16640:388;;;;;:::o;17033:380::-;17112:1;17108:12;;;;17155;;;17176:61;;17230:4;17222:6;17218:17;17208:27;;17176:61;17283:2;17275:6;17272:14;17252:18;17249:38;17246:161;;;17329:10;17324:3;17320:20;17317:1;17310:31;17364:4;17361:1;17354:15;17392:4;17389:1;17382:15;17418:893;17511:6;17564:3;17552:9;17543:7;17539:23;17535:33;17532:53;;;17581:1;17578;17571:12;17532:53;17614:2;17608:9;17656:3;17648:6;17644:16;17726:6;17714:10;17711:22;-1:-1:-1;;;;;17678:10:75;17675:34;17672:62;17669:88;;;17737:18;;:::i;:::-;17773:2;17766:22;17810:16;;17835:28;17810:16;17835:28;:::i;:::-;17872:21;;17938:2;17923:18;;17917:25;17951:30;17917:25;17951:30;:::i;:::-;18009:2;17997:15;;17990:32;18067:2;18052:18;;18046:25;18080:30;18046:25;18080:30;:::i;:::-;18138:2;18126:15;;18119:32;18196:2;18181:18;;18175:25;18209:30;18175:25;18209:30;:::i;:::-;18267:2;18255:15;;18248:32;18259:6;17418:893;-1:-1:-1;;;17418:893:75:o;18506:251::-;18576:6;18629:2;18617:9;18608:7;18604:23;18600:32;18597:52;;;18645:1;18642;18635:12;18597:52;18677:9;18671:16;18696:31;18721:5;18696:31;:::i;18762:356::-;18964:2;18946:21;;;18983:18;;;18976:30;19042:34;19037:2;19022:18;;19015:62;19109:2;19094:18;;18762:356::o;19123:355::-;19325:2;19307:21;;;19364:2;19344:18;;;19337:30;19403:33;19398:2;19383:18;;19376:61;19469:2;19454:18;;19123:355::o;20928:127::-;20989:10;20984:3;20980:20;20977:1;20970:31;21020:4;21017:1;21010:15;21044:4;21041:1;21034:15;21060:128;21100:3;21131:1;21127:6;21124:1;21121:13;21118:39;;;21137:18;;:::i;:::-;-1:-1:-1;21173:9:75;;21060:128::o;25021:127::-;25082:10;25077:3;25073:20;25070:1;25063:31;25113:4;25110:1;25103:15;25137:4;25134:1;25127:15;25153:184;25223:6;25276:2;25264:9;25255:7;25251:23;25247:32;25244:52;;;25292:1;25289;25282:12;25244:52;-1:-1:-1;25315:16:75;;25153:184;-1:-1:-1;25153:184:75:o;25832:435::-;25885:3;25923:5;25917:12;25950:6;25945:3;25938:19;25976:4;26005:2;26000:3;25996:12;25989:19;;26042:2;26035:5;26031:14;26063:1;26073:169;26087:6;26084:1;26081:13;26073:169;;;26148:13;;26136:26;;26182:12;;;;26217:15;;;;26109:1;26102:9;26073:169;;26272:1086;26644:4;26674:9;26731:6;26644:4;26765:220;26779:4;26776:1;26773:11;26765:220;;;26842:13;;-1:-1:-1;;;;;26838:39:75;26826:52;;26901:4;26925:12;;;;26960:15;;;;26874:1;26792:9;26765:220;;;26769:3;;;27021;27016:2;27005:9;27001:18;26994:31;27048:57;27100:3;27089:9;27085:19;27077:6;27048:57;:::i;:::-;27153:9;27145:6;27141:22;27136:2;27125:9;27121:18;27114:50;27187:44;27224:6;27216;27187:44;:::i;:::-;27173:58;;27280:9;27272:6;27268:22;27262:3;27251:9;27247:19;27240:51;27308:44;27345:6;27337;27308:44;:::i;30488:345::-;30685:6;30680:3;30673:19;30736:6;30728;30723:2;30718:3;30714:12;30701:42;30655:3;30766:16;;30784:2;30762:25;30796:13;;;30762:25;30488:345;-1:-1:-1;;30488:345:75:o;30838:370::-;30995:3;31033:6;31027:13;31049:53;31095:6;31090:3;31083:4;31075:6;31071:17;31049:53;:::i;:::-;31124:16;;;;31149:21;;;-1:-1:-1;31197:4:75;31186:16;;30838:370;-1:-1:-1;30838:370:75:o;31573:271::-;31756:6;31748;31743:3;31730:33;31712:3;31782:16;;31807:13;;;31782:16;31573:271;-1:-1:-1;31573:271:75:o;32209:266::-;32297:6;32292:3;32285:19;32349:6;32342:5;32335:4;32330:3;32326:14;32313:43;-1:-1:-1;32401:1:75;32376:16;;;32394:4;32372:27;;;32365:38;;;;32457:2;32436:15;;;-1:-1:-1;;32432:29:75;32423:39;;;32419:50;;32209:266::o;32480:1025::-;32890:6;32879:9;32872:25;32933:3;32928:2;32917:9;32913:18;32906:31;32853:4;32960:62;33017:3;33006:9;33002:19;32994:6;32986;32960:62;:::i;:::-;33070:9;33062:6;33058:22;33053:2;33042:9;33038:18;33031:50;33104:49;33146:6;33138;33130;33104:49;:::i;:::-;33090:63;;33201:9;33193:6;33189:22;33184:2;33173:9;33169:18;33162:50;33235:49;33277:6;33269;33261;33235:49;:::i;:::-;33221:63;;33333:9;33325:6;33321:22;33315:3;33304:9;33300:19;33293:51;33361:49;33403:6;33395;33387;33361:49;:::i;:::-;33441:3;33426:19;;33419:35;;;;-1:-1:-1;;33485:3:75;33470:19;33463:36;33353:57;32480:1025;-1:-1:-1;;;;;;;;;32480:1025:75:o;33510:562::-;-1:-1:-1;;;;;33795:32:75;;33777:51;;33864:2;33859;33844:18;;33837:30;;;-1:-1:-1;;33890:56:75;;33927:18;;33919:6;33890:56;:::i;:::-;33994:9;33986:6;33982:22;33977:2;33966:9;33962:18;33955:50;34022:44;34059:6;34051;34022:44;:::i;:::-;34014:52;33510:562;-1:-1:-1;;;;;;33510:562:75:o;35185:315::-;35370:6;35359:9;35352:25;35413:2;35408;35397:9;35393:18;35386:30;35333:4;35433:61;35490:2;35479:9;35475:18;35467:6;35459;35433:61;:::i;:::-;35425:69;35185:315;-1:-1:-1;;;;;35185:315:75:o;35923:407::-;35988:5;-1:-1:-1;;;;;36014:6:75;36011:30;36008:56;;;36044:18;;:::i;:::-;36082:57;36127:2;36106:15;;-1:-1:-1;;36102:29:75;36133:4;36098:40;36082:57;:::i;:::-;36073:66;;36162:6;36155:5;36148:21;36202:3;36193:6;36188:3;36184:16;36181:25;36178:45;;;36219:1;36216;36209:12;36178:45;36268:6;36263:3;36256:4;36249:5;36245:16;36232:43;36322:1;36315:4;36306:6;36299:5;36295:18;36291:29;36284:40;35923:407;;;;;:::o;36335:1096::-;36473:9;36508:64;36524:47;36564:6;36524:47;:::i;36508:64::-;36594:3;36618:6;36613:3;36606:19;36644:4;36673:2;36668:3;36664:12;36657:19;;36717:6;36714:1;36710:14;36703:5;36699:26;36748:14;36740:6;36737:26;36734:46;;;36776:1;36773;36766:12;36734:46;36800:5;36814:584;36830:6;36825:3;36822:15;36814:584;;;36916:3;36903:17;-1:-1:-1;;;;;36939:11:75;36936:35;36933:125;;;37012:1;37041:2;37037;37030:14;36933:125;37081:23;;37146:14;37139:4;37131:13;;37127:34;37117:132;;37203:1;37232:2;37228;37221:14;37117:132;37274:81;37340:14;37335:2;37322:16;37317:2;37313;37309:11;37274:81;:::i;:::-;37262:94;;-1:-1:-1;37376:12:75;;;;36847;;36814:584;;;-1:-1:-1;37420:5:75;;36335:1096;-1:-1:-1;;;;;;36335:1096:75:o;37436:1094::-;37572:9;37607:64;37623:47;37663:6;37623:47;:::i;37607:64::-;37693:3;37717:6;37712:3;37705:19;37743:4;37772:2;37767:3;37763:12;37756:19;;37816:6;37813:1;37809:14;37802:5;37798:26;37847:14;37839:6;37836:26;37833:46;;;37875:1;37872;37865:12;37833:46;37899:5;37913:584;37929:6;37924:3;37921:15;37913:584;;;38015:3;38002:17;-1:-1:-1;;;;;38038:11:75;38035:35;38032:125;;;38111:1;38140:2;38136;38129:14;38032:125;38180:23;;38245:14;38238:4;38230:13;;38226:34;38216:132;;38302:1;38331:2;38327;38320:14;38216:132;38373:81;38439:14;38434:2;38421:16;38416:2;38412;38408:11;38373:81;:::i;:::-;38361:94;;-1:-1:-1;38475:12:75;;;;37946;;37913:584;;38880:135;38919:3;-1:-1:-1;;38940:17:75;;38937:43;;;38960:18;;:::i;:::-;-1:-1:-1;39007:1:75;38996:13;;38880:135::o;43154:521::-;43231:4;43237:6;43297:11;43284:25;43391:2;43387:7;43376:8;43360:14;43356:29;43352:43;43332:18;43328:68;43318:96;;43410:1;43407;43400:12;43318:96;43437:33;;43489:20;;;-1:-1:-1;;;;;;43521:30:75;;43518:50;;;43564:1;43561;43554:12;43518:50;43597:4;43585:17;;-1:-1:-1;43628:14:75;43624:27;;;43614:38;;43611:58;;;43665:1;43662;43655:12;43680:614;43975:6;43967;43962:3;43949:33;-1:-1:-1;;44117:2:75;44113:15;;;44109:24;;44001:16;;;;44098:36;;;44167:15;;;;44163:24;;;44158:2;44150:11;;44143:45;44212:2;44204:11;;44197:27;44248:2;44240:11;;44233:27;44284:3;44276:12;;;-1:-1:-1;43680:614:75:o;44299:182::-;44356:6;44409:2;44397:9;44388:7;44384:23;44380:32;44377:52;;;44425:1;44422;44415:12;44377:52;44448:27;44465:9;44448:27;:::i;44835:610::-;45128:6;45117:9;45110:25;45171:3;45166:2;45155:9;45151:18;45144:31;45091:4;45192:62;45249:3;45238:9;45234:19;45226:6;45218;45192:62;:::i;:::-;45184:70;;45302:4;45294:6;45290:17;45285:2;45274:9;45270:18;45263:45;45344:6;45339:2;45328:9;45324:18;45317:34;45388:6;45382:3;45371:9;45367:19;45360:35;45432:6;45426:3;45415:9;45411:19;45404:35;44835:610;;;;;;;;;;:::o;46615:125::-;46655:4;46683:1;46680;46677:8;46674:34;;;46688:18;;:::i;:::-;-1:-1:-1;46725:9:75;;46615:125::o;46745:1215::-;46908:6;46916;46924;46932;46940;46948;46956;46964;46972;46980;46988:7;46997;47051:3;47039:9;47030:7;47026:23;47022:33;47019:53;;;47068:1;47065;47058:12;47019:53;47100:9;47094:16;47119:31;47144:5;47119:31;:::i;:::-;47219:2;47204:18;;47198:25;47169:5;;-1:-1:-1;47232:33:75;47198:25;47232:33;:::i;:::-;47331:2;47316:18;;47310:25;47380:2;47365:18;;47359:25;47284:7;;-1:-1:-1;47310:25:75;-1:-1:-1;47393:33:75;47359:25;47393:33;:::i;:::-;47445:7;47435:17;;;47492:3;47481:9;47477:19;47471:26;47461:36;;47537:3;47526:9;47522:19;47516:26;47506:36;;47587:3;47576:9;47572:19;47566:26;47601:30;47623:7;47601:30;:::i;:::-;47650:7;47640:17;;;47697:3;47686:9;47682:19;47676:26;47666:36;;47742:3;47731:9;47727:19;47721:26;47711:36;;47787:3;47776:9;47772:19;47766:26;47756:36;;47833:3;47822:9;47818:19;47812:26;47801:37;;47883:3;47872:9;47868:19;47862:26;47897:30;47919:7;47897:30;:::i;:::-;47947:7;47936:18;;;46745:1215;;;;;;;;;;;;;;:::o;48573:204::-;48611:3;48647:4;48644:1;48640:12;48679:4;48676:1;48672:12;48714:3;48708:4;48704:14;48699:3;48696:23;48693:49;;;48722:18;;:::i;:::-;48758:13;;48573:204;-1:-1:-1;;;48573:204:75:o;50139:1104::-;50269:3;50298:1;50331:6;50325:13;50361:3;50383:1;50411:9;50407:2;50403:18;50393:28;;50471:2;50460:9;50456:18;50493;50483:61;;50537:4;50529:6;50525:17;50515:27;;50483:61;50563:2;50611;50603:6;50600:14;50580:18;50577:38;50574:165;;;-1:-1:-1;;;50638:33:75;;50694:4;50691:1;50684:15;50724:4;50645:3;50712:17;50574:165;50755:18;50782:104;;;;50900:1;50895:323;;;;50748:470;;50782:104;-1:-1:-1;;50815:24:75;;50803:37;;50860:16;;;;-1:-1:-1;50782:104:75;;50895:323;50086:1;50079:14;;;50123:4;50110:18;;50993:1;51007:165;51021:6;51018:1;51015:13;51007:165;;;51099:14;;51086:11;;;51079:35;51142:16;;;;51036:10;;51007:165;;;51011:3;;51201:6;51196:3;51192:16;51185:23;;50748:470;-1:-1:-1;51234:3:75;;50139:1104;-1:-1:-1;;;;;;;;50139:1104:75:o;51742:127::-;51803:10;51798:3;51794:20;51791:1;51784:31;51834:4;51831:1;51824:15;51858:4;51855:1;51848:15;51874:168;51914:7;51980:1;51976;51972:6;51968:14;51965:1;51962:21;51957:1;51950:9;51943:17;51939:45;51936:71;;;51987:18;;:::i;:::-;-1:-1:-1;52027:9:75;;51874:168::o;52047:217::-;52087:1;52113;52103:132;;52157:10;52152:3;52148:20;52145:1;52138:31;52192:4;52189:1;52182:15;52220:4;52217:1;52210:15;52103:132;-1:-1:-1;52249:9:75;;52047:217::o;52548:245::-;52615:6;52668:2;52656:9;52647:7;52643:23;52639:32;52636:52;;;52684:1;52681;52674:12;52636:52;52716:9;52710:16;52735:28;52757:5;52735:28;:::i;53974:274::-;54103:3;54141:6;54135:13;54157:53;54203:6;54198:3;54191:4;54183:6;54179:17;54157:53;:::i;:::-;54226:16;;;;;53974:274;-1:-1:-1;;53974:274:75:o",
  "language": "Solidity",
  "natspec": {
    "details": "DatatokenTemplate is an ERC20 compliant token template      Used by the factory contract as a bytecode reference to      deploy new Datatokens.",
    "kind": "dev",
    "methods": {
      "addMinter(address)": {
        "details": "addMinter      Only ERC20Deployer (at 721 level) can update.      There can be multiple minters",
        "params": {
          "_minter": "new minter address"
        }
      },
      "addPaymentManager(address)": {
        "details": "addPaymentManager (can set who's going to collect fee when consuming orders)      Only ERC20Deployer (at 721 level) can update.      There can be multiple paymentCollectors",
        "params": {
          "_paymentManager": "new minter address"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "cap()": {
        "details": "cap      it returns the capital.",
        "returns": {
          "_0": "Datatoken cap."
        }
      },
      "cleanFrom721()": {
        "details": "cleanFrom721()      OnlyNFT(721) Contract can call it.      This function allows to remove all minters, feeManagers and reset the paymentCollector       This function is used when transferring an NFT to a new owner, so that permissions at ERC20level (minter,feeManager,paymentCollector) can be reset."
      },
      "cleanPermissions()": {
        "details": "cleanPermissions()      Only NFT Owner (at 721 level) can call it.      This function allows to remove all minters, feeManagers and reset the paymentCollector"
      },
      "createDispenser(address,uint256,uint256,bool,address)": {
        "details": "createDispenser      Creates a new Dispenser",
        "params": {
          "_dispenser": "dispenser contract address",
          "allowedSwapper": "- only account that can ask tokens. set address(0) if not required",
          "maxBalance": "- max balance of requester.",
          "maxTokens": "- max tokens to dispense",
          "withMint": "- true if we want to allow the dispenser to be a minter"
        }
      },
      "createFixedRate(address,address[],uint256[])": {
        "details": "createFixedRate      Creates a new FixedRateExchange setup.",
        "params": {
          "addresses": "array of addresses [baseToken,owner,marketFeeCollector]",
          "fixedPriceAddress": "fixedPriceAddress",
          "uints": "array of uints [baseTokenDecimals,datatokenDecimals, fixedRate, marketFee, withMint]"
        },
        "returns": {
          "exchangeId": "exchangeId"
        }
      },
      "decimals()": {
        "details": "decimals      It returns the token decimals.      how many supported decimal points",
        "returns": {
          "_0": "Datatoken decimals."
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deployPool(uint256[],uint256[],address[])": {
        "details": "deployPool      Function to deploy new Pool with 1SS. It also has a vesting schedule.     This function can only be called ONCE and ONLY if no token have been minted yet.      Requires baseToken approval",
        "params": {
          "addresses": "refers to an array of addresses passed by user                     [0]  = side staking contract address                     [1]  = baseToken address for pool creation(OCEAN or other)                     [2]  = baseTokenSender user which will provide the baseToken amount for initial liquidity                     [3]  = publisherAddress user which will be assigned the vested amount                     [4]  = marketFeeCollector marketFeeCollector address [5] = poolTemplateAddress",
          "ssParams": "params for the ssContract.                      [0]  = rate (wei)                     [1]  = baseToken decimals                     [2]  = vesting amount (wei)                     [3]  = vested blocks                     [4]  = initial liquidity in baseToken for pool creation",
          "swapFees": "swapFees (swapFee, swapMarketFee), swapOceanFee will be set automatically later                     [0] = swapFee for LP Providers                     [1] = swapFee for marketplace runner ."
        }
      },
      "getDispensers()": {
        "details": "getDispensers      Returns the list of dispensers created for this datatoken"
      },
      "getERC721Address()": {
        "details": "getERC721Address      It returns the parent ERC721",
        "returns": {
          "_0": "ERC721 address."
        }
      },
      "getFixedRates()": {
        "details": "getFixedRates      Returns the list of fixedRateExchanges created for this datatoken"
      },
      "getId()": {
        "details": "getId      Return template id in case we need different ABIs.       If you construct your own template, please make sure to change the hardcoded value"
      },
      "getPaymentCollector()": {
        "details": "getPaymentCollector      It returns the current paymentCollector",
        "returns": {
          "_0": "paymentCollector address"
        }
      },
      "getPermissions(address)": {
        "details": "getPermissions      Returns list of roles for an user",
        "params": {
          "user": "user address"
        }
      },
      "getPools()": {
        "details": "getPools      Returns the list of pools created for this datatoken"
      },
      "getPublishingMarketFee()": {
        "details": "getPublishingMarketFee      Get publishingMarket Fee      This function allows to get the current fee set by the publishing market"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "initialize(string[],address[],address[],uint256[],bytes[])": {
        "details": "initialize      Called prior contract initialization (e.g creating new Datatoken instance)      Calls private _initialize function. Only if contract is not initialized.",
        "params": {
          "addresses_": "refers to an array of addresses passed by user                     [0]  = minter account who can mint datatokens (can have multiple minters)                     [1]  = paymentCollector  initial paymentCollector  for this DT                     [2]  = publishing Market Address                     [3]  = publishing Market Fee Token",
          "bytes_": "refers to an array of bytes                     Currently not used, usefull for future templates",
          "factoryAddresses_": "refers to an array of addresses passed by the factory                     [0]  = erc721Address                     [1]  = router address",
          "strings_": "refers to an array of strings                      [0] = name token                      [1] = symbol",
          "uints_": "refers to an array of uints                     [0] = cap_ the total ERC20 cap                     [1] = publishing Market Fee Amount"
        }
      },
      "isERC20Deployer(address)": {
        "details": "isERC20Deployer      returns true if address has deployERC20 role"
      },
      "isInitialized()": {
        "details": "isInitialized      It checks whether the contract is initialized.",
        "returns": {
          "_0": "true if the contract is initialized."
        }
      },
      "isMinter(address)": {
        "details": "isMinter      Check if an address has the minter role",
        "params": {
          "account": "refers to an address that is checked"
        }
      },
      "mint(address,uint256)": {
        "details": "mint      Only the minter address can call it.      msg.value should be higher than zero and gt or eq minting fee",
        "params": {
          "account": "refers to an address that token is going to be minted to.",
          "value": "refers to amount of tokens that is going to be minted."
        }
      },
      "name()": {
        "details": "name      It returns the token name.",
        "returns": {
          "_0": "Datatoken name."
        }
      },
      "orderExecuted(bytes32,bytes,bytes,bytes,bytes,address)": {
        "details": "orderExecuted      Providers should call this to prove order execution",
        "params": {
          "consumerAddress": "consumer address",
          "consumerData": "consumer data",
          "consumerSignature": "consumer signature",
          "orderTxId": "order tx",
          "providerData": "provider data",
          "providerSignature": "provider signature"
        }
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "permit      used for signed approvals, see ERC20Template test for more details",
        "params": {
          "deadline": "deadline after which signed message is no more valid",
          "owner": "user who signed the message",
          "r": "parameters from signed message",
          "s": "parameters from signed message",
          "spender": "spender",
          "v": "parameters from signed message",
          "value": "token amount"
        }
      },
      "removeMinter(address)": {
        "details": "removeMinter      Only ERC20Deployer (at 721 level) can update.      There can be multiple minters",
        "params": {
          "_minter": "minter address to remove"
        }
      },
      "removePaymentManager(address)": {
        "details": "removePaymentManager      Only ERC20Deployer (at 721 level) can update.      There can be multiple paymentManagers",
        "params": {
          "_paymentManager": "_paymentManager address to remove"
        }
      },
      "reuseOrder(bytes32,(address,address,uint256,uint8,bytes32,bytes32,uint256,bytes))": {
        "details": "reuseOrder      called by payer or consumer having a valid order, but with expired provider access      Pays the provider fee again, but it will not require a new datatoken payment      Requires previous approval of provider fee.",
        "params": {
          "_providerFee": "provider feee",
          "orderTxId": "previous valid order"
        }
      },
      "setData(bytes)": {
        "details": "setData      Only ERC20Deployer (at 721 level) can call it.      This function allows to store data with a preset key (keccak256(ERC20Address)) into NFT 725 Store",
        "params": {
          "_value": "data to be set with this key"
        }
      },
      "setPaymentCollector(address)": {
        "details": "setPaymentCollector      Only feeManager can call it      This function allows to set a newPaymentCollector (receives DT when consuming) If not set the paymentCollector is the NFT Owner",
        "params": {
          "_newPaymentCollector": "new fee collector "
        }
      },
      "setPublishingMarketFee(address,address,uint256)": {
        "details": "setPublishingMarketFee      Only publishMarketFeeAddress can call it      This function allows to set the fee required by the publisherMarket",
        "params": {
          "_publishMarketFeeAddress": "new _publishMarketFeeAddress",
          "_publishMarketFeeAmount": "new fee amount",
          "_publishMarketFeeToken": "new _publishMarketFeeToken"
        }
      },
      "startOrder(address,uint256,(address,address,uint256,uint8,bytes32,bytes32,uint256,bytes),(address,address,uint256))": {
        "details": "startOrder      called by payer or consumer prior ordering a service consume on a marketplace.      Requires previous approval of consumeFeeToken and publishMarketFeeToken",
        "params": {
          "_consumeMarketFee": "consume market fee",
          "_providerFee": "provider fee",
          "consumer": "is the consumer address (payer could be different address)",
          "serviceIndex": "service index in the metadata"
        }
      },
      "symbol()": {
        "details": "symbol      It returns the token symbol.",
        "returns": {
          "_0": "Datatoken symbol."
        }
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "withdrawETH()": {
        "details": "withdrawETH      transfers all the accumlated ether the collector account"
      }
    },
    "title": "DatatokenTemplate",
    "version": 1
  },
  "offset": [
    1178,
    38557
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 GT PUSH2 0x17E JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x8F JUMPI DUP1 PUSH4 0xE487C2E8 GT PUSH2 0x6C JUMPI DUP1 PUSH4 0xE487C2E8 EQ PUSH2 0x9A3 JUMPI DUP1 PUSH4 0xEC342AD0 EQ PUSH2 0x9B8 JUMPI DUP1 PUSH4 0xEF867FF4 EQ PUSH2 0x9D4 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x9F4 JUMPI STOP JUMPDEST DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x935 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x955 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x99B JUMPI STOP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x85C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x87C JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x89C JUMPI DUP1 PUSH4 0xAA492EF9 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xAB62F0E1 EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0xB3998BE0 EQ PUSH2 0x915 JUMPI STOP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x13A JUMPI DUP1 PUSH4 0x8B96412B GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x8B96412B EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x807 JUMPI DUP1 PUSH4 0x96FB3EAF EQ PUSH2 0x81C JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x83C JUMPI STOP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x785 JUMPI DUP1 PUSH4 0x82C03DA5 EQ PUSH2 0x7B2 JUMPI DUP1 PUSH4 0x89208F0F EQ PUSH2 0x7C7 JUMPI STOP JUMPDEST DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0x673A2A1F EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6ED JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x79D9D7F3 EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0x7DDA231E EQ PUSH2 0x763 JUMPI STOP JUMPDEST DUP1 PUSH4 0x355274EA GT PUSH2 0x234 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x4F189CB2 GT PUSH2 0x1CD JUMPI DUP1 PUSH4 0x4F189CB2 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0x57A3A31B EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0x57AD5FF6 EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0x5BFE4DA0 EQ PUSH2 0x6A4 JUMPI STOP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0x47AC7D55 EQ PUSH2 0x62D JUMPI STOP JUMPDEST DUP1 PUSH4 0x355274EA EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x361FEF49 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x397B3743 EQ PUSH2 0x5B1 JUMPI STOP JUMPDEST DUP1 PUSH4 0x191C918A GT PUSH2 0x283 JUMPI DUP1 PUSH4 0x191C918A EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x25B00243 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x50C JUMPI STOP JUMPDEST DUP1 PUSH3 0x7FFB78 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x1E88208 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x160A7925 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x439 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x2CD JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x370 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x4E5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP5 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EC8 JUMP JUMPDEST PUSH2 0xABD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F27 JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0xDCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0xEE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x44A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x4F81 JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x39D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x5AC CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x1083 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x10BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x628 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FC7 JUMP JUMPDEST PUSH2 0x1190 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x642 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x5024 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x11FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x67F CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x69F CALLDATASIZE PUSH1 0x4 PUSH2 0x4F27 JUMP JUMPDEST PUSH2 0x149D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x6BF CALLDATASIZE PUSH1 0x4 PUSH2 0x516F JUMP JUMPDEST PUSH2 0x1656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x51C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x642 PUSH2 0x1AE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0x708 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x73E CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x1B41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x75E CALLDATASIZE PUSH1 0x4 PUSH2 0x51F6 JUMP JUMPDEST PUSH2 0x1BC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x778 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x5269 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0x7A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x2073 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x7E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x5309 JUMP JUMPDEST PUSH2 0x20D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0x802 CALLDATASIZE PUSH1 0x4 PUSH2 0x53E6 JUMP JUMPDEST PUSH2 0x23BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x370 PUSH2 0x26D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x837 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0x26E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x857 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0x2765 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x877 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x2881 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x897 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x291A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x8B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x8F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0x2927 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x910 CALLDATASIZE PUSH1 0x4 PUSH2 0x5451 JUMP JUMPDEST PUSH2 0x2A43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0x930 CALLDATASIZE PUSH1 0x4 PUSH2 0x54D6 JUMP JUMPDEST PUSH2 0x2BFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x950 CALLDATASIZE PUSH1 0x4 PUSH2 0x55D7 JUMP JUMPDEST PUSH2 0x2D31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0x970 CALLDATASIZE PUSH1 0x4 PUSH2 0x5645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x2F43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x2F83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x9EF CALLDATASIZE PUSH1 0x4 PUSH2 0x4FC7 JUMP JUMPDEST PUSH2 0x301C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x2EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0xA23 SWAP1 PUSH2 0x567E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA4F SWAP1 PUSH2 0x567E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA9C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA71 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA9C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA7F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 CALLER DUP5 DUP5 PUSH2 0x3046 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0xBB4 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA9 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5789 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE DUP2 ISZERO PUSH2 0xC10 JUMPI PUSH2 0xC10 DUP6 PUSH2 0x316A JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA31FFD41531537EB31BFD827A3F5372B5F62BF4DD8579E5354B280DC58490E70 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6B14D005 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP7 SWAP1 MSTORE CALLER PUSH1 0x84 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xD629A00A SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2B DUP5 DUP5 DUP5 PUSH2 0x3241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0xDBD DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x3046 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3A SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0xEC1 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB6 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xEDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x3411 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0xFE0 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD5 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x3483 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5789 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE NUMBER PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x526E31449EA46E2AECF9B480C8D7DFA191348EF74FFDF75B445A6AB726DAA6FF SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH2 0x107A DUP2 PUSH2 0x34E3 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xAB3 SWAP2 DUP6 SWAP1 PUSH2 0x10BA SWAP1 DUP7 SWAP1 PUSH2 0x57D6 JUMP JUMPDEST PUSH2 0x3046 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A204E4F54204D494E54455200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1134 DUP3 PUSH2 0x112E PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x38F5 JUMP JUMPDEST GT ISZERO PUSH2 0x1182 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44617461746F6B656E54656D706C6174653A2063617020657863656564656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x118C DUP3 DUP3 PUSH2 0x3901 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xEE6 CALLER DUP3 PUSH2 0x39E0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x15 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA9C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11D4 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1248 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A206E6F74204E46544F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x12D4 PUSH2 0x3B2E JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1369 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1364 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD JUMPDEST DUP1 PUSH2 0x13EC JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13E1 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A204E4F54205041594D454E54204D414E4147 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x22A91037B91027ABA722A9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x1455 DUP2 PUSH2 0x3FFC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 CALLER SWAP2 PUSH32 0x4D7694D695C57CC54947177C8E8A0E61AAE664E9223492A798C32FADFC6419CC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A206E6F74207075626C6973684D61726B6574 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x46656541646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1571 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205F7075626C6973684D61726B657446656541646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205F7075626C6973684D61726B6574466565546F6B656E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0xE DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xF DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x2AB4B3FC023109C2D0DA394BDA239166C833F63C42B71B67ED4B836DCA0DDFE SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16C8 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x174F JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1720 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1744 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x176B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x178E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5789 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE PUSH2 0x179C PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x17F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A20746F6B656E7320616C7265616479206D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1B9D1959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x1818 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x180B JUMPI PUSH2 0x180B PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x316A JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x510F3465 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x186B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x188F SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST DUP5 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x18A2 JUMPI PUSH2 0x18A2 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x1938 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x51 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A2056657374696E6720706572696F6420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F206C6F772E2053656520466163746F7279526F757465722E6D696E56657374 PUSH1 0x64 DUP3 ADD MSTORE PUSH17 0x696E67506572696F64496E426C6F636B73 PUSH1 0x78 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1970 JUMPI PUSH2 0x1970 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEE3BC635 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xEE3BC635 SWAP1 PUSH2 0x19B8 SWAP1 DUP5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x584D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FB SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP5 MLOAD SWAP2 SWAP4 POP PUSH32 0xD02DA1BEC30F7F750AA0A131745DFB9CE96767C45A192DC26409F5D690E0B967 SWAP2 DUP5 SWAP2 DUP7 SWAP2 PUSH2 0x1A7C JUMPI PUSH2 0x1A7C PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A97 JUMPI PUSH2 0x1A97 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1ACC SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x7 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x13 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA9C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11D4 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4D DUP4 CALLER PUSH2 0x970 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x1BB8 DUP4 CALLER DUP5 DUP5 SUB PUSH2 0x3046 JUMP JUMPDEST PUSH2 0x1BC2 DUP4 DUP4 PUSH2 0x39E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1BEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5789 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 GT ISZERO PUSH2 0x1C64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682064617461746F6B656E7320746F207374617274204F PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x393232B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE NUMBER PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH32 0xE1C4FA794EDFA8F619B8257A077398950357B9C6398528F94480307352F9AFCC SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0xF SLOAD GT DUP1 ISZERO PUSH2 0x1CDF JUMPI POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1CF5 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1D6A JUMPI PUSH1 0xE SLOAD PUSH1 0xD SLOAD PUSH1 0xF SLOAD PUSH2 0x1D1D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 CALLER SWAP3 SWAP2 AND SWAP1 PUSH2 0x401E JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xD SLOAD PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH32 0x4049A448AC6F0284A98D2CB9199E73605944EA5BEC901A037F88C84703DE82B2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD CALLDATALOAD GT DUP1 ISZERO PUSH2 0x1D97 JUMPI POP PUSH1 0x0 PUSH2 0x1D8B PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1DB9 JUMPI POP PUSH1 0x0 PUSH2 0x1DAD PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1E56 JUMPI PUSH2 0x1DE9 PUSH2 0x1DD1 PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x4E12 JUMP JUMPDEST CALLER PUSH2 0x1DDF PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x4E12 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x401E JUMP JUMPDEST PUSH2 0x1DF9 PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E0F PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6D11837F46CC09B011CF4AAE09FCADE046C020AAC088090AE4F77FF67B707972 DUP5 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x1E4D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH2 0x1E5F DUP4 PUSH2 0x34E3 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7D28354D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7D28354D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ECD SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EE4 PUSH2 0x1EDA PUSH2 0x2F83 JUMP JUMPDEST PUSH2 0x897 DUP5 DUP5 PUSH2 0x416C JUMP JUMPDEST PUSH2 0x1F30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420445420746F207075626C69736865720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1A81876D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x1FA5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1A81876D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F9F SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST DUP3 PUSH2 0x291A JUMP JUMPDEST PUSH2 0x1FF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420445420746F204F50430000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x14 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x206A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2022 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A204E4F542037323120436F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x212B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465722063616E6E6F742062652074686520636F6E73756D657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x217D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x58B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21A4 SWAP3 SWAP2 SWAP1 PUSH2 0x58D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2206 DUP3 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x4178 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x225C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7669646572207369676E617475726520636865636B206661696C656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2272 SWAP3 SWAP2 SWAP1 PUSH2 0x58F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2299 SWAP3 SWAP2 SWAP1 PUSH2 0x58D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22FB DUP3 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x4178 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E73756D6572207369676E617475726520636865636B206661696C656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC9A10280E9C735C63092FA5431E6ACB3ED342E08B69A083E5E676994EB7070F9 DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0x23A8 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x592D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x240D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2431 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x24B8 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2489 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24AD SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x24D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x24F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5789 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x2514 JUMPI PUSH2 0x2514 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x252B JUMPI PUSH2 0x252B DUP5 PUSH2 0x316A JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x82449375 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x82449375 SWAP1 PUSH2 0x255F SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x599F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x257E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25A2 SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x25B7 JUMPI PUSH2 0x25B7 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25DB JUMPI PUSH2 0x25DB PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB3FAC3AE95956DBAC74E63BA8DAC94081832395C8788E3049C900A7732F34805 DUP4 DUP8 PUSH1 0x40 MLOAD PUSH2 0x262F SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE SWAP3 MLOAD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC PUSH1 0x2 SWAP1 SWAP5 MUL SWAP4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP9 AND OR SWAP1 SWAP7 SSTORE MLOAD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4ED SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SWAP4 SWAP1 SWAP4 SSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0xA23 SWAP1 PUSH2 0x567E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x275B SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27D5 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x285C JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x282D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2851 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x2878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x316A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x2910 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x3046 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 CALLER DUP5 DUP5 PUSH2 0x3241 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2973 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2997 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x2A1E JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A13 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x2A3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x160A7925 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x160A7925 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AB3 SWAP2 SWAP1 PUSH2 0x56B3 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x2B3A JUMPI POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B2F SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x2B56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x5754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0xB SLOAD PUSH4 0x1CAF8FD PUSH1 0xE3 SHL DUP4 MSTORE SWAP1 SWAP3 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE57C7E8 SWAP1 PUSH2 0x2BC7 SWAP1 DUP5 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x59DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2C6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A20746F6B656E20696E7374616E636520616C PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x2D22 PUSH2 0x2C7B DUP12 DUP14 PUSH2 0x5A59 JUMP JUMPDEST DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2D1D SWAP3 POP DUP10 SWAP2 POP DUP11 SWAP1 POP PUSH2 0x5AE0 JUMP JUMPDEST PUSH2 0x4331 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST NUMBER DUP5 LT ISZERO PUSH2 0x2D74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x115490CC8C11150E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP12 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 DUP8 PUSH2 0x2DC7 DUP4 PUSH2 0x5B5B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E40 SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2EE1 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x2F2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323044543A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x2F38 DUP10 DUP10 DUP10 PUSH2 0x3046 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2F4B PUSH2 0x2F83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x300C JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3007 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x302C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x30A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x31E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230526F6C65733A2020414C52454144592041204D494E544552000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH2 0x31F7 DUP3 PUSH2 0x4789 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x4F7E100EB1EE13E903798BD0D6AA854152E07EB05544F392B9409C12935C8095 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x32A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3307 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x337F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x33B6 SWAP1 DUP5 SWAP1 PUSH2 0x57D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3402 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFF00 NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xAEE911EEC8B2DF8F3AE0464841541B1E5F339519BD5CF51889FE8B07FECFF658 SWAP1 PUSH2 0x3472 SWAP1 TIMESTAMP SWAP1 NUMBER SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x118C DUP3 PUSH2 0x4840 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xEFA2735987005AAA89C050C0FF8CC9AE7D9079D19382081C429130F98C52D480 SWAP1 PUSH2 0x3472 SWAP1 TIMESTAMP SWAP1 NUMBER SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH2 0x3527 PUSH1 0xE0 DUP6 ADD DUP6 PUSH2 0x5B76 JUMP JUMPDEST PUSH2 0x3534 PUSH1 0x20 DUP8 ADD DUP8 PUSH2 0x4E12 JUMP JUMPDEST PUSH2 0x3544 PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x4E12 JUMP JUMPDEST DUP8 PUSH1 0x40 ADD CALLDATALOAD DUP9 PUSH1 0xC0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3563 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5BBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x358A SWAP3 SWAP2 SWAP1 PUSH2 0x58D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x35B9 PUSH1 0x80 DUP8 ADD PUSH1 0x60 DUP9 ADD PUSH2 0x5BFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP8 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 DUP9 ADD CALLDATALOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3610 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x362B SWAP1 POP PUSH1 0x20 DUP6 ADD DUP6 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3682 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C69642070726F766964657220666565 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x3692 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x36A8 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF8ED11CDAAF10ECA2B6C941FB802CB8682AFE86CAC1EB93F70D0780FA062C544 PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x36E4 PUSH1 0xE0 DUP10 ADD DUP10 PUSH2 0x5B76 JUMP JUMPDEST PUSH2 0x36F4 PUSH1 0x80 DUP12 ADD PUSH1 0x60 DUP13 ADD PUSH2 0x5BFA JUMP JUMPDEST DUP11 PUSH1 0x80 ADD CALLDATALOAD DUP12 PUSH1 0xA0 ADD CALLDATALOAD DUP13 PUSH1 0xC0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x3716 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD GT DUP1 ISZERO PUSH2 0x374B JUMPI POP PUSH1 0x0 PUSH2 0x373F PUSH1 0x40 DUP7 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x376D JUMPI POP PUSH1 0x0 PUSH2 0x3761 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x340B JUMPI PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6C45E881 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6C45E881 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37E0 SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 ISZERO PUSH2 0x380D JUMPI PUSH2 0x380A PUSH8 0xDE0B6B3A7640000 PUSH2 0x3804 PUSH1 0x40 DUP10 ADD CALLDATALOAD DUP6 PUSH2 0x498E JUMP JUMPDEST SWAP1 PUSH2 0x499A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x381D PUSH1 0x40 DUP9 ADD CALLDATALOAD DUP4 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH2 0x383E PUSH2 0x3832 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x4E12 JUMP JUMPDEST CALLER ADDRESS DUP11 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x401E JUMP JUMPDEST PUSH2 0x386F PUSH2 0x384E PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x4E12 JUMP JUMPDEST DUP3 PUSH2 0x385F PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x49A6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2BF5 JUMPI PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1A81876D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x2BF5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1A81876D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38E4 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST DUP4 PUSH2 0x385F PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 DUP3 DUP5 PUSH2 0x57D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3969 SWAP2 SWAP1 PUSH2 0x57D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3996 SWAP1 DUP5 SWAP1 PUSH2 0x57D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3A40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3AB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3AE3 SWAP1 DUP5 SWAP1 PUSH2 0x5C58 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x14 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x3B40 SWAP2 PUSH2 0x57D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B5D JUMPI PUSH2 0x3B5D PUSH2 0x5037 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3B86 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x3E6C JUMPI PUSH1 0x0 PUSH1 0x14 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3BAB JUMPI PUSH2 0x3BAB PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP DUP3 SWAP2 DUP3 SWAP2 DUP6 SWAP2 PUSH4 0x4C87087D SWAP2 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x3BE9 JUMPI PUSH2 0x3BE9 PUSH2 0x57EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C19 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C5B SWAP2 SWAP1 PUSH2 0x5C6F JUMP JUMPDEST SWAP12 POP SWAP12 POP SWAP12 POP POP POP POP POP POP POP POP POP POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x3D01 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF32F9476 PUSH1 0x14 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x3C95 JUMPI PUSH2 0x3C95 PUSH2 0x57EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CCE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP3 ISZERO PUSH2 0x3D95 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC612E48A PUSH1 0x14 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x3D29 JUMPI PUSH2 0x3D29 PUSH2 0x57EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D62 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x3DD8 PUSH1 0x14 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x3DAB JUMPI PUSH2 0x3DAB PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DE6 JUMPI POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ JUMPDEST ISZERO PUSH2 0x3E55 JUMPI PUSH1 0x14 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x3DFE JUMPI PUSH2 0x3DFE PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 DUP10 SWAP1 DUP2 LT PUSH2 0x3E2F JUMPI PUSH2 0x3E2F PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP7 PUSH2 0x3E51 DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP8 POP POP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x3E64 SWAP1 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B8C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x3FB1 JUMPI PUSH1 0x15 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3E8D JUMPI PUSH2 0x3E8D PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xF9BFAA7D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF9BFAA7D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x3F31 PUSH1 0x15 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F09 JUMPI PUSH2 0x3F09 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3F9F JUMPI PUSH1 0x15 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3F49 JUMPI PUSH2 0x3F49 PUSH2 0x57EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3F79 JUMPI PUSH2 0x3F79 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP3 PUSH2 0x3F9B DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x3FA9 DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3E70 JUMP JUMPDEST PUSH2 0x3FB9 PUSH2 0x4A09 JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x340B JUMPI PUSH2 0x3FEA DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x180B JUMPI PUSH2 0x180B PUSH2 0x57EE JUMP JUMPDEST DUP1 PUSH2 0x3FF4 DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3FCD JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4068 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x408C SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST SWAP1 POP PUSH2 0x40A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 DUP6 DUP6 PUSH2 0x4AB8 JUMP JUMPDEST PUSH2 0x40AD DUP2 DUP4 PUSH2 0x38F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4117 SWAP2 SWAP1 PUSH2 0x5804 JUMP JUMPDEST LT ISZERO PUSH2 0x4165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E7420697320746F6F206C6F77000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 DUP3 DUP5 PUSH2 0x5C58 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x41 EQ PUSH2 0x4193 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xAB7 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x41 DUP5 ADD MLOAD PUSH1 0xFF AND PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x41BF JUMPI PUSH2 0x41BC PUSH1 0x1B DUP3 PUSH2 0x5D2C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x41D7 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x41E8 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x423B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x42D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230526F6C65733A2020414C5245414459204120464545204D414E4147 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x22A9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE PUSH2 0x42EF DUP3 PUSH2 0x4789 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xB17DA2E9910B4BA5754E8872385BA315A238BAFB5AE221FC85093C33432C40A7 SWAP2 ADD PUSH2 0x3235 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4347 JUMPI PUSH2 0x4347 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x4364 JUMPI PUSH2 0x4364 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE DUP2 AND PUSH2 0x43EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A20496E76616C6964206D696E7465722C2020 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x445A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323054656D706C6174653A20496E76616C696420726F757465722C207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xA SSTORE DUP7 MLOAD DUP8 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4473 JUMPI PUSH2 0x4473 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4490 SWAP3 SWAP2 SWAP1 PUSH2 0x4D3A JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x44A4 JUMPI PUSH2 0x44A4 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x44C1 SWAP3 SWAP2 SWAP1 PUSH2 0x4D3A JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x100 MUL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 OR SWAP1 SSTORE DUP6 MLOAD PUSH2 0x4501 SWAP1 DUP8 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x180B JUMPI PUSH2 0x180B PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x451F JUMPI PUSH2 0x451F PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x45C9 JUMPI PUSH2 0x4558 DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x454B JUMPI PUSH2 0x454B PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3FFC JUMP JUMPDEST DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x456B JUMPI PUSH2 0x456B PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4D7694D695C57CC54947177C8E8A0E61AAE664E9223492A798C32FADFC6419CC TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0x45C0 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x45DC JUMPI PUSH2 0x45DC PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x461D JUMPI PUSH2 0x461D PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x465E JUMPI PUSH2 0x465E PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x2AB4B3FC023109C2D0DA394BDA239166C833F63C42B71B67ED4B836DCA0DDFE SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD CHAINID SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP1 PUSH2 0x46F9 SWAP1 PUSH1 0x8 SWAP1 PUSH2 0x5D51 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x10 SSTORE POP POP PUSH1 0xB SLOAD PUSH1 0xFF AND SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x47E5 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x47B3 JUMPI PUSH2 0x47B3 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x47D3 JUMPI PUSH2 0x47E5 JUMP JUMPDEST DUP1 PUSH2 0x47DD DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x478C JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 EQ ISZERO PUSH2 0x118C JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4871 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x48D2 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48A0 JUMPI PUSH2 0x48A0 PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x48C0 JUMPI PUSH2 0x48D2 JUMP JUMPDEST DUP1 PUSH2 0x48CA DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4879 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1BC2 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH2 0x48EC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x5C58 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x48FC JUMPI PUSH2 0x48FC PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x4928 JUMPI PUSH2 0x4928 PUSH2 0x57EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP1 SLOAD DUP1 PUSH2 0x4967 JUMPI PUSH2 0x4967 PUSH2 0x5DED JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 DUP3 DUP5 PUSH2 0x5E03 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 DUP3 DUP5 PUSH2 0x5E22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1BC2 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x4AF0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x4A6F JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4A2F JUMPI PUSH2 0x4A2F PUSH2 0x57EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0x4A67 DUP2 PUSH2 0x5B5B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4A0C JUMP JUMPDEST POP PUSH2 0x4A7C PUSH1 0x6 PUSH1 0x0 PUSH2 0x4DBE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x712BC71DB81927A76B8BF1EA346247BB0AD58F18E4E5C1BD4AA0EC6573E02A2B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x340B SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x49D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B45 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4BC2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1BC2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4B63 SWAP2 SWAP1 PUSH2 0x5E44 JUMP JUMPDEST PUSH2 0x1BC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4BD1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4BD9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x4C3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBD0 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x4C88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4CA4 SWAP2 SWAP1 PUSH2 0x5E61 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4CE1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4CE6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4CF6 DUP3 DUP3 DUP7 PUSH2 0x4D01 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4D10 JUMPI POP DUP2 PUSH2 0xDC3 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x4D20 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP2 SWAP1 PUSH2 0x4E5B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4D46 SWAP1 PUSH2 0x567E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4D68 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x4DAE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4D81 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4DAE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4DAE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4DAE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4D93 JUMP JUMPDEST POP PUSH2 0x4DBA SWAP3 SWAP2 POP PUSH2 0x4DD8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xEE6 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4DBA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4DD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x4E0D DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDC3 DUP2 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E4A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4E32 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x340B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4E7A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4E2F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4EA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4EAC DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4EEB DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x4F09 DUP2 PUSH2 0x4EBA JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x4F19 DUP2 PUSH2 0x4DED JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4F47 DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4F57 DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4F94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4FB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FBD DUP6 DUP3 DUP7 ADD PUSH2 0x4F68 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5019 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4FF4 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xDC3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4FE0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5075 JUMPI PUSH2 0x5075 PUSH2 0x5037 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x5096 JUMPI PUSH2 0x5096 PUSH2 0x5037 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x50B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x50C6 PUSH2 0x50C1 DUP4 PUSH2 0x507D JUMP JUMPDEST PUSH2 0x504D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x50E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x5100 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x50E9 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x511C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x512C PUSH2 0x50C1 DUP4 PUSH2 0x507D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x514B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x5100 JUMPI DUP1 CALLDATALOAD PUSH2 0x5162 DUP2 PUSH2 0x4DED JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x514F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x519B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51A7 DUP8 DUP4 DUP9 ADD PUSH2 0x50A0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x51BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51C9 DUP8 DUP4 DUP9 ADD PUSH2 0x50A0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x51DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51EC DUP7 DUP3 DUP8 ADD PUSH2 0x510B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP7 SUB PUSH1 0xC0 DUP2 SLT ISZERO PUSH2 0x520D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x5218 DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x523A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5246 DUP9 DUP3 DUP10 ADD PUSH2 0x4F68 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH1 0x5F NOT DUP3 ADD SLT ISZERO PUSH2 0x525B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 PUSH1 0x60 ADD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x52B4 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5286 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x52D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x52EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x5328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x5346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5352 DUP15 DUP4 DUP16 ADD PUSH2 0x52C1 JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x536B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5377 DUP15 DUP4 DUP16 ADD PUSH2 0x52C1 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x539C DUP15 DUP4 DUP16 ADD PUSH2 0x52C1 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x53B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53C2 DUP14 DUP3 DUP15 ADD PUSH2 0x52C1 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x53D5 SWAP1 POP PUSH1 0xA0 DUP13 ADD PUSH2 0x4E02 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x53FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x5406 DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x5422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x542E DUP8 DUP4 DUP9 ADD PUSH2 0x510B JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51EC DUP7 DUP3 DUP8 ADD PUSH2 0x50A0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x547A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5486 DUP6 DUP3 DUP7 ADD PUSH2 0x52C1 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x54A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x54BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x5302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x54F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x550C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5518 DUP15 DUP4 DUP16 ADD PUSH2 0x5492 JUMP JUMPDEST SWAP1 SWAP13 POP SWAP11 POP PUSH1 0x20 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x553D DUP15 DUP4 DUP16 ADD PUSH2 0x5492 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5562 DUP15 DUP4 DUP16 ADD PUSH2 0x5492 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x557B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5587 DUP15 DUP4 DUP16 ADD PUSH2 0x5492 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x55A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55AD DUP14 DUP3 DUP15 ADD PUSH2 0x5492 JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4E0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x55F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x55FD DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x560D DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x5629 PUSH1 0x80 DUP10 ADD PUSH2 0x55C6 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x5663 DUP2 PUSH2 0x4DED JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x5673 DUP2 PUSH2 0x4DED JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x5692 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4F7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x56E7 JUMPI PUSH2 0x56E7 PUSH2 0x5037 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x56F5 DUP2 PUSH2 0x4EBA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x5705 DUP2 PUSH2 0x4EBA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x5718 DUP2 PUSH2 0x4EBA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x572B DUP2 PUSH2 0x4EBA JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDC3 DUP2 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x455243323054656D706C6174653A204E4F54204445504C4F59455220524F4C45 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x57E9 JUMPI PUSH2 0x57E9 PUSH2 0x57C0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5019 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5831 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP7 DUP3 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x587B JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5853 JUMP JUMPDEST POP POP POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x5892 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x581D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x58A4 DUP2 DUP7 PUSH2 0x581D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x4CF6 DUP2 DUP6 PUSH2 0x4FE0 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP2 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 ADD PUSH1 0x20 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x58E4 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x4E2F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST DUP12 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5947 PUSH1 0xE0 DUP4 ADD DUP13 DUP15 PUSH2 0x5904 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x595A DUP2 DUP12 DUP14 PUSH2 0x5904 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x596F DUP2 DUP10 DUP12 PUSH2 0x5904 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x5984 DUP2 DUP8 DUP10 PUSH2 0x5904 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0xC0 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x59C3 SWAP1 DUP4 ADD DUP6 PUSH2 0x4FE0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x59D5 DUP2 DUP6 PUSH2 0x581D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x59F9 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x5904 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x5A1B JUMPI PUSH2 0x5A1B PUSH2 0x5037 JUMP JUMPDEST PUSH2 0x5A2E PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x504D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x5A42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A67 PUSH2 0x50C1 DUP5 PUSH2 0x507D JUMP JUMPDEST DUP1 DUP5 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 POP DUP6 PUSH1 0x5 SHL DUP6 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x5A85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5AD4 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5AA6 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD CALLDATASIZE PUSH1 0x1F DUP3 ADD SLT PUSH2 0x5AB8 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5AC6 CALLDATASIZE DUP3 CALLDATALOAD DUP7 DUP5 ADD PUSH2 0x5A02 JUMP JUMPDEST DUP7 MSTORE POP SWAP4 DUP3 ADD SWAP4 DUP3 ADD PUSH2 0x5A87 JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AEE PUSH2 0x50C1 DUP5 PUSH2 0x507D JUMP JUMPDEST DUP1 DUP5 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 POP DUP6 PUSH1 0x5 SHL DUP6 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x5B0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5AD4 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5B2D JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD CALLDATASIZE PUSH1 0x1F DUP3 ADD SLT PUSH2 0x5B3F JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5B4D CALLDATASIZE DUP3 CALLDATALOAD DUP7 DUP5 ADD PUSH2 0x5A02 JUMP JUMPDEST DUP7 MSTORE POP SWAP4 DUP3 ADD SWAP4 DUP3 ADD PUSH2 0x5B0E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x5B6F JUMPI PUSH2 0x5B6F PUSH2 0x57C0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x5B8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x5BA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x5302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP8 DUP3 CALLDATACOPY PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP6 DUP7 SHL DUP2 AND SWAP7 SWAP1 SWAP2 ADD SWAP6 DUP7 MSTORE SWAP3 SWAP1 SWAP4 SHL SWAP1 SWAP2 AND PUSH1 0x14 DUP5 ADD MSTORE PUSH1 0x28 DUP4 ADD MSTORE PUSH1 0x48 DUP3 ADD MSTORE PUSH1 0x68 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC3 DUP3 PUSH2 0x55C6 JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5C2F PUSH1 0xC0 DUP4 ADD DUP9 DUP11 PUSH2 0x5904 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP7 AND PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE DUP4 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5C6A JUMPI PUSH2 0x5C6A PUSH2 0x57C0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x5C92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 MLOAD PUSH2 0x5C9D DUP2 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x20 DUP15 ADD MLOAD SWAP1 SWAP13 POP PUSH2 0x5CAE DUP2 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x40 DUP15 ADD MLOAD PUSH1 0x60 DUP16 ADD MLOAD SWAP2 SWAP13 POP SWAP11 POP PUSH2 0x5CC6 DUP2 PUSH2 0x4DED JUMP JUMPDEST DUP1 SWAP10 POP POP PUSH1 0x80 DUP14 ADD MLOAD SWAP8 POP PUSH1 0xA0 DUP14 ADD MLOAD SWAP7 POP PUSH1 0xC0 DUP14 ADD MLOAD PUSH2 0x5CE6 DUP2 PUSH2 0x4EBA JUMP JUMPDEST DUP1 SWAP7 POP POP PUSH1 0xE0 DUP14 ADD MLOAD SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x140 DUP14 ADD MLOAD SWAP2 POP PUSH2 0x160 DUP14 ADD MLOAD PUSH2 0x5D18 DUP2 PUSH2 0x4EBA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x5D49 JUMPI PUSH2 0x5D49 PUSH2 0x57C0 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x5D6D JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x5D8D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x5DA1 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x5DB2 JUMPI PUSH2 0x5DDF JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x5DDF JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x5DD7 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x5DBE JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5E1D JUMPI PUSH2 0x5E1D PUSH2 0x57C0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5E3F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDC3 DUP2 PUSH2 0x4EBA JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5E73 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4E2F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP8 0xA9 MOD 0xB5 SWAP6 DIV 0xC4 0xA6 0xDB 0x4F CALLVALUE 0x2F CALL PUSH12 0x72AB394C370E0C31FD5DA80 SSTORE 0xDB 0xC9 DUP3 0x5E PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "8": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "LT",
      "path": "42"
    },
    "9": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2C6"
    },
    "12": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "13": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "16": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "SHR",
      "path": "42"
    },
    "19": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "20": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x5D1CA631"
    },
    "25": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "GT",
      "path": "42"
    },
    "26": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x17E"
    },
    "29": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "30": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "31": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xA457C2D7"
    },
    "36": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "GT",
      "path": "42"
    },
    "37": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xD3"
    },
    "40": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "41": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "42": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xD505ACCF"
    },
    "47": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "GT",
      "path": "42"
    },
    "48": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x8F"
    },
    "51": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "52": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "53": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xE487C2E8"
    },
    "58": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "GT",
      "path": "42"
    },
    "59": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6C"
    },
    "62": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "63": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "64": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xE487C2E8"
    },
    "69": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "70": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x9A3"
    },
    "73": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "74": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "75": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xEC342AD0"
    },
    "80": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "81": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x9B8"
    },
    "84": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "85": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "86": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xEF867FF4"
    },
    "91": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "92": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x9D4"
    },
    "95": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "96": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "97": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xF887EA40"
    },
    "102": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "103": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x9F4"
    },
    "106": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "107": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "108": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "109": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "110": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xD505ACCF"
    },
    "115": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "116": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x935"
    },
    "119": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "120": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "121": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xDD62ED3E"
    },
    "126": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "127": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x955"
    },
    "130": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "131": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "132": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xE086E5EC"
    },
    "137": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "138": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x99B"
    },
    "141": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "142": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "143": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "144": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "145": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xA457C2D7"
    },
    "150": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "151": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x85C"
    },
    "154": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "155": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "156": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xA9059CBB"
    },
    "161": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "162": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x87C"
    },
    "165": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "166": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "167": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xAA271E1A"
    },
    "172": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "173": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x89C"
    },
    "176": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "177": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "178": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xAA492EF9"
    },
    "183": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "184": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x8D5"
    },
    "187": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "188": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "189": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xAB62F0E1"
    },
    "194": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "195": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x8F5"
    },
    "198": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "199": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "200": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xB3998BE0"
    },
    "205": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "206": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x915"
    },
    "209": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "210": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "211": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "212": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "213": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x7ECEBE00"
    },
    "218": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "GT",
      "path": "42"
    },
    "219": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x13A"
    },
    "222": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "223": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "224": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x8B96412B"
    },
    "229": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "GT",
      "path": "42"
    },
    "230": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x117"
    },
    "233": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "234": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "235": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x8B96412B"
    },
    "240": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "241": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7E7"
    },
    "244": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "245": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "246": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x95D89B41"
    },
    "251": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "252": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x807"
    },
    "255": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "256": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "257": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x96FB3EAF"
    },
    "262": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "263": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x81C"
    },
    "266": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "267": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "268": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x983B2D56"
    },
    "273": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "274": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x83C"
    },
    "277": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "278": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "279": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "280": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "281": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x7ECEBE00"
    },
    "286": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "287": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x785"
    },
    "290": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "291": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "292": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x82C03DA5"
    },
    "297": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "298": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7B2"
    },
    "301": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "302": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "303": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x89208F0F"
    },
    "308": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "309": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7C7"
    },
    "312": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "313": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "314": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "315": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "316": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x5D1CA631"
    },
    "321": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "322": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6C4"
    },
    "325": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "326": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "327": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x673A2A1F"
    },
    "332": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "333": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6D8"
    },
    "336": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "337": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "338": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x70A08231"
    },
    "343": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "344": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6ED"
    },
    "347": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "348": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "349": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x79CC6790"
    },
    "354": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "355": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x723"
    },
    "358": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "359": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "360": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x79D9D7F3"
    },
    "365": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "366": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x743"
    },
    "369": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "370": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "371": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x7DDA231E"
    },
    "376": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "377": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x763"
    },
    "380": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "381": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "382": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "383": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "384": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x355274EA"
    },
    "389": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "GT",
      "path": "42"
    },
    "390": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x234"
    },
    "393": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "394": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "395": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x40C10F19"
    },
    "400": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "GT",
      "path": "42"
    },
    "401": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1F0"
    },
    "404": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "405": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "406": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x4F189CB2"
    },
    "411": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "GT",
      "path": "42"
    },
    "412": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1CD"
    },
    "415": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "416": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "417": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x4F189CB2"
    },
    "422": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "423": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x64F"
    },
    "426": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "427": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "428": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x57A3A31B"
    },
    "433": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "434": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x664"
    },
    "437": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "438": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "439": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x57AD5FF6"
    },
    "444": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "445": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x684"
    },
    "448": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "449": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "450": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x5BFE4DA0"
    },
    "455": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "456": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6A4"
    },
    "459": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "460": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "461": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "462": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "463": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x40C10F19"
    },
    "468": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "469": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5ED"
    },
    "472": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "473": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "474": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x42966C68"
    },
    "479": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "480": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x60D"
    },
    "483": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "484": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "485": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x47AC7D55"
    },
    "490": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "491": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x62D"
    },
    "494": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "495": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "496": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "497": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "498": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x355274EA"
    },
    "503": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "504": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x52E"
    },
    "507": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "508": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "509": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x361FEF49"
    },
    "514": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "515": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x543"
    },
    "518": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "519": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "520": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x3644E515"
    },
    "525": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "526": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x563"
    },
    "529": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "530": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "531": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x392E53CD"
    },
    "536": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "537": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x579"
    },
    "540": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "541": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "542": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x39509351"
    },
    "547": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "548": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x591"
    },
    "551": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "552": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "553": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x397B3743"
    },
    "558": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "559": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5B1"
    },
    "562": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "563": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "564": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "565": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "566": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x191C918A"
    },
    "571": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "GT",
      "path": "42"
    },
    "572": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x283"
    },
    "575": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "576": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "577": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x191C918A"
    },
    "582": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "583": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x458"
    },
    "586": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "587": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "588": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x23B872DD"
    },
    "593": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "594": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x478"
    },
    "597": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "598": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "599": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x25B00243"
    },
    "604": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "605": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x498"
    },
    "608": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "609": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "610": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x3092AFD5"
    },
    "615": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "616": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4B8"
    },
    "619": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "620": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "621": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x30ADF81F"
    },
    "626": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "627": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4D8"
    },
    "630": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "631": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "632": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x313CE567"
    },
    "637": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "638": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x50C"
    },
    "641": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "642": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "643": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "644": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "645": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH3",
      "path": "42",
      "value": "0x7FFB78"
    },
    "649": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "650": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CF"
    },
    "653": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "654": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "655": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x1E88208"
    },
    "660": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "661": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x30B"
    },
    "664": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "665": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "666": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6FDDE03"
    },
    "671": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "672": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x35B"
    },
    "675": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "676": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "677": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x95EA7B3"
    },
    "682": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "683": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x37D"
    },
    "686": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "687": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "688": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "693": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "694": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3AD"
    },
    "697": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "698": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "DUP1",
      "path": "42"
    },
    "699": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x18160DDD"
    },
    "704": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "EQ",
      "path": "42"
    },
    "705": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x439"
    },
    "708": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "709": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "710": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "711": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "712": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "715": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "716": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "717": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "718": {
      "fn": null,
      "offset": [
        1178,
        38557
      ],
      "op": "STOP",
      "path": "42"
    },
    "719": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "720": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "721": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "DUP1",
      "path": "42"
    },
    "722": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "723": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2DB"
    },
    "726": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "727": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "729": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "DUP1",
      "path": "42"
    },
    "730": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "REVERT",
      "path": "42"
    },
    "731": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "732": {
      "op": "POP"
    },
    "733": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30953,
        30967
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 0,
      "value": "0xB"
    },
    "735": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30953,
        30967
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "736": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30953,
        30967
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "739": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30953,
        30967
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "740": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30953,
        30967
      ],
      "op": "DIV",
      "path": "42"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "747": {
      "op": "SHL"
    },
    "748": {
      "op": "SUB"
    },
    "749": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30953,
        30967
      ],
      "op": "AND",
      "path": "42"
    },
    "750": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "751": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "753": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "SUB"
    },
    "762": {
      "op": "SWAP1"
    },
    "763": {
      "op": "SWAP2"
    },
    "764": {
      "op": "AND"
    },
    "765": {
      "op": "DUP2"
    },
    "766": {
      "op": "MSTORE"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "769": {
      "op": "ADD"
    },
    "770": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "771": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "773": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "774": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "DUP1",
      "path": "42"
    },
    "775": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "776": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "SUB",
      "path": "42"
    },
    "777": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "778": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        30878,
        30974
      ],
      "op": "RETURN",
      "path": "42"
    },
    "779": {
      "offset": [
        222,
        271
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "780": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "CALLVALUE",
      "path": "46"
    },
    "781": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "DUP1",
      "path": "46"
    },
    "782": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "783": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x317"
    },
    "786": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "787": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "789": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "DUP1",
      "path": "46"
    },
    "790": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "REVERT",
      "path": "46"
    },
    "791": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "792": {
      "op": "POP"
    },
    "793": {
      "offset": [
        222,
        271
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x344"
    },
    "796": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x326"
    },
    "799": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "800": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "802": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4E12"
    },
    "805": {
      "fn": "ERC20Template.getERC721Address",
      "jump": "i",
      "offset": [
        222,
        271
      ],
      "op": "JUMP",
      "path": "46"
    },
    "806": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "807": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "809": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "811": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "812": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "814": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "815": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "DUP2",
      "path": "46"
    },
    "816": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "817": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "819": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "820": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "821": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "822": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "824": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "DUP1",
      "path": "46"
    },
    "825": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "DUP3",
      "path": "46"
    },
    "826": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "AND",
      "path": "46"
    },
    "827": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "828": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "831": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "832": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "DIV",
      "path": "46"
    },
    "833": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "AND",
      "path": "46"
    },
    "834": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "DUP3",
      "path": "46"
    },
    "835": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "JUMP",
      "path": "46"
    },
    "836": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "837": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "839": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "DUP1",
      "path": "46"
    },
    "840": {
      "fn": "ERC20Template.getERC721Address",
      "offset": [
        222,
        271
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "841": {
      "op": "SWAP3"
    },
    "842": {
      "op": "ISZERO"
    },
    "843": {
      "op": "ISZERO"
    },
    "844": {
      "op": "DUP4"
    },
    "845": {
      "op": "MSTORE"
    },
    "846": {
      "op": "SWAP1"
    },
    "847": {
      "op": "ISZERO"
    },
    "848": {
      "op": "ISZERO"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "851": {
      "op": "DUP4"
    },
    "852": {
      "op": "ADD"
    },
    "853": {
      "op": "MSTORE"
    },
    "854": {
      "op": "ADD"
    },
    "855": {
      "offset": [
        222,
        271
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x302"
    },
    "858": {
      "op": "JUMP"
    },
    "859": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "860": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "861": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "DUP1",
      "path": "42"
    },
    "862": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "863": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x367"
    },
    "866": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "867": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "869": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "DUP1",
      "path": "42"
    },
    "870": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "REVERT",
      "path": "42"
    },
    "871": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "872": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "POP",
      "path": "42"
    },
    "873": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x370"
    },
    "876": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA14"
    },
    "879": {
      "fn": "ERC20Template.name",
      "jump": "i",
      "offset": [
        30456,
        30546
      ],
      "op": "JUMP",
      "path": "42"
    },
    "880": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "881": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "883": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "884": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x302"
    },
    "887": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "888": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "889": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E5B"
    },
    "892": {
      "fn": "ERC20Template.name",
      "jump": "i",
      "offset": [
        30456,
        30546
      ],
      "op": "JUMP",
      "path": "42"
    },
    "893": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "894": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "895": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "896": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "897": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x389"
    },
    "900": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "901": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "903": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "904": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "REVERT",
      "path": "3"
    },
    "905": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39D"
    },
    "910": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x398"
    },
    "913": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "914": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "916": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E8E"
    },
    "919": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "920": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "921": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAA6"
    },
    "924": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "925": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "926": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "928": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "929": {
      "op": "SWAP1"
    },
    "930": {
      "op": "ISZERO"
    },
    "931": {
      "op": "ISZERO"
    },
    "932": {
      "op": "DUP2"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "936": {
      "op": "ADD"
    },
    "937": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302"
    },
    "940": {
      "op": "JUMP"
    },
    "941": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "942": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "CALLVALUE",
      "path": "46"
    },
    "943": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "DUP1",
      "path": "46"
    },
    "944": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "945": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B9"
    },
    "948": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "949": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "951": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "DUP1",
      "path": "46"
    },
    "952": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "REVERT",
      "path": "46"
    },
    "953": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x41A"
    },
    "958": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3C8"
    },
    "961": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "962": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "964": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4E12"
    },
    "967": {
      "fn": "ERC20Roles.getPermissions",
      "jump": "i",
      "offset": [
        807,
        926
      ],
      "op": "JUMP",
      "path": "46"
    },
    "968": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "971": {
      "op": "DUP1"
    },
    "972": {
      "op": "MLOAD"
    },
    "973": {
      "op": "DUP1"
    },
    "974": {
      "op": "DUP3"
    },
    "975": {
      "op": "ADD"
    },
    "976": {
      "op": "SWAP1"
    },
    "977": {
      "op": "SWAP2"
    },
    "978": {
      "op": "MSTORE"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "981": {
      "op": "DUP1"
    },
    "982": {
      "op": "DUP3"
    },
    "983": {
      "op": "MSTORE"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "986": {
      "op": "DUP3"
    },
    "987": {
      "op": "ADD"
    },
    "988": {
      "op": "MSTORE"
    },
    "989": {
      "op": "POP"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "op": "SUB"
    },
    "998": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "AND",
      "path": "46",
      "statement": 1
    },
    "999": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1001": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1002": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1003": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1004": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        913
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "1006": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1008": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1009": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1010": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1011": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1013": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1014": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1015": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1016": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        902,
        919
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1017": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1018": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1019": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1020": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1021": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "ADD",
      "path": "46"
    },
    "1022": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1023": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "1024": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1025": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "1026": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "1028": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1029": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1030": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "AND",
      "path": "46"
    },
    "1031": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1032": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1033": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1034": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1035": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "1038": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1039": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1040": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "DIV",
      "path": "46"
    },
    "1041": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "AND",
      "path": "46"
    },
    "1042": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1043": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1044": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1045": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1046": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "ADD",
      "path": "46"
    },
    "1047": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1048": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        895,
        919
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1049": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1050": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1051": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1053": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1054": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1055": {
      "op": "DUP3"
    },
    "1056": {
      "op": "MLOAD"
    },
    "1057": {
      "op": "ISZERO"
    },
    "1058": {
      "op": "ISZERO"
    },
    "1059": {
      "op": "DUP2"
    },
    "1060": {
      "op": "MSTORE"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1063": {
      "op": "SWAP3"
    },
    "1064": {
      "op": "DUP4"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "op": "MLOAD"
    },
    "1067": {
      "op": "ISZERO"
    },
    "1068": {
      "op": "ISZERO"
    },
    "1069": {
      "op": "SWAP3"
    },
    "1070": {
      "op": "DUP2"
    },
    "1071": {
      "op": "ADD"
    },
    "1072": {
      "op": "SWAP3"
    },
    "1073": {
      "op": "SWAP1"
    },
    "1074": {
      "op": "SWAP3"
    },
    "1075": {
      "op": "MSTORE"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "fn": "ERC20Roles.getPermissions",
      "offset": [
        807,
        926
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x302"
    },
    "1080": {
      "op": "JUMP"
    },
    "1081": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1082": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1083": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1084": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1085": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x445"
    },
    "1088": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1089": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1091": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1092": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1093": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x2"
    },
    "1097": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1098": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1099": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1101": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1102": {
      "op": "SWAP1"
    },
    "1103": {
      "op": "DUP2"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1107": {
      "op": "ADD"
    },
    "1108": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302"
    },
    "1111": {
      "op": "JUMP"
    },
    "1112": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1113": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1114": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1115": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1116": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x464"
    },
    "1119": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1120": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1122": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1123": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1124": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "1129": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x473"
    },
    "1132": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1133": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1135": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4EC8"
    },
    "1138": {
      "fn": "ERC20Template.createDispenser",
      "jump": "i",
      "offset": [
        14910,
        15522
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1139": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1140": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xABD"
    },
    "1143": {
      "fn": "ERC20Template.createDispenser",
      "jump": "i",
      "offset": [
        14910,
        15522
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1144": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1145": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1146": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1147": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1148": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x484"
    },
    "1151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1152": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1154": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1155": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1156": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39D"
    },
    "1161": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x493"
    },
    "1164": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1165": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1167": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F27"
    },
    "1170": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1171": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1172": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD1E"
    },
    "1175": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1176": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1177": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1178": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1179": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1180": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4A4"
    },
    "1183": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1184": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1186": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1187": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1188": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "1193": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4B3"
    },
    "1196": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1197": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1199": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "1202": {
      "fn": "ERC20Template.removePaymentManager",
      "jump": "i",
      "offset": [
        23623,
        23780
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1203": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1204": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xDCA"
    },
    "1207": {
      "fn": "ERC20Template.removePaymentManager",
      "jump": "i",
      "offset": [
        23623,
        23780
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1208": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1209": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1210": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1211": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1212": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4C4"
    },
    "1215": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1216": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1218": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1219": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1220": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1221": {
      "op": "POP"
    },
    "1222": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "1225": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4D3"
    },
    "1228": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1229": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1231": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "1234": {
      "fn": "ERC20Template.removeMinter",
      "jump": "i",
      "offset": [
        22868,
        22973
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1235": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1236": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xEE9"
    },
    "1239": {
      "fn": "ERC20Template.removeMinter",
      "jump": "i",
      "offset": [
        22868,
        22973
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1240": {
      "offset": [
        1941,
        2057
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1241": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        1941,
        2057
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1242": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        1941,
        2057
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1243": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        1941,
        2057
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1244": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        1941,
        2057
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E4"
    },
    "1247": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        1941,
        2057
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1248": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        1941,
        2057
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1250": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        1941,
        2057
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1251": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        1941,
        2057
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1252": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        1941,
        2057
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1253": {
      "op": "POP"
    },
    "1254": {
      "offset": [
        1941,
        2057
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x44A"
    },
    "1257": {
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "1290": {
      "offset": [
        1941,
        2057
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1291": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        1941,
        2057
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1292": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1293": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1294": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1295": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1296": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x518"
    },
    "1299": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1300": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1302": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1303": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1304": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1305": {
      "op": "POP"
    },
    "1306": {
      "offset": [
        1478,
        1480
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x12"
    },
    "1308": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1309": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1311": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1314": {
      "op": "SWAP1"
    },
    "1315": {
      "op": "SWAP2"
    },
    "1316": {
      "op": "AND"
    },
    "1317": {
      "op": "DUP2"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "fn": "ERC20Template.decimals",
      "offset": [
        31141,
        31231
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x302"
    },
    "1325": {
      "op": "JUMP"
    },
    "1326": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1327": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1328": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1329": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1330": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x53A"
    },
    "1333": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1334": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1336": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1337": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1338": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "fn": "ERC20Template.cap",
      "offset": [
        31399,
        31403
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 3,
      "value": "0xA"
    },
    "1342": {
      "fn": "ERC20Template.cap",
      "offset": [
        31399,
        31403
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1343": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x44A"
    },
    "1346": {
      "fn": "ERC20Template.cap",
      "offset": [
        31335,
        31410
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1347": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1348": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1349": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1350": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1351": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x54F"
    },
    "1354": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1355": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1357": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1358": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1359": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "1364": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x55E"
    },
    "1367": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1368": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1370": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4F81"
    },
    "1373": {
      "fn": "ERC20Template.reuseOrder",
      "jump": "i",
      "offset": [
        22084,
        22388
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1374": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1375": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1005"
    },
    "1378": {
      "fn": "ERC20Template.reuseOrder",
      "jump": "i",
      "offset": [
        22084,
        22388
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1379": {
      "offset": [
        1800,
        1831
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1380": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1381": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1382": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1383": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56F"
    },
    "1386": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1387": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1389": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1390": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1391": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1392": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "POP",
      "path": "42"
    },
    "1393": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x44A"
    },
    "1396": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x10"
    },
    "1398": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1399": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1400": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        1800,
        1831
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1401": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1402": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1403": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1404": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1405": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x585"
    },
    "1408": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1409": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1411": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1412": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1413": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1414": {
      "op": "POP"
    },
    "1415": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31641,
        31652
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 4,
      "value": "0xB"
    },
    "1417": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31641,
        31652
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1418": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31641,
        31652
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xFF"
    },
    "1420": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31641,
        31652
      ],
      "op": "AND",
      "path": "42"
    },
    "1421": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x39D"
    },
    "1424": {
      "fn": "ERC20Template.isInitialized",
      "offset": [
        31570,
        31659
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1425": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1426": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1427": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1428": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1429": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59D"
    },
    "1432": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1433": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1435": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1436": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1437": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1438": {
      "op": "POP"
    },
    "1439": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39D"
    },
    "1442": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5AC"
    },
    "1445": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1446": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1448": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E8E"
    },
    "1451": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1452": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1453": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1083"
    },
    "1456": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1457": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1458": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1459": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1460": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1461": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5BD"
    },
    "1464": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1465": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1467": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1468": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1469": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1470": {
      "op": "POP"
    },
    "1471": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28757,
        28780
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 5,
      "value": "0xD"
    },
    "1473": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28757,
        28780
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1474": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28794,
        28815
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE"
    },
    "1476": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28794,
        28815
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1477": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28829,
        28851
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xF"
    },
    "1479": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28829,
        28851
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1480": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1482": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1483": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1490": {
      "op": "SHL"
    },
    "1491": {
      "op": "SUB"
    },
    "1492": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28757,
        28780
      ],
      "op": "SWAP5",
      "path": "42"
    },
    "1493": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28757,
        28780
      ],
      "op": "DUP6",
      "path": "42"
    },
    "1494": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28757,
        28780
      ],
      "op": "AND",
      "path": "42"
    },
    "1495": {
      "op": "DUP2"
    },
    "1496": {
      "op": "MSTORE"
    },
    "1497": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28794,
        28815
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "1498": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28794,
        28815
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1499": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28794,
        28815
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "1500": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28794,
        28815
      ],
      "op": "AND",
      "path": "42"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1503": {
      "op": "DUP5"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "SWAP1"
    },
    "1507": {
      "op": "DUP3"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "op": "MSTORE"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1512": {
      "op": "ADD"
    },
    "1513": {
      "fn": "ERC20Template.getPublishingMarketFee",
      "offset": [
        28568,
        28868
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x302"
    },
    "1516": {
      "op": "JUMP"
    },
    "1517": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1518": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1519": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1520": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1521": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5F9"
    },
    "1524": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1525": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1527": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1528": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1529": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "1534": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x608"
    },
    "1537": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1538": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1540": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E8E"
    },
    "1543": {
      "fn": "ERC20Template.mint",
      "jump": "i",
      "offset": [
        15839,
        16130
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1544": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1545": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x10BF"
    },
    "1548": {
      "fn": "ERC20Template.mint",
      "jump": "i",
      "offset": [
        15839,
        16130
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1549": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1550": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1551": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1552": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1553": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x619"
    },
    "1556": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1557": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1559": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1560": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1561": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CD"
    },
    "1566": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x628"
    },
    "1569": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1570": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1572": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4FC7"
    },
    "1575": {
      "fn": "ERC20Burnable.burn",
      "jump": "i",
      "offset": [
        487,
        576
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1576": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1577": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1190"
    },
    "1580": {
      "fn": "ERC20Burnable.burn",
      "jump": "i",
      "offset": [
        487,
        576
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1581": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1582": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1583": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1584": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1585": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x639"
    },
    "1588": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1589": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1591": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1592": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1593": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1594": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "POP",
      "path": "42"
    },
    "1595": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x642"
    },
    "1598": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x119A"
    },
    "1601": {
      "fn": "ERC20Template.getDispensers",
      "jump": "i",
      "offset": [
        35812,
        35910
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1602": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1603": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1605": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "1606": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x302"
    },
    "1609": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1610": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1611": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5024"
    },
    "1614": {
      "fn": "ERC20Template.getDispensers",
      "jump": "i",
      "offset": [
        35812,
        35910
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1615": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1616": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1617": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1618": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1619": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x65B"
    },
    "1622": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1623": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1625": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1626": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1627": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1628": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "POP",
      "path": "42"
    },
    "1629": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "1632": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x11FB"
    },
    "1635": {
      "fn": "ERC20Template.cleanPermissions",
      "jump": "i",
      "offset": [
        24464,
        24567
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1636": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1637": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1638": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1639": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1640": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x670"
    },
    "1643": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1644": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1646": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1647": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1648": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "1653": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x67F"
    },
    "1656": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1657": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1659": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "1662": {
      "fn": "ERC20Template.setPaymentCollector",
      "jump": "i",
      "offset": [
        27466,
        28155
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1663": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1664": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x12D6"
    },
    "1667": {
      "fn": "ERC20Template.setPaymentCollector",
      "jump": "i",
      "offset": [
        27466,
        28155
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1668": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1669": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1670": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1671": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1672": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x690"
    },
    "1675": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1676": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1678": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1679": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1680": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "1685": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x69F"
    },
    "1688": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1689": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1691": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4F27"
    },
    "1694": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "jump": "i",
      "offset": [
        29244,
        30078
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1695": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1696": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x149D"
    },
    "1699": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "jump": "i",
      "offset": [
        29244,
        30078
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1700": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1701": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1702": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1703": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1704": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6B0"
    },
    "1707": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1708": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1710": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1711": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1712": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2EE"
    },
    "1717": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6BF"
    },
    "1720": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1721": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1723": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x516F"
    },
    "1726": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        12622,
        13495
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1727": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1728": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1656"
    },
    "1731": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        12622,
        13495
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1732": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1733": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1734": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1735": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1736": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6D0"
    },
    "1739": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1740": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1742": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1743": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1744": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1745": {
      "op": "POP"
    },
    "1746": {
      "fn": "ERC20Template.getId",
      "offset": [
        30339,
        30340
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 6,
      "value": "0x1"
    },
    "1748": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x51C"
    },
    "1751": {
      "fn": "ERC20Template.getId",
      "offset": [
        30277,
        30347
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1752": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1753": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1754": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1755": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1756": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6E4"
    },
    "1759": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1760": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1762": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1763": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1764": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1765": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "POP",
      "path": "42"
    },
    "1766": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x642"
    },
    "1769": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1AE1"
    },
    "1772": {
      "fn": "ERC20Template.getPools",
      "jump": "i",
      "offset": [
        35366,
        35462
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1773": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1774": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1775": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1776": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1777": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F9"
    },
    "1780": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1781": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1783": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1784": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1785": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44A"
    },
    "1790": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x708"
    },
    "1793": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1794": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1796": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E12"
    },
    "1799": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1800": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "AND",
      "path": "3",
      "statement": 7
    },
    "1810": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3400,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1812": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1813": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1814": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1815": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1817": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1818": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1819": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1820": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1822": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1823": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1824": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1825": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1826": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3326,
        3451
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1827": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1828": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1829": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1830": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1831": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x72F"
    },
    "1834": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1835": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1837": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1838": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1839": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CD"
    },
    "1844": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x73E"
    },
    "1847": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1848": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1850": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E8E"
    },
    "1853": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        882,
        1243
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1854": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1855": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B41"
    },
    "1858": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        882,
        1243
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1859": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1860": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1861": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1862": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1863": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x74F"
    },
    "1866": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1867": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1869": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1870": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1871": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1872": {
      "op": "POP"
    },
    "1873": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "1876": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x75E"
    },
    "1879": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1880": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1882": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x51F6"
    },
    "1885": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        19128,
        21713
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1886": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1887": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1BC7"
    },
    "1890": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        19128,
        21713
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1891": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1892": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1893": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1894": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1895": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x76F"
    },
    "1898": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1899": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1901": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1902": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1903": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1904": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "POP",
      "path": "42"
    },
    "1905": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x778"
    },
    "1908": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1FFE"
    },
    "1911": {
      "fn": "ERC20Template.getFixedRates",
      "jump": "i",
      "offset": [
        35587,
        35695
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1912": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1913": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1915": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "1916": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x302"
    },
    "1919": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1920": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1921": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5269"
    },
    "1924": {
      "fn": "ERC20Template.getFixedRates",
      "jump": "i",
      "offset": [
        35587,
        35695
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1925": {
      "offset": [
        2064,
        2105
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1926": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1927": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1928": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1929": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x791"
    },
    "1932": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1933": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1935": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1936": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1937": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1938": {
      "op": "POP"
    },
    "1939": {
      "offset": [
        2064,
        2105
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x44A"
    },
    "1942": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7A0"
    },
    "1945": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1946": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1948": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "1951": {
      "fn": "ERC20Template.getFixedRates",
      "jump": "i",
      "offset": [
        2064,
        2105
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1952": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1953": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x11"
    },
    "1955": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1957": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1958": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1960": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1961": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1962": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1963": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1965": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1966": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1967": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1968": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1969": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        2064,
        2105
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1970": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1971": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1972": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1973": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1974": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7BE"
    },
    "1977": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1978": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1980": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1981": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "REVERT",
      "path": "42"
    },
    "1982": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1983": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "POP",
      "path": "42"
    },
    "1984": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "1987": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2073"
    },
    "1990": {
      "fn": "ERC20Template.cleanFrom721",
      "jump": "i",
      "offset": [
        24946,
        25148
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1991": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1992": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "1993": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1994": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1995": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7D3"
    },
    "1998": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1999": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2001": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2002": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2003": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2004": {
      "op": "POP"
    },
    "2005": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "2008": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7E2"
    },
    "2011": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "2012": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2014": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5309"
    },
    "2017": {
      "fn": "ERC20Template.orderExecuted",
      "jump": "i",
      "offset": [
        36673,
        38022
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2018": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2019": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x20D2"
    },
    "2022": {
      "fn": "ERC20Template.orderExecuted",
      "jump": "i",
      "offset": [
        36673,
        38022
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2023": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2024": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2025": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2026": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2027": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7F3"
    },
    "2030": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2031": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2033": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2034": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2035": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x44A"
    },
    "2040": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x802"
    },
    "2043": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "2044": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2046": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x53E6"
    },
    "2049": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        13857,
        14495
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2050": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2051": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x23BF"
    },
    "2054": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        13857,
        14495
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2055": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2056": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2057": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2058": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2059": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x813"
    },
    "2062": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2063": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2065": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2066": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2067": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2068": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "POP",
      "path": "42"
    },
    "2069": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x370"
    },
    "2072": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x26D8"
    },
    "2075": {
      "fn": "ERC20Template.symbol",
      "jump": "i",
      "offset": [
        30661,
        30755
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2076": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2077": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2078": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2079": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2080": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x828"
    },
    "2083": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2084": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2086": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2087": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2088": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2089": {
      "op": "POP"
    },
    "2090": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x39D"
    },
    "2093": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x837"
    },
    "2096": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "2097": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2099": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "2102": {
      "fn": "ERC20Template.isERC20Deployer",
      "jump": "i",
      "offset": [
        35105,
        35258
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2103": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2104": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x26E7"
    },
    "2107": {
      "fn": "ERC20Template.isERC20Deployer",
      "jump": "i",
      "offset": [
        35105,
        35258
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2108": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2109": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2110": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2111": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2112": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x848"
    },
    "2115": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2116": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2118": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2119": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2120": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2121": {
      "op": "POP"
    },
    "2122": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "2125": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x857"
    },
    "2128": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "2129": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2131": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "2134": {
      "fn": "ERC20Template.addMinter",
      "jump": "i",
      "offset": [
        22574,
        22673
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2135": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2136": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2765"
    },
    "2139": {
      "fn": "ERC20Template.addMinter",
      "jump": "i",
      "offset": [
        22574,
        22673
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2140": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2141": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2142": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2143": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2144": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x868"
    },
    "2147": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2148": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2150": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2151": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2152": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2153": {
      "op": "POP"
    },
    "2154": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39D"
    },
    "2157": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x877"
    },
    "2160": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2161": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2163": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E8E"
    },
    "2166": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2167": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2168": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2881"
    },
    "2171": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2172": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2173": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2174": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2175": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2176": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x888"
    },
    "2179": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2180": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2182": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2183": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2184": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2185": {
      "op": "POP"
    },
    "2186": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39D"
    },
    "2189": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x897"
    },
    "2192": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2193": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2195": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E8E"
    },
    "2198": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2199": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2200": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x291A"
    },
    "2203": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2204": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2205": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "CALLVALUE",
      "path": "46"
    },
    "2206": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2207": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2208": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8A8"
    },
    "2211": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2212": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2214": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2215": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2216": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2217": {
      "op": "POP"
    },
    "2218": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x39D"
    },
    "2221": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8B7"
    },
    "2224": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "2225": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2227": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4E12"
    },
    "2230": {
      "fn": "ERC20Roles.isMinter",
      "jump": "i",
      "offset": [
        1080,
        1195
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2231": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2238": {
      "op": "SHL"
    },
    "2239": {
      "op": "SUB"
    },
    "2240": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "AND",
      "path": "46",
      "statement": 8
    },
    "2241": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1136,
        1140
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2243": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2244": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2245": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2246": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1171
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "2248": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2250": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2251": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2253": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2254": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "2255": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "2256": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "2258": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "AND",
      "path": "46"
    },
    "2259": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2260": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2261": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2262": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2263": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2264": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2265": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x8E1"
    },
    "2268": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2269": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2271": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2272": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2273": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2274": {
      "op": "POP"
    },
    "2275": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "2278": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x8F0"
    },
    "2281": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "2282": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2284": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "2287": {
      "fn": "ERC20Template.addPaymentManager",
      "jump": "i",
      "offset": [
        23244,
        23395
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2288": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2289": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2927"
    },
    "2292": {
      "fn": "ERC20Template.addPaymentManager",
      "jump": "i",
      "offset": [
        23244,
        23395
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2293": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2294": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2295": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2296": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2297": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x901"
    },
    "2300": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2301": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2303": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2304": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2305": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2306": {
      "op": "POP"
    },
    "2307": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "2310": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x910"
    },
    "2313": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "2314": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2316": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5451"
    },
    "2319": {
      "fn": "ERC20Template.setData",
      "jump": "i",
      "offset": [
        24042,
        24249
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2320": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2321": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2A43"
    },
    "2324": {
      "fn": "ERC20Template.setData",
      "jump": "i",
      "offset": [
        24042,
        24249
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2325": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2326": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2327": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2328": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2329": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x921"
    },
    "2332": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2333": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2335": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2336": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2337": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2338": {
      "op": "POP"
    },
    "2339": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x39D"
    },
    "2342": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x930"
    },
    "2345": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "2346": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2348": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x54D6"
    },
    "2351": {
      "fn": "ERC20Template.initialize",
      "jump": "i",
      "offset": [
        7509,
        7965
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2352": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2353": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2BFE"
    },
    "2356": {
      "fn": "ERC20Template.initialize",
      "jump": "i",
      "offset": [
        7509,
        7965
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2357": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2358": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2359": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2360": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2361": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x941"
    },
    "2364": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2365": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2367": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2368": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2369": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2370": {
      "op": "POP"
    },
    "2371": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "2374": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x950"
    },
    "2377": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "2378": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2380": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x55D7"
    },
    "2383": {
      "fn": "ERC20Template.permit",
      "jump": "i",
      "offset": [
        32108,
        33069
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2384": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2385": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2D31"
    },
    "2388": {
      "fn": "ERC20Template.permit",
      "jump": "i",
      "offset": [
        32108,
        33069
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2389": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2390": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2391": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2392": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2393": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x961"
    },
    "2396": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2397": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2399": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2400": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2401": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44A"
    },
    "2406": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x970"
    },
    "2409": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2410": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2412": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5645"
    },
    "2415": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2416": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "op": "SUB"
    },
    "2425": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 9
    },
    "2426": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2427": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "AND",
      "path": "3"
    },
    "2428": {
      "fn": "ERC20.allowance",
      "offset": [
        3973,
        3980
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2430": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2431": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2432": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2433": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2435": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2437": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2438": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2439": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2440": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2442": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2443": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2444": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4017
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2445": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2446": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2447": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2448": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "AND",
      "path": "3"
    },
    "2449": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2450": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2451": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2452": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2453": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2454": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2455": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2456": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2457": {
      "fn": "ERC20.allowance",
      "offset": [
        3999,
        4026
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2458": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2459": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34882,
        35001
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2460": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34882,
        35001
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2CD"
    },
    "2463": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34882,
        35001
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2F43"
    },
    "2466": {
      "fn": "ERC20Template.withdrawETH",
      "jump": "i",
      "offset": [
        34882,
        35001
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2467": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2468": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2469": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2470": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2471": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x9AF"
    },
    "2474": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2475": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2477": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2478": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2479": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2480": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "POP",
      "path": "42"
    },
    "2481": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2EE"
    },
    "2484": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2F83"
    },
    "2487": {
      "fn": "ERC20Template.getPaymentCollector",
      "jump": "i",
      "offset": [
        34163,
        34404
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2488": {
      "offset": [
        1730,
        1765
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2489": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2490": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2491": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2492": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x9C4"
    },
    "2495": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2496": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2498": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2499": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2500": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2501": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "POP",
      "path": "42"
    },
    "2502": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x44A"
    },
    "2505": {
      "offset": [
        1761,
        1765
      ],
      "op": "PUSH8",
      "path": "42",
      "value": "0xDE0B6B3A7640000"
    },
    "2514": {
      "offset": [
        1730,
        1765
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2515": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        1730,
        1765
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2516": {
      "offset": [
        278,
        304
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2517": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "CALLVALUE",
      "path": "46"
    },
    "2518": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2519": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2520": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9E0"
    },
    "2523": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2524": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2526": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2527": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2528": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2529": {
      "op": "POP"
    },
    "2530": {
      "offset": [
        278,
        304
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2EE"
    },
    "2533": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9EF"
    },
    "2536": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "2537": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2539": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4FC7"
    },
    "2542": {
      "fn": "ERC20Template.getPaymentCollector",
      "jump": "i",
      "offset": [
        278,
        304
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2543": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2544": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x301C"
    },
    "2547": {
      "fn": "ERC20Template.getPaymentCollector",
      "jump": "i",
      "offset": [
        278,
        304
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2548": {
      "offset": [
        2112,
        2133
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2549": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "CALLVALUE",
      "path": "42"
    },
    "2550": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2551": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2552": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA00"
    },
    "2555": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2556": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2558": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2559": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2560": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "offset": [
        2112,
        2133
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x12"
    },
    "2564": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "2565": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2EE"
    },
    "2568": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2575": {
      "op": "SHL"
    },
    "2576": {
      "op": "SUB"
    },
    "2577": {
      "offset": [
        2112,
        2133
      ],
      "op": "AND",
      "path": "42"
    },
    "2578": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2579": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        2112,
        2133
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2580": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2581": {
      "fn": "ERC20Template.name",
      "offset": [
        30502,
        30515
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x60"
    },
    "2583": {
      "fn": "ERC20Template.name",
      "offset": [
        30534,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 10,
      "value": "0x8"
    },
    "2585": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2586": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "2587": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA23"
    },
    "2590": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2591": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x567E"
    },
    "2594": {
      "fn": "ERC20Template.name",
      "jump": "i",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2595": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2596": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2597": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "2599": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "ADD",
      "path": "42"
    },
    "2600": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2602": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2603": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2604": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DIV",
      "path": "42"
    },
    "2605": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "MUL",
      "path": "42"
    },
    "2606": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2608": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "ADD",
      "path": "42"
    },
    "2609": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2611": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2612": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2613": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2614": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "ADD",
      "path": "42"
    },
    "2615": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2617": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2618": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2619": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "2620": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2621": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2622": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2623": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2624": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2625": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2627": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "ADD",
      "path": "42"
    },
    "2628": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2629": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2630": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "2631": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA4F"
    },
    "2634": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2635": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x567E"
    },
    "2638": {
      "fn": "ERC20Template.name",
      "jump": "i",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2639": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2640": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2641": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2642": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA9C"
    },
    "2645": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2646": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2647": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "2649": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "LT",
      "path": "42"
    },
    "2650": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA71"
    },
    "2653": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2654": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "2657": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2658": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2659": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "2660": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DIV",
      "path": "42"
    },
    "2661": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "MUL",
      "path": "42"
    },
    "2662": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2663": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2664": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2665": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2667": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "ADD",
      "path": "42"
    },
    "2668": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2669": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA9C"
    },
    "2672": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2673": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2674": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2675": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "ADD",
      "path": "42"
    },
    "2676": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2677": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2678": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2680": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2681": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2683": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2685": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "2686": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2687": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2688": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2689": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "2690": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2691": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2692": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2693": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "2695": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "ADD",
      "path": "42"
    },
    "2696": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2697": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2699": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "ADD",
      "path": "42"
    },
    "2700": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2701": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2702": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "GT",
      "path": "42"
    },
    "2703": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA7F"
    },
    "2706": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2707": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2708": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2709": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SUB",
      "path": "42"
    },
    "2710": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "2712": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "AND",
      "path": "42"
    },
    "2713": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2714": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "ADD",
      "path": "42"
    },
    "2715": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2716": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2717": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "POP",
      "path": "42"
    },
    "2718": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "POP",
      "path": "42"
    },
    "2719": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "POP",
      "path": "42"
    },
    "2720": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "POP",
      "path": "42"
    },
    "2721": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "POP",
      "path": "42"
    },
    "2722": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2723": {
      "fn": "ERC20Template.name",
      "offset": [
        30527,
        30539
      ],
      "op": "POP",
      "path": "42"
    },
    "2724": {
      "fn": "ERC20Template.name",
      "offset": [
        30456,
        30546
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2725": {
      "fn": "ERC20Template.name",
      "jump": "o",
      "offset": [
        30456,
        30546
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2726": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2727": {
      "fn": "ERC20.approve",
      "offset": [
        4254,
        4258
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2729": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 11,
      "value": "0xAB3"
    },
    "2732": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 12
    },
    "2733": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4300
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2734": {
      "fn": "ERC20.approve",
      "offset": [
        4302,
        4308
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2735": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3046"
    },
    "2738": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2739": {
      "fn": "ERC20.approve",
      "offset": [
        4270,
        4309
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2740": {
      "op": "POP"
    },
    "2741": {
      "fn": "ERC20.approve",
      "offset": [
        4326,
        4330
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 13,
      "value": "0x1"
    },
    "2743": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2744": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2745": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2746": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "3"
    },
    "2747": {
      "fn": "ERC20.approve",
      "offset": [
        4171,
        4337
      ],
      "op": "POP",
      "path": "3"
    },
    "2748": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4171,
        4337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2749": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        14910,
        15522
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2750": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "2752": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6058,
        6072
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "2753": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2755": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2756": {
      "op": "PUSH4",
      "value": "0x160A7925"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2763": {
      "op": "SHL"
    },
    "2764": {
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2765": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2766": {
      "offset": [
        6106,
        6116
      ],
      "op": "CALLER",
      "path": "42"
    },
    "2767": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2769": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2770": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "2771": {
      "op": "MSTORE"
    },
    "2772": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "2775": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2776": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2777": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6058,
        6072
      ],
      "op": "DIV",
      "path": "42"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "op": "SUB"
    },
    "2786": {
      "offset": [
        6058,
        6072
      ],
      "op": "AND",
      "path": "42"
    },
    "2787": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2788": {
      "offset": [
        6042,
        6105
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "2793": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6105
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2796": {
      "op": "ADD"
    },
    "2797": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "2799": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2801": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2802": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2803": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2804": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "SUB",
      "path": "42"
    },
    "2805": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2806": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP7",
      "path": "42"
    },
    "2807": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "GAS",
      "path": "42"
    },
    "2808": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "2809": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2810": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2811": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2812": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xB09"
    },
    "2815": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2816": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "2817": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2819": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2820": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "2821": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "2822": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2824": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "42"
    },
    "2825": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2826": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "2827": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "2828": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "2829": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "2830": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2832": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2833": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "2834": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "2836": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "NOT",
      "path": "42"
    },
    "2837": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "2839": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2840": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "2841": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "AND",
      "path": "42"
    },
    "2842": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2843": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "2844": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2845": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2847": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2848": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "2849": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2850": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "2851": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2852": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xB2D"
    },
    "2855": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2856": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2857": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56B3"
    },
    "2860": {
      "fn": "ERC20Template.createDispenser",
      "jump": "i",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2861": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2862": {
      "offset": [
        6042,
        6146
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2864": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6146
      ],
      "op": "ADD",
      "path": "42"
    },
    "2865": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6146
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2866": {
      "offset": [
        6042,
        6206
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2867": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6042,
        6206
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBB4"
    },
    "2870": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2871": {
      "op": "POP"
    },
    "2872": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "2874": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6166,
        6180
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "2875": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2877": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2878": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2885": {
      "op": "SHL"
    },
    "2886": {
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2887": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2888": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "2890": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2892": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2893": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "2894": {
      "op": "MSTORE"
    },
    "2895": {
      "offset": [
        6196,
        6206
      ],
      "op": "CALLER",
      "path": "42"
    },
    "2896": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6196,
        6206
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2897": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "2900": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2901": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6166,
        6180
      ],
      "op": "DIV",
      "path": "42"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2908": {
      "op": "SHL"
    },
    "2909": {
      "op": "SUB"
    },
    "2910": {
      "offset": [
        6166,
        6180
      ],
      "op": "AND",
      "path": "42"
    },
    "2911": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2912": {
      "offset": [
        6150,
        6189
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "2917": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6189
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2920": {
      "op": "ADD"
    },
    "2921": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2923": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2925": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2926": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2927": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2928": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "SUB",
      "path": "42"
    },
    "2929": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2930": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP7",
      "path": "42"
    },
    "2931": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "GAS",
      "path": "42"
    },
    "2932": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "2933": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2934": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2935": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2936": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xB85"
    },
    "2939": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2940": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "2941": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2943": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2944": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "2945": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "2946": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2948": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2949": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2950": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "2951": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "2952": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "2953": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "2954": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2956": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2957": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "2958": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "2960": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "NOT",
      "path": "42"
    },
    "2961": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "2963": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2964": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "2965": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "AND",
      "path": "42"
    },
    "2966": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2967": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "2968": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2969": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2971": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2972": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "2973": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2974": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "2975": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2976": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBA9"
    },
    "2979": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2980": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2981": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "2984": {
      "fn": "ERC20Template.createDispenser",
      "jump": "i",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2985": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2992": {
      "op": "SHL"
    },
    "2993": {
      "op": "SUB"
    },
    "2994": {
      "offset": [
        6150,
        6206
      ],
      "op": "AND",
      "path": "42"
    },
    "2995": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6150,
        6206
      ],
      "op": "EQ",
      "path": "42"
    },
    "2996": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2997": {
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD9"
    },
    "3000": {
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3001": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3003": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3004": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3010": {
      "op": "SHL"
    },
    "3011": {
      "offset": [
        6021,
        6264
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3012": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3013": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "3015": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "ADD",
      "path": "42"
    },
    "3016": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "3019": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3020": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5754"
    },
    "3023": {
      "fn": "ERC20Template.createDispenser",
      "jump": "i",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3024": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3025": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3027": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3028": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3029": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3030": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "SUB",
      "path": "42"
    },
    "3031": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3032": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "REVERT",
      "path": "42"
    },
    "3033": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3034": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3036": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3038": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3039": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "3040": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3041": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBFC"
    },
    "3044": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3045": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3047": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3048": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3056": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3057": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3059": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "3060": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD0"
    },
    "3063": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3064": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5789"
    },
    "3067": {
      "fn": "ERC20Template.createDispenser",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3068": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3069": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3071": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3073": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3074": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15195,
        15231
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3075": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15195,
        15231
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3076": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15195,
        15231
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xC10"
    },
    "3079": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15195,
        15231
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3080": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15209,
        15231
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 14,
      "value": "0xC10"
    },
    "3083": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15220,
        15230
      ],
      "op": "DUP6",
      "path": "42"
    },
    "3084": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15209,
        15219
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x316A"
    },
    "3087": {
      "fn": "ERC20Template.createDispenser",
      "jump": "i",
      "offset": [
        15209,
        15231
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3088": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15209,
        15231
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3089": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15251
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 15,
      "value": "0x15"
    },
    "3091": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3092": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3093": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "3095": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3096": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "ADD",
      "path": "42"
    },
    "3097": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3098": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3101": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3102": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3103": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3104": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3105": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475"
    },
    "3138": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "ADD",
      "path": "42"
    },
    "3139": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3140": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3147": {
      "op": "SHL"
    },
    "3148": {
      "op": "SUB"
    },
    "3149": {
      "op": "NOT"
    },
    "3150": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "AND",
      "path": "42"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3157": {
      "op": "SHL"
    },
    "3158": {
      "op": "SUB"
    },
    "3159": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "DUP8",
      "path": "42"
    },
    "3160": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "AND",
      "path": "42"
    },
    "3161": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3162": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3163": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "OR",
      "path": "42"
    },
    "3164": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3165": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3166": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15241,
        15268
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "3167": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 16,
      "value": "0x40"
    },
    "3169": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3170": {
      "op": "SWAP1"
    },
    "3171": {
      "op": "DUP2"
    },
    "3172": {
      "op": "MSTORE"
    },
    "3173": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0xA31FFD41531537EB31BFD827A3F5372B5F62BF4DD8579E5354B280DC58490E70"
    },
    "3206": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3209": {
      "op": "ADD"
    },
    "3210": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3212": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3213": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3214": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3215": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "SUB",
      "path": "42"
    },
    "3216": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3217": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15283,
        15307
      ],
      "op": "LOG1",
      "path": "42"
    },
    "3218": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15332,
        15338
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 17,
      "value": "0x12"
    },
    "3220": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15332,
        15338
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3221": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3223": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3224": {
      "op": "PUSH4",
      "value": "0x6B14D005"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3233": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "op": "SUB"
    },
    "3242": {
      "op": "DUP8"
    },
    "3243": {
      "op": "DUP2"
    },
    "3244": {
      "op": "AND"
    },
    "3245": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "3247": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3248": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "ADD",
      "path": "42"
    },
    "3249": {
      "op": "MSTORE"
    },
    "3250": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15401,
        15405
      ],
      "op": "ADDRESS",
      "path": "42"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3253": {
      "op": "DUP4"
    },
    "3254": {
      "op": "ADD"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3258": {
      "op": "DUP3"
    },
    "3259": {
      "op": "ADD"
    },
    "3260": {
      "op": "DUP8"
    },
    "3261": {
      "op": "SWAP1"
    },
    "3262": {
      "op": "MSTORE"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3265": {
      "op": "DUP3"
    },
    "3266": {
      "op": "ADD"
    },
    "3267": {
      "op": "DUP7"
    },
    "3268": {
      "op": "SWAP1"
    },
    "3269": {
      "op": "MSTORE"
    },
    "3270": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15467,
        15477
      ],
      "op": "CALLER",
      "path": "42"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3273": {
      "op": "DUP4"
    },
    "3274": {
      "op": "ADD"
    },
    "3275": {
      "op": "MSTORE"
    },
    "3276": {
      "op": "DUP4"
    },
    "3277": {
      "op": "DUP2"
    },
    "3278": {
      "op": "AND"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3281": {
      "op": "DUP4"
    },
    "3282": {
      "op": "ADD"
    },
    "3283": {
      "op": "MSTORE"
    },
    "3284": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15332,
        15338
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3285": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15332,
        15338
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3286": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15332,
        15338
      ],
      "op": "AND",
      "path": "42"
    },
    "3287": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15332,
        15338
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3288": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15355
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xD629A00A"
    },
    "3293": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15355
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "3296": {
      "op": "ADD"
    },
    "3297": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3299": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3301": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3302": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3303": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3304": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "SUB",
      "path": "42"
    },
    "3305": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3306": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3308": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP8",
      "path": "42"
    },
    "3309": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3310": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "EXTCODESIZE",
      "path": "42"
    },
    "3311": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3312": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3313": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3314": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xCFA"
    },
    "3317": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3318": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3320": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3321": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "REVERT",
      "path": "42"
    },
    "3322": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3323": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "POP",
      "path": "42"
    },
    "3324": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "GAS",
      "path": "42"
    },
    "3325": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "CALL",
      "path": "42"
    },
    "3326": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3327": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3328": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3329": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xD0E"
    },
    "3332": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3333": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3334": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3336": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3337": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "3338": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3339": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3341": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "REVERT",
      "path": "42"
    },
    "3342": {
      "fn": "ERC20Template.createDispenser",
      "offset": [
        15317,
        15515
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3343": {
      "op": "POP"
    },
    "3344": {
      "op": "POP"
    },
    "3345": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3347": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3349": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3350": {
      "op": "POP"
    },
    "3351": {
      "op": "POP"
    },
    "3352": {
      "op": "POP"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "op": "POP"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "fn": "ERC20Template.createDispenser",
      "jump": "o",
      "offset": [
        14910,
        15522
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3358": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3359": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4940,
        4944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3361": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 18,
      "value": "0xD2B"
    },
    "3364": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        4972
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3365": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4974,
        4983
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3366": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4985,
        4991
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3367": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4965
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3241"
    },
    "3370": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3371": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4956,
        4992
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3378": {
      "op": "SHL"
    },
    "3379": {
      "op": "SUB"
    },
    "3380": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3381": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "AND",
      "path": "3"
    },
    "3382": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5027
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3384": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3385": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3386": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3387": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3389": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3391": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3392": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3393": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3394": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3396": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3397": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3398": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5049
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3399": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3400": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3401": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3402": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3403": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3404": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3405": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3406": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3407": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5063
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3408": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 19
    },
    "3409": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3410": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "LT",
      "path": "3"
    },
    "3411": {
      "branch": 239,
      "fn": "ERC20.transferFrom",
      "offset": [
        5081,
        5107
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3412": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDB0"
    },
    "3415": {
      "branch": 239,
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3416": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3418": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3425": {
      "op": "SHL"
    },
    "3426": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3427": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3430": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3432": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3433": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "ADD",
      "path": "3"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3439": {
      "op": "DUP3"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "MSTORE"
    },
    "3442": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3477": {
      "op": "DUP3"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "MSTORE"
    },
    "3480": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3491": {
      "op": "SHL"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3494": {
      "op": "DUP3"
    },
    "3495": {
      "op": "ADD"
    },
    "3496": {
      "op": "MSTORE"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3499": {
      "op": "ADD"
    },
    "3500": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "3503": {
      "op": "JUMP"
    },
    "3504": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5073,
        5152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3505": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 20,
      "value": "0xDBD"
    },
    "3508": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5195,
        5201
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3509": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3510": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5236,
        5242
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3511": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5233
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3512": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5242
      ],
      "op": "SUB",
      "path": "3"
    },
    "3513": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5194
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3046"
    },
    "3516": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5186,
        5243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3517": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5186,
        5243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3518": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5271,
        5275
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x1"
    },
    "3520": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5264,
        5275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3521": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5264,
        5275
      ],
      "op": "POP",
      "path": "3"
    },
    "3522": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5264,
        5275
      ],
      "op": "POP",
      "path": "3"
    },
    "3523": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3524": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3525": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3526": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "POP",
      "path": "3"
    },
    "3527": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "POP",
      "path": "3"
    },
    "3528": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4804,
        5282
      ],
      "op": "POP",
      "path": "3"
    },
    "3529": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4804,
        5282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3530": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3531": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "3533": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6058,
        6072
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3534": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3536": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3537": {
      "op": "PUSH4",
      "value": "0x160A7925"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3544": {
      "op": "SHL"
    },
    "3545": {
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3546": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3547": {
      "offset": [
        6106,
        6116
      ],
      "op": "CALLER",
      "path": "42"
    },
    "3548": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "3550": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3551": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "3552": {
      "op": "MSTORE"
    },
    "3553": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "3556": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3557": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3558": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6058,
        6072
      ],
      "op": "DIV",
      "path": "42"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3565": {
      "op": "SHL"
    },
    "3566": {
      "op": "SUB"
    },
    "3567": {
      "offset": [
        6058,
        6072
      ],
      "op": "AND",
      "path": "42"
    },
    "3568": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3569": {
      "offset": [
        6042,
        6105
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "3574": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6105
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3577": {
      "op": "ADD"
    },
    "3578": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "3580": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3582": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3583": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3584": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3585": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "SUB",
      "path": "42"
    },
    "3586": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3587": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP7",
      "path": "42"
    },
    "3588": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "GAS",
      "path": "42"
    },
    "3589": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "3590": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3591": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3592": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3593": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xE16"
    },
    "3596": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3597": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3598": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3600": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3601": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "3602": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3603": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3605": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "REVERT",
      "path": "42"
    },
    "3606": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3607": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "3608": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "3609": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "3610": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "3611": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3613": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3614": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3615": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "3617": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "NOT",
      "path": "42"
    },
    "3618": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "3620": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3621": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "3622": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "AND",
      "path": "42"
    },
    "3623": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3624": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "3625": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3626": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3628": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3629": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "3630": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3631": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "3632": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3633": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xE3A"
    },
    "3636": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3637": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3638": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56B3"
    },
    "3641": {
      "fn": "ERC20Template.removePaymentManager",
      "jump": "i",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3642": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3643": {
      "offset": [
        6042,
        6146
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "3645": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6146
      ],
      "op": "ADD",
      "path": "42"
    },
    "3646": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6146
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3647": {
      "offset": [
        6042,
        6206
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3648": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6042,
        6206
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xEC1"
    },
    "3651": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "3655": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6166,
        6180
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3656": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3658": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3659": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3666": {
      "op": "SHL"
    },
    "3667": {
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3668": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3669": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "3671": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "3673": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3674": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "3675": {
      "op": "MSTORE"
    },
    "3676": {
      "offset": [
        6196,
        6206
      ],
      "op": "CALLER",
      "path": "42"
    },
    "3677": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6196,
        6206
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3678": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "3681": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3682": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6166,
        6180
      ],
      "op": "DIV",
      "path": "42"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3689": {
      "op": "SHL"
    },
    "3690": {
      "op": "SUB"
    },
    "3691": {
      "offset": [
        6166,
        6180
      ],
      "op": "AND",
      "path": "42"
    },
    "3692": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3693": {
      "offset": [
        6150,
        6189
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "3698": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6189
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3701": {
      "op": "ADD"
    },
    "3702": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "3704": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3706": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3707": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3708": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3709": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "SUB",
      "path": "42"
    },
    "3710": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3711": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP7",
      "path": "42"
    },
    "3712": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "GAS",
      "path": "42"
    },
    "3713": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "3714": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3715": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3716": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3717": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xE92"
    },
    "3720": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3721": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3722": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3724": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3725": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "3726": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3727": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3729": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "REVERT",
      "path": "42"
    },
    "3730": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3731": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "3732": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "3733": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "3734": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "3735": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3737": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3738": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3739": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "3741": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "NOT",
      "path": "42"
    },
    "3742": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "3744": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3745": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "3746": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "AND",
      "path": "42"
    },
    "3747": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3748": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "3749": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3750": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3752": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3753": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "3754": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3755": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "3756": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3757": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xEB6"
    },
    "3760": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3761": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3762": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "3765": {
      "fn": "ERC20Template.removePaymentManager",
      "jump": "i",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3766": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3773": {
      "op": "SHL"
    },
    "3774": {
      "op": "SUB"
    },
    "3775": {
      "offset": [
        6150,
        6206
      ],
      "op": "AND",
      "path": "42"
    },
    "3776": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6150,
        6206
      ],
      "op": "EQ",
      "path": "42"
    },
    "3777": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3778": {
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xEDD"
    },
    "3781": {
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3782": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3784": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3785": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3791": {
      "op": "SHL"
    },
    "3792": {
      "offset": [
        6021,
        6264
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3793": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3794": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "3796": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "ADD",
      "path": "42"
    },
    "3797": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "3800": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3801": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5754"
    },
    "3804": {
      "fn": "ERC20Template.removePaymentManager",
      "jump": "i",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3805": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3806": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23735,
        23773
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 22,
      "value": "0xEE6"
    },
    "3809": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23757,
        23772
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3810": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23735,
        23756
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3411"
    },
    "3813": {
      "fn": "ERC20Template.removePaymentManager",
      "jump": "i",
      "offset": [
        23735,
        23773
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3814": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23735,
        23773
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3815": {
      "fn": "ERC20Template.removePaymentManager",
      "offset": [
        23623,
        23780
      ],
      "op": "POP",
      "path": "42"
    },
    "3816": {
      "fn": "ERC20Template.removePaymentManager",
      "jump": "o",
      "offset": [
        23623,
        23780
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3817": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22868,
        22973
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3818": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "3820": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6058,
        6072
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3821": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3823": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3824": {
      "op": "PUSH4",
      "value": "0x160A7925"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3831": {
      "op": "SHL"
    },
    "3832": {
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3833": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3834": {
      "offset": [
        6106,
        6116
      ],
      "op": "CALLER",
      "path": "42"
    },
    "3835": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "3837": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3838": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "3839": {
      "op": "MSTORE"
    },
    "3840": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "3843": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3844": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3845": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6058,
        6072
      ],
      "op": "DIV",
      "path": "42"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3852": {
      "op": "SHL"
    },
    "3853": {
      "op": "SUB"
    },
    "3854": {
      "offset": [
        6058,
        6072
      ],
      "op": "AND",
      "path": "42"
    },
    "3855": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3856": {
      "offset": [
        6042,
        6105
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "3861": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6105
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3864": {
      "op": "ADD"
    },
    "3865": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "3867": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3869": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3870": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3871": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3872": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "SUB",
      "path": "42"
    },
    "3873": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3874": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP7",
      "path": "42"
    },
    "3875": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "GAS",
      "path": "42"
    },
    "3876": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "3877": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3878": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3879": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3880": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xF35"
    },
    "3883": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3884": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3885": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3887": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3888": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "3889": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3890": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3892": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "REVERT",
      "path": "42"
    },
    "3893": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3894": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "3895": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "3896": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "3897": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "3898": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3900": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3901": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "3902": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "3904": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "NOT",
      "path": "42"
    },
    "3905": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "3907": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3908": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "3909": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "AND",
      "path": "42"
    },
    "3910": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3911": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "3912": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3913": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3915": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3916": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "3917": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3918": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "3919": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3920": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xF59"
    },
    "3923": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3924": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3925": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56B3"
    },
    "3928": {
      "fn": "ERC20Template.removeMinter",
      "jump": "i",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3929": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3930": {
      "offset": [
        6042,
        6146
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "3932": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6146
      ],
      "op": "ADD",
      "path": "42"
    },
    "3933": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6146
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3934": {
      "offset": [
        6042,
        6206
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3935": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6042,
        6206
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xFE0"
    },
    "3938": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3939": {
      "op": "POP"
    },
    "3940": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "3942": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6166,
        6180
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3943": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3945": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3946": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3953": {
      "op": "SHL"
    },
    "3954": {
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3955": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3956": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "3958": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "3960": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3961": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "3962": {
      "op": "MSTORE"
    },
    "3963": {
      "offset": [
        6196,
        6206
      ],
      "op": "CALLER",
      "path": "42"
    },
    "3964": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6196,
        6206
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3965": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "3968": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3969": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6166,
        6180
      ],
      "op": "DIV",
      "path": "42"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3976": {
      "op": "SHL"
    },
    "3977": {
      "op": "SUB"
    },
    "3978": {
      "offset": [
        6166,
        6180
      ],
      "op": "AND",
      "path": "42"
    },
    "3979": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3980": {
      "offset": [
        6150,
        6189
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "3985": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6189
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3988": {
      "op": "ADD"
    },
    "3989": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "3991": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3993": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3994": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3995": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3996": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "SUB",
      "path": "42"
    },
    "3997": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3998": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP7",
      "path": "42"
    },
    "3999": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "GAS",
      "path": "42"
    },
    "4000": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "4001": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "4002": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4003": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "4004": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xFB1"
    },
    "4007": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4008": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "4009": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4011": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4012": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "4013": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "4014": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4016": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "REVERT",
      "path": "42"
    },
    "4017": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4018": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "4019": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "4020": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "4021": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "4022": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4024": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4025": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "4026": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "4028": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "NOT",
      "path": "42"
    },
    "4029": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "4031": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4032": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "4033": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "AND",
      "path": "42"
    },
    "4034": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4035": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "4036": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4037": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4039": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4040": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "4041": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4042": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "4043": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4044": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xFD5"
    },
    "4047": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4048": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4049": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "4052": {
      "fn": "ERC20Template.removeMinter",
      "jump": "i",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4053": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4060": {
      "op": "SHL"
    },
    "4061": {
      "op": "SUB"
    },
    "4062": {
      "offset": [
        6150,
        6206
      ],
      "op": "AND",
      "path": "42"
    },
    "4063": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6150,
        6206
      ],
      "op": "EQ",
      "path": "42"
    },
    "4064": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4065": {
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xFFC"
    },
    "4068": {
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4069": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4071": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4078": {
      "op": "SHL"
    },
    "4079": {
      "offset": [
        6021,
        6264
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4080": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4081": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "4083": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "ADD",
      "path": "42"
    },
    "4084": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "4087": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4088": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5754"
    },
    "4091": {
      "fn": "ERC20Template.removeMinter",
      "jump": "i",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4092": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4093": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22944,
        22966
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 23,
      "value": "0xEE6"
    },
    "4096": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22958,
        22965
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4097": {
      "fn": "ERC20Template.removeMinter",
      "offset": [
        22944,
        22957
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3483"
    },
    "4100": {
      "fn": "ERC20Template.removeMinter",
      "jump": "i",
      "offset": [
        22944,
        22966
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4101": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22084,
        22388
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4102": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4104": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4106": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4107": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "4108": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4109": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1028"
    },
    "4112": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4113": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4115": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4122": {
      "op": "SHL"
    },
    "4123": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4124": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4125": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4127": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "4128": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD0"
    },
    "4131": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4132": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5789"
    },
    "4135": {
      "fn": "ERC20Template.reuseOrder",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4136": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4137": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4139": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4141": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4142": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 24,
      "value": "0x40"
    },
    "4144": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4145": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4146": {
      "op": "DUP4"
    },
    "4147": {
      "op": "DUP2"
    },
    "4148": {
      "op": "MSTORE"
    },
    "4149": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22265,
        22275
      ],
      "op": "CALLER",
      "path": "42"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4152": {
      "op": "DUP3"
    },
    "4153": {
      "op": "ADD"
    },
    "4154": {
      "op": "MSTORE"
    },
    "4155": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22289,
        22304
      ],
      "op": "TIMESTAMP",
      "path": "42"
    },
    "4156": {
      "op": "DUP2"
    },
    "4157": {
      "op": "DUP4"
    },
    "4158": {
      "op": "ADD"
    },
    "4159": {
      "op": "MSTORE"
    },
    "4160": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22318,
        22330
      ],
      "op": "NUMBER",
      "path": "42"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4163": {
      "op": "DUP3"
    },
    "4164": {
      "op": "ADD"
    },
    "4165": {
      "op": "MSTORE"
    },
    "4166": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4167": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4168": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x526E31449EA46E2AECF9B480C8D7DFA191348EF74FFDF75B445A6AB726DAA6FF"
    },
    "4201": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4202": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4203": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4204": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "SUB",
      "path": "42"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4207": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "ADD",
      "path": "42"
    },
    "4208": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4209": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22217,
        22340
      ],
      "op": "LOG1",
      "path": "42"
    },
    "4210": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22350,
        22381
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 25,
      "value": "0x107A"
    },
    "4213": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22368,
        22380
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4214": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22350,
        22367
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x34E3"
    },
    "4217": {
      "fn": "ERC20Template.reuseOrder",
      "jump": "i",
      "offset": [
        22350,
        22381
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4218": {
      "fn": "ERC20Template.reuseOrder",
      "offset": [
        22350,
        22381
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4219": {
      "op": "POP"
    },
    "4220": {
      "op": "POP"
    },
    "4221": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4223": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4225": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4226": {
      "fn": "ERC20Template.reuseOrder",
      "jump": "o",
      "offset": [
        22084,
        22388
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4227": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5889
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4228": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4229": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5765,
        5769
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4231": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 26
    },
    "4232": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4233": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4234": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4236": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4238": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4239": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4240": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4241": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4243": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4244": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4245": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5838
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4252": {
      "op": "SHL"
    },
    "4253": {
      "op": "SUB"
    },
    "4254": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4255": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "AND",
      "path": "3"
    },
    "4256": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4257": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4258": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4259": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4260": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4261": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4262": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4263": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5847
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4264": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5765,
        5769
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4265": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5765,
        5769
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4266": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5861
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB3"
    },
    "4269": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5861
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4270": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5804,
        5811
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4271": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5804,
        5811
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4272": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10BA"
    },
    "4275": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4276": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5850,
        5860
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4277": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5850,
        5860
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4278": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57D6"
    },
    "4281": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5813,
        5860
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4282": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5813,
        5860
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4283": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3046"
    },
    "4286": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5781,
        5861
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4287": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4288": {
      "fn": "ERC20Template.mint",
      "offset": [
        15924,
        15934
      ],
      "op": "CALLER",
      "path": "42",
      "statement": 27
    },
    "4289": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15935
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4291": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15935
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4292": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15935
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4293": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15935
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4294": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15923
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x5"
    },
    "4296": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15935
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4298": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15935
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4299": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15935
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4301": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15935
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4302": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15935
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "4303": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15942
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4304": {
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15942
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xFF"
    },
    "4306": {
      "branch": 189,
      "fn": "ERC20Template.mint",
      "offset": [
        15912,
        15942
      ],
      "op": "AND",
      "path": "42"
    },
    "4307": {
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x111E"
    },
    "4310": {
      "branch": 189,
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4311": {
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4313": {
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4314": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4320": {
      "op": "SHL"
    },
    "4321": {
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4322": {
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4325": {
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "4327": {
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4328": {
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "ADD",
      "path": "42"
    },
    "4329": {
      "op": "MSTORE"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4334": {
      "op": "DUP3"
    },
    "4335": {
      "op": "ADD"
    },
    "4336": {
      "op": "MSTORE"
    },
    "4337": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A204E4F54204D494E54455200000000000000"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4372": {
      "op": "DUP3"
    },
    "4373": {
      "op": "ADD"
    },
    "4374": {
      "op": "MSTORE"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "4381": {
      "op": "JUMP"
    },
    "4382": {
      "fn": "ERC20Template.mint",
      "offset": [
        15904,
        15972
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4383": {
      "fn": "ERC20Template.mint",
      "offset": [
        16031,
        16035
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 28,
      "value": "0xA"
    },
    "4385": {
      "fn": "ERC20Template.mint",
      "offset": [
        16031,
        16035
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4386": {
      "fn": "ERC20Template.mint",
      "offset": [
        16003,
        16027
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1134"
    },
    "4389": {
      "fn": "ERC20Template.mint",
      "offset": [
        16021,
        16026
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4390": {
      "fn": "ERC20Template.mint",
      "offset": [
        16003,
        16016
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x112E"
    },
    "4393": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4395": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4396": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4397": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4398": {
      "fn": "ERC20Template.mint",
      "offset": [
        16003,
        16016
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4399": {
      "fn": "ERC20Template.mint",
      "offset": [
        16003,
        16020
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4400": {
      "fn": "ERC20Template.mint",
      "offset": [
        16003,
        16020
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x38F5"
    },
    "4403": {
      "fn": "ERC20Template.mint",
      "jump": "i",
      "offset": [
        16003,
        16027
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4404": {
      "fn": "ERC20Template.mint",
      "offset": [
        16003,
        16027
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4405": {
      "fn": "ERC20Template.mint",
      "offset": [
        16003,
        16035
      ],
      "op": "GT",
      "path": "42"
    },
    "4406": {
      "branch": 190,
      "fn": "ERC20Template.mint",
      "offset": [
        16003,
        16035
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "4407": {
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1182"
    },
    "4410": {
      "branch": 190,
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4411": {
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4413": {
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4414": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4420": {
      "op": "SHL"
    },
    "4421": {
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4422": {
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4425": {
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "4427": {
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4428": {
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "ADD",
      "path": "42"
    },
    "4429": {
      "op": "MSTORE"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4434": {
      "op": "DUP3"
    },
    "4435": {
      "op": "ADD"
    },
    "4436": {
      "op": "MSTORE"
    },
    "4437": {
      "op": "PUSH32",
      "value": "0x44617461746F6B656E54656D706C6174653A2063617020657863656564656400"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4472": {
      "op": "DUP3"
    },
    "4473": {
      "op": "ADD"
    },
    "4474": {
      "op": "MSTORE"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4477": {
      "op": "ADD"
    },
    "4478": {
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "4481": {
      "op": "JUMP"
    },
    "4482": {
      "fn": "ERC20Template.mint",
      "offset": [
        15982,
        16092
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4483": {
      "fn": "ERC20Template.mint",
      "offset": [
        16102,
        16123
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 29,
      "value": "0x118C"
    },
    "4486": {
      "fn": "ERC20Template.mint",
      "offset": [
        16108,
        16115
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4487": {
      "fn": "ERC20Template.mint",
      "offset": [
        16117,
        16122
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4488": {
      "fn": "ERC20Template.mint",
      "offset": [
        16102,
        16107
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3901"
    },
    "4491": {
      "fn": "ERC20Template.mint",
      "jump": "i",
      "offset": [
        16102,
        16123
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4492": {
      "fn": "ERC20Template.mint",
      "offset": [
        16102,
        16123
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4493": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "POP",
      "path": "42"
    },
    "4494": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "POP",
      "path": "42"
    },
    "4495": {
      "fn": "ERC20Template.mint",
      "jump": "o",
      "offset": [
        15839,
        16130
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4496": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        487,
        576
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4497": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        542,
        569
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 30,
      "value": "0xEE6"
    },
    "4500": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4501": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        562,
        568
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4502": {
      "fn": "ERC20Burnable.burn",
      "offset": [
        542,
        547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39E0"
    },
    "4505": {
      "fn": "ERC20Burnable.burn",
      "jump": "i",
      "offset": [
        542,
        569
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4506": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4507": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35857,
        35873
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x60"
    },
    "4509": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35892,
        35902
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 31,
      "value": "0x15"
    },
    "4511": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4512": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4513": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4514": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4516": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "MUL",
      "path": "42"
    },
    "4517": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4519": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "ADD",
      "path": "42"
    },
    "4520": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4522": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4523": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4524": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4525": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "ADD",
      "path": "42"
    },
    "4526": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4528": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4529": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4530": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "4531": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4532": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4533": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4534": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4535": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4536": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4538": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "ADD",
      "path": "42"
    },
    "4539": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4540": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4541": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4542": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4543": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "4544": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA9C"
    },
    "4547": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4548": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4550": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "MUL",
      "path": "42"
    },
    "4551": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4552": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "ADD",
      "path": "42"
    },
    "4553": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4554": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4555": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4557": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4558": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4560": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4562": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "4563": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4564": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4565": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4566": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4573": {
      "op": "SHL"
    },
    "4574": {
      "op": "SUB"
    },
    "4575": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "AND",
      "path": "42"
    },
    "4576": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4577": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4578": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "4580": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4581": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4582": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "ADD",
      "path": "42"
    },
    "4583": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4584": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4586": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "ADD",
      "path": "42"
    },
    "4587": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4588": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "DUP4",
      "path": "42"
    },
    "4589": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "GT",
      "path": "42"
    },
    "4590": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x11D4"
    },
    "4593": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4594": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "POP",
      "path": "42"
    },
    "4595": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "POP",
      "path": "42"
    },
    "4596": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "POP",
      "path": "42"
    },
    "4597": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "POP",
      "path": "42"
    },
    "4598": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "POP",
      "path": "42"
    },
    "4599": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4600": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35885,
        35903
      ],
      "op": "POP",
      "path": "42"
    },
    "4601": {
      "fn": "ERC20Template.getDispensers",
      "offset": [
        35812,
        35910
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4602": {
      "fn": "ERC20Template.getDispensers",
      "jump": "o",
      "offset": [
        35812,
        35910
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4603": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24464,
        24567
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4604": {
      "offset": [
        5677,
        5691
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "4606": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5677,
        5691
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4607": {
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4609": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4610": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4617": {
      "op": "SHL"
    },
    "4618": {
      "offset": [
        5661,
        5703
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4619": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4620": {
      "offset": [
        5677,
        5691
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "4622": {
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "4624": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4625": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "ADD",
      "path": "42"
    },
    "4626": {
      "op": "MSTORE"
    },
    "4627": {
      "offset": [
        5677,
        5691
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "4630": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5677,
        5691
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4631": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5677,
        5691
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4632": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5677,
        5691
      ],
      "op": "DIV",
      "path": "42"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4639": {
      "op": "SHL"
    },
    "4640": {
      "op": "SUB"
    },
    "4641": {
      "offset": [
        5677,
        5691
      ],
      "op": "AND",
      "path": "42"
    },
    "4642": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5677,
        5691
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4643": {
      "offset": [
        5661,
        5700
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "4648": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5700
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4651": {
      "op": "ADD"
    },
    "4652": {
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4654": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4656": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4657": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4658": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP4",
      "path": "42"
    },
    "4659": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "SUB",
      "path": "42"
    },
    "4660": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4661": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP7",
      "path": "42"
    },
    "4662": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "GAS",
      "path": "42"
    },
    "4663": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "4664": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "4665": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4666": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "4667": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1248"
    },
    "4670": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4671": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "4672": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4674": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4675": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "4676": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "4677": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4679": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "REVERT",
      "path": "42"
    },
    "4680": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4681": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "POP",
      "path": "42"
    },
    "4682": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "POP",
      "path": "42"
    },
    "4683": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "POP",
      "path": "42"
    },
    "4684": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "POP",
      "path": "42"
    },
    "4685": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4687": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4688": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "4689": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "4691": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "NOT",
      "path": "42"
    },
    "4692": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "4694": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4695": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "ADD",
      "path": "42"
    },
    "4696": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "AND",
      "path": "42"
    },
    "4697": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4698": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "ADD",
      "path": "42"
    },
    "4699": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4700": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4702": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4703": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "POP",
      "path": "42"
    },
    "4704": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4705": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "ADD",
      "path": "42"
    },
    "4706": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4707": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x126C"
    },
    "4710": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4711": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4712": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "4715": {
      "fn": "ERC20Template.cleanPermissions",
      "jump": "i",
      "offset": [
        5661,
        5703
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4716": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5661,
        5703
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4723": {
      "op": "SHL"
    },
    "4724": {
      "op": "SUB"
    },
    "4725": {
      "offset": [
        5647,
        5703
      ],
      "op": "AND",
      "path": "42"
    },
    "4726": {
      "offset": [
        5647,
        5657
      ],
      "op": "CALLER",
      "path": "42"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4733": {
      "op": "SHL"
    },
    "4734": {
      "op": "SUB"
    },
    "4735": {
      "offset": [
        5647,
        5703
      ],
      "op": "AND",
      "path": "42"
    },
    "4736": {
      "branch": 191,
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5647,
        5703
      ],
      "op": "EQ",
      "path": "42"
    },
    "4737": {
      "offset": [
        5626,
        5756
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x12CC"
    },
    "4740": {
      "branch": 191,
      "offset": [
        5626,
        5756
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4741": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5626,
        5756
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4743": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5626,
        5756
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4750": {
      "op": "SHL"
    },
    "4751": {
      "offset": [
        5626,
        5756
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4752": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5626,
        5756
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4755": {
      "offset": [
        5626,
        5756
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "4757": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5626,
        5756
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4758": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        5626,
        5756
      ],
      "op": "ADD",
      "path": "42"
    },
    "4759": {
      "op": "MSTORE"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4764": {
      "op": "DUP3"
    },
    "4765": {
      "op": "ADD"
    },
    "4766": {
      "op": "MSTORE"
    },
    "4767": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A206E6F74204E46544F776E65720000000000"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4802": {
      "op": "DUP3"
    },
    "4803": {
      "op": "ADD"
    },
    "4804": {
      "op": "MSTORE"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4807": {
      "op": "ADD"
    },
    "4808": {
      "offset": [
        5626,
        5756
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "4811": {
      "op": "JUMP"
    },
    "4812": {
      "offset": [
        5626,
        5756
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4813": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24524,
        24551
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 32,
      "value": "0x12D4"
    },
    "4816": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24524,
        24549
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3B2E"
    },
    "4819": {
      "fn": "ERC20Template.cleanPermissions",
      "jump": "i",
      "offset": [
        24524,
        24551
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4820": {
      "fn": "ERC20Template.cleanPermissions",
      "offset": [
        24524,
        24551
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4821": {
      "fn": "ERC20Template.cleanPermissions",
      "jump": "o",
      "offset": [
        24464,
        24567
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4822": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4823": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27680,
        27690
      ],
      "op": "CALLER",
      "path": "42",
      "statement": 33
    },
    "4824": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27691
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4826": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27691
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4827": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27691
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4828": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27691
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4829": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27679
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x5"
    },
    "4831": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27691
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4833": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27691
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4834": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27691
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4836": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27691
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4837": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27691
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "4838": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27706
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4839": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27706
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "4842": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27706
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4843": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27706
      ],
      "op": "DIV",
      "path": "42"
    },
    "4844": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27706
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xFF"
    },
    "4846": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27706
      ],
      "op": "AND",
      "path": "42"
    },
    "4847": {
      "branch": 192,
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27706
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4848": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27796
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1369"
    },
    "4851": {
      "branch": 192,
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27796
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27742,
        27756
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "4855": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27742,
        27756
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4856": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4858": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4859": {
      "op": "PUSH4",
      "value": "0x160A7925"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4866": {
      "op": "SHL"
    },
    "4867": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4868": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4869": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27773,
        27783
      ],
      "op": "CALLER",
      "path": "42"
    },
    "4870": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "4872": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4873": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "ADD",
      "path": "42"
    },
    "4874": {
      "op": "MSTORE"
    },
    "4875": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27742,
        27756
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "4878": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27742,
        27756
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4879": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27742,
        27756
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4880": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27742,
        27756
      ],
      "op": "DIV",
      "path": "42"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4887": {
      "op": "SHL"
    },
    "4888": {
      "op": "SUB"
    },
    "4889": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27742,
        27756
      ],
      "op": "AND",
      "path": "42"
    },
    "4890": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27742,
        27756
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4891": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27772
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "4896": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27772
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4899": {
      "op": "ADD"
    },
    "4900": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "4902": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4904": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4905": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4906": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP4",
      "path": "42"
    },
    "4907": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "SUB",
      "path": "42"
    },
    "4908": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4909": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP7",
      "path": "42"
    },
    "4910": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "GAS",
      "path": "42"
    },
    "4911": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "4912": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "4913": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4914": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "4915": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1340"
    },
    "4918": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4919": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "4920": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4922": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4923": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "4924": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "4925": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4927": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "REVERT",
      "path": "42"
    },
    "4928": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4929": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "POP",
      "path": "42"
    },
    "4930": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "POP",
      "path": "42"
    },
    "4931": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "POP",
      "path": "42"
    },
    "4932": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "POP",
      "path": "42"
    },
    "4933": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4935": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4936": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "4937": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "4939": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "NOT",
      "path": "42"
    },
    "4940": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "4942": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4943": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "ADD",
      "path": "42"
    },
    "4944": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "AND",
      "path": "42"
    },
    "4945": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4946": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "ADD",
      "path": "42"
    },
    "4947": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4948": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4950": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4951": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "POP",
      "path": "42"
    },
    "4952": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4953": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "ADD",
      "path": "42"
    },
    "4954": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4955": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1364"
    },
    "4958": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4959": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4960": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56B3"
    },
    "4963": {
      "fn": "ERC20Template.setPaymentCollector",
      "jump": "i",
      "offset": [
        27726,
        27784
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4964": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27784
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4965": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27796
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4967": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27796
      ],
      "op": "ADD",
      "path": "42"
    },
    "4968": {
      "branch": 193,
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27726,
        27796
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4969": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27796
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4970": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27870
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4971": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27870
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x13EC"
    },
    "4974": {
      "branch": 193,
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27870
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4975": {
      "op": "POP"
    },
    "4976": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27832,
        27846
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "4978": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27832,
        27846
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4979": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4981": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "4982": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4989": {
      "op": "SHL"
    },
    "4990": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4991": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4992": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27832,
        27846
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "4994": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "4996": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4997": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "ADD",
      "path": "42"
    },
    "4998": {
      "op": "MSTORE"
    },
    "4999": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27860,
        27870
      ],
      "op": "CALLER",
      "path": "42"
    },
    "5000": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27860,
        27870
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5001": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27832,
        27846
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "5004": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27832,
        27846
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5005": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27832,
        27846
      ],
      "op": "DIV",
      "path": "42"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5012": {
      "op": "SHL"
    },
    "5013": {
      "op": "SUB"
    },
    "5014": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27832,
        27846
      ],
      "op": "AND",
      "path": "42"
    },
    "5015": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27832,
        27846
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5016": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27855
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "5021": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27855
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5024": {
      "op": "ADD"
    },
    "5025": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "5027": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5029": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5030": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5031": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP4",
      "path": "42"
    },
    "5032": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "SUB",
      "path": "42"
    },
    "5033": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5034": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP7",
      "path": "42"
    },
    "5035": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "GAS",
      "path": "42"
    },
    "5036": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "5037": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5038": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5039": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5040": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x13BD"
    },
    "5043": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5044": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5045": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5047": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5048": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "5049": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5050": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5052": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "REVERT",
      "path": "42"
    },
    "5053": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5054": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "POP",
      "path": "42"
    },
    "5055": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "POP",
      "path": "42"
    },
    "5056": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "POP",
      "path": "42"
    },
    "5057": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "POP",
      "path": "42"
    },
    "5058": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5060": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5061": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5062": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "5064": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "NOT",
      "path": "42"
    },
    "5065": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "5067": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5068": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "ADD",
      "path": "42"
    },
    "5069": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "AND",
      "path": "42"
    },
    "5070": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5071": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "ADD",
      "path": "42"
    },
    "5072": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5073": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5075": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5076": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "POP",
      "path": "42"
    },
    "5077": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5078": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "ADD",
      "path": "42"
    },
    "5079": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5080": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x13E1"
    },
    "5083": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5084": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5085": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "5088": {
      "fn": "ERC20Template.setPaymentCollector",
      "jump": "i",
      "offset": [
        27816,
        27858
      ],
      "op": "JUMP",
      "path": "42"
    },
    "5089": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27858
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5096": {
      "op": "SHL"
    },
    "5097": {
      "op": "SUB"
    },
    "5098": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27870
      ],
      "op": "AND",
      "path": "42"
    },
    "5099": {
      "branch": 194,
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27816,
        27870
      ],
      "op": "EQ",
      "path": "42"
    },
    "5100": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27668,
        27870
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5101": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x144C"
    },
    "5104": {
      "branch": 194,
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5105": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5107": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5114": {
      "op": "SHL"
    },
    "5115": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5116": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5119": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "5121": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5122": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "ADD",
      "path": "42"
    },
    "5123": {
      "op": "MSTORE"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5128": {
      "op": "DUP3"
    },
    "5129": {
      "op": "ADD"
    },
    "5130": {
      "op": "MSTORE"
    },
    "5131": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A204E4F54205041594D454E54204D414E4147"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5166": {
      "op": "DUP3"
    },
    "5167": {
      "op": "ADD"
    },
    "5168": {
      "op": "MSTORE"
    },
    "5169": {
      "op": "PUSH11",
      "value": "0x22A91037B91027ABA722A9"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "5183": {
      "op": "SHL"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5186": {
      "op": "DUP3"
    },
    "5187": {
      "op": "ADD"
    },
    "5188": {
      "op": "MSTORE"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5191": {
      "op": "ADD"
    },
    "5192": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "5195": {
      "op": "JUMP"
    },
    "5196": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27647,
        27939
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5197": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27949,
        27991
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 34,
      "value": "0x1455"
    },
    "5200": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27970,
        27990
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5201": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27949,
        27969
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3FFC"
    },
    "5204": {
      "fn": "ERC20Template.setPaymentCollector",
      "jump": "i",
      "offset": [
        27949,
        27991
      ],
      "op": "JUMP",
      "path": "42"
    },
    "5205": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27949,
        27991
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5206": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 35,
      "value": "0x40"
    },
    "5208": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5209": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5210": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28097,
        28112
      ],
      "op": "TIMESTAMP",
      "path": "42"
    },
    "5211": {
      "op": "DUP2"
    },
    "5212": {
      "op": "MSTORE"
    },
    "5213": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28126,
        28138
      ],
      "op": "NUMBER",
      "path": "42"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5216": {
      "op": "DUP3"
    },
    "5217": {
      "op": "ADD"
    },
    "5218": {
      "op": "MSTORE"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5225": {
      "op": "SHL"
    },
    "5226": {
      "op": "SUB"
    },
    "5227": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "DUP4",
      "path": "42"
    },
    "5228": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "AND",
      "path": "42"
    },
    "5229": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5230": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28039,
        28049
      ],
      "op": "CALLER",
      "path": "42"
    },
    "5231": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28039,
        28049
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5232": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x4D7694D695C57CC54947177C8E8A0E61AAE664E9223492A798C32FADFC6419CC"
    },
    "5265": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5266": {
      "op": "ADD"
    },
    "5267": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5269": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5270": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5271": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5272": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "SUB",
      "path": "42"
    },
    "5273": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5274": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        28006,
        28148
      ],
      "op": "LOG3",
      "path": "42"
    },
    "5275": {
      "fn": "ERC20Template.setPaymentCollector",
      "offset": [
        27466,
        28155
      ],
      "op": "POP",
      "path": "42"
    },
    "5276": {
      "fn": "ERC20Template.setPaymentCollector",
      "jump": "o",
      "offset": [
        27466,
        28155
      ],
      "op": "JUMP",
      "path": "42"
    },
    "5277": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5278": {
      "offset": [
        5867,
        5890
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xD"
    },
    "5280": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        5867,
        5890
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5287": {
      "op": "SHL"
    },
    "5288": {
      "op": "SUB"
    },
    "5289": {
      "offset": [
        5867,
        5890
      ],
      "op": "AND",
      "path": "42"
    },
    "5290": {
      "offset": [
        5853,
        5863
      ],
      "op": "CALLER",
      "path": "42"
    },
    "5291": {
      "offset": [
        5853,
        5890
      ],
      "op": "EQ",
      "path": "42"
    },
    "5292": {
      "offset": [
        5832,
        5958
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x150A"
    },
    "5295": {
      "offset": [
        5832,
        5958
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5296": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        5832,
        5958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5298": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        5832,
        5958
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5305": {
      "op": "SHL"
    },
    "5306": {
      "offset": [
        5832,
        5958
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5307": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        5832,
        5958
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5310": {
      "offset": [
        5832,
        5958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "5312": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        5832,
        5958
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5313": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        5832,
        5958
      ],
      "op": "ADD",
      "path": "42"
    },
    "5314": {
      "op": "MSTORE"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5319": {
      "op": "DUP3"
    },
    "5320": {
      "op": "ADD"
    },
    "5321": {
      "op": "MSTORE"
    },
    "5322": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A206E6F74207075626C6973684D61726B6574"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5357": {
      "op": "DUP3"
    },
    "5358": {
      "op": "ADD"
    },
    "5359": {
      "op": "MSTORE"
    },
    "5360": {
      "op": "PUSH10",
      "value": "0x46656541646472657373"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5373": {
      "op": "SHL"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5376": {
      "op": "DUP3"
    },
    "5377": {
      "op": "ADD"
    },
    "5378": {
      "op": "MSTORE"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5381": {
      "op": "ADD"
    },
    "5382": {
      "offset": [
        5832,
        5958
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "5385": {
      "op": "JUMP"
    },
    "5386": {
      "offset": [
        5832,
        5958
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5393": {
      "op": "SHL"
    },
    "5394": {
      "op": "SUB"
    },
    "5395": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29476,
        29514
      ],
      "op": "DUP4",
      "path": "42",
      "statement": 36
    },
    "5396": {
      "branch": 195,
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29476,
        29514
      ],
      "op": "AND",
      "path": "42"
    },
    "5397": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1571"
    },
    "5400": {
      "branch": 195,
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5401": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5403": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5410": {
      "op": "SHL"
    },
    "5411": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5412": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5415": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "5417": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5418": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "ADD",
      "path": "42"
    },
    "5419": {
      "op": "MSTORE"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5424": {
      "op": "DUP3"
    },
    "5425": {
      "op": "ADD"
    },
    "5426": {
      "op": "MSTORE"
    },
    "5427": {
      "op": "PUSH32",
      "value": "0x496E76616C6964205F7075626C6973684D61726B657446656541646472657373"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5462": {
      "op": "DUP3"
    },
    "5463": {
      "op": "ADD"
    },
    "5464": {
      "op": "MSTORE"
    },
    "5465": {
      "op": "PUSH8",
      "value": "0x2061646472657373"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5476": {
      "op": "SHL"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5479": {
      "op": "DUP3"
    },
    "5480": {
      "op": "ADD"
    },
    "5481": {
      "op": "MSTORE"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5484": {
      "op": "ADD"
    },
    "5485": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "5488": {
      "op": "JUMP"
    },
    "5489": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29455,
        29580
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5496": {
      "op": "SHL"
    },
    "5497": {
      "op": "SUB"
    },
    "5498": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29614,
        29650
      ],
      "op": "DUP3",
      "path": "42",
      "statement": 37
    },
    "5499": {
      "branch": 196,
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29614,
        29650
      ],
      "op": "AND",
      "path": "42"
    },
    "5500": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x15D6"
    },
    "5503": {
      "branch": 196,
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5504": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5506": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5513": {
      "op": "SHL"
    },
    "5514": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5515": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5518": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "5520": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5521": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "ADD",
      "path": "42"
    },
    "5522": {
      "op": "MSTORE"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5527": {
      "op": "DUP3"
    },
    "5528": {
      "op": "ADD"
    },
    "5529": {
      "op": "MSTORE"
    },
    "5530": {
      "op": "PUSH32",
      "value": "0x496E76616C6964205F7075626C6973684D61726B6574466565546F6B656E2061"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5565": {
      "op": "DUP3"
    },
    "5566": {
      "op": "ADD"
    },
    "5567": {
      "op": "MSTORE"
    },
    "5568": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5577": {
      "op": "SHL"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5580": {
      "op": "DUP3"
    },
    "5581": {
      "op": "ADD"
    },
    "5582": {
      "op": "MSTORE"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5585": {
      "op": "ADD"
    },
    "5586": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "5589": {
      "op": "JUMP"
    },
    "5590": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29593,
        29714
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5591": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29747
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 38,
      "value": "0xD"
    },
    "5593": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5594": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5601": {
      "op": "SHL"
    },
    "5602": {
      "op": "SUB"
    },
    "5603": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "DUP6",
      "path": "42"
    },
    "5604": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5605": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "AND",
      "path": "42"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5612": {
      "op": "SHL"
    },
    "5613": {
      "op": "SUB"
    },
    "5614": {
      "op": "NOT"
    },
    "5615": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "5616": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "DUP4",
      "path": "42"
    },
    "5617": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "AND",
      "path": "42"
    },
    "5618": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5619": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "OR",
      "path": "42"
    },
    "5620": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5621": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "5622": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29724,
        29774
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "5623": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29805
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 39,
      "value": "0xE"
    },
    "5625": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5626": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "5627": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5628": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "DUP7",
      "path": "42"
    },
    "5629": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "AND",
      "path": "42"
    },
    "5630": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5631": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5632": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "5633": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "AND",
      "path": "42"
    },
    "5634": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5635": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "OR",
      "path": "42"
    },
    "5636": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5637": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5638": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29784,
        29830
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "5639": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29840,
        29862
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 40,
      "value": "0xF"
    },
    "5641": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29840,
        29888
      ],
      "op": "DUP4",
      "path": "42"
    },
    "5642": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29840,
        29888
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5643": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29840,
        29888
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "5644": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 41,
      "value": "0x40"
    },
    "5646": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5647": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5648": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29940,
        29950
      ],
      "op": "CALLER",
      "path": "42"
    },
    "5649": {
      "op": "DUP2"
    },
    "5650": {
      "op": "MSTORE"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5653": {
      "op": "DUP2"
    },
    "5654": {
      "op": "ADD"
    },
    "5655": {
      "op": "SWAP4"
    },
    "5656": {
      "op": "SWAP1"
    },
    "5657": {
      "op": "SWAP4"
    },
    "5658": {
      "op": "MSTORE"
    },
    "5659": {
      "op": "DUP3"
    },
    "5660": {
      "op": "ADD"
    },
    "5661": {
      "op": "MSTORE"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5664": {
      "op": "DUP2"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "DUP3"
    },
    "5667": {
      "op": "SWAP1"
    },
    "5668": {
      "op": "MSTORE"
    },
    "5669": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x2AB4B3FC023109C2D0DA394BDA239166C833F63C42B71B67ED4B836DCA0DDFE"
    },
    "5702": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5705": {
      "op": "ADD"
    },
    "5706": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5708": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5709": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5710": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5711": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "SUB",
      "path": "42"
    },
    "5712": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5713": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29903,
        30071
      ],
      "op": "LOG1",
      "path": "42"
    },
    "5714": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "POP",
      "path": "42"
    },
    "5715": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "POP",
      "path": "42"
    },
    "5716": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "offset": [
        29244,
        30078
      ],
      "op": "POP",
      "path": "42"
    },
    "5717": {
      "fn": "ERC20Template.setPublishingMarketFee",
      "jump": "o",
      "offset": [
        29244,
        30078
      ],
      "op": "JUMP",
      "path": "42"
    },
    "5718": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5719": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "5721": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6058,
        6072
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "5722": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5724": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5725": {
      "op": "PUSH4",
      "value": "0x160A7925"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5732": {
      "op": "SHL"
    },
    "5733": {
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5734": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5735": {
      "offset": [
        6106,
        6116
      ],
      "op": "CALLER",
      "path": "42"
    },
    "5736": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "5738": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5739": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "5740": {
      "op": "MSTORE"
    },
    "5741": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12803,
        12815
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5743": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12803,
        12815
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5744": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "5747": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5748": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6058,
        6072
      ],
      "op": "DIV",
      "path": "42"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5755": {
      "op": "SHL"
    },
    "5756": {
      "op": "SUB"
    },
    "5757": {
      "offset": [
        6058,
        6072
      ],
      "op": "AND",
      "path": "42"
    },
    "5758": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5759": {
      "offset": [
        6042,
        6105
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "5764": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6105
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5765": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5767": {
      "op": "ADD"
    },
    "5768": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "5770": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5772": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5773": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5774": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP4",
      "path": "42"
    },
    "5775": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "SUB",
      "path": "42"
    },
    "5776": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5777": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP7",
      "path": "42"
    },
    "5778": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "GAS",
      "path": "42"
    },
    "5779": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "5780": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5781": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5782": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5783": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x16A4"
    },
    "5786": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5787": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5788": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5790": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5791": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "5792": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5793": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5795": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "REVERT",
      "path": "42"
    },
    "5796": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5797": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "5798": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "5799": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "5800": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "5801": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5803": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5804": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5805": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "5807": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "NOT",
      "path": "42"
    },
    "5808": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "5810": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5811": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "5812": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "AND",
      "path": "42"
    },
    "5813": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5814": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "5815": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5816": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5818": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5819": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "5820": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5821": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "5822": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5823": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x16C8"
    },
    "5826": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5827": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5828": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56B3"
    },
    "5831": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMP",
      "path": "42"
    },
    "5832": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5833": {
      "offset": [
        6042,
        6146
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "5835": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6146
      ],
      "op": "ADD",
      "path": "42"
    },
    "5836": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6146
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5837": {
      "offset": [
        6042,
        6206
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5838": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6042,
        6206
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x174F"
    },
    "5841": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5842": {
      "op": "POP"
    },
    "5843": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "5845": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6166,
        6180
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "5846": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5848": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5849": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5856": {
      "op": "SHL"
    },
    "5857": {
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5858": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5859": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "5861": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "5863": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5864": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "5865": {
      "op": "MSTORE"
    },
    "5866": {
      "offset": [
        6196,
        6206
      ],
      "op": "CALLER",
      "path": "42"
    },
    "5867": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6196,
        6206
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5868": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "5871": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5872": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6166,
        6180
      ],
      "op": "DIV",
      "path": "42"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5879": {
      "op": "SHL"
    },
    "5880": {
      "op": "SUB"
    },
    "5881": {
      "offset": [
        6166,
        6180
      ],
      "op": "AND",
      "path": "42"
    },
    "5882": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5883": {
      "offset": [
        6150,
        6189
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "5888": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6189
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5891": {
      "op": "ADD"
    },
    "5892": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "5894": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5896": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5897": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5898": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP4",
      "path": "42"
    },
    "5899": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "SUB",
      "path": "42"
    },
    "5900": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5901": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP7",
      "path": "42"
    },
    "5902": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "GAS",
      "path": "42"
    },
    "5903": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "5904": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5905": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5906": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5907": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1720"
    },
    "5910": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5911": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5912": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5914": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5915": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "5916": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5917": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5919": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "REVERT",
      "path": "42"
    },
    "5920": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5921": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "5922": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "5923": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "5924": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "5925": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5927": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5928": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5929": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "5931": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "NOT",
      "path": "42"
    },
    "5932": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "5934": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5935": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "5936": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "AND",
      "path": "42"
    },
    "5937": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5938": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "5939": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5940": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5942": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5943": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "5944": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5945": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "5946": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5947": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1744"
    },
    "5950": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5951": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5952": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "5955": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMP",
      "path": "42"
    },
    "5956": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5963": {
      "op": "SHL"
    },
    "5964": {
      "op": "SUB"
    },
    "5965": {
      "offset": [
        6150,
        6206
      ],
      "op": "AND",
      "path": "42"
    },
    "5966": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6150,
        6206
      ],
      "op": "EQ",
      "path": "42"
    },
    "5967": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5968": {
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x176B"
    },
    "5971": {
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5972": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5974": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6021,
        6264
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5975": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5981": {
      "op": "SHL"
    },
    "5982": {
      "offset": [
        6021,
        6264
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5983": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6021,
        6264
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5984": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "5986": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6021,
        6264
      ],
      "op": "ADD",
      "path": "42"
    },
    "5987": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "5990": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6021,
        6264
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5991": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5754"
    },
    "5994": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMP",
      "path": "42"
    },
    "5995": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5996": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5998": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6000": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6001": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "6002": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6003": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x178E"
    },
    "6006": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6007": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6009": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6016": {
      "op": "SHL"
    },
    "6017": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6018": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6019": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6021": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "6022": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD0"
    },
    "6025": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6026": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5789"
    },
    "6029": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6030": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6031": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6033": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6035": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6036": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12835,
        12848
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 42,
      "value": "0x179C"
    },
    "6039": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6041": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6042": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3249,
        3261
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6043": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3162,
        3268
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6044": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12835,
        12848
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6045": {
      "branch": 197,
      "fn": "ERC20Template.deployPool",
      "offset": [
        12835,
        12853
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "6046": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x17F5"
    },
    "6049": {
      "branch": 197,
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6050": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6052": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6053": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6059": {
      "op": "SHL"
    },
    "6060": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6061": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6064": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "6066": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6067": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "ADD",
      "path": "42"
    },
    "6068": {
      "op": "MSTORE"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6071": {
      "op": "DUP1"
    },
    "6072": {
      "op": "DUP3"
    },
    "6073": {
      "op": "ADD"
    },
    "6074": {
      "op": "MSTORE"
    },
    "6075": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A20746F6B656E7320616C7265616479206D69"
    },
    "6108": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6110": {
      "op": "DUP3"
    },
    "6111": {
      "op": "ADD"
    },
    "6112": {
      "op": "MSTORE"
    },
    "6113": {
      "op": "PUSH4",
      "value": "0x1B9D1959"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6120": {
      "op": "SHL"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6123": {
      "op": "DUP3"
    },
    "6124": {
      "op": "ADD"
    },
    "6125": {
      "op": "MSTORE"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6128": {
      "op": "ADD"
    },
    "6129": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "6132": {
      "op": "JUMP"
    },
    "6133": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12827,
        12894
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6134": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12904,
        12928
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 43,
      "value": "0x1818"
    },
    "6137": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12924
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6138": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12925,
        12926
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "6140": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6141": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6142": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6143": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "LT",
      "path": "42"
    },
    "6144": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x180B"
    },
    "6147": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6148": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x180B"
    },
    "6151": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "6154": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        12915,
        12927
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6155": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6156": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6158": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "MUL",
      "path": "42"
    },
    "6159": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6161": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "ADD",
      "path": "42"
    },
    "6162": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "ADD",
      "path": "42"
    },
    "6163": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12915,
        12927
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6164": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12904,
        12914
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x316A"
    },
    "6167": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        12904,
        12928
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6168": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12904,
        12928
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6169": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13048,
        13054
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 44,
      "value": "0x12"
    },
    "6171": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13048,
        13054
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "6173": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13048,
        13054
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6174": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13048,
        13054
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "6175": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13048,
        13054
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6176": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13048,
        13054
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "6179": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13048,
        13054
      ],
      "op": "EXP",
      "path": "42"
    },
    "6180": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13048,
        13054
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6181": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13048,
        13054
      ],
      "op": "DIV",
      "path": "42"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6188": {
      "op": "SHL"
    },
    "6189": {
      "op": "SUB"
    },
    "6190": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13048,
        13054
      ],
      "op": "AND",
      "path": "42"
    },
    "6191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6197": {
      "op": "SHL"
    },
    "6198": {
      "op": "SUB"
    },
    "6199": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13075
      ],
      "op": "AND",
      "path": "42"
    },
    "6200": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13075
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x510F3465"
    },
    "6205": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6207": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6208": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6209": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xFFFFFFFF"
    },
    "6214": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "AND",
      "path": "42"
    },
    "6215": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE0"
    },
    "6217": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "SHL",
      "path": "42"
    },
    "6218": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6219": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6220": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "6222": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "ADD",
      "path": "42"
    },
    "6223": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6225": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6227": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6228": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6229": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP4",
      "path": "42"
    },
    "6230": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "SUB",
      "path": "42"
    },
    "6231": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6232": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP7",
      "path": "42"
    },
    "6233": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "GAS",
      "path": "42"
    },
    "6234": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "6235": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "6236": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6237": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "6238": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x186B"
    },
    "6241": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6242": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "6243": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "6245": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6246": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "6247": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "6248": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "6250": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "REVERT",
      "path": "42"
    },
    "6251": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6252": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "POP",
      "path": "42"
    },
    "6253": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "POP",
      "path": "42"
    },
    "6254": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "POP",
      "path": "42"
    },
    "6255": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "POP",
      "path": "42"
    },
    "6256": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6258": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6259": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "6260": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "6262": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "NOT",
      "path": "42"
    },
    "6263": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "6265": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6266": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "ADD",
      "path": "42"
    },
    "6267": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "AND",
      "path": "42"
    },
    "6268": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6269": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "ADD",
      "path": "42"
    },
    "6270": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6271": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6273": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6274": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "POP",
      "path": "42"
    },
    "6275": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6276": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "ADD",
      "path": "42"
    },
    "6277": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6278": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x188F"
    },
    "6281": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6282": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6283": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5804"
    },
    "6286": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        13033,
        13077
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6287": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13033,
        13077
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6288": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13026
      ],
      "op": "DUP5",
      "path": "42"
    },
    "6289": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13027,
        13028
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x3"
    },
    "6291": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6292": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6293": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6294": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "LT",
      "path": "42"
    },
    "6295": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x18A2"
    },
    "6298": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6299": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x18A2"
    },
    "6302": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "6305": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        13018,
        13029
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6306": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6307": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6309": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "MUL",
      "path": "42"
    },
    "6310": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6312": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "ADD",
      "path": "42"
    },
    "6313": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "ADD",
      "path": "42"
    },
    "6314": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13029
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6315": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13077
      ],
      "op": "LT",
      "path": "42"
    },
    "6316": {
      "branch": 198,
      "fn": "ERC20Template.deployPool",
      "offset": [
        13018,
        13077
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "6317": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1938"
    },
    "6320": {
      "branch": 198,
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6321": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6323": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6330": {
      "op": "SHL"
    },
    "6331": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6332": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6335": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "6337": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6338": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "ADD",
      "path": "42"
    },
    "6339": {
      "op": "MSTORE"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "6342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6344": {
      "op": "DUP3"
    },
    "6345": {
      "op": "ADD"
    },
    "6346": {
      "op": "MSTORE"
    },
    "6347": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A2056657374696E6720706572696F6420746F"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6382": {
      "op": "DUP3"
    },
    "6383": {
      "op": "ADD"
    },
    "6384": {
      "op": "MSTORE"
    },
    "6385": {
      "op": "PUSH32",
      "value": "0x6F206C6F772E2053656520466163746F7279526F757465722E6D696E56657374"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6420": {
      "op": "DUP3"
    },
    "6421": {
      "op": "ADD"
    },
    "6422": {
      "op": "MSTORE"
    },
    "6423": {
      "op": "PUSH17",
      "value": "0x696E67506572696F64496E426C6F636B73"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "6443": {
      "op": "SHL"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6446": {
      "op": "DUP3"
    },
    "6447": {
      "op": "ADD"
    },
    "6448": {
      "op": "MSTORE"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "6451": {
      "op": "ADD"
    },
    "6452": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "6455": {
      "op": "JUMP"
    },
    "6456": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12997,
        13184
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6457": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13219
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "6459": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6461": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6462": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6463": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6465": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "ADD",
      "path": "42"
    },
    "6466": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6468": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6469": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6470": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13231,
        13235
      ],
      "op": "ADDRESS",
      "path": "42"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6477": {
      "op": "SHL"
    },
    "6478": {
      "op": "SUB"
    },
    "6479": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "AND",
      "path": "42"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6486": {
      "op": "SHL"
    },
    "6487": {
      "op": "SUB"
    },
    "6488": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "AND",
      "path": "42"
    },
    "6489": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6490": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6491": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6493": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "ADD",
      "path": "42"
    },
    "6494": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13247
      ],
      "op": "DUP5",
      "path": "42"
    },
    "6495": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13248,
        13249
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "6497": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6498": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6499": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6500": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "LT",
      "path": "42"
    },
    "6501": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1970"
    },
    "6504": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6505": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1970"
    },
    "6508": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "6511": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        13238,
        13250
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6512": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6513": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6515": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6516": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6517": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "MUL",
      "path": "42"
    },
    "6518": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6519": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6520": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6521": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "ADD",
      "path": "42"
    },
    "6522": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "ADD",
      "path": "42"
    },
    "6523": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13238,
        13250
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6530": {
      "op": "SHL"
    },
    "6531": {
      "op": "SUB"
    },
    "6532": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6533": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6534": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "AND",
      "path": "42"
    },
    "6535": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6536": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6537": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6538": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13283,
        13289
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 45,
      "value": "0x12"
    },
    "6540": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13283,
        13289
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "6541": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6543": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6544": {
      "op": "PUSH4",
      "value": "0xEE3BC635"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6551": {
      "op": "SHL"
    },
    "6552": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6553": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6554": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "6555": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "6556": {
      "op": "POP"
    },
    "6557": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13283,
        13289
      ],
      "op": "AND",
      "path": "42"
    },
    "6558": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13283,
        13289
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6559": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13301
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xEE3BC635"
    },
    "6564": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13301
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6565": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x19B8"
    },
    "6568": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6569": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "DUP5",
      "path": "42"
    },
    "6570": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13195,
        13251
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6571": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13335,
        13343
      ],
      "op": "DUP10",
      "path": "42"
    },
    "6572": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13335,
        13343
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6573": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13357,
        13365
      ],
      "op": "DUP10",
      "path": "42"
    },
    "6574": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13357,
        13365
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6575": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13379,
        13388
      ],
      "op": "DUP10",
      "path": "42"
    },
    "6576": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13379,
        13388
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6577": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "6579": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "ADD",
      "path": "42"
    },
    "6580": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x584D"
    },
    "6583": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        13268,
        13398
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6584": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6585": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6587": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6589": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6590": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6591": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP4",
      "path": "42"
    },
    "6592": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "SUB",
      "path": "42"
    },
    "6593": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6594": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "6596": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP8",
      "path": "42"
    },
    "6597": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "GAS",
      "path": "42"
    },
    "6598": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "CALL",
      "path": "42"
    },
    "6599": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "6600": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6601": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "6602": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x19D7"
    },
    "6605": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6606": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "6607": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "6609": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6610": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "6611": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "6612": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "6614": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "REVERT",
      "path": "42"
    },
    "6615": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6616": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "POP",
      "path": "42"
    },
    "6617": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "POP",
      "path": "42"
    },
    "6618": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "POP",
      "path": "42"
    },
    "6619": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "POP",
      "path": "42"
    },
    "6620": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6622": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6623": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "6624": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "6626": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "NOT",
      "path": "42"
    },
    "6627": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "6629": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6630": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "ADD",
      "path": "42"
    },
    "6631": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "AND",
      "path": "42"
    },
    "6632": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6633": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "ADD",
      "path": "42"
    },
    "6634": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6635": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6637": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6638": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "POP",
      "path": "42"
    },
    "6639": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6640": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "ADD",
      "path": "42"
    },
    "6641": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6642": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x19FB"
    },
    "6645": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6646": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6647": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "6650": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        13268,
        13398
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6651": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13268,
        13398
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6652": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13421
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 46,
      "value": "0x13"
    },
    "6654": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6655": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "6656": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "6658": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6659": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "ADD",
      "path": "42"
    },
    "6660": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6661": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6664": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6665": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6666": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6667": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
    },
    "6700": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "ADD",
      "path": "42"
    },
    "6701": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6702": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "6703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6709": {
      "op": "SHL"
    },
    "6710": {
      "op": "SUB"
    },
    "6711": {
      "op": "NOT"
    },
    "6712": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "AND",
      "path": "42"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6719": {
      "op": "SHL"
    },
    "6720": {
      "op": "SUB"
    },
    "6721": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "DUP5",
      "path": "42"
    },
    "6722": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "AND",
      "path": "42"
    },
    "6723": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "OR",
      "path": "42"
    },
    "6724": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6725": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "6726": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "DUP5",
      "path": "42",
      "statement": 47
    },
    "6727": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6728": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6729": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "6730": {
      "op": "POP"
    },
    "6731": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0xD02DA1BEC30F7F750AA0A131745DFB9CE96767C45A192DC26409F5D690E0B967"
    },
    "6764": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6765": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "DUP5",
      "path": "42"
    },
    "6766": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13408,
        13432
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6767": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "DUP7",
      "path": "42"
    },
    "6768": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6769": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1A7C"
    },
    "6772": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6773": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1A7C"
    },
    "6776": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "6779": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        13461,
        13473
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6780": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6781": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6783": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "MUL",
      "path": "42"
    },
    "6784": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6786": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "ADD",
      "path": "42"
    },
    "6787": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "ADD",
      "path": "42"
    },
    "6788": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13461,
        13473
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6789": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13484
      ],
      "op": "DUP6",
      "path": "42"
    },
    "6790": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13485,
        13486
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "6792": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6793": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6794": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6795": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "LT",
      "path": "42"
    },
    "6796": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1A97"
    },
    "6799": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6800": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1A97"
    },
    "6803": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "6806": {
      "fn": "ERC20Template.deployPool",
      "jump": "i",
      "offset": [
        13475,
        13487
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6807": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6808": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6810": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "MUL",
      "path": "42"
    },
    "6811": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6813": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "ADD",
      "path": "42"
    },
    "6814": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "ADD",
      "path": "42"
    },
    "6815": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13475,
        13487
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6816": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6818": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6819": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1ACC"
    },
    "6822": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "6823": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "6824": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6825": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6832": {
      "op": "SHL"
    },
    "6833": {
      "op": "SUB"
    },
    "6834": {
      "op": "SWAP4"
    },
    "6835": {
      "op": "DUP5"
    },
    "6836": {
      "op": "AND"
    },
    "6837": {
      "op": "DUP2"
    },
    "6838": {
      "op": "MSTORE"
    },
    "6839": {
      "op": "SWAP2"
    },
    "6840": {
      "op": "DUP4"
    },
    "6841": {
      "op": "AND"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6844": {
      "op": "DUP4"
    },
    "6845": {
      "op": "ADD"
    },
    "6846": {
      "op": "MSTORE"
    },
    "6847": {
      "op": "SWAP1"
    },
    "6848": {
      "op": "SWAP2"
    },
    "6849": {
      "op": "AND"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6852": {
      "op": "DUP3"
    },
    "6853": {
      "op": "ADD"
    },
    "6854": {
      "op": "MSTORE"
    },
    "6855": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6857": {
      "op": "ADD"
    },
    "6858": {
      "op": "SWAP1"
    },
    "6859": {
      "op": "JUMP"
    },
    "6860": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6861": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6863": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6864": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6865": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6866": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "SUB",
      "path": "42"
    },
    "6867": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6868": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        13447,
        13488
      ],
      "op": "LOG1",
      "path": "42"
    },
    "6869": {
      "op": "POP"
    },
    "6870": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6872": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6874": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6875": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "6876": {
      "fn": "ERC20Template.deployPool",
      "offset": [
        12622,
        13495
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "6877": {
      "op": "POP"
    },
    "6878": {
      "op": "POP"
    },
    "6879": {
      "op": "POP"
    },
    "6880": {
      "fn": "ERC20Template.deployPool",
      "jump": "o",
      "offset": [
        12622,
        13495
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6881": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "6882": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35406,
        35422
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x60"
    },
    "6884": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35441,
        35454
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 48,
      "value": "0x13"
    },
    "6886": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6887": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "6888": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6889": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6891": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "MUL",
      "path": "42"
    },
    "6892": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6894": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "ADD",
      "path": "42"
    },
    "6895": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6897": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "6898": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6899": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6900": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "ADD",
      "path": "42"
    },
    "6901": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "6903": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6904": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6905": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "6906": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6907": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6908": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6909": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6910": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6911": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6913": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "ADD",
      "path": "42"
    },
    "6914": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6915": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6916": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "6917": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6918": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "6919": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA9C"
    },
    "6922": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6923": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6925": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "MUL",
      "path": "42"
    },
    "6926": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP3",
      "path": "42"
    },
    "6927": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "ADD",
      "path": "42"
    },
    "6928": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6929": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6930": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "6932": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6933": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6935": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "6937": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "6938": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6939": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6940": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6947": {
      "op": "SHL"
    },
    "6948": {
      "op": "SUB"
    },
    "6949": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "AND",
      "path": "42"
    },
    "6950": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP2",
      "path": "42"
    },
    "6951": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "6952": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "6954": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6955": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "6956": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "ADD",
      "path": "42"
    },
    "6957": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6958": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "6960": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "ADD",
      "path": "42"
    },
    "6961": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP1",
      "path": "42"
    },
    "6962": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "DUP4",
      "path": "42"
    },
    "6963": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "GT",
      "path": "42"
    },
    "6964": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x11D4"
    },
    "6967": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "6968": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "POP",
      "path": "42"
    },
    "6969": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "POP",
      "path": "42"
    },
    "6970": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "POP",
      "path": "42"
    },
    "6971": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "POP",
      "path": "42"
    },
    "6972": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "POP",
      "path": "42"
    },
    "6973": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6974": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35434,
        35455
      ],
      "op": "POP",
      "path": "42"
    },
    "6975": {
      "fn": "ERC20Template.getPools",
      "offset": [
        35366,
        35462
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "6976": {
      "fn": "ERC20Template.getPools",
      "jump": "o",
      "offset": [
        35366,
        35462
      ],
      "op": "JUMP",
      "path": "42"
    },
    "6977": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6978": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        958,
        982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6980": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        985,
        1017
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4D"
    },
    "6983": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        995,
        1002
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6984": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6985": {
      "fn": "ERC20.allowance",
      "offset": [
        3884,
        4033
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x970"
    },
    "6988": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3884,
        4033
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6989": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        985,
        1017
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6990": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        958,
        1017
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6991": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        958,
        1017
      ],
      "op": "POP",
      "path": "5"
    },
    "6992": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1055,
        1061
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 49
    },
    "6993": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1035,
        1051
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6994": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1035,
        1061
      ],
      "op": "LT",
      "path": "5"
    },
    "6995": {
      "branch": 249,
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1035,
        1061
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6996": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BAB"
    },
    "6999": {
      "branch": 249,
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7000": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7002": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7009": {
      "op": "SHL"
    },
    "7010": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7011": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7014": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7016": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7017": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "ADD",
      "path": "5"
    },
    "7018": {
      "op": "MSTORE"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7021": {
      "op": "DUP1"
    },
    "7022": {
      "op": "DUP3"
    },
    "7023": {
      "op": "ADD"
    },
    "7024": {
      "op": "MSTORE"
    },
    "7025": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77"
    },
    "7058": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7060": {
      "op": "DUP3"
    },
    "7061": {
      "op": "ADD"
    },
    "7062": {
      "op": "MSTORE"
    },
    "7063": {
      "op": "PUSH4",
      "value": "0x616E6365"
    },
    "7068": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7070": {
      "op": "SHL"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7073": {
      "op": "DUP3"
    },
    "7074": {
      "op": "ADD"
    },
    "7075": {
      "op": "MSTORE"
    },
    "7076": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7078": {
      "op": "ADD"
    },
    "7079": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD0"
    },
    "7082": {
      "op": "JUMP"
    },
    "7083": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1027,
        1102
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7084": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1136,
        1194
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 50,
      "value": "0x1BB8"
    },
    "7087": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1145,
        1152
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7088": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "7089": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1187,
        1193
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7090": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7091": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1168,
        1193
      ],
      "op": "SUB",
      "path": "5"
    },
    "7092": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1136,
        1144
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3046"
    },
    "7095": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        1136,
        1194
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7096": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1136,
        1194
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7097": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1214,
        1236
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 51,
      "value": "0x1BC2"
    },
    "7100": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1220,
        1227
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7101": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1229,
        1235
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7102": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1214,
        1219
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39E0"
    },
    "7105": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "i",
      "offset": [
        1214,
        1236
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7106": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        1214,
        1236
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7107": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        948,
        1243
      ],
      "op": "POP",
      "path": "5"
    },
    "7108": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "POP",
      "path": "5"
    },
    "7109": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "POP",
      "path": "5"
    },
    "7110": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "o",
      "offset": [
        882,
        1243
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7111": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19128,
        21713
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7112": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7114": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7116": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7117": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "7118": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7119": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BEA"
    },
    "7122": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7123": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7125": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7126": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7130": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7132": {
      "op": "SHL"
    },
    "7133": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7134": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7135": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7137": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "7138": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD0"
    },
    "7141": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7142": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5789"
    },
    "7145": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7146": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7147": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7149": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7151": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7152": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19440,
        19450
      ],
      "op": "CALLER",
      "path": "42",
      "statement": 52
    },
    "7153": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3400,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7155": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7156": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7157": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7158": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7160": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7161": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7162": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7163": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7165": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7166": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7167": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3426,
        3444
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7168": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19355,
        19359
      ],
      "op": "PUSH8",
      "path": "42",
      "value": "0xDE0B6B3A7640000"
    },
    "7177": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19355,
        19359
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7178": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19355,
        19359
      ],
      "op": "DUP2",
      "path": "42"
    },
    "7179": {
      "op": "GT"
    },
    "7180": {
      "branch": 199,
      "fn": "ERC20Template.startOrder",
      "offset": [
        19430,
        19461
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7181": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1C64"
    },
    "7184": {
      "branch": 199,
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "7185": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7187": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7194": {
      "op": "SHL"
    },
    "7195": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "DUP2",
      "path": "42"
    },
    "7196": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "7197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7199": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "7201": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7202": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "ADD",
      "path": "42"
    },
    "7203": {
      "op": "MSTORE"
    },
    "7204": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7206": {
      "op": "DUP1"
    },
    "7207": {
      "op": "DUP3"
    },
    "7208": {
      "op": "ADD"
    },
    "7209": {
      "op": "MSTORE"
    },
    "7210": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F7567682064617461746F6B656E7320746F207374617274204F"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7245": {
      "op": "DUP3"
    },
    "7246": {
      "op": "ADD"
    },
    "7247": {
      "op": "MSTORE"
    },
    "7248": {
      "op": "PUSH4",
      "value": "0x393232B9"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7255": {
      "op": "SHL"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7258": {
      "op": "DUP3"
    },
    "7259": {
      "op": "ADD"
    },
    "7260": {
      "op": "MSTORE"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7263": {
      "op": "ADD"
    },
    "7264": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "7267": {
      "op": "JUMP"
    },
    "7268": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19409,
        19523
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7269": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19685,
        19708
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 53,
      "value": "0xD"
    },
    "7271": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19685,
        19708
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7272": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7274": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7275": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7276": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19586,
        19596
      ],
      "op": "CALLER",
      "path": "42"
    },
    "7277": {
      "op": "DUP2"
    },
    "7278": {
      "op": "MSTORE"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7281": {
      "op": "DUP2"
    },
    "7282": {
      "op": "ADD"
    },
    "7283": {
      "op": "DUP5"
    },
    "7284": {
      "op": "SWAP1"
    },
    "7285": {
      "op": "MSTORE"
    },
    "7286": {
      "op": "SWAP1"
    },
    "7287": {
      "op": "DUP2"
    },
    "7288": {
      "op": "ADD"
    },
    "7289": {
      "op": "DUP7"
    },
    "7290": {
      "op": "SWAP1"
    },
    "7291": {
      "op": "MSTORE"
    },
    "7292": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19656,
        19671
      ],
      "op": "TIMESTAMP",
      "path": "42"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7295": {
      "op": "DUP3"
    },
    "7296": {
      "op": "ADD"
    },
    "7297": {
      "op": "MSTORE"
    },
    "7298": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19722,
        19734
      ],
      "op": "NUMBER",
      "path": "42"
    },
    "7299": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7301": {
      "op": "DUP3"
    },
    "7302": {
      "op": "ADD"
    },
    "7303": {
      "op": "MSTORE"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7310": {
      "op": "SHL"
    },
    "7311": {
      "op": "SUB"
    },
    "7312": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19685,
        19708
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7313": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19685,
        19708
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7314": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19685,
        19708
      ],
      "op": "AND",
      "path": "42"
    },
    "7315": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19685,
        19708
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7316": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "DUP8",
      "path": "42"
    },
    "7317": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "AND",
      "path": "42"
    },
    "7318": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7319": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0xE1C4FA794EDFA8F619B8257A077398950357B9C6398528F94480307352F9AFCC"
    },
    "7352": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7355": {
      "op": "ADD"
    },
    "7356": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7358": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7359": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7360": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7361": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "SUB",
      "path": "42"
    },
    "7362": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7363": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19538,
        19744
      ],
      "op": "LOG3",
      "path": "42"
    },
    "7364": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20000,
        20001
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "7366": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        19997
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xF"
    },
    "7368": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        19997
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7369": {
      "branch": 200,
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20001
      ],
      "op": "GT",
      "path": "42"
    },
    "7370": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20052
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7371": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20052
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7372": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20052
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1CDF"
    },
    "7375": {
      "branch": 200,
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20052
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "7376": {
      "op": "POP"
    },
    "7377": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20017,
        20038
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE"
    },
    "7379": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20017,
        20038
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7386": {
      "op": "SHL"
    },
    "7387": {
      "op": "SUB"
    },
    "7388": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20017,
        20038
      ],
      "op": "AND",
      "path": "42"
    },
    "7389": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20017,
        20052
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7390": {
      "branch": 201,
      "fn": "ERC20Template.startOrder",
      "offset": [
        20017,
        20052
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7391": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20052
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7392": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20105
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7393": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20105
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7394": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20105
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1CF5"
    },
    "7397": {
      "branch": 201,
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20105
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "7398": {
      "op": "POP"
    },
    "7399": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20068,
        20091
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xD"
    },
    "7401": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20068,
        20091
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7408": {
      "op": "SHL"
    },
    "7409": {
      "op": "SUB"
    },
    "7410": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20068,
        20091
      ],
      "op": "AND",
      "path": "42"
    },
    "7411": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20068,
        20105
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7412": {
      "branch": 202,
      "fn": "ERC20Template.startOrder",
      "offset": [
        20068,
        20105
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7413": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19975,
        20105
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7414": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19958,
        20453
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7415": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19958,
        20453
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1D6A"
    },
    "7418": {
      "branch": 202,
      "fn": "ERC20Template.startOrder",
      "offset": [
        19958,
        20453
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "7419": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20146,
        20167
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 54,
      "value": "0xE"
    },
    "7421": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20146,
        20167
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7422": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20196,
        20219
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xD"
    },
    "7424": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20196,
        20219
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7425": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20237,
        20259
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xF"
    },
    "7427": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20237,
        20259
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7428": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20130,
        20260
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1D1D"
    },
    "7431": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20130,
        20260
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7438": {
      "op": "SHL"
    },
    "7439": {
      "op": "SUB"
    },
    "7440": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20146,
        20167
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7441": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20146,
        20167
      ],
      "op": "DUP2",
      "path": "42"
    },
    "7442": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20146,
        20167
      ],
      "op": "AND",
      "path": "42"
    },
    "7443": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20146,
        20167
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "7444": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20168,
        20178
      ],
      "op": "CALLER",
      "path": "42"
    },
    "7445": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20168,
        20178
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "7446": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20196,
        20219
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7447": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20196,
        20219
      ],
      "op": "AND",
      "path": "42"
    },
    "7448": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20196,
        20219
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7449": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20130,
        20145
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x401E"
    },
    "7452": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        20130,
        20260
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7453": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20130,
        20260
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7454": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20367,
        20388
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 55,
      "value": "0xE"
    },
    "7456": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20367,
        20388
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7457": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20326,
        20349
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xD"
    },
    "7459": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20326,
        20349
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7460": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20406,
        20428
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xF"
    },
    "7462": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20406,
        20428
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7463": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7465": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7466": {
      "op": "SWAP1"
    },
    "7467": {
      "op": "DUP2"
    },
    "7468": {
      "op": "MSTORE"
    },
    "7469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7475": {
      "op": "SHL"
    },
    "7476": {
      "op": "SUB"
    },
    "7477": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20367,
        20388
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "7478": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20367,
        20388
      ],
      "op": "DUP4",
      "path": "42"
    },
    "7479": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20367,
        20388
      ],
      "op": "AND",
      "path": "42"
    },
    "7480": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20367,
        20388
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "7481": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20326,
        20349
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7482": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20326,
        20349
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7483": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20326,
        20349
      ],
      "op": "AND",
      "path": "42"
    },
    "7484": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20326,
        20349
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7485": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x4049A448AC6F0284A98D2CB9199E73605944EA5BEC901A037F88C84703DE82B2"
    },
    "7518": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7521": {
      "op": "ADD"
    },
    "7522": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7524": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7525": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7526": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7527": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "SUB",
      "path": "42"
    },
    "7528": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7529": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20292,
        20442
      ],
      "op": "LOG3",
      "path": "42"
    },
    "7530": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        19958,
        20453
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7531": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20689,
        20690
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "7533": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20663
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7534": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20686
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7536": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20686
      ],
      "op": "ADD",
      "path": "42"
    },
    "7537": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20686
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "7538": {
      "branch": 203,
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20690
      ],
      "op": "GT",
      "path": "42"
    },
    "7539": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20759
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7540": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20759
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7541": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20759
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1D97"
    },
    "7544": {
      "branch": 203,
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20759
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "7545": {
      "op": "POP"
    },
    "7546": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20757,
        20758
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "7548": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20745
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1D8B"
    },
    "7551": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7553": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20745
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7554": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20745
      ],
      "op": "ADD",
      "path": "42"
    },
    "7555": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "7557": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20745
      ],
      "op": "DUP6",
      "path": "42"
    },
    "7558": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20745
      ],
      "op": "ADD",
      "path": "42"
    },
    "7559": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20745
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "7562": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        20706,
        20745
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7563": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20745
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7570": {
      "op": "SHL"
    },
    "7571": {
      "op": "SUB"
    },
    "7572": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20759
      ],
      "op": "AND",
      "path": "42"
    },
    "7573": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20759
      ],
      "op": "EQ",
      "path": "42"
    },
    "7574": {
      "branch": 204,
      "fn": "ERC20Template.startOrder",
      "offset": [
        20706,
        20759
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7575": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20759
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7576": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20830
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7577": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20830
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7578": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20830
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1DB9"
    },
    "7581": {
      "branch": 204,
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20830
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "7582": {
      "op": "POP"
    },
    "7583": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20828,
        20829
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "7585": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20775,
        20816
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1DAD"
    },
    "7588": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20775,
        20816
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "7590": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20775,
        20816
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7591": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20775,
        20816
      ],
      "op": "ADD",
      "path": "42"
    },
    "7592": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20775,
        20792
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7593": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20775,
        20816
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "7596": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        20775,
        20816
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7597": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20775,
        20816
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7604": {
      "op": "SHL"
    },
    "7605": {
      "op": "SUB"
    },
    "7606": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20775,
        20830
      ],
      "op": "AND",
      "path": "42"
    },
    "7607": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20775,
        20830
      ],
      "op": "EQ",
      "path": "42"
    },
    "7608": {
      "branch": 205,
      "fn": "ERC20Template.startOrder",
      "offset": [
        20775,
        20830
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7609": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20646,
        20830
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7610": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20629,
        21273
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7611": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20629,
        21273
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1E56"
    },
    "7614": {
      "branch": 205,
      "fn": "ERC20Template.startOrder",
      "offset": [
        20629,
        21273
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "7615": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20855,
        21039
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 56,
      "value": "0x1DE9"
    },
    "7618": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20871,
        20910
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1DD1"
    },
    "7621": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20871,
        20910
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7623": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20871,
        20910
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7624": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20871,
        20910
      ],
      "op": "ADD",
      "path": "42"
    },
    "7625": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20871,
        20910
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "7627": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20871,
        20910
      ],
      "op": "DUP6",
      "path": "42"
    },
    "7628": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20871,
        20910
      ],
      "op": "ADD",
      "path": "42"
    },
    "7629": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20871,
        20910
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "7632": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        20871,
        20910
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7633": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20871,
        20910
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7634": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20911,
        20921
      ],
      "op": "CALLER",
      "path": "42"
    },
    "7635": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20939,
        20980
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1DDF"
    },
    "7638": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20939,
        20980
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "7640": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20939,
        20980
      ],
      "op": "DUP7",
      "path": "42"
    },
    "7641": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20939,
        20980
      ],
      "op": "ADD",
      "path": "42"
    },
    "7642": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20939,
        20956
      ],
      "op": "DUP7",
      "path": "42"
    },
    "7643": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20939,
        20980
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "7646": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        20939,
        20980
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7647": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20939,
        20980
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7648": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20998,
        21015
      ],
      "op": "DUP6",
      "path": "42"
    },
    "7649": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20998,
        21038
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7651": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20998,
        21038
      ],
      "op": "ADD",
      "path": "42"
    },
    "7652": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20998,
        21038
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "7653": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20855,
        20870
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x401E"
    },
    "7656": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        20855,
        21039
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7657": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20855,
        21039
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7658": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21151,
        21190
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 57,
      "value": "0x1DF9"
    },
    "7661": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21151,
        21190
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7663": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21151,
        21190
      ],
      "op": "DUP4",
      "path": "42"
    },
    "7664": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21151,
        21190
      ],
      "op": "ADD",
      "path": "42"
    },
    "7665": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21151,
        21190
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "7667": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21151,
        21190
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7668": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21151,
        21190
      ],
      "op": "ADD",
      "path": "42"
    },
    "7669": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21151,
        21190
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "7672": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        21151,
        21190
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7673": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21151,
        21190
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7680": {
      "op": "SHL"
    },
    "7681": {
      "op": "SUB"
    },
    "7682": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "AND",
      "path": "42"
    },
    "7683": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21092,
        21133
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1E0F"
    },
    "7686": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21092,
        21133
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "7688": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21092,
        21133
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7689": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21092,
        21133
      ],
      "op": "ADD",
      "path": "42"
    },
    "7690": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21092,
        21109
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7691": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21092,
        21133
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "7694": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        21092,
        21133
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7695": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21092,
        21133
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7702": {
      "op": "SHL"
    },
    "7703": {
      "op": "SUB"
    },
    "7704": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "AND",
      "path": "42"
    },
    "7705": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x6D11837F46CC09B011CF4AAE09FCADE046C020AAC088090AE4F77FF67B707972"
    },
    "7738": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21208,
        21225
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7739": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21208,
        21248
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7741": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21208,
        21248
      ],
      "op": "ADD",
      "path": "42"
    },
    "7742": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21208,
        21248
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "7743": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7745": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7746": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1E4D"
    },
    "7749": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7750": {
      "op": "DUP2"
    },
    "7751": {
      "op": "MSTORE"
    },
    "7752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7754": {
      "op": "ADD"
    },
    "7755": {
      "op": "SWAP1"
    },
    "7756": {
      "op": "JUMP"
    },
    "7757": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7758": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7760": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7761": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7762": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7763": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "SUB",
      "path": "42"
    },
    "7764": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7765": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21058,
        21262
      ],
      "op": "LOG3",
      "path": "42"
    },
    "7766": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        20629,
        21273
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7767": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21282,
        21313
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 58,
      "value": "0x1E5F"
    },
    "7770": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21300,
        21312
      ],
      "op": "DUP4",
      "path": "42"
    },
    "7771": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21282,
        21299
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x34E3"
    },
    "7774": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        21282,
        21313
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7775": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21282,
        21313
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7776": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21355,
        21361
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x12"
    },
    "7778": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21355,
        21361
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7779": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7781": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7782": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7783": {
      "op": "PUSH4",
      "value": "0x7D28354D"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7790": {
      "op": "SHL"
    },
    "7791": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP2",
      "path": "42"
    },
    "7792": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "7793": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7794": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7795": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21323,
        21337
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "7797": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21323,
        21337
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7804": {
      "op": "SHL"
    },
    "7805": {
      "op": "SUB"
    },
    "7806": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21355,
        21361
      ],
      "op": "AND",
      "path": "42"
    },
    "7807": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21355,
        21361
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7808": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21379
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x7D28354D"
    },
    "7813": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21379
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7814": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "7816": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7817": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP4",
      "path": "42"
    },
    "7818": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "ADD",
      "path": "42"
    },
    "7819": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "7820": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "7822": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "7823": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7824": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7825": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7826": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7827": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "SUB",
      "path": "42"
    },
    "7828": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "ADD",
      "path": "42"
    },
    "7829": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP2",
      "path": "42"
    },
    "7830": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21355,
        21361
      ],
      "op": "DUP7",
      "path": "42"
    },
    "7831": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "GAS",
      "path": "42"
    },
    "7832": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "7833": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7834": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7835": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "7836": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1EA9"
    },
    "7839": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "7840": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "7841": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "7843": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7844": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "7845": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "7846": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "7848": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "REVERT",
      "path": "42"
    },
    "7849": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7850": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "POP",
      "path": "42"
    },
    "7851": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "POP",
      "path": "42"
    },
    "7852": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "POP",
      "path": "42"
    },
    "7853": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "POP",
      "path": "42"
    },
    "7854": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7856": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7857": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "7858": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "7860": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "NOT",
      "path": "42"
    },
    "7861": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "7863": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7864": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "ADD",
      "path": "42"
    },
    "7865": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "AND",
      "path": "42"
    },
    "7866": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7867": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "ADD",
      "path": "42"
    },
    "7868": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7869": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7871": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "7872": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "POP",
      "path": "42"
    },
    "7873": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "DUP2",
      "path": "42"
    },
    "7874": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "ADD",
      "path": "42"
    },
    "7875": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7876": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1ECD"
    },
    "7879": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7880": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7881": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5804"
    },
    "7884": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        21340,
        21381
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7885": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21340,
        21381
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7886": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21323,
        21381
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7887": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21323,
        21381
      ],
      "op": "POP",
      "path": "42"
    },
    "7888": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21460,
        21511
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 59,
      "value": "0x1EE4"
    },
    "7891": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21469,
        21490
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1EDA"
    },
    "7894": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21469,
        21488
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2F83"
    },
    "7897": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        21469,
        21490
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7898": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21469,
        21490
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7899": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21492,
        21510
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x897"
    },
    "7902": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21492,
        21498
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7903": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21503,
        21509
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7904": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21492,
        21502
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x416C"
    },
    "7907": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        21492,
        21510
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7908": {
      "branch": 206,
      "fn": "ERC20Template.startOrder",
      "offset": [
        21460,
        21511
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7909": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1F30"
    },
    "7912": {
      "branch": 206,
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "7913": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7915": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7916": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7922": {
      "op": "SHL"
    },
    "7923": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "DUP2",
      "path": "42"
    },
    "7924": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "7925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7927": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "7929": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7930": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "ADD",
      "path": "42"
    },
    "7931": {
      "op": "MSTORE"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "7934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7936": {
      "op": "DUP3"
    },
    "7937": {
      "op": "ADD"
    },
    "7938": {
      "op": "MSTORE"
    },
    "7939": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F2073656E6420445420746F207075626C69736865720000"
    },
    "7972": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7974": {
      "op": "DUP3"
    },
    "7975": {
      "op": "ADD"
    },
    "7976": {
      "op": "MSTORE"
    },
    "7977": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7979": {
      "op": "ADD"
    },
    "7980": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "7983": {
      "op": "JUMP"
    },
    "7984": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21439,
        21567
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7985": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21622,
        21628
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 60,
      "value": "0x12"
    },
    "7987": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21622,
        21628
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7988": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7990": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7991": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7992": {
      "op": "PUSH4",
      "value": "0x1A81876D"
    },
    "7997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7999": {
      "op": "SHL"
    },
    "8000": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8001": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8002": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8003": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8004": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21598,
        21656
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1FA5"
    },
    "8007": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21598,
        21656
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8014": {
      "op": "SHL"
    },
    "8015": {
      "op": "SUB"
    },
    "8016": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21622,
        21628
      ],
      "op": "AND",
      "path": "42"
    },
    "8017": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21622,
        21628
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8018": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21645
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x1A81876D"
    },
    "8023": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21645
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8024": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "8026": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8027": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP4",
      "path": "42"
    },
    "8028": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "ADD",
      "path": "42"
    },
    "8029": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8030": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8032": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8033": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8034": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8035": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8036": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8037": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "SUB",
      "path": "42"
    },
    "8038": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "ADD",
      "path": "42"
    },
    "8039": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8040": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21622,
        21628
      ],
      "op": "DUP7",
      "path": "42"
    },
    "8041": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "GAS",
      "path": "42"
    },
    "8042": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "8043": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "8044": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8045": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "8046": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1F7B"
    },
    "8049": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "8050": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "8051": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "8053": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8054": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "8055": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "8056": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "8058": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "REVERT",
      "path": "42"
    },
    "8059": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8060": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "POP",
      "path": "42"
    },
    "8061": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "POP",
      "path": "42"
    },
    "8062": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "POP",
      "path": "42"
    },
    "8063": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "POP",
      "path": "42"
    },
    "8064": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8066": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8067": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "8068": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "8070": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "NOT",
      "path": "42"
    },
    "8071": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "8073": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8074": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "ADD",
      "path": "42"
    },
    "8075": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "AND",
      "path": "42"
    },
    "8076": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8077": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "ADD",
      "path": "42"
    },
    "8078": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8079": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8081": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8082": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "POP",
      "path": "42"
    },
    "8083": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8084": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "ADD",
      "path": "42"
    },
    "8085": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8086": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1F9F"
    },
    "8089": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8090": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8091": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "8094": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        21607,
        21647
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8095": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21607,
        21647
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8096": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21649,
        21655
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8097": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21598,
        21606
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x291A"
    },
    "8100": {
      "fn": "ERC20Template.startOrder",
      "jump": "i",
      "offset": [
        21598,
        21656
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8101": {
      "branch": 207,
      "fn": "ERC20Template.startOrder",
      "offset": [
        21598,
        21656
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8102": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1FF1"
    },
    "8105": {
      "branch": 207,
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "8106": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8108": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8109": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8115": {
      "op": "SHL"
    },
    "8116": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8117": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8120": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "8122": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8123": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "ADD",
      "path": "42"
    },
    "8124": {
      "op": "MSTORE"
    },
    "8125": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8129": {
      "op": "DUP3"
    },
    "8130": {
      "op": "ADD"
    },
    "8131": {
      "op": "MSTORE"
    },
    "8132": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F2073656E6420445420746F204F50430000000000000000"
    },
    "8165": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8167": {
      "op": "DUP3"
    },
    "8168": {
      "op": "ADD"
    },
    "8169": {
      "op": "MSTORE"
    },
    "8170": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8172": {
      "op": "ADD"
    },
    "8173": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "8176": {
      "op": "JUMP"
    },
    "8177": {
      "fn": "ERC20Template.startOrder",
      "offset": [
        21577,
        21706
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8178": {
      "op": "POP"
    },
    "8179": {
      "op": "POP"
    },
    "8180": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8182": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8184": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8185": {
      "op": "POP"
    },
    "8186": {
      "op": "POP"
    },
    "8187": {
      "op": "POP"
    },
    "8188": {
      "op": "POP"
    },
    "8189": {
      "fn": "ERC20Template.startOrder",
      "jump": "o",
      "offset": [
        19128,
        21713
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8190": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8191": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35632,
        35650
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x60"
    },
    "8193": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35669,
        35687
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 61,
      "value": "0x14"
    },
    "8195": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8196": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "8197": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8198": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8200": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MUL",
      "path": "42"
    },
    "8201": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8203": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "ADD",
      "path": "42"
    },
    "8204": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8206": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8207": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8208": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8209": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "ADD",
      "path": "42"
    },
    "8210": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8212": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8213": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8214": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8215": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8216": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8217": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8218": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8219": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8220": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8222": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "ADD",
      "path": "42"
    },
    "8223": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "8225": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8226": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8227": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8228": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8229": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "LT",
      "path": "42"
    },
    "8230": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "8231": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x206A"
    },
    "8234": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "8235": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "8237": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP5",
      "path": "42"
    },
    "8238": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8239": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8240": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8242": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8243": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8244": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8245": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "8246": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8248": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8249": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8250": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8251": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8252": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "ADD",
      "path": "42"
    },
    "8253": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8254": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8255": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8256": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "8258": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP6",
      "path": "42"
    },
    "8259": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MUL",
      "path": "42"
    },
    "8260": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8261": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8262": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "ADD",
      "path": "42"
    },
    "8263": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8264": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "8265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8271": {
      "op": "SHL"
    },
    "8272": {
      "op": "SUB"
    },
    "8273": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "AND",
      "path": "42"
    },
    "8274": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8275": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8276": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "8278": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8279": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8280": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "ADD",
      "path": "42"
    },
    "8281": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "8282": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8283": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP5",
      "path": "42"
    },
    "8284": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "ADD",
      "path": "42"
    },
    "8285": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8286": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8287": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "DUP4",
      "path": "42"
    },
    "8288": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8289": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8290": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8291": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "ADD",
      "path": "42"
    },
    "8292": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8293": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "ADD",
      "path": "42"
    },
    "8294": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2022"
    },
    "8297": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8298": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8299": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "POP",
      "path": "42"
    },
    "8300": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "POP",
      "path": "42"
    },
    "8301": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "POP",
      "path": "42"
    },
    "8302": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "POP",
      "path": "42"
    },
    "8303": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8304": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35662,
        35688
      ],
      "op": "POP",
      "path": "42"
    },
    "8305": {
      "fn": "ERC20Template.getFixedRates",
      "offset": [
        35587,
        35695
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8306": {
      "fn": "ERC20Template.getFixedRates",
      "jump": "o",
      "offset": [
        35587,
        35695
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8307": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24946,
        25148
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8308": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        25024,
        25038
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 62,
      "value": "0xB"
    },
    "8310": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        25024,
        25038
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "8311": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        25024,
        25038
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "8314": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        25024,
        25038
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8315": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        25024,
        25038
      ],
      "op": "DIV",
      "path": "42"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8322": {
      "op": "SHL"
    },
    "8323": {
      "op": "SUB"
    },
    "8324": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        25024,
        25038
      ],
      "op": "AND",
      "path": "42"
    },
    "8325": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        25010,
        25020
      ],
      "op": "CALLER",
      "path": "42"
    },
    "8326": {
      "branch": 208,
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        25010,
        25038
      ],
      "op": "EQ",
      "path": "42"
    },
    "8327": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24989,
        25095
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x12CC"
    },
    "8330": {
      "branch": 208,
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24989,
        25095
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "8331": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24989,
        25095
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8333": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24989,
        25095
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8340": {
      "op": "SHL"
    },
    "8341": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24989,
        25095
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8342": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24989,
        25095
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8345": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24989,
        25095
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "8347": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24989,
        25095
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8348": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24989,
        25095
      ],
      "op": "ADD",
      "path": "42"
    },
    "8349": {
      "op": "MSTORE"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8354": {
      "op": "DUP3"
    },
    "8355": {
      "op": "ADD"
    },
    "8356": {
      "op": "MSTORE"
    },
    "8357": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A204E4F542037323120436F6E747261637400"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8392": {
      "op": "DUP3"
    },
    "8393": {
      "op": "ADD"
    },
    "8394": {
      "op": "MSTORE"
    },
    "8395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8397": {
      "op": "ADD"
    },
    "8398": {
      "fn": "ERC20Template.cleanFrom721",
      "offset": [
        24989,
        25095
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "8401": {
      "op": "JUMP"
    },
    "8402": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8403": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36947,
        36957
      ],
      "op": "CALLER",
      "path": "42",
      "statement": 63
    },
    "8404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8410": {
      "op": "SHL"
    },
    "8411": {
      "op": "SUB"
    },
    "8412": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36947,
        36976
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8413": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36947,
        36976
      ],
      "op": "AND",
      "path": "42"
    },
    "8414": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36947,
        36976
      ],
      "op": "EQ",
      "path": "42"
    },
    "8415": {
      "branch": 209,
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36947,
        36976
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "8416": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x212B"
    },
    "8419": {
      "branch": 209,
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "8420": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8422": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8427": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8429": {
      "op": "SHL"
    },
    "8430": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8431": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8434": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "8436": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8437": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "ADD",
      "path": "42"
    },
    "8438": {
      "op": "MSTORE"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8443": {
      "op": "DUP3"
    },
    "8444": {
      "op": "ADD"
    },
    "8445": {
      "op": "MSTORE"
    },
    "8446": {
      "op": "PUSH32",
      "value": "0x50726F76696465722063616E6E6F742062652074686520636F6E73756D657200"
    },
    "8479": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8481": {
      "op": "DUP3"
    },
    "8482": {
      "op": "ADD"
    },
    "8483": {
      "op": "MSTORE"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8486": {
      "op": "ADD"
    },
    "8487": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "8490": {
      "op": "JUMP"
    },
    "8491": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36939,
        37012
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8492": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37041
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "8494": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8496": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8497": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8498": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8500": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "ADD",
      "path": "42"
    },
    "8501": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8503": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8504": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8505": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1C"
    },
    "8507": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8508": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8509": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8511": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "ADD",
      "path": "42"
    },
    "8512": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "8545": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8546": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8547": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "POP",
      "path": "42"
    },
    "8548": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8549": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37022,
        37078
      ],
      "op": "POP",
      "path": "42"
    },
    "8550": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37088,
        37108
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "8552": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37151,
        37157
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8553": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37248,
        37257
      ],
      "op": "DUP13",
      "path": "42"
    },
    "8554": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37283,
        37295
      ],
      "op": "DUP13",
      "path": "42"
    },
    "8555": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37283,
        37295
      ],
      "op": "DUP13",
      "path": "42"
    },
    "8556": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8558": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8559": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8561": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "ADD",
      "path": "42"
    },
    "8562": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x217D"
    },
    "8565": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "8566": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8567": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8568": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8569": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x58B8"
    },
    "8572": {
      "fn": "ERC20Template.orderExecuted",
      "jump": "i",
      "offset": [
        37206,
        37317
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8573": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8574": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8576": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8577": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8579": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8580": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "DUP4",
      "path": "42"
    },
    "8581": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "SUB",
      "path": "42"
    },
    "8582": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "SUB",
      "path": "42"
    },
    "8583": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8584": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8585": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8586": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8588": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37206,
        37317
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8589": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37175,
        37335
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8590": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37175,
        37335
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8591": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37175,
        37335
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8592": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37175,
        37335
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8594": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37175,
        37335
      ],
      "op": "ADD",
      "path": "42"
    },
    "8595": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37175,
        37335
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "8596": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8598": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8599": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8601": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "ADD",
      "path": "42"
    },
    "8602": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x21A4"
    },
    "8605": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8606": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8607": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8608": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x58D2"
    },
    "8611": {
      "fn": "ERC20Template.orderExecuted",
      "jump": "i",
      "offset": [
        37134,
        37349
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8612": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8613": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8615": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8616": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8618": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8619": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "DUP4",
      "path": "42"
    },
    "8620": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "SUB",
      "path": "42"
    },
    "8621": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "SUB",
      "path": "42"
    },
    "8622": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8623": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8624": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8625": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8627": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37134,
        37349
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8628": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37111,
        37359
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8629": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37111,
        37359
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8630": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37111,
        37359
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8631": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37111,
        37359
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8633": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37111,
        37359
      ],
      "op": "ADD",
      "path": "42"
    },
    "8634": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37111,
        37359
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "8635": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37088,
        37359
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8636": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37088,
        37359
      ],
      "op": "POP",
      "path": "42"
    },
    "8637": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37425,
        37435
      ],
      "op": "CALLER",
      "path": "42",
      "statement": 64
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8644": {
      "op": "SHL"
    },
    "8645": {
      "op": "SUB"
    },
    "8646": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37435
      ],
      "op": "AND",
      "path": "42"
    },
    "8647": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2206"
    },
    "8650": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37389,
        37401
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8651": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37403,
        37420
      ],
      "op": "DUP12",
      "path": "42"
    },
    "8652": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37403,
        37420
      ],
      "op": "DUP12",
      "path": "42"
    },
    "8653": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8654": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8655": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "8657": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "ADD",
      "path": "42"
    },
    "8658": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8660": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8661": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8662": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DIV",
      "path": "42"
    },
    "8663": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "MUL",
      "path": "42"
    },
    "8664": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8666": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "ADD",
      "path": "42"
    },
    "8667": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8669": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8670": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8671": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8672": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "ADD",
      "path": "42"
    },
    "8673": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8675": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8676": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8677": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "8678": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8679": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8680": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8681": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8682": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8683": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8684": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8686": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "ADD",
      "path": "42"
    },
    "8687": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP4",
      "path": "42"
    },
    "8688": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP4",
      "path": "42"
    },
    "8689": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8690": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8691": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "DUP5",
      "path": "42"
    },
    "8692": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "CALLDATACOPY",
      "path": "42"
    },
    "8693": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "8695": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8696": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "ADD",
      "path": "42"
    },
    "8697": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8698": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8699": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8700": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8701": {
      "op": "POP"
    },
    "8702": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37388
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4178"
    },
    "8705": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37388
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8706": {
      "op": "POP"
    },
    "8707": {
      "op": "POP"
    },
    "8708": {
      "op": "POP"
    },
    "8709": {
      "fn": "ERC20Template.orderExecuted",
      "jump": "i",
      "offset": [
        37377,
        37421
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8710": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37421
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8717": {
      "op": "SHL"
    },
    "8718": {
      "op": "SUB"
    },
    "8719": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37435
      ],
      "op": "AND",
      "path": "42"
    },
    "8720": {
      "branch": 210,
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37377,
        37435
      ],
      "op": "EQ",
      "path": "42"
    },
    "8721": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x225C"
    },
    "8724": {
      "branch": 210,
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "8725": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8727": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8734": {
      "op": "SHL"
    },
    "8735": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8736": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8739": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "8741": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8742": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "ADD",
      "path": "42"
    },
    "8743": {
      "op": "MSTORE"
    },
    "8744": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8748": {
      "op": "DUP3"
    },
    "8749": {
      "op": "ADD"
    },
    "8750": {
      "op": "MSTORE"
    },
    "8751": {
      "op": "PUSH32",
      "value": "0x50726F7669646572207369676E617475726520636865636B206661696C656400"
    },
    "8784": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8786": {
      "op": "DUP3"
    },
    "8787": {
      "op": "ADD"
    },
    "8788": {
      "op": "MSTORE"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8791": {
      "op": "ADD"
    },
    "8792": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "8795": {
      "op": "JUMP"
    },
    "8796": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37369,
        37471
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8797": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37481,
        37501
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "8799": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37544,
        37550
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8800": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37641,
        37653
      ],
      "op": "DUP9",
      "path": "42"
    },
    "8801": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37641,
        37653
      ],
      "op": "DUP9",
      "path": "42"
    },
    "8802": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8804": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8805": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8807": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "ADD",
      "path": "42"
    },
    "8808": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2272"
    },
    "8811": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8812": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8813": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8814": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x58F4"
    },
    "8817": {
      "fn": "ERC20Template.orderExecuted",
      "jump": "i",
      "offset": [
        37599,
        37675
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8818": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8819": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8821": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8822": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8824": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8825": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "DUP4",
      "path": "42"
    },
    "8826": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "SUB",
      "path": "42"
    },
    "8827": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "SUB",
      "path": "42"
    },
    "8828": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8829": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8830": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8831": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8833": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37599,
        37675
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8834": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37568,
        37693
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8835": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37568,
        37693
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8836": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37568,
        37693
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8837": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37568,
        37693
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8839": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37568,
        37693
      ],
      "op": "ADD",
      "path": "42"
    },
    "8840": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37568,
        37693
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "8841": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8843": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8844": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8846": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "ADD",
      "path": "42"
    },
    "8847": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2299"
    },
    "8850": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8851": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8852": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8853": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x58D2"
    },
    "8856": {
      "fn": "ERC20Template.orderExecuted",
      "jump": "i",
      "offset": [
        37527,
        37707
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8857": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8858": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8860": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8861": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8863": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8864": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "DUP4",
      "path": "42"
    },
    "8865": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "SUB",
      "path": "42"
    },
    "8866": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "SUB",
      "path": "42"
    },
    "8867": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8868": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8869": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8870": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8872": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37527,
        37707
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8873": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37504,
        37717
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8874": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37504,
        37717
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8875": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37504,
        37717
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8876": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37504,
        37717
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8878": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37504,
        37717
      ],
      "op": "ADD",
      "path": "42"
    },
    "8879": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37504,
        37717
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "8880": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37481,
        37717
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8881": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37481,
        37717
      ],
      "op": "POP",
      "path": "42"
    },
    "8882": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37783,
        37798
      ],
      "op": "DUP4",
      "path": "42",
      "statement": 65
    },
    "8883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8887": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8889": {
      "op": "SHL"
    },
    "8890": {
      "op": "SUB"
    },
    "8891": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37798
      ],
      "op": "AND",
      "path": "42"
    },
    "8892": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x22FB"
    },
    "8895": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37747,
        37759
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8896": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37761,
        37778
      ],
      "op": "DUP9",
      "path": "42"
    },
    "8897": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37761,
        37778
      ],
      "op": "DUP9",
      "path": "42"
    },
    "8898": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8899": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8900": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "8902": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "ADD",
      "path": "42"
    },
    "8903": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8905": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8906": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8907": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DIV",
      "path": "42"
    },
    "8908": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "MUL",
      "path": "42"
    },
    "8909": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8911": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "ADD",
      "path": "42"
    },
    "8912": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8914": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8915": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8916": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8917": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "ADD",
      "path": "42"
    },
    "8918": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8920": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8921": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8922": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "8923": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8924": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8925": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8926": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8927": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8928": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8929": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "8931": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "ADD",
      "path": "42"
    },
    "8932": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP4",
      "path": "42"
    },
    "8933": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP4",
      "path": "42"
    },
    "8934": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP1",
      "path": "42"
    },
    "8935": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8936": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "DUP5",
      "path": "42"
    },
    "8937": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "CALLDATACOPY",
      "path": "42"
    },
    "8938": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "8940": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8941": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "ADD",
      "path": "42"
    },
    "8942": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8943": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "8944": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "8945": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8946": {
      "op": "POP"
    },
    "8947": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37746
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4178"
    },
    "8950": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37746
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "8951": {
      "op": "POP"
    },
    "8952": {
      "op": "POP"
    },
    "8953": {
      "op": "POP"
    },
    "8954": {
      "fn": "ERC20Template.orderExecuted",
      "jump": "i",
      "offset": [
        37735,
        37779
      ],
      "op": "JUMP",
      "path": "42"
    },
    "8955": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37779
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8962": {
      "op": "SHL"
    },
    "8963": {
      "op": "SUB"
    },
    "8964": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37798
      ],
      "op": "AND",
      "path": "42"
    },
    "8965": {
      "branch": 211,
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37735,
        37798
      ],
      "op": "EQ",
      "path": "42"
    },
    "8966": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2351"
    },
    "8969": {
      "branch": 211,
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "8970": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "8972": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "8973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8979": {
      "op": "SHL"
    },
    "8980": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "DUP2",
      "path": "42"
    },
    "8981": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8984": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "8986": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "DUP3",
      "path": "42"
    },
    "8987": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "ADD",
      "path": "42"
    },
    "8988": {
      "op": "MSTORE"
    },
    "8989": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8991": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8993": {
      "op": "DUP3"
    },
    "8994": {
      "op": "ADD"
    },
    "8995": {
      "op": "MSTORE"
    },
    "8996": {
      "op": "PUSH32",
      "value": "0x436F6E73756D6572207369676E617475726520636865636B206661696C656400"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9031": {
      "op": "DUP3"
    },
    "9032": {
      "op": "ADD"
    },
    "9033": {
      "op": "MSTORE"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9036": {
      "op": "ADD"
    },
    "9037": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "9040": {
      "op": "JUMP"
    },
    "9041": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37727,
        37834
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9042": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37875,
        37890
      ],
      "op": "DUP4",
      "path": "42",
      "statement": 66
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9049": {
      "op": "SHL"
    },
    "9050": {
      "op": "SUB"
    },
    "9051": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "AND",
      "path": "42"
    },
    "9052": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37863,
        37873
      ],
      "op": "CALLER",
      "path": "42"
    },
    "9053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9059": {
      "op": "SHL"
    },
    "9060": {
      "op": "SUB"
    },
    "9061": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "AND",
      "path": "42"
    },
    "9062": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0xC9A10280E9C735C63092FA5431E6ACB3ED342E08B69A083E5E676994EB7070F9"
    },
    "9095": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37892,
        37901
      ],
      "op": "DUP16",
      "path": "42"
    },
    "9096": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37903,
        37915
      ],
      "op": "DUP16",
      "path": "42"
    },
    "9097": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37903,
        37915
      ],
      "op": "DUP16",
      "path": "42"
    },
    "9098": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37917,
        37934
      ],
      "op": "DUP16",
      "path": "42"
    },
    "9099": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37917,
        37934
      ],
      "op": "DUP16",
      "path": "42"
    },
    "9100": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37952,
        37964
      ],
      "op": "DUP16",
      "path": "42"
    },
    "9101": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37952,
        37964
      ],
      "op": "DUP16",
      "path": "42"
    },
    "9102": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37966,
        37983
      ],
      "op": "DUP16",
      "path": "42"
    },
    "9103": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37966,
        37983
      ],
      "op": "DUP16",
      "path": "42"
    },
    "9104": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37985,
        38000
      ],
      "op": "TIMESTAMP",
      "path": "42"
    },
    "9105": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        38002,
        38014
      ],
      "op": "NUMBER",
      "path": "42"
    },
    "9106": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9108": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9109": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x23A8"
    },
    "9112": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP12",
      "path": "42"
    },
    "9113": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP11",
      "path": "42"
    },
    "9114": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP10",
      "path": "42"
    },
    "9115": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP9",
      "path": "42"
    },
    "9116": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP8",
      "path": "42"
    },
    "9117": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP7",
      "path": "42"
    },
    "9118": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP6",
      "path": "42"
    },
    "9119": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP5",
      "path": "42"
    },
    "9120": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "9121": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "9122": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9123": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9124": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x592D"
    },
    "9127": {
      "fn": "ERC20Template.orderExecuted",
      "jump": "i",
      "offset": [
        37849,
        38015
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9128": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9129": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9131": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9132": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9133": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9134": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SUB",
      "path": "42"
    },
    "9135": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9136": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        37849,
        38015
      ],
      "op": "LOG3",
      "path": "42"
    },
    "9137": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36929,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9138": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36929,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9139": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36929,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9140": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9141": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9142": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9143": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9144": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9145": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9146": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9147": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9148": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9149": {
      "fn": "ERC20Template.orderExecuted",
      "offset": [
        36673,
        38022
      ],
      "op": "POP",
      "path": "42"
    },
    "9150": {
      "fn": "ERC20Template.orderExecuted",
      "jump": "o",
      "offset": [
        36673,
        38022
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9151": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        13857,
        14495
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9152": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "9154": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6058,
        6072
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9155": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9157": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9158": {
      "op": "PUSH4",
      "value": "0x160A7925"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9165": {
      "op": "SHL"
    },
    "9166": {
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9167": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9168": {
      "offset": [
        6106,
        6116
      ],
      "op": "CALLER",
      "path": "42"
    },
    "9169": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "9171": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9172": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "9173": {
      "op": "MSTORE"
    },
    "9174": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14040,
        14058
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9176": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14040,
        14058
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9177": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "9180": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9181": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6058,
        6072
      ],
      "op": "DIV",
      "path": "42"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9188": {
      "op": "SHL"
    },
    "9189": {
      "op": "SUB"
    },
    "9190": {
      "offset": [
        6058,
        6072
      ],
      "op": "AND",
      "path": "42"
    },
    "9191": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9192": {
      "offset": [
        6042,
        6105
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "9197": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6105
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9198": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9200": {
      "op": "ADD"
    },
    "9201": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "9203": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9205": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9206": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9207": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9208": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "SUB",
      "path": "42"
    },
    "9209": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9210": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP7",
      "path": "42"
    },
    "9211": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "GAS",
      "path": "42"
    },
    "9212": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "9213": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "9214": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9215": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "9216": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x240D"
    },
    "9219": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "9220": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "9221": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9223": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9224": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "9225": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "9226": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9228": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "REVERT",
      "path": "42"
    },
    "9229": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9230": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "9231": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "9232": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "9233": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "9234": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9236": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9237": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "9238": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "9240": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "NOT",
      "path": "42"
    },
    "9241": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "9243": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9244": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "9245": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "AND",
      "path": "42"
    },
    "9246": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9247": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "9248": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9249": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9251": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9252": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "9253": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9254": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "9255": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9256": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2431"
    },
    "9259": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9260": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9261": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56B3"
    },
    "9264": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9265": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9266": {
      "offset": [
        6042,
        6146
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9268": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6146
      ],
      "op": "ADD",
      "path": "42"
    },
    "9269": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6146
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9270": {
      "offset": [
        6042,
        6206
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9271": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6042,
        6206
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x24B8"
    },
    "9274": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "9275": {
      "op": "POP"
    },
    "9276": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "9278": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6166,
        6180
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9279": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9281": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9282": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "9287": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9289": {
      "op": "SHL"
    },
    "9290": {
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9291": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9292": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "9294": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "9296": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9297": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "9298": {
      "op": "MSTORE"
    },
    "9299": {
      "offset": [
        6196,
        6206
      ],
      "op": "CALLER",
      "path": "42"
    },
    "9300": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6196,
        6206
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9301": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "9304": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9305": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6166,
        6180
      ],
      "op": "DIV",
      "path": "42"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9312": {
      "op": "SHL"
    },
    "9313": {
      "op": "SUB"
    },
    "9314": {
      "offset": [
        6166,
        6180
      ],
      "op": "AND",
      "path": "42"
    },
    "9315": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9316": {
      "offset": [
        6150,
        6189
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "9321": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6189
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9324": {
      "op": "ADD"
    },
    "9325": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9327": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9329": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9330": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9331": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9332": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "SUB",
      "path": "42"
    },
    "9333": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9334": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP7",
      "path": "42"
    },
    "9335": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "GAS",
      "path": "42"
    },
    "9336": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "9337": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "9338": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9339": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "9340": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2489"
    },
    "9343": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "9344": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "9345": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9347": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9348": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "9349": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "9350": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9352": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "REVERT",
      "path": "42"
    },
    "9353": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9354": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "9355": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "9356": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "9357": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "9358": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9360": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9361": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "9362": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "9364": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "NOT",
      "path": "42"
    },
    "9365": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "9367": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9368": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "9369": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "AND",
      "path": "42"
    },
    "9370": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9371": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "9372": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9373": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9375": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9376": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "9377": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9378": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "9379": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9380": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x24AD"
    },
    "9383": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9384": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9385": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "9388": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9389": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9396": {
      "op": "SHL"
    },
    "9397": {
      "op": "SUB"
    },
    "9398": {
      "offset": [
        6150,
        6206
      ],
      "op": "AND",
      "path": "42"
    },
    "9399": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6150,
        6206
      ],
      "op": "EQ",
      "path": "42"
    },
    "9400": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9401": {
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x24D4"
    },
    "9404": {
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "9405": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9407": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6021,
        6264
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9414": {
      "op": "SHL"
    },
    "9415": {
      "offset": [
        6021,
        6264
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9416": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6021,
        6264
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9417": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "9419": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6021,
        6264
      ],
      "op": "ADD",
      "path": "42"
    },
    "9420": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "9423": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6021,
        6264
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9424": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5754"
    },
    "9427": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9428": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9429": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9431": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "9433": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9434": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "9435": {
      "branch": 260,
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9436": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24F7"
    },
    "9439": {
      "branch": 260,
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9440": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9442": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9449": {
      "op": "SHL"
    },
    "9450": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9451": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9452": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9454": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "9455": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD0"
    },
    "9458": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9459": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5789"
    },
    "9462": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9463": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9464": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9466": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "9468": {
      "offset": [
        2389,
        2407
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9469": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2389,
        2407
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9470": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9471": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2389,
        2407
      ],
      "op": "POP",
      "path": "2"
    },
    "9472": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14151,
        14152
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9474": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14145
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9475": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14146,
        14147
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "9477": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9478": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9479": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9480": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "LT",
      "path": "42"
    },
    "9481": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2514"
    },
    "9484": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "9485": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2514"
    },
    "9488": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "9491": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        14140,
        14148
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9492": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9493": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9495": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "MUL",
      "path": "42"
    },
    "9496": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9498": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "ADD",
      "path": "42"
    },
    "9499": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "ADD",
      "path": "42"
    },
    "9500": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14148
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9501": {
      "branch": 212,
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14140,
        14152
      ],
      "op": "GT",
      "path": "42"
    },
    "9502": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14136,
        14183
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "9503": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14136,
        14183
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x252B"
    },
    "9506": {
      "branch": 212,
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14136,
        14183
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "9507": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14154,
        14183
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 67,
      "value": "0x252B"
    },
    "9510": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14165,
        14182
      ],
      "op": "DUP5",
      "path": "42"
    },
    "9511": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14154,
        14164
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x316A"
    },
    "9514": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        14154,
        14183
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9515": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14154,
        14183
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9516": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14221,
        14227
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 68,
      "value": "0x12"
    },
    "9518": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14221,
        14227
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9519": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9521": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9522": {
      "op": "PUSH4",
      "value": "0x82449375"
    },
    "9527": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9529": {
      "op": "SHL"
    },
    "9530": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9531": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9538": {
      "op": "SHL"
    },
    "9539": {
      "op": "SUB"
    },
    "9540": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14221,
        14227
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9541": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14221,
        14227
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9542": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14221,
        14227
      ],
      "op": "AND",
      "path": "42"
    },
    "9543": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14221,
        14227
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9544": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14244
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x82449375"
    },
    "9549": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14244
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9550": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x255F"
    },
    "9553": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9554": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14258,
        14275
      ],
      "op": "DUP8",
      "path": "42"
    },
    "9555": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14258,
        14275
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9556": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14289,
        14298
      ],
      "op": "DUP8",
      "path": "42"
    },
    "9557": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14289,
        14298
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9558": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14312,
        14317
      ],
      "op": "DUP8",
      "path": "42"
    },
    "9559": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14312,
        14317
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9560": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "9562": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "ADD",
      "path": "42"
    },
    "9563": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x599F"
    },
    "9566": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        14206,
        14327
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9567": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9568": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9570": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9572": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9573": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9574": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9575": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "SUB",
      "path": "42"
    },
    "9576": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9577": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9579": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP8",
      "path": "42"
    },
    "9580": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "GAS",
      "path": "42"
    },
    "9581": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "CALL",
      "path": "42"
    },
    "9582": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "9583": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9584": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "9585": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x257E"
    },
    "9588": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "9589": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "9590": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9592": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9593": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "9594": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "9595": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9597": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "REVERT",
      "path": "42"
    },
    "9598": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9599": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "POP",
      "path": "42"
    },
    "9600": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "POP",
      "path": "42"
    },
    "9601": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "POP",
      "path": "42"
    },
    "9602": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "POP",
      "path": "42"
    },
    "9603": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9605": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9606": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "9607": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "9609": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "NOT",
      "path": "42"
    },
    "9610": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "9612": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9613": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "ADD",
      "path": "42"
    },
    "9614": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "AND",
      "path": "42"
    },
    "9615": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9616": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "ADD",
      "path": "42"
    },
    "9617": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9618": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9620": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9621": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "POP",
      "path": "42"
    },
    "9622": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9623": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "ADD",
      "path": "42"
    },
    "9624": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9625": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x25A2"
    },
    "9628": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9629": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9630": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5804"
    },
    "9633": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        14206,
        14327
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9634": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14206,
        14327
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9635": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14193,
        14327
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9636": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14193,
        14327
      ],
      "op": "POP",
      "path": "42"
    },
    "9637": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14409
      ],
      "op": "DUP3",
      "path": "42",
      "statement": 69
    },
    "9638": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14410,
        14411
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9640": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9641": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9642": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9643": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "LT",
      "path": "42"
    },
    "9644": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x25B7"
    },
    "9647": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "9648": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x25B7"
    },
    "9651": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "9654": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        14400,
        14412
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9655": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9656": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9658": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "MUL",
      "path": "42"
    },
    "9659": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9661": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "ADD",
      "path": "42"
    },
    "9662": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "ADD",
      "path": "42"
    },
    "9663": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14400,
        14412
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9670": {
      "op": "SHL"
    },
    "9671": {
      "op": "SUB"
    },
    "9672": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "AND",
      "path": "42"
    },
    "9673": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14376
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9674": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14377,
        14378
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "9676": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9677": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9678": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9679": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "LT",
      "path": "42"
    },
    "9680": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x25DB"
    },
    "9683": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "9684": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x25DB"
    },
    "9687": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "9690": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "i",
      "offset": [
        14367,
        14379
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9691": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9692": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9694": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "MUL",
      "path": "42"
    },
    "9695": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9697": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "ADD",
      "path": "42"
    },
    "9698": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "ADD",
      "path": "42"
    },
    "9699": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14367,
        14379
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9706": {
      "op": "SHL"
    },
    "9707": {
      "op": "SUB"
    },
    "9708": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "AND",
      "path": "42"
    },
    "9709": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0xB3FAC3AE95956DBAC74E63BA8DAC94081832395C8788E3049C900A7732F34805"
    },
    "9742": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14355,
        14365
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9743": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14381,
        14398
      ],
      "op": "DUP8",
      "path": "42"
    },
    "9744": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9746": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9747": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x262F"
    },
    "9750": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "9751": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9752": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9753": {
      "op": "SWAP2"
    },
    "9754": {
      "op": "DUP3"
    },
    "9755": {
      "op": "MSTORE"
    },
    "9756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9762": {
      "op": "SHL"
    },
    "9763": {
      "op": "SUB"
    },
    "9764": {
      "op": "AND"
    },
    "9765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9767": {
      "op": "DUP3"
    },
    "9768": {
      "op": "ADD"
    },
    "9769": {
      "op": "MSTORE"
    },
    "9770": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9772": {
      "op": "ADD"
    },
    "9773": {
      "op": "SWAP1"
    },
    "9774": {
      "op": "JUMP"
    },
    "9775": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9776": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9778": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9779": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9780": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9781": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "SUB",
      "path": "42"
    },
    "9782": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9783": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14342,
        14413
      ],
      "op": "LOG3",
      "path": "42"
    },
    "9784": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 70,
      "value": "0x40"
    },
    "9786": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9787": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9788": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9789": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9790": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "ADD",
      "path": "42"
    },
    "9791": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9792": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9793": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9800": {
      "op": "SHL"
    },
    "9801": {
      "op": "SUB"
    },
    "9802": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "SWAP5",
      "path": "42"
    },
    "9803": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "DUP6",
      "path": "42"
    },
    "9804": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "AND",
      "path": "42"
    },
    "9805": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9806": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9807": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9809": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9810": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "ADD",
      "path": "42"
    },
    "9811": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9812": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9813": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9814": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14441
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x14"
    },
    "9816": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9817": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9818": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "9820": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9821": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9822": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "ADD",
      "path": "42"
    },
    "9823": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9824": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "9825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9827": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "9828": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9829": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "9830": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9831": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "9832": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9833": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
    },
    "9866": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "9868": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9869": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP5",
      "path": "42"
    },
    "9870": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "MUL",
      "path": "42"
    },
    "9871": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "9872": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "DUP5",
      "path": "42"
    },
    "9873": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "ADD",
      "path": "42"
    },
    "9874": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9875": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9882": {
      "op": "SHL"
    },
    "9883": {
      "op": "SUB"
    },
    "9884": {
      "op": "NOT"
    },
    "9885": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "AND",
      "path": "42"
    },
    "9886": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9887": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9888": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP9",
      "path": "42"
    },
    "9889": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "AND",
      "path": "42"
    },
    "9890": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "OR",
      "path": "42"
    },
    "9891": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9892": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP7",
      "path": "42"
    },
    "9893": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "9894": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9895": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4ED"
    },
    "9928": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9929": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9930": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "ADD",
      "path": "42"
    },
    "9931": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14423,
        14487
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "9932": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "9934": {
      "offset": [
        2562,
        2584
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9935": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2562,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9936": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2562,
        2584
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9937": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9938": {
      "op": "POP"
    },
    "9939": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9940": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14447,
        14486
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9941": {
      "fn": "ERC20Template.createFixedRate",
      "offset": [
        14475,
        14485
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9942": {
      "op": "POP"
    },
    "9943": {
      "fn": "ERC20Template.createFixedRate",
      "jump": "o",
      "offset": [
        13857,
        14495
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9944": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30661,
        30755
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9945": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30709,
        30722
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x60"
    },
    "9947": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30741,
        30748
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 71,
      "value": "0x9"
    },
    "9949": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30734,
        30748
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9950": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30734,
        30748
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9951": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30734,
        30748
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xA23"
    },
    "9954": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30734,
        30748
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9955": {
      "fn": "ERC20Template.symbol",
      "offset": [
        30734,
        30748
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x567E"
    },
    "9958": {
      "fn": "ERC20Template.symbol",
      "jump": "i",
      "offset": [
        30734,
        30748
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9959": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9960": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35202,
        35216
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 72,
      "value": "0xB"
    },
    "9962": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35202,
        35216
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9963": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9965": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9966": {
      "op": "PUSH4",
      "value": "0x160A7925"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9973": {
      "op": "SHL"
    },
    "9974": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9975": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9982": {
      "op": "SHL"
    },
    "9983": {
      "op": "SUB"
    },
    "9984": {
      "op": "DUP4"
    },
    "9985": {
      "op": "DUP2"
    },
    "9986": {
      "op": "AND"
    },
    "9987": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "9989": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9990": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "ADD",
      "path": "42"
    },
    "9991": {
      "op": "MSTORE"
    },
    "9992": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35164,
        35168
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9994": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35164,
        35168
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "9995": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35202,
        35216
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "9998": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35202,
        35216
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9999": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35202,
        35216
      ],
      "op": "DIV",
      "path": "42"
    },
    "10000": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35202,
        35216
      ],
      "op": "AND",
      "path": "42"
    },
    "10001": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35202,
        35216
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10002": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35232
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "10007": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35232
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10010": {
      "op": "ADD"
    },
    "10011": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "10013": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10015": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10016": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10017": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP4",
      "path": "42"
    },
    "10018": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "SUB",
      "path": "42"
    },
    "10019": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10020": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP7",
      "path": "42"
    },
    "10021": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "GAS",
      "path": "42"
    },
    "10022": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "10023": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10024": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10025": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10026": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2737"
    },
    "10029": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10030": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10031": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10033": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10034": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "10035": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10036": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10038": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "REVERT",
      "path": "42"
    },
    "10039": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10040": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "POP",
      "path": "42"
    },
    "10041": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "POP",
      "path": "42"
    },
    "10042": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "POP",
      "path": "42"
    },
    "10043": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "POP",
      "path": "42"
    },
    "10044": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10046": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10047": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10048": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10050": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "NOT",
      "path": "42"
    },
    "10051": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10053": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10054": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "ADD",
      "path": "42"
    },
    "10055": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "AND",
      "path": "42"
    },
    "10056": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10057": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "ADD",
      "path": "42"
    },
    "10058": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10059": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10061": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10062": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "POP",
      "path": "42"
    },
    "10063": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10064": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "ADD",
      "path": "42"
    },
    "10065": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10066": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x275B"
    },
    "10069": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10070": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10071": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56B3"
    },
    "10074": {
      "fn": "ERC20Template.isERC20Deployer",
      "jump": "i",
      "offset": [
        35186,
        35238
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10075": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35238
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10076": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35250
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "10078": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35250
      ],
      "op": "ADD",
      "path": "42"
    },
    "10079": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35250
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10080": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35186,
        35250
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "10081": {
      "fn": "ERC20Template.isERC20Deployer",
      "offset": [
        35105,
        35258
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10082": {
      "op": "POP"
    },
    "10083": {
      "op": "POP"
    },
    "10084": {
      "fn": "ERC20Template.isERC20Deployer",
      "jump": "o",
      "offset": [
        35105,
        35258
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10085": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22574,
        22673
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10086": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "10088": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6058,
        6072
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "10089": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10091": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10092": {
      "op": "PUSH4",
      "value": "0x160A7925"
    },
    "10097": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10099": {
      "op": "SHL"
    },
    "10100": {
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10101": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10102": {
      "offset": [
        6106,
        6116
      ],
      "op": "CALLER",
      "path": "42"
    },
    "10103": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "10105": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10106": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10107": {
      "op": "MSTORE"
    },
    "10108": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "10111": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10112": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10113": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6058,
        6072
      ],
      "op": "DIV",
      "path": "42"
    },
    "10114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10120": {
      "op": "SHL"
    },
    "10121": {
      "op": "SUB"
    },
    "10122": {
      "offset": [
        6058,
        6072
      ],
      "op": "AND",
      "path": "42"
    },
    "10123": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10124": {
      "offset": [
        6042,
        6105
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "10129": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6105
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10130": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10132": {
      "op": "ADD"
    },
    "10133": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "10135": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10137": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10138": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10139": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP4",
      "path": "42"
    },
    "10140": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "SUB",
      "path": "42"
    },
    "10141": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10142": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP7",
      "path": "42"
    },
    "10143": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "GAS",
      "path": "42"
    },
    "10144": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "10145": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10146": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10147": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10148": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x27B1"
    },
    "10151": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10152": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10153": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10155": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10156": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "10157": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10158": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10160": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "REVERT",
      "path": "42"
    },
    "10161": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10162": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10163": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10164": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10165": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10166": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10168": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10169": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10170": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10172": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "NOT",
      "path": "42"
    },
    "10173": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10175": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10176": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10177": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "AND",
      "path": "42"
    },
    "10178": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10179": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10180": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10181": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10183": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10184": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10185": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10186": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10187": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10188": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x27D5"
    },
    "10191": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10192": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10193": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56B3"
    },
    "10196": {
      "fn": "ERC20Template.addMinter",
      "jump": "i",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10197": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10198": {
      "offset": [
        6042,
        6146
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "10200": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6146
      ],
      "op": "ADD",
      "path": "42"
    },
    "10201": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6146
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10202": {
      "offset": [
        6042,
        6206
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10203": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6042,
        6206
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x285C"
    },
    "10206": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10207": {
      "op": "POP"
    },
    "10208": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "10210": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6166,
        6180
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "10211": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10213": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10214": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "10219": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10221": {
      "op": "SHL"
    },
    "10222": {
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10223": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10224": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "10226": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "10228": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10229": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "10230": {
      "op": "MSTORE"
    },
    "10231": {
      "offset": [
        6196,
        6206
      ],
      "op": "CALLER",
      "path": "42"
    },
    "10232": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6196,
        6206
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10233": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "10236": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10237": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6166,
        6180
      ],
      "op": "DIV",
      "path": "42"
    },
    "10238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10244": {
      "op": "SHL"
    },
    "10245": {
      "op": "SUB"
    },
    "10246": {
      "offset": [
        6166,
        6180
      ],
      "op": "AND",
      "path": "42"
    },
    "10247": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10248": {
      "offset": [
        6150,
        6189
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "10253": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6189
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10254": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10256": {
      "op": "ADD"
    },
    "10257": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "10259": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10261": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10262": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10263": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP4",
      "path": "42"
    },
    "10264": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "SUB",
      "path": "42"
    },
    "10265": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10266": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP7",
      "path": "42"
    },
    "10267": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "GAS",
      "path": "42"
    },
    "10268": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "10269": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10270": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10271": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10272": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x282D"
    },
    "10275": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10276": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10277": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10279": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10280": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "10281": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10282": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10284": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "REVERT",
      "path": "42"
    },
    "10285": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10286": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "10287": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "10288": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "10289": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "10290": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10292": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10293": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10294": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10296": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "NOT",
      "path": "42"
    },
    "10297": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10299": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10300": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "10301": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "AND",
      "path": "42"
    },
    "10302": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10303": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "10304": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10305": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10307": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10308": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "10309": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10310": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "10311": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10312": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2851"
    },
    "10315": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10316": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10317": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "10320": {
      "fn": "ERC20Template.addMinter",
      "jump": "i",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10321": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10328": {
      "op": "SHL"
    },
    "10329": {
      "op": "SUB"
    },
    "10330": {
      "offset": [
        6150,
        6206
      ],
      "op": "AND",
      "path": "42"
    },
    "10331": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6150,
        6206
      ],
      "op": "EQ",
      "path": "42"
    },
    "10332": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10333": {
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2878"
    },
    "10336": {
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10337": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10339": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10340": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10344": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10346": {
      "op": "SHL"
    },
    "10347": {
      "offset": [
        6021,
        6264
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10348": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10349": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "10351": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "ADD",
      "path": "42"
    },
    "10352": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "10355": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10356": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5754"
    },
    "10359": {
      "fn": "ERC20Template.addMinter",
      "jump": "i",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10360": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10361": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22647,
        22666
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 73,
      "value": "0xEE6"
    },
    "10364": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22658,
        22665
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10365": {
      "fn": "ERC20Template.addMinter",
      "offset": [
        22647,
        22657
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x316A"
    },
    "10368": {
      "fn": "ERC20Template.addMinter",
      "jump": "i",
      "offset": [
        22647,
        22666
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10370": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "10371": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6469,
        6473
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10375": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10376": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10378": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10380": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10381": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10382": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10383": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10385": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10386": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10387": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6537
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10394": {
      "op": "SHL"
    },
    "10395": {
      "op": "SUB"
    },
    "10396": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10397": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "AND",
      "path": "3"
    },
    "10398": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10399": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10400": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10401": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10402": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10403": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10404": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10405": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6512,
        6546
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10406": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 74
    },
    "10407": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10408": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "LT",
      "path": "3"
    },
    "10409": {
      "branch": 240,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6564,
        6599
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10410": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2903"
    },
    "10413": {
      "branch": 240,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10414": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10416": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10423": {
      "op": "SHL"
    },
    "10424": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10425": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10428": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10430": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10431": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "ADD",
      "path": "3"
    },
    "10432": {
      "op": "MSTORE"
    },
    "10433": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "10435": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10437": {
      "op": "DUP3"
    },
    "10438": {
      "op": "ADD"
    },
    "10439": {
      "op": "MSTORE"
    },
    "10440": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "10473": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10475": {
      "op": "DUP3"
    },
    "10476": {
      "op": "ADD"
    },
    "10477": {
      "op": "MSTORE"
    },
    "10478": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "10484": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "10486": {
      "op": "SHL"
    },
    "10487": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10489": {
      "op": "DUP3"
    },
    "10490": {
      "op": "ADD"
    },
    "10491": {
      "op": "MSTORE"
    },
    "10492": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10494": {
      "op": "ADD"
    },
    "10495": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "10498": {
      "op": "JUMP"
    },
    "10499": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6556,
        6641
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10500": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 75,
      "value": "0x2910"
    },
    "10503": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "10504": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6698,
        6705
      ],
      "op": "DUP6",
      "path": "3"
    },
    "10505": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6726,
        6741
      ],
      "op": "DUP6",
      "path": "3"
    },
    "10506": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6723
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10507": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6707,
        6741
      ],
      "op": "SUB",
      "path": "3"
    },
    "10508": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6683
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3046"
    },
    "10511": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6675,
        6742
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10512": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6742
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10513": {
      "op": "POP"
    },
    "10514": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 76,
      "value": "0x1"
    },
    "10516": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6774
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10517": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6376,
        6781
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10518": {
      "op": "POP"
    },
    "10519": {
      "op": "POP"
    },
    "10520": {
      "op": "POP"
    },
    "10521": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6376,
        6781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10522": {
      "fn": "ERC20.transfer",
      "offset": [
        3654,
        3826
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10523": {
      "fn": "ERC20.transfer",
      "offset": [
        3740,
        3744
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10525": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3798
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 77,
      "value": "0xAB3"
    },
    "10528": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "10529": {
      "fn": "ERC20.transfer",
      "offset": [
        3780,
        3789
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10530": {
      "fn": "ERC20.transfer",
      "offset": [
        3791,
        3797
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10531": {
      "fn": "ERC20.transfer",
      "offset": [
        3756,
        3765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3241"
    },
    "10534": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3756,
        3798
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10535": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23244,
        23395
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10536": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "10538": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6058,
        6072
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "10539": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10541": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10542": {
      "op": "PUSH4",
      "value": "0x160A7925"
    },
    "10547": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10549": {
      "op": "SHL"
    },
    "10550": {
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10551": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10552": {
      "offset": [
        6106,
        6116
      ],
      "op": "CALLER",
      "path": "42"
    },
    "10553": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "10555": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10556": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10557": {
      "op": "MSTORE"
    },
    "10558": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "10561": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10562": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10563": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6058,
        6072
      ],
      "op": "DIV",
      "path": "42"
    },
    "10564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10570": {
      "op": "SHL"
    },
    "10571": {
      "op": "SUB"
    },
    "10572": {
      "offset": [
        6058,
        6072
      ],
      "op": "AND",
      "path": "42"
    },
    "10573": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10574": {
      "offset": [
        6042,
        6105
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "10579": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6105
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10582": {
      "op": "ADD"
    },
    "10583": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "10585": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10587": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10588": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10589": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP4",
      "path": "42"
    },
    "10590": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "SUB",
      "path": "42"
    },
    "10591": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10592": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP7",
      "path": "42"
    },
    "10593": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "GAS",
      "path": "42"
    },
    "10594": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "10595": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10596": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10597": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10598": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2973"
    },
    "10601": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10602": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10603": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10605": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10606": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "10607": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10608": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10610": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "REVERT",
      "path": "42"
    },
    "10611": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10612": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10613": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10614": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10615": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10616": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10618": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10619": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10620": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10622": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "NOT",
      "path": "42"
    },
    "10623": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10625": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10626": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10627": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "AND",
      "path": "42"
    },
    "10628": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10629": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10630": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10631": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10633": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10634": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10635": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10636": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10637": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10638": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2997"
    },
    "10641": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10642": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10643": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56B3"
    },
    "10646": {
      "fn": "ERC20Template.addPaymentManager",
      "jump": "i",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10647": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10648": {
      "offset": [
        6042,
        6146
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "10650": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6146
      ],
      "op": "ADD",
      "path": "42"
    },
    "10651": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6146
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10652": {
      "offset": [
        6042,
        6206
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10653": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6042,
        6206
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2A1E"
    },
    "10656": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10657": {
      "op": "POP"
    },
    "10658": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "10660": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6166,
        6180
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "10661": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10663": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10664": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "10669": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10671": {
      "op": "SHL"
    },
    "10672": {
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10673": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10674": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "10676": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "10678": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10679": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "10680": {
      "op": "MSTORE"
    },
    "10681": {
      "offset": [
        6196,
        6206
      ],
      "op": "CALLER",
      "path": "42"
    },
    "10682": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6196,
        6206
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10683": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "10686": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10687": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6166,
        6180
      ],
      "op": "DIV",
      "path": "42"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10694": {
      "op": "SHL"
    },
    "10695": {
      "op": "SUB"
    },
    "10696": {
      "offset": [
        6166,
        6180
      ],
      "op": "AND",
      "path": "42"
    },
    "10697": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10698": {
      "offset": [
        6150,
        6189
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "10703": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6189
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10706": {
      "op": "ADD"
    },
    "10707": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "10709": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10711": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10712": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10713": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP4",
      "path": "42"
    },
    "10714": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "SUB",
      "path": "42"
    },
    "10715": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10716": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP7",
      "path": "42"
    },
    "10717": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "GAS",
      "path": "42"
    },
    "10718": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "10719": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10720": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10721": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10722": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x29EF"
    },
    "10725": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10726": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10727": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10729": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10730": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "10731": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10732": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10734": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "REVERT",
      "path": "42"
    },
    "10735": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10736": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "10737": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "10738": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "10739": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "10740": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10742": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10743": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10744": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10746": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "NOT",
      "path": "42"
    },
    "10747": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10749": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10750": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "10751": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "AND",
      "path": "42"
    },
    "10752": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10753": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "10754": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10755": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10757": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10758": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "10759": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10760": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "10761": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10762": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2A13"
    },
    "10765": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10766": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10767": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "10770": {
      "fn": "ERC20Template.addPaymentManager",
      "jump": "i",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10771": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10778": {
      "op": "SHL"
    },
    "10779": {
      "op": "SUB"
    },
    "10780": {
      "offset": [
        6150,
        6206
      ],
      "op": "AND",
      "path": "42"
    },
    "10781": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6150,
        6206
      ],
      "op": "EQ",
      "path": "42"
    },
    "10782": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10783": {
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2A3A"
    },
    "10786": {
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10787": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10789": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10796": {
      "op": "SHL"
    },
    "10797": {
      "offset": [
        6021,
        6264
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10798": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10799": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "10801": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "ADD",
      "path": "42"
    },
    "10802": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "10805": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10806": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5754"
    },
    "10809": {
      "fn": "ERC20Template.addPaymentManager",
      "jump": "i",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10810": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10811": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23353,
        23388
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 78,
      "value": "0xEE6"
    },
    "10814": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23372,
        23387
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10815": {
      "fn": "ERC20Template.addPaymentManager",
      "offset": [
        23353,
        23371
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4250"
    },
    "10818": {
      "fn": "ERC20Template.addPaymentManager",
      "jump": "i",
      "offset": [
        23353,
        23388
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10819": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10820": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "10822": {
      "fn": "ERC20Template.setData",
      "offset": [
        6058,
        6072
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "10823": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10825": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10826": {
      "op": "PUSH4",
      "value": "0x160A7925"
    },
    "10831": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10833": {
      "op": "SHL"
    },
    "10834": {
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10835": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10836": {
      "offset": [
        6106,
        6116
      ],
      "op": "CALLER",
      "path": "42"
    },
    "10837": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "10839": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10840": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10841": {
      "op": "MSTORE"
    },
    "10842": {
      "offset": [
        6058,
        6072
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "10845": {
      "fn": "ERC20Template.setData",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10846": {
      "fn": "ERC20Template.setData",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10847": {
      "fn": "ERC20Template.setData",
      "offset": [
        6058,
        6072
      ],
      "op": "DIV",
      "path": "42"
    },
    "10848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10854": {
      "op": "SHL"
    },
    "10855": {
      "op": "SUB"
    },
    "10856": {
      "offset": [
        6058,
        6072
      ],
      "op": "AND",
      "path": "42"
    },
    "10857": {
      "fn": "ERC20Template.setData",
      "offset": [
        6058,
        6072
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10858": {
      "offset": [
        6042,
        6105
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x160A7925"
    },
    "10863": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6105
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10866": {
      "op": "ADD"
    },
    "10867": {
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "10869": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10871": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10872": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10873": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP4",
      "path": "42"
    },
    "10874": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "SUB",
      "path": "42"
    },
    "10875": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10876": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP7",
      "path": "42"
    },
    "10877": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "GAS",
      "path": "42"
    },
    "10878": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "10879": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10880": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10881": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "10882": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2A8F"
    },
    "10885": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10886": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10887": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10889": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10890": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "10891": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10892": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "10894": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "REVERT",
      "path": "42"
    },
    "10895": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10896": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10897": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10898": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10899": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10900": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10902": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10903": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "10904": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10906": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "NOT",
      "path": "42"
    },
    "10907": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "10909": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10910": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10911": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "AND",
      "path": "42"
    },
    "10912": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10913": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10914": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10915": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10917": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10918": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "POP",
      "path": "42"
    },
    "10919": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10920": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "ADD",
      "path": "42"
    },
    "10921": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10922": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2AB3"
    },
    "10925": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10926": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10927": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56B3"
    },
    "10930": {
      "fn": "ERC20Template.setData",
      "jump": "i",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMP",
      "path": "42"
    },
    "10931": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "10932": {
      "offset": [
        6042,
        6146
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "10934": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6146
      ],
      "op": "ADD",
      "path": "42"
    },
    "10935": {
      "branch": 213,
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6146
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10936": {
      "offset": [
        6042,
        6206
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10937": {
      "fn": "ERC20Template.setData",
      "offset": [
        6042,
        6206
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2B3A"
    },
    "10940": {
      "branch": 213,
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "10941": {
      "op": "POP"
    },
    "10942": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "10944": {
      "fn": "ERC20Template.setData",
      "offset": [
        6166,
        6180
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "10945": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10947": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10948": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10955": {
      "op": "SHL"
    },
    "10956": {
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "10957": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "10958": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "10960": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "10962": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "10963": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "10964": {
      "op": "MSTORE"
    },
    "10965": {
      "offset": [
        6196,
        6206
      ],
      "op": "CALLER",
      "path": "42"
    },
    "10966": {
      "fn": "ERC20Template.setData",
      "offset": [
        6196,
        6206
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "10967": {
      "offset": [
        6166,
        6180
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "10970": {
      "fn": "ERC20Template.setData",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10971": {
      "fn": "ERC20Template.setData",
      "offset": [
        6166,
        6180
      ],
      "op": "DIV",
      "path": "42"
    },
    "10972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10978": {
      "op": "SHL"
    },
    "10979": {
      "op": "SUB"
    },
    "10980": {
      "offset": [
        6166,
        6180
      ],
      "op": "AND",
      "path": "42"
    },
    "10981": {
      "fn": "ERC20Template.setData",
      "offset": [
        6166,
        6180
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10982": {
      "offset": [
        6150,
        6189
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "10987": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6189
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "10988": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10990": {
      "op": "ADD"
    },
    "10991": {
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "10993": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "10995": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "10996": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "10997": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP4",
      "path": "42"
    },
    "10998": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "SUB",
      "path": "42"
    },
    "10999": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11000": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP7",
      "path": "42"
    },
    "11001": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "GAS",
      "path": "42"
    },
    "11002": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "11003": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11004": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11005": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11006": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2B0B"
    },
    "11009": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "11010": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "11011": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11013": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11014": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "11015": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "11016": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11018": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "REVERT",
      "path": "42"
    },
    "11019": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11020": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "11021": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "11022": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "11023": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "11024": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11026": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11027": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "11028": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "11030": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "NOT",
      "path": "42"
    },
    "11031": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "11033": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11034": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "11035": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "AND",
      "path": "42"
    },
    "11036": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11037": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "11038": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11039": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11041": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11042": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "POP",
      "path": "42"
    },
    "11043": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11044": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "ADD",
      "path": "42"
    },
    "11045": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11046": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2B2F"
    },
    "11049": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11050": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11051": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "11054": {
      "fn": "ERC20Template.setData",
      "jump": "i",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMP",
      "path": "42"
    },
    "11055": {
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6192
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11062": {
      "op": "SHL"
    },
    "11063": {
      "op": "SUB"
    },
    "11064": {
      "offset": [
        6150,
        6206
      ],
      "op": "AND",
      "path": "42"
    },
    "11065": {
      "branch": 214,
      "fn": "ERC20Template.setData",
      "offset": [
        6150,
        6206
      ],
      "op": "EQ",
      "path": "42"
    },
    "11066": {
      "offset": [
        6042,
        6206
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11067": {
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2B56"
    },
    "11070": {
      "branch": 214,
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "11071": {
      "fn": "ERC20Template.setData",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11073": {
      "fn": "ERC20Template.setData",
      "offset": [
        6021,
        6264
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11074": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11078": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11080": {
      "op": "SHL"
    },
    "11081": {
      "offset": [
        6021,
        6264
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11082": {
      "fn": "ERC20Template.setData",
      "offset": [
        6021,
        6264
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11083": {
      "fn": "ERC20Template.setData",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "11085": {
      "fn": "ERC20Template.setData",
      "offset": [
        6021,
        6264
      ],
      "op": "ADD",
      "path": "42"
    },
    "11086": {
      "fn": "ERC20Template.setData",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "11089": {
      "fn": "ERC20Template.setData",
      "offset": [
        6021,
        6264
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11090": {
      "fn": "ERC20Template.setData",
      "offset": [
        6021,
        6264
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5754"
    },
    "11093": {
      "fn": "ERC20Template.setData",
      "jump": "i",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMP",
      "path": "42"
    },
    "11094": {
      "fn": "ERC20Template.setData",
      "offset": [
        6021,
        6264
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11095": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11097": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11098": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11111": {
      "op": "NOT"
    },
    "11112": {
      "fn": "ERC20Template.setData",
      "offset": [
        24168,
        24172
      ],
      "op": "ADDRESS",
      "path": "42"
    },
    "11113": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11115": {
      "op": "SHL"
    },
    "11116": {
      "op": "AND"
    },
    "11117": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11119": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11120": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "ADD",
      "path": "42"
    },
    "11121": {
      "op": "MSTORE"
    },
    "11122": {
      "fn": "ERC20Template.setData",
      "offset": [
        24119,
        24130
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11124": {
      "fn": "ERC20Template.setData",
      "offset": [
        24119,
        24130
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11125": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "11127": {
      "op": "ADD"
    },
    "11128": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11130": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11131": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11132": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11133": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "DUP4",
      "path": "42"
    },
    "11134": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "SUB",
      "path": "42"
    },
    "11135": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11137": {
      "op": "NOT"
    },
    "11138": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "ADD",
      "path": "42"
    },
    "11139": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11140": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11141": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11142": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11143": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11144": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11145": {
      "fn": "ERC20Template.setData",
      "offset": [
        24133,
        24175
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11146": {
      "fn": "ERC20Template.setData",
      "offset": [
        24133,
        24175
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11147": {
      "fn": "ERC20Template.setData",
      "offset": [
        24143,
        24174
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11149": {
      "fn": "ERC20Template.setData",
      "offset": [
        24133,
        24175
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11150": {
      "fn": "ERC20Template.setData",
      "offset": [
        24133,
        24175
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11151": {
      "fn": "ERC20Template.setData",
      "offset": [
        24133,
        24175
      ],
      "op": "ADD",
      "path": "42"
    },
    "11152": {
      "fn": "ERC20Template.setData",
      "offset": [
        24133,
        24175
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "11153": {
      "fn": "ERC20Template.setData",
      "offset": [
        24201,
        24215
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 79,
      "value": "0xB"
    },
    "11155": {
      "fn": "ERC20Template.setData",
      "offset": [
        24201,
        24215
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "11156": {
      "op": "PUSH4",
      "value": "0x1CAF8FD"
    },
    "11161": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "11163": {
      "op": "SHL"
    },
    "11164": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "DUP4",
      "path": "42"
    },
    "11165": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11166": {
      "fn": "ERC20Template.setData",
      "offset": [
        24133,
        24175
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11167": {
      "fn": "ERC20Template.setData",
      "offset": [
        24133,
        24175
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11168": {
      "op": "POP"
    },
    "11169": {
      "fn": "ERC20Template.setData",
      "offset": [
        24201,
        24215
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "11172": {
      "fn": "ERC20Template.setData",
      "offset": [
        24201,
        24215
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11173": {
      "fn": "ERC20Template.setData",
      "offset": [
        24201,
        24215
      ],
      "op": "DIV",
      "path": "42"
    },
    "11174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11180": {
      "op": "SHL"
    },
    "11181": {
      "op": "SUB"
    },
    "11182": {
      "fn": "ERC20Template.setData",
      "offset": [
        24201,
        24215
      ],
      "op": "AND",
      "path": "42"
    },
    "11183": {
      "fn": "ERC20Template.setData",
      "offset": [
        24201,
        24215
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11184": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24229
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xE57C7E8"
    },
    "11189": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24229
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11190": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2BC7"
    },
    "11193": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11194": {
      "fn": "ERC20Template.setData",
      "offset": [
        24133,
        24175
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11195": {
      "fn": "ERC20Template.setData",
      "offset": [
        24133,
        24175
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11196": {
      "fn": "ERC20Template.setData",
      "offset": [
        24235,
        24241
      ],
      "op": "DUP8",
      "path": "42"
    },
    "11197": {
      "fn": "ERC20Template.setData",
      "offset": [
        24235,
        24241
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11198": {
      "fn": "ERC20Template.setData",
      "offset": [
        24235,
        24241
      ],
      "op": "DUP8",
      "path": "42"
    },
    "11199": {
      "fn": "ERC20Template.setData",
      "offset": [
        24235,
        24241
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11200": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "11202": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "ADD",
      "path": "42"
    },
    "11203": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x59DF"
    },
    "11206": {
      "fn": "ERC20Template.setData",
      "jump": "i",
      "offset": [
        24185,
        24242
      ],
      "op": "JUMP",
      "path": "42"
    },
    "11207": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11208": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11210": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11212": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11213": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11214": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "DUP4",
      "path": "42"
    },
    "11215": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "SUB",
      "path": "42"
    },
    "11216": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11217": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11219": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "DUP8",
      "path": "42"
    },
    "11220": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11221": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "EXTCODESIZE",
      "path": "42"
    },
    "11222": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11223": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11224": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11225": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2BE1"
    },
    "11228": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "11229": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11231": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11232": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "REVERT",
      "path": "42"
    },
    "11233": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11234": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "POP",
      "path": "42"
    },
    "11235": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "GAS",
      "path": "42"
    },
    "11236": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "CALL",
      "path": "42"
    },
    "11237": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11238": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11239": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11240": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2BF5"
    },
    "11243": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "11244": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "11245": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11247": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11248": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "11249": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "11250": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11252": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "REVERT",
      "path": "42"
    },
    "11253": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11254": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "POP",
      "path": "42"
    },
    "11255": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "POP",
      "path": "42"
    },
    "11256": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "POP",
      "path": "42"
    },
    "11257": {
      "fn": "ERC20Template.setData",
      "offset": [
        24185,
        24242
      ],
      "op": "POP",
      "path": "42"
    },
    "11258": {
      "fn": "ERC20Template.setData",
      "offset": [
        24109,
        24249
      ],
      "op": "POP",
      "path": "42"
    },
    "11259": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "POP",
      "path": "42"
    },
    "11260": {
      "fn": "ERC20Template.setData",
      "offset": [
        24042,
        24249
      ],
      "op": "POP",
      "path": "42"
    },
    "11261": {
      "fn": "ERC20Template.setData",
      "jump": "o",
      "offset": [
        24042,
        24249
      ],
      "op": "JUMP",
      "path": "42"
    },
    "11262": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11263": {
      "offset": [
        5483,
        5494
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xB"
    },
    "11265": {
      "fn": "ERC20Template.initialize",
      "offset": [
        5483,
        5494
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "11266": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7761,
        7765
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11268": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7761,
        7765
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11269": {
      "offset": [
        5483,
        5494
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xFF"
    },
    "11271": {
      "fn": "ERC20Template.initialize",
      "offset": [
        5483,
        5494
      ],
      "op": "AND",
      "path": "42"
    },
    "11272": {
      "offset": [
        5482,
        5494
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11273": {
      "offset": [
        5461,
        5569
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2C6E"
    },
    "11276": {
      "offset": [
        5461,
        5569
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "11277": {
      "fn": "ERC20Template.initialize",
      "offset": [
        5461,
        5569
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11279": {
      "fn": "ERC20Template.initialize",
      "offset": [
        5461,
        5569
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11286": {
      "op": "SHL"
    },
    "11287": {
      "offset": [
        5461,
        5569
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11288": {
      "fn": "ERC20Template.initialize",
      "offset": [
        5461,
        5569
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11291": {
      "offset": [
        5461,
        5569
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "11293": {
      "fn": "ERC20Template.initialize",
      "offset": [
        5461,
        5569
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11294": {
      "fn": "ERC20Template.initialize",
      "offset": [
        5461,
        5569
      ],
      "op": "ADD",
      "path": "42"
    },
    "11295": {
      "op": "MSTORE"
    },
    "11296": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11300": {
      "op": "DUP3"
    },
    "11301": {
      "op": "ADD"
    },
    "11302": {
      "op": "MSTORE"
    },
    "11303": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A20746F6B656E20696E7374616E636520616C"
    },
    "11336": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11338": {
      "op": "DUP3"
    },
    "11339": {
      "op": "ADD"
    },
    "11340": {
      "op": "MSTORE"
    },
    "11341": {
      "op": "PUSH17",
      "value": "0x1C9958591E481A5B9A5D1A585B1A5E9959"
    },
    "11359": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "11361": {
      "op": "SHL"
    },
    "11362": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11364": {
      "op": "DUP3"
    },
    "11365": {
      "op": "ADD"
    },
    "11366": {
      "op": "MSTORE"
    },
    "11367": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11369": {
      "op": "ADD"
    },
    "11370": {
      "offset": [
        5461,
        5569
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "11373": {
      "op": "JUMP"
    },
    "11374": {
      "offset": [
        5461,
        5569
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11375": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 80,
      "value": "0x2D22"
    },
    "11378": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2C7B"
    },
    "11381": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7825,
        7833
      ],
      "op": "DUP12",
      "path": "42"
    },
    "11382": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7825,
        7833
      ],
      "op": "DUP14",
      "path": "42"
    },
    "11383": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5A59"
    },
    "11386": {
      "fn": "ERC20Template.initialize",
      "jump": "i",
      "offset": [
        7796,
        7958
      ],
      "op": "JUMP",
      "path": "42"
    },
    "11387": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11388": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7851,
        7861
      ],
      "op": "DUP11",
      "path": "42"
    },
    "11389": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7851,
        7861
      ],
      "op": "DUP11",
      "path": "42"
    },
    "11390": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11391": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11392": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11394": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MUL",
      "path": "42"
    },
    "11395": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11397": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11398": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11400": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11401": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11402": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11403": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11404": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11406": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11407": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11408": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "11409": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11410": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11411": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11412": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11413": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11414": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11415": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11417": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11418": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP4",
      "path": "42"
    },
    "11419": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP4",
      "path": "42"
    },
    "11420": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11422": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MUL",
      "path": "42"
    },
    "11423": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11424": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11425": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11426": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "CALLDATACOPY",
      "path": "42"
    },
    "11427": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11429": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11430": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11431": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11432": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11433": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11434": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11435": {
      "op": "POP"
    },
    "11436": {
      "op": "POP"
    },
    "11437": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11439": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11440": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11441": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11443": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11444": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP15",
      "path": "42"
    },
    "11445": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MUL",
      "path": "42"
    },
    "11446": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11447": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11448": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11449": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11450": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11451": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11452": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "11453": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11454": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP14",
      "path": "42"
    },
    "11455": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11456": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11457": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11458": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "11459": {
      "op": "POP"
    },
    "11460": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7879,
        7896
      ],
      "op": "DUP14",
      "path": "42"
    },
    "11461": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7879,
        7896
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11462": {
      "op": "POP"
    },
    "11463": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7879,
        7896
      ],
      "op": "DUP13",
      "path": "42"
    },
    "11464": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7879,
        7896
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11465": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7879,
        7896
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11466": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7879,
        7896
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11467": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP6",
      "path": "42"
    },
    "11468": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11469": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11470": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7879,
        7896
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11471": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7879,
        7896
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11472": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11473": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7879,
        7896
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11474": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11475": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "CALLDATACOPY",
      "path": "42"
    },
    "11476": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11478": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11479": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11480": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11481": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11482": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11483": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11484": {
      "op": "POP"
    },
    "11485": {
      "op": "POP"
    },
    "11486": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11488": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11489": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11490": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11492": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11493": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP14",
      "path": "42"
    },
    "11494": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MUL",
      "path": "42"
    },
    "11495": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11496": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11497": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11498": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11499": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11500": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11501": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "11502": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11503": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP13",
      "path": "42"
    },
    "11504": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11505": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11506": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11507": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "11508": {
      "op": "POP"
    },
    "11509": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7914,
        7920
      ],
      "op": "DUP13",
      "path": "42"
    },
    "11510": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7914,
        7920
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11511": {
      "op": "POP"
    },
    "11512": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7914,
        7920
      ],
      "op": "DUP12",
      "path": "42"
    },
    "11513": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7914,
        7920
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11514": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7914,
        7920
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11515": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7914,
        7920
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11516": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP6",
      "path": "42"
    },
    "11517": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11518": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11519": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7914,
        7920
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11520": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7914,
        7920
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11521": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11522": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7914,
        7920
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11523": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11524": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "CALLDATACOPY",
      "path": "42"
    },
    "11525": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11527": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11528": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "ADD",
      "path": "42"
    },
    "11529": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11530": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11531": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11532": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11533": {
      "op": "POP"
    },
    "11534": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2D1D"
    },
    "11537": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11538": {
      "op": "POP"
    },
    "11539": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7938,
        7944
      ],
      "op": "DUP10",
      "path": "42"
    },
    "11540": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7938,
        7944
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11541": {
      "op": "POP"
    },
    "11542": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7938,
        7944
      ],
      "op": "DUP11",
      "path": "42"
    },
    "11543": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7938,
        7944
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11544": {
      "op": "POP"
    },
    "11545": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5AE0"
    },
    "11548": {
      "fn": "ERC20Template.initialize",
      "jump": "i",
      "offset": [
        7796,
        7958
      ],
      "op": "JUMP",
      "path": "42"
    },
    "11549": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11550": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7807
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4331"
    },
    "11553": {
      "fn": "ERC20Template.initialize",
      "jump": "i",
      "offset": [
        7796,
        7958
      ],
      "op": "JUMP",
      "path": "42"
    },
    "11554": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7796,
        7958
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11555": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7777,
        7958
      ],
      "op": "SWAP12",
      "path": "42"
    },
    "11556": {
      "fn": "ERC20Template.initialize",
      "offset": [
        7509,
        7965
      ],
      "op": "SWAP11",
      "path": "42"
    },
    "11557": {
      "op": "POP"
    },
    "11558": {
      "op": "POP"
    },
    "11559": {
      "op": "POP"
    },
    "11560": {
      "op": "POP"
    },
    "11561": {
      "op": "POP"
    },
    "11562": {
      "op": "POP"
    },
    "11563": {
      "op": "POP"
    },
    "11564": {
      "op": "POP"
    },
    "11565": {
      "op": "POP"
    },
    "11566": {
      "op": "POP"
    },
    "11567": {
      "op": "POP"
    },
    "11568": {
      "fn": "ERC20Template.initialize",
      "jump": "o",
      "offset": [
        7509,
        7965
      ],
      "op": "JUMP",
      "path": "42"
    },
    "11569": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11570": {
      "fn": "ERC20Template.permit",
      "offset": [
        32321,
        32333
      ],
      "op": "NUMBER",
      "path": "42",
      "statement": 81
    },
    "11571": {
      "fn": "ERC20Template.permit",
      "offset": [
        32309,
        32317
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11572": {
      "fn": "ERC20Template.permit",
      "offset": [
        32309,
        32333
      ],
      "op": "LT",
      "path": "42"
    },
    "11573": {
      "branch": 215,
      "fn": "ERC20Template.permit",
      "offset": [
        32309,
        32333
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11574": {
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2D74"
    },
    "11577": {
      "branch": 215,
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "11578": {
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11580": {
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11587": {
      "op": "SHL"
    },
    "11588": {
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11589": {
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11592": {
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "11594": {
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11595": {
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "ADD",
      "path": "42"
    },
    "11596": {
      "op": "MSTORE"
    },
    "11597": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "11599": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11601": {
      "op": "DUP3"
    },
    "11602": {
      "op": "ADD"
    },
    "11603": {
      "op": "MSTORE"
    },
    "11604": {
      "op": "PUSH16",
      "value": "0x115490CC8C11150E8811561412549151"
    },
    "11621": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "11623": {
      "op": "SHL"
    },
    "11624": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11626": {
      "op": "DUP3"
    },
    "11627": {
      "op": "ADD"
    },
    "11628": {
      "op": "MSTORE"
    },
    "11629": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11631": {
      "op": "ADD"
    },
    "11632": {
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "11635": {
      "op": "JUMP"
    },
    "11636": {
      "fn": "ERC20Template.permit",
      "offset": [
        32301,
        32354
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11637": {
      "fn": "ERC20Template.permit",
      "offset": [
        32466,
        32482
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x10"
    },
    "11639": {
      "fn": "ERC20Template.permit",
      "offset": [
        32466,
        32482
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "11640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11646": {
      "op": "SHL"
    },
    "11647": {
      "op": "SUB"
    },
    "11648": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32716
      ],
      "op": "DUP9",
      "path": "42"
    },
    "11649": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32716
      ],
      "op": "AND",
      "path": "42"
    },
    "11650": {
      "fn": "ERC20Template.permit",
      "offset": [
        32364,
        32378
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11652": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32716
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11653": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32716
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11654": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32716
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11655": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32709
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x11"
    },
    "11657": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32716
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11659": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32716
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11660": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32716
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11662": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32716
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11663": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32716
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "11664": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32718
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11665": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32718
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "11666": {
      "fn": "ERC20Template.permit",
      "offset": [
        32364,
        32378
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11667": {
      "fn": "ERC20Template.permit",
      "offset": [
        32364,
        32378
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11668": {
      "fn": "ERC20Template.permit",
      "offset": [
        32466,
        32482
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11669": {
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "11702": {
      "fn": "ERC20Template.permit",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11703": {
      "fn": "ERC20Template.permit",
      "offset": [
        32608,
        32613
      ],
      "op": "DUP12",
      "path": "42"
    },
    "11704": {
      "fn": "ERC20Template.permit",
      "offset": [
        32608,
        32613
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11705": {
      "fn": "ERC20Template.permit",
      "offset": [
        32639,
        32646
      ],
      "op": "DUP12",
      "path": "42"
    },
    "11706": {
      "fn": "ERC20Template.permit",
      "offset": [
        32639,
        32646
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11707": {
      "fn": "ERC20Template.permit",
      "offset": [
        32672,
        32677
      ],
      "op": "DUP12",
      "path": "42"
    },
    "11708": {
      "fn": "ERC20Template.permit",
      "offset": [
        32672,
        32677
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11709": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32718
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11710": {
      "fn": "ERC20Template.permit",
      "offset": [
        32364,
        32378
      ],
      "op": "DUP8",
      "path": "42"
    },
    "11711": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32718
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2DC7"
    },
    "11714": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32718
      ],
      "op": "DUP4",
      "path": "42"
    },
    "11715": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32718
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5B5B"
    },
    "11718": {
      "fn": "ERC20Template.permit",
      "jump": "i",
      "offset": [
        32703,
        32718
      ],
      "op": "JUMP",
      "path": "42"
    },
    "11719": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32718
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11720": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32718
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11721": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32718
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11722": {
      "fn": "ERC20Template.permit",
      "offset": [
        32703,
        32718
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "11723": {
      "op": "POP"
    },
    "11724": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11726": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11727": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11728": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11730": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11731": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "ADD",
      "path": "42"
    },
    "11732": {
      "op": "SWAP7"
    },
    "11733": {
      "op": "SWAP1"
    },
    "11734": {
      "op": "SWAP7"
    },
    "11735": {
      "op": "MSTORE"
    },
    "11736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11742": {
      "op": "SHL"
    },
    "11743": {
      "op": "SUB"
    },
    "11744": {
      "op": "SWAP5"
    },
    "11745": {
      "op": "DUP6"
    },
    "11746": {
      "op": "AND"
    },
    "11747": {
      "op": "SWAP1"
    },
    "11748": {
      "op": "DUP7"
    },
    "11749": {
      "op": "ADD"
    },
    "11750": {
      "op": "MSTORE"
    },
    "11751": {
      "op": "SWAP3"
    },
    "11752": {
      "op": "SWAP1"
    },
    "11753": {
      "op": "SWAP2"
    },
    "11754": {
      "op": "AND"
    },
    "11755": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11757": {
      "op": "DUP5"
    },
    "11758": {
      "op": "ADD"
    },
    "11759": {
      "op": "MSTORE"
    },
    "11760": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11762": {
      "op": "DUP4"
    },
    "11763": {
      "op": "ADD"
    },
    "11764": {
      "op": "MSTORE"
    },
    "11765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11767": {
      "op": "DUP3"
    },
    "11768": {
      "op": "ADD"
    },
    "11769": {
      "op": "MSTORE"
    },
    "11770": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11772": {
      "op": "DUP2"
    },
    "11773": {
      "op": "ADD"
    },
    "11774": {
      "op": "DUP8"
    },
    "11775": {
      "op": "SWAP1"
    },
    "11776": {
      "op": "MSTORE"
    },
    "11777": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11779": {
      "op": "ADD"
    },
    "11780": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11782": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11783": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11785": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11786": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "DUP4",
      "path": "42"
    },
    "11787": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "SUB",
      "path": "42"
    },
    "11788": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "SUB",
      "path": "42"
    },
    "11789": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11790": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11791": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11792": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11794": {
      "fn": "ERC20Template.permit",
      "offset": [
        32531,
        32774
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11795": {
      "fn": "ERC20Template.permit",
      "offset": [
        32500,
        32792
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11796": {
      "fn": "ERC20Template.permit",
      "offset": [
        32500,
        32792
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11797": {
      "fn": "ERC20Template.permit",
      "offset": [
        32500,
        32792
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11798": {
      "fn": "ERC20Template.permit",
      "offset": [
        32500,
        32792
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11800": {
      "fn": "ERC20Template.permit",
      "offset": [
        32500,
        32792
      ],
      "op": "ADD",
      "path": "42"
    },
    "11801": {
      "fn": "ERC20Template.permit",
      "offset": [
        32500,
        32792
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "11802": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11804": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11805": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11807": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "ADD",
      "path": "42"
    },
    "11808": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2E40"
    },
    "11811": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11812": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11813": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11814": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "11817": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "11819": {
      "op": "SHL"
    },
    "11820": {
      "op": "DUP2"
    },
    "11821": {
      "op": "MSTORE"
    },
    "11822": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "11824": {
      "op": "DUP2"
    },
    "11825": {
      "op": "ADD"
    },
    "11826": {
      "op": "SWAP3"
    },
    "11827": {
      "op": "SWAP1"
    },
    "11828": {
      "op": "SWAP3"
    },
    "11829": {
      "op": "MSTORE"
    },
    "11830": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11832": {
      "op": "DUP3"
    },
    "11833": {
      "op": "ADD"
    },
    "11834": {
      "op": "MSTORE"
    },
    "11835": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "11837": {
      "op": "ADD"
    },
    "11838": {
      "op": "SWAP1"
    },
    "11839": {
      "op": "JUMP"
    },
    "11840": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11841": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11843": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11844": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11845": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11847": {
      "op": "NOT"
    },
    "11848": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11849": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11850": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "SUB",
      "path": "42"
    },
    "11851": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "ADD",
      "path": "42"
    },
    "11852": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11853": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11854": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11855": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11856": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11857": {
      "fn": "ERC20Template.permit",
      "offset": [
        32381,
        32816
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11858": {
      "fn": "ERC20Template.permit",
      "offset": [
        32381,
        32816
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11859": {
      "fn": "ERC20Template.permit",
      "offset": [
        32404,
        32806
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11861": {
      "fn": "ERC20Template.permit",
      "offset": [
        32381,
        32816
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11862": {
      "fn": "ERC20Template.permit",
      "offset": [
        32381,
        32816
      ],
      "op": "DUP3",
      "path": "42"
    },
    "11863": {
      "fn": "ERC20Template.permit",
      "offset": [
        32381,
        32816
      ],
      "op": "ADD",
      "path": "42"
    },
    "11864": {
      "fn": "ERC20Template.permit",
      "offset": [
        32381,
        32816
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "11865": {
      "fn": "ERC20Template.permit",
      "offset": [
        32826,
        32850
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11867": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11868": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP6",
      "path": "42"
    },
    "11869": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11870": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11871": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11872": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "ADD",
      "path": "42"
    },
    "11873": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11874": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11875": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "11876": {
      "op": "DUP2"
    },
    "11877": {
      "op": "SWAP1"
    },
    "11878": {
      "op": "MSTORE"
    },
    "11879": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11881": {
      "op": "DUP9"
    },
    "11882": {
      "op": "AND"
    },
    "11883": {
      "op": "SWAP3"
    },
    "11884": {
      "op": "DUP5"
    },
    "11885": {
      "op": "ADD"
    },
    "11886": {
      "op": "SWAP3"
    },
    "11887": {
      "op": "SWAP1"
    },
    "11888": {
      "op": "SWAP3"
    },
    "11889": {
      "op": "MSTORE"
    },
    "11890": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11892": {
      "op": "DUP4"
    },
    "11893": {
      "op": "ADD"
    },
    "11894": {
      "op": "DUP7"
    },
    "11895": {
      "op": "SWAP1"
    },
    "11896": {
      "op": "MSTORE"
    },
    "11897": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11899": {
      "op": "DUP4"
    },
    "11900": {
      "op": "ADD"
    },
    "11901": {
      "op": "DUP6"
    },
    "11902": {
      "op": "SWAP1"
    },
    "11903": {
      "op": "MSTORE"
    },
    "11904": {
      "fn": "ERC20Template.permit",
      "offset": [
        32381,
        32816
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11905": {
      "fn": "ERC20Template.permit",
      "offset": [
        32381,
        32816
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "11906": {
      "op": "POP"
    },
    "11907": {
      "fn": "ERC20Template.permit",
      "offset": [
        32826,
        32850
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11908": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "11910": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11913": {
      "op": "ADD"
    },
    "11914": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11916": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11918": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11919": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "11921": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11922": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "SUB",
      "path": "42"
    },
    "11923": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11924": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11925": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP5",
      "path": "42"
    },
    "11926": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "SUB",
      "path": "42"
    },
    "11927": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11928": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP6",
      "path": "42"
    },
    "11929": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "GAS",
      "path": "42"
    },
    "11930": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "11931": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11932": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11933": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11934": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2EAB"
    },
    "11937": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "11938": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "11939": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11941": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11942": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "11943": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "11944": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "11946": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "REVERT",
      "path": "42"
    },
    "11947": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "11948": {
      "op": "POP"
    },
    "11949": {
      "op": "POP"
    },
    "11950": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "11952": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11953": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11955": {
      "op": "NOT"
    },
    "11956": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "ADD",
      "path": "42"
    },
    "11957": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "11958": {
      "fn": "ERC20Template.permit",
      "offset": [
        32853,
        32879
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "11959": {
      "op": "POP"
    },
    "11960": {
      "op": "POP"
    },
    "11961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11967": {
      "op": "SHL"
    },
    "11968": {
      "op": "SUB"
    },
    "11969": {
      "fn": "ERC20Template.permit",
      "offset": [
        32910,
        32940
      ],
      "op": "DUP2",
      "path": "42",
      "statement": 82
    },
    "11970": {
      "fn": "ERC20Template.permit",
      "offset": [
        32910,
        32940
      ],
      "op": "AND",
      "path": "42"
    },
    "11971": {
      "fn": "ERC20Template.permit",
      "offset": [
        32910,
        32940
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11972": {
      "fn": "ERC20Template.permit",
      "offset": [
        32910,
        32940
      ],
      "op": "DUP1",
      "path": "42"
    },
    "11973": {
      "fn": "ERC20Template.permit",
      "offset": [
        32910,
        32940
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "11974": {
      "branch": 216,
      "fn": "ERC20Template.permit",
      "offset": [
        32910,
        32940
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "11975": {
      "fn": "ERC20Template.permit",
      "offset": [
        32910,
        32969
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2EE1"
    },
    "11978": {
      "branch": 216,
      "fn": "ERC20Template.permit",
      "offset": [
        32910,
        32969
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "11979": {
      "fn": "ERC20Template.permit",
      "offset": [
        32910,
        32969
      ],
      "op": "POP",
      "path": "42"
    },
    "11980": {
      "fn": "ERC20Template.permit",
      "offset": [
        32964,
        32969
      ],
      "op": "DUP9",
      "path": "42"
    },
    "11981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11987": {
      "op": "SHL"
    },
    "11988": {
      "op": "SUB"
    },
    "11989": {
      "fn": "ERC20Template.permit",
      "offset": [
        32944,
        32969
      ],
      "op": "AND",
      "path": "42"
    },
    "11990": {
      "fn": "ERC20Template.permit",
      "offset": [
        32944,
        32960
      ],
      "op": "DUP2",
      "path": "42"
    },
    "11991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11997": {
      "op": "SHL"
    },
    "11998": {
      "op": "SUB"
    },
    "11999": {
      "fn": "ERC20Template.permit",
      "offset": [
        32944,
        32969
      ],
      "op": "AND",
      "path": "42"
    },
    "12000": {
      "branch": 217,
      "fn": "ERC20Template.permit",
      "offset": [
        32944,
        32969
      ],
      "op": "EQ",
      "path": "42"
    },
    "12001": {
      "fn": "ERC20Template.permit",
      "offset": [
        32910,
        32969
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "12002": {
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2F2D"
    },
    "12005": {
      "branch": 217,
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "12006": {
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "12008": {
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "12009": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12013": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12015": {
      "op": "SHL"
    },
    "12016": {
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "DUP2",
      "path": "42"
    },
    "12017": {
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "12018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12020": {
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "12022": {
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "DUP3",
      "path": "42"
    },
    "12023": {
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "ADD",
      "path": "42"
    },
    "12024": {
      "op": "MSTORE"
    },
    "12025": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "12027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12029": {
      "op": "DUP3"
    },
    "12030": {
      "op": "ADD"
    },
    "12031": {
      "op": "MSTORE"
    },
    "12032": {
      "op": "PUSH32",
      "value": "0x455243323044543A20494E56414C49445F5349474E4154555245000000000000"
    },
    "12065": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12067": {
      "op": "DUP3"
    },
    "12068": {
      "op": "ADD"
    },
    "12069": {
      "op": "MSTORE"
    },
    "12070": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12072": {
      "op": "ADD"
    },
    "12073": {
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "12076": {
      "op": "JUMP"
    },
    "12077": {
      "fn": "ERC20Template.permit",
      "offset": [
        32889,
        33021
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "12078": {
      "fn": "ERC20Template.permit",
      "offset": [
        33031,
        33062
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 83,
      "value": "0x2F38"
    },
    "12081": {
      "fn": "ERC20Template.permit",
      "offset": [
        33040,
        33045
      ],
      "op": "DUP10",
      "path": "42"
    },
    "12082": {
      "fn": "ERC20Template.permit",
      "offset": [
        33047,
        33054
      ],
      "op": "DUP10",
      "path": "42"
    },
    "12083": {
      "fn": "ERC20Template.permit",
      "offset": [
        33056,
        33061
      ],
      "op": "DUP10",
      "path": "42"
    },
    "12084": {
      "fn": "ERC20Template.permit",
      "offset": [
        33031,
        33039
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3046"
    },
    "12087": {
      "fn": "ERC20Template.permit",
      "jump": "i",
      "offset": [
        33031,
        33062
      ],
      "op": "JUMP",
      "path": "42"
    },
    "12088": {
      "fn": "ERC20Template.permit",
      "offset": [
        33031,
        33062
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "12089": {
      "fn": "ERC20Template.permit",
      "offset": [
        32291,
        33069
      ],
      "op": "POP",
      "path": "42"
    },
    "12090": {
      "fn": "ERC20Template.permit",
      "offset": [
        32291,
        33069
      ],
      "op": "POP",
      "path": "42"
    },
    "12091": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "POP",
      "path": "42"
    },
    "12092": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "POP",
      "path": "42"
    },
    "12093": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "POP",
      "path": "42"
    },
    "12094": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "POP",
      "path": "42"
    },
    "12095": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "POP",
      "path": "42"
    },
    "12096": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "POP",
      "path": "42"
    },
    "12097": {
      "fn": "ERC20Template.permit",
      "offset": [
        32108,
        33069
      ],
      "op": "POP",
      "path": "42"
    },
    "12098": {
      "fn": "ERC20Template.permit",
      "jump": "o",
      "offset": [
        32108,
        33069
      ],
      "op": "JUMP",
      "path": "42"
    },
    "12099": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34882,
        35001
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "12100": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34940,
        34961
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 84,
      "value": "0x2F4B"
    },
    "12103": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34940,
        34959
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2F83"
    },
    "12106": {
      "fn": "ERC20Template.withdrawETH",
      "jump": "i",
      "offset": [
        34940,
        34961
      ],
      "op": "JUMP",
      "path": "42"
    },
    "12107": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34940,
        34961
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "12108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12114": {
      "op": "SHL"
    },
    "12115": {
      "op": "SUB"
    },
    "12116": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34971
      ],
      "op": "AND",
      "path": "42"
    },
    "12117": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x8FC"
    },
    "12120": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34972,
        34993
      ],
      "op": "SELFBALANCE",
      "path": "42"
    },
    "12121": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12122": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "DUP2",
      "path": "42"
    },
    "12123": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "12124": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "MUL",
      "path": "42"
    },
    "12125": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12126": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "12128": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "12129": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "12131": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "12133": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "12134": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "DUP1",
      "path": "42"
    },
    "12135": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "DUP4",
      "path": "42"
    },
    "12136": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "SUB",
      "path": "42"
    },
    "12137": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "DUP2",
      "path": "42"
    },
    "12138": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "DUP6",
      "path": "42"
    },
    "12139": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "DUP9",
      "path": "42"
    },
    "12140": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "DUP9",
      "path": "42"
    },
    "12141": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "CALL",
      "path": "42"
    },
    "12142": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "12143": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "POP",
      "path": "42"
    },
    "12144": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "POP",
      "path": "42"
    },
    "12145": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "POP",
      "path": "42"
    },
    "12146": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "POP",
      "path": "42"
    },
    "12147": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "12148": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "DUP1",
      "path": "42"
    },
    "12149": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "12150": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xEE6"
    },
    "12153": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "12154": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "12155": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "12157": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "DUP1",
      "path": "42"
    },
    "12158": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "12159": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "12160": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "12162": {
      "fn": "ERC20Template.withdrawETH",
      "offset": [
        34932,
        34994
      ],
      "op": "REVERT",
      "path": "42"
    },
    "12163": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "12164": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34238,
        34254
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xC"
    },
    "12166": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34238,
        34254
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "12167": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34215,
        34222
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "12169": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34215,
        34222
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12176": {
      "op": "SHL"
    },
    "12177": {
      "op": "SUB"
    },
    "12178": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34238,
        34254
      ],
      "op": "AND",
      "path": "42"
    },
    "12179": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34234,
        34398
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x300C"
    },
    "12182": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34234,
        34398
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "12183": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34307,
        34321
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 85,
      "value": "0xB"
    },
    "12185": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34307,
        34321
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "12186": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "12188": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "12189": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "12194": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12196": {
      "op": "SHL"
    },
    "12197": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP2",
      "path": "42"
    },
    "12198": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "12199": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34307,
        34321
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "12201": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "12203": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP3",
      "path": "42"
    },
    "12204": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "ADD",
      "path": "42"
    },
    "12205": {
      "op": "MSTORE"
    },
    "12206": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34307,
        34321
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "12209": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34307,
        34321
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12210": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34307,
        34321
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "12211": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34307,
        34321
      ],
      "op": "DIV",
      "path": "42"
    },
    "12212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12218": {
      "op": "SHL"
    },
    "12219": {
      "op": "SUB"
    },
    "12220": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34307,
        34321
      ],
      "op": "AND",
      "path": "42"
    },
    "12221": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34307,
        34321
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12222": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34330
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6352211E"
    },
    "12227": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34330
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12230": {
      "op": "ADD"
    },
    "12231": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "12233": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "12235": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "12236": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP1",
      "path": "42"
    },
    "12237": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP4",
      "path": "42"
    },
    "12238": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "SUB",
      "path": "42"
    },
    "12239": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP2",
      "path": "42"
    },
    "12240": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP7",
      "path": "42"
    },
    "12241": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "GAS",
      "path": "42"
    },
    "12242": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "12243": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "12244": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP1",
      "path": "42"
    },
    "12245": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "12246": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2FE3"
    },
    "12249": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "12250": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "12251": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "12253": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP1",
      "path": "42"
    },
    "12254": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "12255": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "12256": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "12258": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "REVERT",
      "path": "42"
    },
    "12259": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "12260": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "POP",
      "path": "42"
    },
    "12261": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "POP",
      "path": "42"
    },
    "12262": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "POP",
      "path": "42"
    },
    "12263": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "POP",
      "path": "42"
    },
    "12264": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "12266": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "12267": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "12268": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "12270": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "NOT",
      "path": "42"
    },
    "12271": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "12273": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP3",
      "path": "42"
    },
    "12274": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "ADD",
      "path": "42"
    },
    "12275": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "AND",
      "path": "42"
    },
    "12276": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP3",
      "path": "42"
    },
    "12277": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "ADD",
      "path": "42"
    },
    "12278": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP1",
      "path": "42"
    },
    "12279": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "12281": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "12282": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "POP",
      "path": "42"
    },
    "12283": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "DUP2",
      "path": "42"
    },
    "12284": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "ADD",
      "path": "42"
    },
    "12285": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12286": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3007"
    },
    "12289": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "12290": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12291": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "12294": {
      "fn": "ERC20Template.getPaymentCollector",
      "jump": "i",
      "offset": [
        34291,
        34333
      ],
      "op": "JUMP",
      "path": "42"
    },
    "12295": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34291,
        34333
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "12296": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34284,
        34333
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12297": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34284,
        34333
      ],
      "op": "POP",
      "path": "42"
    },
    "12298": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34163,
        34404
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12299": {
      "fn": "ERC20Template.getPaymentCollector",
      "jump": "o",
      "offset": [
        34163,
        34404
      ],
      "op": "JUMP",
      "path": "42"
    },
    "12300": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34234,
        34398
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "12301": {
      "op": "POP"
    },
    "12302": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34371,
        34387
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 86,
      "value": "0xC"
    },
    "12304": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34371,
        34387
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "12305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12311": {
      "op": "SHL"
    },
    "12312": {
      "op": "SUB"
    },
    "12313": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34371,
        34387
      ],
      "op": "AND",
      "path": "42"
    },
    "12314": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        34371,
        34387
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "12315": {
      "fn": "ERC20Template.getPaymentCollector",
      "jump": "o",
      "offset": [
        34163,
        34404
      ],
      "op": "JUMP",
      "path": "42"
    },
    "12316": {
      "offset": [
        278,
        304
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "12317": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "12319": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "DUP2",
      "path": "46"
    },
    "12320": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "DUP2",
      "path": "46"
    },
    "12321": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "12322": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "DUP2",
      "path": "46"
    },
    "12323": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "LT",
      "path": "46"
    },
    "12324": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x302C"
    },
    "12327": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "12328": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "12330": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "DUP1",
      "path": "46"
    },
    "12331": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "REVERT",
      "path": "46"
    },
    "12332": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "12333": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "12335": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "12336": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "DUP3",
      "path": "46"
    },
    "12337": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "12338": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "12340": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "12341": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "12342": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "12343": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "ADD",
      "path": "46"
    },
    "12344": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "12345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12351": {
      "op": "SHL"
    },
    "12352": {
      "op": "SUB"
    },
    "12353": {
      "offset": [
        278,
        304
      ],
      "op": "AND",
      "path": "46"
    },
    "12354": {
      "fn": "ERC20Template.getPaymentCollector",
      "offset": [
        278,
        304
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "12355": {
      "op": "POP"
    },
    "12356": {
      "offset": [
        278,
        304
      ],
      "op": "DUP2",
      "path": "46"
    },
    "12357": {
      "fn": "ERC20Template.getPaymentCollector",
      "jump": "o",
      "offset": [
        278,
        304
      ],
      "op": "JUMP",
      "path": "46"
    },
    "12358": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12365": {
      "op": "SHL"
    },
    "12366": {
      "op": "SUB"
    },
    "12367": {
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 87
    },
    "12368": {
      "branch": 241,
      "fn": "ERC20._approve",
      "offset": [
        10083,
        10102
      ],
      "op": "AND",
      "path": "3"
    },
    "12369": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30A8"
    },
    "12372": {
      "branch": 241,
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12373": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12375": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12382": {
      "op": "SHL"
    },
    "12383": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12384": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12387": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "12389": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12390": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "ADD",
      "path": "3"
    },
    "12391": {
      "op": "MSTORE"
    },
    "12392": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12394": {
      "op": "DUP1"
    },
    "12395": {
      "op": "DUP3"
    },
    "12396": {
      "op": "ADD"
    },
    "12397": {
      "op": "MSTORE"
    },
    "12398": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "12431": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12433": {
      "op": "DUP3"
    },
    "12434": {
      "op": "ADD"
    },
    "12435": {
      "op": "MSTORE"
    },
    "12436": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "12441": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12443": {
      "op": "SHL"
    },
    "12444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12446": {
      "op": "DUP3"
    },
    "12447": {
      "op": "ADD"
    },
    "12448": {
      "op": "MSTORE"
    },
    "12449": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12451": {
      "op": "ADD"
    },
    "12452": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "12455": {
      "op": "JUMP"
    },
    "12456": {
      "fn": "ERC20._approve",
      "offset": [
        10075,
        10143
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12463": {
      "op": "SHL"
    },
    "12464": {
      "op": "SUB"
    },
    "12465": {
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 88
    },
    "12466": {
      "branch": 242,
      "fn": "ERC20._approve",
      "offset": [
        10161,
        10182
      ],
      "op": "AND",
      "path": "3"
    },
    "12467": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3109"
    },
    "12470": {
      "branch": 242,
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12471": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12473": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12474": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12478": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12480": {
      "op": "SHL"
    },
    "12481": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12482": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12485": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "12487": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12488": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "ADD",
      "path": "3"
    },
    "12489": {
      "op": "MSTORE"
    },
    "12490": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12494": {
      "op": "DUP3"
    },
    "12495": {
      "op": "ADD"
    },
    "12496": {
      "op": "MSTORE"
    },
    "12497": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "12530": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12532": {
      "op": "DUP3"
    },
    "12533": {
      "op": "ADD"
    },
    "12534": {
      "op": "MSTORE"
    },
    "12535": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "12538": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12540": {
      "op": "SHL"
    },
    "12541": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12543": {
      "op": "DUP3"
    },
    "12544": {
      "op": "ADD"
    },
    "12545": {
      "op": "MSTORE"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12548": {
      "op": "ADD"
    },
    "12549": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "12552": {
      "op": "JUMP"
    },
    "12553": {
      "fn": "ERC20._approve",
      "offset": [
        10153,
        10221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12560": {
      "op": "SHL"
    },
    "12561": {
      "op": "SUB"
    },
    "12562": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 89
    },
    "12563": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12564": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "AND",
      "path": "3"
    },
    "12565": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "12567": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12568": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12569": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12570": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "12572": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "12574": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12575": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12576": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12577": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12579": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12580": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "DUP4",
      "path": "3"
    },
    "12581": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10250
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "12582": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "12583": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP8",
      "path": "3"
    },
    "12584": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "AND",
      "path": "3"
    },
    "12585": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12586": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12587": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12588": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "12589": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12590": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12591": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12592": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12593": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12594": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10259
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "12595": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "DUP6",
      "path": "3"
    },
    "12596": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12597": {
      "fn": "ERC20._approve",
      "offset": [
        10232,
        10268
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "12598": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 90
    },
    "12599": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12600": {
      "op": "DUP5"
    },
    "12601": {
      "op": "DUP2"
    },
    "12602": {
      "op": "MSTORE"
    },
    "12603": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "12636": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12637": {
      "op": "ADD"
    },
    "12638": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12640": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12641": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12642": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12643": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SUB",
      "path": "3"
    },
    "12644": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12645": {
      "fn": "ERC20._approve",
      "offset": [
        10283,
        10315
      ],
      "op": "LOG3",
      "path": "3"
    },
    "12646": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "POP",
      "path": "3"
    },
    "12647": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "POP",
      "path": "3"
    },
    "12648": {
      "fn": "ERC20._approve",
      "offset": [
        9952,
        10322
      ],
      "op": "POP",
      "path": "3"
    },
    "12649": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9952,
        10322
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12650": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1337,
        1721
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "12651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12657": {
      "op": "SHL"
    },
    "12658": {
      "op": "SUB"
    },
    "12659": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1396,
        1417
      ],
      "op": "DUP2",
      "path": "46"
    },
    "12660": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1396,
        1417
      ],
      "op": "AND",
      "path": "46"
    },
    "12661": {
      "branch": 250,
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1396,
        1417
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "12662": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1393,
        1715
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEE6"
    },
    "12665": {
      "branch": 250,
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1393,
        1715
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "12666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12672": {
      "op": "SHL"
    },
    "12673": {
      "op": "SUB"
    },
    "12674": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1478
      ],
      "op": "DUP2",
      "path": "46"
    },
    "12675": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1478
      ],
      "op": "AND",
      "path": "46"
    },
    "12676": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1432,
        1455
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "12678": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1478
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "12679": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1478
      ],
      "op": "DUP2",
      "path": "46"
    },
    "12680": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1478
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "12681": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1469
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "12683": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1478
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "12685": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1478
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "12686": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1478
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "12688": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1478
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "12689": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1458,
        1478
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "12690": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1500,
        1511
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 91
    },
    "12691": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1500,
        1511
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "12692": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1500,
        1511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "12694": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1500,
        1511
      ],
      "op": "AND",
      "path": "46"
    },
    "12695": {
      "branch": 251,
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1500,
        1520
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "12696": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x31E3"
    },
    "12699": {
      "branch": 251,
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "12700": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "12702": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "12703": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12707": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12709": {
      "op": "SHL"
    },
    "12710": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "DUP2",
      "path": "46"
    },
    "12711": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "12712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12714": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "12716": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "DUP3",
      "path": "46"
    },
    "12717": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "ADD",
      "path": "46"
    },
    "12718": {
      "op": "MSTORE"
    },
    "12719": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "12721": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12723": {
      "op": "DUP3"
    },
    "12724": {
      "op": "ADD"
    },
    "12725": {
      "op": "MSTORE"
    },
    "12726": {
      "op": "PUSH32",
      "value": "0x4552433230526F6C65733A2020414C52454144592041204D494E544552000000"
    },
    "12759": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12761": {
      "op": "DUP3"
    },
    "12762": {
      "op": "ADD"
    },
    "12763": {
      "op": "MSTORE"
    },
    "12764": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12766": {
      "op": "ADD"
    },
    "12767": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xBD0"
    },
    "12770": {
      "op": "JUMP"
    },
    "12771": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1492,
        1554
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "12772": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1568,
        1586
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 92
    },
    "12773": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1568,
        1586
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "12774": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12776": {
      "op": "NOT"
    },
    "12777": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1568,
        1586
      ],
      "op": "AND",
      "path": "46"
    },
    "12778": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1582,
        1586
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "12780": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1568,
        1586
      ],
      "op": "OR",
      "path": "46"
    },
    "12781": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1568,
        1586
      ],
      "op": "DUP2",
      "path": "46"
    },
    "12782": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1568,
        1586
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "12783": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1600,
        1625
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 93,
      "value": "0x31F7"
    },
    "12786": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1617,
        1624
      ],
      "op": "DUP3",
      "path": "46"
    },
    "12787": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1600,
        1616
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4789"
    },
    "12790": {
      "fn": "ERC20Roles._addMinter",
      "jump": "i",
      "offset": [
        1600,
        1625
      ],
      "op": "JUMP",
      "path": "46"
    },
    "12791": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1600,
        1625
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "12792": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 94,
      "value": "0x40"
    },
    "12794": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "DUP1",
      "path": "46"
    },
    "12795": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "12796": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1675,
        1690
      ],
      "op": "TIMESTAMP",
      "path": "46"
    },
    "12797": {
      "op": "DUP2"
    },
    "12798": {
      "op": "MSTORE"
    },
    "12799": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1691,
        1703
      ],
      "op": "NUMBER",
      "path": "46"
    },
    "12800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12802": {
      "op": "DUP3"
    },
    "12803": {
      "op": "ADD"
    },
    "12804": {
      "op": "MSTORE"
    },
    "12805": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1664,
        1674
      ],
      "op": "CALLER",
      "path": "46"
    },
    "12806": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1664,
        1674
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "12807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12813": {
      "op": "SHL"
    },
    "12814": {
      "op": "SUB"
    },
    "12815": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "DUP6",
      "path": "46"
    },
    "12816": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "AND",
      "path": "46"
    },
    "12817": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "12818": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "PUSH32",
      "path": "46",
      "value": "0x4F7E100EB1EE13E903798BD0D6AA854152E07EB05544F392B9409C12935C8095"
    },
    "12851": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "12852": {
      "op": "ADD"
    },
    "12853": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "12854": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "12856": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "12857": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "DUP1",
      "path": "46"
    },
    "12858": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "12859": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "SUB",
      "path": "46"
    },
    "12860": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "12861": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1644,
        1704
      ],
      "op": "LOG3",
      "path": "46"
    },
    "12862": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1418,
        1715
      ],
      "op": "POP",
      "path": "46"
    },
    "12863": {
      "fn": "ERC20Roles._addMinter",
      "offset": [
        1337,
        1721
      ],
      "op": "POP",
      "path": "46"
    },
    "12864": {
      "fn": "ERC20Roles._addMinter",
      "jump": "o",
      "offset": [
        1337,
        1721
      ],
      "op": "JUMP",
      "path": "46"
    },
    "12865": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12872": {
      "op": "SHL"
    },
    "12873": {
      "op": "SUB"
    },
    "12874": {
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 95
    },
    "12875": {
      "branch": 243,
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7410
      ],
      "op": "AND",
      "path": "3"
    },
    "12876": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32A5"
    },
    "12879": {
      "branch": 243,
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12880": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12882": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12883": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12887": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12889": {
      "op": "SHL"
    },
    "12890": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12891": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12894": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "12896": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12897": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "ADD",
      "path": "3"
    },
    "12898": {
      "op": "MSTORE"
    },
    "12899": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "12901": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12903": {
      "op": "DUP3"
    },
    "12904": {
      "op": "ADD"
    },
    "12905": {
      "op": "MSTORE"
    },
    "12906": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "12939": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12941": {
      "op": "DUP3"
    },
    "12942": {
      "op": "ADD"
    },
    "12943": {
      "op": "MSTORE"
    },
    "12944": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "12950": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "12952": {
      "op": "SHL"
    },
    "12953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12955": {
      "op": "DUP3"
    },
    "12956": {
      "op": "ADD"
    },
    "12957": {
      "op": "MSTORE"
    },
    "12958": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12960": {
      "op": "ADD"
    },
    "12961": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "12964": {
      "op": "JUMP"
    },
    "12965": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7452
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12972": {
      "op": "SHL"
    },
    "12973": {
      "op": "SUB"
    },
    "12974": {
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 96
    },
    "12975": {
      "branch": 244,
      "fn": "ERC20._transfer",
      "offset": [
        7470,
        7493
      ],
      "op": "AND",
      "path": "3"
    },
    "12976": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3307"
    },
    "12979": {
      "branch": 244,
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12980": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12982": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12983": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12987": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12989": {
      "op": "SHL"
    },
    "12990": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12991": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12994": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "12996": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12997": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "ADD",
      "path": "3"
    },
    "12998": {
      "op": "MSTORE"
    },
    "12999": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "13001": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13003": {
      "op": "DUP3"
    },
    "13004": {
      "op": "ADD"
    },
    "13005": {
      "op": "MSTORE"
    },
    "13006": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "13039": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13041": {
      "op": "DUP3"
    },
    "13042": {
      "op": "ADD"
    },
    "13043": {
      "op": "MSTORE"
    },
    "13044": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "13048": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "13050": {
      "op": "SHL"
    },
    "13051": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13053": {
      "op": "DUP3"
    },
    "13054": {
      "op": "ADD"
    },
    "13055": {
      "op": "MSTORE"
    },
    "13056": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13058": {
      "op": "ADD"
    },
    "13059": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "13062": {
      "op": "JUMP"
    },
    "13063": {
      "fn": "ERC20._transfer",
      "offset": [
        7462,
        7533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13070": {
      "op": "SHL"
    },
    "13071": {
      "op": "SUB"
    },
    "13072": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP4",
      "path": "3"
    },
    "13073": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "AND",
      "path": "3"
    },
    "13074": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7623
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13076": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13077": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13078": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13079": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "13081": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13082": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13083": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13084": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "13086": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13087": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "13088": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7643
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "13089": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 97
    },
    "13090": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13091": {
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "LT",
      "path": "3"
    },
    "13092": {
      "branch": 245,
      "fn": "ERC20._transfer",
      "offset": [
        7661,
        7684
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "13093": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x337F"
    },
    "13096": {
      "branch": 245,
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13097": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "13099": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13106": {
      "op": "SHL"
    },
    "13107": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13108": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13111": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "13113": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13114": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "ADD",
      "path": "3"
    },
    "13115": {
      "op": "MSTORE"
    },
    "13116": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "13118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13120": {
      "op": "DUP3"
    },
    "13121": {
      "op": "ADD"
    },
    "13122": {
      "op": "MSTORE"
    },
    "13123": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "13156": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13158": {
      "op": "DUP3"
    },
    "13159": {
      "op": "ADD"
    },
    "13160": {
      "op": "MSTORE"
    },
    "13161": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "13168": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "13170": {
      "op": "SHL"
    },
    "13171": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13173": {
      "op": "DUP3"
    },
    "13174": {
      "op": "ADD"
    },
    "13175": {
      "op": "MSTORE"
    },
    "13176": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13178": {
      "op": "ADD"
    },
    "13179": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "13182": {
      "op": "JUMP"
    },
    "13183": {
      "fn": "ERC20._transfer",
      "offset": [
        7653,
        7727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13190": {
      "op": "SHL"
    },
    "13191": {
      "op": "SUB"
    },
    "13192": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 98
    },
    "13193": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP6",
      "path": "3"
    },
    "13194": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "AND",
      "path": "3"
    },
    "13195": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13197": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13198": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13199": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13200": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "13202": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13203": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13204": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13205": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "13207": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13208": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13209": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7778
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "13210": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP6",
      "path": "3"
    },
    "13211": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "DUP6",
      "path": "3"
    },
    "13212": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7803
      ],
      "op": "SUB",
      "path": "3"
    },
    "13213": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13214": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7803
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "13215": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 99
    },
    "13216": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP6",
      "path": "3"
    },
    "13217": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "AND",
      "path": "3"
    },
    "13218": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13219": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13220": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13221": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13222": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7843
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "13223": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13224": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "13225": {
      "fn": "ERC20._transfer",
      "offset": [
        7797,
        7803
      ],
      "op": "DUP5",
      "path": "3"
    },
    "13226": {
      "fn": "ERC20._transfer",
      "offset": [
        7797,
        7803
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "13227": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13228": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33B6"
    },
    "13231": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13232": {
      "fn": "ERC20._transfer",
      "offset": [
        7797,
        7803
      ],
      "op": "DUP5",
      "path": "3"
    },
    "13233": {
      "fn": "ERC20._transfer",
      "offset": [
        7797,
        7803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13234": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57D6"
    },
    "13237": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7823,
        7853
      ],
      "op": "JUMP",
      "path": "3"
    },
    "13238": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13239": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "13240": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "POP",
      "path": "3"
    },
    "13241": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "POP",
      "path": "3"
    },
    "13242": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13243": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13244": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "13245": {
      "fn": "ERC20._transfer",
      "offset": [
        7823,
        7853
      ],
      "op": "POP",
      "path": "3"
    },
    "13246": {
      "fn": "ERC20._transfer",
      "offset": [
        7886,
        7895
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 100
    },
    "13247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13253": {
      "op": "SHL"
    },
    "13254": {
      "op": "SUB"
    },
    "13255": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "AND",
      "path": "3"
    },
    "13256": {
      "fn": "ERC20._transfer",
      "offset": [
        7878,
        7884
      ],
      "op": "DUP5",
      "path": "3"
    },
    "13257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13263": {
      "op": "SHL"
    },
    "13264": {
      "op": "SUB"
    },
    "13265": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "AND",
      "path": "3"
    },
    "13266": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "13299": {
      "fn": "ERC20._transfer",
      "offset": [
        7897,
        7903
      ],
      "op": "DUP5",
      "path": "3"
    },
    "13300": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "13302": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13303": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3402"
    },
    "13306": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "13307": {
      "op": "DUP2"
    },
    "13308": {
      "op": "MSTORE"
    },
    "13309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13311": {
      "op": "ADD"
    },
    "13312": {
      "op": "SWAP1"
    },
    "13313": {
      "op": "JUMP"
    },
    "13314": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13315": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "13317": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13318": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13319": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "13320": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SUB",
      "path": "3"
    },
    "13321": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13322": {
      "fn": "ERC20._transfer",
      "offset": [
        7869,
        7904
      ],
      "op": "LOG3",
      "path": "3"
    },
    "13323": {
      "fn": "ERC20._transfer",
      "offset": [
        7915,
        7961
      ],
      "op": "JUMPDEST",
      "path": "3",
      "statement": 101
    },
    "13324": {
      "fn": "ERC20._transfer",
      "offset": [
        7372,
        7968
      ],
      "op": "POP",
      "path": "3"
    },
    "13325": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "POP",
      "path": "3"
    },
    "13326": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "POP",
      "path": "3"
    },
    "13327": {
      "fn": "ERC20._transfer",
      "offset": [
        7255,
        7968
      ],
      "op": "POP",
      "path": "3"
    },
    "13328": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7255,
        7968
      ],
      "op": "JUMP",
      "path": "3"
    },
    "13329": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3245,
        3570
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "13330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13336": {
      "op": "SHL"
    },
    "13337": {
      "op": "SUB"
    },
    "13338": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "DUP2",
      "path": "46"
    },
    "13339": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "AND",
      "path": "46"
    },
    "13340": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3322,
        3345
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "13342": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "DUP2",
      "path": "46"
    },
    "13343": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "DUP2",
      "path": "46"
    },
    "13344": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "13345": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "13347": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "13349": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "13350": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "13352": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13353": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "DUP2",
      "path": "46"
    },
    "13354": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13355": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "13356": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3388,
        3415
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 102
    },
    "13357": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3388,
        3415
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "13358": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "13361": {
      "op": "NOT"
    },
    "13362": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3388,
        3415
      ],
      "op": "AND",
      "path": "46"
    },
    "13363": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3388,
        3415
      ],
      "op": "DUP2",
      "path": "46"
    },
    "13364": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3388,
        3415
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "13365": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "SWAP1",
      "path": "46",
      "statement": 103
    },
    "13366": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "13367": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13368": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3348,
        3378
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "13369": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3470,
        3480
      ],
      "op": "CALLER",
      "path": "46"
    },
    "13370": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3470,
        3480
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "13371": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "PUSH32",
      "path": "46",
      "value": "0xAEE911EEC8B2DF8F3AE0464841541B1E5F339519BD5CF51889FE8B07FECFF658"
    },
    "13404": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13405": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3472"
    },
    "13408": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13409": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3481,
        3496
      ],
      "op": "TIMESTAMP",
      "path": "46"
    },
    "13410": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3481,
        3496
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13411": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3497,
        3509
      ],
      "op": "NUMBER",
      "path": "46"
    },
    "13412": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3497,
        3509
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13413": {
      "op": "SWAP2"
    },
    "13414": {
      "op": "DUP3"
    },
    "13415": {
      "op": "MSTORE"
    },
    "13416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13418": {
      "op": "DUP3"
    },
    "13419": {
      "op": "ADD"
    },
    "13420": {
      "op": "MSTORE"
    },
    "13421": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13423": {
      "op": "ADD"
    },
    "13424": {
      "op": "SWAP1"
    },
    "13425": {
      "op": "JUMP"
    },
    "13426": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "13427": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "13429": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "13430": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "DUP1",
      "path": "46"
    },
    "13431": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "13432": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "SUB",
      "path": "46"
    },
    "13433": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13434": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3430,
        3510
      ],
      "op": "LOG3",
      "path": "46"
    },
    "13435": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3520,
        3563
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 104,
      "value": "0x118C"
    },
    "13438": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3545,
        3562
      ],
      "op": "DUP3",
      "path": "46"
    },
    "13439": {
      "fn": "ERC20Roles._removePaymentManager",
      "offset": [
        3520,
        3544
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4840"
    },
    "13442": {
      "fn": "ERC20Roles._removePaymentManager",
      "jump": "i",
      "offset": [
        3520,
        3563
      ],
      "op": "JUMP",
      "path": "46"
    },
    "13443": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1866,
        2127
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "13444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13450": {
      "op": "SHL"
    },
    "13451": {
      "op": "SUB"
    },
    "13452": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "DUP2",
      "path": "46"
    },
    "13453": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "AND",
      "path": "46"
    },
    "13454": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1925,
        1948
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "13456": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "DUP2",
      "path": "46"
    },
    "13457": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "DUP2",
      "path": "46"
    },
    "13458": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "13459": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1962
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "13461": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "13463": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "13464": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "13466": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13467": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "DUP2",
      "path": "46"
    },
    "13468": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13469": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "13470": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1981,
        2000
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 105
    },
    "13471": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1981,
        2000
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "13472": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13474": {
      "op": "NOT"
    },
    "13475": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1981,
        2000
      ],
      "op": "AND",
      "path": "46"
    },
    "13476": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1981,
        2000
      ],
      "op": "DUP2",
      "path": "46"
    },
    "13477": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1981,
        2000
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "13478": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2015,
        2077
      ],
      "op": "SWAP1",
      "path": "46",
      "statement": 106
    },
    "13479": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2015,
        2077
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "13480": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13481": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        1951,
        1971
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "13482": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2037,
        2047
      ],
      "op": "CALLER",
      "path": "46"
    },
    "13483": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2037,
        2047
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "13484": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2015,
        2077
      ],
      "op": "PUSH32",
      "path": "46",
      "value": "0xEFA2735987005AAA89C050C0FF8CC9AE7D9079D19382081C429130F98C52D480"
    },
    "13517": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2015,
        2077
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13518": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2015,
        2077
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3472"
    },
    "13521": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2015,
        2077
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13522": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2048,
        2063
      ],
      "op": "TIMESTAMP",
      "path": "46"
    },
    "13523": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2048,
        2063
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13524": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2064,
        2076
      ],
      "op": "NUMBER",
      "path": "46"
    },
    "13525": {
      "fn": "ERC20Roles._removeMinter",
      "offset": [
        2064,
        2076
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "13526": {
      "op": "SWAP2"
    },
    "13527": {
      "op": "DUP3"
    },
    "13528": {
      "op": "MSTORE"
    },
    "13529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13531": {
      "op": "DUP3"
    },
    "13532": {
      "op": "ADD"
    },
    "13533": {
      "op": "MSTORE"
    },
    "13534": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13536": {
      "op": "ADD"
    },
    "13537": {
      "op": "SWAP1"
    },
    "13538": {
      "op": "JUMP"
    },
    "13539": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16349,
        18674
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13540": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13542": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13543": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13544": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13545": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "DUP3",
      "path": "42"
    },
    "13546": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "ADD",
      "path": "42"
    },
    "13547": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13548": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "13549": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "13550": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1C"
    },
    "13552": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13553": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "13554": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "13587": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13589": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "DUP3",
      "path": "42"
    },
    "13590": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "ADD",
      "path": "42"
    },
    "13591": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "13592": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16484
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "13594": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16465,
        16521
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13595": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16686,
        16711
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3527"
    },
    "13598": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16686,
        16711
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE0"
    },
    "13600": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16686,
        16711
      ],
      "op": "DUP6",
      "path": "42"
    },
    "13601": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16686,
        16711
      ],
      "op": "ADD",
      "path": "42"
    },
    "13602": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16686,
        16698
      ],
      "op": "DUP6",
      "path": "42"
    },
    "13603": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16686,
        16711
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5B76"
    },
    "13606": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        16686,
        16711
      ],
      "op": "JUMP",
      "path": "42"
    },
    "13607": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16686,
        16711
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13608": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16737,
        16768
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3534"
    },
    "13611": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16737,
        16768
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13613": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16737,
        16768
      ],
      "op": "DUP8",
      "path": "42"
    },
    "13614": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16737,
        16768
      ],
      "op": "ADD",
      "path": "42"
    },
    "13615": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16737,
        16749
      ],
      "op": "DUP8",
      "path": "42"
    },
    "13616": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16737,
        16768
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "13619": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        16737,
        16768
      ],
      "op": "JUMP",
      "path": "42"
    },
    "13620": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16737,
        16768
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13621": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16794,
        16823
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3544"
    },
    "13624": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16794,
        16823
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13626": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16794,
        16823
      ],
      "op": "DUP9",
      "path": "42"
    },
    "13627": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16794,
        16823
      ],
      "op": "ADD",
      "path": "42"
    },
    "13628": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16794,
        16823
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13630": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16794,
        16823
      ],
      "op": "DUP10",
      "path": "42"
    },
    "13631": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16794,
        16823
      ],
      "op": "ADD",
      "path": "42"
    },
    "13632": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16794,
        16823
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "13635": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        16794,
        16823
      ],
      "op": "JUMP",
      "path": "42"
    },
    "13636": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16794,
        16823
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13637": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16849,
        16861
      ],
      "op": "DUP8",
      "path": "42"
    },
    "13638": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16849,
        16879
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13640": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16849,
        16879
      ],
      "op": "ADD",
      "path": "42"
    },
    "13641": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16849,
        16879
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "13642": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16905,
        16917
      ],
      "op": "DUP9",
      "path": "42"
    },
    "13643": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16905,
        16928
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xC0"
    },
    "13645": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16905,
        16928
      ],
      "op": "ADD",
      "path": "42"
    },
    "13646": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16905,
        16928
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "13647": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13649": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13650": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13652": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "ADD",
      "path": "42"
    },
    "13653": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3563"
    },
    "13656": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "SWAP7",
      "path": "42"
    },
    "13657": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "SWAP6",
      "path": "42"
    },
    "13658": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "SWAP5",
      "path": "42"
    },
    "13659": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "13660": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "13661": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "13662": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13663": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5BBC"
    },
    "13666": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        16644,
        16950
      ],
      "op": "JUMP",
      "path": "42"
    },
    "13667": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13668": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13670": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13671": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13673": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13674": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "DUP4",
      "path": "42"
    },
    "13675": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "SUB",
      "path": "42"
    },
    "13676": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "SUB",
      "path": "42"
    },
    "13677": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13678": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "13679": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13680": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13682": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16644,
        16950
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "13683": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16613,
        16968
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13684": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16613,
        16968
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13685": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16613,
        16968
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13686": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16613,
        16968
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13688": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16613,
        16968
      ],
      "op": "ADD",
      "path": "42"
    },
    "13689": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16613,
        16968
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "13690": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13692": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13693": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13695": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "ADD",
      "path": "42"
    },
    "13696": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x358A"
    },
    "13699": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "13700": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "13701": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13702": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x58D2"
    },
    "13705": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        16572,
        16982
      ],
      "op": "JUMP",
      "path": "42"
    },
    "13706": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13707": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13709": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13710": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13711": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13713": {
      "op": "NOT"
    },
    "13714": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13715": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "DUP5",
      "path": "42"
    },
    "13716": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "SUB",
      "path": "42"
    },
    "13717": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "ADD",
      "path": "42"
    },
    "13718": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13719": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "13720": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "13721": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13722": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "13723": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16549,
        16992
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13724": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16549,
        16992
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13725": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16572,
        16982
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13727": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16549,
        16992
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13728": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16549,
        16992
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "13729": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16549,
        16992
      ],
      "op": "ADD",
      "path": "42"
    },
    "13730": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16549,
        16992
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "13731": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16549,
        16992
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13732": {
      "op": "POP"
    },
    "13733": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17002,
        17016
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "13735": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "13737": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        16549,
        16992
      ],
      "op": "DUP3",
      "path": "42"
    },
    "13738": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17038,
        17052
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x35B9"
    },
    "13741": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17038,
        17052
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "13743": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17038,
        17052
      ],
      "op": "DUP8",
      "path": "42"
    },
    "13744": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17038,
        17052
      ],
      "op": "ADD",
      "path": "42"
    },
    "13745": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17038,
        17052
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x60"
    },
    "13747": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17038,
        17052
      ],
      "op": "DUP9",
      "path": "42"
    },
    "13748": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17038,
        17052
      ],
      "op": "ADD",
      "path": "42"
    },
    "13749": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17038,
        17052
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5BFA"
    },
    "13752": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        17038,
        17052
      ],
      "op": "JUMP",
      "path": "42"
    },
    "13753": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17038,
        17052
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13754": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13756": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13757": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13758": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "13760": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13761": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "13762": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13764": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13765": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "ADD",
      "path": "42"
    },
    "13766": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13767": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP4",
      "path": "42"
    },
    "13768": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "13769": {
      "op": "SWAP4"
    },
    "13770": {
      "op": "SWAP1"
    },
    "13771": {
      "op": "SWAP4"
    },
    "13772": {
      "op": "MSTORE"
    },
    "13773": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13775": {
      "op": "SWAP1"
    },
    "13776": {
      "op": "SWAP2"
    },
    "13777": {
      "op": "AND"
    },
    "13778": {
      "op": "SWAP1"
    },
    "13779": {
      "op": "DUP3"
    },
    "13780": {
      "op": "ADD"
    },
    "13781": {
      "op": "MSTORE"
    },
    "13782": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17054,
        17068
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "13784": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17054,
        17068
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13785": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17054,
        17068
      ],
      "op": "DUP8",
      "path": "42"
    },
    "13786": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17054,
        17068
      ],
      "op": "ADD",
      "path": "42"
    },
    "13787": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17054,
        17068
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "13788": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13790": {
      "op": "DUP4"
    },
    "13791": {
      "op": "ADD"
    },
    "13792": {
      "op": "MSTORE"
    },
    "13793": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17070,
        17084
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xA0"
    },
    "13795": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17070,
        17084
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13796": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17070,
        17084
      ],
      "op": "DUP9",
      "path": "42"
    },
    "13797": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17070,
        17084
      ],
      "op": "ADD",
      "path": "42"
    },
    "13798": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17070,
        17084
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "13799": {
      "op": "SWAP2"
    },
    "13800": {
      "op": "DUP4"
    },
    "13801": {
      "op": "ADD"
    },
    "13802": {
      "op": "SWAP2"
    },
    "13803": {
      "op": "SWAP1"
    },
    "13804": {
      "op": "SWAP2"
    },
    "13805": {
      "op": "MSTORE"
    },
    "13806": {
      "op": "ADD"
    },
    "13807": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13809": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13811": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13812": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13814": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13815": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "SUB",
      "path": "42"
    },
    "13816": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13817": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13818": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP5",
      "path": "42"
    },
    "13819": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "SUB",
      "path": "42"
    },
    "13820": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13821": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP6",
      "path": "42"
    },
    "13822": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "GAS",
      "path": "42"
    },
    "13823": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "13824": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "13825": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13826": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "13827": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3610"
    },
    "13830": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "13831": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "13832": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "13834": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "DUP1",
      "path": "42"
    },
    "13835": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "13836": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "13837": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "13839": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "REVERT",
      "path": "42"
    },
    "13840": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13841": {
      "op": "POP"
    },
    "13842": {
      "op": "POP"
    },
    "13843": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13845": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13846": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13848": {
      "op": "NOT"
    },
    "13849": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "ADD",
      "path": "42"
    },
    "13850": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13851": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "13852": {
      "op": "POP"
    },
    "13853": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17113,
        17144
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 107,
      "value": "0x362B"
    },
    "13856": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17113,
        17144
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "13857": {
      "op": "POP"
    },
    "13858": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17019,
        17085
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13860": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17113,
        17144
      ],
      "op": "DUP6",
      "path": "42"
    },
    "13861": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17113,
        17144
      ],
      "op": "ADD",
      "path": "42"
    },
    "13862": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17113,
        17125
      ],
      "op": "DUP6",
      "path": "42"
    },
    "13863": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17113,
        17144
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "13866": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        17113,
        17144
      ],
      "op": "JUMP",
      "path": "42"
    },
    "13867": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17113,
        17144
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13874": {
      "op": "SHL"
    },
    "13875": {
      "op": "SUB"
    },
    "13876": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17103,
        17144
      ],
      "op": "AND",
      "path": "42"
    },
    "13877": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17103,
        17109
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13884": {
      "op": "SHL"
    },
    "13885": {
      "op": "SUB"
    },
    "13886": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17103,
        17144
      ],
      "op": "AND",
      "path": "42"
    },
    "13887": {
      "branch": 218,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17103,
        17144
      ],
      "op": "EQ",
      "path": "42"
    },
    "13888": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3682"
    },
    "13891": {
      "branch": 218,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "13892": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13894": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "13895": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13899": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13901": {
      "op": "SHL"
    },
    "13902": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "DUP2",
      "path": "42"
    },
    "13903": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "13904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13906": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "13908": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "DUP3",
      "path": "42"
    },
    "13909": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "ADD",
      "path": "42"
    },
    "13910": {
      "op": "MSTORE"
    },
    "13911": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "13913": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13915": {
      "op": "DUP3"
    },
    "13916": {
      "op": "ADD"
    },
    "13917": {
      "op": "MSTORE"
    },
    "13918": {
      "op": "PUSH20",
      "value": "0x496E76616C69642070726F766964657220666565"
    },
    "13939": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13941": {
      "op": "SHL"
    },
    "13942": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13944": {
      "op": "DUP3"
    },
    "13945": {
      "op": "ADD"
    },
    "13946": {
      "op": "MSTORE"
    },
    "13947": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13949": {
      "op": "ADD"
    },
    "13950": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "13953": {
      "op": "JUMP"
    },
    "13954": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17095,
        17169
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13955": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17254,
        17283
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 108,
      "value": "0x3692"
    },
    "13958": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17254,
        17283
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "13960": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17254,
        17283
      ],
      "op": "DUP6",
      "path": "42"
    },
    "13961": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17254,
        17283
      ],
      "op": "ADD",
      "path": "42"
    },
    "13962": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17254,
        17283
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13964": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17254,
        17283
      ],
      "op": "DUP7",
      "path": "42"
    },
    "13965": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17254,
        17283
      ],
      "op": "ADD",
      "path": "42"
    },
    "13966": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17254,
        17283
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "13969": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        17254,
        17283
      ],
      "op": "JUMP",
      "path": "42"
    },
    "13970": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17254,
        17283
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13977": {
      "op": "SHL"
    },
    "13978": {
      "op": "SUB"
    },
    "13979": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "AND",
      "path": "42"
    },
    "13980": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17209,
        17240
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x36A8"
    },
    "13983": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17209,
        17240
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "13985": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17209,
        17240
      ],
      "op": "DUP7",
      "path": "42"
    },
    "13986": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17209,
        17240
      ],
      "op": "ADD",
      "path": "42"
    },
    "13987": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17209,
        17221
      ],
      "op": "DUP7",
      "path": "42"
    },
    "13988": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17209,
        17240
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "13991": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        17209,
        17240
      ],
      "op": "JUMP",
      "path": "42"
    },
    "13992": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17209,
        17240
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "13993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13999": {
      "op": "SHL"
    },
    "14000": {
      "op": "SUB"
    },
    "14001": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "AND",
      "path": "42"
    },
    "14002": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0xF8ED11CDAAF10ECA2B6C941FB802CB8682AFE86CAC1EB93F70D0780FA062C544"
    },
    "14035": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17297,
        17327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14037": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17297,
        17327
      ],
      "op": "DUP8",
      "path": "42"
    },
    "14038": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17297,
        17327
      ],
      "op": "ADD",
      "path": "42"
    },
    "14039": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17297,
        17327
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "14040": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17341,
        17366
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x36E4"
    },
    "14043": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17341,
        17366
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE0"
    },
    "14045": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17341,
        17366
      ],
      "op": "DUP10",
      "path": "42"
    },
    "14046": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17341,
        17366
      ],
      "op": "ADD",
      "path": "42"
    },
    "14047": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17297,
        17309
      ],
      "op": "DUP10",
      "path": "42"
    },
    "14048": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17341,
        17366
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5B76"
    },
    "14051": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        17341,
        17366
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14052": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17341,
        17366
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14053": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17380,
        17394
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x36F4"
    },
    "14056": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17380,
        17394
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "14058": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17380,
        17394
      ],
      "op": "DUP12",
      "path": "42"
    },
    "14059": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17380,
        17394
      ],
      "op": "ADD",
      "path": "42"
    },
    "14060": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17380,
        17394
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x60"
    },
    "14062": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17380,
        17394
      ],
      "op": "DUP13",
      "path": "42"
    },
    "14063": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17380,
        17394
      ],
      "op": "ADD",
      "path": "42"
    },
    "14064": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17380,
        17394
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5BFA"
    },
    "14067": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        17380,
        17394
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14068": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17380,
        17394
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14069": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17408,
        17420
      ],
      "op": "DUP11",
      "path": "42"
    },
    "14070": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17408,
        17422
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x80"
    },
    "14072": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17408,
        17422
      ],
      "op": "ADD",
      "path": "42"
    },
    "14073": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17408,
        17422
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "14074": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17436,
        17448
      ],
      "op": "DUP12",
      "path": "42"
    },
    "14075": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17436,
        17450
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xA0"
    },
    "14077": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17436,
        17450
      ],
      "op": "ADD",
      "path": "42"
    },
    "14078": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17436,
        17450
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "14079": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17464,
        17476
      ],
      "op": "DUP13",
      "path": "42"
    },
    "14080": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17464,
        17487
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xC0"
    },
    "14082": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17464,
        17487
      ],
      "op": "ADD",
      "path": "42"
    },
    "14083": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17464,
        17487
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "14084": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14086": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "14087": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3716"
    },
    "14090": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SWAP8",
      "path": "42"
    },
    "14091": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SWAP7",
      "path": "42"
    },
    "14092": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SWAP6",
      "path": "42"
    },
    "14093": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SWAP5",
      "path": "42"
    },
    "14094": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "14095": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "14096": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14097": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14098": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5C15"
    },
    "14101": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        17184,
        17497
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14102": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14103": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14105": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "14106": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14107": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14108": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SUB",
      "path": "42"
    },
    "14109": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14110": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17184,
        17497
      ],
      "op": "LOG3",
      "path": "42"
    },
    "14111": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17723,
        17724
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "14113": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17702
      ],
      "op": "DUP5",
      "path": "42"
    },
    "14114": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17720
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14116": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17720
      ],
      "op": "ADD",
      "path": "42"
    },
    "14117": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17720
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "14118": {
      "branch": 219,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17724
      ],
      "op": "GT",
      "path": "42"
    },
    "14119": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17783
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14120": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17783
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14121": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17783
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x374B"
    },
    "14124": {
      "branch": 219,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17783
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "14125": {
      "op": "POP"
    },
    "14126": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17781,
        17782
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "14128": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17769
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x373F"
    },
    "14131": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17769
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14133": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17769
      ],
      "op": "DUP7",
      "path": "42"
    },
    "14134": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17769
      ],
      "op": "ADD",
      "path": "42"
    },
    "14135": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17769
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "14137": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17769
      ],
      "op": "DUP8",
      "path": "42"
    },
    "14138": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17769
      ],
      "op": "ADD",
      "path": "42"
    },
    "14139": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17769
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "14142": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        17740,
        17769
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14143": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17769
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14150": {
      "op": "SHL"
    },
    "14151": {
      "op": "SUB"
    },
    "14152": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17783
      ],
      "op": "AND",
      "path": "42"
    },
    "14153": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17783
      ],
      "op": "EQ",
      "path": "42"
    },
    "14154": {
      "branch": 220,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17740,
        17783
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14155": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17783
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14156": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17844
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14157": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17844
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14158": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17844
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x376D"
    },
    "14161": {
      "branch": 220,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17844
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "14162": {
      "op": "POP"
    },
    "14163": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17842,
        17843
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "14165": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17799,
        17830
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3761"
    },
    "14168": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17799,
        17830
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "14170": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17799,
        17830
      ],
      "op": "DUP7",
      "path": "42"
    },
    "14171": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17799,
        17830
      ],
      "op": "ADD",
      "path": "42"
    },
    "14172": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17799,
        17811
      ],
      "op": "DUP7",
      "path": "42"
    },
    "14173": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17799,
        17830
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "14176": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        17799,
        17830
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14177": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17799,
        17830
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14184": {
      "op": "SHL"
    },
    "14185": {
      "op": "SUB"
    },
    "14186": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17799,
        17844
      ],
      "op": "AND",
      "path": "42"
    },
    "14187": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17799,
        17844
      ],
      "op": "EQ",
      "path": "42"
    },
    "14188": {
      "branch": 221,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17799,
        17844
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14189": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17690,
        17844
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14190": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17673,
        18668
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14191": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17673,
        18668
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x340B"
    },
    "14194": {
      "branch": 221,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17673,
        18668
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "14195": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17901,
        17907
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x12"
    },
    "14197": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17901,
        17907
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "14198": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14200": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14201": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "14202": {
      "op": "PUSH4",
      "value": "0x6C45E881"
    },
    "14207": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14209": {
      "op": "SHL"
    },
    "14210": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP2",
      "path": "42"
    },
    "14211": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "14212": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14213": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "14214": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17869,
        17883
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "14216": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17869,
        17883
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "14217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14223": {
      "op": "SHL"
    },
    "14224": {
      "op": "SUB"
    },
    "14225": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17901,
        17907
      ],
      "op": "AND",
      "path": "42"
    },
    "14226": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17901,
        17907
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14227": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17926
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x6C45E881"
    },
    "14232": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17926
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14233": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "14235": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14236": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP4",
      "path": "42"
    },
    "14237": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "ADD",
      "path": "42"
    },
    "14238": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "14239": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "14241": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "14242": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14243": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14244": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP3",
      "path": "42"
    },
    "14245": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14246": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "SUB",
      "path": "42"
    },
    "14247": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "ADD",
      "path": "42"
    },
    "14248": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP2",
      "path": "42"
    },
    "14249": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17901,
        17907
      ],
      "op": "DUP7",
      "path": "42"
    },
    "14250": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "GAS",
      "path": "42"
    },
    "14251": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "14252": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14253": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14254": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14255": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x37BC"
    },
    "14258": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "14259": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "14260": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "14262": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14263": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "14264": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "14265": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "14267": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "REVERT",
      "path": "42"
    },
    "14268": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14269": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "POP",
      "path": "42"
    },
    "14270": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "POP",
      "path": "42"
    },
    "14271": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "POP",
      "path": "42"
    },
    "14272": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "POP",
      "path": "42"
    },
    "14273": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14275": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "14276": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "14277": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "14279": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "NOT",
      "path": "42"
    },
    "14280": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "14282": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP3",
      "path": "42"
    },
    "14283": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "ADD",
      "path": "42"
    },
    "14284": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "AND",
      "path": "42"
    },
    "14285": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP3",
      "path": "42"
    },
    "14286": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "ADD",
      "path": "42"
    },
    "14287": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14288": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14290": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "14291": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "POP",
      "path": "42"
    },
    "14292": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "DUP2",
      "path": "42"
    },
    "14293": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "ADD",
      "path": "42"
    },
    "14294": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14295": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x37E0"
    },
    "14298": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14299": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14300": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5804"
    },
    "14303": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        17886,
        17928
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14304": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17886,
        17928
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14305": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17869,
        17928
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14306": {
      "op": "POP"
    },
    "14307": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17942,
        17956
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "14309": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17977,
        17987
      ],
      "op": "DUP2",
      "path": "42"
    },
    "14310": {
      "branch": 222,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17977,
        17987
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14311": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17974,
        18066
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x380D"
    },
    "14314": {
      "branch": 222,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17974,
        18066
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "14315": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18066
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 109,
      "value": "0x380A"
    },
    "14318": {
      "offset": [
        1761,
        1765
      ],
      "op": "PUSH8",
      "path": "42",
      "value": "0xDE0B6B3A7640000"
    },
    "14327": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18056
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3804"
    },
    "14330": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18044
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14332": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18044
      ],
      "op": "DUP10",
      "path": "42"
    },
    "14333": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18044
      ],
      "op": "ADD",
      "path": "42"
    },
    "14334": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18044
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "14335": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18049,
        18055
      ],
      "op": "DUP6",
      "path": "42"
    },
    "14336": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18048
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x498E"
    },
    "14339": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        18014,
        18056
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14340": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18056
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14341": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18060
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14342": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18060
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x499A"
    },
    "14345": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        18014,
        18066
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14346": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18014,
        18066
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14347": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18005,
        18066
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14348": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18005,
        18066
      ],
      "op": "POP",
      "path": "42"
    },
    "14349": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        17974,
        18066
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14350": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18080,
        18099
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "14352": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18102,
        18144
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x381D"
    },
    "14355": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18102,
        18132
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14357": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18102,
        18132
      ],
      "op": "DUP9",
      "path": "42"
    },
    "14358": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18102,
        18132
      ],
      "op": "ADD",
      "path": "42"
    },
    "14359": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18102,
        18132
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "14360": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18137,
        18143
      ],
      "op": "DUP4",
      "path": "42"
    },
    "14361": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18102,
        18136
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x416C"
    },
    "14364": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        18102,
        18144
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14365": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18102,
        18144
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14366": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18080,
        18144
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14367": {
      "op": "POP"
    },
    "14368": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18159,
        18295
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 110,
      "value": "0x383E"
    },
    "14371": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18175,
        18204
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3832"
    },
    "14374": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18175,
        18204
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14376": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18175,
        18204
      ],
      "op": "DUP10",
      "path": "42"
    },
    "14377": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18175,
        18204
      ],
      "op": "ADD",
      "path": "42"
    },
    "14378": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18175,
        18204
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "14380": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18175,
        18204
      ],
      "op": "DUP11",
      "path": "42"
    },
    "14381": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18175,
        18204
      ],
      "op": "ADD",
      "path": "42"
    },
    "14382": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18175,
        18204
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "14385": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        18175,
        18204
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14386": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18175,
        18204
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14387": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18205,
        18215
      ],
      "op": "CALLER",
      "path": "42"
    },
    "14388": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18241,
        18245
      ],
      "op": "ADDRESS",
      "path": "42"
    },
    "14389": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18264,
        18276
      ],
      "op": "DUP11",
      "path": "42"
    },
    "14390": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18264,
        18294
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14392": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18264,
        18294
      ],
      "op": "ADD",
      "path": "42"
    },
    "14393": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18264,
        18294
      ],
      "op": "CALLDATALOAD",
      "path": "42"
    },
    "14394": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18159,
        18174
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x401E"
    },
    "14397": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        18159,
        18295
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14398": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18159,
        18295
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14399": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18309,
        18451
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 111,
      "value": "0x386F"
    },
    "14402": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18377,
        18408
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x384E"
    },
    "14405": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18377,
        18408
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "14407": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18377,
        18408
      ],
      "op": "DUP10",
      "path": "42"
    },
    "14408": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18377,
        18408
      ],
      "op": "ADD",
      "path": "42"
    },
    "14409": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18377,
        18389
      ],
      "op": "DUP10",
      "path": "42"
    },
    "14410": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18377,
        18408
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "14413": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        18377,
        18408
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14414": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18377,
        18408
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14415": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18426,
        18437
      ],
      "op": "DUP3",
      "path": "42"
    },
    "14416": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18316,
        18345
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x385F"
    },
    "14419": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18316,
        18345
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14421": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18316,
        18345
      ],
      "op": "DUP12",
      "path": "42"
    },
    "14422": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18316,
        18345
      ],
      "op": "ADD",
      "path": "42"
    },
    "14423": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18316,
        18345
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "14425": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18316,
        18345
      ],
      "op": "DUP13",
      "path": "42"
    },
    "14426": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18316,
        18345
      ],
      "op": "ADD",
      "path": "42"
    },
    "14427": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18316,
        18345
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "14430": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        18316,
        18345
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14431": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18316,
        18345
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14438": {
      "op": "SHL"
    },
    "14439": {
      "op": "SUB"
    },
    "14440": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18309,
        18359
      ],
      "op": "AND",
      "path": "42"
    },
    "14441": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18309,
        18359
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14442": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18309,
        18451
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14443": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18309,
        18359
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x49A6"
    },
    "14446": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        18309,
        18451
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14447": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18309,
        18451
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14448": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18468,
        18478
      ],
      "op": "DUP2",
      "path": "42"
    },
    "14449": {
      "branch": 223,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18468,
        18478
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14450": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18465,
        18658
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2BF5"
    },
    "14453": {
      "branch": 223,
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18465,
        18658
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "14454": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18578,
        18584
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 112,
      "value": "0x12"
    },
    "14456": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18578,
        18584
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "14457": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14459": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14460": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "14461": {
      "op": "PUSH4",
      "value": "0x1A81876D"
    },
    "14466": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14468": {
      "op": "SHL"
    },
    "14469": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP2",
      "path": "42"
    },
    "14470": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "14471": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14472": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "14473": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18495,
        18641
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2BF5"
    },
    "14476": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18495,
        18641
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "14477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14483": {
      "op": "SHL"
    },
    "14484": {
      "op": "SUB"
    },
    "14485": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18578,
        18584
      ],
      "op": "AND",
      "path": "42"
    },
    "14486": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18578,
        18584
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14487": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18601
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x1A81876D"
    },
    "14492": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18601
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14493": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "14495": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14496": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP4",
      "path": "42"
    },
    "14497": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "ADD",
      "path": "42"
    },
    "14498": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "14499": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "14501": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "14502": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14503": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14504": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP3",
      "path": "42"
    },
    "14505": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14506": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "SUB",
      "path": "42"
    },
    "14507": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "ADD",
      "path": "42"
    },
    "14508": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP2",
      "path": "42"
    },
    "14509": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18578,
        18584
      ],
      "op": "DUP7",
      "path": "42"
    },
    "14510": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "GAS",
      "path": "42"
    },
    "14511": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "14512": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14513": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14514": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "14515": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x38C0"
    },
    "14518": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "14519": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "14520": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "14522": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14523": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "14524": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "14525": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "14527": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "REVERT",
      "path": "42"
    },
    "14528": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14529": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "POP",
      "path": "42"
    },
    "14530": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "POP",
      "path": "42"
    },
    "14531": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "POP",
      "path": "42"
    },
    "14532": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "POP",
      "path": "42"
    },
    "14533": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14535": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "14536": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "14537": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "14539": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "NOT",
      "path": "42"
    },
    "14540": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "14542": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP3",
      "path": "42"
    },
    "14543": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "ADD",
      "path": "42"
    },
    "14544": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "AND",
      "path": "42"
    },
    "14545": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP3",
      "path": "42"
    },
    "14546": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "ADD",
      "path": "42"
    },
    "14547": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP1",
      "path": "42"
    },
    "14548": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14550": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "14551": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "POP",
      "path": "42"
    },
    "14552": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "DUP2",
      "path": "42"
    },
    "14553": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "ADD",
      "path": "42"
    },
    "14554": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14555": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x38E4"
    },
    "14558": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "14559": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "14560": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5737"
    },
    "14563": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        18563,
        18603
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14564": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18563,
        18603
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "14565": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18621,
        18627
      ],
      "op": "DUP4",
      "path": "42"
    },
    "14566": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18502,
        18531
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x385F"
    },
    "14569": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18502,
        18531
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "14571": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18502,
        18531
      ],
      "op": "DUP12",
      "path": "42"
    },
    "14572": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18502,
        18531
      ],
      "op": "ADD",
      "path": "42"
    },
    "14573": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18502,
        18531
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "14575": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18502,
        18531
      ],
      "op": "DUP13",
      "path": "42"
    },
    "14576": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18502,
        18531
      ],
      "op": "ADD",
      "path": "42"
    },
    "14577": {
      "fn": "ERC20Template._checkProviderFee",
      "offset": [
        18502,
        18531
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4E12"
    },
    "14580": {
      "fn": "ERC20Template._checkProviderFee",
      "jump": "i",
      "offset": [
        18502,
        18531
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14581": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14582": {
      "fn": "SafeMath.add",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14584": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 113,
      "value": "0xDC3"
    },
    "14587": {
      "fn": "SafeMath.add",
      "offset": [
        2760,
        2761
      ],
      "op": "DUP3",
      "path": "11"
    },
    "14588": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2757
      ],
      "op": "DUP5",
      "path": "11"
    },
    "14589": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x57D6"
    },
    "14592": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14593": {
      "fn": "ERC20._mint",
      "offset": [
        8244,
        8633
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14600": {
      "op": "SHL"
    },
    "14601": {
      "op": "SUB"
    },
    "14602": {
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 114
    },
    "14603": {
      "branch": 246,
      "fn": "ERC20._mint",
      "offset": [
        8327,
        8348
      ],
      "op": "AND",
      "path": "3"
    },
    "14604": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3957"
    },
    "14607": {
      "branch": 246,
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14608": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14610": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14611": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14615": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14617": {
      "op": "SHL"
    },
    "14618": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14619": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14622": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "14624": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14625": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "ADD",
      "path": "3"
    },
    "14626": {
      "op": "MSTORE"
    },
    "14627": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14629": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14631": {
      "op": "DUP3"
    },
    "14632": {
      "op": "ADD"
    },
    "14633": {
      "op": "MSTORE"
    },
    "14634": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "14667": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14669": {
      "op": "DUP3"
    },
    "14670": {
      "op": "ADD"
    },
    "14671": {
      "op": "MSTORE"
    },
    "14672": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14674": {
      "op": "ADD"
    },
    "14675": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "14678": {
      "op": "JUMP"
    },
    "14679": {
      "fn": "ERC20._mint",
      "offset": [
        8319,
        8384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14680": {
      "fn": "ERC20._mint",
      "offset": [
        8471,
        8477
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 115
    },
    "14681": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "14683": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8467
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14685": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14686": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14687": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "14688": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3969"
    },
    "14691": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14692": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14693": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57D6"
    },
    "14696": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14697": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14698": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14699": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14700": {
      "fn": "ERC20._mint",
      "offset": [
        8455,
        8477
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "14701": {
      "op": "POP"
    },
    "14702": {
      "op": "POP"
    },
    "14703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14709": {
      "op": "SHL"
    },
    "14710": {
      "op": "SUB"
    },
    "14711": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 116
    },
    "14712": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "AND",
      "path": "3"
    },
    "14713": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14715": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14716": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14717": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14718": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14720": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14721": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14722": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14723": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14725": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14726": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8505
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "14727": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14728": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "14729": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14730": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "14731": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14732": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3996"
    },
    "14735": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14736": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "DUP5",
      "path": "3"
    },
    "14737": {
      "fn": "ERC20._mint",
      "offset": [
        8509,
        8515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14738": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57D6"
    },
    "14741": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8487,
        8515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14742": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14743": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14744": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14745": {
      "fn": "ERC20._mint",
      "offset": [
        8487,
        8515
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "14746": {
      "op": "POP"
    },
    "14747": {
      "op": "POP"
    },
    "14748": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 117,
      "value": "0x40"
    },
    "14750": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14751": {
      "op": "DUP2"
    },
    "14752": {
      "op": "DUP2"
    },
    "14753": {
      "op": "MSTORE"
    },
    "14754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14760": {
      "op": "SHL"
    },
    "14761": {
      "op": "SUB"
    },
    "14762": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14763": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "AND",
      "path": "3"
    },
    "14764": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14765": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14767": {
      "fn": "ERC20._mint",
      "offset": [
        8547,
        8548
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14768": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "14801": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14804": {
      "op": "ADD"
    },
    "14805": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14807": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14808": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14809": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14810": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SUB",
      "path": "3"
    },
    "14811": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14812": {
      "fn": "ERC20._mint",
      "offset": [
        8530,
        8567
      ],
      "op": "LOG3",
      "path": "3"
    },
    "14813": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "POP",
      "path": "42"
    },
    "14814": {
      "fn": "ERC20Template.mint",
      "offset": [
        15839,
        16130
      ],
      "op": "POP",
      "path": "42"
    },
    "14815": {
      "fn": "ERC20Template.mint",
      "jump": "o",
      "offset": [
        15839,
        16130
      ],
      "op": "JUMP",
      "path": "42"
    },
    "14816": {
      "fn": "ERC20._burn",
      "offset": [
        8953,
        9529
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14823": {
      "op": "SHL"
    },
    "14824": {
      "op": "SUB"
    },
    "14825": {
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 118
    },
    "14826": {
      "branch": 247,
      "fn": "ERC20._burn",
      "offset": [
        9036,
        9057
      ],
      "op": "AND",
      "path": "3"
    },
    "14827": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A40"
    },
    "14830": {
      "branch": 247,
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14831": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14833": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14840": {
      "op": "SHL"
    },
    "14841": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14842": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14845": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "14847": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14848": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "ADD",
      "path": "3"
    },
    "14849": {
      "op": "MSTORE"
    },
    "14850": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "14852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14854": {
      "op": "DUP3"
    },
    "14855": {
      "op": "ADD"
    },
    "14856": {
      "op": "MSTORE"
    },
    "14857": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "14890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14892": {
      "op": "DUP3"
    },
    "14893": {
      "op": "ADD"
    },
    "14894": {
      "op": "MSTORE"
    },
    "14895": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "14897": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "14899": {
      "op": "SHL"
    },
    "14900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14902": {
      "op": "DUP3"
    },
    "14903": {
      "op": "ADD"
    },
    "14904": {
      "op": "MSTORE"
    },
    "14905": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14907": {
      "op": "ADD"
    },
    "14908": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "14911": {
      "op": "JUMP"
    },
    "14912": {
      "fn": "ERC20._burn",
      "offset": [
        9028,
        9095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14919": {
      "op": "SHL"
    },
    "14920": {
      "op": "SUB"
    },
    "14921": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14922": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "AND",
      "path": "3"
    },
    "14923": {
      "fn": "ERC20._burn",
      "offset": [
        9166,
        9188
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14925": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14926": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14927": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14928": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14930": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14931": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14932": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14933": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14935": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14936": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "14937": {
      "fn": "ERC20._burn",
      "offset": [
        9191,
        9209
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "14938": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 119
    },
    "14939": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14940": {
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "LT",
      "path": "3"
    },
    "14941": {
      "branch": 248,
      "fn": "ERC20._burn",
      "offset": [
        9227,
        9251
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14942": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AB4"
    },
    "14945": {
      "branch": 248,
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14946": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14948": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14949": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14953": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14955": {
      "op": "SHL"
    },
    "14956": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14957": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14960": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "14962": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14963": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "ADD",
      "path": "3"
    },
    "14964": {
      "op": "MSTORE"
    },
    "14965": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14967": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14969": {
      "op": "DUP3"
    },
    "14970": {
      "op": "ADD"
    },
    "14971": {
      "op": "MSTORE"
    },
    "14972": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "15005": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15007": {
      "op": "DUP3"
    },
    "15008": {
      "op": "ADD"
    },
    "15009": {
      "op": "MSTORE"
    },
    "15010": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "15013": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "15015": {
      "op": "SHL"
    },
    "15016": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15018": {
      "op": "DUP3"
    },
    "15019": {
      "op": "ADD"
    },
    "15020": {
      "op": "MSTORE"
    },
    "15021": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15023": {
      "op": "ADD"
    },
    "15024": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD0"
    },
    "15027": {
      "op": "JUMP"
    },
    "15028": {
      "fn": "ERC20._burn",
      "offset": [
        9219,
        9290
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15035": {
      "op": "SHL"
    },
    "15036": {
      "op": "SUB"
    },
    "15037": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 120
    },
    "15038": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "AND",
      "path": "3"
    },
    "15039": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15041": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15042": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15043": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15044": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "15046": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15047": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15048": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15049": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15051": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15052": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9342
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "15053": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP4",
      "path": "3"
    },
    "15054": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "DUP4",
      "path": "3"
    },
    "15055": {
      "fn": "ERC20._burn",
      "offset": [
        9345,
        9368
      ],
      "op": "SUB",
      "path": "3"
    },
    "15056": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15057": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9368
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "15058": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9400
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 121,
      "value": "0x2"
    },
    "15060": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15061": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "15062": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9368
      ],
      "op": "DUP5",
      "path": "3"
    },
    "15063": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9368
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "15064": {
      "fn": "ERC20._burn",
      "offset": [
        9324,
        9333
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15065": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AE3"
    },
    "15068": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15069": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9368
      ],
      "op": "DUP5",
      "path": "3"
    },
    "15070": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15071": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C58"
    },
    "15074": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9388,
        9410
      ],
      "op": "JUMP",
      "path": "3"
    },
    "15075": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15076": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15077": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "15078": {
      "fn": "ERC20._burn",
      "offset": [
        9388,
        9410
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "15079": {
      "op": "POP"
    },
    "15080": {
      "op": "POP"
    },
    "15081": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 122,
      "value": "0x40"
    },
    "15083": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15084": {
      "op": "DUP3"
    },
    "15085": {
      "op": "DUP2"
    },
    "15086": {
      "op": "MSTORE"
    },
    "15087": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15089": {
      "fn": "ERC20._burn",
      "offset": [
        9452,
        9453
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15096": {
      "op": "SHL"
    },
    "15097": {
      "op": "SUB"
    },
    "15098": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP6",
      "path": "3"
    },
    "15099": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "AND",
      "path": "3"
    },
    "15100": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15101": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "15134": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15137": {
      "op": "ADD"
    },
    "15138": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15140": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15141": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15142": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "15143": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SUB",
      "path": "3"
    },
    "15144": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15145": {
      "fn": "ERC20._burn",
      "offset": [
        9426,
        9463
      ],
      "op": "LOG3",
      "path": "3"
    },
    "15146": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        948,
        1243
      ],
      "op": "POP",
      "path": "5"
    },
    "15147": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "POP",
      "path": "5"
    },
    "15148": {
      "fn": "ERC20Burnable.burnFrom",
      "offset": [
        882,
        1243
      ],
      "op": "POP",
      "path": "5"
    },
    "15149": {
      "fn": "ERC20Burnable.burnFrom",
      "jump": "o",
      "offset": [
        882,
        1243
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15150": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25154,
        27166
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15151": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25257,
        25267
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x15"
    },
    "15153": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25257,
        25274
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15154": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25229,
        25247
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x14"
    },
    "15156": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25229,
        25254
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15157": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25210,
        25226
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15159": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25210,
        25226
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15160": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25229,
        25274
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3B40"
    },
    "15163": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25229,
        25274
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15164": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25229,
        25274
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57D6"
    },
    "15167": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        25229,
        25274
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15168": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25229,
        25274
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15169": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25210,
        25274
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15170": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25210,
        25274
      ],
      "op": "POP",
      "path": "42"
    },
    "15171": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25284,
        25301
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15173": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25315,
        25347
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15174": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25362,
        25370
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15181": {
      "op": "SHL"
    },
    "15182": {
      "op": "SUB"
    },
    "15183": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15184": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "GT",
      "path": "42"
    },
    "15185": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15186": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3B5D"
    },
    "15189": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15190": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3B5D"
    },
    "15193": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5037"
    },
    "15196": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        25348,
        25371
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15197": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15198": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "15200": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "15201": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15202": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15203": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15204": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15205": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15206": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15208": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "MUL",
      "path": "42"
    },
    "15209": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15211": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "ADD",
      "path": "42"
    },
    "15212": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15213": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "ADD",
      "path": "42"
    },
    "15214": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "15216": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15217": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15218": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15219": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3B86"
    },
    "15222": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15223": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15224": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15226": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "ADD",
      "path": "42"
    },
    "15227": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15229": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15230": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "MUL",
      "path": "42"
    },
    "15231": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15232": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "15233": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "DUP4",
      "path": "42"
    },
    "15234": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "CALLDATACOPY",
      "path": "42"
    },
    "15235": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "ADD",
      "path": "42"
    },
    "15236": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15237": {
      "op": "POP"
    },
    "15238": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15239": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25348,
        25371
      ],
      "op": "POP",
      "path": "42"
    },
    "15240": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25315,
        25371
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15241": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25315,
        25371
      ],
      "op": "POP",
      "path": "42"
    },
    "15242": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25461,
        25470
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15244": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25480,
        26508
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15245": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25491,
        25509
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x14"
    },
    "15247": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25491,
        25516
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15248": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25489,
        25516
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15249": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25489,
        25516
      ],
      "op": "LT",
      "path": "42"
    },
    "15250": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25480,
        26508
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15251": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25480,
        26508
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3E6C"
    },
    "15254": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25480,
        26508
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15255": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25541,
        25563
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15257": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25603
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x14"
    },
    "15259": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25604,
        25605
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15260": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15261": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15262": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15263": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "LT",
      "path": "42"
    },
    "15264": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3BAB"
    },
    "15267": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15268": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3BAB"
    },
    "15271": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "15274": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        25585,
        25606
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15275": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15276": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15278": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15279": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15280": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15281": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15283": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15284": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "15285": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "15287": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15288": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15289": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "MUL",
      "path": "42"
    },
    "15290": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "ADD",
      "path": "42"
    },
    "15291": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25622
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15292": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26007
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x14"
    },
    "15294": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15295": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15302": {
      "op": "SHL"
    },
    "15303": {
      "op": "SUB"
    },
    "15304": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25622
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15305": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25622
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "15306": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25622
      ],
      "op": "AND",
      "path": "42"
    },
    "15307": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25622
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "15308": {
      "op": "POP"
    },
    "15309": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15310": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15311": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15312": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25606
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15313": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25622
      ],
      "op": "DUP6",
      "path": "42"
    },
    "15314": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25585,
        25622
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15315": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        25988
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x4C87087D"
    },
    "15320": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        25988
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15321": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26007
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15322": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26008,
        26009
      ],
      "op": "DUP9",
      "path": "42"
    },
    "15323": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26008,
        26009
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15324": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15325": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "LT",
      "path": "42"
    },
    "15326": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3BE9"
    },
    "15329": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15330": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3BE9"
    },
    "15333": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "15336": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        25989,
        26010
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15337": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15338": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15339": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15341": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15342": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15344": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15346": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "15347": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15348": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "15350": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "MUL",
      "path": "42"
    },
    "15351": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26010
      ],
      "op": "ADD",
      "path": "42"
    },
    "15352": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26013
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "15354": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26013
      ],
      "op": "ADD",
      "path": "42"
    },
    "15355": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25989,
        26013
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15356": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "15358": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "15359": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15360": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xFFFFFFFF"
    },
    "15365": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "AND",
      "path": "42"
    },
    "15366": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE0"
    },
    "15368": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "SHL",
      "path": "42"
    },
    "15369": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15370": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15371": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "15373": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "ADD",
      "path": "42"
    },
    "15374": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3C19"
    },
    "15377": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15378": {
      "op": "DUP2"
    },
    "15379": {
      "op": "MSTORE"
    },
    "15380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15382": {
      "op": "ADD"
    },
    "15383": {
      "op": "SWAP1"
    },
    "15384": {
      "op": "JUMP"
    },
    "15385": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15386": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x180"
    },
    "15389": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "15391": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "15392": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15393": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP4",
      "path": "42"
    },
    "15394": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "SUB",
      "path": "42"
    },
    "15395": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15396": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP7",
      "path": "42"
    },
    "15397": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "GAS",
      "path": "42"
    },
    "15398": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "15399": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15400": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15401": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15402": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3C37"
    },
    "15405": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15406": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "15407": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15409": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15410": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "15411": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "15412": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15414": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "REVERT",
      "path": "42"
    },
    "15415": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15416": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15417": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15418": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15419": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15420": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "15422": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "15423": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "15424": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "15426": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "NOT",
      "path": "42"
    },
    "15427": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "15429": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15430": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "ADD",
      "path": "42"
    },
    "15431": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "AND",
      "path": "42"
    },
    "15432": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15433": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "ADD",
      "path": "42"
    },
    "15434": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15435": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "15437": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15438": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15439": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15440": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "ADD",
      "path": "42"
    },
    "15441": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15442": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3C5B"
    },
    "15445": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15446": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15447": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5C6F"
    },
    "15450": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        25973,
        26014
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15451": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25973,
        26014
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15452": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "SWAP12",
      "path": "42"
    },
    "15453": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15454": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "SWAP12",
      "path": "42"
    },
    "15455": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15456": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "SWAP12",
      "path": "42"
    },
    "15457": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15458": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15459": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15460": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15461": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15462": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15463": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15464": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15465": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15466": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25641,
        26014
      ],
      "op": "POP",
      "path": "42"
    },
    "15467": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26045,
        26046
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15469": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26035,
        26044
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15470": {
      "branch": 224,
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26035,
        26046
      ],
      "op": "GT",
      "path": "42"
    },
    "15471": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26032,
        26118
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15472": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26032,
        26118
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3D01"
    },
    "15475": {
      "branch": 224,
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26032,
        26118
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15476": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26071
      ],
      "op": "DUP4",
      "path": "42",
      "statement": 123
    },
    "15477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15483": {
      "op": "SHL"
    },
    "15484": {
      "op": "SUB"
    },
    "15485": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26081
      ],
      "op": "AND",
      "path": "42"
    },
    "15486": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26081
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xF32F9476"
    },
    "15491": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26100
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x14"
    },
    "15493": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26101,
        26102
      ],
      "op": "DUP8",
      "path": "42"
    },
    "15494": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15495": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15496": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15497": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "LT",
      "path": "42"
    },
    "15498": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3C95"
    },
    "15501": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15502": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3C95"
    },
    "15505": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "15508": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26082,
        26103
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15509": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15510": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15511": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15513": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15514": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15516": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15518": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "15519": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15520": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "15522": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "MUL",
      "path": "42"
    },
    "15523": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26103
      ],
      "op": "ADD",
      "path": "42"
    },
    "15524": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "15526": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26106
      ],
      "op": "ADD",
      "path": "42"
    },
    "15527": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26082,
        26106
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15528": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26108,
        26117
      ],
      "op": "DUP5",
      "path": "42"
    },
    "15529": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "15531": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "15532": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP4",
      "path": "42"
    },
    "15533": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xFFFFFFFF"
    },
    "15538": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "AND",
      "path": "42"
    },
    "15539": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE0"
    },
    "15541": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "SHL",
      "path": "42"
    },
    "15542": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15543": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15544": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "15546": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "ADD",
      "path": "42"
    },
    "15547": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3CCE"
    },
    "15550": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "15551": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15552": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15553": {
      "op": "SWAP2"
    },
    "15554": {
      "op": "DUP3"
    },
    "15555": {
      "op": "MSTORE"
    },
    "15556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15558": {
      "op": "DUP3"
    },
    "15559": {
      "op": "ADD"
    },
    "15560": {
      "op": "MSTORE"
    },
    "15561": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15563": {
      "op": "ADD"
    },
    "15564": {
      "op": "SWAP1"
    },
    "15565": {
      "op": "JUMP"
    },
    "15566": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15567": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15569": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "15571": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "15572": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15573": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP4",
      "path": "42"
    },
    "15574": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "SUB",
      "path": "42"
    },
    "15575": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15576": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15578": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP8",
      "path": "42"
    },
    "15579": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15580": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "EXTCODESIZE",
      "path": "42"
    },
    "15581": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15582": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15583": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15584": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3CE8"
    },
    "15587": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15588": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15590": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15591": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "REVERT",
      "path": "42"
    },
    "15592": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15593": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "POP",
      "path": "42"
    },
    "15594": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "GAS",
      "path": "42"
    },
    "15595": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "CALL",
      "path": "42"
    },
    "15596": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15597": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15598": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15599": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3CFC"
    },
    "15602": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15603": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "15604": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15606": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15607": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "15608": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "15609": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15611": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "REVERT",
      "path": "42"
    },
    "15612": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15613": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "POP",
      "path": "42"
    },
    "15614": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "POP",
      "path": "42"
    },
    "15615": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "POP",
      "path": "42"
    },
    "15616": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26068,
        26118
      ],
      "op": "POP",
      "path": "42"
    },
    "15617": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26032,
        26118
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15618": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26139,
        26150
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15619": {
      "branch": 225,
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26139,
        26150
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15620": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26136,
        26222
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3D95"
    },
    "15623": {
      "branch": 225,
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26136,
        26222
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15624": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26175
      ],
      "op": "DUP4",
      "path": "42",
      "statement": 124
    },
    "15625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15631": {
      "op": "SHL"
    },
    "15632": {
      "op": "SUB"
    },
    "15633": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26185
      ],
      "op": "AND",
      "path": "42"
    },
    "15634": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26185
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xC612E48A"
    },
    "15639": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26204
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x14"
    },
    "15641": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26205,
        26206
      ],
      "op": "DUP8",
      "path": "42"
    },
    "15642": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15643": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15644": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15645": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "LT",
      "path": "42"
    },
    "15646": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3D29"
    },
    "15649": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15650": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3D29"
    },
    "15653": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "15656": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26186,
        26207
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15657": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15658": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15659": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15661": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15662": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15664": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15666": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "15667": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15668": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "15670": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "MUL",
      "path": "42"
    },
    "15671": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26207
      ],
      "op": "ADD",
      "path": "42"
    },
    "15672": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26210
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "15674": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26210
      ],
      "op": "ADD",
      "path": "42"
    },
    "15675": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26186,
        26210
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15676": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26212,
        26221
      ],
      "op": "DUP6",
      "path": "42"
    },
    "15677": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "15679": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "15680": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP4",
      "path": "42"
    },
    "15681": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xFFFFFFFF"
    },
    "15686": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "AND",
      "path": "42"
    },
    "15687": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE0"
    },
    "15689": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "SHL",
      "path": "42"
    },
    "15690": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15691": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15692": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "15694": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "ADD",
      "path": "42"
    },
    "15695": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3D62"
    },
    "15698": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "15699": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15700": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15701": {
      "op": "SWAP2"
    },
    "15702": {
      "op": "DUP3"
    },
    "15703": {
      "op": "MSTORE"
    },
    "15704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15706": {
      "op": "DUP3"
    },
    "15707": {
      "op": "ADD"
    },
    "15708": {
      "op": "MSTORE"
    },
    "15709": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15711": {
      "op": "ADD"
    },
    "15712": {
      "op": "SWAP1"
    },
    "15713": {
      "op": "JUMP"
    },
    "15714": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15715": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15717": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "15719": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "15720": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15721": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP4",
      "path": "42"
    },
    "15722": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "SUB",
      "path": "42"
    },
    "15723": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15724": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15726": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP8",
      "path": "42"
    },
    "15727": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15728": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "EXTCODESIZE",
      "path": "42"
    },
    "15729": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15730": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15731": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15732": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3D7C"
    },
    "15735": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15736": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15738": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15739": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "REVERT",
      "path": "42"
    },
    "15740": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15741": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "POP",
      "path": "42"
    },
    "15742": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "GAS",
      "path": "42"
    },
    "15743": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "CALL",
      "path": "42"
    },
    "15744": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15745": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15746": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15747": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3D90"
    },
    "15750": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15751": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "15752": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15754": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15755": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "15756": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "15757": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15759": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "REVERT",
      "path": "42"
    },
    "15760": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15761": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "POP",
      "path": "42"
    },
    "15762": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "POP",
      "path": "42"
    },
    "15763": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "POP",
      "path": "42"
    },
    "15764": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26172,
        26222
      ],
      "op": "POP",
      "path": "42"
    },
    "15765": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26136,
        26222
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15766": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26292,
        26339
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3DD8"
    },
    "15769": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26319
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x14"
    },
    "15771": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26320,
        26321
      ],
      "op": "DUP7",
      "path": "42"
    },
    "15772": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15773": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15774": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15775": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "LT",
      "path": "42"
    },
    "15776": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3DAB"
    },
    "15779": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15780": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3DAB"
    },
    "15783": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "15786": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26301,
        26322
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15787": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15788": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15790": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15791": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15792": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15793": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15795": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15796": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "DUP4",
      "path": "42"
    },
    "15797": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "15798": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "15800": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15801": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "15802": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "MUL",
      "path": "42"
    },
    "15803": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15804": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15805": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26322
      ],
      "op": "ADD",
      "path": "42"
    },
    "15806": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26338
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15813": {
      "op": "SHL"
    },
    "15814": {
      "op": "SUB"
    },
    "15815": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26301,
        26338
      ],
      "op": "AND",
      "path": "42"
    },
    "15816": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "DUP3",
      "path": "46"
    },
    "15817": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "15818": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1171
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "15820": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "15821": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "15822": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "15824": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "15825": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "15826": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "15827": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "15829": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "AND",
      "path": "46"
    },
    "15830": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "15831": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "JUMP",
      "path": "46"
    },
    "15832": {
      "branch": 226,
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26292,
        26339
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15833": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26292,
        26359
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15834": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26292,
        26359
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15835": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26292,
        26359
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3DE6"
    },
    "15838": {
      "branch": 226,
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26292,
        26359
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15839": {
      "op": "POP"
    },
    "15840": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26355,
        26359
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "15842": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26343,
        26359
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15843": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26343,
        26359
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15844": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26343,
        26359
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15845": {
      "branch": 227,
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26343,
        26359
      ],
      "op": "EQ",
      "path": "42"
    },
    "15846": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26292,
        26359
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15847": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26289,
        26498
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15848": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26289,
        26498
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3E55"
    },
    "15851": {
      "branch": 227,
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26289,
        26498
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15852": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26427
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 125,
      "value": "0x14"
    },
    "15854": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26428,
        26429
      ],
      "op": "DUP6",
      "path": "42"
    },
    "15855": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15856": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15857": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15858": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "LT",
      "path": "42"
    },
    "15859": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3DFE"
    },
    "15862": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15863": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3DFE"
    },
    "15866": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "15869": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26409,
        26430
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15870": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15871": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "15873": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15874": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "DUP3",
      "path": "42"
    },
    "15875": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15876": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15878": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15879": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15880": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "15881": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "15883": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15884": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15885": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "MUL",
      "path": "42"
    },
    "15886": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26430
      ],
      "op": "ADD",
      "path": "42"
    },
    "15887": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26446
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15888": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "DUP7",
      "path": "42"
    },
    "15889": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "15890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15896": {
      "op": "SHL"
    },
    "15897": {
      "op": "SUB"
    },
    "15898": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26446
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15899": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26446
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15900": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26446
      ],
      "op": "AND",
      "path": "42"
    },
    "15901": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26409,
        26446
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15902": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26397
      ],
      "op": "DUP8",
      "path": "42"
    },
    "15903": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26397
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15904": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26398,
        26407
      ],
      "op": "DUP10",
      "path": "42"
    },
    "15905": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26398,
        26407
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15906": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15907": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "LT",
      "path": "42"
    },
    "15908": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3E2F"
    },
    "15911": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15912": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3E2F"
    },
    "15915": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "15918": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26382,
        26408
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15919": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15926": {
      "op": "SHL"
    },
    "15927": {
      "op": "SUB"
    },
    "15928": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26446
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15929": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26446
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "15930": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26446
      ],
      "op": "AND",
      "path": "42"
    },
    "15931": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "15933": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "15934": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "DUP4",
      "path": "42"
    },
    "15935": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "MUL",
      "path": "42"
    },
    "15936": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15937": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15938": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15939": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "ADD",
      "path": "42"
    },
    "15940": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15941": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15942": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26408
      ],
      "op": "ADD",
      "path": "42"
    },
    "15943": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26382,
        26446
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "15944": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26468,
        26479
      ],
      "op": "DUP7",
      "path": "42",
      "statement": 126
    },
    "15945": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26468,
        26479
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3E51"
    },
    "15948": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26468,
        26479
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15949": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26468,
        26479
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5B5B"
    },
    "15952": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26468,
        26479
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15953": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26468,
        26479
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15954": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26468,
        26479
      ],
      "op": "SWAP8",
      "path": "42"
    },
    "15955": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26468,
        26479
      ],
      "op": "POP",
      "path": "42"
    },
    "15956": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26468,
        26479
      ],
      "op": "POP",
      "path": "42"
    },
    "15957": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26289,
        26498
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15958": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25523,
        26508
      ],
      "op": "POP",
      "path": "42"
    },
    "15959": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25523,
        26508
      ],
      "op": "POP",
      "path": "42"
    },
    "15960": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25523,
        26508
      ],
      "op": "POP",
      "path": "42"
    },
    "15961": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25523,
        26508
      ],
      "op": "POP",
      "path": "42"
    },
    "15962": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25518,
        25521
      ],
      "op": "DUP1",
      "path": "42",
      "statement": 127
    },
    "15963": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25518,
        25521
      ],
      "op": "DUP1",
      "path": "42"
    },
    "15964": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25518,
        25521
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3E64"
    },
    "15967": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25518,
        25521
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15968": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25518,
        25521
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5B5B"
    },
    "15971": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        25518,
        25521
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15972": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25518,
        25521
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15973": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25518,
        25521
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "15974": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25518,
        25521
      ],
      "op": "POP",
      "path": "42"
    },
    "15975": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25518,
        25521
      ],
      "op": "POP",
      "path": "42"
    },
    "15976": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25480,
        26508
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3B8C"
    },
    "15979": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25480,
        26508
      ],
      "op": "JUMP",
      "path": "42"
    },
    "15980": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        25480,
        26508
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15981": {
      "op": "POP"
    },
    "15982": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26595,
        26596
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 128,
      "value": "0x0"
    },
    "15984": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26589,
        26865
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "15985": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26600,
        26610
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x15"
    },
    "15987": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26600,
        26617
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "15988": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26598,
        26617
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15989": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26598,
        26617
      ],
      "op": "LT",
      "path": "42"
    },
    "15990": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26589,
        26865
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "15991": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26589,
        26865
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3FB1"
    },
    "15994": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26589,
        26865
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "15995": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26663
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 129,
      "value": "0x15"
    },
    "15997": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26664,
        26665
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15998": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "DUP2",
      "path": "42"
    },
    "15999": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "16000": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16001": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "LT",
      "path": "42"
    },
    "16002": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3E8D"
    },
    "16005": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16006": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3E8D"
    },
    "16009": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "16012": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26653,
        26666
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16013": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16014": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16016": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16017": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16018": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16019": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "16021": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16022": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16023": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "16024": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "ADD",
      "path": "42"
    },
    "16025": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "16026": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16028": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16029": {
      "op": "PUSH4",
      "value": "0xF9BFAA7D"
    },
    "16034": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16036": {
      "op": "SHL"
    },
    "16037": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16038": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16039": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26690,
        26694
      ],
      "op": "ADDRESS",
      "path": "42"
    },
    "16040": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "16042": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16043": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "ADD",
      "path": "42"
    },
    "16044": {
      "op": "MSTORE"
    },
    "16045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16051": {
      "op": "SHL"
    },
    "16052": {
      "op": "SUB"
    },
    "16053": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16054": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16055": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "AND",
      "path": "42"
    },
    "16056": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26653,
        26666
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16057": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26681
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0xF9BFAA7D"
    },
    "16062": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26681
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16063": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16065": {
      "op": "ADD"
    },
    "16066": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16068": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16070": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16071": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16072": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP4",
      "path": "42"
    },
    "16073": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "SUB",
      "path": "42"
    },
    "16074": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16075": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16077": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP8",
      "path": "42"
    },
    "16078": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16079": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "EXTCODESIZE",
      "path": "42"
    },
    "16080": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16081": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16082": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16083": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3EDB"
    },
    "16086": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16087": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16089": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16090": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "REVERT",
      "path": "42"
    },
    "16091": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16092": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "POP",
      "path": "42"
    },
    "16093": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "GAS",
      "path": "42"
    },
    "16094": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "CALL",
      "path": "42"
    },
    "16095": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16096": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16097": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16098": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3EEF"
    },
    "16101": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16102": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "16103": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16105": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16106": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "16107": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "16108": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16110": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "REVERT",
      "path": "42"
    },
    "16111": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16112": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "POP",
      "path": "42"
    },
    "16113": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "POP",
      "path": "42"
    },
    "16114": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "POP",
      "path": "42"
    },
    "16115": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26642,
        26696
      ],
      "op": "POP",
      "path": "42"
    },
    "16116": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26717,
        26740
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3F31"
    },
    "16119": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26736
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x15"
    },
    "16121": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26737,
        26738
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16122": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16123": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "16124": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16125": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "LT",
      "path": "42"
    },
    "16126": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3F09"
    },
    "16129": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16130": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3F09"
    },
    "16133": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "16136": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26726,
        26739
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16137": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16138": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16140": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16141": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16142": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16143": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "16145": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16146": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "DUP4",
      "path": "42"
    },
    "16147": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "16148": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16149": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16150": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "ADD",
      "path": "42"
    },
    "16151": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "16152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16158": {
      "op": "SHL"
    },
    "16159": {
      "op": "SUB"
    },
    "16160": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26726,
        26739
      ],
      "op": "AND",
      "path": "42"
    },
    "16161": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "DUP3",
      "path": "46"
    },
    "16162": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "16163": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1171
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "16165": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "16166": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "16167": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "16169": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "16170": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1180
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "16171": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "16172": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "16174": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "AND",
      "path": "46"
    },
    "16175": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1160,
        1187
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "16176": {
      "fn": "ERC20Roles.isMinter",
      "offset": [
        1080,
        1195
      ],
      "op": "JUMP",
      "path": "46"
    },
    "16177": {
      "branch": 228,
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26717,
        26740
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16178": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26714,
        26855
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16179": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26714,
        26855
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3F9F"
    },
    "16182": {
      "branch": 228,
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26714,
        26855
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16183": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26800
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 130,
      "value": "0x15"
    },
    "16185": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26801,
        26802
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16186": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16187": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "16188": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16189": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "LT",
      "path": "42"
    },
    "16190": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3F49"
    },
    "16193": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16194": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3F49"
    },
    "16197": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "16200": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26790,
        26803
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16201": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16202": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16203": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16205": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16206": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "16208": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16210": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "16211": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "ADD",
      "path": "42"
    },
    "16212": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16214": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16215": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "16216": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16217": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "16220": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "EXP",
      "path": "42"
    },
    "16221": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16222": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "DIV",
      "path": "42"
    },
    "16223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16229": {
      "op": "SHL"
    },
    "16230": {
      "op": "SUB"
    },
    "16231": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26790,
        26803
      ],
      "op": "AND",
      "path": "42"
    },
    "16232": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26778
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16233": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26779,
        26788
      ],
      "op": "DUP5",
      "path": "42"
    },
    "16234": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16235": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16236": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16237": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "LT",
      "path": "42"
    },
    "16238": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3F79"
    },
    "16241": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16242": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3F79"
    },
    "16245": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "16248": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26763,
        26789
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16249": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16256": {
      "op": "SHL"
    },
    "16257": {
      "op": "SUB"
    },
    "16258": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26803
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16259": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26803
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "16260": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26803
      ],
      "op": "AND",
      "path": "42"
    },
    "16261": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "16263": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "16264": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "DUP4",
      "path": "42"
    },
    "16265": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "MUL",
      "path": "42"
    },
    "16266": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16267": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16268": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16269": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "ADD",
      "path": "42"
    },
    "16270": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16271": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16272": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26789
      ],
      "op": "ADD",
      "path": "42"
    },
    "16273": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26763,
        26803
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16274": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26825,
        26836
      ],
      "op": "DUP3",
      "path": "42",
      "statement": 131
    },
    "16275": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26825,
        26836
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3F9B"
    },
    "16278": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26825,
        26836
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16279": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26825,
        26836
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5B5B"
    },
    "16282": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26825,
        26836
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16283": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26825,
        26836
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16284": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26825,
        26836
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "16285": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26825,
        26836
      ],
      "op": "POP",
      "path": "42"
    },
    "16286": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26825,
        26836
      ],
      "op": "POP",
      "path": "42"
    },
    "16287": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26714,
        26855
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16288": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26619,
        26622
      ],
      "op": "DUP1",
      "path": "42",
      "statement": 132
    },
    "16289": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26619,
        26622
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3FA9"
    },
    "16292": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26619,
        26622
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16293": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26619,
        26622
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5B5B"
    },
    "16296": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26619,
        26622
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16297": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26619,
        26622
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16298": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26619,
        26622
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16299": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26619,
        26622
      ],
      "op": "POP",
      "path": "42"
    },
    "16300": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26619,
        26622
      ],
      "op": "POP",
      "path": "42"
    },
    "16301": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26589,
        26865
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3E70"
    },
    "16304": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26589,
        26865
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16305": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26589,
        26865
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16306": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26907,
        26926
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 133,
      "value": "0x3FB9"
    },
    "16309": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26907,
        26924
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4A09"
    },
    "16312": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        26907,
        26926
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16313": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26907,
        26926
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16314": {
      "op": "POP"
    },
    "16315": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26966,
        26982
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 134,
      "value": "0xC"
    },
    "16317": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26966,
        26995
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16318": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26966,
        26995
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "16319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16325": {
      "op": "SHL"
    },
    "16326": {
      "op": "SUB"
    },
    "16327": {
      "op": "NOT"
    },
    "16328": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26966,
        26995
      ],
      "op": "AND",
      "path": "42"
    },
    "16329": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26966,
        26995
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16330": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26966,
        26995
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "16331": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        26993,
        26994
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16333": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27069,
        27151
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16334": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27080,
        27089
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16335": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27078,
        27079
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16336": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27078,
        27089
      ],
      "op": "LT",
      "path": "42"
    },
    "16337": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27069,
        27151
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16338": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27069,
        27151
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x340B"
    },
    "16341": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27069,
        27151
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16342": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27110,
        27140
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 135,
      "value": "0x3FEA"
    },
    "16345": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27121,
        27136
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16346": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27137,
        27138
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16347": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27121,
        27139
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16348": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27121,
        27139
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16349": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27121,
        27139
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16350": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27121,
        27139
      ],
      "op": "LT",
      "path": "42"
    },
    "16351": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27121,
        27139
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x180B"
    },
    "16354": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27121,
        27139
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16355": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27121,
        27139
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x180B"
    },
    "16358": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27121,
        27139
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "16361": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        27121,
        27139
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16362": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27110,
        27140
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16363": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27091,
        27094
      ],
      "op": "DUP1",
      "path": "42",
      "statement": 136
    },
    "16364": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27091,
        27094
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3FF4"
    },
    "16367": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27091,
        27094
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16368": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27091,
        27094
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5B5B"
    },
    "16371": {
      "fn": "ERC20Template._internalCleanPermissions",
      "jump": "i",
      "offset": [
        27091,
        27094
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16372": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27091,
        27094
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16373": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27091,
        27094
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16374": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27091,
        27094
      ],
      "op": "POP",
      "path": "42"
    },
    "16375": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27091,
        27094
      ],
      "op": "POP",
      "path": "42"
    },
    "16376": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27069,
        27151
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3FCD"
    },
    "16379": {
      "fn": "ERC20Template._internalCleanPermissions",
      "offset": [
        27069,
        27151
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16380": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28264,
        28389
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16381": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28359
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 137,
      "value": "0xC"
    },
    "16383": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16384": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "16385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16391": {
      "op": "SHL"
    },
    "16392": {
      "op": "SUB"
    },
    "16393": {
      "op": "NOT"
    },
    "16394": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "AND",
      "path": "42"
    },
    "16395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16401": {
      "op": "SHL"
    },
    "16402": {
      "op": "SUB"
    },
    "16403": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "16404": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16405": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "16406": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "AND",
      "path": "42"
    },
    "16407": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16408": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16409": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16410": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "OR",
      "path": "42"
    },
    "16411": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16412": {
      "fn": "ERC20Template._setPaymentCollector",
      "offset": [
        28343,
        28382
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "16413": {
      "fn": "ERC20Template._setPaymentCollector",
      "jump": "o",
      "offset": [
        28264,
        28389
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16414": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        35916,
        36296
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16415": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16417": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16418": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "16423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16425": {
      "op": "SHL"
    },
    "16426": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16427": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16434": {
      "op": "SHL"
    },
    "16435": {
      "op": "SUB"
    },
    "16436": {
      "op": "DUP4"
    },
    "16437": {
      "op": "DUP2"
    },
    "16438": {
      "op": "AND"
    },
    "16439": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "16441": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP4",
      "path": "42"
    },
    "16442": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "ADD",
      "path": "42"
    },
    "16443": {
      "op": "MSTORE"
    },
    "16444": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36055,
        36076
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16446": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36055,
        36076
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16447": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36102
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16448": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36102
      ],
      "op": "DUP7",
      "path": "42"
    },
    "16449": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36102
      ],
      "op": "AND",
      "path": "42"
    },
    "16450": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36102
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16451": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36102
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x70A08231"
    },
    "16456": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36102
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16457": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16459": {
      "op": "ADD"
    },
    "16460": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "16462": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16464": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16465": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16466": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP4",
      "path": "42"
    },
    "16467": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "SUB",
      "path": "42"
    },
    "16468": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16469": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP7",
      "path": "42"
    },
    "16470": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "GAS",
      "path": "42"
    },
    "16471": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "16472": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16473": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16474": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16475": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4068"
    },
    "16478": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16479": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "16480": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16482": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16483": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "16484": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "16485": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16487": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "REVERT",
      "path": "42"
    },
    "16488": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16489": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "POP",
      "path": "42"
    },
    "16490": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "POP",
      "path": "42"
    },
    "16491": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "POP",
      "path": "42"
    },
    "16492": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "POP",
      "path": "42"
    },
    "16493": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16495": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16496": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "16497": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "16499": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "NOT",
      "path": "42"
    },
    "16500": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "16502": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16503": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "ADD",
      "path": "42"
    },
    "16504": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "AND",
      "path": "42"
    },
    "16505": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16506": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "ADD",
      "path": "42"
    },
    "16507": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16508": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16510": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16511": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "POP",
      "path": "42"
    },
    "16512": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16513": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "ADD",
      "path": "42"
    },
    "16514": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16515": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x408C"
    },
    "16518": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16519": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16520": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5804"
    },
    "16523": {
      "fn": "ERC20Template._pullUnderlying",
      "jump": "i",
      "offset": [
        36079,
        36106
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16524": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36079,
        36106
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16525": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36055,
        36106
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16526": {
      "op": "POP"
    },
    "16527": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36116,
        36164
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 138,
      "value": "0x40A3"
    },
    "16530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16536": {
      "op": "SHL"
    },
    "16537": {
      "op": "SUB"
    },
    "16538": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36116,
        36146
      ],
      "op": "DUP7",
      "path": "42"
    },
    "16539": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36116,
        36146
      ],
      "op": "AND",
      "path": "42"
    },
    "16540": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36147,
        36151
      ],
      "op": "DUP6",
      "path": "42"
    },
    "16541": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36153,
        36155
      ],
      "op": "DUP6",
      "path": "42"
    },
    "16542": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36157,
        36163
      ],
      "op": "DUP6",
      "path": "42"
    },
    "16543": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36116,
        36146
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4AB8"
    },
    "16546": {
      "fn": "ERC20Template._pullUnderlying",
      "jump": "i",
      "offset": [
        36116,
        36164
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16547": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36116,
        36164
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16548": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36213,
        36238
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 139,
      "value": "0x40AD"
    },
    "16551": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36213,
        36226
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16552": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36231,
        36237
      ],
      "op": "DUP4",
      "path": "42"
    },
    "16553": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36213,
        36230
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x38F5"
    },
    "16556": {
      "fn": "ERC20Template._pullUnderlying",
      "jump": "i",
      "offset": [
        36213,
        36238
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16557": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36213,
        36238
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16558": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16560": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16561": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "16566": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16568": {
      "op": "SHL"
    },
    "16569": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16570": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16577": {
      "op": "SHL"
    },
    "16578": {
      "op": "SUB"
    },
    "16579": {
      "op": "DUP6"
    },
    "16580": {
      "op": "DUP2"
    },
    "16581": {
      "op": "AND"
    },
    "16582": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "16584": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP4",
      "path": "42"
    },
    "16585": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "ADD",
      "path": "42"
    },
    "16586": {
      "op": "MSTORE"
    },
    "16587": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36205
      ],
      "op": "DUP8",
      "path": "42"
    },
    "16588": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36205
      ],
      "op": "AND",
      "path": "42"
    },
    "16589": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36205
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16590": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36205
      ],
      "op": "PUSH4",
      "path": "42",
      "value": "0x70A08231"
    },
    "16595": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36205
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16598": {
      "op": "ADD"
    },
    "16599": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "16601": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16603": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16604": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16605": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP4",
      "path": "42"
    },
    "16606": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "SUB",
      "path": "42"
    },
    "16607": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16608": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP7",
      "path": "42"
    },
    "16609": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "GAS",
      "path": "42"
    },
    "16610": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "16611": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16612": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16613": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16614": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x40F3"
    },
    "16617": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16618": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "16619": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16621": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16622": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "16623": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "16624": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16626": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "REVERT",
      "path": "42"
    },
    "16627": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16628": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "POP",
      "path": "42"
    },
    "16629": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "POP",
      "path": "42"
    },
    "16630": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "POP",
      "path": "42"
    },
    "16631": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "POP",
      "path": "42"
    },
    "16632": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16634": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16635": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "16636": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "16638": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "NOT",
      "path": "42"
    },
    "16639": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "16641": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16642": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "ADD",
      "path": "42"
    },
    "16643": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "AND",
      "path": "42"
    },
    "16644": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16645": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "ADD",
      "path": "42"
    },
    "16646": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16647": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16649": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16650": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "POP",
      "path": "42"
    },
    "16651": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16652": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "ADD",
      "path": "42"
    },
    "16653": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16654": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4117"
    },
    "16657": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "16658": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16659": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5804"
    },
    "16662": {
      "fn": "ERC20Template._pullUnderlying",
      "jump": "i",
      "offset": [
        36182,
        36209
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16663": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36209
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16664": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36238
      ],
      "op": "LT",
      "path": "42"
    },
    "16665": {
      "branch": 229,
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36182,
        36238
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16666": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4165"
    },
    "16669": {
      "branch": 229,
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16670": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16672": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16673": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16677": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16679": {
      "op": "SHL"
    },
    "16680": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16681": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16684": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "16686": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16687": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "ADD",
      "path": "42"
    },
    "16688": {
      "op": "MSTORE"
    },
    "16689": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "16691": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16693": {
      "op": "DUP3"
    },
    "16694": {
      "op": "ADD"
    },
    "16695": {
      "op": "MSTORE"
    },
    "16696": {
      "op": "PUSH32",
      "value": "0x5472616E7366657220616D6F756E7420697320746F6F206C6F77000000000000"
    },
    "16729": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16731": {
      "op": "DUP3"
    },
    "16732": {
      "op": "ADD"
    },
    "16733": {
      "op": "MSTORE"
    },
    "16734": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16736": {
      "op": "ADD"
    },
    "16737": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "16740": {
      "op": "JUMP"
    },
    "16741": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36174,
        36289
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16742": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        36045,
        36296
      ],
      "op": "POP",
      "path": "42"
    },
    "16743": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        35916,
        36296
      ],
      "op": "POP",
      "path": "42"
    },
    "16744": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        35916,
        36296
      ],
      "op": "POP",
      "path": "42"
    },
    "16745": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        35916,
        36296
      ],
      "op": "POP",
      "path": "42"
    },
    "16746": {
      "fn": "ERC20Template._pullUnderlying",
      "offset": [
        35916,
        36296
      ],
      "op": "POP",
      "path": "42"
    },
    "16747": {
      "fn": "ERC20Template._pullUnderlying",
      "jump": "o",
      "offset": [
        35916,
        36296
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16748": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16749": {
      "fn": "SafeMath.sub",
      "offset": [
        3097,
        3104
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16751": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 140,
      "value": "0xDC3"
    },
    "16754": {
      "fn": "SafeMath.sub",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16755": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3124
      ],
      "op": "DUP5",
      "path": "11"
    },
    "16756": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5C58"
    },
    "16759": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16760": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38030,
        38554
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16761": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38106,
        38113
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16763": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38125,
        38134
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16764": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38144,
        38153
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16766": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38163,
        38170
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16767": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38184,
        38187
      ],
      "op": "DUP5",
      "path": "42"
    },
    "16768": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38184,
        38194
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16769": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38198,
        38200
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x41"
    },
    "16771": {
      "branch": 230,
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38184,
        38200
      ],
      "op": "EQ",
      "path": "42"
    },
    "16772": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38180,
        38242
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4193"
    },
    "16775": {
      "branch": 230,
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38180,
        38242
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16776": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38229,
        38230
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 141,
      "value": "0x0"
    },
    "16778": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38214,
        38231
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "16779": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38214,
        38231
      ],
      "op": "POP",
      "path": "42"
    },
    "16780": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38214,
        38231
      ],
      "op": "POP",
      "path": "42"
    },
    "16781": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38214,
        38231
      ],
      "op": "POP",
      "path": "42"
    },
    "16782": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38214,
        38231
      ],
      "op": "POP",
      "path": "42"
    },
    "16783": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38214,
        38231
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xAB7"
    },
    "16786": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38214,
        38231
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16787": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38180,
        38242
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16788": {
      "op": "POP"
    },
    "16789": {
      "op": "POP"
    },
    "16790": {
      "op": "POP"
    },
    "16791": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38292,
        38294
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "16793": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38283,
        38295
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16794": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38283,
        38295
      ],
      "op": "ADD",
      "path": "42"
    },
    "16795": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38277,
        38296
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16796": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38325,
        38327
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16798": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38316,
        38328
      ],
      "op": "DUP4",
      "path": "42"
    },
    "16799": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38316,
        38328
      ],
      "op": "ADD",
      "path": "42"
    },
    "16800": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38310,
        38329
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16801": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38362,
        38364
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x41"
    },
    "16803": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38353,
        38365
      ],
      "op": "DUP5",
      "path": "42"
    },
    "16804": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38353,
        38365
      ],
      "op": "ADD",
      "path": "42"
    },
    "16805": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38347,
        38366
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16806": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38368,
        38371
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xFF"
    },
    "16808": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38343,
        38372
      ],
      "op": "AND",
      "path": "42"
    },
    "16809": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38399,
        38401
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1B"
    },
    "16811": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38395,
        38401
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16812": {
      "branch": 231,
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38395,
        38401
      ],
      "op": "LT",
      "path": "42"
    },
    "16813": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38391,
        38433
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16814": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38391,
        38433
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x41BF"
    },
    "16817": {
      "branch": 231,
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38391,
        38433
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16818": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38415,
        38422
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 142,
      "value": "0x41BC"
    },
    "16821": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38420,
        38422
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1B"
    },
    "16823": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38415,
        38422
      ],
      "op": "DUP3",
      "path": "42"
    },
    "16824": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38415,
        38422
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5D2C"
    },
    "16827": {
      "fn": "ERC20Template._ecrecovery",
      "jump": "i",
      "offset": [
        38415,
        38422
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16828": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38415,
        38422
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16829": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38415,
        38422
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16830": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38415,
        38422
      ],
      "op": "POP",
      "path": "42"
    },
    "16831": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38391,
        38433
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16832": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38450
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16833": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38456
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xFF"
    },
    "16835": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38456
      ],
      "op": "AND",
      "path": "42"
    },
    "16836": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38454,
        38456
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1B"
    },
    "16838": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38456
      ],
      "op": "EQ",
      "path": "42"
    },
    "16839": {
      "branch": 232,
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38456
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16840": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38467
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16841": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38467
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16842": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38467
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x41D7"
    },
    "16845": {
      "branch": 232,
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38467
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16846": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38467
      ],
      "op": "POP",
      "path": "42"
    },
    "16847": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38460,
        38461
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16848": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38460,
        38467
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xFF"
    },
    "16850": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38460,
        38467
      ],
      "op": "AND",
      "path": "42"
    },
    "16851": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38465,
        38467
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1C"
    },
    "16853": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38460,
        38467
      ],
      "op": "EQ",
      "path": "42"
    },
    "16854": {
      "branch": 233,
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38460,
        38467
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16855": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38449,
        38467
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16856": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38445,
        38507
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16857": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38445,
        38507
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x41E8"
    },
    "16860": {
      "branch": 233,
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38445,
        38507
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16861": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38494,
        38495
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 143,
      "value": "0x0"
    },
    "16863": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38479,
        38496
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "16864": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38479,
        38496
      ],
      "op": "POP",
      "path": "42"
    },
    "16865": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38479,
        38496
      ],
      "op": "POP",
      "path": "42"
    },
    "16866": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38479,
        38496
      ],
      "op": "POP",
      "path": "42"
    },
    "16867": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38479,
        38496
      ],
      "op": "POP",
      "path": "42"
    },
    "16868": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38479,
        38496
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xAB7"
    },
    "16871": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38479,
        38496
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16872": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38445,
        38507
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16873": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 144,
      "value": "0x40"
    },
    "16875": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16876": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16877": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16879": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16880": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16881": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "16883": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16884": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "ADD",
      "path": "42"
    },
    "16885": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16886": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP4",
      "path": "42"
    },
    "16887": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "16888": {
      "op": "DUP9"
    },
    "16889": {
      "op": "SWAP1"
    },
    "16890": {
      "op": "MSTORE"
    },
    "16891": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16893": {
      "op": "DUP4"
    },
    "16894": {
      "op": "AND"
    },
    "16895": {
      "op": "SWAP2"
    },
    "16896": {
      "op": "DUP2"
    },
    "16897": {
      "op": "ADD"
    },
    "16898": {
      "op": "SWAP2"
    },
    "16899": {
      "op": "SWAP1"
    },
    "16900": {
      "op": "SWAP2"
    },
    "16901": {
      "op": "MSTORE"
    },
    "16902": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16904": {
      "op": "DUP2"
    },
    "16905": {
      "op": "ADD"
    },
    "16906": {
      "op": "DUP5"
    },
    "16907": {
      "op": "SWAP1"
    },
    "16908": {
      "op": "MSTORE"
    },
    "16909": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16911": {
      "op": "DUP2"
    },
    "16912": {
      "op": "ADD"
    },
    "16913": {
      "op": "DUP4"
    },
    "16914": {
      "op": "SWAP1"
    },
    "16915": {
      "op": "MSTORE"
    },
    "16916": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "16918": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16921": {
      "op": "ADD"
    },
    "16922": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "16924": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16926": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16927": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "16929": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP2",
      "path": "42"
    },
    "16930": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "SUB",
      "path": "42"
    },
    "16931": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16932": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16933": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP5",
      "path": "42"
    },
    "16934": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "SUB",
      "path": "42"
    },
    "16935": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "16936": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP6",
      "path": "42"
    },
    "16937": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "GAS",
      "path": "42"
    },
    "16938": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "16939": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16940": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16941": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "16942": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x423B"
    },
    "16945": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "16946": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "16947": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16949": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "DUP1",
      "path": "42"
    },
    "16950": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "16951": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "16952": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "16954": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "REVERT",
      "path": "42"
    },
    "16955": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "16956": {
      "op": "POP"
    },
    "16957": {
      "op": "POP"
    },
    "16958": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "16960": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16961": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16963": {
      "op": "NOT"
    },
    "16964": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "ADD",
      "path": "42"
    },
    "16965": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "16966": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38523,
        38547
      ],
      "op": "SWAP8",
      "path": "42"
    },
    "16967": {
      "fn": "ERC20Template._ecrecovery",
      "offset": [
        38030,
        38554
      ],
      "op": "SWAP7",
      "path": "42"
    },
    "16968": {
      "op": "POP"
    },
    "16969": {
      "op": "POP"
    },
    "16970": {
      "op": "POP"
    },
    "16971": {
      "op": "POP"
    },
    "16972": {
      "op": "POP"
    },
    "16973": {
      "op": "POP"
    },
    "16974": {
      "op": "POP"
    },
    "16975": {
      "fn": "ERC20Template._ecrecovery",
      "jump": "o",
      "offset": [
        38030,
        38554
      ],
      "op": "JUMP",
      "path": "42"
    },
    "16976": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2603,
        3074
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "16977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16983": {
      "op": "SHL"
    },
    "16984": {
      "op": "SUB"
    },
    "16985": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2680,
        2711
      ],
      "op": "DUP2",
      "path": "46"
    },
    "16986": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2680,
        2711
      ],
      "op": "AND",
      "path": "46"
    },
    "16987": {
      "branch": 252,
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2680,
        2711
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "16988": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2677,
        3068
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEE6"
    },
    "16991": {
      "branch": 252,
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2677,
        3068
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "16992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16998": {
      "op": "SHL"
    },
    "16999": {
      "op": "SUB"
    },
    "17000": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2782
      ],
      "op": "DUP2",
      "path": "46"
    },
    "17001": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2782
      ],
      "op": "AND",
      "path": "46"
    },
    "17002": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2726,
        2749
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "17004": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2782
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "17005": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2782
      ],
      "op": "DUP2",
      "path": "46"
    },
    "17006": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2782
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "17007": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2763
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "17009": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2782
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "17011": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2782
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "17012": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2782
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "17014": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2782
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "17015": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2752,
        2782
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "17016": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2804,
        2823
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 145
    },
    "17017": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2804,
        2823
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "17018": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2804,
        2823
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "17021": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2804,
        2823
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "17022": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2804,
        2823
      ],
      "op": "DIV",
      "path": "46"
    },
    "17023": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2804,
        2823
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "17025": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2804,
        2823
      ],
      "op": "AND",
      "path": "46"
    },
    "17026": {
      "branch": 253,
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2804,
        2832
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "17027": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x42D9"
    },
    "17030": {
      "branch": 253,
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "17031": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "17033": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "17034": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17038": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17040": {
      "op": "SHL"
    },
    "17041": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "17042": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "17043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17045": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "17047": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "DUP3",
      "path": "46"
    },
    "17048": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "ADD",
      "path": "46"
    },
    "17049": {
      "op": "MSTORE"
    },
    "17050": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "17052": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17054": {
      "op": "DUP3"
    },
    "17055": {
      "op": "ADD"
    },
    "17056": {
      "op": "MSTORE"
    },
    "17057": {
      "op": "PUSH32",
      "value": "0x4552433230526F6C65733A2020414C5245414459204120464545204D414E4147"
    },
    "17090": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17092": {
      "op": "DUP3"
    },
    "17093": {
      "op": "ADD"
    },
    "17094": {
      "op": "MSTORE"
    },
    "17095": {
      "op": "PUSH2",
      "value": "0x22A9"
    },
    "17098": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "17100": {
      "op": "SHL"
    },
    "17101": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17103": {
      "op": "DUP3"
    },
    "17104": {
      "op": "ADD"
    },
    "17105": {
      "op": "MSTORE"
    },
    "17106": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "17108": {
      "op": "ADD"
    },
    "17109": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xBD0"
    },
    "17112": {
      "op": "JUMP"
    },
    "17113": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2796,
        2871
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "17114": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2885,
        2911
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 146
    },
    "17115": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2885,
        2911
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "17116": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "17119": {
      "op": "NOT"
    },
    "17120": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2885,
        2911
      ],
      "op": "AND",
      "path": "46"
    },
    "17121": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2885,
        2911
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "17124": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2885,
        2911
      ],
      "op": "OR",
      "path": "46"
    },
    "17125": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2885,
        2911
      ],
      "op": "DUP2",
      "path": "46"
    },
    "17126": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2885,
        2911
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "17127": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2925,
        2960
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 147,
      "value": "0x42EF"
    },
    "17130": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2942,
        2959
      ],
      "op": "DUP3",
      "path": "46"
    },
    "17131": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2925,
        2941
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4789"
    },
    "17134": {
      "fn": "ERC20Roles._addPaymentManager",
      "jump": "i",
      "offset": [
        2925,
        2960
      ],
      "op": "JUMP",
      "path": "46"
    },
    "17135": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2925,
        2960
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "17136": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2979,
        3057
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 148,
      "value": "0x40"
    },
    "17138": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2979,
        3057
      ],
      "op": "DUP1",
      "path": "46"
    },
    "17139": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2979,
        3057
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "17140": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        3028,
        3043
      ],
      "op": "TIMESTAMP",
      "path": "46"
    },
    "17141": {
      "op": "DUP2"
    },
    "17142": {
      "op": "MSTORE"
    },
    "17143": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        3044,
        3056
      ],
      "op": "NUMBER",
      "path": "46"
    },
    "17144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17146": {
      "op": "DUP3"
    },
    "17147": {
      "op": "ADD"
    },
    "17148": {
      "op": "MSTORE"
    },
    "17149": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        3017,
        3027
      ],
      "op": "CALLER",
      "path": "46"
    },
    "17150": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        3017,
        3027
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "17151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17157": {
      "op": "SHL"
    },
    "17158": {
      "op": "SUB"
    },
    "17159": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2979,
        3057
      ],
      "op": "DUP6",
      "path": "46"
    },
    "17160": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2979,
        3057
      ],
      "op": "AND",
      "path": "46"
    },
    "17161": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2979,
        3057
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "17162": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2979,
        3057
      ],
      "op": "PUSH32",
      "path": "46",
      "value": "0xB17DA2E9910B4BA5754E8872385BA315A238BAFB5AE221FC85093C33432C40A7"
    },
    "17195": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2979,
        3057
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "17196": {
      "op": "ADD"
    },
    "17197": {
      "fn": "ERC20Roles._addPaymentManager",
      "offset": [
        2979,
        3057
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3235"
    },
    "17200": {
      "op": "JUMP"
    },
    "17201": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9084,
        11219
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17202": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9300,
        9304
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "17204": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9316,
        9337
      ],
      "op": "DUP1",
      "path": "42"
    },
    "17205": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9357
      ],
      "op": "DUP5",
      "path": "42"
    },
    "17206": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9358,
        9359
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "17208": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17209": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17210": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17211": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "LT",
      "path": "42"
    },
    "17212": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4347"
    },
    "17215": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17216": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4347"
    },
    "17219": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "17222": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        9340,
        9360
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17223": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17224": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17226": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "MUL",
      "path": "42"
    },
    "17227": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17229": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "ADD",
      "path": "42"
    },
    "17230": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "ADD",
      "path": "42"
    },
    "17231": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9340,
        9360
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17232": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9316,
        9360
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17233": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9316,
        9360
      ],
      "op": "POP",
      "path": "42"
    },
    "17234": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9396
      ],
      "op": "DUP5",
      "path": "42",
      "statement": 149
    },
    "17235": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9397,
        9398
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "17237": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17238": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17239": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17240": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "LT",
      "path": "42"
    },
    "17241": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4364"
    },
    "17244": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17245": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4364"
    },
    "17248": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "17251": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        9379,
        9399
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17252": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17253": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17255": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17256": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17257": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "MUL",
      "path": "42"
    },
    "17258": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "17259": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17260": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "17261": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "ADD",
      "path": "42"
    },
    "17262": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "ADD",
      "path": "42"
    },
    "17263": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9379,
        9399
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17264": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9370,
        9376
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x12"
    },
    "17266": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9370,
        9399
      ],
      "op": "DUP1",
      "path": "42"
    },
    "17267": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9370,
        9399
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "17268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17274": {
      "op": "SHL"
    },
    "17275": {
      "op": "SUB"
    },
    "17276": {
      "op": "NOT"
    },
    "17277": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9370,
        9399
      ],
      "op": "AND",
      "path": "42"
    },
    "17278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17284": {
      "op": "SHL"
    },
    "17285": {
      "op": "SUB"
    },
    "17286": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9370,
        9399
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "17287": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9370,
        9399
      ],
      "op": "DUP4",
      "path": "42"
    },
    "17288": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9370,
        9399
      ],
      "op": "AND",
      "path": "42"
    },
    "17289": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9370,
        9399
      ],
      "op": "OR",
      "path": "42"
    },
    "17290": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9370,
        9399
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17291": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9370,
        9399
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "17292": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9430,
        9457
      ],
      "op": "DUP2",
      "path": "42",
      "statement": 150
    },
    "17293": {
      "branch": 234,
      "fn": "ERC20Template._initialize",
      "offset": [
        9430,
        9457
      ],
      "op": "AND",
      "path": "42"
    },
    "17294": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x43EE"
    },
    "17297": {
      "branch": 234,
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17298": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "17300": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17301": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17305": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17307": {
      "op": "SHL"
    },
    "17308": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17309": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "17310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17312": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "17314": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "DUP3",
      "path": "42"
    },
    "17315": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "ADD",
      "path": "42"
    },
    "17316": {
      "op": "MSTORE"
    },
    "17317": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "17319": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17321": {
      "op": "DUP3"
    },
    "17322": {
      "op": "ADD"
    },
    "17323": {
      "op": "MSTORE"
    },
    "17324": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A20496E76616C6964206D696E7465722C2020"
    },
    "17357": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17359": {
      "op": "DUP3"
    },
    "17360": {
      "op": "ADD"
    },
    "17361": {
      "op": "MSTORE"
    },
    "17362": {
      "op": "PUSH12",
      "value": "0x7A65726F2061646472657373"
    },
    "17375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17377": {
      "op": "SHL"
    },
    "17378": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17380": {
      "op": "DUP3"
    },
    "17381": {
      "op": "ADD"
    },
    "17382": {
      "op": "MSTORE"
    },
    "17383": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "17385": {
      "op": "ADD"
    },
    "17386": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "17389": {
      "op": "JUMP"
    },
    "17390": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9409,
        9527
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17391": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9559,
        9565
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 151,
      "value": "0x12"
    },
    "17393": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9559,
        9565
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "17394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17400": {
      "op": "SHL"
    },
    "17401": {
      "op": "SUB"
    },
    "17402": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9559,
        9565
      ],
      "op": "AND",
      "path": "42"
    },
    "17403": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x445A"
    },
    "17406": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17407": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "17409": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17410": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17414": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17416": {
      "op": "SHL"
    },
    "17417": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17418": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "17419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17421": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "17423": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "DUP3",
      "path": "42"
    },
    "17424": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "ADD",
      "path": "42"
    },
    "17425": {
      "op": "MSTORE"
    },
    "17426": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "17428": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17430": {
      "op": "DUP3"
    },
    "17431": {
      "op": "ADD"
    },
    "17432": {
      "op": "MSTORE"
    },
    "17433": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A20496E76616C696420726F757465722C207A"
    },
    "17466": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17468": {
      "op": "DUP3"
    },
    "17469": {
      "op": "ADD"
    },
    "17470": {
      "op": "MSTORE"
    },
    "17471": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "17483": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "17485": {
      "op": "SHL"
    },
    "17486": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17488": {
      "op": "DUP3"
    },
    "17489": {
      "op": "ADD"
    },
    "17490": {
      "op": "MSTORE"
    },
    "17491": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "17493": {
      "op": "ADD"
    },
    "17494": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xBD0"
    },
    "17497": {
      "op": "JUMP"
    },
    "17498": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9538,
        9648
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17501": {
      "op": "NOT"
    },
    "17502": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9764,
        9768
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 152,
      "value": "0xA"
    },
    "17504": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9764,
        9837
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "17505": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "DUP7",
      "path": "42",
      "statement": 153
    },
    "17506": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17507": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9863
      ],
      "op": "DUP8",
      "path": "42"
    },
    "17508": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9863
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17509": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9864,
        9865
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "17511": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9864,
        9865
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17512": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4473"
    },
    "17515": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17516": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4473"
    },
    "17519": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "17522": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        9855,
        9866
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17523": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17524": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17526": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "MUL",
      "path": "42"
    },
    "17527": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17529": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "ADD",
      "path": "42"
    },
    "17530": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "ADD",
      "path": "42"
    },
    "17531": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9855,
        9866
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17532": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9852
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x8"
    },
    "17534": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17535": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "DUP1",
      "path": "42"
    },
    "17536": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17537": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17538": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17540": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "ADD",
      "path": "42"
    },
    "17541": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17542": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4490"
    },
    "17545": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "17546": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "17547": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17548": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4D3A"
    },
    "17551": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        9847,
        9866
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17552": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17553": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9847,
        9866
      ],
      "op": "POP",
      "path": "42"
    },
    "17554": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9894
      ],
      "op": "DUP7",
      "path": "42",
      "statement": 154
    },
    "17555": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9895,
        9896
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "17557": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17558": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17559": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17560": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "LT",
      "path": "42"
    },
    "17561": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x44A4"
    },
    "17564": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17565": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x44A4"
    },
    "17568": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "17571": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        9886,
        9897
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17572": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17573": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17575": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "MUL",
      "path": "42"
    },
    "17576": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17578": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "ADD",
      "path": "42"
    },
    "17579": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "ADD",
      "path": "42"
    },
    "17580": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9886,
        9897
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17581": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9883
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x9"
    },
    "17583": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17584": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "DUP1",
      "path": "42"
    },
    "17585": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17586": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17587": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17589": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "ADD",
      "path": "42"
    },
    "17590": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17591": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x44C1"
    },
    "17594": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "17595": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "17596": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17597": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4D3A"
    },
    "17600": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        9876,
        9897
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17601": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9876,
        9897
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17602": {
      "op": "POP"
    },
    "17603": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9907,
        9921
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 155,
      "value": "0xB"
    },
    "17605": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9907,
        9937
      ],
      "op": "DUP1",
      "path": "42"
    },
    "17606": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9907,
        9937
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "17607": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17609": {
      "op": "NOT"
    },
    "17610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17616": {
      "op": "SHL"
    },
    "17617": {
      "op": "SUB"
    },
    "17618": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9907,
        9937
      ],
      "op": "DUP5",
      "path": "42"
    },
    "17619": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9907,
        9937
      ],
      "op": "AND",
      "path": "42"
    },
    "17620": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9907,
        9937
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "17623": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9907,
        9937
      ],
      "op": "MUL",
      "path": "42"
    },
    "17624": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9947,
        9965
      ],
      "op": "AND",
      "path": "42",
      "statement": 156
    },
    "17625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17629": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "17631": {
      "op": "SHL"
    },
    "17632": {
      "op": "SUB"
    },
    "17633": {
      "op": "NOT"
    },
    "17634": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9947,
        9965
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17635": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9947,
        9965
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "17636": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9947,
        9965
      ],
      "op": "AND",
      "path": "42"
    },
    "17637": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9947,
        9965
      ],
      "op": "OR",
      "path": "42"
    },
    "17638": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9907,
        9921
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "17640": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9947,
        9965
      ],
      "op": "OR",
      "path": "42"
    },
    "17641": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9947,
        9965
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17642": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9947,
        9965
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "17643": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10076,
        10089
      ],
      "op": "DUP6",
      "path": "42",
      "statement": 157
    },
    "17644": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10076,
        10089
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17645": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10065,
        10090
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x4501"
    },
    "17648": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10065,
        10090
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17649": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10076,
        10086
      ],
      "op": "DUP8",
      "path": "42"
    },
    "17650": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10076,
        10086
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17653": {
      "op": "SWAP1"
    },
    "17654": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10076,
        10089
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x180B"
    },
    "17657": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10076,
        10089
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17658": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10076,
        10089
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x180B"
    },
    "17661": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10076,
        10089
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "17664": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        10076,
        10089
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17665": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10065,
        10090
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17666": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10129,
        10130
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "17668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17674": {
      "op": "SHL"
    },
    "17675": {
      "op": "SUB"
    },
    "17676": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10131
      ],
      "op": "AND",
      "path": "42"
    },
    "17677": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10114
      ],
      "op": "DUP7",
      "path": "42"
    },
    "17678": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10115,
        10116
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "17680": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17681": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17682": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17683": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "LT",
      "path": "42"
    },
    "17684": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x451F"
    },
    "17687": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17688": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x451F"
    },
    "17691": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "17694": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        10104,
        10117
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17695": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17696": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17698": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "MUL",
      "path": "42"
    },
    "17699": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17701": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "ADD",
      "path": "42"
    },
    "17702": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "ADD",
      "path": "42"
    },
    "17703": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10117
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17710": {
      "op": "SHL"
    },
    "17711": {
      "op": "SUB"
    },
    "17712": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10131
      ],
      "op": "AND",
      "path": "42"
    },
    "17713": {
      "branch": 235,
      "fn": "ERC20Template._initialize",
      "offset": [
        10104,
        10131
      ],
      "op": "EQ",
      "path": "42"
    },
    "17714": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10100,
        10367
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x45C9"
    },
    "17717": {
      "branch": 235,
      "fn": "ERC20Template._initialize",
      "offset": [
        10100,
        10367
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17718": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10147,
        10182
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 158,
      "value": "0x4558"
    },
    "17721": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10178
      ],
      "op": "DUP7",
      "path": "42"
    },
    "17722": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10179,
        10180
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "17724": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17725": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17726": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17727": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "LT",
      "path": "42"
    },
    "17728": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x454B"
    },
    "17731": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17732": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x454B"
    },
    "17735": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "17738": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        10168,
        10181
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17739": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17740": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17742": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "MUL",
      "path": "42"
    },
    "17743": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17745": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "ADD",
      "path": "42"
    },
    "17746": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "ADD",
      "path": "42"
    },
    "17747": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10168,
        10181
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17748": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10147,
        10167
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3FFC"
    },
    "17751": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        10147,
        10182
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17752": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10147,
        10182
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17753": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10276
      ],
      "op": "DUP6",
      "path": "42",
      "statement": 159
    },
    "17754": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10277,
        10278
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "17756": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17757": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17758": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17759": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "LT",
      "path": "42"
    },
    "17760": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x456B"
    },
    "17763": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17764": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x456B"
    },
    "17767": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "17770": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        10266,
        10279
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17771": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17772": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17774": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "MUL",
      "path": "42"
    },
    "17775": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17777": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "ADD",
      "path": "42"
    },
    "17778": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "ADD",
      "path": "42"
    },
    "17779": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10266,
        10279
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17786": {
      "op": "SHL"
    },
    "17787": {
      "op": "SUB"
    },
    "17788": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "AND",
      "path": "42"
    },
    "17789": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10238,
        10248
      ],
      "op": "CALLER",
      "path": "42"
    },
    "17790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17796": {
      "op": "SHL"
    },
    "17797": {
      "op": "SUB"
    },
    "17798": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "AND",
      "path": "42"
    },
    "17799": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x4D7694D695C57CC54947177C8E8A0E61AAE664E9223492A798C32FADFC6419CC"
    },
    "17832": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10297,
        10312
      ],
      "op": "TIMESTAMP",
      "path": "42"
    },
    "17833": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10330,
        10342
      ],
      "op": "NUMBER",
      "path": "42"
    },
    "17834": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "17836": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17837": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x45C0"
    },
    "17840": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "17841": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "17842": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17843": {
      "op": "SWAP2"
    },
    "17844": {
      "op": "DUP3"
    },
    "17845": {
      "op": "MSTORE"
    },
    "17846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17848": {
      "op": "DUP3"
    },
    "17849": {
      "op": "ADD"
    },
    "17850": {
      "op": "MSTORE"
    },
    "17851": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17853": {
      "op": "ADD"
    },
    "17854": {
      "op": "SWAP1"
    },
    "17855": {
      "op": "JUMP"
    },
    "17856": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17857": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "17859": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17860": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "DUP1",
      "path": "42"
    },
    "17861": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "17862": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "SUB",
      "path": "42"
    },
    "17863": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17864": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10201,
        10356
      ],
      "op": "LOG3",
      "path": "42"
    },
    "17865": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10100,
        10367
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17866": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10412
      ],
      "op": "DUP6",
      "path": "42",
      "statement": 160
    },
    "17867": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10413,
        10414
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "17869": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17870": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17871": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17872": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "LT",
      "path": "42"
    },
    "17873": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x45DC"
    },
    "17876": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17877": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x45DC"
    },
    "17880": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "17883": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        10402,
        10415
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17884": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17885": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17887": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "MUL",
      "path": "42"
    },
    "17888": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17890": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "ADD",
      "path": "42"
    },
    "17891": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "ADD",
      "path": "42"
    },
    "17892": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10402,
        10415
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17893": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10399
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xD"
    },
    "17895": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10399
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "17897": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "17900": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "EXP",
      "path": "42"
    },
    "17901": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17902": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "17903": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17910": {
      "op": "SHL"
    },
    "17911": {
      "op": "SUB"
    },
    "17912": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "MUL",
      "path": "42"
    },
    "17913": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "NOT",
      "path": "42"
    },
    "17914": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "AND",
      "path": "42"
    },
    "17915": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17916": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "DUP4",
      "path": "42"
    },
    "17917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17923": {
      "op": "SHL"
    },
    "17924": {
      "op": "SUB"
    },
    "17925": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "AND",
      "path": "42"
    },
    "17926": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "MUL",
      "path": "42"
    },
    "17927": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "OR",
      "path": "42"
    },
    "17928": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17929": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "17930": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10376,
        10415
      ],
      "op": "POP",
      "path": "42"
    },
    "17931": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10459
      ],
      "op": "DUP6",
      "path": "42",
      "statement": 161
    },
    "17932": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10460,
        10461
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x3"
    },
    "17934": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17935": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17936": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17937": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "LT",
      "path": "42"
    },
    "17938": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x461D"
    },
    "17941": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "17942": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x461D"
    },
    "17945": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "17948": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        10449,
        10462
      ],
      "op": "JUMP",
      "path": "42"
    },
    "17949": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "17950": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17952": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "MUL",
      "path": "42"
    },
    "17953": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "17955": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "ADD",
      "path": "42"
    },
    "17956": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "ADD",
      "path": "42"
    },
    "17957": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10449,
        10462
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "17958": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10446
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE"
    },
    "17960": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10446
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "17962": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "17965": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "EXP",
      "path": "42"
    },
    "17966": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17967": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "17968": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "DUP2",
      "path": "42"
    },
    "17969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17975": {
      "op": "SHL"
    },
    "17976": {
      "op": "SUB"
    },
    "17977": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "MUL",
      "path": "42"
    },
    "17978": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "NOT",
      "path": "42"
    },
    "17979": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "AND",
      "path": "42"
    },
    "17980": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17981": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "DUP4",
      "path": "42"
    },
    "17982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17988": {
      "op": "SHL"
    },
    "17989": {
      "op": "SUB"
    },
    "17990": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "AND",
      "path": "42"
    },
    "17991": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "MUL",
      "path": "42"
    },
    "17992": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "OR",
      "path": "42"
    },
    "17993": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "17994": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "17995": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10425,
        10462
      ],
      "op": "POP",
      "path": "42"
    },
    "17996": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10503
      ],
      "op": "DUP4",
      "path": "42",
      "statement": 162
    },
    "17997": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10504,
        10505
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "17999": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "DUP2",
      "path": "42"
    },
    "18000": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "18001": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "DUP2",
      "path": "42"
    },
    "18002": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "LT",
      "path": "42"
    },
    "18003": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x465E"
    },
    "18006": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "18007": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x465E"
    },
    "18010": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57EE"
    },
    "18013": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        10497,
        10506
      ],
      "op": "JUMP",
      "path": "42"
    },
    "18014": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "18015": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "18017": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18018": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "DUP2",
      "path": "42"
    },
    "18019": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "MUL",
      "path": "42"
    },
    "18020": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "18021": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18022": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "18023": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "ADD",
      "path": "42"
    },
    "18024": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "DUP2",
      "path": "42"
    },
    "18025": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "ADD",
      "path": "42"
    },
    "18026": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10497,
        10506
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "18027": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10472,
        10494
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xF"
    },
    "18029": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10472,
        10506
      ],
      "op": "DUP2",
      "path": "42"
    },
    "18030": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10472,
        10506
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18031": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10472,
        10506
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "18032": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10582,
        10605
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 163,
      "value": "0xD"
    },
    "18034": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10582,
        10605
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "18035": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10619,
        10640
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xE"
    },
    "18037": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10619,
        10640
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "18038": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "18040": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "DUP1",
      "path": "42"
    },
    "18041": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "18042": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10558,
        10568
      ],
      "op": "CALLER",
      "path": "42"
    },
    "18043": {
      "op": "DUP2"
    },
    "18044": {
      "op": "MSTORE"
    },
    "18045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18051": {
      "op": "SHL"
    },
    "18052": {
      "op": "SUB"
    },
    "18053": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10582,
        10605
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "18054": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10582,
        10605
      ],
      "op": "DUP5",
      "path": "42"
    },
    "18055": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10582,
        10605
      ],
      "op": "AND",
      "path": "42"
    },
    "18056": {
      "op": "SWAP6"
    },
    "18057": {
      "op": "DUP2"
    },
    "18058": {
      "op": "ADD"
    },
    "18059": {
      "op": "SWAP6"
    },
    "18060": {
      "op": "SWAP1"
    },
    "18061": {
      "op": "SWAP6"
    },
    "18062": {
      "op": "MSTORE"
    },
    "18063": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10619,
        10640
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "18064": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10619,
        10640
      ],
      "op": "AND",
      "path": "42"
    },
    "18065": {
      "op": "SWAP1"
    },
    "18066": {
      "op": "DUP4"
    },
    "18067": {
      "op": "ADD"
    },
    "18068": {
      "op": "MSTORE"
    },
    "18069": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18071": {
      "op": "DUP3"
    },
    "18072": {
      "op": "ADD"
    },
    "18073": {
      "op": "MSTORE"
    },
    "18074": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x2AB4B3FC023109C2D0DA394BDA239166C833F63C42B71B67ED4B836DCA0DDFE"
    },
    "18107": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18108": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18110": {
      "op": "ADD"
    },
    "18111": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "18113": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "18114": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "DUP1",
      "path": "42"
    },
    "18115": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "18116": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "SUB",
      "path": "42"
    },
    "18117": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18118": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10521,
        10686
      ],
      "op": "LOG1",
      "path": "42"
    },
    "18119": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 164,
      "value": "0x40"
    },
    "18121": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "18122": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10755,
        10764
      ],
      "op": "CHAINID",
      "path": "42"
    },
    "18123": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10755,
        10764
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18124": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10853,
        10986
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
    },
    "18157": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10853,
        10986
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18158": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x46F9"
    },
    "18161": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18162": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11020,
        11025
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x8"
    },
    "18164": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11020,
        11025
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18165": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5D51"
    },
    "18168": {
      "fn": "ERC20Template._initialize",
      "jump": "i",
      "offset": [
        11004,
        11027
      ],
      "op": "JUMP",
      "path": "42"
    },
    "18169": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "18170": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "18172": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "DUP1",
      "path": "42"
    },
    "18173": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "18174": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "18175": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "DUP3",
      "path": "42"
    },
    "18176": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18177": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "SUB",
      "path": "42"
    },
    "18178": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "DUP3",
      "path": "42"
    },
    "18179": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11004,
        11027
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "18180": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "DUP3",
      "path": "42"
    },
    "18181": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "DUP3",
      "path": "42"
    },
    "18182": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "ADD",
      "path": "42"
    },
    "18183": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "DUP3",
      "path": "42"
    },
    "18184": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "18185": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "18187": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "DUP4",
      "path": "42"
    },
    "18188": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "18189": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "18191": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "18193": {
      "op": "SHL"
    },
    "18194": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "18196": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "18197": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "DUP5",
      "path": "42"
    },
    "18198": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "ADD",
      "path": "42"
    },
    "18199": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11055,
        11065
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "18200": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "DUP2",
      "path": "42"
    },
    "18201": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "18202": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "18203": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "DUP4",
      "path": "42"
    },
    "18204": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "ADD",
      "path": "42"
    },
    "18205": {
      "op": "SWAP4"
    },
    "18206": {
      "op": "SWAP1"
    },
    "18207": {
      "op": "SWAP4"
    },
    "18208": {
      "op": "MSTORE"
    },
    "18209": {
      "op": "DUP2"
    },
    "18210": {
      "op": "ADD"
    },
    "18211": {
      "op": "SWAP2"
    },
    "18212": {
      "op": "SWAP1"
    },
    "18213": {
      "op": "SWAP2"
    },
    "18214": {
      "op": "MSTORE"
    },
    "18215": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11045,
        11066
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
    },
    "18248": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18250": {
      "op": "DUP3"
    },
    "18251": {
      "op": "ADD"
    },
    "18252": {
      "op": "MSTORE"
    },
    "18253": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18255": {
      "op": "DUP2"
    },
    "18256": {
      "op": "ADD"
    },
    "18257": {
      "op": "DUP3"
    },
    "18258": {
      "op": "SWAP1"
    },
    "18259": {
      "op": "MSTORE"
    },
    "18260": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11154,
        11158
      ],
      "op": "ADDRESS",
      "path": "42"
    },
    "18261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18263": {
      "op": "DUP3"
    },
    "18264": {
      "op": "ADD"
    },
    "18265": {
      "op": "MSTORE"
    },
    "18266": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "18268": {
      "op": "ADD"
    },
    "18269": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "18271": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "DUP1",
      "path": "42"
    },
    "18272": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "18273": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "DUP1",
      "path": "42"
    },
    "18274": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "DUP4",
      "path": "42"
    },
    "18275": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "SUB",
      "path": "42"
    },
    "18276": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18278": {
      "op": "NOT"
    },
    "18279": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "ADD",
      "path": "42"
    },
    "18280": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "DUP2",
      "path": "42"
    },
    "18281": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "18282": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "18283": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18284": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "18285": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10802,
        11183
      ],
      "op": "DUP1",
      "path": "42"
    },
    "18286": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10802,
        11183
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "18287": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10825,
        11173
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "18289": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10802,
        11183
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "18290": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10802,
        11183
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "18291": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10802,
        11183
      ],
      "op": "ADD",
      "path": "42"
    },
    "18292": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10802,
        11183
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "18293": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10783,
        10799
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x10"
    },
    "18295": {
      "fn": "ERC20Template._initialize",
      "offset": [
        10783,
        11183
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "18296": {
      "op": "POP"
    },
    "18297": {
      "op": "POP"
    },
    "18298": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11201,
        11212
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 165,
      "value": "0xB"
    },
    "18300": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11201,
        11212
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "18301": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11201,
        11212
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0xFF"
    },
    "18303": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11201,
        11212
      ],
      "op": "AND",
      "path": "42"
    },
    "18304": {
      "fn": "ERC20Template._initialize",
      "offset": [
        11201,
        11212
      ],
      "op": "SWAP7",
      "path": "42"
    },
    "18305": {
      "fn": "ERC20Template._initialize",
      "offset": [
        9084,
        11219
      ],
      "op": "SWAP6",
      "path": "42"
    },
    "18306": {
      "op": "POP"
    },
    "18307": {
      "op": "POP"
    },
    "18308": {
      "op": "POP"
    },
    "18309": {
      "op": "POP"
    },
    "18310": {
      "op": "POP"
    },
    "18311": {
      "op": "POP"
    },
    "18312": {
      "fn": "ERC20Template._initialize",
      "jump": "o",
      "offset": [
        9084,
        11219
      ],
      "op": "JUMP",
      "path": "42"
    },
    "18313": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4270,
        4564
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18314": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4329,
        4338
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18316": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4348,
        4442
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18317": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4364,
        4373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "18319": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4364,
        4380
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18320": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4360,
        4380
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18321": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4360,
        4380
      ],
      "op": "LT",
      "path": "46"
    },
    "18322": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4348,
        4442
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18323": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4348,
        4442
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47E5"
    },
    "18326": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4348,
        4442
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18327": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4420,
        4424
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18334": {
      "op": "SHL"
    },
    "18335": {
      "op": "SUB"
    },
    "18336": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4424
      ],
      "op": "AND",
      "path": "46"
    },
    "18337": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "18339": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4414,
        4415
      ],
      "op": "DUP3",
      "path": "46"
    },
    "18340": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18341": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18342": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18343": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "LT",
      "path": "46"
    },
    "18344": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B3"
    },
    "18347": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18348": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B3"
    },
    "18351": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x57EE"
    },
    "18354": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "jump": "i",
      "offset": [
        4404,
        4416
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18355": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18356": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18358": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18359": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "DUP3",
      "path": "46"
    },
    "18360": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "18361": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "18363": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18364": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18365": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "18366": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "ADD",
      "path": "46"
    },
    "18367": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18374": {
      "op": "SHL"
    },
    "18375": {
      "op": "SUB"
    },
    "18376": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4416
      ],
      "op": "AND",
      "path": "46"
    },
    "18377": {
      "branch": 254,
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4404,
        4424
      ],
      "op": "EQ",
      "path": "46"
    },
    "18378": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4401,
        4431
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18379": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4401,
        4431
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47D3"
    },
    "18382": {
      "branch": 254,
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4401,
        4431
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18383": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4426,
        4431
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 166,
      "value": "0x47E5"
    },
    "18386": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4426,
        4431
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18387": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4401,
        4431
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18388": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4382,
        4385
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 167
    },
    "18389": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4382,
        4385
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47DD"
    },
    "18392": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4382,
        4385
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18393": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4382,
        4385
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5B"
    },
    "18396": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "jump": "i",
      "offset": [
        4382,
        4385
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18397": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4382,
        4385
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18398": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4382,
        4385
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18399": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4382,
        4385
      ],
      "op": "POP",
      "path": "46"
    },
    "18400": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4382,
        4385
      ],
      "op": "POP",
      "path": "46"
    },
    "18401": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4348,
        4442
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x478C"
    },
    "18404": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4348,
        4442
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18405": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4348,
        4442
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18406": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4459,
        4468
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "18408": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4459,
        4475
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18409": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4454,
        4475
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18410": {
      "branch": 255,
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4454,
        4475
      ],
      "op": "EQ",
      "path": "46"
    },
    "18411": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4451,
        4558
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18412": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4451,
        4558
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x118C"
    },
    "18415": {
      "branch": 255,
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4451,
        4558
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18416": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4536
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 168,
      "value": "0x6"
    },
    "18418": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "DUP1",
      "path": "46"
    },
    "18419": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18420": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "18422": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18423": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "ADD",
      "path": "46"
    },
    "18424": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "DUP3",
      "path": "46"
    },
    "18425": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "18426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18428": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18429": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18430": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18431": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "18432": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "PUSH32",
      "path": "46",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "18465": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "ADD",
      "path": "46"
    },
    "18466": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "DUP1",
      "path": "46"
    },
    "18467": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18474": {
      "op": "SHL"
    },
    "18475": {
      "op": "SUB"
    },
    "18476": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "DUP5",
      "path": "46"
    },
    "18477": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "AND",
      "path": "46"
    },
    "18478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18484": {
      "op": "SHL"
    },
    "18485": {
      "op": "SUB"
    },
    "18486": {
      "op": "NOT"
    },
    "18487": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18488": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18489": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "AND",
      "path": "46"
    },
    "18490": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "OR",
      "path": "46"
    },
    "18491": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18492": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4527,
        4547
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "18493": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4319,
        4564
      ],
      "op": "POP",
      "path": "46"
    },
    "18494": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "offset": [
        4270,
        4564
      ],
      "op": "POP",
      "path": "46"
    },
    "18495": {
      "fn": "ERC20Roles._pushToAuthERC20",
      "jump": "o",
      "offset": [
        4270,
        4564
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18496": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4765,
        5281
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18503": {
      "op": "SHL"
    },
    "18504": {
      "op": "SUB"
    },
    "18505": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4880
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18506": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4880
      ],
      "op": "AND",
      "path": "46"
    },
    "18507": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4832,
        4860
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18509": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4880
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18510": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4880
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18511": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4880
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "18512": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4874
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "18514": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4880
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "18516": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4880
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "18517": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4880
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "18519": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4880
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18520": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4863,
        4880
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "18521": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4894,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "18522": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4894,
        4910
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18523": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4894,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "18525": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4894,
        4910
      ],
      "op": "AND",
      "path": "46"
    },
    "18526": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4894,
        4919
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18527": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP1",
      "path": "46"
    },
    "18528": {
      "branch": 256,
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4894,
        4919
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18529": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4894,
        4968
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4871"
    },
    "18532": {
      "branch": 256,
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4894,
        4968
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18533": {
      "op": "POP"
    },
    "18534": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4935,
        4959
      ],
      "op": "DUP1",
      "path": "46"
    },
    "18535": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4935,
        4959
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18536": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4935,
        4959
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "18539": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4935,
        4959
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18540": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4935,
        4959
      ],
      "op": "DIV",
      "path": "46"
    },
    "18541": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4935,
        4959
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "18543": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4935,
        4959
      ],
      "op": "AND",
      "path": "46"
    },
    "18544": {
      "branch": 257,
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4935,
        4968
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18545": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4894,
        4968
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18546": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4890,
        5275
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18547": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4890,
        5275
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x118C"
    },
    "18550": {
      "branch": 257,
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4890,
        5275
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18551": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4992,
        5001
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18553": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5015,
        5117
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18554": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5031,
        5040
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "18556": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5031,
        5047
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18557": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5027,
        5047
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18558": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5027,
        5047
      ],
      "op": "LT",
      "path": "46"
    },
    "18559": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5015,
        5117
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18560": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5015,
        5117
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x48D2"
    },
    "18563": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5015,
        5117
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18564": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5091,
        5095
      ],
      "op": "DUP3",
      "path": "46"
    },
    "18565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18571": {
      "op": "SHL"
    },
    "18572": {
      "op": "SUB"
    },
    "18573": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5095
      ],
      "op": "AND",
      "path": "46"
    },
    "18574": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5084
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "18576": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5085,
        5086
      ],
      "op": "DUP3",
      "path": "46"
    },
    "18577": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18578": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18579": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18580": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "LT",
      "path": "46"
    },
    "18581": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x48A0"
    },
    "18584": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18585": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x48A0"
    },
    "18588": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x57EE"
    },
    "18591": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "jump": "i",
      "offset": [
        5075,
        5087
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18592": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18593": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18595": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18596": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "DUP3",
      "path": "46"
    },
    "18597": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "18598": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "18600": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18601": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18602": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "18603": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "ADD",
      "path": "46"
    },
    "18604": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18611": {
      "op": "SHL"
    },
    "18612": {
      "op": "SUB"
    },
    "18613": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5087
      ],
      "op": "AND",
      "path": "46"
    },
    "18614": {
      "branch": 258,
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5075,
        5095
      ],
      "op": "EQ",
      "path": "46"
    },
    "18615": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5072,
        5102
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18616": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5072,
        5102
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x48C0"
    },
    "18619": {
      "branch": 258,
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5072,
        5102
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18620": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5097,
        5102
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 169,
      "value": "0x48D2"
    },
    "18623": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5097,
        5102
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18624": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5072,
        5102
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18625": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5049,
        5052
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 170
    },
    "18626": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5049,
        5052
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x48CA"
    },
    "18629": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5049,
        5052
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18630": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5049,
        5052
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5B"
    },
    "18633": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "jump": "i",
      "offset": [
        5049,
        5052
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18634": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5049,
        5052
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18635": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5049,
        5052
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18636": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5049,
        5052
      ],
      "op": "POP",
      "path": "46"
    },
    "18637": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5049,
        5052
      ],
      "op": "POP",
      "path": "46"
    },
    "18638": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5015,
        5117
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4879"
    },
    "18641": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5015,
        5117
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18642": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5015,
        5117
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18643": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5137,
        5146
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "18645": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5137,
        5153
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18646": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5133,
        5153
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18647": {
      "branch": 259,
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5133,
        5153
      ],
      "op": "LT",
      "path": "46"
    },
    "18648": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5130,
        5265
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18649": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5130,
        5265
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BC2"
    },
    "18652": {
      "branch": 259,
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5130,
        5265
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18653": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5196
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 171,
      "value": "0x6"
    },
    "18655": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5197,
        5213
      ],
      "op": "DUP1",
      "path": "46"
    },
    "18656": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5197,
        5213
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18657": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5197,
        5216
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x48EC"
    },
    "18660": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5197,
        5216
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18661": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5215,
        5216
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "18663": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5215,
        5216
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18664": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5197,
        5216
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5C58"
    },
    "18667": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "jump": "i",
      "offset": [
        5197,
        5216
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18668": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5197,
        5216
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18669": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18670": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18671": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18672": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "LT",
      "path": "46"
    },
    "18673": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x48FC"
    },
    "18676": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18677": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x48FC"
    },
    "18680": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x57EE"
    },
    "18683": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "jump": "i",
      "offset": [
        5187,
        5217
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18684": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18685": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18687": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18688": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "DUP3",
      "path": "46"
    },
    "18689": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "18690": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "18692": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18693": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18694": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "18695": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "ADD",
      "path": "46"
    },
    "18696": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18697": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5181
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "18699": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "DUP1",
      "path": "46"
    },
    "18700": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18707": {
      "op": "SHL"
    },
    "18708": {
      "op": "SUB"
    },
    "18709": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18710": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "18711": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "AND",
      "path": "46"
    },
    "18712": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5187,
        5217
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18713": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5182,
        5183
      ],
      "op": "DUP4",
      "path": "46"
    },
    "18714": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5182,
        5183
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18715": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18716": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "LT",
      "path": "46"
    },
    "18717": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4928"
    },
    "18720": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18721": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4928"
    },
    "18724": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x57EE"
    },
    "18727": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "jump": "i",
      "offset": [
        5172,
        5184
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18728": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18729": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18730": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18732": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "18733": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "18735": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18737": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "18738": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "ADD",
      "path": "46"
    },
    "18739": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5184
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18741": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "18744": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "EXP",
      "path": "46"
    },
    "18745": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18746": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18747": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18754": {
      "op": "SHL"
    },
    "18755": {
      "op": "SUB"
    },
    "18756": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "MUL",
      "path": "46"
    },
    "18757": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "NOT",
      "path": "46"
    },
    "18758": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "AND",
      "path": "46"
    },
    "18759": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18760": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "DUP4",
      "path": "46"
    },
    "18761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18767": {
      "op": "SHL"
    },
    "18768": {
      "op": "SUB"
    },
    "18769": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "AND",
      "path": "46"
    },
    "18770": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "MUL",
      "path": "46"
    },
    "18771": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "OR",
      "path": "46"
    },
    "18772": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18773": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "18774": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5172,
        5217
      ],
      "op": "POP",
      "path": "46"
    },
    "18775": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5244
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 172,
      "value": "0x6"
    },
    "18777": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "DUP1",
      "path": "46"
    },
    "18778": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18779": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "DUP1",
      "path": "46"
    },
    "18780": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4967"
    },
    "18783": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18784": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4967"
    },
    "18787": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5DED"
    },
    "18790": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "jump": "i",
      "offset": [
        5235,
        5250
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18791": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18792": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18794": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "DUP3",
      "path": "46"
    },
    "18795": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18796": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "18797": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "18799": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18800": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "18801": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18802": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "ADD",
      "path": "46"
    },
    "18803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18805": {
      "op": "NOT"
    },
    "18806": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18807": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18808": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "ADD",
      "path": "46"
    },
    "18809": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "DUP1",
      "path": "46"
    },
    "18810": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18817": {
      "op": "SHL"
    },
    "18818": {
      "op": "SUB"
    },
    "18819": {
      "op": "NOT"
    },
    "18820": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "AND",
      "path": "46"
    },
    "18821": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18822": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "18823": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "ADD",
      "path": "46"
    },
    "18824": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "18825": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        5235,
        5250
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "18826": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4978,
        5275
      ],
      "op": "POP",
      "path": "46"
    },
    "18827": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4822,
        5281
      ],
      "op": "POP",
      "path": "46"
    },
    "18828": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "offset": [
        4765,
        5281
      ],
      "op": "POP",
      "path": "46"
    },
    "18829": {
      "fn": "ERC20Roles._SafeRemoveFromAuthERC20",
      "jump": "o",
      "offset": [
        4765,
        5281
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18830": {
      "fn": "SafeMath.mul",
      "offset": [
        3382,
        3478
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "18831": {
      "fn": "SafeMath.mul",
      "offset": [
        3440,
        3447
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18833": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 173,
      "value": "0xDC3"
    },
    "18836": {
      "fn": "SafeMath.mul",
      "offset": [
        3470,
        3471
      ],
      "op": "DUP3",
      "path": "11"
    },
    "18837": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3467
      ],
      "op": "DUP5",
      "path": "11"
    },
    "18838": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5E03"
    },
    "18841": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3466,
        3471
      ],
      "op": "JUMP",
      "path": "11"
    },
    "18842": {
      "fn": "SafeMath.div",
      "offset": [
        3767,
        3863
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "18843": {
      "fn": "SafeMath.div",
      "offset": [
        3825,
        3832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18845": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 174,
      "value": "0xDC3"
    },
    "18848": {
      "fn": "SafeMath.div",
      "offset": [
        3855,
        3856
      ],
      "op": "DUP3",
      "path": "11"
    },
    "18849": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP5",
      "path": "11"
    },
    "18850": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5E22"
    },
    "18853": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3851,
        3856
      ],
      "op": "JUMP",
      "path": "11"
    },
    "18854": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "18855": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 175,
      "value": "0x40"
    },
    "18857": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "18858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18864": {
      "op": "SHL"
    },
    "18865": {
      "op": "SUB"
    },
    "18866": {
      "op": "DUP4"
    },
    "18867": {
      "op": "AND"
    },
    "18868": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "18870": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "7"
    },
    "18871": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "7"
    },
    "18872": {
      "op": "MSTORE"
    },
    "18873": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18875": {
      "op": "DUP2"
    },
    "18876": {
      "op": "ADD"
    },
    "18877": {
      "op": "DUP3"
    },
    "18878": {
      "op": "SWAP1"
    },
    "18879": {
      "op": "MSTORE"
    },
    "18880": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BC2"
    },
    "18883": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "18884": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "7"
    },
    "18885": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "18886": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "18891": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18893": {
      "op": "SHL"
    },
    "18894": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        796,
        819
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "18895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18897": {
      "op": "ADD"
    },
    "18898": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "18899": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "18901": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "7"
    },
    "18902": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "18903": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18905": {
      "op": "NOT"
    },
    "18906": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "18907": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP5",
      "path": "7"
    },
    "18908": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "7"
    },
    "18909": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "7"
    },
    "18910": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "18911": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "18912": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "18913": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "18914": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "18915": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "18917": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "18918": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "7"
    },
    "18919": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "7"
    },
    "18920": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "18921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18925": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18927": {
      "op": "SHL"
    },
    "18928": {
      "op": "SUB"
    },
    "18929": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "7"
    },
    "18930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18934": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18936": {
      "op": "SHL"
    },
    "18937": {
      "op": "SUB"
    },
    "18938": {
      "op": "NOT"
    },
    "18939": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "18940": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "18941": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "7"
    },
    "18942": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "18943": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "18944": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "18945": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "7"
    },
    "18946": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "18947": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "18948": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "18949": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        765
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4AF0"
    },
    "18952": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        746,
        832
      ],
      "op": "JUMP",
      "path": "7"
    },
    "18953": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3717,
        4096
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18954": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3779,
        3788
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18956": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3774,
        3972
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18957": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3798,
        3807
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "18959": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3798,
        3814
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18960": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3794,
        3814
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18961": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3794,
        3814
      ],
      "op": "LT",
      "path": "46"
    },
    "18962": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3774,
        3972
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "18963": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3774,
        3972
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4A6F"
    },
    "18966": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3774,
        3972
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18967": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3835,
        3858
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18969": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3872
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "18971": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18973": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3882
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "18975": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3883,
        3884
      ],
      "op": "DUP5",
      "path": "46"
    },
    "18976": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18977": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "18978": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "DUP2",
      "path": "46"
    },
    "18979": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "LT",
      "path": "46"
    },
    "18980": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4A2F"
    },
    "18983": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "18984": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4A2F"
    },
    "18987": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x57EE"
    },
    "18990": {
      "fn": "ERC20Roles._cleanPermissions",
      "jump": "i",
      "offset": [
        3873,
        3885
      ],
      "op": "JUMP",
      "path": "46"
    },
    "18991": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "18992": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "18994": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "18995": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "DUP3",
      "path": "46"
    },
    "18996": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "18997": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "18999": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "DUP1",
      "path": "46"
    },
    "19000": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "DUP4",
      "path": "46"
    },
    "19001": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "19002": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "19003": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "19004": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "ADD",
      "path": "46"
    },
    "19005": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "19006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19012": {
      "op": "SHL"
    },
    "19013": {
      "op": "SUB"
    },
    "19014": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3873,
        3885
      ],
      "op": "AND",
      "path": "46"
    },
    "19015": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "DUP4",
      "path": "46"
    },
    "19016": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "19017": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "DUP3",
      "path": "46"
    },
    "19018": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "ADD",
      "path": "46"
    },
    "19019": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "19020": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "19021": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "19022": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "19023": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "19025": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "ADD",
      "path": "46"
    },
    "19026": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "19027": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3861,
        3886
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "19028": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3900,
        3919
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 176
    },
    "19029": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3900,
        3919
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "19030": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "19033": {
      "op": "NOT"
    },
    "19034": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3933,
        3960
      ],
      "op": "AND",
      "path": "46",
      "statement": 177
    },
    "19035": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3933,
        3960
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "19036": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3933,
        3960
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "19037": {
      "op": "POP"
    },
    "19038": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3816,
        3819
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 178
    },
    "19039": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3816,
        3819
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4A67"
    },
    "19042": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3816,
        3819
      ],
      "op": "DUP2",
      "path": "46"
    },
    "19043": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3816,
        3819
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5B"
    },
    "19046": {
      "fn": "ERC20Roles._cleanPermissions",
      "jump": "i",
      "offset": [
        3816,
        3819
      ],
      "op": "JUMP",
      "path": "46"
    },
    "19047": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3816,
        3819
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "19048": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3816,
        3819
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "19049": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3816,
        3819
      ],
      "op": "POP",
      "path": "46"
    },
    "19050": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3816,
        3819
      ],
      "op": "POP",
      "path": "46"
    },
    "19051": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3774,
        3972
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4A0C"
    },
    "19054": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3774,
        3972
      ],
      "op": "JUMP",
      "path": "46"
    },
    "19055": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3774,
        3972
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "19056": {
      "op": "POP"
    },
    "19057": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3990,
        4006
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 179,
      "value": "0x4A7C"
    },
    "19060": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3997,
        4006
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "19062": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3997,
        4006
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "19064": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3990,
        4006
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4DBE"
    },
    "19067": {
      "fn": "ERC20Roles._cleanPermissions",
      "jump": "i",
      "offset": [
        3990,
        4006
      ],
      "op": "JUMP",
      "path": "46"
    },
    "19068": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        3990,
        4006
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "19069": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 180,
      "value": "0x40"
    },
    "19071": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "DUP1",
      "path": "46"
    },
    "19072": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "19073": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4051,
        4066
      ],
      "op": "TIMESTAMP",
      "path": "46"
    },
    "19074": {
      "op": "DUP2"
    },
    "19075": {
      "op": "MSTORE"
    },
    "19076": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4067,
        4079
      ],
      "op": "NUMBER",
      "path": "46"
    },
    "19077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19079": {
      "op": "DUP3"
    },
    "19080": {
      "op": "ADD"
    },
    "19081": {
      "op": "MSTORE"
    },
    "19082": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4040,
        4050
      ],
      "op": "CALLER",
      "path": "46"
    },
    "19083": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4040,
        4050
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "19084": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "PUSH32",
      "path": "46",
      "value": "0x712BC71DB81927A76B8BF1EA346247BB0AD58F18E4E5C1BD4AA0EC6573E02A2B"
    },
    "19117": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "19118": {
      "op": "ADD"
    },
    "19119": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "19121": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "19122": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "DUP1",
      "path": "46"
    },
    "19123": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "19124": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "SUB",
      "path": "46"
    },
    "19125": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "19126": {
      "fn": "ERC20Roles._cleanPermissions",
      "offset": [
        4021,
        4080
      ],
      "op": "LOG2",
      "path": "46"
    },
    "19127": {
      "fn": "ERC20Roles._cleanPermissions",
      "jump": "o",
      "offset": [
        3717,
        4096
      ],
      "op": "JUMP",
      "path": "46"
    },
    "19128": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "19129": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 181,
      "value": "0x40"
    },
    "19131": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "19132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19138": {
      "op": "SHL"
    },
    "19139": {
      "op": "SUB"
    },
    "19140": {
      "op": "DUP1"
    },
    "19141": {
      "op": "DUP6"
    },
    "19142": {
      "op": "AND"
    },
    "19143": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "19145": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP4",
      "path": "7"
    },
    "19146": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "19147": {
      "op": "MSTORE"
    },
    "19148": {
      "op": "DUP4"
    },
    "19149": {
      "op": "AND"
    },
    "19150": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19152": {
      "op": "DUP3"
    },
    "19153": {
      "op": "ADD"
    },
    "19154": {
      "op": "MSTORE"
    },
    "19155": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19157": {
      "op": "DUP2"
    },
    "19158": {
      "op": "ADD"
    },
    "19159": {
      "op": "DUP3"
    },
    "19160": {
      "op": "SWAP1"
    },
    "19161": {
      "op": "MSTORE"
    },
    "19162": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x340B"
    },
    "19165": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "19166": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "DUP6",
      "path": "7"
    },
    "19167": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "19168": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "19173": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19175": {
      "op": "SHL"
    },
    "19176": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1033,
        1060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "19177": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "19179": {
      "op": "ADD"
    },
    "19180": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x49D2"
    },
    "19183": {
      "op": "JUMP"
    },
    "19184": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "19185": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "19187": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4B45"
    },
    "19190": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "7"
    },
    "19191": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "19193": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "19194": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "19195": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "19197": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "19198": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "19200": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "19201": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "19202": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "19204": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "19205": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "19206": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "19208": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "19209": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "19242": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "19243": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "19244": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "7"
    },
    "19245": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "7"
    },
    "19246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19252": {
      "op": "SHL"
    },
    "19253": {
      "op": "SUB"
    },
    "19254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "7"
    },
    "19255": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4BC2"
    },
    "19258": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "19259": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "19260": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "19261": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "19262": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "19267": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "7"
    },
    "19268": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "7"
    },
    "19269": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "19270": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "7"
    },
    "19271": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "19272": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "19273": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "19274": {
      "op": "POP"
    },
    "19275": {
      "branch": 261,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "19276": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BC2"
    },
    "19279": {
      "branch": 261,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "19280": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 182
    },
    "19281": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "7"
    },
    "19282": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "19284": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "19285": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "19286": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "19287": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "7"
    },
    "19288": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "19289": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "19290": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4B63"
    },
    "19293": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "19294": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "19295": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5E44"
    },
    "19298": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "7"
    },
    "19299": {
      "branch": 262,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "19300": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BC2"
    },
    "19303": {
      "branch": 262,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "19304": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "19306": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "19307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19313": {
      "op": "SHL"
    },
    "19314": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "7"
    },
    "19315": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "19316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19318": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "19320": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "7"
    },
    "19321": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "7"
    },
    "19322": {
      "op": "MSTORE"
    },
    "19323": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "19325": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19327": {
      "op": "DUP3"
    },
    "19328": {
      "op": "ADD"
    },
    "19329": {
      "op": "MSTORE"
    },
    "19330": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "19363": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19365": {
      "op": "DUP3"
    },
    "19366": {
      "op": "ADD"
    },
    "19367": {
      "op": "MSTORE"
    },
    "19368": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "19379": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "19381": {
      "op": "SHL"
    },
    "19382": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19384": {
      "op": "DUP3"
    },
    "19385": {
      "op": "ADD"
    },
    "19386": {
      "op": "MSTORE"
    },
    "19387": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "19389": {
      "op": "ADD"
    },
    "19390": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBD0"
    },
    "19393": {
      "op": "JUMP"
    },
    "19394": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19395": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "19397": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 183,
      "value": "0x4BD1"
    },
    "19400": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "8"
    },
    "19401": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "8"
    },
    "19402": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "19404": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "8"
    },
    "19405": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4BD9"
    },
    "19408": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "8"
    },
    "19409": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19410": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "19411": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "19412": {
      "op": "POP"
    },
    "19413": {
      "op": "POP"
    },
    "19414": {
      "op": "POP"
    },
    "19415": {
      "op": "POP"
    },
    "19416": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "8"
    },
    "19417": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19418": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "19420": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 184
    },
    "19421": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "8"
    },
    "19422": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "8"
    },
    "19423": {
      "branch": 236,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "19424": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4C3A"
    },
    "19427": {
      "branch": 236,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "19428": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "19430": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "19431": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19435": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19437": {
      "op": "SHL"
    },
    "19438": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "8"
    },
    "19439": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "19440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19442": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "19444": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "8"
    },
    "19445": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "8"
    },
    "19446": {
      "op": "MSTORE"
    },
    "19447": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "19449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19451": {
      "op": "DUP3"
    },
    "19452": {
      "op": "ADD"
    },
    "19453": {
      "op": "MSTORE"
    },
    "19454": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "19487": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19489": {
      "op": "DUP3"
    },
    "19490": {
      "op": "ADD"
    },
    "19491": {
      "op": "MSTORE"
    },
    "19492": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "19499": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "19501": {
      "op": "SHL"
    },
    "19502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19504": {
      "op": "DUP3"
    },
    "19505": {
      "op": "ADD"
    },
    "19506": {
      "op": "MSTORE"
    },
    "19507": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "19509": {
      "op": "ADD"
    },
    "19510": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBD0"
    },
    "19513": {
      "op": "JUMP"
    },
    "19514": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19515": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "8"
    },
    "19516": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "19517": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 185,
      "value": "0x4C88"
    },
    "19520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "19521": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "19523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "19524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19530": {
      "op": "SHL"
    },
    "19531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "8"
    },
    "19532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "19533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "19537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "8"
    },
    "19538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "8"
    },
    "19539": {
      "op": "MSTORE"
    },
    "19540": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "19542": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19544": {
      "op": "DUP3"
    },
    "19545": {
      "op": "ADD"
    },
    "19546": {
      "op": "MSTORE"
    },
    "19547": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "19580": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19582": {
      "op": "DUP3"
    },
    "19583": {
      "op": "ADD"
    },
    "19584": {
      "op": "MSTORE"
    },
    "19585": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19587": {
      "op": "ADD"
    },
    "19588": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBD0"
    },
    "19591": {
      "op": "JUMP"
    },
    "19592": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "19595": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "8"
    },
    "19596": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "8"
    },
    "19597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19603": {
      "op": "SHL"
    },
    "19604": {
      "op": "SUB"
    },
    "19605": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "8"
    },
    "19606": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "8"
    },
    "19607": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "8"
    },
    "19608": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "19610": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "19611": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4CA4"
    },
    "19614": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "19615": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "19616": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5E61"
    },
    "19619": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "8"
    },
    "19620": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19621": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "19623": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "19625": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "19626": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "8"
    },
    "19627": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "8"
    },
    "19628": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "8"
    },
    "19629": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "8"
    },
    "19630": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "8"
    },
    "19631": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "8"
    },
    "19632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "8"
    },
    "19633": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "8"
    },
    "19634": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "19635": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "19636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "19637": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "19638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "19639": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "8"
    },
    "19640": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "19642": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "8"
    },
    "19643": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "8"
    },
    "19644": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4CE1"
    },
    "19647": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "19648": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "19650": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "19651": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "19652": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "19653": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "19655": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "8"
    },
    "19656": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "19658": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "19659": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "8"
    },
    "19660": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "8"
    },
    "19661": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "8"
    },
    "19662": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "8"
    },
    "19663": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "19665": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "19666": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "19667": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "8"
    },
    "19668": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "19669": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "19670": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "19672": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "19674": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "8"
    },
    "19675": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "8"
    },
    "19676": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "19677": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4CE6"
    },
    "19680": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "8"
    },
    "19681": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19682": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "19684": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "19685": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "19686": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "19688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "19689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "19690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "19691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "8"
    },
    "19692": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 186,
      "value": "0x4CF6"
    },
    "19695": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5007,
        5014
      ],
      "op": "DUP3",
      "path": "8"
    },
    "19696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5016,
        5026
      ],
      "op": "DUP3",
      "path": "8"
    },
    "19697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5028,
        5040
      ],
      "op": "DUP7",
      "path": "8"
    },
    "19698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5006
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D01"
    },
    "19701": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5041
      ],
      "op": "JUMP",
      "path": "8"
    },
    "19702": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5041
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5041
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "19704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5048
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "19705": {
      "op": "POP"
    },
    "19706": {
      "op": "POP"
    },
    "19707": {
      "op": "POP"
    },
    "19708": {
      "op": "POP"
    },
    "19709": {
      "op": "POP"
    },
    "19710": {
      "op": "POP"
    },
    "19711": {
      "op": "POP"
    },
    "19712": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5048
      ],
      "op": "JUMP",
      "path": "8"
    },
    "19713": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6950,
        7642
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19714": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7096,
        7108
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "19716": {
      "branch": 237,
      "fn": "Address._verifyCallResult",
      "offset": [
        7124,
        7131
      ],
      "op": "DUP4",
      "path": "8"
    },
    "19717": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "19718": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D10"
    },
    "19721": {
      "branch": 237,
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "19722": {
      "op": "POP"
    },
    "19723": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7154,
        7164
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 187
    },
    "19724": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDC3"
    },
    "19727": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7147,
        7164
      ],
      "op": "JUMP",
      "path": "8"
    },
    "19728": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7120,
        7636
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19729": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "DUP3",
      "path": "8"
    },
    "19730": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7282
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "19731": {
      "branch": 238,
      "fn": "Address._verifyCallResult",
      "offset": [
        7265,
        7286
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "19732": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D20"
    },
    "19735": {
      "branch": 238,
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "19736": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7459,
        7469
      ],
      "op": "DUP3",
      "path": "8"
    },
    "19737": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7453,
        7470
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "19738": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7519,
        7534
      ],
      "op": "DUP1",
      "path": "8"
    },
    "19739": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7506,
        7516
      ],
      "op": "DUP5",
      "path": "8"
    },
    "19740": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7502,
        7504
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "19742": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7498,
        7517
      ],
      "op": "ADD",
      "path": "8"
    },
    "19743": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7491,
        7535
      ],
      "op": "REVERT",
      "path": "8"
    },
    "19744": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7261,
        7626
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "19745": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7598,
        7610
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 188
    },
    "19746": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "19748": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "19749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19755": {
      "op": "SHL"
    },
    "19756": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "DUP2",
      "path": "8"
    },
    "19757": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "19758": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "19760": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "ADD",
      "path": "8"
    },
    "19761": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBD0"
    },
    "19764": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "19765": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "19766": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7591,
        7611
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4E5B"
    },
    "19769": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7591,
        7611
      ],
      "op": "JUMP",
      "path": "8"
    },
    "19770": {
      "op": "JUMPDEST"
    },
    "19771": {
      "op": "DUP3"
    },
    "19772": {
      "op": "DUP1"
    },
    "19773": {
      "op": "SLOAD"
    },
    "19774": {
      "op": "PUSH2",
      "value": "0x4D46"
    },
    "19777": {
      "op": "SWAP1"
    },
    "19778": {
      "op": "PUSH2",
      "value": "0x567E"
    },
    "19781": {
      "jump": "i",
      "op": "JUMP"
    },
    "19782": {
      "op": "JUMPDEST"
    },
    "19783": {
      "op": "SWAP1"
    },
    "19784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19786": {
      "op": "MSTORE"
    },
    "19787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19791": {
      "op": "KECCAK256"
    },
    "19792": {
      "op": "SWAP1"
    },
    "19793": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19795": {
      "op": "ADD"
    },
    "19796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19798": {
      "op": "SWAP1"
    },
    "19799": {
      "op": "DIV"
    },
    "19800": {
      "op": "DUP2"
    },
    "19801": {
      "op": "ADD"
    },
    "19802": {
      "op": "SWAP3"
    },
    "19803": {
      "op": "DUP3"
    },
    "19804": {
      "op": "PUSH2",
      "value": "0x4D68"
    },
    "19807": {
      "op": "JUMPI"
    },
    "19808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19810": {
      "op": "DUP6"
    },
    "19811": {
      "op": "SSTORE"
    },
    "19812": {
      "op": "PUSH2",
      "value": "0x4DAE"
    },
    "19815": {
      "op": "JUMP"
    },
    "19816": {
      "op": "JUMPDEST"
    },
    "19817": {
      "op": "DUP3"
    },
    "19818": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19820": {
      "op": "LT"
    },
    "19821": {
      "op": "PUSH2",
      "value": "0x4D81"
    },
    "19824": {
      "op": "JUMPI"
    },
    "19825": {
      "op": "DUP1"
    },
    "19826": {
      "op": "MLOAD"
    },
    "19827": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19829": {
      "op": "NOT"
    },
    "19830": {
      "op": "AND"
    },
    "19831": {
      "op": "DUP4"
    },
    "19832": {
      "op": "DUP1"
    },
    "19833": {
      "op": "ADD"
    },
    "19834": {
      "op": "OR"
    },
    "19835": {
      "op": "DUP6"
    },
    "19836": {
      "op": "SSTORE"
    },
    "19837": {
      "op": "PUSH2",
      "value": "0x4DAE"
    },
    "19840": {
      "op": "JUMP"
    },
    "19841": {
      "op": "JUMPDEST"
    },
    "19842": {
      "op": "DUP3"
    },
    "19843": {
      "op": "DUP1"
    },
    "19844": {
      "op": "ADD"
    },
    "19845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19847": {
      "op": "ADD"
    },
    "19848": {
      "op": "DUP6"
    },
    "19849": {
      "op": "SSTORE"
    },
    "19850": {
      "op": "DUP3"
    },
    "19851": {
      "op": "ISZERO"
    },
    "19852": {
      "op": "PUSH2",
      "value": "0x4DAE"
    },
    "19855": {
      "op": "JUMPI"
    },
    "19856": {
      "op": "SWAP2"
    },
    "19857": {
      "op": "DUP3"
    },
    "19858": {
      "op": "ADD"
    },
    "19859": {
      "op": "JUMPDEST"
    },
    "19860": {
      "op": "DUP3"
    },
    "19861": {
      "op": "DUP2"
    },
    "19862": {
      "op": "GT"
    },
    "19863": {
      "op": "ISZERO"
    },
    "19864": {
      "op": "PUSH2",
      "value": "0x4DAE"
    },
    "19867": {
      "op": "JUMPI"
    },
    "19868": {
      "op": "DUP3"
    },
    "19869": {
      "op": "MLOAD"
    },
    "19870": {
      "op": "DUP3"
    },
    "19871": {
      "op": "SSTORE"
    },
    "19872": {
      "op": "SWAP2"
    },
    "19873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19875": {
      "op": "ADD"
    },
    "19876": {
      "op": "SWAP2"
    },
    "19877": {
      "op": "SWAP1"
    },
    "19878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19880": {
      "op": "ADD"
    },
    "19881": {
      "op": "SWAP1"
    },
    "19882": {
      "op": "PUSH2",
      "value": "0x4D93"
    },
    "19885": {
      "op": "JUMP"
    },
    "19886": {
      "op": "JUMPDEST"
    },
    "19887": {
      "op": "POP"
    },
    "19888": {
      "op": "PUSH2",
      "value": "0x4DBA"
    },
    "19891": {
      "op": "SWAP3"
    },
    "19892": {
      "op": "SWAP2"
    },
    "19893": {
      "op": "POP"
    },
    "19894": {
      "op": "PUSH2",
      "value": "0x4DD8"
    },
    "19897": {
      "jump": "i",
      "op": "JUMP"
    },
    "19898": {
      "op": "JUMPDEST"
    },
    "19899": {
      "op": "POP"
    },
    "19900": {
      "op": "SWAP1"
    },
    "19901": {
      "jump": "o",
      "op": "JUMP"
    },
    "19902": {
      "op": "JUMPDEST"
    },
    "19903": {
      "op": "POP"
    },
    "19904": {
      "op": "DUP1"
    },
    "19905": {
      "op": "SLOAD"
    },
    "19906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19908": {
      "op": "DUP3"
    },
    "19909": {
      "op": "SSTORE"
    },
    "19910": {
      "op": "SWAP1"
    },
    "19911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19913": {
      "op": "MSTORE"
    },
    "19914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19918": {
      "op": "KECCAK256"
    },
    "19919": {
      "op": "SWAP1"
    },
    "19920": {
      "op": "DUP2"
    },
    "19921": {
      "op": "ADD"
    },
    "19922": {
      "op": "SWAP1"
    },
    "19923": {
      "op": "PUSH2",
      "value": "0xEE6"
    },
    "19926": {
      "op": "SWAP2"
    },
    "19927": {
      "op": "SWAP1"
    },
    "19928": {
      "op": "JUMPDEST"
    },
    "19929": {
      "op": "JUMPDEST"
    },
    "19930": {
      "op": "DUP1"
    },
    "19931": {
      "op": "DUP3"
    },
    "19932": {
      "op": "GT"
    },
    "19933": {
      "op": "ISZERO"
    },
    "19934": {
      "op": "PUSH2",
      "value": "0x4DBA"
    },
    "19937": {
      "op": "JUMPI"
    },
    "19938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19940": {
      "op": "DUP2"
    },
    "19941": {
      "op": "SSTORE"
    },
    "19942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19944": {
      "op": "ADD"
    },
    "19945": {
      "op": "PUSH2",
      "value": "0x4DD9"
    },
    "19948": {
      "op": "JUMP"
    },
    "19949": {
      "op": "JUMPDEST"
    },
    "19950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19956": {
      "op": "SHL"
    },
    "19957": {
      "op": "SUB"
    },
    "19958": {
      "op": "DUP2"
    },
    "19959": {
      "op": "AND"
    },
    "19960": {
      "op": "DUP2"
    },
    "19961": {
      "op": "EQ"
    },
    "19962": {
      "op": "PUSH2",
      "value": "0xEE6"
    },
    "19965": {
      "op": "JUMPI"
    },
    "19966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19968": {
      "op": "DUP1"
    },
    "19969": {
      "op": "REVERT"
    },
    "19970": {
      "op": "JUMPDEST"
    },
    "19971": {
      "op": "DUP1"
    },
    "19972": {
      "op": "CALLDATALOAD"
    },
    "19973": {
      "op": "PUSH2",
      "value": "0x4E0D"
    },
    "19976": {
      "op": "DUP2"
    },
    "19977": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "19980": {
      "jump": "i",
      "op": "JUMP"
    },
    "19981": {
      "op": "JUMPDEST"
    },
    "19982": {
      "op": "SWAP2"
    },
    "19983": {
      "op": "SWAP1"
    },
    "19984": {
      "op": "POP"
    },
    "19985": {
      "jump": "o",
      "op": "JUMP"
    },
    "19986": {
      "op": "JUMPDEST"
    },
    "19987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19991": {
      "op": "DUP3"
    },
    "19992": {
      "op": "DUP5"
    },
    "19993": {
      "op": "SUB"
    },
    "19994": {
      "op": "SLT"
    },
    "19995": {
      "op": "ISZERO"
    },
    "19996": {
      "op": "PUSH2",
      "value": "0x4E24"
    },
    "19999": {
      "op": "JUMPI"
    },
    "20000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20002": {
      "op": "DUP1"
    },
    "20003": {
      "op": "REVERT"
    },
    "20004": {
      "op": "JUMPDEST"
    },
    "20005": {
      "op": "DUP2"
    },
    "20006": {
      "op": "CALLDATALOAD"
    },
    "20007": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "20010": {
      "op": "DUP2"
    },
    "20011": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "20014": {
      "jump": "i",
      "op": "JUMP"
    },
    "20015": {
      "op": "JUMPDEST"
    },
    "20016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20018": {
      "op": "JUMPDEST"
    },
    "20019": {
      "op": "DUP4"
    },
    "20020": {
      "op": "DUP2"
    },
    "20021": {
      "op": "LT"
    },
    "20022": {
      "op": "ISZERO"
    },
    "20023": {
      "op": "PUSH2",
      "value": "0x4E4A"
    },
    "20026": {
      "op": "JUMPI"
    },
    "20027": {
      "op": "DUP2"
    },
    "20028": {
      "op": "DUP2"
    },
    "20029": {
      "op": "ADD"
    },
    "20030": {
      "op": "MLOAD"
    },
    "20031": {
      "op": "DUP4"
    },
    "20032": {
      "op": "DUP3"
    },
    "20033": {
      "op": "ADD"
    },
    "20034": {
      "op": "MSTORE"
    },
    "20035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20037": {
      "op": "ADD"
    },
    "20038": {
      "op": "PUSH2",
      "value": "0x4E32"
    },
    "20041": {
      "op": "JUMP"
    },
    "20042": {
      "op": "JUMPDEST"
    },
    "20043": {
      "op": "DUP4"
    },
    "20044": {
      "op": "DUP2"
    },
    "20045": {
      "op": "GT"
    },
    "20046": {
      "op": "ISZERO"
    },
    "20047": {
      "op": "PUSH2",
      "value": "0x340B"
    },
    "20050": {
      "op": "JUMPI"
    },
    "20051": {
      "op": "POP"
    },
    "20052": {
      "op": "POP"
    },
    "20053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20055": {
      "op": "SWAP2"
    },
    "20056": {
      "op": "ADD"
    },
    "20057": {
      "op": "MSTORE"
    },
    "20058": {
      "jump": "o",
      "op": "JUMP"
    },
    "20059": {
      "op": "JUMPDEST"
    },
    "20060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20062": {
      "op": "DUP2"
    },
    "20063": {
      "op": "MSTORE"
    },
    "20064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20066": {
      "op": "DUP3"
    },
    "20067": {
      "op": "MLOAD"
    },
    "20068": {
      "op": "DUP1"
    },
    "20069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20071": {
      "op": "DUP5"
    },
    "20072": {
      "op": "ADD"
    },
    "20073": {
      "op": "MSTORE"
    },
    "20074": {
      "op": "PUSH2",
      "value": "0x4E7A"
    },
    "20077": {
      "op": "DUP2"
    },
    "20078": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20080": {
      "op": "DUP6"
    },
    "20081": {
      "op": "ADD"
    },
    "20082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20084": {
      "op": "DUP8"
    },
    "20085": {
      "op": "ADD"
    },
    "20086": {
      "op": "PUSH2",
      "value": "0x4E2F"
    },
    "20089": {
      "jump": "i",
      "op": "JUMP"
    },
    "20090": {
      "op": "JUMPDEST"
    },
    "20091": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20093": {
      "op": "ADD"
    },
    "20094": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20096": {
      "op": "NOT"
    },
    "20097": {
      "op": "AND"
    },
    "20098": {
      "op": "SWAP2"
    },
    "20099": {
      "op": "SWAP1"
    },
    "20100": {
      "op": "SWAP2"
    },
    "20101": {
      "op": "ADD"
    },
    "20102": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20104": {
      "op": "ADD"
    },
    "20105": {
      "op": "SWAP3"
    },
    "20106": {
      "op": "SWAP2"
    },
    "20107": {
      "op": "POP"
    },
    "20108": {
      "op": "POP"
    },
    "20109": {
      "jump": "o",
      "op": "JUMP"
    },
    "20110": {
      "op": "JUMPDEST"
    },
    "20111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20113": {
      "op": "DUP1"
    },
    "20114": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20116": {
      "op": "DUP4"
    },
    "20117": {
      "op": "DUP6"
    },
    "20118": {
      "op": "SUB"
    },
    "20119": {
      "op": "SLT"
    },
    "20120": {
      "op": "ISZERO"
    },
    "20121": {
      "op": "PUSH2",
      "value": "0x4EA1"
    },
    "20124": {
      "op": "JUMPI"
    },
    "20125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20127": {
      "op": "DUP1"
    },
    "20128": {
      "op": "REVERT"
    },
    "20129": {
      "op": "JUMPDEST"
    },
    "20130": {
      "op": "DUP3"
    },
    "20131": {
      "op": "CALLDATALOAD"
    },
    "20132": {
      "op": "PUSH2",
      "value": "0x4EAC"
    },
    "20135": {
      "op": "DUP2"
    },
    "20136": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "20139": {
      "jump": "i",
      "op": "JUMP"
    },
    "20140": {
      "op": "JUMPDEST"
    },
    "20141": {
      "op": "SWAP5"
    },
    "20142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20144": {
      "op": "SWAP4"
    },
    "20145": {
      "op": "SWAP1"
    },
    "20146": {
      "op": "SWAP4"
    },
    "20147": {
      "op": "ADD"
    },
    "20148": {
      "op": "CALLDATALOAD"
    },
    "20149": {
      "op": "SWAP4"
    },
    "20150": {
      "op": "POP"
    },
    "20151": {
      "op": "POP"
    },
    "20152": {
      "op": "POP"
    },
    "20153": {
      "jump": "o",
      "op": "JUMP"
    },
    "20154": {
      "op": "JUMPDEST"
    },
    "20155": {
      "op": "DUP1"
    },
    "20156": {
      "op": "ISZERO"
    },
    "20157": {
      "op": "ISZERO"
    },
    "20158": {
      "op": "DUP2"
    },
    "20159": {
      "op": "EQ"
    },
    "20160": {
      "op": "PUSH2",
      "value": "0xEE6"
    },
    "20163": {
      "op": "JUMPI"
    },
    "20164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20166": {
      "op": "DUP1"
    },
    "20167": {
      "op": "REVERT"
    },
    "20168": {
      "op": "JUMPDEST"
    },
    "20169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20171": {
      "op": "DUP1"
    },
    "20172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20174": {
      "op": "DUP1"
    },
    "20175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20179": {
      "op": "DUP7"
    },
    "20180": {
      "op": "DUP9"
    },
    "20181": {
      "op": "SUB"
    },
    "20182": {
      "op": "SLT"
    },
    "20183": {
      "op": "ISZERO"
    },
    "20184": {
      "op": "PUSH2",
      "value": "0x4EE0"
    },
    "20187": {
      "op": "JUMPI"
    },
    "20188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20190": {
      "op": "DUP1"
    },
    "20191": {
      "op": "REVERT"
    },
    "20192": {
      "op": "JUMPDEST"
    },
    "20193": {
      "op": "DUP6"
    },
    "20194": {
      "op": "CALLDATALOAD"
    },
    "20195": {
      "op": "PUSH2",
      "value": "0x4EEB"
    },
    "20198": {
      "op": "DUP2"
    },
    "20199": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "20202": {
      "jump": "i",
      "op": "JUMP"
    },
    "20203": {
      "op": "JUMPDEST"
    },
    "20204": {
      "op": "SWAP5"
    },
    "20205": {
      "op": "POP"
    },
    "20206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20208": {
      "op": "DUP7"
    },
    "20209": {
      "op": "ADD"
    },
    "20210": {
      "op": "CALLDATALOAD"
    },
    "20211": {
      "op": "SWAP4"
    },
    "20212": {
      "op": "POP"
    },
    "20213": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20215": {
      "op": "DUP7"
    },
    "20216": {
      "op": "ADD"
    },
    "20217": {
      "op": "CALLDATALOAD"
    },
    "20218": {
      "op": "SWAP3"
    },
    "20219": {
      "op": "POP"
    },
    "20220": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20222": {
      "op": "DUP7"
    },
    "20223": {
      "op": "ADD"
    },
    "20224": {
      "op": "CALLDATALOAD"
    },
    "20225": {
      "op": "PUSH2",
      "value": "0x4F09"
    },
    "20228": {
      "op": "DUP2"
    },
    "20229": {
      "op": "PUSH2",
      "value": "0x4EBA"
    },
    "20232": {
      "jump": "i",
      "op": "JUMP"
    },
    "20233": {
      "op": "JUMPDEST"
    },
    "20234": {
      "op": "SWAP2"
    },
    "20235": {
      "op": "POP"
    },
    "20236": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20238": {
      "op": "DUP7"
    },
    "20239": {
      "op": "ADD"
    },
    "20240": {
      "op": "CALLDATALOAD"
    },
    "20241": {
      "op": "PUSH2",
      "value": "0x4F19"
    },
    "20244": {
      "op": "DUP2"
    },
    "20245": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "20248": {
      "jump": "i",
      "op": "JUMP"
    },
    "20249": {
      "op": "JUMPDEST"
    },
    "20250": {
      "op": "DUP1"
    },
    "20251": {
      "op": "SWAP2"
    },
    "20252": {
      "op": "POP"
    },
    "20253": {
      "op": "POP"
    },
    "20254": {
      "op": "SWAP3"
    },
    "20255": {
      "op": "SWAP6"
    },
    "20256": {
      "op": "POP"
    },
    "20257": {
      "op": "SWAP3"
    },
    "20258": {
      "op": "SWAP6"
    },
    "20259": {
      "op": "SWAP1"
    },
    "20260": {
      "op": "SWAP4"
    },
    "20261": {
      "op": "POP"
    },
    "20262": {
      "jump": "o",
      "op": "JUMP"
    },
    "20263": {
      "op": "JUMPDEST"
    },
    "20264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20266": {
      "op": "DUP1"
    },
    "20267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20269": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20271": {
      "op": "DUP5"
    },
    "20272": {
      "op": "DUP7"
    },
    "20273": {
      "op": "SUB"
    },
    "20274": {
      "op": "SLT"
    },
    "20275": {
      "op": "ISZERO"
    },
    "20276": {
      "op": "PUSH2",
      "value": "0x4F3C"
    },
    "20279": {
      "op": "JUMPI"
    },
    "20280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20282": {
      "op": "DUP1"
    },
    "20283": {
      "op": "REVERT"
    },
    "20284": {
      "op": "JUMPDEST"
    },
    "20285": {
      "op": "DUP4"
    },
    "20286": {
      "op": "CALLDATALOAD"
    },
    "20287": {
      "op": "PUSH2",
      "value": "0x4F47"
    },
    "20290": {
      "op": "DUP2"
    },
    "20291": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "20294": {
      "jump": "i",
      "op": "JUMP"
    },
    "20295": {
      "op": "JUMPDEST"
    },
    "20296": {
      "op": "SWAP3"
    },
    "20297": {
      "op": "POP"
    },
    "20298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20300": {
      "op": "DUP5"
    },
    "20301": {
      "op": "ADD"
    },
    "20302": {
      "op": "CALLDATALOAD"
    },
    "20303": {
      "op": "PUSH2",
      "value": "0x4F57"
    },
    "20306": {
      "op": "DUP2"
    },
    "20307": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "20310": {
      "jump": "i",
      "op": "JUMP"
    },
    "20311": {
      "op": "JUMPDEST"
    },
    "20312": {
      "op": "SWAP3"
    },
    "20313": {
      "op": "SWAP6"
    },
    "20314": {
      "op": "SWAP3"
    },
    "20315": {
      "op": "SWAP5"
    },
    "20316": {
      "op": "POP"
    },
    "20317": {
      "op": "POP"
    },
    "20318": {
      "op": "POP"
    },
    "20319": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20321": {
      "op": "SWAP2"
    },
    "20322": {
      "op": "SWAP1"
    },
    "20323": {
      "op": "SWAP2"
    },
    "20324": {
      "op": "ADD"
    },
    "20325": {
      "op": "CALLDATALOAD"
    },
    "20326": {
      "op": "SWAP1"
    },
    "20327": {
      "jump": "o",
      "op": "JUMP"
    },
    "20328": {
      "op": "JUMPDEST"
    },
    "20329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20331": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "20334": {
      "op": "DUP3"
    },
    "20335": {
      "op": "DUP5"
    },
    "20336": {
      "op": "SUB"
    },
    "20337": {
      "op": "SLT"
    },
    "20338": {
      "op": "ISZERO"
    },
    "20339": {
      "op": "PUSH2",
      "value": "0x4F7B"
    },
    "20342": {
      "op": "JUMPI"
    },
    "20343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20345": {
      "op": "DUP1"
    },
    "20346": {
      "op": "REVERT"
    },
    "20347": {
      "op": "JUMPDEST"
    },
    "20348": {
      "op": "POP"
    },
    "20349": {
      "op": "SWAP2"
    },
    "20350": {
      "op": "SWAP1"
    },
    "20351": {
      "op": "POP"
    },
    "20352": {
      "jump": "o",
      "op": "JUMP"
    },
    "20353": {
      "op": "JUMPDEST"
    },
    "20354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20356": {
      "op": "DUP1"
    },
    "20357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20359": {
      "op": "DUP4"
    },
    "20360": {
      "op": "DUP6"
    },
    "20361": {
      "op": "SUB"
    },
    "20362": {
      "op": "SLT"
    },
    "20363": {
      "op": "ISZERO"
    },
    "20364": {
      "op": "PUSH2",
      "value": "0x4F94"
    },
    "20367": {
      "op": "JUMPI"
    },
    "20368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20370": {
      "op": "DUP1"
    },
    "20371": {
      "op": "REVERT"
    },
    "20372": {
      "op": "JUMPDEST"
    },
    "20373": {
      "op": "DUP3"
    },
    "20374": {
      "op": "CALLDATALOAD"
    },
    "20375": {
      "op": "SWAP2"
    },
    "20376": {
      "op": "POP"
    },
    "20377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20379": {
      "op": "DUP4"
    },
    "20380": {
      "op": "ADD"
    },
    "20381": {
      "op": "CALLDATALOAD"
    },
    "20382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20388": {
      "op": "SHL"
    },
    "20389": {
      "op": "SUB"
    },
    "20390": {
      "op": "DUP2"
    },
    "20391": {
      "op": "GT"
    },
    "20392": {
      "op": "ISZERO"
    },
    "20393": {
      "op": "PUSH2",
      "value": "0x4FB1"
    },
    "20396": {
      "op": "JUMPI"
    },
    "20397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20399": {
      "op": "DUP1"
    },
    "20400": {
      "op": "REVERT"
    },
    "20401": {
      "op": "JUMPDEST"
    },
    "20402": {
      "op": "PUSH2",
      "value": "0x4FBD"
    },
    "20405": {
      "op": "DUP6"
    },
    "20406": {
      "op": "DUP3"
    },
    "20407": {
      "op": "DUP7"
    },
    "20408": {
      "op": "ADD"
    },
    "20409": {
      "op": "PUSH2",
      "value": "0x4F68"
    },
    "20412": {
      "jump": "i",
      "op": "JUMP"
    },
    "20413": {
      "op": "JUMPDEST"
    },
    "20414": {
      "op": "SWAP2"
    },
    "20415": {
      "op": "POP"
    },
    "20416": {
      "op": "POP"
    },
    "20417": {
      "op": "SWAP3"
    },
    "20418": {
      "op": "POP"
    },
    "20419": {
      "op": "SWAP3"
    },
    "20420": {
      "op": "SWAP1"
    },
    "20421": {
      "op": "POP"
    },
    "20422": {
      "jump": "o",
      "op": "JUMP"
    },
    "20423": {
      "op": "JUMPDEST"
    },
    "20424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20428": {
      "op": "DUP3"
    },
    "20429": {
      "op": "DUP5"
    },
    "20430": {
      "op": "SUB"
    },
    "20431": {
      "op": "SLT"
    },
    "20432": {
      "op": "ISZERO"
    },
    "20433": {
      "op": "PUSH2",
      "value": "0x4FD9"
    },
    "20436": {
      "op": "JUMPI"
    },
    "20437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20439": {
      "op": "DUP1"
    },
    "20440": {
      "op": "REVERT"
    },
    "20441": {
      "op": "JUMPDEST"
    },
    "20442": {
      "op": "POP"
    },
    "20443": {
      "op": "CALLDATALOAD"
    },
    "20444": {
      "op": "SWAP2"
    },
    "20445": {
      "op": "SWAP1"
    },
    "20446": {
      "op": "POP"
    },
    "20447": {
      "jump": "o",
      "op": "JUMP"
    },
    "20448": {
      "op": "JUMPDEST"
    },
    "20449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20451": {
      "op": "DUP2"
    },
    "20452": {
      "op": "MLOAD"
    },
    "20453": {
      "op": "DUP1"
    },
    "20454": {
      "op": "DUP5"
    },
    "20455": {
      "op": "MSTORE"
    },
    "20456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20458": {
      "op": "DUP1"
    },
    "20459": {
      "op": "DUP6"
    },
    "20460": {
      "op": "ADD"
    },
    "20461": {
      "op": "SWAP5"
    },
    "20462": {
      "op": "POP"
    },
    "20463": {
      "op": "DUP1"
    },
    "20464": {
      "op": "DUP5"
    },
    "20465": {
      "op": "ADD"
    },
    "20466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20468": {
      "op": "JUMPDEST"
    },
    "20469": {
      "op": "DUP4"
    },
    "20470": {
      "op": "DUP2"
    },
    "20471": {
      "op": "LT"
    },
    "20472": {
      "op": "ISZERO"
    },
    "20473": {
      "op": "PUSH2",
      "value": "0x5019"
    },
    "20476": {
      "op": "JUMPI"
    },
    "20477": {
      "op": "DUP2"
    },
    "20478": {
      "op": "MLOAD"
    },
    "20479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20485": {
      "op": "SHL"
    },
    "20486": {
      "op": "SUB"
    },
    "20487": {
      "op": "AND"
    },
    "20488": {
      "op": "DUP8"
    },
    "20489": {
      "op": "MSTORE"
    },
    "20490": {
      "op": "SWAP6"
    },
    "20491": {
      "op": "DUP3"
    },
    "20492": {
      "op": "ADD"
    },
    "20493": {
      "op": "SWAP6"
    },
    "20494": {
      "op": "SWAP1"
    },
    "20495": {
      "op": "DUP3"
    },
    "20496": {
      "op": "ADD"
    },
    "20497": {
      "op": "SWAP1"
    },
    "20498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20500": {
      "op": "ADD"
    },
    "20501": {
      "op": "PUSH2",
      "value": "0x4FF4"
    },
    "20504": {
      "op": "JUMP"
    },
    "20505": {
      "op": "JUMPDEST"
    },
    "20506": {
      "op": "POP"
    },
    "20507": {
      "op": "SWAP5"
    },
    "20508": {
      "op": "SWAP6"
    },
    "20509": {
      "op": "SWAP5"
    },
    "20510": {
      "op": "POP"
    },
    "20511": {
      "op": "POP"
    },
    "20512": {
      "op": "POP"
    },
    "20513": {
      "op": "POP"
    },
    "20514": {
      "op": "POP"
    },
    "20515": {
      "jump": "o",
      "op": "JUMP"
    },
    "20516": {
      "op": "JUMPDEST"
    },
    "20517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20519": {
      "op": "DUP2"
    },
    "20520": {
      "op": "MSTORE"
    },
    "20521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20523": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "20526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20528": {
      "op": "DUP4"
    },
    "20529": {
      "op": "ADD"
    },
    "20530": {
      "op": "DUP5"
    },
    "20531": {
      "op": "PUSH2",
      "value": "0x4FE0"
    },
    "20534": {
      "jump": "i",
      "op": "JUMP"
    },
    "20535": {
      "op": "JUMPDEST"
    },
    "20536": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "20541": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20543": {
      "op": "SHL"
    },
    "20544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20546": {
      "op": "MSTORE"
    },
    "20547": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "20549": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20551": {
      "op": "MSTORE"
    },
    "20552": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20556": {
      "op": "REVERT"
    },
    "20557": {
      "op": "JUMPDEST"
    },
    "20558": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20560": {
      "op": "MLOAD"
    },
    "20561": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20563": {
      "op": "DUP3"
    },
    "20564": {
      "op": "ADD"
    },
    "20565": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20567": {
      "op": "NOT"
    },
    "20568": {
      "op": "AND"
    },
    "20569": {
      "op": "DUP2"
    },
    "20570": {
      "op": "ADD"
    },
    "20571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20575": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20577": {
      "op": "SHL"
    },
    "20578": {
      "op": "SUB"
    },
    "20579": {
      "op": "DUP2"
    },
    "20580": {
      "op": "GT"
    },
    "20581": {
      "op": "DUP3"
    },
    "20582": {
      "op": "DUP3"
    },
    "20583": {
      "op": "LT"
    },
    "20584": {
      "op": "OR"
    },
    "20585": {
      "op": "ISZERO"
    },
    "20586": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "20589": {
      "op": "JUMPI"
    },
    "20590": {
      "op": "PUSH2",
      "value": "0x5075"
    },
    "20593": {
      "op": "PUSH2",
      "value": "0x5037"
    },
    "20596": {
      "jump": "i",
      "op": "JUMP"
    },
    "20597": {
      "op": "JUMPDEST"
    },
    "20598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20600": {
      "op": "MSTORE"
    },
    "20601": {
      "op": "SWAP2"
    },
    "20602": {
      "op": "SWAP1"
    },
    "20603": {
      "op": "POP"
    },
    "20604": {
      "jump": "o",
      "op": "JUMP"
    },
    "20605": {
      "op": "JUMPDEST"
    },
    "20606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20614": {
      "op": "SHL"
    },
    "20615": {
      "op": "SUB"
    },
    "20616": {
      "op": "DUP3"
    },
    "20617": {
      "op": "GT"
    },
    "20618": {
      "op": "ISZERO"
    },
    "20619": {
      "op": "PUSH2",
      "value": "0x5096"
    },
    "20622": {
      "op": "JUMPI"
    },
    "20623": {
      "op": "PUSH2",
      "value": "0x5096"
    },
    "20626": {
      "op": "PUSH2",
      "value": "0x5037"
    },
    "20629": {
      "jump": "i",
      "op": "JUMP"
    },
    "20630": {
      "op": "JUMPDEST"
    },
    "20631": {
      "op": "POP"
    },
    "20632": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "20634": {
      "op": "SHL"
    },
    "20635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20637": {
      "op": "ADD"
    },
    "20638": {
      "op": "SWAP1"
    },
    "20639": {
      "jump": "o",
      "op": "JUMP"
    },
    "20640": {
      "op": "JUMPDEST"
    },
    "20641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20643": {
      "op": "DUP3"
    },
    "20644": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20646": {
      "op": "DUP4"
    },
    "20647": {
      "op": "ADD"
    },
    "20648": {
      "op": "SLT"
    },
    "20649": {
      "op": "PUSH2",
      "value": "0x50B1"
    },
    "20652": {
      "op": "JUMPI"
    },
    "20653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20655": {
      "op": "DUP1"
    },
    "20656": {
      "op": "REVERT"
    },
    "20657": {
      "op": "JUMPDEST"
    },
    "20658": {
      "op": "DUP2"
    },
    "20659": {
      "op": "CALLDATALOAD"
    },
    "20660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20662": {
      "op": "PUSH2",
      "value": "0x50C6"
    },
    "20665": {
      "op": "PUSH2",
      "value": "0x50C1"
    },
    "20668": {
      "op": "DUP4"
    },
    "20669": {
      "op": "PUSH2",
      "value": "0x507D"
    },
    "20672": {
      "jump": "i",
      "op": "JUMP"
    },
    "20673": {
      "op": "JUMPDEST"
    },
    "20674": {
      "op": "PUSH2",
      "value": "0x504D"
    },
    "20677": {
      "jump": "i",
      "op": "JUMP"
    },
    "20678": {
      "op": "JUMPDEST"
    },
    "20679": {
      "op": "DUP3"
    },
    "20680": {
      "op": "DUP2"
    },
    "20681": {
      "op": "MSTORE"
    },
    "20682": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "20684": {
      "op": "SWAP3"
    },
    "20685": {
      "op": "SWAP1"
    },
    "20686": {
      "op": "SWAP3"
    },
    "20687": {
      "op": "SHL"
    },
    "20688": {
      "op": "DUP5"
    },
    "20689": {
      "op": "ADD"
    },
    "20690": {
      "op": "DUP2"
    },
    "20691": {
      "op": "ADD"
    },
    "20692": {
      "op": "SWAP2"
    },
    "20693": {
      "op": "DUP2"
    },
    "20694": {
      "op": "DUP2"
    },
    "20695": {
      "op": "ADD"
    },
    "20696": {
      "op": "SWAP1"
    },
    "20697": {
      "op": "DUP7"
    },
    "20698": {
      "op": "DUP5"
    },
    "20699": {
      "op": "GT"
    },
    "20700": {
      "op": "ISZERO"
    },
    "20701": {
      "op": "PUSH2",
      "value": "0x50E5"
    },
    "20704": {
      "op": "JUMPI"
    },
    "20705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20707": {
      "op": "DUP1"
    },
    "20708": {
      "op": "REVERT"
    },
    "20709": {
      "op": "JUMPDEST"
    },
    "20710": {
      "op": "DUP3"
    },
    "20711": {
      "op": "DUP7"
    },
    "20712": {
      "op": "ADD"
    },
    "20713": {
      "op": "JUMPDEST"
    },
    "20714": {
      "op": "DUP5"
    },
    "20715": {
      "op": "DUP2"
    },
    "20716": {
      "op": "LT"
    },
    "20717": {
      "op": "ISZERO"
    },
    "20718": {
      "op": "PUSH2",
      "value": "0x5100"
    },
    "20721": {
      "op": "JUMPI"
    },
    "20722": {
      "op": "DUP1"
    },
    "20723": {
      "op": "CALLDATALOAD"
    },
    "20724": {
      "op": "DUP4"
    },
    "20725": {
      "op": "MSTORE"
    },
    "20726": {
      "op": "SWAP2"
    },
    "20727": {
      "op": "DUP4"
    },
    "20728": {
      "op": "ADD"
    },
    "20729": {
      "op": "SWAP2"
    },
    "20730": {
      "op": "DUP4"
    },
    "20731": {
      "op": "ADD"
    },
    "20732": {
      "op": "PUSH2",
      "value": "0x50E9"
    },
    "20735": {
      "op": "JUMP"
    },
    "20736": {
      "op": "JUMPDEST"
    },
    "20737": {
      "op": "POP"
    },
    "20738": {
      "op": "SWAP7"
    },
    "20739": {
      "op": "SWAP6"
    },
    "20740": {
      "op": "POP"
    },
    "20741": {
      "op": "POP"
    },
    "20742": {
      "op": "POP"
    },
    "20743": {
      "op": "POP"
    },
    "20744": {
      "op": "POP"
    },
    "20745": {
      "op": "POP"
    },
    "20746": {
      "jump": "o",
      "op": "JUMP"
    },
    "20747": {
      "op": "JUMPDEST"
    },
    "20748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20750": {
      "op": "DUP3"
    },
    "20751": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20753": {
      "op": "DUP4"
    },
    "20754": {
      "op": "ADD"
    },
    "20755": {
      "op": "SLT"
    },
    "20756": {
      "op": "PUSH2",
      "value": "0x511C"
    },
    "20759": {
      "op": "JUMPI"
    },
    "20760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20762": {
      "op": "DUP1"
    },
    "20763": {
      "op": "REVERT"
    },
    "20764": {
      "op": "JUMPDEST"
    },
    "20765": {
      "op": "DUP2"
    },
    "20766": {
      "op": "CALLDATALOAD"
    },
    "20767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20769": {
      "op": "PUSH2",
      "value": "0x512C"
    },
    "20772": {
      "op": "PUSH2",
      "value": "0x50C1"
    },
    "20775": {
      "op": "DUP4"
    },
    "20776": {
      "op": "PUSH2",
      "value": "0x507D"
    },
    "20779": {
      "jump": "i",
      "op": "JUMP"
    },
    "20780": {
      "op": "JUMPDEST"
    },
    "20781": {
      "op": "DUP3"
    },
    "20782": {
      "op": "DUP2"
    },
    "20783": {
      "op": "MSTORE"
    },
    "20784": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "20786": {
      "op": "SWAP3"
    },
    "20787": {
      "op": "SWAP1"
    },
    "20788": {
      "op": "SWAP3"
    },
    "20789": {
      "op": "SHL"
    },
    "20790": {
      "op": "DUP5"
    },
    "20791": {
      "op": "ADD"
    },
    "20792": {
      "op": "DUP2"
    },
    "20793": {
      "op": "ADD"
    },
    "20794": {
      "op": "SWAP2"
    },
    "20795": {
      "op": "DUP2"
    },
    "20796": {
      "op": "DUP2"
    },
    "20797": {
      "op": "ADD"
    },
    "20798": {
      "op": "SWAP1"
    },
    "20799": {
      "op": "DUP7"
    },
    "20800": {
      "op": "DUP5"
    },
    "20801": {
      "op": "GT"
    },
    "20802": {
      "op": "ISZERO"
    },
    "20803": {
      "op": "PUSH2",
      "value": "0x514B"
    },
    "20806": {
      "op": "JUMPI"
    },
    "20807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20809": {
      "op": "DUP1"
    },
    "20810": {
      "op": "REVERT"
    },
    "20811": {
      "op": "JUMPDEST"
    },
    "20812": {
      "op": "DUP3"
    },
    "20813": {
      "op": "DUP7"
    },
    "20814": {
      "op": "ADD"
    },
    "20815": {
      "op": "JUMPDEST"
    },
    "20816": {
      "op": "DUP5"
    },
    "20817": {
      "op": "DUP2"
    },
    "20818": {
      "op": "LT"
    },
    "20819": {
      "op": "ISZERO"
    },
    "20820": {
      "op": "PUSH2",
      "value": "0x5100"
    },
    "20823": {
      "op": "JUMPI"
    },
    "20824": {
      "op": "DUP1"
    },
    "20825": {
      "op": "CALLDATALOAD"
    },
    "20826": {
      "op": "PUSH2",
      "value": "0x5162"
    },
    "20829": {
      "op": "DUP2"
    },
    "20830": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "20833": {
      "jump": "i",
      "op": "JUMP"
    },
    "20834": {
      "op": "JUMPDEST"
    },
    "20835": {
      "op": "DUP4"
    },
    "20836": {
      "op": "MSTORE"
    },
    "20837": {
      "op": "SWAP2"
    },
    "20838": {
      "op": "DUP4"
    },
    "20839": {
      "op": "ADD"
    },
    "20840": {
      "op": "SWAP2"
    },
    "20841": {
      "op": "DUP4"
    },
    "20842": {
      "op": "ADD"
    },
    "20843": {
      "op": "PUSH2",
      "value": "0x514F"
    },
    "20846": {
      "op": "JUMP"
    },
    "20847": {
      "op": "JUMPDEST"
    },
    "20848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20850": {
      "op": "DUP1"
    },
    "20851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20853": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20855": {
      "op": "DUP5"
    },
    "20856": {
      "op": "DUP7"
    },
    "20857": {
      "op": "SUB"
    },
    "20858": {
      "op": "SLT"
    },
    "20859": {
      "op": "ISZERO"
    },
    "20860": {
      "op": "PUSH2",
      "value": "0x5184"
    },
    "20863": {
      "op": "JUMPI"
    },
    "20864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20866": {
      "op": "DUP1"
    },
    "20867": {
      "op": "REVERT"
    },
    "20868": {
      "op": "JUMPDEST"
    },
    "20869": {
      "op": "DUP4"
    },
    "20870": {
      "op": "CALLDATALOAD"
    },
    "20871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20875": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20877": {
      "op": "SHL"
    },
    "20878": {
      "op": "SUB"
    },
    "20879": {
      "op": "DUP1"
    },
    "20880": {
      "op": "DUP3"
    },
    "20881": {
      "op": "GT"
    },
    "20882": {
      "op": "ISZERO"
    },
    "20883": {
      "op": "PUSH2",
      "value": "0x519B"
    },
    "20886": {
      "op": "JUMPI"
    },
    "20887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20889": {
      "op": "DUP1"
    },
    "20890": {
      "op": "REVERT"
    },
    "20891": {
      "op": "JUMPDEST"
    },
    "20892": {
      "op": "PUSH2",
      "value": "0x51A7"
    },
    "20895": {
      "op": "DUP8"
    },
    "20896": {
      "op": "DUP4"
    },
    "20897": {
      "op": "DUP9"
    },
    "20898": {
      "op": "ADD"
    },
    "20899": {
      "op": "PUSH2",
      "value": "0x50A0"
    },
    "20902": {
      "jump": "i",
      "op": "JUMP"
    },
    "20903": {
      "op": "JUMPDEST"
    },
    "20904": {
      "op": "SWAP5"
    },
    "20905": {
      "op": "POP"
    },
    "20906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20908": {
      "op": "DUP7"
    },
    "20909": {
      "op": "ADD"
    },
    "20910": {
      "op": "CALLDATALOAD"
    },
    "20911": {
      "op": "SWAP2"
    },
    "20912": {
      "op": "POP"
    },
    "20913": {
      "op": "DUP1"
    },
    "20914": {
      "op": "DUP3"
    },
    "20915": {
      "op": "GT"
    },
    "20916": {
      "op": "ISZERO"
    },
    "20917": {
      "op": "PUSH2",
      "value": "0x51BD"
    },
    "20920": {
      "op": "JUMPI"
    },
    "20921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20923": {
      "op": "DUP1"
    },
    "20924": {
      "op": "REVERT"
    },
    "20925": {
      "op": "JUMPDEST"
    },
    "20926": {
      "op": "PUSH2",
      "value": "0x51C9"
    },
    "20929": {
      "op": "DUP8"
    },
    "20930": {
      "op": "DUP4"
    },
    "20931": {
      "op": "DUP9"
    },
    "20932": {
      "op": "ADD"
    },
    "20933": {
      "op": "PUSH2",
      "value": "0x50A0"
    },
    "20936": {
      "jump": "i",
      "op": "JUMP"
    },
    "20937": {
      "op": "JUMPDEST"
    },
    "20938": {
      "op": "SWAP4"
    },
    "20939": {
      "op": "POP"
    },
    "20940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20942": {
      "op": "DUP7"
    },
    "20943": {
      "op": "ADD"
    },
    "20944": {
      "op": "CALLDATALOAD"
    },
    "20945": {
      "op": "SWAP2"
    },
    "20946": {
      "op": "POP"
    },
    "20947": {
      "op": "DUP1"
    },
    "20948": {
      "op": "DUP3"
    },
    "20949": {
      "op": "GT"
    },
    "20950": {
      "op": "ISZERO"
    },
    "20951": {
      "op": "PUSH2",
      "value": "0x51DF"
    },
    "20954": {
      "op": "JUMPI"
    },
    "20955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20957": {
      "op": "DUP1"
    },
    "20958": {
      "op": "REVERT"
    },
    "20959": {
      "op": "JUMPDEST"
    },
    "20960": {
      "op": "POP"
    },
    "20961": {
      "op": "PUSH2",
      "value": "0x51EC"
    },
    "20964": {
      "op": "DUP7"
    },
    "20965": {
      "op": "DUP3"
    },
    "20966": {
      "op": "DUP8"
    },
    "20967": {
      "op": "ADD"
    },
    "20968": {
      "op": "PUSH2",
      "value": "0x510B"
    },
    "20971": {
      "jump": "i",
      "op": "JUMP"
    },
    "20972": {
      "op": "JUMPDEST"
    },
    "20973": {
      "op": "SWAP2"
    },
    "20974": {
      "op": "POP"
    },
    "20975": {
      "op": "POP"
    },
    "20976": {
      "op": "SWAP3"
    },
    "20977": {
      "op": "POP"
    },
    "20978": {
      "op": "SWAP3"
    },
    "20979": {
      "op": "POP"
    },
    "20980": {
      "op": "SWAP3"
    },
    "20981": {
      "jump": "o",
      "op": "JUMP"
    },
    "20982": {
      "op": "JUMPDEST"
    },
    "20983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20985": {
      "op": "DUP1"
    },
    "20986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20988": {
      "op": "DUP1"
    },
    "20989": {
      "op": "DUP5"
    },
    "20990": {
      "op": "DUP7"
    },
    "20991": {
      "op": "SUB"
    },
    "20992": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "20994": {
      "op": "DUP2"
    },
    "20995": {
      "op": "SLT"
    },
    "20996": {
      "op": "ISZERO"
    },
    "20997": {
      "op": "PUSH2",
      "value": "0x520D"
    },
    "21000": {
      "op": "JUMPI"
    },
    "21001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21003": {
      "op": "DUP1"
    },
    "21004": {
      "op": "REVERT"
    },
    "21005": {
      "op": "JUMPDEST"
    },
    "21006": {
      "op": "DUP6"
    },
    "21007": {
      "op": "CALLDATALOAD"
    },
    "21008": {
      "op": "PUSH2",
      "value": "0x5218"
    },
    "21011": {
      "op": "DUP2"
    },
    "21012": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "21015": {
      "jump": "i",
      "op": "JUMP"
    },
    "21016": {
      "op": "JUMPDEST"
    },
    "21017": {
      "op": "SWAP5"
    },
    "21018": {
      "op": "POP"
    },
    "21019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21021": {
      "op": "DUP7"
    },
    "21022": {
      "op": "ADD"
    },
    "21023": {
      "op": "CALLDATALOAD"
    },
    "21024": {
      "op": "SWAP4"
    },
    "21025": {
      "op": "POP"
    },
    "21026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21028": {
      "op": "DUP7"
    },
    "21029": {
      "op": "ADD"
    },
    "21030": {
      "op": "CALLDATALOAD"
    },
    "21031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21037": {
      "op": "SHL"
    },
    "21038": {
      "op": "SUB"
    },
    "21039": {
      "op": "DUP2"
    },
    "21040": {
      "op": "GT"
    },
    "21041": {
      "op": "ISZERO"
    },
    "21042": {
      "op": "PUSH2",
      "value": "0x523A"
    },
    "21045": {
      "op": "JUMPI"
    },
    "21046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21048": {
      "op": "DUP1"
    },
    "21049": {
      "op": "REVERT"
    },
    "21050": {
      "op": "JUMPDEST"
    },
    "21051": {
      "op": "PUSH2",
      "value": "0x5246"
    },
    "21054": {
      "op": "DUP9"
    },
    "21055": {
      "op": "DUP3"
    },
    "21056": {
      "op": "DUP10"
    },
    "21057": {
      "op": "ADD"
    },
    "21058": {
      "op": "PUSH2",
      "value": "0x4F68"
    },
    "21061": {
      "jump": "i",
      "op": "JUMP"
    },
    "21062": {
      "op": "JUMPDEST"
    },
    "21063": {
      "op": "SWAP4"
    },
    "21064": {
      "op": "POP"
    },
    "21065": {
      "op": "POP"
    },
    "21066": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21068": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "21070": {
      "op": "NOT"
    },
    "21071": {
      "op": "DUP3"
    },
    "21072": {
      "op": "ADD"
    },
    "21073": {
      "op": "SLT"
    },
    "21074": {
      "op": "ISZERO"
    },
    "21075": {
      "op": "PUSH2",
      "value": "0x525B"
    },
    "21078": {
      "op": "JUMPI"
    },
    "21079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21081": {
      "op": "DUP1"
    },
    "21082": {
      "op": "REVERT"
    },
    "21083": {
      "op": "JUMPDEST"
    },
    "21084": {
      "op": "POP"
    },
    "21085": {
      "op": "SWAP3"
    },
    "21086": {
      "op": "SWAP6"
    },
    "21087": {
      "op": "SWAP2"
    },
    "21088": {
      "op": "SWAP5"
    },
    "21089": {
      "op": "POP"
    },
    "21090": {
      "op": "SWAP3"
    },
    "21091": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21093": {
      "op": "ADD"
    },
    "21094": {
      "op": "SWAP2"
    },
    "21095": {
      "op": "POP"
    },
    "21096": {
      "jump": "o",
      "op": "JUMP"
    },
    "21097": {
      "op": "JUMPDEST"
    },
    "21098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21100": {
      "op": "DUP1"
    },
    "21101": {
      "op": "DUP3"
    },
    "21102": {
      "op": "MSTORE"
    },
    "21103": {
      "op": "DUP3"
    },
    "21104": {
      "op": "MLOAD"
    },
    "21105": {
      "op": "DUP3"
    },
    "21106": {
      "op": "DUP3"
    },
    "21107": {
      "op": "ADD"
    },
    "21108": {
      "op": "DUP2"
    },
    "21109": {
      "op": "SWAP1"
    },
    "21110": {
      "op": "MSTORE"
    },
    "21111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21113": {
      "op": "SWAP2"
    },
    "21114": {
      "op": "SWAP1"
    },
    "21115": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21117": {
      "op": "SWAP1"
    },
    "21118": {
      "op": "DUP2"
    },
    "21119": {
      "op": "DUP6"
    },
    "21120": {
      "op": "ADD"
    },
    "21121": {
      "op": "SWAP1"
    },
    "21122": {
      "op": "DUP7"
    },
    "21123": {
      "op": "DUP5"
    },
    "21124": {
      "op": "ADD"
    },
    "21125": {
      "op": "DUP6"
    },
    "21126": {
      "op": "JUMPDEST"
    },
    "21127": {
      "op": "DUP3"
    },
    "21128": {
      "op": "DUP2"
    },
    "21129": {
      "op": "LT"
    },
    "21130": {
      "op": "ISZERO"
    },
    "21131": {
      "op": "PUSH2",
      "value": "0x52B4"
    },
    "21134": {
      "op": "JUMPI"
    },
    "21135": {
      "op": "DUP2"
    },
    "21136": {
      "op": "MLOAD"
    },
    "21137": {
      "op": "DUP1"
    },
    "21138": {
      "op": "MLOAD"
    },
    "21139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21145": {
      "op": "SHL"
    },
    "21146": {
      "op": "SUB"
    },
    "21147": {
      "op": "AND"
    },
    "21148": {
      "op": "DUP6"
    },
    "21149": {
      "op": "MSTORE"
    },
    "21150": {
      "op": "DUP7"
    },
    "21151": {
      "op": "ADD"
    },
    "21152": {
      "op": "MLOAD"
    },
    "21153": {
      "op": "DUP7"
    },
    "21154": {
      "op": "DUP6"
    },
    "21155": {
      "op": "ADD"
    },
    "21156": {
      "op": "MSTORE"
    },
    "21157": {
      "op": "SWAP3"
    },
    "21158": {
      "op": "DUP5"
    },
    "21159": {
      "op": "ADD"
    },
    "21160": {
      "op": "SWAP3"
    },
    "21161": {
      "op": "SWAP1"
    },
    "21162": {
      "op": "DUP6"
    },
    "21163": {
      "op": "ADD"
    },
    "21164": {
      "op": "SWAP1"
    },
    "21165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21167": {
      "op": "ADD"
    },
    "21168": {
      "op": "PUSH2",
      "value": "0x5286"
    },
    "21171": {
      "op": "JUMP"
    },
    "21172": {
      "op": "JUMPDEST"
    },
    "21173": {
      "op": "POP"
    },
    "21174": {
      "op": "SWAP2"
    },
    "21175": {
      "op": "SWAP8"
    },
    "21176": {
      "op": "SWAP7"
    },
    "21177": {
      "op": "POP"
    },
    "21178": {
      "op": "POP"
    },
    "21179": {
      "op": "POP"
    },
    "21180": {
      "op": "POP"
    },
    "21181": {
      "op": "POP"
    },
    "21182": {
      "op": "POP"
    },
    "21183": {
      "op": "POP"
    },
    "21184": {
      "jump": "o",
      "op": "JUMP"
    },
    "21185": {
      "op": "JUMPDEST"
    },
    "21186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21188": {
      "op": "DUP1"
    },
    "21189": {
      "op": "DUP4"
    },
    "21190": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21192": {
      "op": "DUP5"
    },
    "21193": {
      "op": "ADD"
    },
    "21194": {
      "op": "SLT"
    },
    "21195": {
      "op": "PUSH2",
      "value": "0x52D3"
    },
    "21198": {
      "op": "JUMPI"
    },
    "21199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21201": {
      "op": "DUP1"
    },
    "21202": {
      "op": "REVERT"
    },
    "21203": {
      "op": "JUMPDEST"
    },
    "21204": {
      "op": "POP"
    },
    "21205": {
      "op": "DUP2"
    },
    "21206": {
      "op": "CALLDATALOAD"
    },
    "21207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21211": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21213": {
      "op": "SHL"
    },
    "21214": {
      "op": "SUB"
    },
    "21215": {
      "op": "DUP2"
    },
    "21216": {
      "op": "GT"
    },
    "21217": {
      "op": "ISZERO"
    },
    "21218": {
      "op": "PUSH2",
      "value": "0x52EA"
    },
    "21221": {
      "op": "JUMPI"
    },
    "21222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21224": {
      "op": "DUP1"
    },
    "21225": {
      "op": "REVERT"
    },
    "21226": {
      "op": "JUMPDEST"
    },
    "21227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21229": {
      "op": "DUP4"
    },
    "21230": {
      "op": "ADD"
    },
    "21231": {
      "op": "SWAP2"
    },
    "21232": {
      "op": "POP"
    },
    "21233": {
      "op": "DUP4"
    },
    "21234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21236": {
      "op": "DUP3"
    },
    "21237": {
      "op": "DUP6"
    },
    "21238": {
      "op": "ADD"
    },
    "21239": {
      "op": "ADD"
    },
    "21240": {
      "op": "GT"
    },
    "21241": {
      "op": "ISZERO"
    },
    "21242": {
      "op": "PUSH2",
      "value": "0x5302"
    },
    "21245": {
      "op": "JUMPI"
    },
    "21246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21248": {
      "op": "DUP1"
    },
    "21249": {
      "op": "REVERT"
    },
    "21250": {
      "op": "JUMPDEST"
    },
    "21251": {
      "op": "SWAP3"
    },
    "21252": {
      "op": "POP"
    },
    "21253": {
      "op": "SWAP3"
    },
    "21254": {
      "op": "SWAP1"
    },
    "21255": {
      "op": "POP"
    },
    "21256": {
      "jump": "o",
      "op": "JUMP"
    },
    "21257": {
      "op": "JUMPDEST"
    },
    "21258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21260": {
      "op": "DUP1"
    },
    "21261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21263": {
      "op": "DUP1"
    },
    "21264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21266": {
      "op": "DUP1"
    },
    "21267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21269": {
      "op": "DUP1"
    },
    "21270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21272": {
      "op": "DUP1"
    },
    "21273": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "21275": {
      "op": "DUP12"
    },
    "21276": {
      "op": "DUP14"
    },
    "21277": {
      "op": "SUB"
    },
    "21278": {
      "op": "SLT"
    },
    "21279": {
      "op": "ISZERO"
    },
    "21280": {
      "op": "PUSH2",
      "value": "0x5328"
    },
    "21283": {
      "op": "JUMPI"
    },
    "21284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21286": {
      "op": "DUP1"
    },
    "21287": {
      "op": "REVERT"
    },
    "21288": {
      "op": "JUMPDEST"
    },
    "21289": {
      "op": "DUP11"
    },
    "21290": {
      "op": "CALLDATALOAD"
    },
    "21291": {
      "op": "SWAP10"
    },
    "21292": {
      "op": "POP"
    },
    "21293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21295": {
      "op": "DUP12"
    },
    "21296": {
      "op": "ADD"
    },
    "21297": {
      "op": "CALLDATALOAD"
    },
    "21298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21302": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21304": {
      "op": "SHL"
    },
    "21305": {
      "op": "SUB"
    },
    "21306": {
      "op": "DUP1"
    },
    "21307": {
      "op": "DUP3"
    },
    "21308": {
      "op": "GT"
    },
    "21309": {
      "op": "ISZERO"
    },
    "21310": {
      "op": "PUSH2",
      "value": "0x5346"
    },
    "21313": {
      "op": "JUMPI"
    },
    "21314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21316": {
      "op": "DUP1"
    },
    "21317": {
      "op": "REVERT"
    },
    "21318": {
      "op": "JUMPDEST"
    },
    "21319": {
      "op": "PUSH2",
      "value": "0x5352"
    },
    "21322": {
      "op": "DUP15"
    },
    "21323": {
      "op": "DUP4"
    },
    "21324": {
      "op": "DUP16"
    },
    "21325": {
      "op": "ADD"
    },
    "21326": {
      "op": "PUSH2",
      "value": "0x52C1"
    },
    "21329": {
      "jump": "i",
      "op": "JUMP"
    },
    "21330": {
      "op": "JUMPDEST"
    },
    "21331": {
      "op": "SWAP1"
    },
    "21332": {
      "op": "SWAP12"
    },
    "21333": {
      "op": "POP"
    },
    "21334": {
      "op": "SWAP10"
    },
    "21335": {
      "op": "POP"
    },
    "21336": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21338": {
      "op": "DUP14"
    },
    "21339": {
      "op": "ADD"
    },
    "21340": {
      "op": "CALLDATALOAD"
    },
    "21341": {
      "op": "SWAP2"
    },
    "21342": {
      "op": "POP"
    },
    "21343": {
      "op": "DUP1"
    },
    "21344": {
      "op": "DUP3"
    },
    "21345": {
      "op": "GT"
    },
    "21346": {
      "op": "ISZERO"
    },
    "21347": {
      "op": "PUSH2",
      "value": "0x536B"
    },
    "21350": {
      "op": "JUMPI"
    },
    "21351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21353": {
      "op": "DUP1"
    },
    "21354": {
      "op": "REVERT"
    },
    "21355": {
      "op": "JUMPDEST"
    },
    "21356": {
      "op": "PUSH2",
      "value": "0x5377"
    },
    "21359": {
      "op": "DUP15"
    },
    "21360": {
      "op": "DUP4"
    },
    "21361": {
      "op": "DUP16"
    },
    "21362": {
      "op": "ADD"
    },
    "21363": {
      "op": "PUSH2",
      "value": "0x52C1"
    },
    "21366": {
      "jump": "i",
      "op": "JUMP"
    },
    "21367": {
      "op": "JUMPDEST"
    },
    "21368": {
      "op": "SWAP1"
    },
    "21369": {
      "op": "SWAP10"
    },
    "21370": {
      "op": "POP"
    },
    "21371": {
      "op": "SWAP8"
    },
    "21372": {
      "op": "POP"
    },
    "21373": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21375": {
      "op": "DUP14"
    },
    "21376": {
      "op": "ADD"
    },
    "21377": {
      "op": "CALLDATALOAD"
    },
    "21378": {
      "op": "SWAP2"
    },
    "21379": {
      "op": "POP"
    },
    "21380": {
      "op": "DUP1"
    },
    "21381": {
      "op": "DUP3"
    },
    "21382": {
      "op": "GT"
    },
    "21383": {
      "op": "ISZERO"
    },
    "21384": {
      "op": "PUSH2",
      "value": "0x5390"
    },
    "21387": {
      "op": "JUMPI"
    },
    "21388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21390": {
      "op": "DUP1"
    },
    "21391": {
      "op": "REVERT"
    },
    "21392": {
      "op": "JUMPDEST"
    },
    "21393": {
      "op": "PUSH2",
      "value": "0x539C"
    },
    "21396": {
      "op": "DUP15"
    },
    "21397": {
      "op": "DUP4"
    },
    "21398": {
      "op": "DUP16"
    },
    "21399": {
      "op": "ADD"
    },
    "21400": {
      "op": "PUSH2",
      "value": "0x52C1"
    },
    "21403": {
      "jump": "i",
      "op": "JUMP"
    },
    "21404": {
      "op": "JUMPDEST"
    },
    "21405": {
      "op": "SWAP1"
    },
    "21406": {
      "op": "SWAP8"
    },
    "21407": {
      "op": "POP"
    },
    "21408": {
      "op": "SWAP6"
    },
    "21409": {
      "op": "POP"
    },
    "21410": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21412": {
      "op": "DUP14"
    },
    "21413": {
      "op": "ADD"
    },
    "21414": {
      "op": "CALLDATALOAD"
    },
    "21415": {
      "op": "SWAP2"
    },
    "21416": {
      "op": "POP"
    },
    "21417": {
      "op": "DUP1"
    },
    "21418": {
      "op": "DUP3"
    },
    "21419": {
      "op": "GT"
    },
    "21420": {
      "op": "ISZERO"
    },
    "21421": {
      "op": "PUSH2",
      "value": "0x53B5"
    },
    "21424": {
      "op": "JUMPI"
    },
    "21425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21427": {
      "op": "DUP1"
    },
    "21428": {
      "op": "REVERT"
    },
    "21429": {
      "op": "JUMPDEST"
    },
    "21430": {
      "op": "POP"
    },
    "21431": {
      "op": "PUSH2",
      "value": "0x53C2"
    },
    "21434": {
      "op": "DUP14"
    },
    "21435": {
      "op": "DUP3"
    },
    "21436": {
      "op": "DUP15"
    },
    "21437": {
      "op": "ADD"
    },
    "21438": {
      "op": "PUSH2",
      "value": "0x52C1"
    },
    "21441": {
      "jump": "i",
      "op": "JUMP"
    },
    "21442": {
      "op": "JUMPDEST"
    },
    "21443": {
      "op": "SWAP1"
    },
    "21444": {
      "op": "SWAP5"
    },
    "21445": {
      "op": "POP"
    },
    "21446": {
      "op": "SWAP3"
    },
    "21447": {
      "op": "POP"
    },
    "21448": {
      "op": "PUSH2",
      "value": "0x53D5"
    },
    "21451": {
      "op": "SWAP1"
    },
    "21452": {
      "op": "POP"
    },
    "21453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21455": {
      "op": "DUP13"
    },
    "21456": {
      "op": "ADD"
    },
    "21457": {
      "op": "PUSH2",
      "value": "0x4E02"
    },
    "21460": {
      "jump": "i",
      "op": "JUMP"
    },
    "21461": {
      "op": "JUMPDEST"
    },
    "21462": {
      "op": "SWAP1"
    },
    "21463": {
      "op": "POP"
    },
    "21464": {
      "op": "SWAP3"
    },
    "21465": {
      "op": "SWAP6"
    },
    "21466": {
      "op": "SWAP9"
    },
    "21467": {
      "op": "SWAP12"
    },
    "21468": {
      "op": "SWAP2"
    },
    "21469": {
      "op": "SWAP5"
    },
    "21470": {
      "op": "SWAP8"
    },
    "21471": {
      "op": "SWAP11"
    },
    "21472": {
      "op": "POP"
    },
    "21473": {
      "op": "SWAP3"
    },
    "21474": {
      "op": "SWAP6"
    },
    "21475": {
      "op": "SWAP9"
    },
    "21476": {
      "op": "POP"
    },
    "21477": {
      "jump": "o",
      "op": "JUMP"
    },
    "21478": {
      "op": "JUMPDEST"
    },
    "21479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21481": {
      "op": "DUP1"
    },
    "21482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21484": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21486": {
      "op": "DUP5"
    },
    "21487": {
      "op": "DUP7"
    },
    "21488": {
      "op": "SUB"
    },
    "21489": {
      "op": "SLT"
    },
    "21490": {
      "op": "ISZERO"
    },
    "21491": {
      "op": "PUSH2",
      "value": "0x53FB"
    },
    "21494": {
      "op": "JUMPI"
    },
    "21495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21497": {
      "op": "DUP1"
    },
    "21498": {
      "op": "REVERT"
    },
    "21499": {
      "op": "JUMPDEST"
    },
    "21500": {
      "op": "DUP4"
    },
    "21501": {
      "op": "CALLDATALOAD"
    },
    "21502": {
      "op": "PUSH2",
      "value": "0x5406"
    },
    "21505": {
      "op": "DUP2"
    },
    "21506": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "21509": {
      "jump": "i",
      "op": "JUMP"
    },
    "21510": {
      "op": "JUMPDEST"
    },
    "21511": {
      "op": "SWAP3"
    },
    "21512": {
      "op": "POP"
    },
    "21513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21515": {
      "op": "DUP5"
    },
    "21516": {
      "op": "ADD"
    },
    "21517": {
      "op": "CALLDATALOAD"
    },
    "21518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21524": {
      "op": "SHL"
    },
    "21525": {
      "op": "SUB"
    },
    "21526": {
      "op": "DUP1"
    },
    "21527": {
      "op": "DUP3"
    },
    "21528": {
      "op": "GT"
    },
    "21529": {
      "op": "ISZERO"
    },
    "21530": {
      "op": "PUSH2",
      "value": "0x5422"
    },
    "21533": {
      "op": "JUMPI"
    },
    "21534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21536": {
      "op": "DUP1"
    },
    "21537": {
      "op": "REVERT"
    },
    "21538": {
      "op": "JUMPDEST"
    },
    "21539": {
      "op": "PUSH2",
      "value": "0x542E"
    },
    "21542": {
      "op": "DUP8"
    },
    "21543": {
      "op": "DUP4"
    },
    "21544": {
      "op": "DUP9"
    },
    "21545": {
      "op": "ADD"
    },
    "21546": {
      "op": "PUSH2",
      "value": "0x510B"
    },
    "21549": {
      "jump": "i",
      "op": "JUMP"
    },
    "21550": {
      "op": "JUMPDEST"
    },
    "21551": {
      "op": "SWAP4"
    },
    "21552": {
      "op": "POP"
    },
    "21553": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21555": {
      "op": "DUP7"
    },
    "21556": {
      "op": "ADD"
    },
    "21557": {
      "op": "CALLDATALOAD"
    },
    "21558": {
      "op": "SWAP2"
    },
    "21559": {
      "op": "POP"
    },
    "21560": {
      "op": "DUP1"
    },
    "21561": {
      "op": "DUP3"
    },
    "21562": {
      "op": "GT"
    },
    "21563": {
      "op": "ISZERO"
    },
    "21564": {
      "op": "PUSH2",
      "value": "0x5444"
    },
    "21567": {
      "op": "JUMPI"
    },
    "21568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21570": {
      "op": "DUP1"
    },
    "21571": {
      "op": "REVERT"
    },
    "21572": {
      "op": "JUMPDEST"
    },
    "21573": {
      "op": "POP"
    },
    "21574": {
      "op": "PUSH2",
      "value": "0x51EC"
    },
    "21577": {
      "op": "DUP7"
    },
    "21578": {
      "op": "DUP3"
    },
    "21579": {
      "op": "DUP8"
    },
    "21580": {
      "op": "ADD"
    },
    "21581": {
      "op": "PUSH2",
      "value": "0x50A0"
    },
    "21584": {
      "jump": "i",
      "op": "JUMP"
    },
    "21585": {
      "op": "JUMPDEST"
    },
    "21586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21588": {
      "op": "DUP1"
    },
    "21589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21591": {
      "op": "DUP4"
    },
    "21592": {
      "op": "DUP6"
    },
    "21593": {
      "op": "SUB"
    },
    "21594": {
      "op": "SLT"
    },
    "21595": {
      "op": "ISZERO"
    },
    "21596": {
      "op": "PUSH2",
      "value": "0x5464"
    },
    "21599": {
      "op": "JUMPI"
    },
    "21600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21602": {
      "op": "DUP1"
    },
    "21603": {
      "op": "REVERT"
    },
    "21604": {
      "op": "JUMPDEST"
    },
    "21605": {
      "op": "DUP3"
    },
    "21606": {
      "op": "CALLDATALOAD"
    },
    "21607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21611": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21613": {
      "op": "SHL"
    },
    "21614": {
      "op": "SUB"
    },
    "21615": {
      "op": "DUP2"
    },
    "21616": {
      "op": "GT"
    },
    "21617": {
      "op": "ISZERO"
    },
    "21618": {
      "op": "PUSH2",
      "value": "0x547A"
    },
    "21621": {
      "op": "JUMPI"
    },
    "21622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21624": {
      "op": "DUP1"
    },
    "21625": {
      "op": "REVERT"
    },
    "21626": {
      "op": "JUMPDEST"
    },
    "21627": {
      "op": "PUSH2",
      "value": "0x5486"
    },
    "21630": {
      "op": "DUP6"
    },
    "21631": {
      "op": "DUP3"
    },
    "21632": {
      "op": "DUP7"
    },
    "21633": {
      "op": "ADD"
    },
    "21634": {
      "op": "PUSH2",
      "value": "0x52C1"
    },
    "21637": {
      "jump": "i",
      "op": "JUMP"
    },
    "21638": {
      "op": "JUMPDEST"
    },
    "21639": {
      "op": "SWAP1"
    },
    "21640": {
      "op": "SWAP7"
    },
    "21641": {
      "op": "SWAP1"
    },
    "21642": {
      "op": "SWAP6"
    },
    "21643": {
      "op": "POP"
    },
    "21644": {
      "op": "SWAP4"
    },
    "21645": {
      "op": "POP"
    },
    "21646": {
      "op": "POP"
    },
    "21647": {
      "op": "POP"
    },
    "21648": {
      "op": "POP"
    },
    "21649": {
      "jump": "o",
      "op": "JUMP"
    },
    "21650": {
      "op": "JUMPDEST"
    },
    "21651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21653": {
      "op": "DUP1"
    },
    "21654": {
      "op": "DUP4"
    },
    "21655": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21657": {
      "op": "DUP5"
    },
    "21658": {
      "op": "ADD"
    },
    "21659": {
      "op": "SLT"
    },
    "21660": {
      "op": "PUSH2",
      "value": "0x54A4"
    },
    "21663": {
      "op": "JUMPI"
    },
    "21664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21666": {
      "op": "DUP1"
    },
    "21667": {
      "op": "REVERT"
    },
    "21668": {
      "op": "JUMPDEST"
    },
    "21669": {
      "op": "POP"
    },
    "21670": {
      "op": "DUP2"
    },
    "21671": {
      "op": "CALLDATALOAD"
    },
    "21672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21676": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21678": {
      "op": "SHL"
    },
    "21679": {
      "op": "SUB"
    },
    "21680": {
      "op": "DUP2"
    },
    "21681": {
      "op": "GT"
    },
    "21682": {
      "op": "ISZERO"
    },
    "21683": {
      "op": "PUSH2",
      "value": "0x54BB"
    },
    "21686": {
      "op": "JUMPI"
    },
    "21687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21689": {
      "op": "DUP1"
    },
    "21690": {
      "op": "REVERT"
    },
    "21691": {
      "op": "JUMPDEST"
    },
    "21692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21694": {
      "op": "DUP4"
    },
    "21695": {
      "op": "ADD"
    },
    "21696": {
      "op": "SWAP2"
    },
    "21697": {
      "op": "POP"
    },
    "21698": {
      "op": "DUP4"
    },
    "21699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21701": {
      "op": "DUP3"
    },
    "21702": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "21704": {
      "op": "SHL"
    },
    "21705": {
      "op": "DUP6"
    },
    "21706": {
      "op": "ADD"
    },
    "21707": {
      "op": "ADD"
    },
    "21708": {
      "op": "GT"
    },
    "21709": {
      "op": "ISZERO"
    },
    "21710": {
      "op": "PUSH2",
      "value": "0x5302"
    },
    "21713": {
      "op": "JUMPI"
    },
    "21714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21716": {
      "op": "DUP1"
    },
    "21717": {
      "op": "REVERT"
    },
    "21718": {
      "op": "JUMPDEST"
    },
    "21719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21721": {
      "op": "DUP1"
    },
    "21722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21724": {
      "op": "DUP1"
    },
    "21725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21727": {
      "op": "DUP1"
    },
    "21728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21730": {
      "op": "DUP1"
    },
    "21731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21733": {
      "op": "DUP1"
    },
    "21734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21736": {
      "op": "DUP12"
    },
    "21737": {
      "op": "DUP14"
    },
    "21738": {
      "op": "SUB"
    },
    "21739": {
      "op": "SLT"
    },
    "21740": {
      "op": "ISZERO"
    },
    "21741": {
      "op": "PUSH2",
      "value": "0x54F5"
    },
    "21744": {
      "op": "JUMPI"
    },
    "21745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21747": {
      "op": "DUP1"
    },
    "21748": {
      "op": "REVERT"
    },
    "21749": {
      "op": "JUMPDEST"
    },
    "21750": {
      "op": "DUP11"
    },
    "21751": {
      "op": "CALLDATALOAD"
    },
    "21752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21756": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21758": {
      "op": "SHL"
    },
    "21759": {
      "op": "SUB"
    },
    "21760": {
      "op": "DUP1"
    },
    "21761": {
      "op": "DUP3"
    },
    "21762": {
      "op": "GT"
    },
    "21763": {
      "op": "ISZERO"
    },
    "21764": {
      "op": "PUSH2",
      "value": "0x550C"
    },
    "21767": {
      "op": "JUMPI"
    },
    "21768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21770": {
      "op": "DUP1"
    },
    "21771": {
      "op": "REVERT"
    },
    "21772": {
      "op": "JUMPDEST"
    },
    "21773": {
      "op": "PUSH2",
      "value": "0x5518"
    },
    "21776": {
      "op": "DUP15"
    },
    "21777": {
      "op": "DUP4"
    },
    "21778": {
      "op": "DUP16"
    },
    "21779": {
      "op": "ADD"
    },
    "21780": {
      "op": "PUSH2",
      "value": "0x5492"
    },
    "21783": {
      "jump": "i",
      "op": "JUMP"
    },
    "21784": {
      "op": "JUMPDEST"
    },
    "21785": {
      "op": "SWAP1"
    },
    "21786": {
      "op": "SWAP13"
    },
    "21787": {
      "op": "POP"
    },
    "21788": {
      "op": "SWAP11"
    },
    "21789": {
      "op": "POP"
    },
    "21790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21792": {
      "op": "DUP14"
    },
    "21793": {
      "op": "ADD"
    },
    "21794": {
      "op": "CALLDATALOAD"
    },
    "21795": {
      "op": "SWAP2"
    },
    "21796": {
      "op": "POP"
    },
    "21797": {
      "op": "DUP1"
    },
    "21798": {
      "op": "DUP3"
    },
    "21799": {
      "op": "GT"
    },
    "21800": {
      "op": "ISZERO"
    },
    "21801": {
      "op": "PUSH2",
      "value": "0x5531"
    },
    "21804": {
      "op": "JUMPI"
    },
    "21805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21807": {
      "op": "DUP1"
    },
    "21808": {
      "op": "REVERT"
    },
    "21809": {
      "op": "JUMPDEST"
    },
    "21810": {
      "op": "PUSH2",
      "value": "0x553D"
    },
    "21813": {
      "op": "DUP15"
    },
    "21814": {
      "op": "DUP4"
    },
    "21815": {
      "op": "DUP16"
    },
    "21816": {
      "op": "ADD"
    },
    "21817": {
      "op": "PUSH2",
      "value": "0x5492"
    },
    "21820": {
      "jump": "i",
      "op": "JUMP"
    },
    "21821": {
      "op": "JUMPDEST"
    },
    "21822": {
      "op": "SWAP1"
    },
    "21823": {
      "op": "SWAP11"
    },
    "21824": {
      "op": "POP"
    },
    "21825": {
      "op": "SWAP9"
    },
    "21826": {
      "op": "POP"
    },
    "21827": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21829": {
      "op": "DUP14"
    },
    "21830": {
      "op": "ADD"
    },
    "21831": {
      "op": "CALLDATALOAD"
    },
    "21832": {
      "op": "SWAP2"
    },
    "21833": {
      "op": "POP"
    },
    "21834": {
      "op": "DUP1"
    },
    "21835": {
      "op": "DUP3"
    },
    "21836": {
      "op": "GT"
    },
    "21837": {
      "op": "ISZERO"
    },
    "21838": {
      "op": "PUSH2",
      "value": "0x5556"
    },
    "21841": {
      "op": "JUMPI"
    },
    "21842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21844": {
      "op": "DUP1"
    },
    "21845": {
      "op": "REVERT"
    },
    "21846": {
      "op": "JUMPDEST"
    },
    "21847": {
      "op": "PUSH2",
      "value": "0x5562"
    },
    "21850": {
      "op": "DUP15"
    },
    "21851": {
      "op": "DUP4"
    },
    "21852": {
      "op": "DUP16"
    },
    "21853": {
      "op": "ADD"
    },
    "21854": {
      "op": "PUSH2",
      "value": "0x5492"
    },
    "21857": {
      "jump": "i",
      "op": "JUMP"
    },
    "21858": {
      "op": "JUMPDEST"
    },
    "21859": {
      "op": "SWAP1"
    },
    "21860": {
      "op": "SWAP9"
    },
    "21861": {
      "op": "POP"
    },
    "21862": {
      "op": "SWAP7"
    },
    "21863": {
      "op": "POP"
    },
    "21864": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21866": {
      "op": "DUP14"
    },
    "21867": {
      "op": "ADD"
    },
    "21868": {
      "op": "CALLDATALOAD"
    },
    "21869": {
      "op": "SWAP2"
    },
    "21870": {
      "op": "POP"
    },
    "21871": {
      "op": "DUP1"
    },
    "21872": {
      "op": "DUP3"
    },
    "21873": {
      "op": "GT"
    },
    "21874": {
      "op": "ISZERO"
    },
    "21875": {
      "op": "PUSH2",
      "value": "0x557B"
    },
    "21878": {
      "op": "JUMPI"
    },
    "21879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21881": {
      "op": "DUP1"
    },
    "21882": {
      "op": "REVERT"
    },
    "21883": {
      "op": "JUMPDEST"
    },
    "21884": {
      "op": "PUSH2",
      "value": "0x5587"
    },
    "21887": {
      "op": "DUP15"
    },
    "21888": {
      "op": "DUP4"
    },
    "21889": {
      "op": "DUP16"
    },
    "21890": {
      "op": "ADD"
    },
    "21891": {
      "op": "PUSH2",
      "value": "0x5492"
    },
    "21894": {
      "jump": "i",
      "op": "JUMP"
    },
    "21895": {
      "op": "JUMPDEST"
    },
    "21896": {
      "op": "SWAP1"
    },
    "21897": {
      "op": "SWAP7"
    },
    "21898": {
      "op": "POP"
    },
    "21899": {
      "op": "SWAP5"
    },
    "21900": {
      "op": "POP"
    },
    "21901": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21903": {
      "op": "DUP14"
    },
    "21904": {
      "op": "ADD"
    },
    "21905": {
      "op": "CALLDATALOAD"
    },
    "21906": {
      "op": "SWAP2"
    },
    "21907": {
      "op": "POP"
    },
    "21908": {
      "op": "DUP1"
    },
    "21909": {
      "op": "DUP3"
    },
    "21910": {
      "op": "GT"
    },
    "21911": {
      "op": "ISZERO"
    },
    "21912": {
      "op": "PUSH2",
      "value": "0x55A0"
    },
    "21915": {
      "op": "JUMPI"
    },
    "21916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21918": {
      "op": "DUP1"
    },
    "21919": {
      "op": "REVERT"
    },
    "21920": {
      "op": "JUMPDEST"
    },
    "21921": {
      "op": "POP"
    },
    "21922": {
      "op": "PUSH2",
      "value": "0x55AD"
    },
    "21925": {
      "op": "DUP14"
    },
    "21926": {
      "op": "DUP3"
    },
    "21927": {
      "op": "DUP15"
    },
    "21928": {
      "op": "ADD"
    },
    "21929": {
      "op": "PUSH2",
      "value": "0x5492"
    },
    "21932": {
      "jump": "i",
      "op": "JUMP"
    },
    "21933": {
      "op": "JUMPDEST"
    },
    "21934": {
      "op": "SWAP2"
    },
    "21935": {
      "op": "POP"
    },
    "21936": {
      "op": "DUP1"
    },
    "21937": {
      "op": "SWAP4"
    },
    "21938": {
      "op": "POP"
    },
    "21939": {
      "op": "POP"
    },
    "21940": {
      "op": "DUP1"
    },
    "21941": {
      "op": "SWAP2"
    },
    "21942": {
      "op": "POP"
    },
    "21943": {
      "op": "POP"
    },
    "21944": {
      "op": "SWAP3"
    },
    "21945": {
      "op": "SWAP6"
    },
    "21946": {
      "op": "SWAP9"
    },
    "21947": {
      "op": "SWAP12"
    },
    "21948": {
      "op": "SWAP2"
    },
    "21949": {
      "op": "SWAP5"
    },
    "21950": {
      "op": "SWAP8"
    },
    "21951": {
      "op": "SWAP11"
    },
    "21952": {
      "op": "POP"
    },
    "21953": {
      "op": "SWAP3"
    },
    "21954": {
      "op": "SWAP6"
    },
    "21955": {
      "op": "SWAP9"
    },
    "21956": {
      "op": "POP"
    },
    "21957": {
      "jump": "o",
      "op": "JUMP"
    },
    "21958": {
      "op": "JUMPDEST"
    },
    "21959": {
      "op": "DUP1"
    },
    "21960": {
      "op": "CALLDATALOAD"
    },
    "21961": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "21963": {
      "op": "DUP2"
    },
    "21964": {
      "op": "AND"
    },
    "21965": {
      "op": "DUP2"
    },
    "21966": {
      "op": "EQ"
    },
    "21967": {
      "op": "PUSH2",
      "value": "0x4E0D"
    },
    "21970": {
      "op": "JUMPI"
    },
    "21971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21973": {
      "op": "DUP1"
    },
    "21974": {
      "op": "REVERT"
    },
    "21975": {
      "op": "JUMPDEST"
    },
    "21976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21978": {
      "op": "DUP1"
    },
    "21979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21981": {
      "op": "DUP1"
    },
    "21982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21984": {
      "op": "DUP1"
    },
    "21985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21987": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "21989": {
      "op": "DUP9"
    },
    "21990": {
      "op": "DUP11"
    },
    "21991": {
      "op": "SUB"
    },
    "21992": {
      "op": "SLT"
    },
    "21993": {
      "op": "ISZERO"
    },
    "21994": {
      "op": "PUSH2",
      "value": "0x55F2"
    },
    "21997": {
      "op": "JUMPI"
    },
    "21998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22000": {
      "op": "DUP1"
    },
    "22001": {
      "op": "REVERT"
    },
    "22002": {
      "op": "JUMPDEST"
    },
    "22003": {
      "op": "DUP8"
    },
    "22004": {
      "op": "CALLDATALOAD"
    },
    "22005": {
      "op": "PUSH2",
      "value": "0x55FD"
    },
    "22008": {
      "op": "DUP2"
    },
    "22009": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "22012": {
      "jump": "i",
      "op": "JUMP"
    },
    "22013": {
      "op": "JUMPDEST"
    },
    "22014": {
      "op": "SWAP7"
    },
    "22015": {
      "op": "POP"
    },
    "22016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22018": {
      "op": "DUP9"
    },
    "22019": {
      "op": "ADD"
    },
    "22020": {
      "op": "CALLDATALOAD"
    },
    "22021": {
      "op": "PUSH2",
      "value": "0x560D"
    },
    "22024": {
      "op": "DUP2"
    },
    "22025": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "22028": {
      "jump": "i",
      "op": "JUMP"
    },
    "22029": {
      "op": "JUMPDEST"
    },
    "22030": {
      "op": "SWAP6"
    },
    "22031": {
      "op": "POP"
    },
    "22032": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22034": {
      "op": "DUP9"
    },
    "22035": {
      "op": "ADD"
    },
    "22036": {
      "op": "CALLDATALOAD"
    },
    "22037": {
      "op": "SWAP5"
    },
    "22038": {
      "op": "POP"
    },
    "22039": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22041": {
      "op": "DUP9"
    },
    "22042": {
      "op": "ADD"
    },
    "22043": {
      "op": "CALLDATALOAD"
    },
    "22044": {
      "op": "SWAP4"
    },
    "22045": {
      "op": "POP"
    },
    "22046": {
      "op": "PUSH2",
      "value": "0x5629"
    },
    "22049": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "22051": {
      "op": "DUP10"
    },
    "22052": {
      "op": "ADD"
    },
    "22053": {
      "op": "PUSH2",
      "value": "0x55C6"
    },
    "22056": {
      "jump": "i",
      "op": "JUMP"
    },
    "22057": {
      "op": "JUMPDEST"
    },
    "22058": {
      "op": "SWAP3"
    },
    "22059": {
      "op": "POP"
    },
    "22060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "22062": {
      "op": "DUP9"
    },
    "22063": {
      "op": "ADD"
    },
    "22064": {
      "op": "CALLDATALOAD"
    },
    "22065": {
      "op": "SWAP2"
    },
    "22066": {
      "op": "POP"
    },
    "22067": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "22069": {
      "op": "DUP9"
    },
    "22070": {
      "op": "ADD"
    },
    "22071": {
      "op": "CALLDATALOAD"
    },
    "22072": {
      "op": "SWAP1"
    },
    "22073": {
      "op": "POP"
    },
    "22074": {
      "op": "SWAP3"
    },
    "22075": {
      "op": "SWAP6"
    },
    "22076": {
      "op": "SWAP9"
    },
    "22077": {
      "op": "SWAP2"
    },
    "22078": {
      "op": "SWAP5"
    },
    "22079": {
      "op": "SWAP8"
    },
    "22080": {
      "op": "POP"
    },
    "22081": {
      "op": "SWAP3"
    },
    "22082": {
      "op": "SWAP6"
    },
    "22083": {
      "op": "POP"
    },
    "22084": {
      "jump": "o",
      "op": "JUMP"
    },
    "22085": {
      "op": "JUMPDEST"
    },
    "22086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22088": {
      "op": "DUP1"
    },
    "22089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22091": {
      "op": "DUP4"
    },
    "22092": {
      "op": "DUP6"
    },
    "22093": {
      "op": "SUB"
    },
    "22094": {
      "op": "SLT"
    },
    "22095": {
      "op": "ISZERO"
    },
    "22096": {
      "op": "PUSH2",
      "value": "0x5658"
    },
    "22099": {
      "op": "JUMPI"
    },
    "22100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22102": {
      "op": "DUP1"
    },
    "22103": {
      "op": "REVERT"
    },
    "22104": {
      "op": "JUMPDEST"
    },
    "22105": {
      "op": "DUP3"
    },
    "22106": {
      "op": "CALLDATALOAD"
    },
    "22107": {
      "op": "PUSH2",
      "value": "0x5663"
    },
    "22110": {
      "op": "DUP2"
    },
    "22111": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "22114": {
      "jump": "i",
      "op": "JUMP"
    },
    "22115": {
      "op": "JUMPDEST"
    },
    "22116": {
      "op": "SWAP2"
    },
    "22117": {
      "op": "POP"
    },
    "22118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22120": {
      "op": "DUP4"
    },
    "22121": {
      "op": "ADD"
    },
    "22122": {
      "op": "CALLDATALOAD"
    },
    "22123": {
      "op": "PUSH2",
      "value": "0x5673"
    },
    "22126": {
      "op": "DUP2"
    },
    "22127": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "22130": {
      "jump": "i",
      "op": "JUMP"
    },
    "22131": {
      "op": "JUMPDEST"
    },
    "22132": {
      "op": "DUP1"
    },
    "22133": {
      "op": "SWAP2"
    },
    "22134": {
      "op": "POP"
    },
    "22135": {
      "op": "POP"
    },
    "22136": {
      "op": "SWAP3"
    },
    "22137": {
      "op": "POP"
    },
    "22138": {
      "op": "SWAP3"
    },
    "22139": {
      "op": "SWAP1"
    },
    "22140": {
      "op": "POP"
    },
    "22141": {
      "jump": "o",
      "op": "JUMP"
    },
    "22142": {
      "op": "JUMPDEST"
    },
    "22143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22145": {
      "op": "DUP2"
    },
    "22146": {
      "op": "DUP2"
    },
    "22147": {
      "op": "SHR"
    },
    "22148": {
      "op": "SWAP1"
    },
    "22149": {
      "op": "DUP3"
    },
    "22150": {
      "op": "AND"
    },
    "22151": {
      "op": "DUP1"
    },
    "22152": {
      "op": "PUSH2",
      "value": "0x5692"
    },
    "22155": {
      "op": "JUMPI"
    },
    "22156": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "22158": {
      "op": "DUP3"
    },
    "22159": {
      "op": "AND"
    },
    "22160": {
      "op": "SWAP2"
    },
    "22161": {
      "op": "POP"
    },
    "22162": {
      "op": "JUMPDEST"
    },
    "22163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22165": {
      "op": "DUP3"
    },
    "22166": {
      "op": "LT"
    },
    "22167": {
      "op": "DUP2"
    },
    "22168": {
      "op": "EQ"
    },
    "22169": {
      "op": "ISZERO"
    },
    "22170": {
      "op": "PUSH2",
      "value": "0x4F7B"
    },
    "22173": {
      "op": "JUMPI"
    },
    "22174": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "22179": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "22181": {
      "op": "SHL"
    },
    "22182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22184": {
      "op": "MSTORE"
    },
    "22185": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "22187": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "22189": {
      "op": "MSTORE"
    },
    "22190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "22192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22194": {
      "op": "REVERT"
    },
    "22195": {
      "op": "JUMPDEST"
    },
    "22196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22198": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "22200": {
      "op": "DUP3"
    },
    "22201": {
      "op": "DUP5"
    },
    "22202": {
      "op": "SUB"
    },
    "22203": {
      "op": "SLT"
    },
    "22204": {
      "op": "ISZERO"
    },
    "22205": {
      "op": "PUSH2",
      "value": "0x56C5"
    },
    "22208": {
      "op": "JUMPI"
    },
    "22209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22211": {
      "op": "DUP1"
    },
    "22212": {
      "op": "REVERT"
    },
    "22213": {
      "op": "JUMPDEST"
    },
    "22214": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22216": {
      "op": "MLOAD"
    },
    "22217": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "22219": {
      "op": "DUP2"
    },
    "22220": {
      "op": "ADD"
    },
    "22221": {
      "op": "DUP2"
    },
    "22222": {
      "op": "DUP2"
    },
    "22223": {
      "op": "LT"
    },
    "22224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22228": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22230": {
      "op": "SHL"
    },
    "22231": {
      "op": "SUB"
    },
    "22232": {
      "op": "DUP3"
    },
    "22233": {
      "op": "GT"
    },
    "22234": {
      "op": "OR"
    },
    "22235": {
      "op": "ISZERO"
    },
    "22236": {
      "op": "PUSH2",
      "value": "0x56E7"
    },
    "22239": {
      "op": "JUMPI"
    },
    "22240": {
      "op": "PUSH2",
      "value": "0x56E7"
    },
    "22243": {
      "op": "PUSH2",
      "value": "0x5037"
    },
    "22246": {
      "jump": "i",
      "op": "JUMP"
    },
    "22247": {
      "op": "JUMPDEST"
    },
    "22248": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22250": {
      "op": "MSTORE"
    },
    "22251": {
      "op": "DUP3"
    },
    "22252": {
      "op": "MLOAD"
    },
    "22253": {
      "op": "PUSH2",
      "value": "0x56F5"
    },
    "22256": {
      "op": "DUP2"
    },
    "22257": {
      "op": "PUSH2",
      "value": "0x4EBA"
    },
    "22260": {
      "jump": "i",
      "op": "JUMP"
    },
    "22261": {
      "op": "JUMPDEST"
    },
    "22262": {
      "op": "DUP2"
    },
    "22263": {
      "op": "MSTORE"
    },
    "22264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22266": {
      "op": "DUP4"
    },
    "22267": {
      "op": "ADD"
    },
    "22268": {
      "op": "MLOAD"
    },
    "22269": {
      "op": "PUSH2",
      "value": "0x5705"
    },
    "22272": {
      "op": "DUP2"
    },
    "22273": {
      "op": "PUSH2",
      "value": "0x4EBA"
    },
    "22276": {
      "jump": "i",
      "op": "JUMP"
    },
    "22277": {
      "op": "JUMPDEST"
    },
    "22278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22280": {
      "op": "DUP3"
    },
    "22281": {
      "op": "ADD"
    },
    "22282": {
      "op": "MSTORE"
    },
    "22283": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22285": {
      "op": "DUP4"
    },
    "22286": {
      "op": "ADD"
    },
    "22287": {
      "op": "MLOAD"
    },
    "22288": {
      "op": "PUSH2",
      "value": "0x5718"
    },
    "22291": {
      "op": "DUP2"
    },
    "22292": {
      "op": "PUSH2",
      "value": "0x4EBA"
    },
    "22295": {
      "jump": "i",
      "op": "JUMP"
    },
    "22296": {
      "op": "JUMPDEST"
    },
    "22297": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22299": {
      "op": "DUP3"
    },
    "22300": {
      "op": "ADD"
    },
    "22301": {
      "op": "MSTORE"
    },
    "22302": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22304": {
      "op": "DUP4"
    },
    "22305": {
      "op": "ADD"
    },
    "22306": {
      "op": "MLOAD"
    },
    "22307": {
      "op": "PUSH2",
      "value": "0x572B"
    },
    "22310": {
      "op": "DUP2"
    },
    "22311": {
      "op": "PUSH2",
      "value": "0x4EBA"
    },
    "22314": {
      "jump": "i",
      "op": "JUMP"
    },
    "22315": {
      "op": "JUMPDEST"
    },
    "22316": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22318": {
      "op": "DUP3"
    },
    "22319": {
      "op": "ADD"
    },
    "22320": {
      "op": "MSTORE"
    },
    "22321": {
      "op": "SWAP4"
    },
    "22322": {
      "op": "SWAP3"
    },
    "22323": {
      "op": "POP"
    },
    "22324": {
      "op": "POP"
    },
    "22325": {
      "op": "POP"
    },
    "22326": {
      "jump": "o",
      "op": "JUMP"
    },
    "22327": {
      "op": "JUMPDEST"
    },
    "22328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22332": {
      "op": "DUP3"
    },
    "22333": {
      "op": "DUP5"
    },
    "22334": {
      "op": "SUB"
    },
    "22335": {
      "op": "SLT"
    },
    "22336": {
      "op": "ISZERO"
    },
    "22337": {
      "op": "PUSH2",
      "value": "0x5749"
    },
    "22340": {
      "op": "JUMPI"
    },
    "22341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22343": {
      "op": "DUP1"
    },
    "22344": {
      "op": "REVERT"
    },
    "22345": {
      "op": "JUMPDEST"
    },
    "22346": {
      "op": "DUP2"
    },
    "22347": {
      "op": "MLOAD"
    },
    "22348": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "22351": {
      "op": "DUP2"
    },
    "22352": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "22355": {
      "jump": "i",
      "op": "JUMP"
    },
    "22356": {
      "op": "JUMPDEST"
    },
    "22357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22359": {
      "op": "DUP1"
    },
    "22360": {
      "op": "DUP3"
    },
    "22361": {
      "op": "MSTORE"
    },
    "22362": {
      "op": "DUP2"
    },
    "22363": {
      "op": "DUP2"
    },
    "22364": {
      "op": "ADD"
    },
    "22365": {
      "op": "MSTORE"
    },
    "22366": {
      "op": "PUSH32",
      "value": "0x455243323054656D706C6174653A204E4F54204445504C4F59455220524F4C45"
    },
    "22399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22401": {
      "op": "DUP3"
    },
    "22402": {
      "op": "ADD"
    },
    "22403": {
      "op": "MSTORE"
    },
    "22404": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22406": {
      "op": "ADD"
    },
    "22407": {
      "op": "SWAP1"
    },
    "22408": {
      "jump": "o",
      "op": "JUMP"
    },
    "22409": {
      "op": "JUMPDEST"
    },
    "22410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22412": {
      "op": "DUP1"
    },
    "22413": {
      "op": "DUP3"
    },
    "22414": {
      "op": "MSTORE"
    },
    "22415": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "22417": {
      "op": "SWAP1"
    },
    "22418": {
      "op": "DUP3"
    },
    "22419": {
      "op": "ADD"
    },
    "22420": {
      "op": "MSTORE"
    },
    "22421": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "22454": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22456": {
      "op": "DUP3"
    },
    "22457": {
      "op": "ADD"
    },
    "22458": {
      "op": "MSTORE"
    },
    "22459": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22461": {
      "op": "ADD"
    },
    "22462": {
      "op": "SWAP1"
    },
    "22463": {
      "jump": "o",
      "op": "JUMP"
    },
    "22464": {
      "op": "JUMPDEST"
    },
    "22465": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "22470": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "22472": {
      "op": "SHL"
    },
    "22473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22475": {
      "op": "MSTORE"
    },
    "22476": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "22478": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "22480": {
      "op": "MSTORE"
    },
    "22481": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "22483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22485": {
      "op": "REVERT"
    },
    "22486": {
      "op": "JUMPDEST"
    },
    "22487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22489": {
      "op": "DUP3"
    },
    "22490": {
      "op": "NOT"
    },
    "22491": {
      "op": "DUP3"
    },
    "22492": {
      "op": "GT"
    },
    "22493": {
      "op": "ISZERO"
    },
    "22494": {
      "op": "PUSH2",
      "value": "0x57E9"
    },
    "22497": {
      "op": "JUMPI"
    },
    "22498": {
      "op": "PUSH2",
      "value": "0x57E9"
    },
    "22501": {
      "op": "PUSH2",
      "value": "0x57C0"
    },
    "22504": {
      "jump": "i",
      "op": "JUMP"
    },
    "22505": {
      "op": "JUMPDEST"
    },
    "22506": {
      "op": "POP"
    },
    "22507": {
      "op": "ADD"
    },
    "22508": {
      "op": "SWAP1"
    },
    "22509": {
      "jump": "o",
      "op": "JUMP"
    },
    "22510": {
      "op": "JUMPDEST"
    },
    "22511": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "22516": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "22518": {
      "op": "SHL"
    },
    "22519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22521": {
      "op": "MSTORE"
    },
    "22522": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "22524": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "22526": {
      "op": "MSTORE"
    },
    "22527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "22529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22531": {
      "op": "REVERT"
    },
    "22532": {
      "op": "JUMPDEST"
    },
    "22533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22537": {
      "op": "DUP3"
    },
    "22538": {
      "op": "DUP5"
    },
    "22539": {
      "op": "SUB"
    },
    "22540": {
      "op": "SLT"
    },
    "22541": {
      "op": "ISZERO"
    },
    "22542": {
      "op": "PUSH2",
      "value": "0x5816"
    },
    "22545": {
      "op": "JUMPI"
    },
    "22546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22548": {
      "op": "DUP1"
    },
    "22549": {
      "op": "REVERT"
    },
    "22550": {
      "op": "JUMPDEST"
    },
    "22551": {
      "op": "POP"
    },
    "22552": {
      "op": "MLOAD"
    },
    "22553": {
      "op": "SWAP2"
    },
    "22554": {
      "op": "SWAP1"
    },
    "22555": {
      "op": "POP"
    },
    "22556": {
      "jump": "o",
      "op": "JUMP"
    },
    "22557": {
      "op": "JUMPDEST"
    },
    "22558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22560": {
      "op": "DUP2"
    },
    "22561": {
      "op": "MLOAD"
    },
    "22562": {
      "op": "DUP1"
    },
    "22563": {
      "op": "DUP5"
    },
    "22564": {
      "op": "MSTORE"
    },
    "22565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22567": {
      "op": "DUP1"
    },
    "22568": {
      "op": "DUP6"
    },
    "22569": {
      "op": "ADD"
    },
    "22570": {
      "op": "SWAP5"
    },
    "22571": {
      "op": "POP"
    },
    "22572": {
      "op": "DUP1"
    },
    "22573": {
      "op": "DUP5"
    },
    "22574": {
      "op": "ADD"
    },
    "22575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22577": {
      "op": "JUMPDEST"
    },
    "22578": {
      "op": "DUP4"
    },
    "22579": {
      "op": "DUP2"
    },
    "22580": {
      "op": "LT"
    },
    "22581": {
      "op": "ISZERO"
    },
    "22582": {
      "op": "PUSH2",
      "value": "0x5019"
    },
    "22585": {
      "op": "JUMPI"
    },
    "22586": {
      "op": "DUP2"
    },
    "22587": {
      "op": "MLOAD"
    },
    "22588": {
      "op": "DUP8"
    },
    "22589": {
      "op": "MSTORE"
    },
    "22590": {
      "op": "SWAP6"
    },
    "22591": {
      "op": "DUP3"
    },
    "22592": {
      "op": "ADD"
    },
    "22593": {
      "op": "SWAP6"
    },
    "22594": {
      "op": "SWAP1"
    },
    "22595": {
      "op": "DUP3"
    },
    "22596": {
      "op": "ADD"
    },
    "22597": {
      "op": "SWAP1"
    },
    "22598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22600": {
      "op": "ADD"
    },
    "22601": {
      "op": "PUSH2",
      "value": "0x5831"
    },
    "22604": {
      "op": "JUMP"
    },
    "22605": {
      "op": "JUMPDEST"
    },
    "22606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22608": {
      "op": "DUP2"
    },
    "22609": {
      "op": "DUP7"
    },
    "22610": {
      "op": "DUP3"
    },
    "22611": {
      "op": "JUMPDEST"
    },
    "22612": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "22614": {
      "op": "DUP2"
    },
    "22615": {
      "op": "LT"
    },
    "22616": {
      "op": "ISZERO"
    },
    "22617": {
      "op": "PUSH2",
      "value": "0x587B"
    },
    "22620": {
      "op": "JUMPI"
    },
    "22621": {
      "op": "DUP2"
    },
    "22622": {
      "op": "MLOAD"
    },
    "22623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "22629": {
      "op": "SHL"
    },
    "22630": {
      "op": "SUB"
    },
    "22631": {
      "op": "AND"
    },
    "22632": {
      "op": "DUP4"
    },
    "22633": {
      "op": "MSTORE"
    },
    "22634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22636": {
      "op": "SWAP3"
    },
    "22637": {
      "op": "DUP4"
    },
    "22638": {
      "op": "ADD"
    },
    "22639": {
      "op": "SWAP3"
    },
    "22640": {
      "op": "SWAP1"
    },
    "22641": {
      "op": "SWAP2"
    },
    "22642": {
      "op": "ADD"
    },
    "22643": {
      "op": "SWAP1"
    },
    "22644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22646": {
      "op": "ADD"
    },
    "22647": {
      "op": "PUSH2",
      "value": "0x5853"
    },
    "22650": {
      "op": "JUMP"
    },
    "22651": {
      "op": "JUMPDEST"
    },
    "22652": {
      "op": "POP"
    },
    "22653": {
      "op": "POP"
    },
    "22654": {
      "op": "POP"
    },
    "22655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "22657": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22659": {
      "op": "DUP4"
    },
    "22660": {
      "op": "ADD"
    },
    "22661": {
      "op": "MSTORE"
    },
    "22662": {
      "op": "PUSH2",
      "value": "0x5892"
    },
    "22665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "22667": {
      "op": "DUP4"
    },
    "22668": {
      "op": "ADD"
    },
    "22669": {
      "op": "DUP7"
    },
    "22670": {
      "op": "PUSH2",
      "value": "0x581D"
    },
    "22673": {
      "jump": "i",
      "op": "JUMP"
    },
    "22674": {
      "op": "JUMPDEST"
    },
    "22675": {
      "op": "DUP3"
    },
    "22676": {
      "op": "DUP2"
    },
    "22677": {
      "op": "SUB"
    },
    "22678": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22680": {
      "op": "DUP5"
    },
    "22681": {
      "op": "ADD"
    },
    "22682": {
      "op": "MSTORE"
    },
    "22683": {
      "op": "PUSH2",
      "value": "0x58A4"
    },
    "22686": {
      "op": "DUP2"
    },
    "22687": {
      "op": "DUP7"
    },
    "22688": {
      "op": "PUSH2",
      "value": "0x581D"
    },
    "22691": {
      "jump": "i",
      "op": "JUMP"
    },
    "22692": {
      "op": "JUMPDEST"
    },
    "22693": {
      "op": "SWAP1"
    },
    "22694": {
      "op": "POP"
    },
    "22695": {
      "op": "DUP3"
    },
    "22696": {
      "op": "DUP2"
    },
    "22697": {
      "op": "SUB"
    },
    "22698": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "22700": {
      "op": "DUP5"
    },
    "22701": {
      "op": "ADD"
    },
    "22702": {
      "op": "MSTORE"
    },
    "22703": {
      "op": "PUSH2",
      "value": "0x4CF6"
    },
    "22706": {
      "op": "DUP2"
    },
    "22707": {
      "op": "DUP6"
    },
    "22708": {
      "op": "PUSH2",
      "value": "0x4FE0"
    },
    "22711": {
      "jump": "i",
      "op": "JUMP"
    },
    "22712": {
      "op": "JUMPDEST"
    },
    "22713": {
      "op": "DUP4"
    },
    "22714": {
      "op": "DUP2"
    },
    "22715": {
      "op": "MSTORE"
    },
    "22716": {
      "op": "DUP2"
    },
    "22717": {
      "op": "DUP4"
    },
    "22718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22720": {
      "op": "DUP4"
    },
    "22721": {
      "op": "ADD"
    },
    "22722": {
      "op": "CALLDATACOPY"
    },
    "22723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22725": {
      "op": "SWAP2"
    },
    "22726": {
      "op": "ADD"
    },
    "22727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22729": {
      "op": "ADD"
    },
    "22730": {
      "op": "SWAP1"
    },
    "22731": {
      "op": "DUP2"
    },
    "22732": {
      "op": "MSTORE"
    },
    "22733": {
      "op": "SWAP3"
    },
    "22734": {
      "op": "SWAP2"
    },
    "22735": {
      "op": "POP"
    },
    "22736": {
      "op": "POP"
    },
    "22737": {
      "jump": "o",
      "op": "JUMP"
    },
    "22738": {
      "op": "JUMPDEST"
    },
    "22739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22741": {
      "op": "DUP4"
    },
    "22742": {
      "op": "MLOAD"
    },
    "22743": {
      "op": "PUSH2",
      "value": "0x58E4"
    },
    "22746": {
      "op": "DUP2"
    },
    "22747": {
      "op": "DUP5"
    },
    "22748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22750": {
      "op": "DUP9"
    },
    "22751": {
      "op": "ADD"
    },
    "22752": {
      "op": "PUSH2",
      "value": "0x4E2F"
    },
    "22755": {
      "jump": "i",
      "op": "JUMP"
    },
    "22756": {
      "op": "JUMPDEST"
    },
    "22757": {
      "op": "SWAP2"
    },
    "22758": {
      "op": "SWAP1"
    },
    "22759": {
      "op": "SWAP2"
    },
    "22760": {
      "op": "ADD"
    },
    "22761": {
      "op": "SWAP2"
    },
    "22762": {
      "op": "DUP3"
    },
    "22763": {
      "op": "MSTORE"
    },
    "22764": {
      "op": "POP"
    },
    "22765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22767": {
      "op": "ADD"
    },
    "22768": {
      "op": "SWAP2"
    },
    "22769": {
      "op": "SWAP1"
    },
    "22770": {
      "op": "POP"
    },
    "22771": {
      "jump": "o",
      "op": "JUMP"
    },
    "22772": {
      "op": "JUMPDEST"
    },
    "22773": {
      "op": "DUP2"
    },
    "22774": {
      "op": "DUP4"
    },
    "22775": {
      "op": "DUP3"
    },
    "22776": {
      "op": "CALLDATACOPY"
    },
    "22777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22779": {
      "op": "SWAP2"
    },
    "22780": {
      "op": "ADD"
    },
    "22781": {
      "op": "SWAP1"
    },
    "22782": {
      "op": "DUP2"
    },
    "22783": {
      "op": "MSTORE"
    },
    "22784": {
      "op": "SWAP2"
    },
    "22785": {
      "op": "SWAP1"
    },
    "22786": {
      "op": "POP"
    },
    "22787": {
      "jump": "o",
      "op": "JUMP"
    },
    "22788": {
      "op": "JUMPDEST"
    },
    "22789": {
      "op": "DUP2"
    },
    "22790": {
      "op": "DUP4"
    },
    "22791": {
      "op": "MSTORE"
    },
    "22792": {
      "op": "DUP2"
    },
    "22793": {
      "op": "DUP2"
    },
    "22794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22796": {
      "op": "DUP6"
    },
    "22797": {
      "op": "ADD"
    },
    "22798": {
      "op": "CALLDATACOPY"
    },
    "22799": {
      "op": "POP"
    },
    "22800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22802": {
      "op": "DUP3"
    },
    "22803": {
      "op": "DUP3"
    },
    "22804": {
      "op": "ADD"
    },
    "22805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22807": {
      "op": "SWAP1"
    },
    "22808": {
      "op": "DUP2"
    },
    "22809": {
      "op": "ADD"
    },
    "22810": {
      "op": "SWAP2"
    },
    "22811": {
      "op": "SWAP1"
    },
    "22812": {
      "op": "SWAP2"
    },
    "22813": {
      "op": "MSTORE"
    },
    "22814": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "22816": {
      "op": "SWAP1"
    },
    "22817": {
      "op": "SWAP2"
    },
    "22818": {
      "op": "ADD"
    },
    "22819": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "22821": {
      "op": "NOT"
    },
    "22822": {
      "op": "AND"
    },
    "22823": {
      "op": "SWAP1"
    },
    "22824": {
      "op": "SWAP2"
    },
    "22825": {
      "op": "ADD"
    },
    "22826": {
      "op": "ADD"
    },
    "22827": {
      "op": "SWAP1"
    },
    "22828": {
      "jump": "o",
      "op": "JUMP"
    },
    "22829": {
      "op": "JUMPDEST"
    },
    "22830": {
      "op": "DUP12"
    },
    "22831": {
      "op": "DUP2"
    },
    "22832": {
      "op": "MSTORE"
    },
    "22833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "22835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22837": {
      "op": "DUP3"
    },
    "22838": {
      "op": "ADD"
    },
    "22839": {
      "op": "MSTORE"
    },
    "22840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22842": {
      "op": "PUSH2",
      "value": "0x5947"
    },
    "22845": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "22847": {
      "op": "DUP4"
    },
    "22848": {
      "op": "ADD"
    },
    "22849": {
      "op": "DUP13"
    },
    "22850": {
      "op": "DUP15"
    },
    "22851": {
      "op": "PUSH2",
      "value": "0x5904"
    },
    "22854": {
      "jump": "i",
      "op": "JUMP"
    },
    "22855": {
      "op": "JUMPDEST"
    },
    "22856": {
      "op": "DUP3"
    },
    "22857": {
      "op": "DUP2"
    },
    "22858": {
      "op": "SUB"
    },
    "22859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22861": {
      "op": "DUP5"
    },
    "22862": {
      "op": "ADD"
    },
    "22863": {
      "op": "MSTORE"
    },
    "22864": {
      "op": "PUSH2",
      "value": "0x595A"
    },
    "22867": {
      "op": "DUP2"
    },
    "22868": {
      "op": "DUP12"
    },
    "22869": {
      "op": "DUP14"
    },
    "22870": {
      "op": "PUSH2",
      "value": "0x5904"
    },
    "22873": {
      "jump": "i",
      "op": "JUMP"
    },
    "22874": {
      "op": "JUMPDEST"
    },
    "22875": {
      "op": "SWAP1"
    },
    "22876": {
      "op": "POP"
    },
    "22877": {
      "op": "DUP3"
    },
    "22878": {
      "op": "DUP2"
    },
    "22879": {
      "op": "SUB"
    },
    "22880": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22882": {
      "op": "DUP5"
    },
    "22883": {
      "op": "ADD"
    },
    "22884": {
      "op": "MSTORE"
    },
    "22885": {
      "op": "PUSH2",
      "value": "0x596F"
    },
    "22888": {
      "op": "DUP2"
    },
    "22889": {
      "op": "DUP10"
    },
    "22890": {
      "op": "DUP12"
    },
    "22891": {
      "op": "PUSH2",
      "value": "0x5904"
    },
    "22894": {
      "jump": "i",
      "op": "JUMP"
    },
    "22895": {
      "op": "JUMPDEST"
    },
    "22896": {
      "op": "SWAP1"
    },
    "22897": {
      "op": "POP"
    },
    "22898": {
      "op": "DUP3"
    },
    "22899": {
      "op": "DUP2"
    },
    "22900": {
      "op": "SUB"
    },
    "22901": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "22903": {
      "op": "DUP5"
    },
    "22904": {
      "op": "ADD"
    },
    "22905": {
      "op": "MSTORE"
    },
    "22906": {
      "op": "PUSH2",
      "value": "0x5984"
    },
    "22909": {
      "op": "DUP2"
    },
    "22910": {
      "op": "DUP8"
    },
    "22911": {
      "op": "DUP10"
    },
    "22912": {
      "op": "PUSH2",
      "value": "0x5904"
    },
    "22915": {
      "jump": "i",
      "op": "JUMP"
    },
    "22916": {
      "op": "JUMPDEST"
    },
    "22917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "22919": {
      "op": "DUP5"
    },
    "22920": {
      "op": "ADD"
    },
    "22921": {
      "op": "SWAP6"
    },
    "22922": {
      "op": "SWAP1"
    },
    "22923": {
      "op": "SWAP6"
    },
    "22924": {
      "op": "MSTORE"
    },
    "22925": {
      "op": "POP"
    },
    "22926": {
      "op": "POP"
    },
    "22927": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "22929": {
      "op": "ADD"
    },
    "22930": {
      "op": "MSTORE"
    },
    "22931": {
      "op": "SWAP10"
    },
    "22932": {
      "op": "SWAP9"
    },
    "22933": {
      "op": "POP"
    },
    "22934": {
      "op": "POP"
    },
    "22935": {
      "op": "POP"
    },
    "22936": {
      "op": "POP"
    },
    "22937": {
      "op": "POP"
    },
    "22938": {
      "op": "POP"
    },
    "22939": {
      "op": "POP"
    },
    "22940": {
      "op": "POP"
    },
    "22941": {
      "op": "POP"
    },
    "22942": {
      "jump": "o",
      "op": "JUMP"
    },
    "22943": {
      "op": "JUMPDEST"
    },
    "22944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "22950": {
      "op": "SHL"
    },
    "22951": {
      "op": "SUB"
    },
    "22952": {
      "op": "DUP5"
    },
    "22953": {
      "op": "AND"
    },
    "22954": {
      "op": "DUP2"
    },
    "22955": {
      "op": "MSTORE"
    },
    "22956": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22960": {
      "op": "DUP3"
    },
    "22961": {
      "op": "ADD"
    },
    "22962": {
      "op": "DUP2"
    },
    "22963": {
      "op": "SWAP1"
    },
    "22964": {
      "op": "MSTORE"
    },
    "22965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22967": {
      "op": "SWAP1"
    },
    "22968": {
      "op": "PUSH2",
      "value": "0x59C3"
    },
    "22971": {
      "op": "SWAP1"
    },
    "22972": {
      "op": "DUP4"
    },
    "22973": {
      "op": "ADD"
    },
    "22974": {
      "op": "DUP6"
    },
    "22975": {
      "op": "PUSH2",
      "value": "0x4FE0"
    },
    "22978": {
      "jump": "i",
      "op": "JUMP"
    },
    "22979": {
      "op": "JUMPDEST"
    },
    "22980": {
      "op": "DUP3"
    },
    "22981": {
      "op": "DUP2"
    },
    "22982": {
      "op": "SUB"
    },
    "22983": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22985": {
      "op": "DUP5"
    },
    "22986": {
      "op": "ADD"
    },
    "22987": {
      "op": "MSTORE"
    },
    "22988": {
      "op": "PUSH2",
      "value": "0x59D5"
    },
    "22991": {
      "op": "DUP2"
    },
    "22992": {
      "op": "DUP6"
    },
    "22993": {
      "op": "PUSH2",
      "value": "0x581D"
    },
    "22996": {
      "jump": "i",
      "op": "JUMP"
    },
    "22997": {
      "op": "JUMPDEST"
    },
    "22998": {
      "op": "SWAP7"
    },
    "22999": {
      "op": "SWAP6"
    },
    "23000": {
      "op": "POP"
    },
    "23001": {
      "op": "POP"
    },
    "23002": {
      "op": "POP"
    },
    "23003": {
      "op": "POP"
    },
    "23004": {
      "op": "POP"
    },
    "23005": {
      "op": "POP"
    },
    "23006": {
      "jump": "o",
      "op": "JUMP"
    },
    "23007": {
      "op": "JUMPDEST"
    },
    "23008": {
      "op": "DUP4"
    },
    "23009": {
      "op": "DUP2"
    },
    "23010": {
      "op": "MSTORE"
    },
    "23011": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "23013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23015": {
      "op": "DUP3"
    },
    "23016": {
      "op": "ADD"
    },
    "23017": {
      "op": "MSTORE"
    },
    "23018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23020": {
      "op": "PUSH2",
      "value": "0x59F9"
    },
    "23023": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "23025": {
      "op": "DUP4"
    },
    "23026": {
      "op": "ADD"
    },
    "23027": {
      "op": "DUP5"
    },
    "23028": {
      "op": "DUP7"
    },
    "23029": {
      "op": "PUSH2",
      "value": "0x5904"
    },
    "23032": {
      "jump": "i",
      "op": "JUMP"
    },
    "23033": {
      "op": "JUMPDEST"
    },
    "23034": {
      "op": "SWAP6"
    },
    "23035": {
      "op": "SWAP5"
    },
    "23036": {
      "op": "POP"
    },
    "23037": {
      "op": "POP"
    },
    "23038": {
      "op": "POP"
    },
    "23039": {
      "op": "POP"
    },
    "23040": {
      "op": "POP"
    },
    "23041": {
      "jump": "o",
      "op": "JUMP"
    },
    "23042": {
      "op": "JUMPDEST"
    },
    "23043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23049": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "23051": {
      "op": "SHL"
    },
    "23052": {
      "op": "SUB"
    },
    "23053": {
      "op": "DUP4"
    },
    "23054": {
      "op": "GT"
    },
    "23055": {
      "op": "ISZERO"
    },
    "23056": {
      "op": "PUSH2",
      "value": "0x5A1B"
    },
    "23059": {
      "op": "JUMPI"
    },
    "23060": {
      "op": "PUSH2",
      "value": "0x5A1B"
    },
    "23063": {
      "op": "PUSH2",
      "value": "0x5037"
    },
    "23066": {
      "jump": "i",
      "op": "JUMP"
    },
    "23067": {
      "op": "JUMPDEST"
    },
    "23068": {
      "op": "PUSH2",
      "value": "0x5A2E"
    },
    "23071": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "23073": {
      "op": "DUP5"
    },
    "23074": {
      "op": "ADD"
    },
    "23075": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "23077": {
      "op": "NOT"
    },
    "23078": {
      "op": "AND"
    },
    "23079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23081": {
      "op": "ADD"
    },
    "23082": {
      "op": "PUSH2",
      "value": "0x504D"
    },
    "23085": {
      "jump": "i",
      "op": "JUMP"
    },
    "23086": {
      "op": "JUMPDEST"
    },
    "23087": {
      "op": "SWAP1"
    },
    "23088": {
      "op": "POP"
    },
    "23089": {
      "op": "DUP3"
    },
    "23090": {
      "op": "DUP2"
    },
    "23091": {
      "op": "MSTORE"
    },
    "23092": {
      "op": "DUP4"
    },
    "23093": {
      "op": "DUP4"
    },
    "23094": {
      "op": "DUP4"
    },
    "23095": {
      "op": "ADD"
    },
    "23096": {
      "op": "GT"
    },
    "23097": {
      "op": "ISZERO"
    },
    "23098": {
      "op": "PUSH2",
      "value": "0x5A42"
    },
    "23101": {
      "op": "JUMPI"
    },
    "23102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23104": {
      "op": "DUP1"
    },
    "23105": {
      "op": "REVERT"
    },
    "23106": {
      "op": "JUMPDEST"
    },
    "23107": {
      "op": "DUP3"
    },
    "23108": {
      "op": "DUP3"
    },
    "23109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23111": {
      "op": "DUP4"
    },
    "23112": {
      "op": "ADD"
    },
    "23113": {
      "op": "CALLDATACOPY"
    },
    "23114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23118": {
      "op": "DUP5"
    },
    "23119": {
      "op": "DUP4"
    },
    "23120": {
      "op": "ADD"
    },
    "23121": {
      "op": "ADD"
    },
    "23122": {
      "op": "MSTORE"
    },
    "23123": {
      "op": "SWAP4"
    },
    "23124": {
      "op": "SWAP3"
    },
    "23125": {
      "op": "POP"
    },
    "23126": {
      "op": "POP"
    },
    "23127": {
      "op": "POP"
    },
    "23128": {
      "jump": "o",
      "op": "JUMP"
    },
    "23129": {
      "op": "JUMPDEST"
    },
    "23130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23132": {
      "op": "PUSH2",
      "value": "0x5A67"
    },
    "23135": {
      "op": "PUSH2",
      "value": "0x50C1"
    },
    "23138": {
      "op": "DUP5"
    },
    "23139": {
      "op": "PUSH2",
      "value": "0x507D"
    },
    "23142": {
      "jump": "i",
      "op": "JUMP"
    },
    "23143": {
      "op": "JUMPDEST"
    },
    "23144": {
      "op": "DUP1"
    },
    "23145": {
      "op": "DUP5"
    },
    "23146": {
      "op": "DUP3"
    },
    "23147": {
      "op": "MSTORE"
    },
    "23148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23150": {
      "op": "DUP1"
    },
    "23151": {
      "op": "DUP4"
    },
    "23152": {
      "op": "ADD"
    },
    "23153": {
      "op": "SWAP3"
    },
    "23154": {
      "op": "POP"
    },
    "23155": {
      "op": "DUP6"
    },
    "23156": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "23158": {
      "op": "SHL"
    },
    "23159": {
      "op": "DUP6"
    },
    "23160": {
      "op": "ADD"
    },
    "23161": {
      "op": "CALLDATASIZE"
    },
    "23162": {
      "op": "DUP2"
    },
    "23163": {
      "op": "GT"
    },
    "23164": {
      "op": "ISZERO"
    },
    "23165": {
      "op": "PUSH2",
      "value": "0x5A85"
    },
    "23168": {
      "op": "JUMPI"
    },
    "23169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23171": {
      "op": "DUP1"
    },
    "23172": {
      "op": "REVERT"
    },
    "23173": {
      "op": "JUMPDEST"
    },
    "23174": {
      "op": "DUP6"
    },
    "23175": {
      "op": "JUMPDEST"
    },
    "23176": {
      "op": "DUP2"
    },
    "23177": {
      "op": "DUP2"
    },
    "23178": {
      "op": "LT"
    },
    "23179": {
      "op": "ISZERO"
    },
    "23180": {
      "op": "PUSH2",
      "value": "0x5AD4"
    },
    "23183": {
      "op": "JUMPI"
    },
    "23184": {
      "op": "DUP1"
    },
    "23185": {
      "op": "CALLDATALOAD"
    },
    "23186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23190": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "23192": {
      "op": "SHL"
    },
    "23193": {
      "op": "SUB"
    },
    "23194": {
      "op": "DUP2"
    },
    "23195": {
      "op": "GT"
    },
    "23196": {
      "op": "ISZERO"
    },
    "23197": {
      "op": "PUSH2",
      "value": "0x5AA6"
    },
    "23200": {
      "op": "JUMPI"
    },
    "23201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23203": {
      "op": "DUP1"
    },
    "23204": {
      "op": "DUP2"
    },
    "23205": {
      "op": "REVERT"
    },
    "23206": {
      "op": "JUMPDEST"
    },
    "23207": {
      "op": "DUP8"
    },
    "23208": {
      "op": "ADD"
    },
    "23209": {
      "op": "CALLDATASIZE"
    },
    "23210": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "23212": {
      "op": "DUP3"
    },
    "23213": {
      "op": "ADD"
    },
    "23214": {
      "op": "SLT"
    },
    "23215": {
      "op": "PUSH2",
      "value": "0x5AB8"
    },
    "23218": {
      "op": "JUMPI"
    },
    "23219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23221": {
      "op": "DUP1"
    },
    "23222": {
      "op": "DUP2"
    },
    "23223": {
      "op": "REVERT"
    },
    "23224": {
      "op": "JUMPDEST"
    },
    "23225": {
      "op": "PUSH2",
      "value": "0x5AC6"
    },
    "23228": {
      "op": "CALLDATASIZE"
    },
    "23229": {
      "op": "DUP3"
    },
    "23230": {
      "op": "CALLDATALOAD"
    },
    "23231": {
      "op": "DUP7"
    },
    "23232": {
      "op": "DUP5"
    },
    "23233": {
      "op": "ADD"
    },
    "23234": {
      "op": "PUSH2",
      "value": "0x5A02"
    },
    "23237": {
      "jump": "i",
      "op": "JUMP"
    },
    "23238": {
      "op": "JUMPDEST"
    },
    "23239": {
      "op": "DUP7"
    },
    "23240": {
      "op": "MSTORE"
    },
    "23241": {
      "op": "POP"
    },
    "23242": {
      "op": "SWAP4"
    },
    "23243": {
      "op": "DUP3"
    },
    "23244": {
      "op": "ADD"
    },
    "23245": {
      "op": "SWAP4"
    },
    "23246": {
      "op": "DUP3"
    },
    "23247": {
      "op": "ADD"
    },
    "23248": {
      "op": "PUSH2",
      "value": "0x5A87"
    },
    "23251": {
      "op": "JUMP"
    },
    "23252": {
      "op": "JUMPDEST"
    },
    "23253": {
      "op": "POP"
    },
    "23254": {
      "op": "SWAP2"
    },
    "23255": {
      "op": "SWAP7"
    },
    "23256": {
      "op": "SWAP6"
    },
    "23257": {
      "op": "POP"
    },
    "23258": {
      "op": "POP"
    },
    "23259": {
      "op": "POP"
    },
    "23260": {
      "op": "POP"
    },
    "23261": {
      "op": "POP"
    },
    "23262": {
      "op": "POP"
    },
    "23263": {
      "jump": "o",
      "op": "JUMP"
    },
    "23264": {
      "op": "JUMPDEST"
    },
    "23265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23267": {
      "op": "PUSH2",
      "value": "0x5AEE"
    },
    "23270": {
      "op": "PUSH2",
      "value": "0x50C1"
    },
    "23273": {
      "op": "DUP5"
    },
    "23274": {
      "op": "PUSH2",
      "value": "0x507D"
    },
    "23277": {
      "jump": "i",
      "op": "JUMP"
    },
    "23278": {
      "op": "JUMPDEST"
    },
    "23279": {
      "op": "DUP1"
    },
    "23280": {
      "op": "DUP5"
    },
    "23281": {
      "op": "DUP3"
    },
    "23282": {
      "op": "MSTORE"
    },
    "23283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23285": {
      "op": "DUP1"
    },
    "23286": {
      "op": "DUP4"
    },
    "23287": {
      "op": "ADD"
    },
    "23288": {
      "op": "SWAP3"
    },
    "23289": {
      "op": "POP"
    },
    "23290": {
      "op": "DUP6"
    },
    "23291": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "23293": {
      "op": "SHL"
    },
    "23294": {
      "op": "DUP6"
    },
    "23295": {
      "op": "ADD"
    },
    "23296": {
      "op": "CALLDATASIZE"
    },
    "23297": {
      "op": "DUP2"
    },
    "23298": {
      "op": "GT"
    },
    "23299": {
      "op": "ISZERO"
    },
    "23300": {
      "op": "PUSH2",
      "value": "0x5B0C"
    },
    "23303": {
      "op": "JUMPI"
    },
    "23304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23306": {
      "op": "DUP1"
    },
    "23307": {
      "op": "REVERT"
    },
    "23308": {
      "op": "JUMPDEST"
    },
    "23309": {
      "op": "DUP6"
    },
    "23310": {
      "op": "JUMPDEST"
    },
    "23311": {
      "op": "DUP2"
    },
    "23312": {
      "op": "DUP2"
    },
    "23313": {
      "op": "LT"
    },
    "23314": {
      "op": "ISZERO"
    },
    "23315": {
      "op": "PUSH2",
      "value": "0x5AD4"
    },
    "23318": {
      "op": "JUMPI"
    },
    "23319": {
      "op": "DUP1"
    },
    "23320": {
      "op": "CALLDATALOAD"
    },
    "23321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23325": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "23327": {
      "op": "SHL"
    },
    "23328": {
      "op": "SUB"
    },
    "23329": {
      "op": "DUP2"
    },
    "23330": {
      "op": "GT"
    },
    "23331": {
      "op": "ISZERO"
    },
    "23332": {
      "op": "PUSH2",
      "value": "0x5B2D"
    },
    "23335": {
      "op": "JUMPI"
    },
    "23336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23338": {
      "op": "DUP1"
    },
    "23339": {
      "op": "DUP2"
    },
    "23340": {
      "op": "REVERT"
    },
    "23341": {
      "op": "JUMPDEST"
    },
    "23342": {
      "op": "DUP8"
    },
    "23343": {
      "op": "ADD"
    },
    "23344": {
      "op": "CALLDATASIZE"
    },
    "23345": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "23347": {
      "op": "DUP3"
    },
    "23348": {
      "op": "ADD"
    },
    "23349": {
      "op": "SLT"
    },
    "23350": {
      "op": "PUSH2",
      "value": "0x5B3F"
    },
    "23353": {
      "op": "JUMPI"
    },
    "23354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23356": {
      "op": "DUP1"
    },
    "23357": {
      "op": "DUP2"
    },
    "23358": {
      "op": "REVERT"
    },
    "23359": {
      "op": "JUMPDEST"
    },
    "23360": {
      "op": "PUSH2",
      "value": "0x5B4D"
    },
    "23363": {
      "op": "CALLDATASIZE"
    },
    "23364": {
      "op": "DUP3"
    },
    "23365": {
      "op": "CALLDATALOAD"
    },
    "23366": {
      "op": "DUP7"
    },
    "23367": {
      "op": "DUP5"
    },
    "23368": {
      "op": "ADD"
    },
    "23369": {
      "op": "PUSH2",
      "value": "0x5A02"
    },
    "23372": {
      "jump": "i",
      "op": "JUMP"
    },
    "23373": {
      "op": "JUMPDEST"
    },
    "23374": {
      "op": "DUP7"
    },
    "23375": {
      "op": "MSTORE"
    },
    "23376": {
      "op": "POP"
    },
    "23377": {
      "op": "SWAP4"
    },
    "23378": {
      "op": "DUP3"
    },
    "23379": {
      "op": "ADD"
    },
    "23380": {
      "op": "SWAP4"
    },
    "23381": {
      "op": "DUP3"
    },
    "23382": {
      "op": "ADD"
    },
    "23383": {
      "op": "PUSH2",
      "value": "0x5B0E"
    },
    "23386": {
      "op": "JUMP"
    },
    "23387": {
      "op": "JUMPDEST"
    },
    "23388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23392": {
      "op": "NOT"
    },
    "23393": {
      "op": "DUP3"
    },
    "23394": {
      "op": "EQ"
    },
    "23395": {
      "op": "ISZERO"
    },
    "23396": {
      "op": "PUSH2",
      "value": "0x5B6F"
    },
    "23399": {
      "op": "JUMPI"
    },
    "23400": {
      "op": "PUSH2",
      "value": "0x5B6F"
    },
    "23403": {
      "op": "PUSH2",
      "value": "0x57C0"
    },
    "23406": {
      "jump": "i",
      "op": "JUMP"
    },
    "23407": {
      "op": "JUMPDEST"
    },
    "23408": {
      "op": "POP"
    },
    "23409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23411": {
      "op": "ADD"
    },
    "23412": {
      "op": "SWAP1"
    },
    "23413": {
      "jump": "o",
      "op": "JUMP"
    },
    "23414": {
      "op": "JUMPDEST"
    },
    "23415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23417": {
      "op": "DUP1"
    },
    "23418": {
      "op": "DUP4"
    },
    "23419": {
      "op": "CALLDATALOAD"
    },
    "23420": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "23422": {
      "op": "NOT"
    },
    "23423": {
      "op": "DUP5"
    },
    "23424": {
      "op": "CALLDATASIZE"
    },
    "23425": {
      "op": "SUB"
    },
    "23426": {
      "op": "ADD"
    },
    "23427": {
      "op": "DUP2"
    },
    "23428": {
      "op": "SLT"
    },
    "23429": {
      "op": "PUSH2",
      "value": "0x5B8D"
    },
    "23432": {
      "op": "JUMPI"
    },
    "23433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23435": {
      "op": "DUP1"
    },
    "23436": {
      "op": "REVERT"
    },
    "23437": {
      "op": "JUMPDEST"
    },
    "23438": {
      "op": "DUP4"
    },
    "23439": {
      "op": "ADD"
    },
    "23440": {
      "op": "DUP1"
    },
    "23441": {
      "op": "CALLDATALOAD"
    },
    "23442": {
      "op": "SWAP2"
    },
    "23443": {
      "op": "POP"
    },
    "23444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23448": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "23450": {
      "op": "SHL"
    },
    "23451": {
      "op": "SUB"
    },
    "23452": {
      "op": "DUP3"
    },
    "23453": {
      "op": "GT"
    },
    "23454": {
      "op": "ISZERO"
    },
    "23455": {
      "op": "PUSH2",
      "value": "0x5BA7"
    },
    "23458": {
      "op": "JUMPI"
    },
    "23459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23461": {
      "op": "DUP1"
    },
    "23462": {
      "op": "REVERT"
    },
    "23463": {
      "op": "JUMPDEST"
    },
    "23464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23466": {
      "op": "ADD"
    },
    "23467": {
      "op": "SWAP2"
    },
    "23468": {
      "op": "POP"
    },
    "23469": {
      "op": "CALLDATASIZE"
    },
    "23470": {
      "op": "DUP2"
    },
    "23471": {
      "op": "SWAP1"
    },
    "23472": {
      "op": "SUB"
    },
    "23473": {
      "op": "DUP3"
    },
    "23474": {
      "op": "SGT"
    },
    "23475": {
      "op": "ISZERO"
    },
    "23476": {
      "op": "PUSH2",
      "value": "0x5302"
    },
    "23479": {
      "op": "JUMPI"
    },
    "23480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23482": {
      "op": "DUP1"
    },
    "23483": {
      "op": "REVERT"
    },
    "23484": {
      "op": "JUMPDEST"
    },
    "23485": {
      "op": "DUP6"
    },
    "23486": {
      "op": "DUP8"
    },
    "23487": {
      "op": "DUP3"
    },
    "23488": {
      "op": "CALLDATACOPY"
    },
    "23489": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "23502": {
      "op": "NOT"
    },
    "23503": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "23505": {
      "op": "SWAP6"
    },
    "23506": {
      "op": "DUP7"
    },
    "23507": {
      "op": "SHL"
    },
    "23508": {
      "op": "DUP2"
    },
    "23509": {
      "op": "AND"
    },
    "23510": {
      "op": "SWAP7"
    },
    "23511": {
      "op": "SWAP1"
    },
    "23512": {
      "op": "SWAP2"
    },
    "23513": {
      "op": "ADD"
    },
    "23514": {
      "op": "SWAP6"
    },
    "23515": {
      "op": "DUP7"
    },
    "23516": {
      "op": "MSTORE"
    },
    "23517": {
      "op": "SWAP3"
    },
    "23518": {
      "op": "SWAP1"
    },
    "23519": {
      "op": "SWAP4"
    },
    "23520": {
      "op": "SHL"
    },
    "23521": {
      "op": "SWAP1"
    },
    "23522": {
      "op": "SWAP2"
    },
    "23523": {
      "op": "AND"
    },
    "23524": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "23526": {
      "op": "DUP5"
    },
    "23527": {
      "op": "ADD"
    },
    "23528": {
      "op": "MSTORE"
    },
    "23529": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "23531": {
      "op": "DUP4"
    },
    "23532": {
      "op": "ADD"
    },
    "23533": {
      "op": "MSTORE"
    },
    "23534": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "23536": {
      "op": "DUP3"
    },
    "23537": {
      "op": "ADD"
    },
    "23538": {
      "op": "MSTORE"
    },
    "23539": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "23541": {
      "op": "ADD"
    },
    "23542": {
      "op": "SWAP2"
    },
    "23543": {
      "op": "SWAP1"
    },
    "23544": {
      "op": "POP"
    },
    "23545": {
      "jump": "o",
      "op": "JUMP"
    },
    "23546": {
      "op": "JUMPDEST"
    },
    "23547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23551": {
      "op": "DUP3"
    },
    "23552": {
      "op": "DUP5"
    },
    "23553": {
      "op": "SUB"
    },
    "23554": {
      "op": "SLT"
    },
    "23555": {
      "op": "ISZERO"
    },
    "23556": {
      "op": "PUSH2",
      "value": "0x5C0C"
    },
    "23559": {
      "op": "JUMPI"
    },
    "23560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23562": {
      "op": "DUP1"
    },
    "23563": {
      "op": "REVERT"
    },
    "23564": {
      "op": "JUMPDEST"
    },
    "23565": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "23568": {
      "op": "DUP3"
    },
    "23569": {
      "op": "PUSH2",
      "value": "0x55C6"
    },
    "23572": {
      "jump": "i",
      "op": "JUMP"
    },
    "23573": {
      "op": "JUMPDEST"
    },
    "23574": {
      "op": "DUP8"
    },
    "23575": {
      "op": "DUP2"
    },
    "23576": {
      "op": "MSTORE"
    },
    "23577": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "23579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23581": {
      "op": "DUP3"
    },
    "23582": {
      "op": "ADD"
    },
    "23583": {
      "op": "MSTORE"
    },
    "23584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23586": {
      "op": "PUSH2",
      "value": "0x5C2F"
    },
    "23589": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "23591": {
      "op": "DUP4"
    },
    "23592": {
      "op": "ADD"
    },
    "23593": {
      "op": "DUP9"
    },
    "23594": {
      "op": "DUP11"
    },
    "23595": {
      "op": "PUSH2",
      "value": "0x5904"
    },
    "23598": {
      "jump": "i",
      "op": "JUMP"
    },
    "23599": {
      "op": "JUMPDEST"
    },
    "23600": {
      "op": "SWAP1"
    },
    "23601": {
      "op": "POP"
    },
    "23602": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "23604": {
      "op": "DUP7"
    },
    "23605": {
      "op": "AND"
    },
    "23606": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "23608": {
      "op": "DUP4"
    },
    "23609": {
      "op": "ADD"
    },
    "23610": {
      "op": "MSTORE"
    },
    "23611": {
      "op": "DUP5"
    },
    "23612": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "23614": {
      "op": "DUP4"
    },
    "23615": {
      "op": "ADD"
    },
    "23616": {
      "op": "MSTORE"
    },
    "23617": {
      "op": "DUP4"
    },
    "23618": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "23620": {
      "op": "DUP4"
    },
    "23621": {
      "op": "ADD"
    },
    "23622": {
      "op": "MSTORE"
    },
    "23623": {
      "op": "DUP3"
    },
    "23624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "23626": {
      "op": "DUP4"
    },
    "23627": {
      "op": "ADD"
    },
    "23628": {
      "op": "MSTORE"
    },
    "23629": {
      "op": "SWAP9"
    },
    "23630": {
      "op": "SWAP8"
    },
    "23631": {
      "op": "POP"
    },
    "23632": {
      "op": "POP"
    },
    "23633": {
      "op": "POP"
    },
    "23634": {
      "op": "POP"
    },
    "23635": {
      "op": "POP"
    },
    "23636": {
      "op": "POP"
    },
    "23637": {
      "op": "POP"
    },
    "23638": {
      "op": "POP"
    },
    "23639": {
      "jump": "o",
      "op": "JUMP"
    },
    "23640": {
      "op": "JUMPDEST"
    },
    "23641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23643": {
      "op": "DUP3"
    },
    "23644": {
      "op": "DUP3"
    },
    "23645": {
      "op": "LT"
    },
    "23646": {
      "op": "ISZERO"
    },
    "23647": {
      "op": "PUSH2",
      "value": "0x5C6A"
    },
    "23650": {
      "op": "JUMPI"
    },
    "23651": {
      "op": "PUSH2",
      "value": "0x5C6A"
    },
    "23654": {
      "op": "PUSH2",
      "value": "0x57C0"
    },
    "23657": {
      "jump": "i",
      "op": "JUMP"
    },
    "23658": {
      "op": "JUMPDEST"
    },
    "23659": {
      "op": "POP"
    },
    "23660": {
      "op": "SUB"
    },
    "23661": {
      "op": "SWAP1"
    },
    "23662": {
      "jump": "o",
      "op": "JUMP"
    },
    "23663": {
      "op": "JUMPDEST"
    },
    "23664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23666": {
      "op": "DUP1"
    },
    "23667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23669": {
      "op": "DUP1"
    },
    "23670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23672": {
      "op": "DUP1"
    },
    "23673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23675": {
      "op": "DUP1"
    },
    "23676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23678": {
      "op": "DUP1"
    },
    "23679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23681": {
      "op": "DUP1"
    },
    "23682": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "23685": {
      "op": "DUP14"
    },
    "23686": {
      "op": "DUP16"
    },
    "23687": {
      "op": "SUB"
    },
    "23688": {
      "op": "SLT"
    },
    "23689": {
      "op": "ISZERO"
    },
    "23690": {
      "op": "PUSH2",
      "value": "0x5C92"
    },
    "23693": {
      "op": "JUMPI"
    },
    "23694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23696": {
      "op": "DUP1"
    },
    "23697": {
      "op": "REVERT"
    },
    "23698": {
      "op": "JUMPDEST"
    },
    "23699": {
      "op": "DUP13"
    },
    "23700": {
      "op": "MLOAD"
    },
    "23701": {
      "op": "PUSH2",
      "value": "0x5C9D"
    },
    "23704": {
      "op": "DUP2"
    },
    "23705": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "23708": {
      "jump": "i",
      "op": "JUMP"
    },
    "23709": {
      "op": "JUMPDEST"
    },
    "23710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23712": {
      "op": "DUP15"
    },
    "23713": {
      "op": "ADD"
    },
    "23714": {
      "op": "MLOAD"
    },
    "23715": {
      "op": "SWAP1"
    },
    "23716": {
      "op": "SWAP13"
    },
    "23717": {
      "op": "POP"
    },
    "23718": {
      "op": "PUSH2",
      "value": "0x5CAE"
    },
    "23721": {
      "op": "DUP2"
    },
    "23722": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "23725": {
      "jump": "i",
      "op": "JUMP"
    },
    "23726": {
      "op": "JUMPDEST"
    },
    "23727": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "23729": {
      "op": "DUP15"
    },
    "23730": {
      "op": "ADD"
    },
    "23731": {
      "op": "MLOAD"
    },
    "23732": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "23734": {
      "op": "DUP16"
    },
    "23735": {
      "op": "ADD"
    },
    "23736": {
      "op": "MLOAD"
    },
    "23737": {
      "op": "SWAP2"
    },
    "23738": {
      "op": "SWAP13"
    },
    "23739": {
      "op": "POP"
    },
    "23740": {
      "op": "SWAP11"
    },
    "23741": {
      "op": "POP"
    },
    "23742": {
      "op": "PUSH2",
      "value": "0x5CC6"
    },
    "23745": {
      "op": "DUP2"
    },
    "23746": {
      "op": "PUSH2",
      "value": "0x4DED"
    },
    "23749": {
      "jump": "i",
      "op": "JUMP"
    },
    "23750": {
      "op": "JUMPDEST"
    },
    "23751": {
      "op": "DUP1"
    },
    "23752": {
      "op": "SWAP10"
    },
    "23753": {
      "op": "POP"
    },
    "23754": {
      "op": "POP"
    },
    "23755": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "23757": {
      "op": "DUP14"
    },
    "23758": {
      "op": "ADD"
    },
    "23759": {
      "op": "MLOAD"
    },
    "23760": {
      "op": "SWAP8"
    },
    "23761": {
      "op": "POP"
    },
    "23762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "23764": {
      "op": "DUP14"
    },
    "23765": {
      "op": "ADD"
    },
    "23766": {
      "op": "MLOAD"
    },
    "23767": {
      "op": "SWAP7"
    },
    "23768": {
      "op": "POP"
    },
    "23769": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "23771": {
      "op": "DUP14"
    },
    "23772": {
      "op": "ADD"
    },
    "23773": {
      "op": "MLOAD"
    },
    "23774": {
      "op": "PUSH2",
      "value": "0x5CE6"
    },
    "23777": {
      "op": "DUP2"
    },
    "23778": {
      "op": "PUSH2",
      "value": "0x4EBA"
    },
    "23781": {
      "jump": "i",
      "op": "JUMP"
    },
    "23782": {
      "op": "JUMPDEST"
    },
    "23783": {
      "op": "DUP1"
    },
    "23784": {
      "op": "SWAP7"
    },
    "23785": {
      "op": "POP"
    },
    "23786": {
      "op": "POP"
    },
    "23787": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "23789": {
      "op": "DUP14"
    },
    "23790": {
      "op": "ADD"
    },
    "23791": {
      "op": "MLOAD"
    },
    "23792": {
      "op": "SWAP5"
    },
    "23793": {
      "op": "POP"
    },
    "23794": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "23797": {
      "op": "DUP14"
    },
    "23798": {
      "op": "ADD"
    },
    "23799": {
      "op": "MLOAD"
    },
    "23800": {
      "op": "SWAP4"
    },
    "23801": {
      "op": "POP"
    },
    "23802": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "23805": {
      "op": "DUP14"
    },
    "23806": {
      "op": "ADD"
    },
    "23807": {
      "op": "MLOAD"
    },
    "23808": {
      "op": "SWAP3"
    },
    "23809": {
      "op": "POP"
    },
    "23810": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "23813": {
      "op": "DUP14"
    },
    "23814": {
      "op": "ADD"
    },
    "23815": {
      "op": "MLOAD"
    },
    "23816": {
      "op": "SWAP2"
    },
    "23817": {
      "op": "POP"
    },
    "23818": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "23821": {
      "op": "DUP14"
    },
    "23822": {
      "op": "ADD"
    },
    "23823": {
      "op": "MLOAD"
    },
    "23824": {
      "op": "PUSH2",
      "value": "0x5D18"
    },
    "23827": {
      "op": "DUP2"
    },
    "23828": {
      "op": "PUSH2",
      "value": "0x4EBA"
    },
    "23831": {
      "jump": "i",
      "op": "JUMP"
    },
    "23832": {
      "op": "JUMPDEST"
    },
    "23833": {
      "op": "DUP1"
    },
    "23834": {
      "op": "SWAP2"
    },
    "23835": {
      "op": "POP"
    },
    "23836": {
      "op": "POP"
    },
    "23837": {
      "op": "SWAP3"
    },
    "23838": {
      "op": "SWAP6"
    },
    "23839": {
      "op": "SWAP9"
    },
    "23840": {
      "op": "SWAP12"
    },
    "23841": {
      "op": "POP"
    },
    "23842": {
      "op": "SWAP3"
    },
    "23843": {
      "op": "SWAP6"
    },
    "23844": {
      "op": "SWAP9"
    },
    "23845": {
      "op": "SWAP12"
    },
    "23846": {
      "op": "POP"
    },
    "23847": {
      "op": "SWAP3"
    },
    "23848": {
      "op": "SWAP6"
    },
    "23849": {
      "op": "SWAP9"
    },
    "23850": {
      "op": "SWAP12"
    },
    "23851": {
      "jump": "o",
      "op": "JUMP"
    },
    "23852": {
      "op": "JUMPDEST"
    },
    "23853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23855": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "23857": {
      "op": "DUP3"
    },
    "23858": {
      "op": "AND"
    },
    "23859": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "23861": {
      "op": "DUP5"
    },
    "23862": {
      "op": "AND"
    },
    "23863": {
      "op": "DUP1"
    },
    "23864": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "23866": {
      "op": "SUB"
    },
    "23867": {
      "op": "DUP3"
    },
    "23868": {
      "op": "GT"
    },
    "23869": {
      "op": "ISZERO"
    },
    "23870": {
      "op": "PUSH2",
      "value": "0x5D49"
    },
    "23873": {
      "op": "JUMPI"
    },
    "23874": {
      "op": "PUSH2",
      "value": "0x5D49"
    },
    "23877": {
      "op": "PUSH2",
      "value": "0x57C0"
    },
    "23880": {
      "jump": "i",
      "op": "JUMP"
    },
    "23881": {
      "op": "JUMPDEST"
    },
    "23882": {
      "op": "ADD"
    },
    "23883": {
      "op": "SWAP4"
    },
    "23884": {
      "op": "SWAP3"
    },
    "23885": {
      "op": "POP"
    },
    "23886": {
      "op": "POP"
    },
    "23887": {
      "op": "POP"
    },
    "23888": {
      "jump": "o",
      "op": "JUMP"
    },
    "23889": {
      "op": "JUMPDEST"
    },
    "23890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23892": {
      "op": "DUP1"
    },
    "23893": {
      "op": "DUP4"
    },
    "23894": {
      "op": "SLOAD"
    },
    "23895": {
      "op": "DUP2"
    },
    "23896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23898": {
      "op": "DUP3"
    },
    "23899": {
      "op": "DUP2"
    },
    "23900": {
      "op": "SHR"
    },
    "23901": {
      "op": "SWAP2"
    },
    "23902": {
      "op": "POP"
    },
    "23903": {
      "op": "DUP1"
    },
    "23904": {
      "op": "DUP4"
    },
    "23905": {
      "op": "AND"
    },
    "23906": {
      "op": "DUP1"
    },
    "23907": {
      "op": "PUSH2",
      "value": "0x5D6D"
    },
    "23910": {
      "op": "JUMPI"
    },
    "23911": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "23913": {
      "op": "DUP4"
    },
    "23914": {
      "op": "AND"
    },
    "23915": {
      "op": "SWAP3"
    },
    "23916": {
      "op": "POP"
    },
    "23917": {
      "op": "JUMPDEST"
    },
    "23918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23920": {
      "op": "DUP1"
    },
    "23921": {
      "op": "DUP5"
    },
    "23922": {
      "op": "LT"
    },
    "23923": {
      "op": "DUP3"
    },
    "23924": {
      "op": "EQ"
    },
    "23925": {
      "op": "ISZERO"
    },
    "23926": {
      "op": "PUSH2",
      "value": "0x5D8D"
    },
    "23929": {
      "op": "JUMPI"
    },
    "23930": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "23935": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "23937": {
      "op": "SHL"
    },
    "23938": {
      "op": "DUP7"
    },
    "23939": {
      "op": "MSTORE"
    },
    "23940": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "23942": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "23944": {
      "op": "MSTORE"
    },
    "23945": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "23947": {
      "op": "DUP7"
    },
    "23948": {
      "op": "REVERT"
    },
    "23949": {
      "op": "JUMPDEST"
    },
    "23950": {
      "op": "DUP2"
    },
    "23951": {
      "op": "DUP1"
    },
    "23952": {
      "op": "ISZERO"
    },
    "23953": {
      "op": "PUSH2",
      "value": "0x5DA1"
    },
    "23956": {
      "op": "JUMPI"
    },
    "23957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "23959": {
      "op": "DUP2"
    },
    "23960": {
      "op": "EQ"
    },
    "23961": {
      "op": "PUSH2",
      "value": "0x5DB2"
    },
    "23964": {
      "op": "JUMPI"
    },
    "23965": {
      "op": "PUSH2",
      "value": "0x5DDF"
    },
    "23968": {
      "op": "JUMP"
    },
    "23969": {
      "op": "JUMPDEST"
    },
    "23970": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "23972": {
      "op": "NOT"
    },
    "23973": {
      "op": "DUP7"
    },
    "23974": {
      "op": "AND"
    },
    "23975": {
      "op": "DUP10"
    },
    "23976": {
      "op": "MSTORE"
    },
    "23977": {
      "op": "DUP5"
    },
    "23978": {
      "op": "DUP10"
    },
    "23979": {
      "op": "ADD"
    },
    "23980": {
      "op": "SWAP7"
    },
    "23981": {
      "op": "POP"
    },
    "23982": {
      "op": "PUSH2",
      "value": "0x5DDF"
    },
    "23985": {
      "op": "JUMP"
    },
    "23986": {
      "op": "JUMPDEST"
    },
    "23987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23989": {
      "op": "DUP11"
    },
    "23990": {
      "op": "DUP2"
    },
    "23991": {
      "op": "MSTORE"
    },
    "23992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "23994": {
      "op": "SWAP1"
    },
    "23995": {
      "op": "KECCAK256"
    },
    "23996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "23998": {
      "op": "JUMPDEST"
    },
    "23999": {
      "op": "DUP7"
    },
    "24000": {
      "op": "DUP2"
    },
    "24001": {
      "op": "LT"
    },
    "24002": {
      "op": "ISZERO"
    },
    "24003": {
      "op": "PUSH2",
      "value": "0x5DD7"
    },
    "24006": {
      "op": "JUMPI"
    },
    "24007": {
      "op": "DUP2"
    },
    "24008": {
      "op": "SLOAD"
    },
    "24009": {
      "op": "DUP12"
    },
    "24010": {
      "op": "DUP3"
    },
    "24011": {
      "op": "ADD"
    },
    "24012": {
      "op": "MSTORE"
    },
    "24013": {
      "op": "SWAP1"
    },
    "24014": {
      "op": "DUP6"
    },
    "24015": {
      "op": "ADD"
    },
    "24016": {
      "op": "SWAP1"
    },
    "24017": {
      "op": "DUP4"
    },
    "24018": {
      "op": "ADD"
    },
    "24019": {
      "op": "PUSH2",
      "value": "0x5DBE"
    },
    "24022": {
      "op": "JUMP"
    },
    "24023": {
      "op": "JUMPDEST"
    },
    "24024": {
      "op": "POP"
    },
    "24025": {
      "op": "POP"
    },
    "24026": {
      "op": "DUP5"
    },
    "24027": {
      "op": "DUP10"
    },
    "24028": {
      "op": "ADD"
    },
    "24029": {
      "op": "SWAP7"
    },
    "24030": {
      "op": "POP"
    },
    "24031": {
      "op": "JUMPDEST"
    },
    "24032": {
      "op": "POP"
    },
    "24033": {
      "op": "SWAP5"
    },
    "24034": {
      "op": "SWAP9"
    },
    "24035": {
      "op": "SWAP8"
    },
    "24036": {
      "op": "POP"
    },
    "24037": {
      "op": "POP"
    },
    "24038": {
      "op": "POP"
    },
    "24039": {
      "op": "POP"
    },
    "24040": {
      "op": "POP"
    },
    "24041": {
      "op": "POP"
    },
    "24042": {
      "op": "POP"
    },
    "24043": {
      "op": "POP"
    },
    "24044": {
      "jump": "o",
      "op": "JUMP"
    },
    "24045": {
      "op": "JUMPDEST"
    },
    "24046": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "24051": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "24053": {
      "op": "SHL"
    },
    "24054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "24056": {
      "op": "MSTORE"
    },
    "24057": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "24059": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "24061": {
      "op": "MSTORE"
    },
    "24062": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "24064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "24066": {
      "op": "REVERT"
    },
    "24067": {
      "op": "JUMPDEST"
    },
    "24068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "24070": {
      "op": "DUP2"
    },
    "24071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "24073": {
      "op": "NOT"
    },
    "24074": {
      "op": "DIV"
    },
    "24075": {
      "op": "DUP4"
    },
    "24076": {
      "op": "GT"
    },
    "24077": {
      "op": "DUP3"
    },
    "24078": {
      "op": "ISZERO"
    },
    "24079": {
      "op": "ISZERO"
    },
    "24080": {
      "op": "AND"
    },
    "24081": {
      "op": "ISZERO"
    },
    "24082": {
      "op": "PUSH2",
      "value": "0x5E1D"
    },
    "24085": {
      "op": "JUMPI"
    },
    "24086": {
      "op": "PUSH2",
      "value": "0x5E1D"
    },
    "24089": {
      "op": "PUSH2",
      "value": "0x57C0"
    },
    "24092": {
      "jump": "i",
      "op": "JUMP"
    },
    "24093": {
      "op": "JUMPDEST"
    },
    "24094": {
      "op": "POP"
    },
    "24095": {
      "op": "MUL"
    },
    "24096": {
      "op": "SWAP1"
    },
    "24097": {
      "jump": "o",
      "op": "JUMP"
    },
    "24098": {
      "op": "JUMPDEST"
    },
    "24099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "24101": {
      "op": "DUP3"
    },
    "24102": {
      "op": "PUSH2",
      "value": "0x5E3F"
    },
    "24105": {
      "op": "JUMPI"
    },
    "24106": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "24111": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "24113": {
      "op": "SHL"
    },
    "24114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "24116": {
      "op": "MSTORE"
    },
    "24117": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "24119": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "24121": {
      "op": "MSTORE"
    },
    "24122": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "24124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "24126": {
      "op": "REVERT"
    },
    "24127": {
      "op": "JUMPDEST"
    },
    "24128": {
      "op": "POP"
    },
    "24129": {
      "op": "DIV"
    },
    "24130": {
      "op": "SWAP1"
    },
    "24131": {
      "jump": "o",
      "op": "JUMP"
    },
    "24132": {
      "op": "JUMPDEST"
    },
    "24133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "24135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "24137": {
      "op": "DUP3"
    },
    "24138": {
      "op": "DUP5"
    },
    "24139": {
      "op": "SUB"
    },
    "24140": {
      "op": "SLT"
    },
    "24141": {
      "op": "ISZERO"
    },
    "24142": {
      "op": "PUSH2",
      "value": "0x5E56"
    },
    "24145": {
      "op": "JUMPI"
    },
    "24146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "24148": {
      "op": "DUP1"
    },
    "24149": {
      "op": "REVERT"
    },
    "24150": {
      "op": "JUMPDEST"
    },
    "24151": {
      "op": "DUP2"
    },
    "24152": {
      "op": "MLOAD"
    },
    "24153": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "24156": {
      "op": "DUP2"
    },
    "24157": {
      "op": "PUSH2",
      "value": "0x4EBA"
    },
    "24160": {
      "jump": "i",
      "op": "JUMP"
    },
    "24161": {
      "op": "JUMPDEST"
    },
    "24162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "24164": {
      "op": "DUP3"
    },
    "24165": {
      "op": "MLOAD"
    },
    "24166": {
      "op": "PUSH2",
      "value": "0x5E73"
    },
    "24169": {
      "op": "DUP2"
    },
    "24170": {
      "op": "DUP5"
    },
    "24171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "24173": {
      "op": "DUP8"
    },
    "24174": {
      "op": "ADD"
    },
    "24175": {
      "op": "PUSH2",
      "value": "0x4E2F"
    },
    "24178": {
      "jump": "i",
      "op": "JUMP"
    },
    "24179": {
      "op": "JUMPDEST"
    },
    "24180": {
      "op": "SWAP2"
    },
    "24181": {
      "op": "SWAP1"
    },
    "24182": {
      "op": "SWAP2"
    },
    "24183": {
      "op": "ADD"
    },
    "24184": {
      "op": "SWAP3"
    },
    "24185": {
      "op": "SWAP2"
    },
    "24186": {
      "op": "POP"
    },
    "24187": {
      "op": "POP"
    },
    "24188": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0b37c41a9a57b60a288e60f7238cfcca829ee8ef",
  "source": "pragma solidity 0.8.12;\n// Copyright BigchainDB GmbH and Ocean Protocol contributors\n// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\n// Code is Apache-2.0 and docs are CC-BY-4.0\n\nimport \"../interfaces/IERC721Template.sol\";\nimport \"../interfaces/IERC20Template.sol\";\nimport \"../interfaces/IFactoryRouter.sol\";\nimport \"../interfaces/IFixedRateExchange.sol\";\nimport \"../interfaces/IDispenser.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/ERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/math/SafeMath.sol\";\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/security/ReentrancyGuard.sol\";\nimport \"../utils/ERC20Roles.sol\";\n\n/**\n * @title DatatokenTemplate\n *\n * @dev DatatokenTemplate is an ERC20 compliant token template\n *      Used by the factory contract as a bytecode reference to\n *      deploy new Datatokens.\n */\ncontract ERC20Template is\n    ERC20(\"test\", \"testSymbol\"),\n    ERC20Roles,\n    ERC20Burnable,\n    ReentrancyGuard\n{\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    string private _name;\n    string private _symbol;\n    uint256 private _cap;\n    uint8 private constant _decimals = 18;\n    bool private initialized = false;\n    address private _erc721Address;\n    address private paymentCollector;\n    address private publishMarketFeeAddress;\n    address private publishMarketFeeToken;\n    uint256 private publishMarketFeeAmount;\n    uint256 public constant BASE = 1e18;\n    \n    // EIP 2612 SUPPORT\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    mapping(address => uint256) public nonces;\n\n    address public router;\n    address[] deployedPools;\n    struct fixedRate{\n        address contractAddress;\n        bytes32 id;\n    }\n    fixedRate[] fixedRateExchanges;\n    address[] dispensers;\n\n    struct providerFee{\n        address providerFeeAddress;\n        address providerFeeToken; // address of the token \n        uint256 providerFeeAmount; // amount to be transfered to provider\n        uint8 v; // v of provider signed message\n        bytes32 r; // r of provider signed message\n        bytes32 s; // s of provider signed message\n        uint256 validUntil; //validity expresses in unix timestamp\n        bytes providerData; //data encoded by provider   \n    }\n\n    struct consumeMarketFee{\n        address consumeMarketFeeAddress;\n        address consumeMarketFeeToken; // address of the token marketplace wants to add fee on top\n        uint256 consumeMarketFeeAmount; // amount to be transfered to marketFeeCollector\n    }\n\n    event OrderStarted(\n        address indexed consumer,\n        address payer,\n        uint256 amount,\n        uint256 serviceIndex,\n        uint256 timestamp,\n        address indexed publishMarketAddress,\n        uint256 blockNumber\n    );\n\n    event OrderReused(\n            bytes32 orderTxId,\n            address caller,\n            uint256 timestamp,\n            uint256 number\n    );\n\n    event OrderExecuted( \n        address indexed providerAddress,\n        address indexed consumerAddress,\n        bytes32 orderTxId,\n        bytes providerData,\n        bytes providerSignature,\n        bytes consumerData,\n        bytes consumerSignature,\n        uint256 timestamp,\n        uint256 blockNumber\n    );\n\n    event PublishMarketFeeChanged(\n        address caller,\n        address PublishMarketFeeAddress,\n        address PublishMarketFeeToken,\n        uint256 PublishMarketFeeAmount\n    );\n\n    // emited for every order\n    event PublishMarketFee(\n        address indexed PublishMarketFeeAddress,\n        address indexed PublishMarketFeeToken,\n        uint256 PublishMarketFeeAmount\n    );\n\n    // emited for every order\n    event ConsumeMarketFee(\n        address indexed consumeMarketFeeAddress,\n        address indexed consumeMarketFeeToken,\n        uint256 consumeMarketFeeAmount\n    );\n\n    // emited for every order\n    event ProviderFee(\n        address indexed providerFeeAddress,\n        address indexed providerFeeToken,\n        uint256 providerFeeAmount,\n        bytes providerData,\n        uint8 v, \n        bytes32 r, \n        bytes32 s,\n        uint256 validUntil\n    );\n    \n\n    event MinterProposed(address currentMinter, address newMinter);\n\n    event MinterApproved(address currentMinter, address newMinter);\n\n    event NewPool(\n        address poolAddress,\n        address ssContract,\n        address baseTokenAddress\n    );\n    event VestingCreated(address indexed datatokenAddress,\n        address indexed publisherAddress,\n        uint256 vestingEndBlock,\n        uint256 totalVestingAmount);\n    event NewFixedRate(bytes32 exchangeId, address indexed owner, address exchangeContract, address indexed baseToken);\n    event NewDispenser(address dispenserContract);\n\n    event NewPaymentCollector(\n        address indexed caller,\n        address indexed _newPaymentCollector,\n        uint256 timestamp,\n        uint256 blockNumber\n    );\n\n    modifier onlyNotInitialized() {\n        require(\n            !initialized,\n            \"ERC20Template: token instance already initialized\"\n        );\n        _;\n    }\n    modifier onlyNFTOwner() {\n        require(\n            msg.sender == IERC721Template(_erc721Address).ownerOf(1),\n            \"ERC20Template: not NFTOwner\"\n        );\n        _;\n    }\n\n    modifier onlyPublishingMarketFeeAddress() {\n        require(\n            msg.sender == publishMarketFeeAddress,\n            \"ERC20Template: not publishMarketFeeAddress\"\n        );\n        _;\n    }\n\n    modifier onlyERC20Deployer() {\n        require(\n            IERC721Template(_erc721Address)\n                .getPermissions(msg.sender)\n                .deployERC20 || IERC721Template(_erc721Address).ownerOf(1) == msg.sender,\n            \"ERC20Template: NOT DEPLOYER ROLE\"\n        );\n        _;\n    }\n\n    /**\n     * @dev initialize\n     *      Called prior contract initialization (e.g creating new Datatoken instance)\n     *      Calls private _initialize function. Only if contract is not initialized.\n     * @param strings_ refers to an array of strings\n     *                      [0] = name token\n     *                      [1] = symbol\n     * @param addresses_ refers to an array of addresses passed by user\n     *                     [0]  = minter account who can mint datatokens (can have multiple minters)\n     *                     [1]  = paymentCollector  initial paymentCollector  for this DT\n     *                     [2]  = publishing Market Address\n     *                     [3]  = publishing Market Fee Token\n     * @param factoryAddresses_ refers to an array of addresses passed by the factory\n     *                     [0]  = erc721Address\n     *                     [1]  = router address\n     *\n     * @param uints_  refers to an array of uints\n     *                     [0] = cap_ the total ERC20 cap\n     *                     [1] = publishing Market Fee Amount\n     * @param bytes_  refers to an array of bytes\n     *                     Currently not used, usefull for future templates\n     */\n    function initialize(\n        string[] calldata strings_,\n        address[] calldata addresses_,\n        address[] calldata factoryAddresses_,\n        uint256[] calldata uints_,\n        bytes[] calldata bytes_\n    ) external onlyNotInitialized returns (bool) {\n        return\n            _initialize(\n                strings_,\n                addresses_,\n                factoryAddresses_,\n                uints_,\n                bytes_\n            );\n    }\n\n    /**\n     * @dev _initialize\n     *      Private function called on contract initialization.\n     * @param strings_ refers to an array of strings\n     *                      [0] = name token\n     *                      [1] = symbol\n     * @param addresses_ refers to an array of addresses passed by user\n     *                     [0]  = minter account who can mint datatokens (can have multiple minters)\n     *                     [1]  = paymentCollector  initial paymentCollector  for this DT\n     *                     [2]  = publishing Market Address\n     *                     [3]  = publishing Market Fee Token\n     * @param factoryAddresses_ refers to an array of addresses passed by the factory\n     *                     [0]  = erc721Address\n     *                     [1]  = router address\n     *\n     * @param uints_  refers to an array of uints\n     *                     [0] = cap_ the total ERC20 cap\n     *                     [1] = publishing Market Fee Amount\n     * param bytes_  refers to an array of bytes\n     *                     Currently not used, usefull for future templates\n     */\n    function _initialize(\n        string[] memory strings_,\n        address[] memory addresses_,\n        address[] memory factoryAddresses_,\n        uint256[] memory uints_,\n        bytes[] memory\n    ) private returns (bool) {\n        address erc721Address = factoryAddresses_[0];\n        router = factoryAddresses_[1];\n        require(\n            erc721Address != address(0),\n            \"ERC20Template: Invalid minter,  zero address\"\n        );\n\n        require(\n            router != address(0),\n            \"ERC20Template: Invalid router, zero address\"\n        );\n\n        // require(uints_[0] != 0, \"DatatokenTemplate: Invalid cap value\");\n        // _cap = uints_[0];\n        _cap = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        _name = strings_[0];\n        _symbol = strings_[1];\n        _erc721Address = erc721Address;\n        initialized = true;\n        // add a default minter, similar to what happens with manager in the 721 contract\n        _addMinter(addresses_[0]);\n        if (addresses_[1] != address(0)) {\n            _setPaymentCollector(addresses_[1]);\n            emit NewPaymentCollector(\n                msg.sender,\n                addresses_[1],\n                block.timestamp,\n                block.number\n            );\n        }\n        publishMarketFeeAddress = addresses_[2];\n        publishMarketFeeToken = addresses_[3];\n        publishMarketFeeAmount = uints_[1];\n        emit PublishMarketFeeChanged(\n            msg.sender,\n            publishMarketFeeAddress,\n            publishMarketFeeToken,\n            publishMarketFeeAmount\n        );\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\n                    \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n                ),\n                keccak256(bytes(_name)),\n                keccak256(bytes(\"1\")), // version, could be any other value\n                chainId,\n                address(this)\n            )\n        );\n\n        return initialized;\n    }\n\n    /**\n     * @dev deployPool\n     *      Function to deploy new Pool with 1SS. It also has a vesting schedule.\n     *     This function can only be called ONCE and ONLY if no token have been minted yet.\n     *      Requires baseToken approval\n     * @param ssParams params for the ssContract. \n     *                     [0]  = rate (wei)\n     *                     [1]  = baseToken decimals\n     *                     [2]  = vesting amount (wei)\n     *                     [3]  = vested blocks\n     *                     [4]  = initial liquidity in baseToken for pool creation\n     * @param swapFees swapFees (swapFee, swapMarketFee), swapOceanFee will be set automatically later\n     *                     [0] = swapFee for LP Providers\n     *                     [1] = swapFee for marketplace runner\n      \n      .\n     * @param addresses refers to an array of addresses passed by user\n     *                     [0]  = side staking contract address\n     *                     [1]  = baseToken address for pool creation(OCEAN or other)\n     *                     [2]  = baseTokenSender user which will provide the baseToken amount for initial liquidity\n     *                     [3]  = publisherAddress user which will be assigned the vested amount\n     *                     [4]  = marketFeeCollector marketFeeCollector address\n                           [5] = poolTemplateAddress\n     */\n\n    function deployPool(\n        uint256[] memory ssParams,\n        uint256[] memory swapFees,\n        address[] memory addresses\n    ) external onlyERC20Deployer nonReentrant returns (address pool) {\n        require(totalSupply() == 0, \"ERC20Template: tokens already minted\");\n        _addMinter(addresses[0]);\n        // TODO: confirm minimum number of blocks required\n        require(\n            ssParams[3] >= IFactoryRouter(router).getMinVestingPeriod(),\n            \"ERC20Template: Vesting period too low. See FactoryRouter.minVestingPeriodInBlocks\"\n        );\n\n        address[2] memory tokens = [address(this), addresses[1]];\n        pool = IFactoryRouter(router).deployPool(\n            tokens,\n            ssParams,\n            swapFees,\n            addresses\n        );\n        deployedPools.push(pool);\n        emit NewPool(pool, addresses[0], addresses[1]);\n    }\n\n    /**\n     * @dev createFixedRate\n     *      Creates a new FixedRateExchange setup.\n     * @param fixedPriceAddress fixedPriceAddress\n     * @param addresses array of addresses [baseToken,owner,marketFeeCollector]\n     * @param uints array of uints [baseTokenDecimals,datatokenDecimals, fixedRate, marketFee, withMint]\n     * @return exchangeId\n     */\n    function createFixedRate(\n        address fixedPriceAddress,\n        address[] memory addresses,\n        uint256[] memory uints\n    ) external onlyERC20Deployer nonReentrant returns (bytes32 exchangeId) {\n        // add FixedPriced contract as minter if withMint == true\n        if (uints[4] > 0) _addMinter(fixedPriceAddress);\n        exchangeId = IFactoryRouter(router).deployFixedRate(\n            fixedPriceAddress,\n            addresses,\n            uints\n        );\n        emit NewFixedRate(exchangeId, addresses[1], fixedPriceAddress, addresses[0]);\n        fixedRateExchanges.push(fixedRate(fixedPriceAddress,exchangeId));\n\n    }\n\n    /**\n     * @dev createDispenser\n     *      Creates a new Dispenser\n     * @param _dispenser dispenser contract address\n     * @param maxTokens - max tokens to dispense\n     * @param maxBalance - max balance of requester.\n     * @param withMint - true if we want to allow the dispenser to be a minter\n     * @param allowedSwapper - only account that can ask tokens. set address(0) if not required\n     */\n    function createDispenser(\n        address _dispenser,\n        uint256 maxTokens,\n        uint256 maxBalance,\n        bool withMint,\n        address allowedSwapper\n    ) external onlyERC20Deployer nonReentrant {\n        // add FixedPriced contract as minter if withMint == true\n        if (withMint) _addMinter(_dispenser);\n        dispensers.push(_dispenser);\n        emit NewDispenser(_dispenser);\n        IFactoryRouter(router).deployDispenser(\n            _dispenser,\n            address(this),\n            maxTokens,\n            maxBalance,\n            msg.sender,\n            allowedSwapper\n        );\n    }\n\n    /**\n     * @dev mint\n     *      Only the minter address can call it.\n     *      msg.value should be higher than zero and gt or eq minting fee\n     * @param account refers to an address that token is going to be minted to.\n     * @param value refers to amount of tokens that is going to be minted.\n     */\n    function mint(address account, uint256 value) external {\n        require(permissions[msg.sender].minter, \"ERC20Template: NOT MINTER\");\n        require(\n            totalSupply().add(value) <= _cap,\n            \"DatatokenTemplate: cap exceeded\"\n        );\n        _mint(account, value);\n    }\n\n    \n    /**\n     * @dev _checkProviderFee\n     *      Checks if a providerFee structure is valid, signed and \n     *      transfers fee to providerAddress\n     * @param _providerFee providerFee structure\n     */\n    function _checkProviderFee(providerFee calldata _providerFee) internal{\n        // check if they are signed\n        bytes memory prefix = \"\\x19Ethereum Signed Message:\\n32\";\n        bytes32 message = keccak256(\n            abi.encodePacked(prefix,\n                keccak256(\n                    abi.encodePacked(\n                        _providerFee.providerData,\n                        _providerFee.providerFeeAddress,\n                        _providerFee.providerFeeToken,\n                        _providerFee.providerFeeAmount,\n                        _providerFee.validUntil\n                    )\n                )\n            )\n        );\n        address signer = ecrecover(message, _providerFee.v, _providerFee.r, _providerFee.s);\n        require(signer == _providerFee.providerFeeAddress, \"Invalid provider fee\");\n        emit ProviderFee(\n            _providerFee.providerFeeAddress,\n            _providerFee.providerFeeToken,\n            _providerFee.providerFeeAmount,\n            _providerFee.providerData,\n            _providerFee.v,\n            _providerFee.r,\n            _providerFee.s,\n            _providerFee.validUntil\n        );\n        // skip fee if amount == 0 or feeToken == 0x0 address or feeAddress == 0x0 address\n        // Requires approval for the providerFeeToken of providerFeeAmount\n        if (\n            _providerFee.providerFeeAmount > 0 &&\n            _providerFee.providerFeeToken != address(0) &&\n            _providerFee.providerFeeAddress != address(0)\n        ) {\n            uint256 OPCFee = IFactoryRouter(router).getOPCProviderFee();\n            uint256 OPCcut = 0;\n            if(OPCFee > 0)\n                OPCcut = _providerFee.providerFeeAmount.mul(OPCFee).div(BASE);\n            uint256 providerCut = _providerFee.providerFeeAmount.sub(OPCcut);\n\n            _pullUnderlying(_providerFee.providerFeeToken,msg.sender,\n                address(this),\n                _providerFee.providerFeeAmount);\n            IERC20(_providerFee.providerFeeToken).safeTransfer(\n                _providerFee.providerFeeAddress,\n                providerCut\n            );\n            if(OPCcut > 0){\n              IERC20(_providerFee.providerFeeToken).safeTransfer(\n                IFactoryRouter(router).getOPCCollector(),\n                OPCcut\n            );  \n            }\n        }\n    }\n    \n    /**\n     * @dev startOrder\n     *      called by payer or consumer prior ordering a service consume on a marketplace.\n     *      Requires previous approval of consumeFeeToken and publishMarketFeeToken\n     * @param consumer is the consumer address (payer could be different address)\n     * @param serviceIndex service index in the metadata\n     * @param _providerFee provider fee\n     * @param _consumeMarketFee consume market fee\n     */\n    function startOrder(\n        address consumer,\n        uint256 serviceIndex,\n        providerFee calldata _providerFee,\n        consumeMarketFee calldata _consumeMarketFee\n    ) external nonReentrant {\n        uint256 amount = 1e18; // we always pay 1 DT. No more, no less\n        require(\n            balanceOf(msg.sender) >= amount,\n            \"Not enough datatokens to start Order\"\n        );\n        emit OrderStarted(\n            consumer,\n            msg.sender,\n            amount,\n            serviceIndex,\n            block.timestamp,\n            publishMarketFeeAddress,\n            block.number\n        );\n        // publishMarketFee\n        // Requires approval for the publishMarketFeeToken of publishMarketFeeAmount\n        // skip fee if amount == 0 or feeToken == 0x0 address or feeAddress == 0x0 address\n        if (\n            publishMarketFeeAmount > 0 &&\n            publishMarketFeeToken != address(0) &&\n            publishMarketFeeAddress != address(0)\n        ) {\n            _pullUnderlying(publishMarketFeeToken,msg.sender,\n                publishMarketFeeAddress,\n                publishMarketFeeAmount);\n            \n            emit PublishMarketFee(\n                publishMarketFeeAddress,\n                publishMarketFeeToken,\n                publishMarketFeeAmount\n            );\n        }\n\n        // consumeMarketFee\n        // Requires approval for the FeeToken \n        // skip fee if amount == 0 or feeToken == 0x0 address or feeAddress == 0x0 address\n        if (\n            _consumeMarketFee.consumeMarketFeeAmount > 0 &&\n            _consumeMarketFee.consumeMarketFeeToken != address(0) &&\n            _consumeMarketFee.consumeMarketFeeAddress != address(0)\n        ) {\n            _pullUnderlying(_consumeMarketFee.consumeMarketFeeToken,msg.sender,\n                _consumeMarketFee.consumeMarketFeeAddress,\n                _consumeMarketFee.consumeMarketFeeAmount);\n            emit ConsumeMarketFee(\n                _consumeMarketFee.consumeMarketFeeAddress,\n                _consumeMarketFee.consumeMarketFeeToken,\n                _consumeMarketFee.consumeMarketFeeAmount\n            );\n        }\n        _checkProviderFee(_providerFee);\n        uint256 OPCFee = IFactoryRouter(router).getOPCConsumeFee();\n        \n        // send datatoken to publisher\n        require(\n            transfer(getPaymentCollector(), amount.sub(OPCFee)),\n            \"Failed to send DT to publisher\"\n        );\n        require(\n            transfer(IFactoryRouter(router).getOPCCollector(), OPCFee),\n            \"Failed to send DT to OPC\"\n        );\n    }\n\n    /**\n     * @dev reuseOrder\n     *      called by payer or consumer having a valid order, but with expired provider access\n     *      Pays the provider fee again, but it will not require a new datatoken payment\n     *      Requires previous approval of provider fee.\n     * @param orderTxId previous valid order\n     * @param _providerFee provider feee\n     */\n    function reuseOrder(\n        bytes32 orderTxId,\n        providerFee calldata _providerFee\n    ) external nonReentrant {\n        emit OrderReused(\n            orderTxId,\n            msg.sender,\n            block.timestamp,\n            block.number\n        );\n        _checkProviderFee(_providerFee);\n    }\n\n    /**\n     * @dev addMinter\n     *      Only ERC20Deployer (at 721 level) can update.\n     *      There can be multiple minters\n     * @param _minter new minter address\n     */\n\n    function addMinter(address _minter) external onlyERC20Deployer {\n        _addMinter(_minter);\n    }\n\n    /**\n     * @dev removeMinter\n     *      Only ERC20Deployer (at 721 level) can update.\n     *      There can be multiple minters\n     * @param _minter minter address to remove\n     */\n\n    function removeMinter(address _minter) external onlyERC20Deployer {\n        _removeMinter(_minter);\n    }\n\n    /**\n     * @dev addPaymentManager (can set who's going to collect fee when consuming orders)\n     *      Only ERC20Deployer (at 721 level) can update.\n     *      There can be multiple paymentCollectors\n     * @param _paymentManager new minter address\n     */\n\n    function addPaymentManager(address _paymentManager)\n        external\n        onlyERC20Deployer\n    {\n        _addPaymentManager(_paymentManager);\n    }\n\n    /**\n     * @dev removePaymentManager\n     *      Only ERC20Deployer (at 721 level) can update.\n     *      There can be multiple paymentManagers\n     * @param _paymentManager _paymentManager address to remove\n     */\n\n    function removePaymentManager(address _paymentManager)\n        external\n        onlyERC20Deployer\n    {\n        _removePaymentManager(_paymentManager);\n    }\n\n    /**\n     * @dev setData\n     *      Only ERC20Deployer (at 721 level) can call it.\n     *      This function allows to store data with a preset key (keccak256(ERC20Address)) into NFT 725 Store\n     * @param _value data to be set with this key\n     */\n\n    function setData(bytes calldata _value) external onlyERC20Deployer {\n        bytes32 key = keccak256(abi.encodePacked(address(this)));\n        IERC721Template(_erc721Address).setDataERC20(key, _value);\n    }\n\n    /**\n     * @dev cleanPermissions()\n     *      Only NFT Owner (at 721 level) can call it.\n     *      This function allows to remove all minters, feeManagers and reset the paymentCollector\n     *\n     */\n\n    function cleanPermissions() external onlyNFTOwner {\n        _internalCleanPermissions();\n        \n    }\n    \n    \n    /**\n     * @dev cleanFrom721()\n     *      OnlyNFT(721) Contract can call it.\n     *      This function allows to remove all minters, feeManagers and reset the paymentCollector\n     *       This function is used when transferring an NFT to a new owner,\n     * so that permissions at ERC20level (minter,feeManager,paymentCollector) can be reset.\n     *\n     */\n    function cleanFrom721() external {\n        require(\n            msg.sender == _erc721Address,\n            \"ERC20Template: NOT 721 Contract\"\n        );\n        _internalCleanPermissions();\n        \n    }\n\n    function _internalCleanPermissions() internal {\n        uint256 totalLen = fixedRateExchanges.length + dispensers.length;\n        uint256 curentLen = 0;\n        address[] memory previousMinters=new address[](totalLen);\n        // loop though fixedrates, empty and preserve the minter rols if exists\n        uint256 i;\n        for(i=0; i<fixedRateExchanges.length; i++) {\n                IFixedRateExchange fre = IFixedRateExchange(fixedRateExchanges[i].contractAddress);\n                (\n                    ,\n                    ,\n                    ,\n                    ,\n                    ,\n                    ,\n                    ,\n                    ,\n                    ,\n                    uint256 dtBalance,\n                    uint256 btBalance,\n                    bool withMint\n                ) = fre.getExchange(fixedRateExchanges[i].id);\n                if(btBalance>0)\n                    fre.collectBT(fixedRateExchanges[i].id, btBalance);\n                if(dtBalance>0)\n                    fre.collectDT(fixedRateExchanges[i].id, dtBalance);\n                // add it to the list of minters\n                if(isMinter(fixedRateExchanges[i].contractAddress) && withMint == true){\n                    previousMinters[curentLen]=fixedRateExchanges[i].contractAddress;\n                    curentLen++;\n                }\n        }\n        // loop though dispenser and preserve the minter rols if exists\n        for(i=0; i<dispensers.length; i++) {\n                IDispenser(dispensers[i]).ownerWithdraw(address(this));\n                if(isMinter(dispensers[i])){\n                    previousMinters[curentLen]=dispensers[i];\n                    curentLen++;\n                }\n        }\n        // clear all permisions\n         _cleanPermissions();\n        // set collector to 0\n        paymentCollector = address(0);\n        // add existing minter roles for fixedrate & dispensers\n        for(i=0; i<curentLen; i++) {\n            _addMinter(previousMinters[i]);\n        }\n        \n    }\n    /**\n     * @dev setPaymentCollector\n     *      Only feeManager can call it\n     *      This function allows to set a newPaymentCollector (receives DT when consuming)\n            If not set the paymentCollector is the NFT Owner\n     * @param _newPaymentCollector new fee collector \n     */\n\n    function setPaymentCollector(address _newPaymentCollector) external {\n        //we allow _newPaymentCollector = address(0), because it means that the collector is nft owner\n        require(\n            permissions[msg.sender].paymentManager ||\n                IERC721Template(_erc721Address).getPermissions(msg.sender).deployERC20 ||\n                IERC721Template(_erc721Address).ownerOf(1)==msg.sender,\n            \"ERC20Template: NOT PAYMENT MANAGER or OWNER\"\n        );\n        _setPaymentCollector(_newPaymentCollector);\n        emit NewPaymentCollector(\n            msg.sender,\n            _newPaymentCollector,\n            block.timestamp,\n            block.number\n        );\n    }\n\n    /**\n     * @dev _setPaymentCollector\n     * @param _newPaymentCollector new fee collector\n     */\n\n    function _setPaymentCollector(address _newPaymentCollector) internal {\n        paymentCollector = _newPaymentCollector;\n    }\n\n    /**\n     * @dev getPublishingMarketFee\n     *      Get publishingMarket Fee\n     *      This function allows to get the current fee set by the publishing market\n     */\n    function getPublishingMarketFee()\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        )\n    {\n        return (\n            publishMarketFeeAddress,\n            publishMarketFeeToken,\n            publishMarketFeeAmount\n        );\n    }\n\n    /**\n     * @dev setPublishingMarketFee\n     *      Only publishMarketFeeAddress can call it\n     *      This function allows to set the fee required by the publisherMarket\n     * @param _publishMarketFeeAddress  new _publishMarketFeeAddress\n     * @param _publishMarketFeeToken new _publishMarketFeeToken\n     * @param _publishMarketFeeAmount new fee amount\n     */\n    function setPublishingMarketFee(\n        address _publishMarketFeeAddress,\n        address _publishMarketFeeToken,\n        uint256 _publishMarketFeeAmount\n    ) external onlyPublishingMarketFeeAddress {\n        require(\n            _publishMarketFeeAddress != address(0),\n            \"Invalid _publishMarketFeeAddress address\"\n        );\n           require(\n            _publishMarketFeeToken != address(0),\n            \"Invalid _publishMarketFeeToken address\"\n        );\n        publishMarketFeeAddress = _publishMarketFeeAddress;\n        publishMarketFeeToken = _publishMarketFeeToken;\n        publishMarketFeeAmount = _publishMarketFeeAmount;\n        emit PublishMarketFeeChanged(\n            msg.sender,\n            _publishMarketFeeAddress,\n            _publishMarketFeeToken,\n            _publishMarketFeeAmount\n        );\n    }\n\n    /**\n     * @dev getId\n     *      Return template id in case we need different ABIs. \n     *      If you construct your own template, please make sure to change the hardcoded value\n     */\n    function getId() pure public returns (uint8) {\n        return 1;\n    }\n\n    /**\n     * @dev name\n     *      It returns the token name.\n     * @return Datatoken name.\n     */\n    function name() public view override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev symbol\n     *      It returns the token symbol.\n     * @return Datatoken symbol.\n     */\n    function symbol() public view override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev getERC721Address\n     *      It returns the parent ERC721\n     * @return ERC721 address.\n     */\n    function getERC721Address() public view returns (address) {\n        return _erc721Address;\n    }\n\n    /**\n     * @dev decimals\n     *      It returns the token decimals.\n     *      how many supported decimal points\n     * @return Datatoken decimals.\n     */\n    function decimals() public pure override returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev cap\n     *      it returns the capital.\n     * @return Datatoken cap.\n     */\n    function cap() external view returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev isInitialized\n     *      It checks whether the contract is initialized.\n     * @return true if the contract is initialized.\n     */\n\n    function isInitialized() external view returns (bool) {\n        return initialized;\n    }\n\n    /**\n     * @dev permit\n     *      used for signed approvals, see ERC20Template test for more details\n     * @param owner user who signed the message\n     * @param spender spender\n     * @param value token amount\n     * @param deadline deadline after which signed message is no more valid\n     * @param v parameters from signed message\n     * @param r parameters from signed message\n     * @param s parameters from signed message\n     */\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.number, \"ERC20DT: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(\n                    abi.encode(\n                        PERMIT_TYPEHASH,\n                        owner,\n                        spender,\n                        value,\n                        nonces[owner]++,\n                        deadline\n                    )\n                )\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(\n            recoveredAddress != address(0) && recoveredAddress == owner,\n            \"ERC20DT: INVALID_SIGNATURE\"\n        );\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev getAddressLength\n     *      It returns the array lentgh\n            @param array address array we want to get length\n     * @return length\n     */\n\n    function getAddressLength(address[] memory array)\n        private\n        pure\n        returns (uint256)\n    {\n        return array.length;\n    }\n\n    /**\n     * @dev getUintLength\n     *      It returns the array lentgh\n            @param array uint array we want to get length\n     * @return length\n     */\n\n    function getUintLength(uint256[] memory array)\n        private\n        pure\n        returns (uint256)\n    {\n        return array.length;\n    }\n\n    /**\n     * @dev getBytesLength\n     *      It returns the array lentgh\n            @param array bytes32 array we want to get length\n     * @return length\n     */\n\n    function getBytesLength(bytes32[] memory array)\n        private\n        pure\n        returns (uint256)\n    {\n        return array.length;\n    }\n\n    /**\n     * @dev getPaymentCollector\n     *      It returns the current paymentCollector\n     * @return paymentCollector address\n     */\n\n    function getPaymentCollector() public view returns (address) {\n        if (paymentCollector == address(0)) {\n            return IERC721Template(_erc721Address).ownerOf(1);\n        } else {\n            return paymentCollector;\n        }\n    }\n\n    /**\n     * @dev fallback function\n     *      this is a default fallback function in which receives\n     *      the collected ether.\n     */\n    fallback() external payable {}\n    \n    /**\n     * @dev receive function\n     *      this is a default receive function in which receives\n     *      the collected ether.\n     */\n    receive() external payable {}\n\n    /**\n     * @dev withdrawETH\n     *      transfers all the accumlated ether the collector account\n     */\n    function withdrawETH() external payable {\n        payable(getPaymentCollector()).transfer(address(this).balance);\n    }\n\n    /**\n    * @dev isERC20Deployer\n    *      returns true if address has deployERC20 role\n    */\n    function isERC20Deployer(address user) public view returns(bool){\n        return(IERC721Template(_erc721Address).getPermissions(user).deployERC20);\n    }\n\n    /**\n     * @dev getPools\n     *      Returns the list of pools created for this datatoken\n     */\n    function getPools() public view returns(address[] memory) {\n        return(deployedPools);\n    }\n    /**\n     * @dev getFixedRates\n     *      Returns the list of fixedRateExchanges created for this datatoken\n     */\n    function getFixedRates() public view returns(fixedRate[] memory) {\n        return(fixedRateExchanges);\n    }\n    /**\n     * @dev getDispensers\n     *      Returns the list of dispensers created for this datatoken\n     */\n    function getDispensers() public view returns(address[] memory) {\n        return(dispensers);\n    }\n\n    function _pullUnderlying(\n        address erc20,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        uint256 balanceBefore = IERC20(erc20).balanceOf(to);\n        IERC20(erc20).safeTransferFrom(from, to, amount);\n        require(IERC20(erc20).balanceOf(to) >= balanceBefore.add(amount),\n                    \"Transfer amount is too low\");\n    }\n\n\n    /**\n     * @dev orderExecuted\n     *      Providers should call this to prove order execution\n     * @param orderTxId order tx\n     * @param providerData provider data\n     * @param providerSignature provider signature\n     * @param consumerData consumer data\n     * @param consumerSignature consumer signature\n     * @param consumerAddress consumer address\n     */\n    function orderExecuted(\n        bytes32 orderTxId,\n        bytes calldata providerData,\n        bytes calldata providerSignature,\n        bytes calldata consumerData,\n        bytes calldata consumerSignature,\n        address consumerAddress\n    ) external {\n        require(msg.sender != consumerAddress, \"Provider cannot be the consumer\");\n        bytes memory prefix = \"\\x19Ethereum Signed Message:\\n32\";\n        bytes32 providerHash = keccak256(\n            abi.encodePacked(prefix,\n                keccak256(\n                    abi.encodePacked(\n                        orderTxId,\n                        providerData\n                    )\n                )\n            )\n        );\n        require(_ecrecovery(providerHash, providerSignature) == msg.sender, \"Provider signature check failed\");\n        bytes32 consumerHash = keccak256(\n            abi.encodePacked(prefix,\n                keccak256(\n                    abi.encodePacked(\n                        consumerData\n                    )\n                )\n            )\n        );\n        require(_ecrecovery(consumerHash, consumerSignature) == consumerAddress, \"Consumer signature check failed\");\n        emit OrderExecuted(msg.sender, consumerAddress ,orderTxId, providerData, providerSignature,\n                consumerData, consumerSignature, block.timestamp, block.number);\n    }\n\n\n\n    function _ecrecovery(bytes32 hash, bytes memory sig) pure internal returns (address) {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n        if (sig.length != 65) {\n          return address(0);\n        }\n        assembly {\n          r := mload(add(sig, 32))\n        s := mload(add(sig, 64))\n        v := and(mload(add(sig, 65)), 255)\n        }\n        if (v < 27) {\n          v += 27;\n        }   \n        if (v != 27 && v != 28) {\n        return address(0);\n        }\n        return ecrecover(hash, v, r, s);\n    }\n\n}\n",
  "sourceMap": "1178:37379:42:-:0;;;1486:32;;;-1:-1:-1;;1486:32:42;;;1178:37379;;;;;;;;;-1:-1:-1;1896:113:3;;;;;;;;;;;-1:-1:-1;;;1896:113:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:3;;;;1962:13;;1896:113;;;1962:13;;:5;;:13;:::i;:::-;-1:-1:-1;1985:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1637:1:2;1742:7;:22;-1:-1:-1;1178:37379:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1178:37379:42;;;-1:-1:-1;1178:37379:42;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:75;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;1178:37379:42;;;;;;",
  "sourcePath": "contracts/oceanv4/templates/ERC20Template.sol",
  "type": "contract"
}