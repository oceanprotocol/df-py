{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ConsumeMarketFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "Gulped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bptAmount",
          "type": "uint256"
        }
      ],
      "name": "LOG_BPT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bptAmount",
          "type": "uint256"
        }
      ],
      "name": "LOG_BPT_SS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "LOG_CALL",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "LOG_EXIT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "LOG_JOIN",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseTokenAmountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseTokenWeight",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "datatoken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "datatokenAmountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "datatokenWeight",
          "type": "uint256"
        }
      ],
      "name": "LOG_SETUP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "outBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSpotPrice",
          "type": "uint256"
        }
      ],
      "name": "LOG_SWAP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "OPCWallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OPCFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "marketAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PublishMarketFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newMarketCollector",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "swapFee",
          "type": "uint256"
        }
      ],
      "name": "PublishMarketFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "LPFeeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oceanFeeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "marketFeeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "consumeMarketFeeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenFeeAddress",
          "type": "address"
        }
      ],
      "name": "SWAP_FEES",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SwapFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BONE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BPOW_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EXIT_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INIT_POOL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_BOUND_TOKENS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_BPOW_BASE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_IN_RATIO",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_OUT_RATIO",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_TOTAL_WEIGHT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_WEIGHT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_BALANCE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_BOUND_TOKENS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_BPOW_BASE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_WEIGHT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_publishMarketCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_swapPublishMarketFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "whom",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[4]",
          "name": "data",
          "type": "uint256[4]"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_consumeMarketSwapFee",
          "type": "uint256"
        }
      ],
      "name": "calcInGivenOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountInBalance",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "LPFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oceanFeeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "publishMarketFeeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "consumeMarketFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct BMath.swapfees",
          "name": "_swapfees",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[4]",
          "name": "data",
          "type": "uint256[4]"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_consumeMarketSwapFee",
          "type": "uint256"
        }
      ],
      "name": "calcOutGivenIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balanceInToAdd",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "LPFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oceanFeeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "publishMarketFeeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "consumeMarketFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct BMath.swapfees",
          "name": "_swapfees",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        }
      ],
      "name": "calcPoolInSingleOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolAmountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        }
      ],
      "name": "calcPoolOutSingleIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolAmountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "poolAmountOut",
          "type": "uint256"
        }
      ],
      "name": "calcSingleInPoolOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "poolAmountIn",
          "type": "uint256"
        }
      ],
      "name": "calcSingleOutPoolIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectMarketFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectOPC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "communityFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut",
          "type": "uint256"
        }
      ],
      "name": "exitswapPoolAmountIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_consumeMarketSwapFee",
          "type": "uint256"
        }
      ],
      "name": "getAmountInExactOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpFeeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "oceanFeeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "publishMarketSwapFeeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "consumeMarketSwapFeeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_consumeMarketSwapFee",
          "type": "uint256"
        }
      ],
      "name": "getAmountOutExactIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpFeeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "oceanFeeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "publishMarketSwapFeeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "consumeMarketSwapFeeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentMarketFees",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentOPCFees",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDatatokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getDenormalizedWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFinalTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMarketFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getNormalizedWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOPCFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_consumeMarketSwapFee",
          "type": "uint256"
        }
      ],
      "name": "getSpotPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "spotPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSwapFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalDenormalizedWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "gulp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "swapFees",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "publicSwap",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "finalized",
          "type": "bool"
        },
        {
          "internalType": "address[2]",
          "name": "tokens",
          "type": "address[2]"
        },
        {
          "internalType": "address[1]",
          "name": "feeCollectors",
          "type": "address[1]"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "t",
          "type": "address"
        }
      ],
      "name": "isBound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPublicSwap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPoolAmountOut",
          "type": "uint256"
        }
      ],
      "name": "joinswapExternAmountIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolAmountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "publishMarketFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "swapFee",
          "type": "uint256"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "datatokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "datatokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "datatokenWeight",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "baseTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "baseTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseTokenWeight",
          "type": "uint256"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[3]",
          "name": "tokenInOutMarket",
          "type": "address[3]"
        },
        {
          "internalType": "uint256[4]",
          "name": "amountsInOutMaxFee",
          "type": "uint256[4]"
        }
      ],
      "name": "swapExactAmountIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spotPriceAfter",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[3]",
          "name": "tokenInOutMarket",
          "type": "address[3]"
        },
        {
          "internalType": "uint256[4]",
          "name": "amountsInOutMaxFee",
          "type": "uint256[4]"
        }
      ],
      "name": "swapExactAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spotPriceAfter",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCollector",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newSwapFee",
          "type": "uint256"
        }
      ],
      "name": "updatePublishMarketFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "22": "contracts/oceanv4/interfaces/IERC20.sol",
    "28": "contracts/oceanv4/interfaces/IFactoryRouter.sol",
    "30": "contracts/oceanv4/interfaces/IPool.sol",
    "31": "contracts/oceanv4/interfaces/ISideStaking.sol",
    "33": "contracts/oceanv4/pools/balancer/BConst.sol",
    "35": "contracts/oceanv4/pools/balancer/BMath.sol",
    "36": "contracts/oceanv4/pools/balancer/BNum.sol",
    "37": "contracts/oceanv4/pools/balancer/BPool.sol",
    "38": "contracts/oceanv4/pools/balancer/BToken.sol",
    "47": "contracts/oceanv4/utils/ERC721/Address.sol",
    "62": "contracts/oceanv4/utils/SafeERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/oceanv4/pools/balancer/BPool.sol",
    "exportedSymbols": {
      "Address": [
        21881
      ],
      "BConst": [
        6341
      ],
      "BMath": [
        7397
      ],
      "BNum": [
        7874
      ],
      "BPool": [
        10803
      ],
      "BToken": [
        11314
      ],
      "BTokenBase": [
        11015
      ],
      "IERC20": [
        3084
      ],
      "IFactoryRouter": [
        4096
      ],
      "IPool": [
        28512
      ],
      "ISideStaking": [
        4398
      ],
      "SafeERC20": [
        25826
      ]
    },
    "id": 10804,
    "license": "(Apache-2.0 AND CC-BY-4.0)",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7876,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:37"
      },
      {
        "absolutePath": "contracts/oceanv4/pools/balancer/BToken.sol",
        "file": "./BToken.sol",
        "id": 7877,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 11315,
        "src": "196:22:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/pools/balancer/BMath.sol",
        "file": "./BMath.sol",
        "id": 7878,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 7398,
        "src": "219:21:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/IPool.sol",
        "file": "../../interfaces/IPool.sol",
        "id": 7879,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 28513,
        "src": "241:36:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/interfaces/ISideStaking.sol",
        "file": "../../interfaces/ISideStaking.sol",
        "id": 7880,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 4399,
        "src": "278:43:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oceanv4/utils/SafeERC20.sol",
        "file": "../../utils/SafeERC20.sol",
        "id": 7881,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 25827,
        "src": "322:35:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7883,
              "name": "BMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7397,
              "src": "739:5:37"
            },
            "id": 7884,
            "nodeType": "InheritanceSpecifier",
            "src": "739:5:37"
          },
          {
            "baseName": {
              "id": 7885,
              "name": "BToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11314,
              "src": "746:6:37"
            },
            "id": 7886,
            "nodeType": "InheritanceSpecifier",
            "src": "746:6:37"
          },
          {
            "baseName": {
              "id": 7887,
              "name": "IPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28512,
              "src": "754:5:37"
            },
            "id": 7888,
            "nodeType": "InheritanceSpecifier",
            "src": "754:5:37"
          }
        ],
        "canonicalName": "BPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7882,
          "nodeType": "StructuredDocumentation",
          "src": "360:360:37",
          "text": " @title BPool\n @dev Used by the (Ocean version) BFactory contract as a bytecode reference to\n      deploy new BPools.\n This contract is a friendly fork of Balancer [1]\n  [1] https://github.com/balancer-labs/balancer-core/contracts/.\n All fees are expressed in wei.  Examples:\n  (1e17 = 10 % , 1e16 = 1% , 1e15 = 0.1%, 1e14 = 0.01%)"
        },
        "fullyImplemented": true,
        "id": 10803,
        "linearizedBaseContracts": [
          10803,
          28512,
          11314,
          11015,
          7397,
          7874,
          6341
        ],
        "name": "BPool",
        "nameLocation": "730:5:37",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7892,
            "libraryName": {
              "id": 7889,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25826,
              "src": "772:9:37"
            },
            "nodeType": "UsingForDirective",
            "src": "766:27:37",
            "typeName": {
              "id": 7891,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7890,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3084,
                "src": "786:6:37"
              },
              "referencedDeclaration": 3084,
              "src": "786:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3084",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "BPool.Record",
            "id": 7901,
            "members": [
              {
                "constant": false,
                "id": 7894,
                "mutability": "mutable",
                "name": "bound",
                "nameLocation": "827:5:37",
                "nodeType": "VariableDeclaration",
                "scope": 7901,
                "src": "822:10:37",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7893,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "822:4:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7896,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "876:5:37",
                "nodeType": "VariableDeclaration",
                "scope": 7901,
                "src": "868:13:37",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7895,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "868:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7898,
                "mutability": "mutable",
                "name": "denorm",
                "nameLocation": "910:6:37",
                "nodeType": "VariableDeclaration",
                "scope": 7901,
                "src": "902:14:37",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7897,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "902:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7900,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "957:7:37",
                "nodeType": "VariableDeclaration",
                "scope": 7901,
                "src": "949:15:37",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7899,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "949:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Record",
            "nameLocation": "805:6:37",
            "nodeType": "StructDefinition",
            "scope": 10803,
            "src": "798:173:37",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 7921,
            "name": "LOG_SWAP",
            "nameLocation": "983:8:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7903,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1017:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7921,
                  "src": "1001:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7905,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "1049:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7921,
                  "src": "1033:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7907,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "1082:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7921,
                  "src": "1066:24:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7909,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmountIn",
                  "nameLocation": "1108:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7921,
                  "src": "1100:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7911,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmountOut",
                  "nameLocation": "1139:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7921,
                  "src": "1131:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7913,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1171:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7921,
                  "src": "1163:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7915,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "inBalance",
                  "nameLocation": "1198:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7921,
                  "src": "1190:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7917,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "outBalance",
                  "nameLocation": "1225:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7921,
                  "src": "1217:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7919,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newSpotPrice",
                  "nameLocation": "1253:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7921,
                  "src": "1245:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "991:280:37"
            },
            "src": "977:295:37"
          },
          {
            "anonymous": false,
            "id": 7931,
            "name": "LOG_JOIN",
            "nameLocation": "1284:8:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7923,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1318:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7931,
                  "src": "1302:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1302:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7925,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "1350:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7931,
                  "src": "1334:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7927,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmountIn",
                  "nameLocation": "1375:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7931,
                  "src": "1367:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7929,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1406:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7931,
                  "src": "1398:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1292:129:37"
            },
            "src": "1278:144:37"
          },
          {
            "anonymous": false,
            "id": 7947,
            "name": "LOG_SETUP",
            "nameLocation": "1433:9:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7933,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1468:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7947,
                  "src": "1452:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7935,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "1500:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7947,
                  "src": "1484:25:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1484:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7937,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseTokenAmountIn",
                  "nameLocation": "1527:17:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7947,
                  "src": "1519:25:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7939,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseTokenWeight",
                  "nameLocation": "1562:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7947,
                  "src": "1554:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7941,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "datatoken",
                  "nameLocation": "1603:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7947,
                  "src": "1587:25:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7943,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "datatokenAmountIn",
                  "nameLocation": "1630:17:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7947,
                  "src": "1622:25:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1622:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7945,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "datatokenWeight",
                  "nameLocation": "1665:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7947,
                  "src": "1657:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1442:244:37"
            },
            "src": "1427:260:37"
          },
          {
            "anonymous": false,
            "id": 7957,
            "name": "LOG_EXIT",
            "nameLocation": "1699:8:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7949,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1733:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7957,
                  "src": "1717:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7951,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "1765:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7957,
                  "src": "1749:24:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7953,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmountOut",
                  "nameLocation": "1791:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7957,
                  "src": "1783:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7955,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1823:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7957,
                  "src": "1815:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1707:131:37"
            },
            "src": "1693:146:37"
          },
          {
            "anonymous": false,
            "id": 7967,
            "name": "LOG_CALL",
            "nameLocation": "1851:8:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7959,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1884:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7967,
                  "src": "1869:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7958,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1869:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7961,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1913:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7967,
                  "src": "1897:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7963,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1937:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7967,
                  "src": "1929:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7965,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1962:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7967,
                  "src": "1956:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7964,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1956:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1859:113:37"
            },
            "src": "1845:128:37"
          },
          {
            "anonymous": false,
            "id": 7971,
            "name": "LOG_BPT",
            "nameLocation": "1985:7:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7969,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bptAmount",
                  "nameLocation": "2001:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "1993:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1992:19:37"
            },
            "src": "1979:33:37"
          },
          {
            "anonymous": false,
            "id": 7975,
            "name": "LOG_BPT_SS",
            "nameLocation": "2023:10:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7973,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bptAmount",
                  "nameLocation": "2042:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7975,
                  "src": "2034:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:19:37"
            },
            "src": "2017:36:37"
          },
          {
            "anonymous": false,
            "id": 7985,
            "name": "OPCFee",
            "nameLocation": "2091:6:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7977,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "2115:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7985,
                  "src": "2107:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7979,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "OPCWallet",
                  "nameLocation": "2139:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7985,
                  "src": "2131:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7981,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2166:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7985,
                  "src": "2158:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7983,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2189:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7985,
                  "src": "2181:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2181:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2097:104:37"
            },
            "src": "2085:117:37"
          },
          {
            "anonymous": false,
            "id": 7991,
            "name": "SwapFeeChanged",
            "nameLocation": "2213:14:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "2236:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7991,
                  "src": "2228:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2228:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7989,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2252:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7991,
                  "src": "2244:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2244:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2227:32:37"
            },
            "src": "2207:53:37"
          },
          {
            "anonymous": false,
            "id": 8001,
            "name": "PublishMarketFee",
            "nameLocation": "2271:16:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7993,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "2305:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8001,
                  "src": "2297:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2297:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7995,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "marketAddress",
                  "nameLocation": "2329:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8001,
                  "src": "2321:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7997,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2360:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8001,
                  "src": "2352:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7999,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2383:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8001,
                  "src": "2375:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2287:108:37"
            },
            "src": "2265:131:37"
          },
          {
            "anonymous": false,
            "id": 8009,
            "name": "ConsumeMarketFee",
            "nameLocation": "2452:16:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8003,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2477:2:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8009,
                  "src": "2469:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8005,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2489:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8009,
                  "src": "2481:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8007,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2504:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8009,
                  "src": "2496:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2496:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2468:43:37"
            },
            "src": "2446:66:37"
          },
          {
            "anonymous": false,
            "id": 8021,
            "name": "SWAP_FEES",
            "nameLocation": "2523:9:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8011,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "LPFeeAmount",
                  "nameLocation": "2538:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "2533:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8010,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2533:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8013,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oceanFeeAmount",
                  "nameLocation": "2556:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "2551:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8012,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8015,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "marketFeeAmount",
                  "nameLocation": "2577:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "2572:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8014,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2572:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8017,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "consumeMarketFeeAmount",
                  "nameLocation": "2607:22:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "2602:27:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8016,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2602:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8019,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenFeeAddress",
                  "nameLocation": "2639:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "2631:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2631:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2532:123:37"
            },
            "src": "2517:139:37"
          },
          {
            "anonymous": false,
            "id": 8029,
            "name": "PublishMarketFeeChanged",
            "nameLocation": "2722:23:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8023,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "2754:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8029,
                  "src": "2746:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2746:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8025,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMarketCollector",
                  "nameLocation": "2770:18:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8029,
                  "src": "2762:26:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8027,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "swapFee",
                  "nameLocation": "2798:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8029,
                  "src": "2790:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2745:61:37"
            },
            "src": "2716:91:37"
          },
          {
            "anonymous": false,
            "id": 8037,
            "name": "Gulped",
            "nameLocation": "2818:6:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8031,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2833:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "2825:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2825:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8033,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldBalance",
                  "nameLocation": "2848:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "2840:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2840:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8035,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newBalance",
                  "nameLocation": "2868:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "2860:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2824:55:37"
            },
            "src": "2812:68:37"
          },
          {
            "body": {
              "id": 8054,
              "nodeType": "Block",
              "src": "2903:106:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2921:7:37",
                        "subExpression": {
                          "id": 8040,
                          "name": "_mutex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8067,
                          "src": "2922:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f5245454e545259",
                        "id": 8042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2930:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8186a91a8af60eddd7d544682e1b6922f650fc04d86fd0e4ee40391168ca67e4",
                          "typeString": "literal_string \"ERR_REENTRY\""
                        },
                        "value": "ERR_REENTRY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8186a91a8af60eddd7d544682e1b6922f650fc04d86fd0e4ee40391168ca67e4",
                          "typeString": "literal_string \"ERR_REENTRY\""
                        }
                      ],
                      "id": 8039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2913:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:31:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8044,
                  "nodeType": "ExpressionStatement",
                  "src": "2913:31:37"
                },
                {
                  "expression": {
                    "id": 8047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8045,
                      "name": "_mutex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8067,
                      "src": "2954:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2963:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2954:13:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8048,
                  "nodeType": "ExpressionStatement",
                  "src": "2954:13:37"
                },
                {
                  "id": 8049,
                  "nodeType": "PlaceholderStatement",
                  "src": "2977:1:37"
                },
                {
                  "expression": {
                    "id": 8052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8050,
                      "name": "_mutex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8067,
                      "src": "2988:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 8051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2997:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2988:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8053,
                  "nodeType": "ExpressionStatement",
                  "src": "2988:14:37"
                }
              ]
            },
            "id": 8055,
            "name": "_lock_",
            "nameLocation": "2894:6:37",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2900:2:37"
            },
            "src": "2885:124:37",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8064,
              "nodeType": "Block",
              "src": "3037:59:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3055:7:37",
                        "subExpression": {
                          "id": 8058,
                          "name": "_mutex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8067,
                          "src": "3056:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f5245454e545259",
                        "id": 8060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3064:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8186a91a8af60eddd7d544682e1b6922f650fc04d86fd0e4ee40391168ca67e4",
                          "typeString": "literal_string \"ERR_REENTRY\""
                        },
                        "value": "ERR_REENTRY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8186a91a8af60eddd7d544682e1b6922f650fc04d86fd0e4ee40391168ca67e4",
                          "typeString": "literal_string \"ERR_REENTRY\""
                        }
                      ],
                      "id": 8057,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3047:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3047:31:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8062,
                  "nodeType": "ExpressionStatement",
                  "src": "3047:31:37"
                },
                {
                  "id": 8063,
                  "nodeType": "PlaceholderStatement",
                  "src": "3088:1:37"
                }
              ]
            },
            "id": 8065,
            "name": "_viewlock_",
            "nameLocation": "3024:10:37",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3034:2:37"
            },
            "src": "3015:81:37",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8067,
            "mutability": "mutable",
            "name": "_mutex",
            "nameLocation": "3115:6:37",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "3102:19:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8066,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3102:4:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8069,
            "mutability": "mutable",
            "name": "_controller",
            "nameLocation": "3144:11:37",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "3128:27:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8068,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3128:7:37",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8071,
            "mutability": "mutable",
            "name": "_publicSwap",
            "nameLocation": "3194:11:37",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "3181:24:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8070,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3181:4:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "638c9e95",
            "id": 8073,
            "mutability": "mutable",
            "name": "_publishMarketCollector",
            "nameLocation": "3315:23:37",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "3300:38:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8072,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3300:7:37",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8075,
            "mutability": "mutable",
            "name": "_finalized",
            "nameLocation": "3468:10:37",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "3455:23:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8074,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3455:4:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8078,
            "mutability": "mutable",
            "name": "_tokens",
            "nameLocation": "3503:7:37",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "3485:25:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 8076,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3485:7:37",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 8077,
              "nodeType": "ArrayTypeName",
              "src": "3485:9:37",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8083,
            "mutability": "mutable",
            "name": "_records",
            "nameLocation": "3551:8:37",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "3516:43:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
              "typeString": "mapping(address => struct BPool.Record)"
            },
            "typeName": {
              "id": 8082,
              "keyType": {
                "id": 8079,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3524:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3516:26:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                "typeString": "mapping(address => struct BPool.Record)"
              },
              "valueType": {
                "id": 8081,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 8080,
                  "name": "Record",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7901,
                  "src": "3535:6:37"
                },
                "referencedDeclaration": 7901,
                "src": "3535:6:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                  "typeString": "struct BPool.Record"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8085,
            "mutability": "mutable",
            "name": "_totalWeight",
            "nameLocation": "3581:12:37",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "3565:28:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8084,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3565:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8088,
            "mutability": "mutable",
            "name": "ssContract",
            "nameLocation": "3612:10:37",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "3599:23:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISideStaking_$4398",
              "typeString": "contract ISideStaking"
            },
            "typeName": {
              "id": 8087,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8086,
                "name": "ISideStaking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4398,
                "src": "3599:12:37"
              },
              "referencedDeclaration": 4398,
              "src": "3599:12:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISideStaking_$4398",
                "typeString": "contract ISideStaking"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8090,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "3762:11:37",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "3749:24:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8089,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3749:4:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              28493
            ],
            "body": {
              "id": 8098,
              "nodeType": "Block",
              "src": "4018:25:37",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 8096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4035:1:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 8095,
                  "id": 8097,
                  "nodeType": "Return",
                  "src": "4028:8:37"
                }
              ]
            },
            "documentation": {
              "id": 8091,
              "nodeType": "StructuredDocumentation",
              "src": "3780:188:37",
              "text": " @dev getId\n      Return template id in case we need different ABIs. \n      If you construct your own template, please make sure to change the hardcoded value"
            },
            "functionSelector": "5d1ca631",
            "id": 8099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getId",
            "nameLocation": "3982:5:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3987:2:37"
            },
            "returnParameters": {
              "id": 8095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8094,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8099,
                  "src": "4011:5:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8093,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4011:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4010:7:37"
            },
            "scope": 10803,
            "src": "3973:70:37",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8106,
              "nodeType": "Block",
              "src": "4103:35:37",
              "statements": [
                {
                  "expression": {
                    "id": 8104,
                    "name": "initialized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8090,
                    "src": "4120:11:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8103,
                  "id": 8105,
                  "nodeType": "Return",
                  "src": "4113:18:37"
                }
              ]
            },
            "functionSelector": "392e53cd",
            "id": 8107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInitialized",
            "nameLocation": "4058:13:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4071:2:37"
            },
            "returnParameters": {
              "id": 8103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8102,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8107,
                  "src": "4097:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8101,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4096:6:37"
            },
            "scope": 10803,
            "src": "4049:89:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8209,
              "nodeType": "Block",
              "src": "4573:699:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4591:12:37",
                        "subExpression": {
                          "id": 8132,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8090,
                          "src": "4592:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f414c52454144595f494e495449414c495a4544",
                        "id": 8134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4605:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1fb8797b66eca6c15df697c66cc4b5186be8e5c9588f384f789ecfab2607b249",
                          "typeString": "literal_string \"ERR_ALREADY_INITIALIZED\""
                        },
                        "value": "ERR_ALREADY_INITIALIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1fb8797b66eca6c15df697c66cc4b5186be8e5c9588f384f789ecfab2607b249",
                          "typeString": "literal_string \"ERR_ALREADY_INITIALIZED\""
                        }
                      ],
                      "id": 8131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4583:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:48:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8136,
                  "nodeType": "ExpressionStatement",
                  "src": "4583:48:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8138,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8109,
                          "src": "4649:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4671:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4663:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8139,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4663:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4663:10:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4649:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f494e56414c49445f434f4e54524f4c4c45525f41444452455353",
                        "id": 8144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4675:32:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27bd7417075a75a6fa345231d32603870be38c05ec22dde6b19bc44a340342dd",
                          "typeString": "literal_string \"ERR_INVALID_CONTROLLER_ADDRESS\""
                        },
                        "value": "ERR_INVALID_CONTROLLER_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27bd7417075a75a6fa345231d32603870be38c05ec22dde6b19bc44a340342dd",
                          "typeString": "literal_string \"ERR_INVALID_CONTROLLER_ADDRESS\""
                        }
                      ],
                      "id": 8137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4641:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4641:67:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8146,
                  "nodeType": "ExpressionStatement",
                  "src": "4641:67:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8148,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8111,
                          "src": "4726:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4745:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4737:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8149,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4737:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4737:10:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4726:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f494e56414c49445f464143544f52595f41444452455353",
                        "id": 8154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4749:29:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea269bf0660439ffbd72480b6b4854b47a9bcddbad5646f4d4f582f8c48bd39b",
                          "typeString": "literal_string \"ERR_INVALID_FACTORY_ADDRESS\""
                        },
                        "value": "ERR_INVALID_FACTORY_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea269bf0660439ffbd72480b6b4854b47a9bcddbad5646f4d4f582f8c48bd39b",
                          "typeString": "literal_string \"ERR_INVALID_FACTORY_ADDRESS\""
                        }
                      ],
                      "id": 8147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4718:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4718:61:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8156,
                  "nodeType": "ExpressionStatement",
                  "src": "4718:61:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 8158,
                            "name": "swapFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8114,
                            "src": "4797:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 8160,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 8159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4806:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4797:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8161,
                          "name": "MIN_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6280,
                          "src": "4812:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4797:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d494e5f464545",
                        "id": 8163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4821:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c95b37766e2e0764ffbea08cf33d7dd980794ea2229cf2b30f9a53dfb48c0a5",
                          "typeString": "literal_string \"ERR_MIN_FEE\""
                        },
                        "value": "ERR_MIN_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c95b37766e2e0764ffbea08cf33d7dd980794ea2229cf2b30f9a53dfb48c0a5",
                          "typeString": "literal_string \"ERR_MIN_FEE\""
                        }
                      ],
                      "id": 8157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4789:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4789:46:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8165,
                  "nodeType": "ExpressionStatement",
                  "src": "4789:46:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 8167,
                            "name": "swapFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8114,
                            "src": "4853:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 8169,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 8168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4862:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4853:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 8170,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "4868:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4853:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d41585f464545",
                        "id": 8172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4877:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_889e9e6c0c0fb5bbb40eea41a5a6b8208c6005e0eb9ab1570db8ca4038ab2ca2",
                          "typeString": "literal_string \"ERR_MAX_FEE\""
                        },
                        "value": "ERR_MAX_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_889e9e6c0c0fb5bbb40eea41a5a6b8208c6005e0eb9ab1570db8ca4038ab2ca2",
                          "typeString": "literal_string \"ERR_MAX_FEE\""
                        }
                      ],
                      "id": 8166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4845:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4845:46:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8174,
                  "nodeType": "ExpressionStatement",
                  "src": "4845:46:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 8176,
                              "name": "swapFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8114,
                              "src": "4909:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 8178,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 8177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4918:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4909:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 8179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4924:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4909:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 8181,
                              "name": "swapFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8114,
                              "src": "4929:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 8183,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 8182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4938:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4929:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 8184,
                            "name": "MIN_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6280,
                            "src": "4943:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4929:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4909:41:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d494e5f464545",
                        "id": 8187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4952:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c95b37766e2e0764ffbea08cf33d7dd980794ea2229cf2b30f9a53dfb48c0a5",
                          "typeString": "literal_string \"ERR_MIN_FEE\""
                        },
                        "value": "ERR_MIN_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c95b37766e2e0764ffbea08cf33d7dd980794ea2229cf2b30f9a53dfb48c0a5",
                          "typeString": "literal_string \"ERR_MIN_FEE\""
                        }
                      ],
                      "id": 8175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4901:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:65:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8189,
                  "nodeType": "ExpressionStatement",
                  "src": "4901:65:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 8191,
                            "name": "swapFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8114,
                            "src": "4984:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 8193,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 8192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4993:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4984:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 8194,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "4999:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4984:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d41585f464545",
                        "id": 8196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5008:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_889e9e6c0c0fb5bbb40eea41a5a6b8208c6005e0eb9ab1570db8ca4038ab2ca2",
                          "typeString": "literal_string \"ERR_MAX_FEE\""
                        },
                        "value": "ERR_MAX_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_889e9e6c0c0fb5bbb40eea41a5a6b8208c6005e0eb9ab1570db8ca4038ab2ca2",
                          "typeString": "literal_string \"ERR_MAX_FEE\""
                        }
                      ],
                      "id": 8190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4976:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4976:46:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8198,
                  "nodeType": "ExpressionStatement",
                  "src": "4976:46:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8200,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8109,
                        "src": "5080:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8201,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8111,
                        "src": "5108:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8202,
                        "name": "swapFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8114,
                        "src": "5133:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 8203,
                        "name": "publicSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8116,
                        "src": "5159:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8204,
                        "name": "finalized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8118,
                        "src": "5187:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8205,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8122,
                        "src": "5214:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_calldata_ptr",
                          "typeString": "address[2] calldata"
                        }
                      },
                      {
                        "id": 8206,
                        "name": "feeCollectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8126,
                        "src": "5238:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$1_calldata_ptr",
                          "typeString": "address[1] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$2_calldata_ptr",
                          "typeString": "address[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$1_calldata_ptr",
                          "typeString": "address[1] calldata"
                        }
                      ],
                      "id": 8199,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8306,
                      "src": "5051:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_bool_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_address_$1_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256[] memory,bool,bool,address[2] memory,address[1] memory) returns (bool)"
                      }
                    },
                    "id": 8207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5051:214:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8130,
                  "id": 8208,
                  "nodeType": "Return",
                  "src": "5032:233:37"
                }
              ]
            },
            "functionSelector": "284e97a9",
            "id": 8210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "4314:10:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8109,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "4342:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "4334:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8111,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "4370:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "4362:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4362:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8114,
                  "mutability": "mutable",
                  "name": "swapFees",
                  "nameLocation": "4406:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "4387:27:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8112,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4387:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8113,
                    "nodeType": "ArrayTypeName",
                    "src": "4387:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8116,
                  "mutability": "mutable",
                  "name": "publicSwap",
                  "nameLocation": "4429:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "4424:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8115,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4424:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8118,
                  "mutability": "mutable",
                  "name": "finalized",
                  "nameLocation": "4454:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "4449:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4449:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8122,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "4493:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "4473:26:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_calldata_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8119,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4473:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8121,
                    "length": {
                      "hexValue": "32",
                      "id": 8120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4481:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4473:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8126,
                  "mutability": "mutable",
                  "name": "feeCollectors",
                  "nameLocation": "4529:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "4509:33:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$1_calldata_ptr",
                    "typeString": "address[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8123,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4509:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8125,
                    "length": {
                      "hexValue": "31",
                      "id": 8124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4517:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4509:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$1_storage_ptr",
                      "typeString": "address[1]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4324:224:37"
            },
            "returnParameters": {
              "id": 8130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "4567:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4567:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4566:6:37"
            },
            "scope": 10803,
            "src": "4305:967:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8305,
              "nodeType": "Block",
              "src": "5599:595:37",
              "statements": [
                {
                  "expression": {
                    "id": 8236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8234,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8069,
                      "src": "5609:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8235,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8212,
                      "src": "5623:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5609:24:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8237,
                  "nodeType": "ExpressionStatement",
                  "src": "5609:24:37"
                },
                {
                  "expression": {
                    "id": 8240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8238,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6738,
                      "src": "5643:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8239,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8214,
                      "src": "5654:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5643:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8241,
                  "nodeType": "ExpressionStatement",
                  "src": "5643:18:37"
                },
                {
                  "expression": {
                    "id": 8246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8242,
                      "name": "_swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6736,
                      "src": "5671:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 8243,
                        "name": "swapFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8217,
                        "src": "5682:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 8245,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 8244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5691:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5682:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5671:22:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8247,
                  "nodeType": "ExpressionStatement",
                  "src": "5671:22:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8249,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5723:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5723:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8251,
                        "name": "_swapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6736,
                        "src": "5735:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8248,
                      "name": "SwapFeeChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7991,
                      "src": "5708:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5708:36:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8253,
                  "nodeType": "EmitStatement",
                  "src": "5703:41:37"
                },
                {
                  "expression": {
                    "id": 8258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8254,
                      "name": "_swapPublishMarketFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6734,
                      "src": "5754:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 8255,
                        "name": "swapFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8217,
                        "src": "5778:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 8257,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 8256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5787:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5778:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5754:35:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8259,
                  "nodeType": "ExpressionStatement",
                  "src": "5754:35:37"
                },
                {
                  "expression": {
                    "id": 8262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8260,
                      "name": "_publicSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8071,
                      "src": "5799:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8261,
                      "name": "publicSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8219,
                      "src": "5813:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5799:24:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8263,
                  "nodeType": "ExpressionStatement",
                  "src": "5799:24:37"
                },
                {
                  "expression": {
                    "id": 8266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8264,
                      "name": "_finalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8075,
                      "src": "5833:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8265,
                      "name": "finalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8221,
                      "src": "5846:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5833:22:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8267,
                  "nodeType": "ExpressionStatement",
                  "src": "5833:22:37"
                },
                {
                  "expression": {
                    "id": 8272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8268,
                      "name": "_datatokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6740,
                      "src": "5865:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 8269,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8225,
                        "src": "5885:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      "id": 8271,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 8270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5892:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5885:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5865:29:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8273,
                  "nodeType": "ExpressionStatement",
                  "src": "5865:29:37"
                },
                {
                  "expression": {
                    "id": 8278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8274,
                      "name": "_baseTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6742,
                      "src": "5904:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 8275,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8225,
                        "src": "5924:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      "id": 8277,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 8276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5931:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5924:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5904:29:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8279,
                  "nodeType": "ExpressionStatement",
                  "src": "5904:29:37"
                },
                {
                  "expression": {
                    "id": 8284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8280,
                      "name": "_publishMarketCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8073,
                      "src": "5943:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 8281,
                        "name": "feeCollectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8229,
                        "src": "5969:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$1_memory_ptr",
                          "typeString": "address[1] memory"
                        }
                      },
                      "id": 8283,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 8282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5983:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5969:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5943:42:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8285,
                  "nodeType": "ExpressionStatement",
                  "src": "5943:42:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8287,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6024:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6024:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8289,
                        "name": "_publishMarketCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8073,
                        "src": "6036:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8290,
                        "name": "_swapPublishMarketFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6734,
                        "src": "6061:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8286,
                      "name": "PublishMarketFeeChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8029,
                      "src": "6000:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6000:83:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8292,
                  "nodeType": "EmitStatement",
                  "src": "5995:88:37"
                },
                {
                  "expression": {
                    "id": 8295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8293,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8090,
                      "src": "6093:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6107:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6093:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8296,
                  "nodeType": "ExpressionStatement",
                  "src": "6093:18:37"
                },
                {
                  "expression": {
                    "id": 8301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8297,
                      "name": "ssContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8088,
                      "src": "6121:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISideStaking_$4398",
                        "typeString": "contract ISideStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8299,
                          "name": "_controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8069,
                          "src": "6147:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8298,
                        "name": "ISideStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4398,
                        "src": "6134:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISideStaking_$4398_$",
                          "typeString": "type(contract ISideStaking)"
                        }
                      },
                      "id": 8300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6134:25:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISideStaking_$4398",
                        "typeString": "contract ISideStaking"
                      }
                    },
                    "src": "6121:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISideStaking_$4398",
                      "typeString": "contract ISideStaking"
                    }
                  },
                  "id": 8302,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:38:37"
                },
                {
                  "expression": {
                    "id": 8303,
                    "name": "initialized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8090,
                    "src": "6176:11:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8233,
                  "id": 8304,
                  "nodeType": "Return",
                  "src": "6169:18:37"
                }
              ]
            },
            "id": 8306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initialize",
            "nameLocation": "5346:11:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8212,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "5375:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8306,
                  "src": "5367:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5367:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8214,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "5403:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8306,
                  "src": "5395:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5395:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8217,
                  "mutability": "mutable",
                  "name": "swapFees",
                  "nameLocation": "5437:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8306,
                  "src": "5420:25:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8215,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5420:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8216,
                    "nodeType": "ArrayTypeName",
                    "src": "5420:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8219,
                  "mutability": "mutable",
                  "name": "publicSwap",
                  "nameLocation": "5460:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8306,
                  "src": "5455:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5455:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8221,
                  "mutability": "mutable",
                  "name": "finalized",
                  "nameLocation": "5485:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8306,
                  "src": "5480:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8220,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5480:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8225,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "5522:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8306,
                  "src": "5504:24:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8222,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5504:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8224,
                    "length": {
                      "hexValue": "32",
                      "id": 8223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5512:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5504:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8229,
                  "mutability": "mutable",
                  "name": "feeCollectors",
                  "nameLocation": "5556:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8306,
                  "src": "5538:31:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$1_memory_ptr",
                    "typeString": "address[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8226,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5538:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8228,
                    "length": {
                      "hexValue": "31",
                      "id": 8227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5546:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5538:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$1_storage_ptr",
                      "typeString": "address[1]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5357:218:37"
            },
            "returnParameters": {
              "id": 8233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8232,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8306,
                  "src": "5593:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8231,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5593:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5592:6:37"
            },
            "scope": 10803,
            "src": "5337:857:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              28411
            ],
            "body": {
              "id": 8390,
              "nodeType": "Block",
              "src": "6950:1159:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8325,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6968:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6968:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8327,
                          "name": "_controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8069,
                          "src": "6982:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6968:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f494e56414c49445f434f4e54524f4c4c4552",
                        "id": 8329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6995:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ceee73539884122a220e10878964bc13a9a0708a3265c2779c66e80fee67e9f",
                          "typeString": "literal_string \"ERR_INVALID_CONTROLLER\""
                        },
                        "value": "ERR_INVALID_CONTROLLER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ceee73539884122a220e10878964bc13a9a0708a3265c2779c66e80fee67e9f",
                          "typeString": "literal_string \"ERR_INVALID_CONTROLLER\""
                        }
                      ],
                      "id": 8324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6960:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6960:60:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8331,
                  "nodeType": "ExpressionStatement",
                  "src": "6960:60:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8333,
                          "name": "datatokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8309,
                          "src": "7051:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8334,
                          "name": "_datatokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6740,
                          "src": "7071:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7051:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f494e56414c49445f44415441544f4b454e5f41444452455353",
                        "id": 8336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7102:31:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c32bb61c112b11a0a138368229143b221c7b45bb96a8d15205ee6861a5ea6632",
                          "typeString": "literal_string \"ERR_INVALID_DATATOKEN_ADDRESS\""
                        },
                        "value": "ERR_INVALID_DATATOKEN_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c32bb61c112b11a0a138368229143b221c7b45bb96a8d15205ee6861a5ea6632",
                          "typeString": "literal_string \"ERR_INVALID_DATATOKEN_ADDRESS\""
                        }
                      ],
                      "id": 8332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7030:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7030:113:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8338,
                  "nodeType": "ExpressionStatement",
                  "src": "7030:113:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8340,
                          "name": "baseTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8315,
                          "src": "7174:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8341,
                          "name": "_baseTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6742,
                          "src": "7194:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7174:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f494e56414c49445f62617365546f6b656e5f41444452455353",
                        "id": 8343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7225:31:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9084f33b965c38a065a98097097728508e816de31a810f34bef7f5a227e5bd1d",
                          "typeString": "literal_string \"ERR_INVALID_baseToken_ADDRESS\""
                        },
                        "value": "ERR_INVALID_baseToken_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9084f33b965c38a065a98097097728508e816de31a810f34bef7f5a227e5bd1d",
                          "typeString": "literal_string \"ERR_INVALID_baseToken_ADDRESS\""
                        }
                      ],
                      "id": 8339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7153:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7153:113:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8345,
                  "nodeType": "ExpressionStatement",
                  "src": "7153:113:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8347,
                        "name": "datatokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "7394:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8348,
                        "name": "datatokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8311,
                        "src": "7412:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8349,
                        "name": "datatokenWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8313,
                        "src": "7429:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8346,
                      "name": "bind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9075,
                      "src": "7389:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 8350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7389:56:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8351,
                  "nodeType": "ExpressionStatement",
                  "src": "7389:56:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8353,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7482:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7482:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8355,
                        "name": "datatokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "7506:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8356,
                        "name": "datatokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8311,
                        "src": "7536:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8357,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7565:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7565:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8352,
                      "name": "LOG_JOIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7931,
                      "src": "7460:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 8359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7460:130:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8360,
                  "nodeType": "EmitStatement",
                  "src": "7455:135:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8362,
                        "name": "baseTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8315,
                        "src": "7632:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8363,
                        "name": "baseTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8317,
                        "src": "7650:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8364,
                        "name": "baseTokenWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8319,
                        "src": "7667:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8361,
                      "name": "bind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9075,
                      "src": "7627:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 8365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7627:56:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8366,
                  "nodeType": "ExpressionStatement",
                  "src": "7627:56:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8368,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7720:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7720:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8370,
                        "name": "baseTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8315,
                        "src": "7744:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8371,
                        "name": "baseTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8317,
                        "src": "7774:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8372,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7803:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7803:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8367,
                      "name": "LOG_JOIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7931,
                      "src": "7698:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 8374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7698:130:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8375,
                  "nodeType": "EmitStatement",
                  "src": "7693:135:37"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8376,
                      "name": "finalize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9009,
                      "src": "7858:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7858:10:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8378,
                  "nodeType": "ExpressionStatement",
                  "src": "7858:10:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8380,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7906:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7906:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8382,
                        "name": "baseTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8315,
                        "src": "7930:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8383,
                        "name": "baseTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8317,
                        "src": "7960:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8384,
                        "name": "baseTokenWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8319,
                        "src": "7989:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8385,
                        "name": "datatokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "8018:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8386,
                        "name": "datatokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8311,
                        "src": "8048:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8387,
                        "name": "datatokenWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8313,
                        "src": "8077:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8379,
                      "name": "LOG_SETUP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7947,
                      "src": "7883:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 8388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7883:219:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8389,
                  "nodeType": "EmitStatement",
                  "src": "7878:224:37"
                }
              ]
            },
            "documentation": {
              "id": 8307,
              "nodeType": "StructuredDocumentation",
              "src": "6205:503:37",
              "text": " @dev setup\n      Initial setup of the pool\n      Can be called only by the controller\n @param datatokenAddress datatokenAddress\n @param datatokenAmount how many datatokens in the initial reserve\n @param datatokenWeight datatoken weight (hardcoded in deployer at 50%)\n @param baseTokenAddress base token\n @param baseTokenAmount how many basetokens in the initial reserve\n @param baseTokenWeight base weight (hardcoded in deployer at 50%)"
            },
            "functionSelector": "09ef3f5b",
            "id": 8391,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8322,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8321,
                  "name": "_lock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8055,
                  "src": "6943:6:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "6943:6:37"
              }
            ],
            "name": "setup",
            "nameLocation": "6722:5:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8309,
                  "mutability": "mutable",
                  "name": "datatokenAddress",
                  "nameLocation": "6745:16:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8391,
                  "src": "6737:24:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6737:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8311,
                  "mutability": "mutable",
                  "name": "datatokenAmount",
                  "nameLocation": "6779:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8391,
                  "src": "6771:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6771:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8313,
                  "mutability": "mutable",
                  "name": "datatokenWeight",
                  "nameLocation": "6812:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8391,
                  "src": "6804:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6804:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8315,
                  "mutability": "mutable",
                  "name": "baseTokenAddress",
                  "nameLocation": "6845:16:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8391,
                  "src": "6837:24:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6837:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8317,
                  "mutability": "mutable",
                  "name": "baseTokenAmount",
                  "nameLocation": "6879:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8391,
                  "src": "6871:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6871:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8319,
                  "mutability": "mutable",
                  "name": "baseTokenWeight",
                  "nameLocation": "6912:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8391,
                  "src": "6904:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6904:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6727:206:37"
            },
            "returnParameters": {
              "id": 8323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6950:0:37"
            },
            "scope": 10803,
            "src": "6713:1396:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8399,
              "nodeType": "Block",
              "src": "8375:35:37",
              "statements": [
                {
                  "expression": {
                    "id": 8397,
                    "name": "_publicSwap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8071,
                    "src": "8392:11:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8396,
                  "id": 8398,
                  "nodeType": "Return",
                  "src": "8385:18:37"
                }
              ]
            },
            "documentation": {
              "id": 8392,
              "nodeType": "StructuredDocumentation",
              "src": "8233:84:37",
              "text": " @dev isPublicSwap\n      Returns true if swapping is allowed"
            },
            "functionSelector": "fde924f7",
            "id": 8400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPublicSwap",
            "nameLocation": "8331:12:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8343:2:37"
            },
            "returnParameters": {
              "id": 8396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8400,
                  "src": "8369:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8394,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8369:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8368:6:37"
            },
            "scope": 10803,
            "src": "8322:88:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8408,
              "nodeType": "Block",
              "src": "8553:34:37",
              "statements": [
                {
                  "expression": {
                    "id": 8406,
                    "name": "_finalized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8075,
                    "src": "8570:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8405,
                  "id": 8407,
                  "nodeType": "Return",
                  "src": "8563:17:37"
                }
              ]
            },
            "documentation": {
              "id": 8401,
              "nodeType": "StructuredDocumentation",
              "src": "8415:81:37",
              "text": " @dev isFinalized\n      Returns true if pool is finalized"
            },
            "functionSelector": "8d4e4083",
            "id": 8409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isFinalized",
            "nameLocation": "8510:11:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8521:2:37"
            },
            "returnParameters": {
              "id": 8405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8404,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8409,
                  "src": "8547:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8403,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8547:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8546:6:37"
            },
            "scope": 10803,
            "src": "8501:86:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8422,
              "nodeType": "Block",
              "src": "8765:41:37",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 8417,
                        "name": "_records",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8083,
                        "src": "8782:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                          "typeString": "mapping(address => struct BPool.Record storage ref)"
                        }
                      },
                      "id": 8419,
                      "indexExpression": {
                        "id": 8418,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8412,
                        "src": "8791:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8782:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage",
                        "typeString": "struct BPool.Record storage ref"
                      }
                    },
                    "id": 8420,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "bound",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7894,
                    "src": "8782:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8416,
                  "id": 8421,
                  "nodeType": "Return",
                  "src": "8775:24:37"
                }
              ]
            },
            "documentation": {
              "id": 8410,
              "nodeType": "StructuredDocumentation",
              "src": "8593:110:37",
              "text": " @dev isBound\n      Returns true if token is bound\n @param t token to be checked"
            },
            "functionSelector": "2f37b624",
            "id": 8423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBound",
            "nameLocation": "8717:7:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8412,
                  "mutability": "mutable",
                  "name": "t",
                  "nameLocation": "8733:1:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8423,
                  "src": "8725:9:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8725:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8724:11:37"
            },
            "returnParameters": {
              "id": 8416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8415,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8423,
                  "src": "8759:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8414,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8759:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8758:6:37"
            },
            "scope": 10803,
            "src": "8708:98:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8436,
              "nodeType": "Block",
              "src": "8862:64:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8429,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "8880:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 8431,
                          "indexExpression": {
                            "id": 8430,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8425,
                            "src": "8889:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8880:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 8432,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bound",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7894,
                        "src": "8880:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4e4f545f424f554e44",
                        "id": 8433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8903:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86a01019fb9a24504897a9ddf06d43e29c7ad173d46588f4f7aa1ef14d3c847c",
                          "typeString": "literal_string \"ERR_NOT_BOUND\""
                        },
                        "value": "ERR_NOT_BOUND"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86a01019fb9a24504897a9ddf06d43e29c7ad173d46588f4f7aa1ef14d3c847c",
                          "typeString": "literal_string \"ERR_NOT_BOUND\""
                        }
                      ],
                      "id": 8428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8872:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8872:47:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8435,
                  "nodeType": "ExpressionStatement",
                  "src": "8872:47:37"
                }
              ]
            },
            "id": 8437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkBound",
            "nameLocation": "8821:11:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8425,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8841:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8437,
                  "src": "8833:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8833:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8832:15:37"
            },
            "returnParameters": {
              "id": 8427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8862:0:37"
            },
            "scope": 10803,
            "src": "8812:114:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8446,
              "nodeType": "Block",
              "src": "9082:38:37",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 8443,
                      "name": "_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8078,
                      "src": "9099:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 8444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "9099:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8442,
                  "id": 8445,
                  "nodeType": "Return",
                  "src": "9092:21:37"
                }
              ]
            },
            "documentation": {
              "id": 8438,
              "nodeType": "StructuredDocumentation",
              "src": "8932:89:37",
              "text": " @dev getNumTokens\n      Returns number of tokens bounded to pool"
            },
            "functionSelector": "cd2ed8fb",
            "id": 8447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumTokens",
            "nameLocation": "9035:12:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9047:2:37"
            },
            "returnParameters": {
              "id": 8442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8441,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8447,
                  "src": "9073:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9073:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9072:9:37"
            },
            "scope": 10803,
            "src": "9026:94:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8458,
              "nodeType": "Block",
              "src": "9367:31:37",
              "statements": [
                {
                  "expression": {
                    "id": 8456,
                    "name": "_tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8078,
                    "src": "9384:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 8455,
                  "id": 8457,
                  "nodeType": "Return",
                  "src": "9377:14:37"
                }
              ]
            },
            "documentation": {
              "id": 8448,
              "nodeType": "StructuredDocumentation",
              "src": "9126:113:37",
              "text": " @dev getCurrentTokens\n      Returns tokens bounded to pool, before the pool is finalized"
            },
            "functionSelector": "cc77828d",
            "id": 8459,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8451,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8450,
                  "name": "_viewlock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8065,
                  "src": "9310:10:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "9310:10:37"
              }
            ],
            "name": "getCurrentTokens",
            "nameLocation": "9253:16:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9269:2:37"
            },
            "returnParameters": {
              "id": 8455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8454,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "9355:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8459,
                  "src": "9338:23:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8452,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9338:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8453,
                    "nodeType": "ArrayTypeName",
                    "src": "9338:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9337:25:37"
            },
            "scope": 10803,
            "src": "9244:154:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8475,
              "nodeType": "Block",
              "src": "9639:81:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8469,
                        "name": "_finalized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8075,
                        "src": "9657:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4e4f545f46494e414c495a4544",
                        "id": 8470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9669:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e0a50e0802c41001c819a1d72124e98da239dcaeee85bac2236e5d8595f284f",
                          "typeString": "literal_string \"ERR_NOT_FINALIZED\""
                        },
                        "value": "ERR_NOT_FINALIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e0a50e0802c41001c819a1d72124e98da239dcaeee85bac2236e5d8595f284f",
                          "typeString": "literal_string \"ERR_NOT_FINALIZED\""
                        }
                      ],
                      "id": 8468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9649:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9649:40:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8472,
                  "nodeType": "ExpressionStatement",
                  "src": "9649:40:37"
                },
                {
                  "expression": {
                    "id": 8473,
                    "name": "_tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8078,
                    "src": "9706:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 8467,
                  "id": 8474,
                  "nodeType": "Return",
                  "src": "9699:14:37"
                }
              ]
            },
            "documentation": {
              "id": 8460,
              "nodeType": "StructuredDocumentation",
              "src": "9404:111:37",
              "text": " @dev getFinalTokens\n      Returns tokens bounded to pool, after the pool was finalized"
            },
            "functionSelector": "be3bbd2e",
            "id": 8476,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8462,
                  "name": "_viewlock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8065,
                  "src": "9582:10:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "9582:10:37"
              }
            ],
            "name": "getFinalTokens",
            "nameLocation": "9529:14:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9543:2:37"
            },
            "returnParameters": {
              "id": 8467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8466,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "9627:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8476,
                  "src": "9610:23:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8464,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9610:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8465,
                    "nodeType": "ArrayTypeName",
                    "src": "9610:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9609:25:37"
            },
            "scope": 10803,
            "src": "9520:200:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8545,
              "nodeType": "Block",
              "src": "9952:438:37",
              "statements": [
                {
                  "assignments": [
                    8484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8484,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "9979:6:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 8545,
                      "src": "9962:23:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9962:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8483,
                        "nodeType": "ArrayTypeName",
                        "src": "9962:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8487,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8485,
                      "name": "getFinalTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8476,
                      "src": "9988:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (address[] memory)"
                      }
                    },
                    "id": 8486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9988:16:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9962:42:37"
                },
                {
                  "body": {
                    "id": 8543,
                    "nodeType": "Block",
                    "src": "10058:326:37",
                    "statements": [
                      {
                        "assignments": [
                          8500
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8500,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "10080:6:37",
                            "nodeType": "VariableDeclaration",
                            "scope": 8543,
                            "src": "10072:14:37",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8499,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10072:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8506,
                        "initialValue": {
                          "baseExpression": {
                            "id": 8501,
                            "name": "communityFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6746,
                            "src": "10089:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 8505,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 8502,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8484,
                              "src": "10103:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8504,
                            "indexExpression": {
                              "id": 8503,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8489,
                              "src": "10110:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10103:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10089:24:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10072:41:37"
                      },
                      {
                        "expression": {
                          "id": 8513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8507,
                              "name": "communityFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6746,
                              "src": "10127:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 8511,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 8508,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8484,
                                "src": "10141:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8510,
                              "indexExpression": {
                                "id": 8509,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8489,
                                "src": "10148:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10141:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10127:24:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 8512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10154:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10127:28:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8514,
                        "nodeType": "ExpressionStatement",
                        "src": "10127:28:37"
                      },
                      {
                        "assignments": [
                          8516
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8516,
                            "mutability": "mutable",
                            "name": "_opcCollector",
                            "nameLocation": "10177:13:37",
                            "nodeType": "VariableDeclaration",
                            "scope": 8543,
                            "src": "10169:21:37",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 8515,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10169:7:37",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8522,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8518,
                                  "name": "_factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6738,
                                  "src": "10208:8:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8517,
                                "name": "IFactoryRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4096,
                                "src": "10193:14:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactoryRouter_$4096_$",
                                  "typeString": "type(contract IFactoryRouter)"
                                }
                              },
                              "id": 8519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10193:24:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactoryRouter_$4096",
                                "typeString": "contract IFactoryRouter"
                              }
                            },
                            "id": 8520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOPCCollector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4095,
                            "src": "10193:40:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 8521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10193:42:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10169:66:37"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8524,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10261:3:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10261:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8526,
                              "name": "_opcCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8516,
                              "src": "10273:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 8527,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8484,
                                "src": "10288:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8529,
                              "indexExpression": {
                                "id": 8528,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8489,
                                "src": "10295:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10288:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8530,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8500,
                              "src": "10299:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8523,
                            "name": "OPCFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7985,
                            "src": "10254:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 8531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10254:52:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8532,
                        "nodeType": "EmitStatement",
                        "src": "10249:57:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8539,
                              "name": "_opcCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8516,
                              "src": "10351:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8540,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8500,
                              "src": "10366:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 8534,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8484,
                                    "src": "10327:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 8536,
                                  "indexExpression": {
                                    "id": 8535,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8489,
                                    "src": "10334:1:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10327:9:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8533,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "10320:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10320:17:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3084",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25633,
                            "src": "10320:30:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3084_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3084_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10320:53:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8542,
                        "nodeType": "ExpressionStatement",
                        "src": "10320:53:37"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8492,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8489,
                      "src": "10034:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 8493,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8484,
                        "src": "10038:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 8494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10038:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10034:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8544,
                  "initializationExpression": {
                    "assignments": [
                      8489
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8489,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10027:1:37",
                        "nodeType": "VariableDeclaration",
                        "scope": 8544,
                        "src": "10019:9:37",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10019:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8491,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10031:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10019:13:37"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10053:3:37",
                      "subExpression": {
                        "id": 8496,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8489,
                        "src": "10053:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8498,
                    "nodeType": "ExpressionStatement",
                    "src": "10053:3:37"
                  },
                  "nodeType": "ForStatement",
                  "src": "10014:370:37"
                }
              ]
            },
            "documentation": {
              "id": 8477,
              "nodeType": "StructuredDocumentation",
              "src": "9726:190:37",
              "text": " @dev collectOPC\n      Collects and send all OPC Fees to _opcCollector.\n      This funtion can be called by anyone, because fees are being sent to _opcCollector"
            },
            "functionSelector": "ab77a2de",
            "id": 8546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectOPC",
            "nameLocation": "9930:10:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9940:2:37"
            },
            "returnParameters": {
              "id": 8479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9952:0:37"
            },
            "scope": 10803,
            "src": "9921:469:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8623,
              "nodeType": "Block",
              "src": "10728:396:37",
              "statements": [
                {
                  "assignments": [
                    8560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8560,
                      "mutability": "mutable",
                      "name": "poolTokens",
                      "nameLocation": "10755:10:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 8623,
                      "src": "10738:27:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8558,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10738:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8559,
                        "nodeType": "ArrayTypeName",
                        "src": "10738:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8563,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8561,
                      "name": "getFinalTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8476,
                      "src": "10768:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (address[] memory)"
                      }
                    },
                    "id": 8562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10768:16:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10738:46:37"
                },
                {
                  "assignments": [
                    8568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8568,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "10811:6:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 8623,
                      "src": "10794:23:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8566,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10794:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8567,
                        "nodeType": "ArrayTypeName",
                        "src": "10794:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8575,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8572,
                          "name": "poolTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8560,
                          "src": "10834:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 8573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "10834:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10820:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8569,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10824:7:37",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8570,
                        "nodeType": "ArrayTypeName",
                        "src": "10824:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 8574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10820:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10794:58:37"
                },
                {
                  "assignments": [
                    8580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8580,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "10879:7:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 8623,
                      "src": "10862:24:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8578,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10862:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8579,
                        "nodeType": "ArrayTypeName",
                        "src": "10862:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8587,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8584,
                          "name": "poolTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8560,
                          "src": "10903:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 8585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "10903:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10889:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8581,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10893:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8582,
                        "nodeType": "ArrayTypeName",
                        "src": "10893:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 8586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10889:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10862:59:37"
                },
                {
                  "body": {
                    "id": 8617,
                    "nodeType": "Block",
                    "src": "10979:105:37",
                    "statements": [
                      {
                        "expression": {
                          "id": 8605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8599,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8568,
                              "src": "10993:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8601,
                            "indexExpression": {
                              "id": 8600,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8589,
                              "src": "11000:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10993:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 8602,
                              "name": "poolTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8560,
                              "src": "11005:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8604,
                            "indexExpression": {
                              "id": 8603,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8589,
                              "src": "11016:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11005:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10993:25:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8606,
                        "nodeType": "ExpressionStatement",
                        "src": "10993:25:37"
                      },
                      {
                        "expression": {
                          "id": 8615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8607,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8580,
                              "src": "11032:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 8609,
                            "indexExpression": {
                              "id": 8608,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8589,
                              "src": "11040:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11032:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 8610,
                              "name": "communityFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6746,
                              "src": "11045:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 8614,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 8611,
                                "name": "poolTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8560,
                                "src": "11059:10:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8613,
                              "indexExpression": {
                                "id": 8612,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8589,
                                "src": "11070:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11059:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11045:28:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11032:41:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8616,
                        "nodeType": "ExpressionStatement",
                        "src": "11032:41:37"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8592,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8589,
                      "src": "10951:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 8593,
                        "name": "poolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8560,
                        "src": "10955:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 8594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10955:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10951:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8618,
                  "initializationExpression": {
                    "assignments": [
                      8589
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8589,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10944:1:37",
                        "nodeType": "VariableDeclaration",
                        "scope": 8618,
                        "src": "10936:9:37",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8588,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10936:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8591,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10948:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10936:13:37"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10974:3:37",
                      "subExpression": {
                        "id": 8596,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8589,
                        "src": "10974:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8598,
                    "nodeType": "ExpressionStatement",
                    "src": "10974:3:37"
                  },
                  "nodeType": "ForStatement",
                  "src": "10931:153:37"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 8619,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8568,
                        "src": "11101:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 8620,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8580,
                        "src": "11109:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 8621,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11100:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 8555,
                  "id": 8622,
                  "nodeType": "Return",
                  "src": "11093:24:37"
                }
              ]
            },
            "documentation": {
              "id": 8547,
              "nodeType": "StructuredDocumentation",
              "src": "10396:213:37",
              "text": " @dev getCurrentOPCFees\n      Get the current amount of fees which can be withdrawned by OPC\n @return address[] - array of tokens addresses\n         uint256[] - array of amounts"
            },
            "functionSelector": "bf7db236",
            "id": 8624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentOPCFees",
            "nameLocation": "10623:17:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10640:2:37"
            },
            "returnParameters": {
              "id": 8555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8551,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8624,
                  "src": "10688:16:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8549,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10688:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8550,
                    "nodeType": "ArrayTypeName",
                    "src": "10688:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8624,
                  "src": "10706:16:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8552,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10706:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8553,
                    "nodeType": "ArrayTypeName",
                    "src": "10706:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10687:36:37"
            },
            "scope": 10803,
            "src": "10614:510:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8701,
              "nodeType": "Block",
              "src": "11488:400:37",
              "statements": [
                {
                  "assignments": [
                    8638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8638,
                      "mutability": "mutable",
                      "name": "poolTokens",
                      "nameLocation": "11515:10:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 8701,
                      "src": "11498:27:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11498:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8637,
                        "nodeType": "ArrayTypeName",
                        "src": "11498:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8641,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8639,
                      "name": "getFinalTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8476,
                      "src": "11528:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (address[] memory)"
                      }
                    },
                    "id": 8640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11528:16:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11498:46:37"
                },
                {
                  "assignments": [
                    8646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8646,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "11571:6:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 8701,
                      "src": "11554:23:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11554:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8645,
                        "nodeType": "ArrayTypeName",
                        "src": "11554:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8653,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8650,
                          "name": "poolTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8638,
                          "src": "11594:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 8651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "11594:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11580:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8647,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11584:7:37",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8648,
                        "nodeType": "ArrayTypeName",
                        "src": "11584:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 8652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11580:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11554:58:37"
                },
                {
                  "assignments": [
                    8658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8658,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "11639:7:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 8701,
                      "src": "11622:24:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11622:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8657,
                        "nodeType": "ArrayTypeName",
                        "src": "11622:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8665,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8662,
                          "name": "poolTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8638,
                          "src": "11663:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 8663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "11663:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11649:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8659,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11653:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8660,
                        "nodeType": "ArrayTypeName",
                        "src": "11653:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 8664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11649:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11622:59:37"
                },
                {
                  "body": {
                    "id": 8695,
                    "nodeType": "Block",
                    "src": "11739:109:37",
                    "statements": [
                      {
                        "expression": {
                          "id": 8683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8677,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8646,
                              "src": "11753:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8679,
                            "indexExpression": {
                              "id": 8678,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8667,
                              "src": "11760:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11753:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 8680,
                              "name": "poolTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8638,
                              "src": "11765:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8682,
                            "indexExpression": {
                              "id": 8681,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8667,
                              "src": "11776:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11765:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11753:25:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8684,
                        "nodeType": "ExpressionStatement",
                        "src": "11753:25:37"
                      },
                      {
                        "expression": {
                          "id": 8693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8685,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8658,
                              "src": "11792:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 8687,
                            "indexExpression": {
                              "id": 8686,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8667,
                              "src": "11800:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11792:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 8688,
                              "name": "publishMarketFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6750,
                              "src": "11805:17:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 8692,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 8689,
                                "name": "poolTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8638,
                                "src": "11823:10:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8691,
                              "indexExpression": {
                                "id": 8690,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8667,
                                "src": "11834:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11823:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11805:32:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11792:45:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8694,
                        "nodeType": "ExpressionStatement",
                        "src": "11792:45:37"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8670,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8667,
                      "src": "11711:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 8671,
                        "name": "poolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8638,
                        "src": "11715:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 8672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11715:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11711:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8696,
                  "initializationExpression": {
                    "assignments": [
                      8667
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8667,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11704:1:37",
                        "nodeType": "VariableDeclaration",
                        "scope": 8696,
                        "src": "11696:9:37",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8666,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11696:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8669,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11708:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11696:13:37"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11734:3:37",
                      "subExpression": {
                        "id": 8674,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8667,
                        "src": "11734:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8676,
                    "nodeType": "ExpressionStatement",
                    "src": "11734:3:37"
                  },
                  "nodeType": "ForStatement",
                  "src": "11691:157:37"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 8697,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8646,
                        "src": "11865:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 8698,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8658,
                        "src": "11873:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 8699,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11864:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 8633,
                  "id": 8700,
                  "nodeType": "Return",
                  "src": "11857:24:37"
                }
              ]
            },
            "documentation": {
              "id": 8625,
              "nodeType": "StructuredDocumentation",
              "src": "11130:236:37",
              "text": " @dev getCurrentMarketFees\n      Get the current amount of fees which can be withdrawned by _publishMarketCollector\n @return address[] - array of tokens addresses\n         uint256[] - array of amounts"
            },
            "functionSelector": "c44a4283",
            "id": 8702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentMarketFees",
            "nameLocation": "11380:20:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11400:2:37"
            },
            "returnParameters": {
              "id": 8633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8702,
                  "src": "11448:16:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8627,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11448:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8628,
                    "nodeType": "ArrayTypeName",
                    "src": "11448:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8632,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8702,
                  "src": "11466:16:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8630,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11466:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8631,
                    "nodeType": "ArrayTypeName",
                    "src": "11466:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11447:36:37"
            },
            "scope": 10803,
            "src": "11371:517:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8763,
              "nodeType": "Block",
              "src": "12156:474:37",
              "statements": [
                {
                  "assignments": [
                    8710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8710,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "12183:6:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 8763,
                      "src": "12166:23:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12166:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8709,
                        "nodeType": "ArrayTypeName",
                        "src": "12166:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8713,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8711,
                      "name": "getFinalTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8476,
                      "src": "12192:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (address[] memory)"
                      }
                    },
                    "id": 8712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12192:16:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12166:42:37"
                },
                {
                  "body": {
                    "id": 8761,
                    "nodeType": "Block",
                    "src": "12262:362:37",
                    "statements": [
                      {
                        "assignments": [
                          8726
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8726,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "12284:6:37",
                            "nodeType": "VariableDeclaration",
                            "scope": 8761,
                            "src": "12276:14:37",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8725,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12276:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8732,
                        "initialValue": {
                          "baseExpression": {
                            "id": 8727,
                            "name": "publishMarketFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6750,
                            "src": "12293:17:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 8731,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 8728,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8710,
                              "src": "12311:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8730,
                            "indexExpression": {
                              "id": 8729,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8715,
                              "src": "12318:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12311:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12293:28:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12276:45:37"
                      },
                      {
                        "expression": {
                          "id": 8739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8733,
                              "name": "publishMarketFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6750,
                              "src": "12335:17:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 8737,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 8734,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8710,
                                "src": "12353:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8736,
                              "indexExpression": {
                                "id": 8735,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8715,
                                "src": "12360:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12353:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12335:28:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 8738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12366:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12335:32:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8740,
                        "nodeType": "ExpressionStatement",
                        "src": "12335:32:37"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8742,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12420:3:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12420:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8744,
                              "name": "_publishMarketCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8073,
                              "src": "12448:23:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 8745,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8710,
                                "src": "12489:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8747,
                              "indexExpression": {
                                "id": 8746,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8715,
                                "src": "12496:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12489:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8748,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8726,
                              "src": "12516:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8741,
                            "name": "PublishMarketFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8001,
                            "src": "12386:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 8749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12386:150:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8750,
                        "nodeType": "EmitStatement",
                        "src": "12381:155:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8757,
                              "name": "_publishMarketCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8073,
                              "src": "12581:23:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8758,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8726,
                              "src": "12606:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 8752,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8710,
                                    "src": "12557:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 8754,
                                  "indexExpression": {
                                    "id": 8753,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8715,
                                    "src": "12564:1:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12557:9:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8751,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "12550:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12550:17:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3084",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25633,
                            "src": "12550:30:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3084_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3084_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12550:63:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8760,
                        "nodeType": "ExpressionStatement",
                        "src": "12550:63:37"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8718,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8715,
                      "src": "12238:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 8719,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8710,
                        "src": "12242:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 8720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12242:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12238:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8762,
                  "initializationExpression": {
                    "assignments": [
                      8715
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8715,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12231:1:37",
                        "nodeType": "VariableDeclaration",
                        "scope": 8762,
                        "src": "12223:9:37",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8714,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12223:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8717,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12235:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12223:13:37"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12257:3:37",
                      "subExpression": {
                        "id": 8722,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8715,
                        "src": "12257:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8724,
                    "nodeType": "ExpressionStatement",
                    "src": "12257:3:37"
                  },
                  "nodeType": "ForStatement",
                  "src": "12218:406:37"
                }
              ]
            },
            "documentation": {
              "id": 8703,
              "nodeType": "StructuredDocumentation",
              "src": "11894:220:37",
              "text": " @dev collectMarketFee\n      Collects and send all Market Fees to _publishMarketCollector.\n      This function can be called by anyone, because fees are being sent to _publishMarketCollector"
            },
            "functionSelector": "80ca7308",
            "id": 8764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectMarketFee",
            "nameLocation": "12128:16:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12144:2:37"
            },
            "returnParameters": {
              "id": 8705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12156:0:37"
            },
            "scope": 10803,
            "src": "12119:511:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8823,
              "nodeType": "Block",
              "src": "12923:490:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8773,
                          "name": "_publishMarketCollector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8073,
                          "src": "12941:23:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8774,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12968:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12968:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12941:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c59204d41524b455420434f4c4c4543544f52",
                        "id": 8777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12980:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f050123f847cca0837d7c8f05db3c2a0c156b9ae5f8dd54f47f3265025150807",
                          "typeString": "literal_string \"ONLY MARKET COLLECTOR\""
                        },
                        "value": "ONLY MARKET COLLECTOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f050123f847cca0837d7c8f05db3c2a0c156b9ae5f8dd54f47f3265025150807",
                          "typeString": "literal_string \"ONLY MARKET COLLECTOR\""
                        }
                      ],
                      "id": 8772,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12933:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12933:71:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8779,
                  "nodeType": "ExpressionStatement",
                  "src": "12933:71:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8781,
                          "name": "_newCollector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8767,
                          "src": "13022:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13047:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13039:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8782,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13039:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13039:10:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13022:27:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964205f6e6577436f6c6c6563746f722061646472657373",
                        "id": 8787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13051:31:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c7a699369eee48dcd7ba06d5c1dc9945d5c7ef58d6e648fb786d555512819bb",
                          "typeString": "literal_string \"Invalid _newCollector address\""
                        },
                        "value": "Invalid _newCollector address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c7a699369eee48dcd7ba06d5c1dc9945d5c7ef58d6e648fb786d555512819bb",
                          "typeString": "literal_string \"Invalid _newCollector address\""
                        }
                      ],
                      "id": 8780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13014:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13014:69:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8789,
                  "nodeType": "ExpressionStatement",
                  "src": "13014:69:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8791,
                            "name": "_newSwapFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8769,
                            "src": "13101:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 8792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13115:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13101:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8794,
                            "name": "_newSwapFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8769,
                            "src": "13120:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 8795,
                            "name": "MIN_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6280,
                            "src": "13135:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13120:22:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13101:41:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d494e5f464545",
                        "id": 8798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13144:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c95b37766e2e0764ffbea08cf33d7dd980794ea2229cf2b30f9a53dfb48c0a5",
                          "typeString": "literal_string \"ERR_MIN_FEE\""
                        },
                        "value": "ERR_MIN_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c95b37766e2e0764ffbea08cf33d7dd980794ea2229cf2b30f9a53dfb48c0a5",
                          "typeString": "literal_string \"ERR_MIN_FEE\""
                        }
                      ],
                      "id": 8790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13093:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13093:65:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8800,
                  "nodeType": "ExpressionStatement",
                  "src": "13093:65:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8802,
                          "name": "_newSwapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8769,
                          "src": "13176:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 8803,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "13191:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13176:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d41585f464545",
                        "id": 8805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13200:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_889e9e6c0c0fb5bbb40eea41a5a6b8208c6005e0eb9ab1570db8ca4038ab2ca2",
                          "typeString": "literal_string \"ERR_MAX_FEE\""
                        },
                        "value": "ERR_MAX_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_889e9e6c0c0fb5bbb40eea41a5a6b8208c6005e0eb9ab1570db8ca4038ab2ca2",
                          "typeString": "literal_string \"ERR_MAX_FEE\""
                        }
                      ],
                      "id": 8801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13168:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13168:46:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8807,
                  "nodeType": "ExpressionStatement",
                  "src": "13168:46:37"
                },
                {
                  "expression": {
                    "id": 8810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8808,
                      "name": "_publishMarketCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8073,
                      "src": "13224:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8809,
                      "name": "_newCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8767,
                      "src": "13250:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13224:39:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8811,
                  "nodeType": "ExpressionStatement",
                  "src": "13224:39:37"
                },
                {
                  "expression": {
                    "id": 8814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8812,
                      "name": "_swapPublishMarketFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6734,
                      "src": "13273:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8813,
                      "name": "_newSwapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8769,
                      "src": "13297:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13273:35:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8815,
                  "nodeType": "ExpressionStatement",
                  "src": "13273:35:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8817,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13347:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13347:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8819,
                        "name": "_publishMarketCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8073,
                        "src": "13359:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8820,
                        "name": "_swapPublishMarketFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6734,
                        "src": "13384:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8816,
                      "name": "PublishMarketFeeChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8029,
                      "src": "13323:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13323:83:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8822,
                  "nodeType": "EmitStatement",
                  "src": "13318:88:37"
                }
              ]
            },
            "documentation": {
              "id": 8765,
              "nodeType": "StructuredDocumentation",
              "src": "12636:197:37",
              "text": " @dev updatePublishMarketFee\n      Set _newCollector as _publishMarketCollector\n @param _newCollector new _publishMarketCollector\n @param _newSwapFee new swapFee"
            },
            "functionSelector": "18f9722a",
            "id": 8824,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePublishMarketFee",
            "nameLocation": "12847:22:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8767,
                  "mutability": "mutable",
                  "name": "_newCollector",
                  "nameLocation": "12878:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8824,
                  "src": "12870:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12870:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8769,
                  "mutability": "mutable",
                  "name": "_newSwapFee",
                  "nameLocation": "12901:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8824,
                  "src": "12893:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12893:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12869:44:37"
            },
            "returnParameters": {
              "id": 8771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12923:0:37"
            },
            "scope": 10803,
            "src": "12838:575:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8843,
              "nodeType": "Block",
              "src": "13685:74:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8835,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8827,
                        "src": "13707:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8834,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "13695:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 8836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13695:18:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8837,
                  "nodeType": "ExpressionStatement",
                  "src": "13695:18:37"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 8838,
                        "name": "_records",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8083,
                        "src": "13730:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                          "typeString": "mapping(address => struct BPool.Record storage ref)"
                        }
                      },
                      "id": 8840,
                      "indexExpression": {
                        "id": 8839,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8827,
                        "src": "13739:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13730:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage",
                        "typeString": "struct BPool.Record storage ref"
                      }
                    },
                    "id": 8841,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "denorm",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7898,
                    "src": "13730:22:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8833,
                  "id": 8842,
                  "nodeType": "Return",
                  "src": "13723:29:37"
                }
              ]
            },
            "documentation": {
              "id": 8825,
              "nodeType": "StructuredDocumentation",
              "src": "13419:136:37",
              "text": " @dev getDenormalizedWeight\n      Returns denormalized weight of a token\n @param token token to be checked"
            },
            "functionSelector": "948d8ce6",
            "id": 8844,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8830,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8829,
                  "name": "_viewlock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8065,
                  "src": "13644:10:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "13644:10:37"
              }
            ],
            "name": "getDenormalizedWeight",
            "nameLocation": "13569:21:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8827,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "13599:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8844,
                  "src": "13591:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13591:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13590:15:37"
            },
            "returnParameters": {
              "id": 8833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8844,
                  "src": "13672:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13672:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13671:9:37"
            },
            "scope": 10803,
            "src": "13560:199:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8854,
              "nodeType": "Block",
              "src": "13996:36:37",
              "statements": [
                {
                  "expression": {
                    "id": 8852,
                    "name": "_totalWeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8085,
                    "src": "14013:12:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8851,
                  "id": 8853,
                  "nodeType": "Return",
                  "src": "14006:19:37"
                }
              ]
            },
            "documentation": {
              "id": 8845,
              "nodeType": "StructuredDocumentation",
              "src": "13766:108:37",
              "text": " @dev getTotalDenormalizedWeight\n      Returns total denormalized weught of the pool"
            },
            "functionSelector": "936c3477",
            "id": 8855,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8848,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8847,
                  "name": "_viewlock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8065,
                  "src": "13955:10:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "13955:10:37"
              }
            ],
            "name": "getTotalDenormalizedWeight",
            "nameLocation": "13888:26:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13914:2:37"
            },
            "returnParameters": {
              "id": 8851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8850,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8855,
                  "src": "13983:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13983:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13982:9:37"
            },
            "scope": 10803,
            "src": "13879:153:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8881,
              "nodeType": "Block",
              "src": "14303:127:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8866,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8858,
                        "src": "14325:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8865,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "14313:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 8867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14313:18:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8868,
                  "nodeType": "ExpressionStatement",
                  "src": "14313:18:37"
                },
                {
                  "assignments": [
                    8870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8870,
                      "mutability": "mutable",
                      "name": "denorm",
                      "nameLocation": "14349:6:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 8881,
                      "src": "14341:14:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8869,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14341:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8875,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8871,
                        "name": "_records",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8083,
                        "src": "14358:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                          "typeString": "mapping(address => struct BPool.Record storage ref)"
                        }
                      },
                      "id": 8873,
                      "indexExpression": {
                        "id": 8872,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8858,
                        "src": "14367:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14358:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage",
                        "typeString": "struct BPool.Record storage ref"
                      }
                    },
                    "id": 8874,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "denorm",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7898,
                    "src": "14358:22:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14341:39:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8877,
                        "name": "denorm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8870,
                        "src": "14402:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8878,
                        "name": "_totalWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8085,
                        "src": "14410:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8876,
                      "name": "bdiv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7623,
                      "src": "14397:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14397:26:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8864,
                  "id": 8880,
                  "nodeType": "Return",
                  "src": "14390:33:37"
                }
              ]
            },
            "documentation": {
              "id": 8856,
              "nodeType": "StructuredDocumentation",
              "src": "14038:132:37",
              "text": " @dev getNormalizedWeight\n      Returns normalized weight of a token\n @param token token to be checked"
            },
            "functionSelector": "f1b8a9b7",
            "id": 8882,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8861,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8860,
                  "name": "_viewlock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8065,
                  "src": "14262:10:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "14262:10:37"
              }
            ],
            "name": "getNormalizedWeight",
            "nameLocation": "14189:19:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8858,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "14217:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8882,
                  "src": "14209:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14209:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14208:15:37"
            },
            "returnParameters": {
              "id": 8864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8863,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8882,
                  "src": "14290:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14290:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14289:9:37"
            },
            "scope": 10803,
            "src": "14180:250:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8901,
              "nodeType": "Block",
              "src": "14683:75:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8893,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8885,
                        "src": "14705:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8892,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "14693:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 8894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14693:18:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8895,
                  "nodeType": "ExpressionStatement",
                  "src": "14693:18:37"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 8896,
                        "name": "_records",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8083,
                        "src": "14728:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                          "typeString": "mapping(address => struct BPool.Record storage ref)"
                        }
                      },
                      "id": 8898,
                      "indexExpression": {
                        "id": 8897,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8885,
                        "src": "14737:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14728:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage",
                        "typeString": "struct BPool.Record storage ref"
                      }
                    },
                    "id": 8899,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7900,
                    "src": "14728:23:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8891,
                  "id": 8900,
                  "nodeType": "Return",
                  "src": "14721:30:37"
                }
              ]
            },
            "documentation": {
              "id": 8883,
              "nodeType": "StructuredDocumentation",
              "src": "14437:127:37",
              "text": " @dev getBalance\n      Returns the current token reserve amount\n @param token token to be checked"
            },
            "functionSelector": "f8b2cb4f",
            "id": 8902,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8888,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8887,
                  "name": "_viewlock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8065,
                  "src": "14642:10:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "14642:10:37"
              }
            ],
            "name": "getBalance",
            "nameLocation": "14578:10:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8885,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "14597:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8902,
                  "src": "14589:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14589:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14588:15:37"
            },
            "returnParameters": {
              "id": 8891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8890,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8902,
                  "src": "14670:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14670:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14669:9:37"
            },
            "scope": 10803,
            "src": "14569:189:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8910,
              "nodeType": "Block",
              "src": "14918:32:37",
              "statements": [
                {
                  "expression": {
                    "id": 8908,
                    "name": "_swapFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6736,
                    "src": "14935:8:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8907,
                  "id": 8909,
                  "nodeType": "Return",
                  "src": "14928:15:37"
                }
              ]
            },
            "documentation": {
              "id": 8903,
              "nodeType": "StructuredDocumentation",
              "src": "14764:95:37",
              "text": " @dev getSwapFee\n      Returns the current Liquidity Providers swap fee"
            },
            "functionSelector": "d4cadf68",
            "id": 8911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapFee",
            "nameLocation": "14873:10:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14883:2:37"
            },
            "returnParameters": {
              "id": 8907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8906,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8911,
                  "src": "14909:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14909:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14908:9:37"
            },
            "scope": 10803,
            "src": "14864:86:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8919,
              "nodeType": "Block",
              "src": "15109:45:37",
              "statements": [
                {
                  "expression": {
                    "id": 8917,
                    "name": "_swapPublishMarketFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6734,
                    "src": "15126:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8916,
                  "id": 8918,
                  "nodeType": "Return",
                  "src": "15119:28:37"
                }
              ]
            },
            "documentation": {
              "id": 8912,
              "nodeType": "StructuredDocumentation",
              "src": "14956:92:37",
              "text": " @dev getMarketFee\n      Returns the current fee of publishingMarket"
            },
            "functionSelector": "5e123add",
            "id": 8920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMarketFee",
            "nameLocation": "15062:12:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15074:2:37"
            },
            "returnParameters": {
              "id": 8916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8915,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8920,
                  "src": "15100:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15100:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15099:9:37"
            },
            "scope": 10803,
            "src": "15053:101:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              28396
            ],
            "body": {
              "id": 8928,
              "nodeType": "Block",
              "src": "15318:35:37",
              "statements": [
                {
                  "expression": {
                    "id": 8926,
                    "name": "_controller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8069,
                    "src": "15335:11:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8925,
                  "id": 8927,
                  "nodeType": "Return",
                  "src": "15328:18:37"
                }
              ]
            },
            "documentation": {
              "id": 8921,
              "nodeType": "StructuredDocumentation",
              "src": "15160:96:37",
              "text": " @dev getController\n      Returns the current controller address (ssBot)"
            },
            "functionSelector": "3018205f",
            "id": 8929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getController",
            "nameLocation": "15270:13:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15283:2:37"
            },
            "returnParameters": {
              "id": 8925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8924,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8929,
                  "src": "15309:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15309:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15308:9:37"
            },
            "scope": 10803,
            "src": "15261:92:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              28386
            ],
            "body": {
              "id": 8937,
              "nodeType": "Block",
              "src": "15520:41:37",
              "statements": [
                {
                  "expression": {
                    "id": 8935,
                    "name": "_datatokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6740,
                    "src": "15537:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8934,
                  "id": 8936,
                  "nodeType": "Return",
                  "src": "15530:24:37"
                }
              ]
            },
            "documentation": {
              "id": 8930,
              "nodeType": "StructuredDocumentation",
              "src": "15359:93:37",
              "text": " @dev getDatatokenAddress\n      Returns the current datatoken address"
            },
            "functionSelector": "458c3fb5",
            "id": 8938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDatatokenAddress",
            "nameLocation": "15466:19:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15485:2:37"
            },
            "returnParameters": {
              "id": 8934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8933,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8938,
                  "src": "15511:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15511:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15510:9:37"
            },
            "scope": 10803,
            "src": "15457:104:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              28391
            ],
            "body": {
              "id": 8946,
              "nodeType": "Block",
              "src": "15728:41:37",
              "statements": [
                {
                  "expression": {
                    "id": 8944,
                    "name": "_baseTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6742,
                    "src": "15745:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8943,
                  "id": 8945,
                  "nodeType": "Return",
                  "src": "15738:24:37"
                }
              ]
            },
            "documentation": {
              "id": 8939,
              "nodeType": "StructuredDocumentation",
              "src": "15567:93:37",
              "text": " @dev getBaseTokenAddress\n      Returns the current baseToken address"
            },
            "functionSelector": "4df947d0",
            "id": 8947,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBaseTokenAddress",
            "nameLocation": "15674:19:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15693:2:37"
            },
            "returnParameters": {
              "id": 8943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8947,
                  "src": "15719:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15719:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15718:9:37"
            },
            "scope": 10803,
            "src": "15665:104:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              28488
            ],
            "body": {
              "id": 8985,
              "nodeType": "Block",
              "src": "16004:255:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8954,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16022:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "16022:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8956,
                          "name": "_controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8069,
                          "src": "16036:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16022:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4e4f545f434f4e54524f4c4c4552",
                        "id": 8958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16049:20:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0479bbd6e0e904a96491e3adc0eda9022c19acd57f4922725f8618b3a0372668",
                          "typeString": "literal_string \"ERR_NOT_CONTROLLER\""
                        },
                        "value": "ERR_NOT_CONTROLLER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0479bbd6e0e904a96491e3adc0eda9022c19acd57f4922725f8618b3a0372668",
                          "typeString": "literal_string \"ERR_NOT_CONTROLLER\""
                        }
                      ],
                      "id": 8953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16014:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16014:56:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8960,
                  "nodeType": "ExpressionStatement",
                  "src": "16014:56:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8962,
                          "name": "swapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8950,
                          "src": "16088:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8963,
                          "name": "MIN_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6280,
                          "src": "16099:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16088:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d494e5f464545",
                        "id": 8965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16108:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c95b37766e2e0764ffbea08cf33d7dd980794ea2229cf2b30f9a53dfb48c0a5",
                          "typeString": "literal_string \"ERR_MIN_FEE\""
                        },
                        "value": "ERR_MIN_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c95b37766e2e0764ffbea08cf33d7dd980794ea2229cf2b30f9a53dfb48c0a5",
                          "typeString": "literal_string \"ERR_MIN_FEE\""
                        }
                      ],
                      "id": 8961,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16080:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16080:42:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8967,
                  "nodeType": "ExpressionStatement",
                  "src": "16080:42:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8969,
                          "name": "swapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8950,
                          "src": "16140:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 8970,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "16151:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16140:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d41585f464545",
                        "id": 8972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16160:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_889e9e6c0c0fb5bbb40eea41a5a6b8208c6005e0eb9ab1570db8ca4038ab2ca2",
                          "typeString": "literal_string \"ERR_MAX_FEE\""
                        },
                        "value": "ERR_MAX_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_889e9e6c0c0fb5bbb40eea41a5a6b8208c6005e0eb9ab1570db8ca4038ab2ca2",
                          "typeString": "literal_string \"ERR_MAX_FEE\""
                        }
                      ],
                      "id": 8968,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16132:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16132:42:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8974,
                  "nodeType": "ExpressionStatement",
                  "src": "16132:42:37"
                },
                {
                  "expression": {
                    "id": 8977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8975,
                      "name": "_swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6736,
                      "src": "16184:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8976,
                      "name": "swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8950,
                      "src": "16195:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16184:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8978,
                  "nodeType": "ExpressionStatement",
                  "src": "16184:18:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8980,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16232:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16232:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8982,
                        "name": "swapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8950,
                        "src": "16244:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8979,
                      "name": "SwapFeeChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7991,
                      "src": "16217:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16217:35:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8984,
                  "nodeType": "EmitStatement",
                  "src": "16212:40:37"
                }
              ]
            },
            "documentation": {
              "id": 8948,
              "nodeType": "StructuredDocumentation",
              "src": "15776:179:37",
              "text": " @dev setSwapFee\n      Allows controller to change the swapFee\n @param swapFee new swap fee (max 1e17 = 10 % , 1e16 = 1% , 1e15 = 0.1%, 1e14 = 0.01%)"
            },
            "functionSelector": "34e19907",
            "id": 8986,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapFee",
            "nameLocation": "15969:10:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8950,
                  "mutability": "mutable",
                  "name": "swapFee",
                  "nameLocation": "15988:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 8986,
                  "src": "15980:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15980:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15979:17:37"
            },
            "returnParameters": {
              "id": 8952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16004:0:37"
            },
            "scope": 10803,
            "src": "15960:299:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9008,
              "nodeType": "Block",
              "src": "16396:159:37",
              "statements": [
                {
                  "expression": {
                    "id": 8992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8990,
                      "name": "_finalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8075,
                      "src": "16406:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16419:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16406:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8993,
                  "nodeType": "ExpressionStatement",
                  "src": "16406:17:37"
                },
                {
                  "expression": {
                    "id": 8996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8994,
                      "name": "_publicSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8071,
                      "src": "16433:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16447:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16433:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8997,
                  "nodeType": "ExpressionStatement",
                  "src": "16433:18:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8999,
                        "name": "INIT_POOL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6311,
                        "src": "16477:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8998,
                      "name": "_mintPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10745,
                      "src": "16462:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 9000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16462:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9001,
                  "nodeType": "ExpressionStatement",
                  "src": "16462:32:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9003,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16519:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16519:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9005,
                        "name": "INIT_POOL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6311,
                        "src": "16531:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9002,
                      "name": "_pushPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10735,
                      "src": "16504:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16504:44:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9007,
                  "nodeType": "ExpressionStatement",
                  "src": "16504:44:37"
                }
              ]
            },
            "documentation": {
              "id": 8987,
              "nodeType": "StructuredDocumentation",
              "src": "16265:97:37",
              "text": " @dev finalize\n      Finalize pool. After this,new tokens cannot be bound"
            },
            "id": 9009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalize",
            "nameLocation": "16376:8:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16384:2:37"
            },
            "returnParameters": {
              "id": 8989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16396:0:37"
            },
            "scope": 10803,
            "src": "16367:188:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9074,
              "nodeType": "Block",
              "src": "16850:537:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9020,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16868:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "16868:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 9022,
                          "name": "_controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8069,
                          "src": "16882:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16868:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4e4f545f434f4e54524f4c4c4552",
                        "id": 9024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16895:20:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0479bbd6e0e904a96491e3adc0eda9022c19acd57f4922725f8618b3a0372668",
                          "typeString": "literal_string \"ERR_NOT_CONTROLLER\""
                        },
                        "value": "ERR_NOT_CONTROLLER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0479bbd6e0e904a96491e3adc0eda9022c19acd57f4922725f8618b3a0372668",
                          "typeString": "literal_string \"ERR_NOT_CONTROLLER\""
                        }
                      ],
                      "id": 9019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16860:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16860:56:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9026,
                  "nodeType": "ExpressionStatement",
                  "src": "16860:56:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "16934:22:37",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 9028,
                              "name": "_records",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8083,
                              "src": "16935:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                                "typeString": "mapping(address => struct BPool.Record storage ref)"
                              }
                            },
                            "id": 9030,
                            "indexExpression": {
                              "id": 9029,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9012,
                              "src": "16944:5:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16935:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage",
                              "typeString": "struct BPool.Record storage ref"
                            }
                          },
                          "id": 9031,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bound",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7894,
                          "src": "16935:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f49535f424f554e44",
                        "id": 9033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16958:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29524b4853ebf7d280374d088acc10bd6949cb77e38df49dfa9b02680b8a5f51",
                          "typeString": "literal_string \"ERR_IS_BOUND\""
                        },
                        "value": "ERR_IS_BOUND"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29524b4853ebf7d280374d088acc10bd6949cb77e38df49dfa9b02680b8a5f51",
                          "typeString": "literal_string \"ERR_IS_BOUND\""
                        }
                      ],
                      "id": 9027,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16926:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16926:47:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9035,
                  "nodeType": "ExpressionStatement",
                  "src": "16926:47:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "16991:11:37",
                        "subExpression": {
                          "id": 9037,
                          "name": "_finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8075,
                          "src": "16992:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f49535f46494e414c495a4544",
                        "id": 9039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17004:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e8186530b7c98466f35e0b14182dc6e751c9b9644c5bf1204c0609f892e5bbe",
                          "typeString": "literal_string \"ERR_IS_FINALIZED\""
                        },
                        "value": "ERR_IS_FINALIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e8186530b7c98466f35e0b14182dc6e751c9b9644c5bf1204c0609f892e5bbe",
                          "typeString": "literal_string \"ERR_IS_FINALIZED\""
                        }
                      ],
                      "id": 9036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16983:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16983:40:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9041,
                  "nodeType": "ExpressionStatement",
                  "src": "16983:40:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9043,
                            "name": "_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8078,
                            "src": "17042:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 9044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17042:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 9045,
                          "name": "MAX_BOUND_TOKENS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6275,
                          "src": "17059:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17042:33:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d41585f544f4b454e53",
                        "id": 9047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17077:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b41476dedca3afde44e68e1abeac58b7cde6712eb701df30a64635f310a23f5",
                          "typeString": "literal_string \"ERR_MAX_TOKENS\""
                        },
                        "value": "ERR_MAX_TOKENS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b41476dedca3afde44e68e1abeac58b7cde6712eb701df30a64635f310a23f5",
                          "typeString": "literal_string \"ERR_MAX_TOKENS\""
                        }
                      ],
                      "id": 9042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17034:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17034:60:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9049,
                  "nodeType": "ExpressionStatement",
                  "src": "17034:60:37"
                },
                {
                  "expression": {
                    "id": 9060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9050,
                        "name": "_records",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8083,
                        "src": "17105:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                          "typeString": "mapping(address => struct BPool.Record storage ref)"
                        }
                      },
                      "id": 9052,
                      "indexExpression": {
                        "id": 9051,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9012,
                        "src": "17114:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17105:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage",
                        "typeString": "struct BPool.Record storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 9054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17151:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 9055,
                            "name": "_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8078,
                            "src": "17176:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 9056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17176:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 9057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17212:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 9058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17276:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9053,
                        "name": "Record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7901,
                        "src": "17123:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Record_$7901_storage_ptr_$",
                          "typeString": "type(struct BPool.Record storage pointer)"
                        }
                      },
                      "id": 9059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bound",
                        "index",
                        "denorm",
                        "balance"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "17123:188:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_memory_ptr",
                        "typeString": "struct BPool.Record memory"
                      }
                    },
                    "src": "17105:206:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "id": 9061,
                  "nodeType": "ExpressionStatement",
                  "src": "17105:206:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9065,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9012,
                        "src": "17334:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9062,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8078,
                        "src": "17321:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 9064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "17321:12:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 9066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17321:19:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9067,
                  "nodeType": "ExpressionStatement",
                  "src": "17321:19:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9069,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9012,
                        "src": "17357:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9070,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9014,
                        "src": "17364:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9071,
                        "name": "denorm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9016,
                        "src": "17373:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9068,
                      "name": "rebind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9206,
                      "src": "17350:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 9072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17350:30:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9073,
                  "nodeType": "ExpressionStatement",
                  "src": "17350:30:37"
                }
              ]
            },
            "documentation": {
              "id": 9010,
              "nodeType": "StructuredDocumentation",
              "src": "16561:183:37",
              "text": " @dev bind\n      Bind a new token to the pool.\n @param token token address\n @param balance initial reserve\n @param denorm denormalized weight"
            },
            "id": 9075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bind",
            "nameLocation": "16758:4:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9012,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "16780:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9075,
                  "src": "16772:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16772:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9014,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "16803:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9075,
                  "src": "16795:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16795:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9016,
                  "mutability": "mutable",
                  "name": "denorm",
                  "nameLocation": "16828:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9075,
                  "src": "16820:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16820:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16762:78:37"
            },
            "returnParameters": {
              "id": 9018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16850:0:37"
            },
            "scope": 10803,
            "src": "16749:638:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9205,
              "nodeType": "Block",
              "src": "17705:1238:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9086,
                          "name": "denorm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9082,
                          "src": "17723:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 9087,
                          "name": "MIN_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6291,
                          "src": "17733:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17723:20:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d494e5f574549474854",
                        "id": 9089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17745:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8df266f07de77e4ef407edb2fcb3334221f5d37909c32010ecedbd042f2b2362",
                          "typeString": "literal_string \"ERR_MIN_WEIGHT\""
                        },
                        "value": "ERR_MIN_WEIGHT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8df266f07de77e4ef407edb2fcb3334221f5d37909c32010ecedbd042f2b2362",
                          "typeString": "literal_string \"ERR_MIN_WEIGHT\""
                        }
                      ],
                      "id": 9085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17715:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17715:47:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9091,
                  "nodeType": "ExpressionStatement",
                  "src": "17715:47:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9093,
                          "name": "denorm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9082,
                          "src": "17780:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 9094,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6296,
                          "src": "17790:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17780:20:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d41585f574549474854",
                        "id": 9096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17802:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4443a14e27060659cd754b886a4a9abce56b7a815ac41b5da14580c72eae7f33",
                          "typeString": "literal_string \"ERR_MAX_WEIGHT\""
                        },
                        "value": "ERR_MAX_WEIGHT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4443a14e27060659cd754b886a4a9abce56b7a815ac41b5da14580c72eae7f33",
                          "typeString": "literal_string \"ERR_MAX_WEIGHT\""
                        }
                      ],
                      "id": 9092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17772:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17772:47:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9098,
                  "nodeType": "ExpressionStatement",
                  "src": "17772:47:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9100,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9080,
                          "src": "17837:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 9101,
                          "name": "MIN_BALANCE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6306,
                          "src": "17848:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17837:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d494e5f42414c414e4345",
                        "id": 9103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17861:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69c7afc4064c1fa740d9fba5145c2c6cfc449ab58df3114718ec5abc7738730c",
                          "typeString": "literal_string \"ERR_MIN_BALANCE\""
                        },
                        "value": "ERR_MIN_BALANCE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69c7afc4064c1fa740d9fba5145c2c6cfc449ab58df3114718ec5abc7738730c",
                          "typeString": "literal_string \"ERR_MIN_BALANCE\""
                        }
                      ],
                      "id": 9099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17829:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17829:50:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9105,
                  "nodeType": "ExpressionStatement",
                  "src": "17829:50:37"
                },
                {
                  "assignments": [
                    9107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9107,
                      "mutability": "mutable",
                      "name": "oldWeight",
                      "nameLocation": "17943:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9205,
                      "src": "17935:17:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17935:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9112,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 9108,
                        "name": "_records",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8083,
                        "src": "17955:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                          "typeString": "mapping(address => struct BPool.Record storage ref)"
                        }
                      },
                      "id": 9110,
                      "indexExpression": {
                        "id": 9109,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9078,
                        "src": "17964:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17955:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage",
                        "typeString": "struct BPool.Record storage ref"
                      }
                    },
                    "id": 9111,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "denorm",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7898,
                    "src": "17955:22:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17935:42:37"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9113,
                      "name": "denorm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9082,
                      "src": "17991:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 9114,
                      "name": "oldWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9107,
                      "src": "18000:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17991:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9134,
                        "name": "denorm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9082,
                        "src": "18183:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 9135,
                        "name": "oldWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9107,
                        "src": "18192:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18183:18:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 9148,
                    "nodeType": "IfStatement",
                    "src": "18179:107:37",
                    "trueBody": {
                      "id": 9147,
                      "nodeType": "Block",
                      "src": "18203:83:37",
                      "statements": [
                        {
                          "expression": {
                            "id": 9145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 9137,
                              "name": "_totalWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8085,
                              "src": "18217:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 9139,
                                  "name": "_totalWeight",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8085,
                                  "src": "18237:12:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 9141,
                                      "name": "oldWeight",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9107,
                                      "src": "18256:9:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 9142,
                                      "name": "denorm",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9082,
                                      "src": "18267:6:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 9140,
                                    "name": "bsub",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7480,
                                    "src": "18251:4:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 9143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18251:23:37",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 9138,
                                "name": "bsub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7480,
                                "src": "18232:4:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 9144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18232:43:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18217:58:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 9146,
                          "nodeType": "ExpressionStatement",
                          "src": "18217:58:37"
                        }
                      ]
                    }
                  },
                  "id": 9149,
                  "nodeType": "IfStatement",
                  "src": "17987:299:37",
                  "trueBody": {
                    "id": 9133,
                    "nodeType": "Block",
                    "src": "18011:162:37",
                    "statements": [
                      {
                        "expression": {
                          "id": 9124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 9116,
                            "name": "_totalWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8085,
                            "src": "18025:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 9118,
                                "name": "_totalWeight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8085,
                                "src": "18045:12:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 9120,
                                    "name": "denorm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9082,
                                    "src": "18064:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 9121,
                                    "name": "oldWeight",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9107,
                                    "src": "18072:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 9119,
                                  "name": "bsub",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7480,
                                  "src": "18059:4:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 9122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18059:23:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 9117,
                              "name": "badd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7453,
                              "src": "18040:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18040:43:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18025:58:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9125,
                        "nodeType": "ExpressionStatement",
                        "src": "18025:58:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 9127,
                                "name": "_totalWeight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8085,
                                "src": "18105:12:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 9128,
                                "name": "MAX_TOTAL_WEIGHT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6301,
                                "src": "18121:16:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "18105:32:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552525f4d41585f544f54414c5f574549474854",
                              "id": 9130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18139:22:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_55ceb599893e4bee215a5c1285d9b5c12334585fcdd4c2c71690e94257494440",
                                "typeString": "literal_string \"ERR_MAX_TOTAL_WEIGHT\""
                              },
                              "value": "ERR_MAX_TOTAL_WEIGHT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_55ceb599893e4bee215a5c1285d9b5c12334585fcdd4c2c71690e94257494440",
                                "typeString": "literal_string \"ERR_MAX_TOTAL_WEIGHT\""
                              }
                            ],
                            "id": 9126,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18097:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18097:65:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9132,
                        "nodeType": "ExpressionStatement",
                        "src": "18097:65:37"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 9150,
                          "name": "_records",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8083,
                          "src": "18295:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                            "typeString": "mapping(address => struct BPool.Record storage ref)"
                          }
                        },
                        "id": 9152,
                        "indexExpression": {
                          "id": 9151,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9078,
                          "src": "18304:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18295:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage",
                          "typeString": "struct BPool.Record storage ref"
                        }
                      },
                      "id": 9153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "denorm",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7898,
                      "src": "18295:22:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9154,
                      "name": "denorm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9082,
                      "src": "18320:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18295:31:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9156,
                  "nodeType": "ExpressionStatement",
                  "src": "18295:31:37"
                },
                {
                  "assignments": [
                    9158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9158,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "18407:10:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9205,
                      "src": "18399:18:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9157,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18399:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9163,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 9159,
                        "name": "_records",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8083,
                        "src": "18420:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                          "typeString": "mapping(address => struct BPool.Record storage ref)"
                        }
                      },
                      "id": 9161,
                      "indexExpression": {
                        "id": 9160,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9078,
                        "src": "18429:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "18420:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage",
                        "typeString": "struct BPool.Record storage ref"
                      }
                    },
                    "id": 9162,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7900,
                    "src": "18420:23:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18399:44:37"
                },
                {
                  "expression": {
                    "id": 9169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 9164,
                          "name": "_records",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8083,
                          "src": "18453:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                            "typeString": "mapping(address => struct BPool.Record storage ref)"
                          }
                        },
                        "id": 9166,
                        "indexExpression": {
                          "id": 9165,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9078,
                          "src": "18462:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18453:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage",
                          "typeString": "struct BPool.Record storage ref"
                        }
                      },
                      "id": 9167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7900,
                      "src": "18453:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9168,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9080,
                      "src": "18479:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18453:33:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9170,
                  "nodeType": "ExpressionStatement",
                  "src": "18453:33:37"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9171,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9080,
                      "src": "18500:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 9172,
                      "name": "oldBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9158,
                      "src": "18510:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18500:20:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9185,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9080,
                        "src": "18618:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 9186,
                        "name": "oldBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9158,
                        "src": "18628:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18618:20:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 9203,
                    "nodeType": "IfStatement",
                    "src": "18614:323:37",
                    "trueBody": {
                      "id": 9202,
                      "nodeType": "Block",
                      "src": "18640:297:37",
                      "statements": [
                        {
                          "assignments": [
                            9189
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 9189,
                              "mutability": "mutable",
                              "name": "tokenBalanceWithdrawn",
                              "nameLocation": "18744:21:37",
                              "nodeType": "VariableDeclaration",
                              "scope": 9202,
                              "src": "18736:29:37",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 9188,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18736:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 9194,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 9191,
                                "name": "oldBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9158,
                                "src": "18773:10:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 9192,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9080,
                                "src": "18785:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 9190,
                              "name": "bsub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7480,
                              "src": "18768:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18768:25:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18736:57:37"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 9196,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9078,
                                "src": "18840:5:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 9197,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "18863:3:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 9198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "18863:10:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 9199,
                                "name": "tokenBalanceWithdrawn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9189,
                                "src": "18891:21:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 9195,
                              "name": "_pushUnderlying",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10709,
                              "src": "18807:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256)"
                              }
                            },
                            "id": 9200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18807:119:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 9201,
                          "nodeType": "ExpressionStatement",
                          "src": "18807:119:37"
                        }
                      ]
                    }
                  },
                  "id": 9204,
                  "nodeType": "IfStatement",
                  "src": "18496:441:37",
                  "trueBody": {
                    "id": 9184,
                    "nodeType": "Block",
                    "src": "18522:86:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9175,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9078,
                              "src": "18552:5:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 9176,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "18559:3:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "18559:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 9179,
                                  "name": "balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9080,
                                  "src": "18576:7:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 9180,
                                  "name": "oldBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9158,
                                  "src": "18585:10:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 9178,
                                "name": "bsub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7480,
                                "src": "18571:4:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 9181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18571:25:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9174,
                            "name": "_pullUnderlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10691,
                            "src": "18536:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 9182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18536:61:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9183,
                        "nodeType": "ExpressionStatement",
                        "src": "18536:61:37"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 9076,
              "nodeType": "StructuredDocumentation",
              "src": "17393:204:37",
              "text": " @dev rebind\n      Update pool reserves & weight after a token bind\n @param token token address\n @param balance initial reserve\n @param denorm denormalized weight"
            },
            "id": 9206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebind",
            "nameLocation": "17611:6:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9078,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17635:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9206,
                  "src": "17627:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17627:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9080,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "17658:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9206,
                  "src": "17650:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17650:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9082,
                  "mutability": "mutable",
                  "name": "denorm",
                  "nameLocation": "17683:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9206,
                  "src": "17675:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17675:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17617:78:37"
            },
            "returnParameters": {
              "id": 9084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17705:0:37"
            },
            "scope": 10803,
            "src": "17602:1341:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9254,
              "nodeType": "Block",
              "src": "19352:407:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9221,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9209,
                        "src": "19374:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9220,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "19362:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 9222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19362:20:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9223,
                  "nodeType": "ExpressionStatement",
                  "src": "19362:20:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9225,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9211,
                        "src": "19404:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9224,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "19392:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 9226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19392:21:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9227,
                  "nodeType": "ExpressionStatement",
                  "src": "19392:21:37"
                },
                {
                  "assignments": [
                    9230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9230,
                      "mutability": "mutable",
                      "name": "inRecord",
                      "nameLocation": "19438:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9254,
                      "src": "19423:23:37",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 9229,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9228,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "19423:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "19423:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9234,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9231,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "19449:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 9233,
                    "indexExpression": {
                      "id": 9232,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9209,
                      "src": "19458:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19449:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19423:43:37"
                },
                {
                  "assignments": [
                    9237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9237,
                      "mutability": "mutable",
                      "name": "outRecord",
                      "nameLocation": "19491:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9254,
                      "src": "19476:24:37",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 9236,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9235,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "19476:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "19476:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9241,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9238,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "19503:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 9240,
                    "indexExpression": {
                      "id": 9239,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9211,
                      "src": "19512:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19503:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19476:45:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9243,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9230,
                          "src": "19581:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9244,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "19581:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9245,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9230,
                          "src": "19615:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9246,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "19615:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9247,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9237,
                          "src": "19648:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9248,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "19648:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9249,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9237,
                          "src": "19683:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9250,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "19683:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9251,
                        "name": "_consumeMarketSwapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9213,
                        "src": "19717:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9242,
                      "name": "calcSpotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6834,
                      "src": "19550:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 9252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19550:202:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9219,
                  "id": 9253,
                  "nodeType": "Return",
                  "src": "19531:221:37"
                }
              ]
            },
            "documentation": {
              "id": 9207,
              "nodeType": "StructuredDocumentation",
              "src": "18949:227:37",
              "text": " @dev getSpotPrice\n      Return the spot price of swapping tokenIn to tokenOut\n @param tokenIn in token\n @param tokenOut out token\n @param _consumeMarketSwapFee consume market swap fee "
            },
            "functionSelector": "079492d4",
            "id": 9255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9215,
                  "name": "_viewlock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8065,
                  "src": "19313:10:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "19313:10:37"
              }
            ],
            "name": "getSpotPrice",
            "nameLocation": "19190:12:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9209,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "19220:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9255,
                  "src": "19212:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19212:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9211,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "19245:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9255,
                  "src": "19237:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19237:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9213,
                  "mutability": "mutable",
                  "name": "_consumeMarketSwapFee",
                  "nameLocation": "19271:21:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9255,
                  "src": "19263:29:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19263:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19202:96:37"
            },
            "returnParameters": {
              "id": 9219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9218,
                  "mutability": "mutable",
                  "name": "spotPrice",
                  "nameLocation": "19341:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9255,
                  "src": "19333:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19333:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19332:19:37"
            },
            "scope": 10803,
            "src": "19181:578:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              28462
            ],
            "body": {
              "id": 9338,
              "nodeType": "Block",
              "src": "20664:715:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9278,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9258,
                        "src": "20686:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9277,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "20674:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 9279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20674:20:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9280,
                  "nodeType": "ExpressionStatement",
                  "src": "20674:20:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9282,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9260,
                        "src": "20716:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9281,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "20704:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 9283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20704:21:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9284,
                  "nodeType": "ExpressionStatement",
                  "src": "20704:21:37"
                },
                {
                  "assignments": [
                    9290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9290,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "20753:4:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9338,
                      "src": "20735:22:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 9288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20735:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9289,
                        "length": {
                          "hexValue": "34",
                          "id": 9287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20743:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "20735:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                          "typeString": "uint256[4]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9308,
                  "initialValue": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 9291,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "20774:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 9293,
                          "indexExpression": {
                            "id": 9292,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9258,
                            "src": "20783:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20774:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 9294,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "20774:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 9295,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "20813:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 9297,
                          "indexExpression": {
                            "id": 9296,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9258,
                            "src": "20822:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20813:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 9298,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "20813:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 9299,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "20851:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 9301,
                          "indexExpression": {
                            "id": 9300,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9260,
                            "src": "20860:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20851:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 9302,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "20851:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 9303,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "20891:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 9305,
                          "indexExpression": {
                            "id": 9304,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9260,
                            "src": "20900:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20891:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 9306,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "20891:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9307,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "20760:166:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                      "typeString": "uint256[4] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20735:191:37"
                },
                {
                  "assignments": [
                    9310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9310,
                      "mutability": "mutable",
                      "name": "tokenAmountInBalance",
                      "nameLocation": "20941:20:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9338,
                      "src": "20936:25:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9309,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20936:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9311,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20936:25:37"
                },
                {
                  "assignments": [
                    9314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9314,
                      "mutability": "mutable",
                      "name": "_swapfees",
                      "nameLocation": "20987:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9338,
                      "src": "20971:25:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                        "typeString": "struct BMath.swapfees"
                      },
                      "typeName": {
                        "id": 9313,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9312,
                          "name": "swapfees",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6772,
                          "src": "20971:8:37"
                        },
                        "referencedDeclaration": 6772,
                        "src": "20971:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_swapfees_$6772_storage_ptr",
                          "typeString": "struct BMath.swapfees"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9315,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20971:25:37"
                },
                {
                  "expression": {
                    "id": 9325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 9316,
                          "name": "tokenAmountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9267,
                          "src": "21007:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9317,
                          "name": "tokenAmountInBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9310,
                          "src": "21022:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9318,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9314,
                          "src": "21044:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        }
                      ],
                      "id": 9319,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "21006:48:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256,struct BMath.swapfees memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9321,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9290,
                          "src": "21109:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                            "typeString": "uint256[4] memory"
                          }
                        },
                        {
                          "id": 9322,
                          "name": "tokenAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9262,
                          "src": "21131:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9323,
                          "name": "_consumeMarketSwapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9264,
                          "src": "21191:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                            "typeString": "uint256[4] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9320,
                        "name": "calcInGivenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7169,
                        "src": "21077:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$4_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                          "typeString": "function (uint256[4] memory,uint256,uint256) view returns (uint256,uint256,struct BMath.swapfees memory)"
                        }
                      },
                      "id": 9324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21077:149:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256,struct BMath.swapfees memory)"
                      }
                    },
                    "src": "21006:220:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9326,
                  "nodeType": "ExpressionStatement",
                  "src": "21006:220:37"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 9327,
                        "name": "tokenAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9267,
                        "src": "21243:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9328,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9314,
                          "src": "21258:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9329,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LPFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6765,
                        "src": "21258:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9330,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9314,
                          "src": "21275:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9331,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "oceanFeeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6767,
                        "src": "21275:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9332,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9314,
                          "src": "21310:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9333,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publishMarketFeeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6769,
                        "src": "21310:32:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9334,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9314,
                          "src": "21344:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9335,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "consumeMarketFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6771,
                        "src": "21344:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9336,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "21242:129:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 9276,
                  "id": 9337,
                  "nodeType": "Return",
                  "src": "21236:135:37"
                }
              ]
            },
            "documentation": {
              "id": 9256,
              "nodeType": "StructuredDocumentation",
              "src": "19827:409:37",
              "text": " @dev getAmountInExactOut\n      How many tokensIn do you need in order to get exact tokenAmountOut.\nReturns: tokenAmountIn, LPFee, opcFee , publishMarketSwapFee, consumeMarketSwapFee\n @param tokenIn token to be swaped\n @param tokenOut token to get\n @param tokenAmountOut exact amount of tokenOut\n @param _consumeMarketSwapFee consume market swap fee"
            },
            "functionSelector": "caa01148",
            "id": 9339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountInExactOut",
            "nameLocation": "20251:19:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9258,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "20288:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "20280:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20280:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9260,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "20313:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "20305:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20305:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9262,
                  "mutability": "mutable",
                  "name": "tokenAmountOut",
                  "nameLocation": "20339:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "20331:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20331:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9264,
                  "mutability": "mutable",
                  "name": "_consumeMarketSwapFee",
                  "nameLocation": "20371:21:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "20363:29:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20363:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20270:128:37"
            },
            "returnParameters": {
              "id": 9276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9267,
                  "mutability": "mutable",
                  "name": "tokenAmountIn",
                  "nameLocation": "20493:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "20485:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20485:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9269,
                  "mutability": "mutable",
                  "name": "lpFeeAmount",
                  "nameLocation": "20513:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "20508:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9268,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20508:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9271,
                  "mutability": "mutable",
                  "name": "oceanFeeAmount",
                  "nameLocation": "20544:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "20539:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20539:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9273,
                  "mutability": "mutable",
                  "name": "publishMarketSwapFeeAmount",
                  "nameLocation": "20578:26:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "20573:31:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9272,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20573:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9275,
                  "mutability": "mutable",
                  "name": "consumeMarketSwapFeeAmount",
                  "nameLocation": "20623:26:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9339,
                  "src": "20618:31:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20618:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20445:214:37"
            },
            "scope": 10803,
            "src": "20242:1137:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              28483
            ],
            "body": {
              "id": 9422,
              "nodeType": "Block",
              "src": "22267:703:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9362,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9342,
                        "src": "22289:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9361,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "22277:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 9363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22277:20:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9364,
                  "nodeType": "ExpressionStatement",
                  "src": "22277:20:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9366,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9344,
                        "src": "22319:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9365,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "22307:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 9367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22307:21:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9368,
                  "nodeType": "ExpressionStatement",
                  "src": "22307:21:37"
                },
                {
                  "assignments": [
                    9374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9374,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "22356:4:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9422,
                      "src": "22338:22:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 9372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22338:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9373,
                        "length": {
                          "hexValue": "34",
                          "id": 9371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22346:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "22338:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                          "typeString": "uint256[4]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9392,
                  "initialValue": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 9375,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "22377:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 9377,
                          "indexExpression": {
                            "id": 9376,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "22386:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22377:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 9378,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "22377:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 9379,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "22416:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 9381,
                          "indexExpression": {
                            "id": 9380,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "22425:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22416:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 9382,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "22416:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 9383,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "22454:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 9385,
                          "indexExpression": {
                            "id": 9384,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9344,
                            "src": "22463:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22454:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 9386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "22454:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 9387,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "22494:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 9389,
                          "indexExpression": {
                            "id": 9388,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9344,
                            "src": "22503:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22494:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 9390,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "22494:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9391,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "22363:166:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                      "typeString": "uint256[4] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22338:191:37"
                },
                {
                  "assignments": [
                    9394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9394,
                      "mutability": "mutable",
                      "name": "balanceInToAdd",
                      "nameLocation": "22544:14:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9422,
                      "src": "22539:19:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9393,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "22539:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9395,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22539:19:37"
                },
                {
                  "assignments": [
                    9398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9398,
                      "mutability": "mutable",
                      "name": "_swapfees",
                      "nameLocation": "22584:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9422,
                      "src": "22568:25:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                        "typeString": "struct BMath.swapfees"
                      },
                      "typeName": {
                        "id": 9397,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9396,
                          "name": "swapfees",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6772,
                          "src": "22568:8:37"
                        },
                        "referencedDeclaration": 6772,
                        "src": "22568:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_swapfees_$6772_storage_ptr",
                          "typeString": "struct BMath.swapfees"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9399,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22568:25:37"
                },
                {
                  "expression": {
                    "id": 9409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 9400,
                          "name": "tokenAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9351,
                          "src": "22605:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9401,
                          "name": "balanceInToAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9394,
                          "src": "22621:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9402,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9398,
                          "src": "22637:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        }
                      ],
                      "id": 9403,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "22604:43:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256,struct BMath.swapfees memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9405,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9374,
                          "src": "22702:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                            "typeString": "uint256[4] memory"
                          }
                        },
                        {
                          "id": 9406,
                          "name": "tokenAmountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9346,
                          "src": "22724:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9407,
                          "name": "_consumeMarketSwapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9348,
                          "src": "22782:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                            "typeString": "uint256[4] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9404,
                        "name": "calcOutGivenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7000,
                        "src": "22670:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$4_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                          "typeString": "function (uint256[4] memory,uint256,uint256) view returns (uint256,uint256,struct BMath.swapfees memory)"
                        }
                      },
                      "id": 9408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22670:147:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256,struct BMath.swapfees memory)"
                      }
                    },
                    "src": "22604:213:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9410,
                  "nodeType": "ExpressionStatement",
                  "src": "22604:213:37"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 9411,
                        "name": "tokenAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9351,
                        "src": "22834:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9412,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9398,
                          "src": "22850:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9413,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LPFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6765,
                        "src": "22850:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9414,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9398,
                          "src": "22876:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9415,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "oceanFeeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6767,
                        "src": "22876:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9416,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9398,
                          "src": "22902:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9417,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publishMarketFeeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6769,
                        "src": "22902:32:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9418,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9398,
                          "src": "22936:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9419,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "consumeMarketFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6771,
                        "src": "22936:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9420,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "22833:130:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 9360,
                  "id": 9421,
                  "nodeType": "Return",
                  "src": "22827:136:37"
                }
              ]
            },
            "documentation": {
              "id": 9340,
              "nodeType": "StructuredDocumentation",
              "src": "21426:401:37",
              "text": " @dev getAmountOutExactIn\n      How many tokensOut you will get for a exact tokenAmountIn\nReturns: tokenAmountOut, LPFee, opcFee ,  publishMarketSwapFee, consumeMarketSwapFee\n @param tokenIn token to be swaped\n @param tokenOut token to get\n @param tokenAmountOut exact amount of tokenOut\n @param _consumeMarketSwapFee consume market swap fee"
            },
            "functionSelector": "2eebd6ae",
            "id": 9423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountOutExactIn",
            "nameLocation": "21841:19:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9342,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "21878:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9423,
                  "src": "21870:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21870:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9344,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "21903:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9423,
                  "src": "21895:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21895:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9346,
                  "mutability": "mutable",
                  "name": "tokenAmountIn",
                  "nameLocation": "21929:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9423,
                  "src": "21921:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21921:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9348,
                  "mutability": "mutable",
                  "name": "_consumeMarketSwapFee",
                  "nameLocation": "21960:21:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9423,
                  "src": "21952:29:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21952:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21860:127:37"
            },
            "returnParameters": {
              "id": 9360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9351,
                  "mutability": "mutable",
                  "name": "tokenAmountOut",
                  "nameLocation": "22083:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9423,
                  "src": "22075:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22075:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9353,
                  "mutability": "mutable",
                  "name": "lpFeeAmount",
                  "nameLocation": "22116:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9423,
                  "src": "22111:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9352,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22111:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9355,
                  "mutability": "mutable",
                  "name": "oceanFeeAmount",
                  "nameLocation": "22147:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9423,
                  "src": "22142:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9354,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22142:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9357,
                  "mutability": "mutable",
                  "name": "publishMarketSwapFeeAmount",
                  "nameLocation": "22181:26:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9423,
                  "src": "22176:31:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9356,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22176:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9359,
                  "mutability": "mutable",
                  "name": "consumeMarketSwapFeeAmount",
                  "nameLocation": "22226:26:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9423,
                  "src": "22221:31:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9358,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22221:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22034:228:37"
            },
            "scope": 10803,
            "src": "21832:1138:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              28426
            ],
            "body": {
              "id": 9806,
              "nodeType": "Block",
              "src": "23509:3696:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9442,
                        "name": "_finalized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8075,
                        "src": "23527:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4e4f545f46494e414c495a4544",
                        "id": 9443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23539:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e0a50e0802c41001c819a1d72124e98da239dcaeee85bac2236e5d8595f284f",
                          "typeString": "literal_string \"ERR_NOT_FINALIZED\""
                        },
                        "value": "ERR_NOT_FINALIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e0a50e0802c41001c819a1d72124e98da239dcaeee85bac2236e5d8595f284f",
                          "typeString": "literal_string \"ERR_NOT_FINALIZED\""
                        }
                      ],
                      "id": 9441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23519:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23519:40:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9445,
                  "nodeType": "ExpressionStatement",
                  "src": "23519:40:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 9447,
                            "name": "tokenInOutMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9428,
                            "src": "23577:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                              "typeString": "address[3] calldata"
                            }
                          },
                          "id": 9449,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 9448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23594:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23577:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 9450,
                            "name": "tokenInOutMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9428,
                            "src": "23600:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                              "typeString": "address[3] calldata"
                            }
                          },
                          "id": 9452,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 9451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23617:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23600:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "23577:42:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420737761702073616d6520746f6b656e",
                        "id": 9454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23621:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e17b2305aa4d10dfd0dac26c69f3164b23b1c0c393b2a7633b8ddb8ca1b3e8c",
                          "typeString": "literal_string \"Cannot swap same token\""
                        },
                        "value": "Cannot swap same token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e17b2305aa4d10dfd0dac26c69f3164b23b1c0c393b2a7633b8ddb8ca1b3e8c",
                          "typeString": "literal_string \"Cannot swap same token\""
                        }
                      ],
                      "id": 9446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23569:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23569:77:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9456,
                  "nodeType": "ExpressionStatement",
                  "src": "23569:77:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 9458,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "23668:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9460,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23685:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23668:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9457,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "23656:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 9461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23656:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9462,
                  "nodeType": "ExpressionStatement",
                  "src": "23656:32:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 9464,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "23710:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9466,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 9465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23727:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23710:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9463,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "23698:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 9467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23698:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9468,
                  "nodeType": "ExpressionStatement",
                  "src": "23698:32:37"
                },
                {
                  "assignments": [
                    9471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9471,
                      "mutability": "mutable",
                      "name": "inRecord",
                      "nameLocation": "23755:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9806,
                      "src": "23740:23:37",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 9470,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9469,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "23740:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "23740:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9480,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9472,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "23766:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 9479,
                    "indexExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 9475,
                            "name": "tokenInOutMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9428,
                            "src": "23783:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                              "typeString": "address[3] calldata"
                            }
                          },
                          "id": 9477,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 9476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23800:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23783:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23775:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23775:7:37",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23775:28:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23766:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23740:64:37"
                },
                {
                  "assignments": [
                    9483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9483,
                      "mutability": "mutable",
                      "name": "outRecord",
                      "nameLocation": "23829:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9806,
                      "src": "23814:24:37",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 9482,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9481,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "23814:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "23814:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9492,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9484,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "23841:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 9491,
                    "indexExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 9487,
                            "name": "tokenInOutMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9428,
                            "src": "23858:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                              "typeString": "address[3] calldata"
                            }
                          },
                          "id": 9489,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 9488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23875:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23858:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23850:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9485,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23850:7:37",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23850:28:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23841:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23814:65:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 9494,
                              "name": "amountsInOutMaxFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9432,
                              "src": "23897:18:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                                "typeString": "uint256[4] calldata"
                              }
                            },
                            "id": 9496,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 9495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23916:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23897:21:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23921:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "23897:25:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 9499,
                              "name": "amountsInOutMaxFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9432,
                              "src": "23926:18:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                                "typeString": "uint256[4] calldata"
                              }
                            },
                            "id": 9501,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 9500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23945:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23926:21:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 9502,
                            "name": "MIN_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6280,
                            "src": "23951:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23926:32:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "23897:61:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e73756d655377617046656520746f6f206c6f77",
                        "id": 9505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23959:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98ec0793eb4e2a3704218567162916339b53798372088403863d3f6151116578",
                          "typeString": "literal_string \"ConsumeSwapFee too low\""
                        },
                        "value": "ConsumeSwapFee too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98ec0793eb4e2a3704218567162916339b53798372088403863d3f6151116578",
                          "typeString": "literal_string \"ConsumeSwapFee too low\""
                        }
                      ],
                      "id": 9493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23889:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23889:95:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9507,
                  "nodeType": "ExpressionStatement",
                  "src": "23889:95:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 9509,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9432,
                            "src": "24002:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9511,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 9510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24021:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24002:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 9512,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "24027:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24002:32:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e73756d655377617046656520746f6f2068696768",
                        "id": 9514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24035:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2a78c18c392e278d818e0af7a210a54b9b02e2384f510600139a5f28e7ecbd2",
                          "typeString": "literal_string \"ConsumeSwapFee too high\""
                        },
                        "value": "ConsumeSwapFee too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2a78c18c392e278d818e0af7a210a54b9b02e2384f510600139a5f28e7ecbd2",
                          "typeString": "literal_string \"ConsumeSwapFee too high\""
                        }
                      ],
                      "id": 9508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23994:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23994:67:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9516,
                  "nodeType": "ExpressionStatement",
                  "src": "23994:67:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 9518,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9432,
                            "src": "24092:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9520,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 9519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24111:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24092:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 9522,
                                "name": "inRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9471,
                                "src": "24122:8:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                                  "typeString": "struct BPool.Record storage pointer"
                                }
                              },
                              "id": 9523,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7900,
                              "src": "24122:16:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 9524,
                              "name": "MAX_IN_RATIO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6332,
                              "src": "24140:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9521,
                            "name": "bmul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7563,
                            "src": "24117:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 9525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24117:36:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24092:61:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d41585f494e5f524154494f",
                        "id": 9527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24167:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3050677a696f4e0f0af7fbd29d6f24f52a3873a4edbfdfefdc5ce1465c444acf",
                          "typeString": "literal_string \"ERR_MAX_IN_RATIO\""
                        },
                        "value": "ERR_MAX_IN_RATIO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3050677a696f4e0f0af7fbd29d6f24f52a3873a4edbfdfefdc5ce1465c444acf",
                          "typeString": "literal_string \"ERR_MAX_IN_RATIO\""
                        }
                      ],
                      "id": 9517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24071:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24071:124:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9529,
                  "nodeType": "ExpressionStatement",
                  "src": "24071:124:37"
                },
                {
                  "assignments": [
                    9531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9531,
                      "mutability": "mutable",
                      "name": "spotPriceBefore",
                      "nameLocation": "24214:15:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9806,
                      "src": "24206:23:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9530,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24206:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9545,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9533,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9471,
                          "src": "24259:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9534,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "24259:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9535,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9471,
                          "src": "24289:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9536,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "24289:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9537,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "24318:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9538,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "24318:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9539,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "24349:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9540,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "24349:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9541,
                          "name": "amountsInOutMaxFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9432,
                          "src": "24379:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                            "typeString": "uint256[4] calldata"
                          }
                        },
                        "id": 9543,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 9542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24398:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24379:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9532,
                      "name": "calcSpotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6834,
                      "src": "24232:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 9544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24232:178:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24206:204:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9547,
                          "name": "spotPriceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9531,
                          "src": "24442:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 9548,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9432,
                            "src": "24461:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9550,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 9549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24480:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24461:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24442:40:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4241445f4c494d49545f5052494345",
                        "id": 9552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24496:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8be255c2a8eee29f022cb079554d7088e735aa3d5d6f9dc88998c3ffe134ce88",
                          "typeString": "literal_string \"ERR_BAD_LIMIT_PRICE\""
                        },
                        "value": "ERR_BAD_LIMIT_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8be255c2a8eee29f022cb079554d7088e735aa3d5d6f9dc88998c3ffe134ce88",
                          "typeString": "literal_string \"ERR_BAD_LIMIT_PRICE\""
                        }
                      ],
                      "id": 9546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24421:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24421:106:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9554,
                  "nodeType": "ExpressionStatement",
                  "src": "24421:106:37"
                },
                {
                  "assignments": [
                    9556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9556,
                      "mutability": "mutable",
                      "name": "balanceInToAdd",
                      "nameLocation": "24545:14:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9806,
                      "src": "24537:22:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9555,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24537:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9557,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24537:22:37"
                },
                {
                  "assignments": [
                    9563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9563,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "24587:4:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9806,
                      "src": "24569:22:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 9561,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24569:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9562,
                        "length": {
                          "hexValue": "34",
                          "id": 9560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24577:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "24569:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                          "typeString": "uint256[4]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9573,
                  "initialValue": {
                    "components": [
                      {
                        "expression": {
                          "id": 9564,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9471,
                          "src": "24608:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9565,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "24608:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9566,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9471,
                          "src": "24638:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9567,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "24638:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9568,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "24667:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9569,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "24667:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9570,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "24698:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9571,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "24698:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9572,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "24594:130:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                      "typeString": "uint256[4] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24569:155:37"
                },
                {
                  "assignments": [
                    9576
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9576,
                      "mutability": "mutable",
                      "name": "_swapfees",
                      "nameLocation": "24750:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9806,
                      "src": "24734:25:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                        "typeString": "struct BMath.swapfees"
                      },
                      "typeName": {
                        "id": 9575,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9574,
                          "name": "swapfees",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6772,
                          "src": "24734:8:37"
                        },
                        "referencedDeclaration": 6772,
                        "src": "24734:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_swapfees_$6772_storage_ptr",
                          "typeString": "struct BMath.swapfees"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9577,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24734:25:37"
                },
                {
                  "expression": {
                    "id": 9591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 9578,
                          "name": "tokenAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9437,
                          "src": "24770:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9579,
                          "name": "balanceInToAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9556,
                          "src": "24786:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9580,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9576,
                          "src": "24802:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        }
                      ],
                      "id": 9581,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "24769:43:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256,struct BMath.swapfees memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9583,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9563,
                          "src": "24843:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                            "typeString": "uint256[4] memory"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 9584,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9432,
                            "src": "24861:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9586,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 9585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24880:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24861:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 9587,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9432,
                            "src": "24931:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9589,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 9588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24950:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24931:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                            "typeString": "uint256[4] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9582,
                        "name": "calcOutGivenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7000,
                        "src": "24815:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$4_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                          "typeString": "function (uint256[4] memory,uint256,uint256) view returns (uint256,uint256,struct BMath.swapfees memory)"
                        }
                      },
                      "id": 9590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24815:147:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256,struct BMath.swapfees memory)"
                      }
                    },
                    "src": "24769:193:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9592,
                  "nodeType": "ExpressionStatement",
                  "src": "24769:193:37"
                },
                {
                  "expression": {
                    "id": 9607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9593,
                        "name": "communityFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6746,
                        "src": "24999:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 9597,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 9594,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "25013:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9596,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25030:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25013:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24999:34:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 9599,
                            "name": "communityFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6746,
                            "src": "25041:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 9603,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 9600,
                              "name": "tokenInOutMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9428,
                              "src": "25055:16:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                "typeString": "address[3] calldata"
                              }
                            },
                            "id": 9602,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 9601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25072:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "25055:19:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25041:34:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 9604,
                            "name": "_swapfees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9576,
                            "src": "25076:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                              "typeString": "struct BMath.swapfees memory"
                            }
                          },
                          "id": 9605,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oceanFeeAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6767,
                          "src": "25076:24:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9598,
                        "name": "badd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7453,
                        "src": "25036:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25036:65:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24999:102:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9608,
                  "nodeType": "ExpressionStatement",
                  "src": "24999:102:37"
                },
                {
                  "expression": {
                    "id": 9623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9609,
                        "name": "publishMarketFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6750,
                        "src": "25111:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 9613,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 9610,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "25129:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9612,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25146:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25129:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "25111:38:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 9615,
                            "name": "publishMarketFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6750,
                            "src": "25166:17:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 9619,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 9616,
                              "name": "tokenInOutMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9428,
                              "src": "25184:16:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                "typeString": "address[3] calldata"
                              }
                            },
                            "id": 9618,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 9617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25201:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "25184:19:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25166:38:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 9620,
                            "name": "_swapfees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9576,
                            "src": "25205:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                              "typeString": "struct BMath.swapfees memory"
                            }
                          },
                          "id": 9621,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "publishMarketFeeAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6769,
                          "src": "25205:32:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9614,
                        "name": "badd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7453,
                        "src": "25161:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25161:77:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25111:127:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9624,
                  "nodeType": "ExpressionStatement",
                  "src": "25111:127:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9626,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9576,
                          "src": "25263:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9627,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LPFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6765,
                        "src": "25263:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9628,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9576,
                          "src": "25280:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9629,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "oceanFeeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6767,
                        "src": "25280:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9630,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9576,
                          "src": "25314:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9631,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publishMarketFeeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6769,
                        "src": "25314:32:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9632,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9576,
                          "src": "25347:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 9633,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "consumeMarketFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6771,
                        "src": "25347:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9634,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "25375:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9636,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25392:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25375:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9625,
                      "name": "SWAP_FEES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8021,
                      "src": "25253:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address)"
                      }
                    },
                    "id": 9637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25253:142:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9638,
                  "nodeType": "EmitStatement",
                  "src": "25248:147:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9640,
                          "name": "tokenAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9437,
                          "src": "25413:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 9641,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9432,
                            "src": "25431:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9643,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 9642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "25450:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25431:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25413:39:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4c494d49545f4f5554",
                        "id": 9645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25454:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_665ff818e83fa8776541f5756d1025222aecfe18eeb105729691884778497705",
                          "typeString": "literal_string \"ERR_LIMIT_OUT\""
                        },
                        "value": "ERR_LIMIT_OUT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_665ff818e83fa8776541f5756d1025222aecfe18eeb105729691884778497705",
                          "typeString": "literal_string \"ERR_LIMIT_OUT\""
                        }
                      ],
                      "id": 9639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25405:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25405:65:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9647,
                  "nodeType": "ExpressionStatement",
                  "src": "25405:65:37"
                },
                {
                  "expression": {
                    "id": 9656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9648,
                        "name": "inRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9471,
                        "src": "25481:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record storage pointer"
                        }
                      },
                      "id": 9650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7900,
                      "src": "25481:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 9652,
                            "name": "inRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9471,
                            "src": "25505:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 9653,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "25505:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9654,
                          "name": "balanceInToAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9556,
                          "src": "25523:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9651,
                        "name": "badd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7453,
                        "src": "25500:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25500:38:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25481:57:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9657,
                  "nodeType": "ExpressionStatement",
                  "src": "25481:57:37"
                },
                {
                  "expression": {
                    "id": 9666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9658,
                        "name": "outRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9483,
                        "src": "25548:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record storage pointer"
                        }
                      },
                      "id": 9660,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7900,
                      "src": "25548:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 9662,
                            "name": "outRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9483,
                            "src": "25573:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 9663,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "25573:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9664,
                          "name": "tokenAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9437,
                          "src": "25592:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9661,
                        "name": "bsub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7480,
                        "src": "25568:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25568:39:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25548:59:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9667,
                  "nodeType": "ExpressionStatement",
                  "src": "25548:59:37"
                },
                {
                  "expression": {
                    "id": 9682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9668,
                      "name": "spotPriceAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9439,
                      "src": "25618:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 9670,
                            "name": "inRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9471,
                            "src": "25662:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 9671,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "25662:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 9672,
                            "name": "inRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9471,
                            "src": "25692:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 9673,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "denorm",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7898,
                          "src": "25692:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 9674,
                            "name": "outRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9483,
                            "src": "25721:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 9675,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "25721:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 9676,
                            "name": "outRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9483,
                            "src": "25752:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 9677,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "denorm",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7898,
                          "src": "25752:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 9678,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9432,
                            "src": "25782:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9680,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 9679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "25801:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25782:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9669,
                        "name": "calcSpotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6834,
                        "src": "25635:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 9681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25635:178:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25618:195:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9683,
                  "nodeType": "ExpressionStatement",
                  "src": "25618:195:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9685,
                          "name": "spotPriceAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9439,
                          "src": "25832:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 9686,
                          "name": "spotPriceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9531,
                          "src": "25850:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25832:33:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d4154485f415050524f58",
                        "id": 9688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25867:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187",
                          "typeString": "literal_string \"ERR_MATH_APPROX\""
                        },
                        "value": "ERR_MATH_APPROX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187",
                          "typeString": "literal_string \"ERR_MATH_APPROX\""
                        }
                      ],
                      "id": 9684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25824:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25824:61:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9690,
                  "nodeType": "ExpressionStatement",
                  "src": "25824:61:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9692,
                          "name": "spotPriceAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9439,
                          "src": "25903:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 9693,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9432,
                            "src": "25921:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9695,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 9694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "25940:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25921:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25903:39:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4c494d49545f5052494345",
                        "id": 9697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25944:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5544ff618944f1e1eee76066a3c4ee71ebb3e4c80a9b96ceaf365ff27739eb5",
                          "typeString": "literal_string \"ERR_LIMIT_PRICE\""
                        },
                        "value": "ERR_LIMIT_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5544ff618944f1e1eee76066a3c4ee71ebb3e4c80a9b96ceaf365ff27739eb5",
                          "typeString": "literal_string \"ERR_LIMIT_PRICE\""
                        }
                      ],
                      "id": 9691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25895:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25895:67:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9699,
                  "nodeType": "ExpressionStatement",
                  "src": "25895:67:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9701,
                          "name": "spotPriceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9531,
                          "src": "25994:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 9703,
                                "name": "amountsInOutMaxFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9432,
                                "src": "26018:18:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                                  "typeString": "uint256[4] calldata"
                                }
                              },
                              "id": 9705,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 9704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26037:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26018:21:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 9706,
                              "name": "tokenAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9437,
                              "src": "26041:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9702,
                            "name": "bdiv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7623,
                            "src": "26013:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 9707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26013:43:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25994:62:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d4154485f415050524f58",
                        "id": 9709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26070:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187",
                          "typeString": "literal_string \"ERR_MATH_APPROX\""
                        },
                        "value": "ERR_MATH_APPROX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187",
                          "typeString": "literal_string \"ERR_MATH_APPROX\""
                        }
                      ],
                      "id": 9700,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25973:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25973:124:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9711,
                  "nodeType": "ExpressionStatement",
                  "src": "25973:124:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26135:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26135:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9715,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "26159:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9717,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26176:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26159:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9718,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "26192:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9720,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 9719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26209:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26192:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9721,
                          "name": "amountsInOutMaxFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9432,
                          "src": "26225:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                            "typeString": "uint256[4] calldata"
                          }
                        },
                        "id": 9723,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26244:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26225:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9724,
                        "name": "tokenAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9437,
                        "src": "26260:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9725,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "26288:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 9726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "26288:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9727,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9471,
                          "src": "26317:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9728,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "26317:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9729,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "26347:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9730,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "26347:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9731,
                        "name": "spotPriceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9439,
                        "src": "26378:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9712,
                      "name": "LOG_SWAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7921,
                      "src": "26113:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 9732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26113:290:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9733,
                  "nodeType": "EmitStatement",
                  "src": "26108:295:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 9735,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "26430:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9737,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26447:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26430:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9738,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26451:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26451:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9740,
                          "name": "amountsInOutMaxFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9432,
                          "src": "26463:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                            "typeString": "uint256[4] calldata"
                          }
                        },
                        "id": 9742,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26482:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26463:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9734,
                      "name": "_pullUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10691,
                      "src": "26414:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 9743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26414:71:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9744,
                  "nodeType": "ExpressionStatement",
                  "src": "26414:71:37"
                },
                {
                  "assignments": [
                    9746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9746,
                      "mutability": "mutable",
                      "name": "consumeMarketFeeAmount",
                      "nameLocation": "26503:22:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 9806,
                      "src": "26495:30:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9745,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26495:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9763,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 9748,
                          "name": "amountsInOutMaxFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9432,
                          "src": "26546:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                            "typeString": "uint256[4] calldata"
                          }
                        },
                        "id": 9750,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26565:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26546:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9752,
                              "name": "amountsInOutMaxFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9432,
                              "src": "26586:18:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                                "typeString": "uint256[4] calldata"
                              }
                            },
                            "id": 9754,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 9753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26605:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "26586:21:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 9756,
                                "name": "BONE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6269,
                                "src": "26614:4:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 9757,
                                  "name": "amountsInOutMaxFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9432,
                                  "src": "26620:18:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                                    "typeString": "uint256[4] calldata"
                                  }
                                },
                                "id": 9759,
                                "indexExpression": {
                                  "hexValue": "33",
                                  "id": 9758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "26639:1:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "26620:21:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 9755,
                              "name": "bsub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7480,
                              "src": "26609:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 9760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26609:33:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9751,
                          "name": "bmul",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7563,
                          "src": "26581:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 9761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26581:62:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9747,
                      "name": "bsub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7480,
                      "src": "26528:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 9762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26528:125:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26495:158:37"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 9764,
                        "name": "amountsInOutMaxFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9432,
                        "src": "26667:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                          "typeString": "uint256[4] calldata"
                        }
                      },
                      "id": 9766,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 9765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26686:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26667:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 9767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26691:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "26667:25:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9792,
                  "nodeType": "IfStatement",
                  "src": "26663:350:37",
                  "trueBody": {
                    "id": 9791,
                    "nodeType": "Block",
                    "src": "26694:319:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 9775,
                                "name": "tokenInOutMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9428,
                                "src": "26766:16:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                  "typeString": "address[3] calldata"
                                }
                              },
                              "id": 9777,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 9776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26783:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26766:19:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9778,
                              "name": "consumeMarketFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9746,
                              "src": "26803:22:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 9770,
                                    "name": "tokenInOutMarket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9428,
                                    "src": "26715:16:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                      "typeString": "address[3] calldata"
                                    }
                                  },
                                  "id": 9772,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 9771,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "26732:1:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "26715:19:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 9769,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "26708:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 9773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26708:27:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3084",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 9774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25633,
                            "src": "26708:40:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3084_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3084_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 9779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26708:131:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9780,
                        "nodeType": "ExpressionStatement",
                        "src": "26708:131:37"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 9782,
                                "name": "tokenInOutMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9428,
                                "src": "26892:16:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                  "typeString": "address[3] calldata"
                                }
                              },
                              "id": 9784,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 9783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26909:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26892:19:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 9785,
                                "name": "tokenInOutMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9428,
                                "src": "26929:16:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                  "typeString": "address[3] calldata"
                                }
                              },
                              "id": 9787,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 9786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26946:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26929:19:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9788,
                              "name": "consumeMarketFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9746,
                              "src": "26966:22:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9781,
                            "name": "ConsumeMarketFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8009,
                            "src": "26858:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 9789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26858:144:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9790,
                        "nodeType": "EmitStatement",
                        "src": "26853:149:37"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 9794,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9428,
                          "src": "27038:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9796,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 9795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27055:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "27038:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9797,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "27059:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27059:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9799,
                        "name": "tokenAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9437,
                        "src": "27071:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9793,
                      "name": "_pushUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10709,
                      "src": "27022:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 9800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27022:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9801,
                  "nodeType": "ExpressionStatement",
                  "src": "27022:64:37"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 9802,
                        "name": "tokenAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9437,
                        "src": "27105:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9803,
                        "name": "spotPriceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9439,
                        "src": "27121:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9804,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "27104:32:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 9440,
                  "id": 9805,
                  "nodeType": "Return",
                  "src": "27097:39:37"
                }
              ]
            },
            "documentation": {
              "id": 9424,
              "nodeType": "StructuredDocumentation",
              "src": "22977:326:37",
              "text": " @dev swapExactAmountIn\n      Swaps an exact amount of tokensIn to get a mimum amount of tokenOut\n @param tokenInOutMarket array of addreses: [tokenIn, tokenOut, consumeMarketFeeAddress]\n @param amountsInOutMaxFee array of ints: [tokenAmountIn, minAmountOut, maxPrice, consumeMarketSwapFee]"
            },
            "functionSelector": "c421a3fc",
            "id": 9807,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9435,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9434,
                  "name": "_lock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8055,
                  "src": "23445:6:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "23445:6:37"
              }
            ],
            "name": "swapExactAmountIn",
            "nameLocation": "23317:17:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9428,
                  "mutability": "mutable",
                  "name": "tokenInOutMarket",
                  "nameLocation": "23364:16:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "23344:36:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                    "typeString": "address[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9425,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "23344:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9427,
                    "length": {
                      "hexValue": "33",
                      "id": 9426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23352:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "23344:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9432,
                  "mutability": "mutable",
                  "name": "amountsInOutMaxFee",
                  "nameLocation": "23411:18:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "23391:38:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                    "typeString": "uint256[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9429,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23391:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9431,
                    "length": {
                      "hexValue": "34",
                      "id": 9430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23399:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "23391:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                      "typeString": "uint256[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23334:101:37"
            },
            "returnParameters": {
              "id": 9440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9437,
                  "mutability": "mutable",
                  "name": "tokenAmountOut",
                  "nameLocation": "23469:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "23461:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23461:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9439,
                  "mutability": "mutable",
                  "name": "spotPriceAfter",
                  "nameLocation": "23493:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "23485:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23485:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23460:48:37"
            },
            "scope": 10803,
            "src": "23308:3897:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              28441
            ],
            "body": {
              "id": 10188,
              "nodeType": "Block",
              "src": "27750:3858:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9826,
                        "name": "_finalized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8075,
                        "src": "27768:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4e4f545f46494e414c495a4544",
                        "id": 9827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27780:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e0a50e0802c41001c819a1d72124e98da239dcaeee85bac2236e5d8595f284f",
                          "typeString": "literal_string \"ERR_NOT_FINALIZED\""
                        },
                        "value": "ERR_NOT_FINALIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e0a50e0802c41001c819a1d72124e98da239dcaeee85bac2236e5d8595f284f",
                          "typeString": "literal_string \"ERR_NOT_FINALIZED\""
                        }
                      ],
                      "id": 9825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27760:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27760:40:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9829,
                  "nodeType": "ExpressionStatement",
                  "src": "27760:40:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 9831,
                            "name": "tokenInOutMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9812,
                            "src": "27818:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                              "typeString": "address[3] calldata"
                            }
                          },
                          "id": 9833,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 9832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27835:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27818:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 9834,
                            "name": "tokenInOutMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9812,
                            "src": "27841:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                              "typeString": "address[3] calldata"
                            }
                          },
                          "id": 9836,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 9835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27858:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27841:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "27818:42:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420737761702073616d6520746f6b656e",
                        "id": 9838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27862:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e17b2305aa4d10dfd0dac26c69f3164b23b1c0c393b2a7633b8ddb8ca1b3e8c",
                          "typeString": "literal_string \"Cannot swap same token\""
                        },
                        "value": "Cannot swap same token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e17b2305aa4d10dfd0dac26c69f3164b23b1c0c393b2a7633b8ddb8ca1b3e8c",
                          "typeString": "literal_string \"Cannot swap same token\""
                        }
                      ],
                      "id": 9830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27810:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27810:77:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9840,
                  "nodeType": "ExpressionStatement",
                  "src": "27810:77:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 9842,
                              "name": "amountsInOutMaxFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9816,
                              "src": "27905:18:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                                "typeString": "uint256[4] calldata"
                              }
                            },
                            "id": 9844,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 9843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27924:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "27905:21:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27929:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "27905:25:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 9847,
                              "name": "amountsInOutMaxFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9816,
                              "src": "27934:18:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                                "typeString": "uint256[4] calldata"
                              }
                            },
                            "id": 9849,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 9848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27953:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "27934:21:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 9850,
                            "name": "MIN_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6280,
                            "src": "27959:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27934:32:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "27905:61:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e73756d655377617046656520746f6f206c6f77",
                        "id": 9853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27967:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98ec0793eb4e2a3704218567162916339b53798372088403863d3f6151116578",
                          "typeString": "literal_string \"ConsumeSwapFee too low\""
                        },
                        "value": "ConsumeSwapFee too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98ec0793eb4e2a3704218567162916339b53798372088403863d3f6151116578",
                          "typeString": "literal_string \"ConsumeSwapFee too low\""
                        }
                      ],
                      "id": 9841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27897:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27897:95:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9855,
                  "nodeType": "ExpressionStatement",
                  "src": "27897:95:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 9857,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9816,
                            "src": "28010:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9859,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 9858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28029:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28010:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 9860,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "28035:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28010:32:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e73756d655377617046656520746f6f2068696768",
                        "id": 9862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28043:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2a78c18c392e278d818e0af7a210a54b9b02e2384f510600139a5f28e7ecbd2",
                          "typeString": "literal_string \"ConsumeSwapFee too high\""
                        },
                        "value": "ConsumeSwapFee too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2a78c18c392e278d818e0af7a210a54b9b02e2384f510600139a5f28e7ecbd2",
                          "typeString": "literal_string \"ConsumeSwapFee too high\""
                        }
                      ],
                      "id": 9856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28002:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28002:67:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9864,
                  "nodeType": "ExpressionStatement",
                  "src": "28002:67:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 9866,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9812,
                          "src": "28091:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9868,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28108:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "28091:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9865,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "28079:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 9869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28079:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9870,
                  "nodeType": "ExpressionStatement",
                  "src": "28079:32:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 9872,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9812,
                          "src": "28133:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9874,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 9873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28150:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "28133:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9871,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "28121:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 9875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28121:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9876,
                  "nodeType": "ExpressionStatement",
                  "src": "28121:32:37"
                },
                {
                  "assignments": [
                    9879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9879,
                      "mutability": "mutable",
                      "name": "inRecord",
                      "nameLocation": "28178:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10188,
                      "src": "28163:23:37",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 9878,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9877,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "28163:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "28163:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9888,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9880,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "28189:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 9887,
                    "indexExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 9883,
                            "name": "tokenInOutMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9812,
                            "src": "28206:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                              "typeString": "address[3] calldata"
                            }
                          },
                          "id": 9885,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 9884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28223:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28206:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "28198:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9881,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28198:7:37",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28198:28:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28189:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28163:64:37"
                },
                {
                  "assignments": [
                    9891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9891,
                      "mutability": "mutable",
                      "name": "outRecord",
                      "nameLocation": "28252:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10188,
                      "src": "28237:24:37",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 9890,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9889,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "28237:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "28237:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9900,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9892,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "28264:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 9899,
                    "indexExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 9895,
                            "name": "tokenInOutMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9812,
                            "src": "28281:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                              "typeString": "address[3] calldata"
                            }
                          },
                          "id": 9897,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 9896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28298:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28281:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "28273:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9893,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28273:7:37",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28273:28:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28264:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28237:65:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 9902,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9816,
                            "src": "28334:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9904,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 9903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28353:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28334:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 9906,
                                "name": "outRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9891,
                                "src": "28364:9:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                                  "typeString": "struct BPool.Record storage pointer"
                                }
                              },
                              "id": 9907,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7900,
                              "src": "28364:17:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 9908,
                              "name": "MAX_OUT_RATIO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6340,
                              "src": "28383:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9905,
                            "name": "bmul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7563,
                            "src": "28359:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 9909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28359:38:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28334:63:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d41585f4f55545f524154494f",
                        "id": 9911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28411:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_863cb4bcd0b8884f90860e9fca5a02b421b5bc6a33c8399eb7f6df0648d0555a",
                          "typeString": "literal_string \"ERR_MAX_OUT_RATIO\""
                        },
                        "value": "ERR_MAX_OUT_RATIO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_863cb4bcd0b8884f90860e9fca5a02b421b5bc6a33c8399eb7f6df0648d0555a",
                          "typeString": "literal_string \"ERR_MAX_OUT_RATIO\""
                        }
                      ],
                      "id": 9901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28313:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28313:127:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9913,
                  "nodeType": "ExpressionStatement",
                  "src": "28313:127:37"
                },
                {
                  "assignments": [
                    9915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9915,
                      "mutability": "mutable",
                      "name": "spotPriceBefore",
                      "nameLocation": "28459:15:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10188,
                      "src": "28451:23:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9914,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28451:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9929,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9917,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9879,
                          "src": "28504:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9918,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "28504:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9919,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9879,
                          "src": "28534:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9920,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "28534:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9921,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9891,
                          "src": "28563:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9922,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "28563:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9923,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9891,
                          "src": "28594:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9924,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "28594:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9925,
                          "name": "amountsInOutMaxFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9816,
                          "src": "28624:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                            "typeString": "uint256[4] calldata"
                          }
                        },
                        "id": 9927,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 9926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28643:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "28624:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9916,
                      "name": "calcSpotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6834,
                      "src": "28477:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 9928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28477:178:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28451:204:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9931,
                          "name": "spotPriceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9915,
                          "src": "28687:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 9932,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9816,
                            "src": "28706:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9934,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 9933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28725:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28706:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28687:40:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4241445f4c494d49545f5052494345",
                        "id": 9936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28741:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8be255c2a8eee29f022cb079554d7088e735aa3d5d6f9dc88998c3ffe134ce88",
                          "typeString": "literal_string \"ERR_BAD_LIMIT_PRICE\""
                        },
                        "value": "ERR_BAD_LIMIT_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8be255c2a8eee29f022cb079554d7088e735aa3d5d6f9dc88998c3ffe134ce88",
                          "typeString": "literal_string \"ERR_BAD_LIMIT_PRICE\""
                        }
                      ],
                      "id": 9930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28666:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28666:106:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9938,
                  "nodeType": "ExpressionStatement",
                  "src": "28666:106:37"
                },
                {
                  "assignments": [
                    9940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9940,
                      "mutability": "mutable",
                      "name": "balanceToAdd",
                      "nameLocation": "29006:12:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10188,
                      "src": "28998:20:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9939,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28998:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9941,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28998:20:37"
                },
                {
                  "assignments": [
                    9947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9947,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "29046:4:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10188,
                      "src": "29028:22:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 9945,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "29028:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9946,
                        "length": {
                          "hexValue": "34",
                          "id": 9944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29036:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "29028:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                          "typeString": "uint256[4]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9957,
                  "initialValue": {
                    "components": [
                      {
                        "expression": {
                          "id": 9948,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9879,
                          "src": "29067:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9949,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "29067:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9950,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9879,
                          "src": "29097:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9951,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "29097:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9952,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9891,
                          "src": "29126:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9953,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "29126:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9954,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9891,
                          "src": "29157:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 9955,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denorm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7898,
                        "src": "29157:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9956,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "29053:130:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                      "typeString": "uint256[4] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29028:155:37"
                },
                {
                  "assignments": [
                    9960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9960,
                      "mutability": "mutable",
                      "name": "_swapfees",
                      "nameLocation": "29209:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10188,
                      "src": "29193:25:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                        "typeString": "struct BMath.swapfees"
                      },
                      "typeName": {
                        "id": 9959,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9958,
                          "name": "swapfees",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6772,
                          "src": "29193:8:37"
                        },
                        "referencedDeclaration": 6772,
                        "src": "29193:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_swapfees_$6772_storage_ptr",
                          "typeString": "struct BMath.swapfees"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9961,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29193:25:37"
                },
                {
                  "expression": {
                    "id": 9975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 9962,
                          "name": "tokenAmountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9821,
                          "src": "29229:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9963,
                          "name": "balanceToAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9940,
                          "src": "29244:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9964,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9960,
                          "src": "29266:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        }
                      ],
                      "id": 9965,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "29228:48:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256,struct BMath.swapfees memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9967,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9947,
                          "src": "29307:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                            "typeString": "uint256[4] memory"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 9968,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9816,
                            "src": "29325:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9970,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 9969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29344:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29325:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 9971,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9816,
                            "src": "29395:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 9973,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 9972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29414:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29395:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                            "typeString": "uint256[4] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9966,
                        "name": "calcInGivenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7169,
                        "src": "29279:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$4_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                          "typeString": "function (uint256[4] memory,uint256,uint256) view returns (uint256,uint256,struct BMath.swapfees memory)"
                        }
                      },
                      "id": 9974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29279:147:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_struct$_swapfees_$6772_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256,struct BMath.swapfees memory)"
                      }
                    },
                    "src": "29228:198:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9976,
                  "nodeType": "ExpressionStatement",
                  "src": "29228:198:37"
                },
                {
                  "expression": {
                    "id": 9991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9977,
                        "name": "communityFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6746,
                        "src": "29436:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 9981,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 9978,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9812,
                          "src": "29450:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9980,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29467:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "29450:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "29436:34:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 9983,
                            "name": "communityFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6746,
                            "src": "29478:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 9987,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 9984,
                              "name": "tokenInOutMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9812,
                              "src": "29492:16:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                "typeString": "address[3] calldata"
                              }
                            },
                            "id": 9986,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 9985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29509:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "29492:19:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29478:34:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 9988,
                            "name": "_swapfees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9960,
                            "src": "29513:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                              "typeString": "struct BMath.swapfees memory"
                            }
                          },
                          "id": 9989,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oceanFeeAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6767,
                          "src": "29513:24:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9982,
                        "name": "badd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7453,
                        "src": "29473:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29473:65:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29436:102:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9992,
                  "nodeType": "ExpressionStatement",
                  "src": "29436:102:37"
                },
                {
                  "expression": {
                    "id": 10007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9993,
                        "name": "publishMarketFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6750,
                        "src": "29548:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 9997,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 9994,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9812,
                          "src": "29566:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 9996,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29583:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "29566:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "29548:38:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 9999,
                            "name": "publishMarketFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6750,
                            "src": "29603:17:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 10003,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 10000,
                              "name": "tokenInOutMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9812,
                              "src": "29621:16:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                "typeString": "address[3] calldata"
                              }
                            },
                            "id": 10002,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 10001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29638:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "29621:19:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29603:38:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 10004,
                            "name": "_swapfees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9960,
                            "src": "29642:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                              "typeString": "struct BMath.swapfees memory"
                            }
                          },
                          "id": 10005,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "publishMarketFeeAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6769,
                          "src": "29642:32:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9998,
                        "name": "badd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7453,
                        "src": "29598:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29598:77:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29548:127:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10008,
                  "nodeType": "ExpressionStatement",
                  "src": "29548:127:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10010,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9960,
                          "src": "29700:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 10011,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LPFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6765,
                        "src": "29700:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10012,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9960,
                          "src": "29717:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 10013,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "oceanFeeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6767,
                        "src": "29717:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10014,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9960,
                          "src": "29751:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 10015,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "publishMarketFeeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6769,
                        "src": "29751:32:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10016,
                          "name": "_swapfees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9960,
                          "src": "29784:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_swapfees_$6772_memory_ptr",
                            "typeString": "struct BMath.swapfees memory"
                          }
                        },
                        "id": 10017,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "consumeMarketFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6771,
                        "src": "29784:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 10018,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9812,
                          "src": "29812:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 10020,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29829:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "29812:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10009,
                      "name": "SWAP_FEES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8021,
                      "src": "29690:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address)"
                      }
                    },
                    "id": 10021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29690:142:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10022,
                  "nodeType": "EmitStatement",
                  "src": "29685:147:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10024,
                          "name": "tokenAmountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9821,
                          "src": "29850:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 10025,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9816,
                            "src": "29867:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 10027,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 10026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29886:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29867:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "29850:38:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4c494d49545f494e",
                        "id": 10029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29890:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f6da07481837924baab3a15f838b3df11e328050f73de905838535dd369af68",
                          "typeString": "literal_string \"ERR_LIMIT_IN\""
                        },
                        "value": "ERR_LIMIT_IN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f6da07481837924baab3a15f838b3df11e328050f73de905838535dd369af68",
                          "typeString": "literal_string \"ERR_LIMIT_IN\""
                        }
                      ],
                      "id": 10023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29842:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29842:63:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10031,
                  "nodeType": "ExpressionStatement",
                  "src": "29842:63:37"
                },
                {
                  "expression": {
                    "id": 10040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10032,
                        "name": "inRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9879,
                        "src": "29916:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record storage pointer"
                        }
                      },
                      "id": 10034,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7900,
                      "src": "29916:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10036,
                            "name": "inRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9879,
                            "src": "29940:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 10037,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "29940:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10038,
                          "name": "balanceToAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9940,
                          "src": "29958:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10035,
                        "name": "badd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7453,
                        "src": "29935:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29935:36:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29916:55:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10041,
                  "nodeType": "ExpressionStatement",
                  "src": "29916:55:37"
                },
                {
                  "expression": {
                    "id": 10052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10042,
                        "name": "outRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9891,
                        "src": "29981:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record storage pointer"
                        }
                      },
                      "id": 10044,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7900,
                      "src": "29981:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10046,
                            "name": "outRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9891,
                            "src": "30006:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 10047,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "30006:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 10048,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9816,
                            "src": "30025:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 10050,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 10049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30044:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "30025:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10045,
                        "name": "bsub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7480,
                        "src": "30001:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "30001:46:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29981:66:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10053,
                  "nodeType": "ExpressionStatement",
                  "src": "29981:66:37"
                },
                {
                  "expression": {
                    "id": 10068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10054,
                      "name": "spotPriceAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9823,
                      "src": "30058:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10056,
                            "name": "inRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9879,
                            "src": "30102:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 10057,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "30102:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 10058,
                            "name": "inRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9879,
                            "src": "30132:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 10059,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "denorm",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7898,
                          "src": "30132:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 10060,
                            "name": "outRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9891,
                            "src": "30161:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 10061,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "30161:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 10062,
                            "name": "outRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9891,
                            "src": "30192:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 10063,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "denorm",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7898,
                          "src": "30192:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 10064,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9816,
                            "src": "30222:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 10066,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 10065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30241:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "30222:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10055,
                        "name": "calcSpotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6834,
                        "src": "30075:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 10067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "30075:178:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30058:195:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10069,
                  "nodeType": "ExpressionStatement",
                  "src": "30058:195:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10071,
                          "name": "spotPriceAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9823,
                          "src": "30272:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10072,
                          "name": "spotPriceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9915,
                          "src": "30290:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "30272:33:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d4154485f415050524f58",
                        "id": 10074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30307:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187",
                          "typeString": "literal_string \"ERR_MATH_APPROX\""
                        },
                        "value": "ERR_MATH_APPROX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187",
                          "typeString": "literal_string \"ERR_MATH_APPROX\""
                        }
                      ],
                      "id": 10070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30264:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30264:61:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10076,
                  "nodeType": "ExpressionStatement",
                  "src": "30264:61:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10078,
                          "name": "spotPriceAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9823,
                          "src": "30343:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 10079,
                            "name": "amountsInOutMaxFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9816,
                            "src": "30361:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                              "typeString": "uint256[4] calldata"
                            }
                          },
                          "id": 10081,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 10080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30380:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "30361:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "30343:39:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4c494d49545f5052494345",
                        "id": 10083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30384:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5544ff618944f1e1eee76066a3c4ee71ebb3e4c80a9b96ceaf365ff27739eb5",
                          "typeString": "literal_string \"ERR_LIMIT_PRICE\""
                        },
                        "value": "ERR_LIMIT_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5544ff618944f1e1eee76066a3c4ee71ebb3e4c80a9b96ceaf365ff27739eb5",
                          "typeString": "literal_string \"ERR_LIMIT_PRICE\""
                        }
                      ],
                      "id": 10077,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30335:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30335:67:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10085,
                  "nodeType": "ExpressionStatement",
                  "src": "30335:67:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10087,
                          "name": "spotPriceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9915,
                          "src": "30433:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10089,
                              "name": "tokenAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9821,
                              "src": "30457:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 10090,
                                "name": "amountsInOutMaxFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9816,
                                "src": "30472:18:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                                  "typeString": "uint256[4] calldata"
                                }
                              },
                              "id": 10092,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 10091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30491:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "30472:21:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10088,
                            "name": "bdiv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7623,
                            "src": "30452:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30452:42:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "30433:61:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d4154485f415050524f58",
                        "id": 10095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30508:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187",
                          "typeString": "literal_string \"ERR_MATH_APPROX\""
                        },
                        "value": "ERR_MATH_APPROX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38839817361c628b17e457bae64f619c23ab542714e93cfb021dbd3ddd466187",
                          "typeString": "literal_string \"ERR_MATH_APPROX\""
                        }
                      ],
                      "id": 10086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30412:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30412:123:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10097,
                  "nodeType": "ExpressionStatement",
                  "src": "30412:123:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10099,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "30573:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "30573:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 10101,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9812,
                          "src": "30597:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 10103,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30614:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "30597:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 10104,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9812,
                          "src": "30630:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 10106,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 10105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30647:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "30630:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10107,
                        "name": "tokenAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9821,
                        "src": "30663:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 10108,
                          "name": "amountsInOutMaxFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9816,
                          "src": "30690:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                            "typeString": "uint256[4] calldata"
                          }
                        },
                        "id": 10110,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 10109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30709:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "30690:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10111,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "30725:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 10112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "30725:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10113,
                          "name": "inRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9879,
                          "src": "30754:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 10114,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "30754:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10115,
                          "name": "outRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9891,
                          "src": "30784:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 10116,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "30784:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10117,
                        "name": "spotPriceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9823,
                        "src": "30815:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10098,
                      "name": "LOG_SWAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7921,
                      "src": "30551:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 10118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30551:288:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10119,
                  "nodeType": "EmitStatement",
                  "src": "30546:293:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10121,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9812,
                          "src": "30865:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 10123,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30882:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "30865:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "30886:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "30886:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10126,
                        "name": "tokenAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9821,
                        "src": "30898:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10120,
                      "name": "_pullUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10691,
                      "src": "30849:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30849:63:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10128,
                  "nodeType": "ExpressionStatement",
                  "src": "30849:63:37"
                },
                {
                  "assignments": [
                    10130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10130,
                      "mutability": "mutable",
                      "name": "consumeMarketFeeAmount",
                      "nameLocation": "30930:22:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10188,
                      "src": "30922:30:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10129,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30922:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10143,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10132,
                        "name": "tokenAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9821,
                        "src": "30973:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10134,
                            "name": "tokenAmountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9821,
                            "src": "31005:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 10136,
                                "name": "BONE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6269,
                                "src": "31025:4:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 10137,
                                  "name": "amountsInOutMaxFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9816,
                                  "src": "31031:18:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                                    "typeString": "uint256[4] calldata"
                                  }
                                },
                                "id": 10139,
                                "indexExpression": {
                                  "hexValue": "33",
                                  "id": 10138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "31050:1:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "31031:21:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10135,
                              "name": "bsub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7480,
                              "src": "31020:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "31020:33:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10133,
                          "name": "bmul",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7563,
                          "src": "31000:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 10141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31000:54:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10131,
                      "name": "bsub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7480,
                      "src": "30955:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30955:109:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30922:142:37"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 10144,
                        "name": "amountsInOutMaxFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9816,
                        "src": "31078:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                          "typeString": "uint256[4] calldata"
                        }
                      },
                      "id": 10146,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 10145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31097:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "31078:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31102:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "31078:25:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10172,
                  "nodeType": "IfStatement",
                  "src": "31074:399:37",
                  "trueBody": {
                    "id": 10171,
                    "nodeType": "Block",
                    "src": "31105:368:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10155,
                                "name": "tokenInOutMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9812,
                                "src": "31177:16:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                  "typeString": "address[3] calldata"
                                }
                              },
                              "id": 10157,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 10156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "31194:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31177:19:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10158,
                              "name": "consumeMarketFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10130,
                              "src": "31231:22:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 10150,
                                    "name": "tokenInOutMarket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9812,
                                    "src": "31126:16:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                      "typeString": "address[3] calldata"
                                    }
                                  },
                                  "id": 10152,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 10151,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "31143:1:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "31126:19:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10149,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "31119:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31119:27:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3084",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25633,
                            "src": "31119:40:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3084_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3084_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 10159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31119:148:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10160,
                        "nodeType": "ExpressionStatement",
                        "src": "31119:148:37"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10162,
                                "name": "tokenInOutMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9812,
                                "src": "31320:16:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                  "typeString": "address[3] calldata"
                                }
                              },
                              "id": 10164,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 10163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "31337:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31320:19:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 10165,
                                "name": "tokenInOutMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9812,
                                "src": "31380:16:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                                  "typeString": "address[3] calldata"
                                }
                              },
                              "id": 10167,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 10166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "31397:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31380:19:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10168,
                              "name": "consumeMarketFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10130,
                              "src": "31426:22:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10161,
                            "name": "ConsumeMarketFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8009,
                            "src": "31286:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 10169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31286:176:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10170,
                        "nodeType": "EmitStatement",
                        "src": "31281:181:37"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10174,
                          "name": "tokenInOutMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9812,
                          "src": "31498:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                            "typeString": "address[3] calldata"
                          }
                        },
                        "id": 10176,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 10175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "31515:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "31498:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "31519:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "31519:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 10179,
                          "name": "amountsInOutMaxFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9816,
                          "src": "31531:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                            "typeString": "uint256[4] calldata"
                          }
                        },
                        "id": 10181,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 10180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "31550:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "31531:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10173,
                      "name": "_pushUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10709,
                      "src": "31482:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31482:71:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10183,
                  "nodeType": "ExpressionStatement",
                  "src": "31482:71:37"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 10184,
                        "name": "tokenAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9821,
                        "src": "31571:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10185,
                        "name": "spotPriceAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9823,
                        "src": "31586:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 10186,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "31570:31:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 9824,
                  "id": 10187,
                  "nodeType": "Return",
                  "src": "31563:38:37"
                }
              ]
            },
            "documentation": {
              "id": 9808,
              "nodeType": "StructuredDocumentation",
              "src": "27212:333:37",
              "text": " @dev swapExactAmountOut\n      Swaps a maximum  maxAmountIn of tokensIn to get an exact amount of tokenOut\n @param tokenInOutMarket array of addreses: [tokenIn, tokenOut, consumeMarketFeeAddress]\n @param amountsInOutMaxFee array of ints: [maxAmountIn,tokenAmountOut,maxPrice, consumeMarketSwapFee]"
            },
            "functionSelector": "c98a59cf",
            "id": 10189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9819,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9818,
                  "name": "_lock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8055,
                  "src": "27687:6:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "27687:6:37"
              }
            ],
            "name": "swapExactAmountOut",
            "nameLocation": "27559:18:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9812,
                  "mutability": "mutable",
                  "name": "tokenInOutMarket",
                  "nameLocation": "27607:16:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "27587:36:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$3_calldata_ptr",
                    "typeString": "address[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9809,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "27587:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9811,
                    "length": {
                      "hexValue": "33",
                      "id": 9810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27595:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "27587:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9816,
                  "mutability": "mutable",
                  "name": "amountsInOutMaxFee",
                  "nameLocation": "27653:18:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "27633:38:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                    "typeString": "uint256[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9813,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "27633:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9815,
                    "length": {
                      "hexValue": "34",
                      "id": 9814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27641:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "27633:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                      "typeString": "uint256[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27577:100:37"
            },
            "returnParameters": {
              "id": 9824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9821,
                  "mutability": "mutable",
                  "name": "tokenAmountIn",
                  "nameLocation": "27711:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "27703:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27703:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9823,
                  "mutability": "mutable",
                  "name": "spotPriceAfter",
                  "nameLocation": "27734:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "27726:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27726:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27702:47:37"
            },
            "scope": 10803,
            "src": "27550:4058:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              28511
            ],
            "body": {
              "id": 10355,
              "nodeType": "Block",
              "src": "32084:1972:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10202,
                        "name": "_finalized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8075,
                        "src": "32141:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4e4f545f46494e414c495a4544",
                        "id": 10203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32153:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e0a50e0802c41001c819a1d72124e98da239dcaeee85bac2236e5d8595f284f",
                          "typeString": "literal_string \"ERR_NOT_FINALIZED\""
                        },
                        "value": "ERR_NOT_FINALIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e0a50e0802c41001c819a1d72124e98da239dcaeee85bac2236e5d8595f284f",
                          "typeString": "literal_string \"ERR_NOT_FINALIZED\""
                        }
                      ],
                      "id": 10201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32133:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32133:40:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10205,
                  "nodeType": "ExpressionStatement",
                  "src": "32133:40:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10207,
                        "name": "_baseTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6742,
                        "src": "32195:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10206,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "32183:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 10208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32183:30:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10209,
                  "nodeType": "ExpressionStatement",
                  "src": "32183:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10211,
                          "name": "tokenAmountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10192,
                          "src": "32244:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 10213,
                                  "name": "_records",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8083,
                                  "src": "32266:8:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                                    "typeString": "mapping(address => struct BPool.Record storage ref)"
                                  }
                                },
                                "id": 10215,
                                "indexExpression": {
                                  "id": 10214,
                                  "name": "_baseTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6742,
                                  "src": "32275:17:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "32266:27:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$7901_storage",
                                  "typeString": "struct BPool.Record storage ref"
                                }
                              },
                              "id": 10216,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7900,
                              "src": "32266:35:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10217,
                              "name": "MAX_IN_RATIO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6332,
                              "src": "32303:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10212,
                            "name": "bmul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7563,
                            "src": "32261:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32261:55:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "32244:72:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d41585f494e5f524154494f",
                        "id": 10220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32330:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3050677a696f4e0f0af7fbd29d6f24f52a3873a4edbfdfefdc5ce1465c444acf",
                          "typeString": "literal_string \"ERR_MAX_IN_RATIO\""
                        },
                        "value": "ERR_MAX_IN_RATIO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3050677a696f4e0f0af7fbd29d6f24f52a3873a4edbfdfefdc5ce1465c444acf",
                          "typeString": "literal_string \"ERR_MAX_IN_RATIO\""
                        }
                      ],
                      "id": 10210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32223:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32223:135:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10222,
                  "nodeType": "ExpressionStatement",
                  "src": "32223:135:37"
                },
                {
                  "assignments": [
                    10225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10225,
                      "mutability": "mutable",
                      "name": "inRecord",
                      "nameLocation": "32408:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10355,
                      "src": "32393:23:37",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 10224,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10223,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "32393:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "32393:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10229,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10226,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "32419:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 10228,
                    "indexExpression": {
                      "id": 10227,
                      "name": "_baseTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6742,
                      "src": "32428:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "32419:27:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32393:53:37"
                },
                {
                  "expression": {
                    "id": 10237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10230,
                      "name": "poolAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10199,
                      "src": "32457:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10232,
                            "name": "inRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10225,
                            "src": "32511:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 10233,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "32511:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10234,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10821,
                          "src": "32541:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10235,
                          "name": "tokenAmountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10192,
                          "src": "32567:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10231,
                        "name": "calcPoolOutGivenSingleIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7231,
                        "src": "32473:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "32473:117:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "32457:133:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10238,
                  "nodeType": "ExpressionStatement",
                  "src": "32457:133:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10240,
                          "name": "poolAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10199,
                          "src": "32609:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10241,
                          "name": "minPoolAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10194,
                          "src": "32626:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "32609:33:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4c494d49545f4f5554",
                        "id": 10243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32644:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_665ff818e83fa8776541f5756d1025222aecfe18eeb105729691884778497705",
                          "typeString": "literal_string \"ERR_LIMIT_OUT\""
                        },
                        "value": "ERR_LIMIT_OUT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_665ff818e83fa8776541f5756d1025222aecfe18eeb105729691884778497705",
                          "typeString": "literal_string \"ERR_LIMIT_OUT\""
                        }
                      ],
                      "id": 10239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32601:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32601:59:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10245,
                  "nodeType": "ExpressionStatement",
                  "src": "32601:59:37"
                },
                {
                  "expression": {
                    "id": 10254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10246,
                        "name": "inRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10225,
                        "src": "32671:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record storage pointer"
                        }
                      },
                      "id": 10248,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7900,
                      "src": "32671:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10250,
                            "name": "inRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10225,
                            "src": "32695:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 10251,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "32695:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10252,
                          "name": "tokenAmountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10192,
                          "src": "32713:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10249,
                        "name": "badd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7453,
                        "src": "32690:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "32690:37:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "32671:56:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10255,
                  "nodeType": "ExpressionStatement",
                  "src": "32671:56:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10257,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "32751:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "32751:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10259,
                        "name": "_baseTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6742,
                        "src": "32763:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10260,
                        "name": "tokenAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10192,
                        "src": "32782:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10261,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "32797:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 10262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "32797:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10256,
                      "name": "LOG_JOIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7931,
                      "src": "32742:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 10263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32742:71:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10264,
                  "nodeType": "EmitStatement",
                  "src": "32737:76:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10266,
                        "name": "poolAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10199,
                        "src": "32836:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10265,
                      "name": "LOG_BPT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7971,
                      "src": "32828:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32828:22:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10268,
                  "nodeType": "EmitStatement",
                  "src": "32823:27:37"
                },
                {
                  "assignments": [
                    10271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10271,
                      "mutability": "mutable",
                      "name": "ssInRecord",
                      "nameLocation": "32982:10:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10355,
                      "src": "32967:25:37",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 10270,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10269,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "32967:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "32967:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10275,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10272,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "32995:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 10274,
                    "indexExpression": {
                      "id": 10273,
                      "name": "_datatokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6740,
                      "src": "33004:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "32995:27:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32967:55:37"
                },
                {
                  "assignments": [
                    10277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10277,
                      "mutability": "mutable",
                      "name": "ssAmountIn",
                      "nameLocation": "33040:10:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10355,
                      "src": "33032:18:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "33032:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10284,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10279,
                          "name": "ssInRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10271,
                          "src": "33091:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                            "typeString": "struct BPool.Record storage pointer"
                          }
                        },
                        "id": 10280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "33091:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10281,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10821,
                        "src": "33123:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10282,
                        "name": "poolAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10199,
                        "src": "33149:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10278,
                      "name": "calcSingleInGivenPoolOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7286,
                      "src": "33053:24:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33053:119:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33032:140:37"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 10287,
                        "name": "_datatokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6740,
                        "src": "33206:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10288,
                        "name": "ssAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10277,
                        "src": "33225:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10285,
                        "name": "ssContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8088,
                        "src": "33186:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISideStaking_$4398",
                          "typeString": "contract ISideStaking"
                        }
                      },
                      "id": 10286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "canStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4367,
                      "src": "33186:19:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) view external returns (bool)"
                      }
                    },
                    "id": 10289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33186:50:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10335,
                  "nodeType": "IfStatement",
                  "src": "33182:677:37",
                  "trueBody": {
                    "id": 10334,
                    "nodeType": "Block",
                    "src": "33238:621:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10293,
                              "name": "_datatokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6740,
                              "src": "33316:17:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10294,
                              "name": "ssAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10277,
                              "src": "33335:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10290,
                              "name": "ssContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8088,
                              "src": "33299:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISideStaking_$4398",
                                "typeString": "contract ISideStaking"
                              }
                            },
                            "id": 10292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4374,
                            "src": "33299:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 10295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33299:47:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10296,
                        "nodeType": "ExpressionStatement",
                        "src": "33299:47:37"
                      },
                      {
                        "expression": {
                          "id": 10305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10297,
                              "name": "ssInRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10271,
                              "src": "33396:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                                "typeString": "struct BPool.Record storage pointer"
                              }
                            },
                            "id": 10299,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7900,
                            "src": "33396:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 10301,
                                  "name": "ssInRecord",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10271,
                                  "src": "33422:10:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                                    "typeString": "struct BPool.Record storage pointer"
                                  }
                                },
                                "id": 10302,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7900,
                                "src": "33422:18:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 10303,
                                "name": "ssAmountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10277,
                                "src": "33442:10:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10300,
                              "name": "badd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7453,
                              "src": "33417:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "33417:36:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "33396:57:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10306,
                        "nodeType": "ExpressionStatement",
                        "src": "33396:57:37"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 10308,
                              "name": "_controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "33498:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10309,
                              "name": "_datatokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6740,
                              "src": "33527:17:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10310,
                              "name": "ssAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10277,
                              "src": "33562:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 10311,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "33590:5:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 10312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "33590:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10307,
                            "name": "LOG_JOIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7931,
                            "src": "33472:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 10313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33472:147:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10314,
                        "nodeType": "EmitStatement",
                        "src": "33467:152:37"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 10316,
                              "name": "poolAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10199,
                              "src": "33649:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10315,
                            "name": "LOG_BPT_SS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7975,
                            "src": "33638:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 10317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33638:25:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10318,
                        "nodeType": "EmitStatement",
                        "src": "33633:30:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10320,
                              "name": "poolAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10199,
                              "src": "33692:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10319,
                            "name": "_mintPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10745,
                            "src": "33677:14:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 10321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33677:29:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10322,
                        "nodeType": "ExpressionStatement",
                        "src": "33677:29:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10324,
                              "name": "_controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "33735:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10325,
                              "name": "poolAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10199,
                              "src": "33748:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10323,
                            "name": "_pushPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10735,
                            "src": "33720:14:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 10326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33720:42:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10327,
                        "nodeType": "ExpressionStatement",
                        "src": "33720:42:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10329,
                              "name": "_datatokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6740,
                              "src": "33792:17:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10330,
                              "name": "_controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "33811:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10331,
                              "name": "ssAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10277,
                              "src": "33824:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10328,
                            "name": "_pullUnderlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10691,
                            "src": "33776:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 10332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33776:59:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10333,
                        "nodeType": "ExpressionStatement",
                        "src": "33776:59:37"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10337,
                        "name": "poolAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10199,
                        "src": "33883:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10336,
                      "name": "_mintPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10745,
                      "src": "33868:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33868:29:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10339,
                  "nodeType": "ExpressionStatement",
                  "src": "33868:29:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "33922:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "33922:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10343,
                        "name": "poolAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10199,
                        "src": "33934:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10340,
                      "name": "_pushPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10735,
                      "src": "33907:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33907:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10345,
                  "nodeType": "ExpressionStatement",
                  "src": "33907:41:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10347,
                        "name": "_baseTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6742,
                        "src": "33974:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "33993:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "33993:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10350,
                        "name": "tokenAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10192,
                        "src": "34005:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10346,
                      "name": "_pullUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10691,
                      "src": "33958:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33958:61:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10352,
                  "nodeType": "ExpressionStatement",
                  "src": "33958:61:37"
                },
                {
                  "expression": {
                    "id": 10353,
                    "name": "poolAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10199,
                    "src": "34036:13:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10200,
                  "id": 10354,
                  "nodeType": "Return",
                  "src": "34029:20:37"
                }
              ]
            },
            "documentation": {
              "id": 10190,
              "nodeType": "StructuredDocumentation",
              "src": "31614:314:37",
              "text": " @dev joinswapExternAmountIn\n      Single side add liquidity to the pool,\n      expecting a minPoolAmountOut of shares for spending tokenAmountIn basetokens\n @param tokenAmountIn exact number of base tokens to spend\n @param minPoolAmountOut minimum of pool shares expectex"
            },
            "functionSelector": "8329ab33",
            "id": 10356,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10197,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10196,
                  "name": "_lock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8055,
                  "src": "32045:6:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "32045:6:37"
              }
            ],
            "name": "joinswapExternAmountIn",
            "nameLocation": "31942:22:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10192,
                  "mutability": "mutable",
                  "name": "tokenAmountIn",
                  "nameLocation": "31982:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10356,
                  "src": "31974:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31974:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10194,
                  "mutability": "mutable",
                  "name": "minPoolAmountOut",
                  "nameLocation": "32013:16:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10356,
                  "src": "32005:24:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32005:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31964:71:37"
            },
            "returnParameters": {
              "id": 10200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10199,
                  "mutability": "mutable",
                  "name": "poolAmountOut",
                  "nameLocation": "32069:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10356,
                  "src": "32061:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32061:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32060:23:37"
            },
            "scope": 10803,
            "src": "31933:2123:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              28502
            ],
            "body": {
              "id": 10523,
              "nodeType": "Block",
              "src": "34535:2387:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10369,
                        "name": "_finalized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8075,
                        "src": "34593:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4e4f545f46494e414c495a4544",
                        "id": 10370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34605:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e0a50e0802c41001c819a1d72124e98da239dcaeee85bac2236e5d8595f284f",
                          "typeString": "literal_string \"ERR_NOT_FINALIZED\""
                        },
                        "value": "ERR_NOT_FINALIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e0a50e0802c41001c819a1d72124e98da239dcaeee85bac2236e5d8595f284f",
                          "typeString": "literal_string \"ERR_NOT_FINALIZED\""
                        }
                      ],
                      "id": 10368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "34585:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34585:40:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10372,
                  "nodeType": "ExpressionStatement",
                  "src": "34585:40:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10374,
                        "name": "_baseTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6742,
                        "src": "34647:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10373,
                      "name": "_checkBound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8437,
                      "src": "34635:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 10375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34635:30:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10376,
                  "nodeType": "ExpressionStatement",
                  "src": "34635:30:37"
                },
                {
                  "assignments": [
                    10379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10379,
                      "mutability": "mutable",
                      "name": "outRecord",
                      "nameLocation": "34691:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10523,
                      "src": "34676:24:37",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 10378,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10377,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "34676:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "34676:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10383,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10380,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "34703:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 10382,
                    "indexExpression": {
                      "id": 10381,
                      "name": "_baseTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6742,
                      "src": "34712:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "34703:27:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34676:54:37"
                },
                {
                  "expression": {
                    "id": 10391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10384,
                      "name": "tokenAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10366,
                      "src": "34741:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10386,
                            "name": "outRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10379,
                            "src": "34796:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 10387,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "34796:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10388,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10821,
                          "src": "34827:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10389,
                          "name": "poolAmountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10359,
                          "src": "34853:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10385,
                        "name": "calcSingleOutGivenPoolIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7341,
                        "src": "34758:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "34758:117:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "34741:134:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10392,
                  "nodeType": "ExpressionStatement",
                  "src": "34741:134:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10394,
                          "name": "tokenAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10366,
                          "src": "34893:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10395,
                          "name": "minAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10361,
                          "src": "34911:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "34893:30:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4c494d49545f4f5554",
                        "id": 10397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34925:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_665ff818e83fa8776541f5756d1025222aecfe18eeb105729691884778497705",
                          "typeString": "literal_string \"ERR_LIMIT_OUT\""
                        },
                        "value": "ERR_LIMIT_OUT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_665ff818e83fa8776541f5756d1025222aecfe18eeb105729691884778497705",
                          "typeString": "literal_string \"ERR_LIMIT_OUT\""
                        }
                      ],
                      "id": 10393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "34885:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34885:56:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10399,
                  "nodeType": "ExpressionStatement",
                  "src": "34885:56:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10401,
                          "name": "tokenAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10366,
                          "src": "34973:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 10403,
                                  "name": "_records",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8083,
                                  "src": "34996:8:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                                    "typeString": "mapping(address => struct BPool.Record storage ref)"
                                  }
                                },
                                "id": 10405,
                                "indexExpression": {
                                  "id": 10404,
                                  "name": "_baseTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6742,
                                  "src": "35005:17:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "34996:27:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$7901_storage",
                                  "typeString": "struct BPool.Record storage ref"
                                }
                              },
                              "id": 10406,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7900,
                              "src": "34996:35:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10407,
                              "name": "MAX_OUT_RATIO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6340,
                              "src": "35033:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10402,
                            "name": "bmul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7563,
                            "src": "34991:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34991:56:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "34973:74:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4d41585f4f55545f524154494f",
                        "id": 10410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35061:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_863cb4bcd0b8884f90860e9fca5a02b421b5bc6a33c8399eb7f6df0648d0555a",
                          "typeString": "literal_string \"ERR_MAX_OUT_RATIO\""
                        },
                        "value": "ERR_MAX_OUT_RATIO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_863cb4bcd0b8884f90860e9fca5a02b421b5bc6a33c8399eb7f6df0648d0555a",
                          "typeString": "literal_string \"ERR_MAX_OUT_RATIO\""
                        }
                      ],
                      "id": 10400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "34952:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34952:138:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10412,
                  "nodeType": "ExpressionStatement",
                  "src": "34952:138:37"
                },
                {
                  "expression": {
                    "id": 10421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10413,
                        "name": "outRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10379,
                        "src": "35101:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record storage pointer"
                        }
                      },
                      "id": 10415,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7900,
                      "src": "35101:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10417,
                            "name": "outRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10379,
                            "src": "35126:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record storage pointer"
                            }
                          },
                          "id": 10418,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "35126:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10419,
                          "name": "tokenAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10366,
                          "src": "35145:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10416,
                        "name": "bsub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7480,
                        "src": "35121:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "35121:39:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35101:59:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10422,
                  "nodeType": "ExpressionStatement",
                  "src": "35101:59:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10424,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "35243:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "35243:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10426,
                        "name": "_baseTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6742,
                        "src": "35255:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10427,
                        "name": "tokenAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10366,
                        "src": "35274:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10428,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "35290:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 10429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "35290:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10423,
                      "name": "LOG_EXIT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7957,
                      "src": "35234:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 10430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35234:72:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10431,
                  "nodeType": "EmitStatement",
                  "src": "35229:77:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10433,
                        "name": "poolAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10359,
                        "src": "35329:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10432,
                      "name": "LOG_BPT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7971,
                      "src": "35321:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35321:21:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10435,
                  "nodeType": "EmitStatement",
                  "src": "35316:26:37"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 10438,
                        "name": "_datatokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6740,
                        "src": "35501:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10439,
                        "name": "poolAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10359,
                        "src": "35520:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10436,
                        "name": "ssContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8088,
                        "src": "35479:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISideStaking_$4398",
                          "typeString": "contract ISideStaking"
                        }
                      },
                      "id": 10437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "canUnStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4383,
                      "src": "35479:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) view external returns (bool)"
                      }
                    },
                    "id": 10440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35479:54:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10503,
                  "nodeType": "IfStatement",
                  "src": "35462:1154:37",
                  "trueBody": {
                    "id": 10502,
                    "nodeType": "Block",
                    "src": "35544:1072:37",
                    "statements": [
                      {
                        "assignments": [
                          10443
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10443,
                            "mutability": "mutable",
                            "name": "ssOutRecord",
                            "nameLocation": "35573:11:37",
                            "nodeType": "VariableDeclaration",
                            "scope": 10502,
                            "src": "35558:26:37",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                              "typeString": "struct BPool.Record"
                            },
                            "typeName": {
                              "id": 10442,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 10441,
                                "name": "Record",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 7901,
                                "src": "35558:6:37"
                              },
                              "referencedDeclaration": 7901,
                              "src": "35558:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                                "typeString": "struct BPool.Record"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10447,
                        "initialValue": {
                          "baseExpression": {
                            "id": 10444,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "35587:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 10446,
                          "indexExpression": {
                            "id": 10445,
                            "name": "_datatokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6740,
                            "src": "35596:17:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "35587:27:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "35558:56:37"
                      },
                      {
                        "assignments": [
                          10449
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10449,
                            "mutability": "mutable",
                            "name": "ssAmountOut",
                            "nameLocation": "35636:11:37",
                            "nodeType": "VariableDeclaration",
                            "scope": 10502,
                            "src": "35628:19:37",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10448,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "35628:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10456,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10451,
                                "name": "ssOutRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10443,
                                "src": "35692:11:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                                  "typeString": "struct BPool.Record storage pointer"
                                }
                              },
                              "id": 10452,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7900,
                              "src": "35692:19:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10453,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10821,
                              "src": "35729:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10454,
                              "name": "poolAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10359,
                              "src": "35759:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10450,
                            "name": "calcSingleOutGivenPoolIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7341,
                            "src": "35650:24:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 10455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35650:135:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "35628:157:37"
                      },
                      {
                        "expression": {
                          "id": 10465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10457,
                              "name": "ssOutRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10443,
                              "src": "35800:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                                "typeString": "struct BPool.Record storage pointer"
                              }
                            },
                            "id": 10459,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7900,
                            "src": "35800:19:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 10461,
                                  "name": "ssOutRecord",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10443,
                                  "src": "35827:11:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                                    "typeString": "struct BPool.Record storage pointer"
                                  }
                                },
                                "id": 10462,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7900,
                                "src": "35827:19:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 10463,
                                "name": "ssAmountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10449,
                                "src": "35848:11:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10460,
                              "name": "bsub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7480,
                              "src": "35822:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35822:38:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "35800:60:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10466,
                        "nodeType": "ExpressionStatement",
                        "src": "35800:60:37"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 10468,
                              "name": "_controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "35959:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10469,
                              "name": "_datatokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6740,
                              "src": "35988:17:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10470,
                              "name": "ssAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10449,
                              "src": "36023:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 10471,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "36052:5:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 10472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "36052:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10467,
                            "name": "LOG_EXIT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7957,
                            "src": "35933:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 10473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35933:148:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10474,
                        "nodeType": "EmitStatement",
                        "src": "35928:153:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10476,
                              "name": "_controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "36110:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10477,
                              "name": "poolAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10359,
                              "src": "36123:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10475,
                            "name": "_pullPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10722,
                            "src": "36095:14:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 10478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36095:41:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10479,
                        "nodeType": "ExpressionStatement",
                        "src": "36095:41:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10481,
                              "name": "poolAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10359,
                              "src": "36224:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10480,
                            "name": "_burnPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10755,
                            "src": "36209:14:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 10482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36209:28:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10483,
                        "nodeType": "ExpressionStatement",
                        "src": "36209:28:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10485,
                              "name": "_datatokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6740,
                              "src": "36316:17:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10486,
                              "name": "_controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "36335:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10487,
                              "name": "ssAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10449,
                              "src": "36348:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10484,
                            "name": "_pushUnderlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10709,
                            "src": "36300:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 10488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36300:60:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10489,
                        "nodeType": "ExpressionStatement",
                        "src": "36300:60:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10493,
                              "name": "_datatokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6740,
                              "src": "36472:17:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10494,
                              "name": "ssAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10449,
                              "src": "36507:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10495,
                              "name": "poolAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10359,
                              "src": "36536:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10490,
                              "name": "ssContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8088,
                              "src": "36436:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISideStaking_$4398",
                                "typeString": "contract ISideStaking"
                              }
                            },
                            "id": 10492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "UnStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4392,
                            "src": "36436:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256) external"
                            }
                          },
                          "id": 10496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36436:126:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10497,
                        "nodeType": "ExpressionStatement",
                        "src": "36436:126:37"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 10499,
                              "name": "poolAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10359,
                              "src": "36592:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10498,
                            "name": "LOG_BPT_SS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7975,
                            "src": "36581:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 10500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36581:24:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10501,
                        "nodeType": "EmitStatement",
                        "src": "36576:29:37"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10505,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "36649:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "36649:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10507,
                        "name": "poolAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10359,
                        "src": "36661:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10504,
                      "name": "_pullPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10722,
                      "src": "36634:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36634:40:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10509,
                  "nodeType": "ExpressionStatement",
                  "src": "36634:40:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10511,
                        "name": "poolAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10359,
                        "src": "36754:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10510,
                      "name": "_burnPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10755,
                      "src": "36739:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36739:28:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10513,
                  "nodeType": "ExpressionStatement",
                  "src": "36739:28:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10515,
                        "name": "_baseTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6742,
                        "src": "36838:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10516,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "36857:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "36857:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10518,
                        "name": "tokenAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10366,
                        "src": "36869:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10514,
                      "name": "_pushUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10709,
                      "src": "36822:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36822:62:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10520,
                  "nodeType": "ExpressionStatement",
                  "src": "36822:62:37"
                },
                {
                  "expression": {
                    "id": 10521,
                    "name": "tokenAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10366,
                    "src": "36901:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10367,
                  "id": 10522,
                  "nodeType": "Return",
                  "src": "36894:21:37"
                }
              ]
            },
            "documentation": {
              "id": 10357,
              "nodeType": "StructuredDocumentation",
              "src": "34067:318:37",
              "text": " @dev exitswapPoolAmountIn\n      Single side remove liquidity from the pool,\n      expecting a minAmountOut of basetokens for spending poolAmountIn pool shares\n @param poolAmountIn exact number of pool shares to spend\n @param minAmountOut minimum amount of basetokens expected"
            },
            "functionSelector": "12989260",
            "id": 10524,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10364,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10363,
                  "name": "_lock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8055,
                  "src": "34495:6:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "34495:6:37"
              }
            ],
            "name": "exitswapPoolAmountIn",
            "nameLocation": "34399:20:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10359,
                  "mutability": "mutable",
                  "name": "poolAmountIn",
                  "nameLocation": "34437:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10524,
                  "src": "34429:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34429:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10361,
                  "mutability": "mutable",
                  "name": "minAmountOut",
                  "nameLocation": "34467:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10524,
                  "src": "34459:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34459:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34419:66:37"
            },
            "returnParameters": {
              "id": 10367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10366,
                  "mutability": "mutable",
                  "name": "tokenAmountOut",
                  "nameLocation": "34519:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10524,
                  "src": "34511:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34511:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34510:24:37"
            },
            "scope": 10803,
            "src": "34390:2532:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10552,
              "nodeType": "Block",
              "src": "37314:238:37",
              "statements": [
                {
                  "assignments": [
                    10536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10536,
                      "mutability": "mutable",
                      "name": "outRecord",
                      "nameLocation": "37338:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10552,
                      "src": "37324:23:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_memory_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 10535,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10534,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "37324:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "37324:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10540,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10537,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "37350:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 10539,
                    "indexExpression": {
                      "id": 10538,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10527,
                      "src": "37359:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "37350:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37324:44:37"
                },
                {
                  "expression": {
                    "id": 10548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10541,
                      "name": "tokenAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10532,
                      "src": "37379:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10543,
                            "name": "outRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10536,
                            "src": "37434:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_memory_ptr",
                              "typeString": "struct BPool.Record memory"
                            }
                          },
                          "id": 10544,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "37434:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10545,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10821,
                          "src": "37465:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10546,
                          "name": "poolAmountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10529,
                          "src": "37491:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10542,
                        "name": "calcSingleOutGivenPoolIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7341,
                        "src": "37396:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "37396:117:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "37379:134:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10549,
                  "nodeType": "ExpressionStatement",
                  "src": "37379:134:37"
                },
                {
                  "expression": {
                    "id": 10550,
                    "name": "tokenAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10532,
                    "src": "37531:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10533,
                  "id": 10551,
                  "nodeType": "Return",
                  "src": "37524:21:37"
                }
              ]
            },
            "documentation": {
              "id": 10525,
              "nodeType": "StructuredDocumentation",
              "src": "36934:231:37",
              "text": " @dev calcSingleOutPoolIn\n      Returns expected amount of tokenOut for removing exact poolAmountIn pool shares from the pool\n @param tokenOut tokenOut\n @param poolAmountIn amount of shares spent"
            },
            "functionSelector": "430ed5d0",
            "id": 10553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcSingleOutPoolIn",
            "nameLocation": "37179:19:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10527,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "37207:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10553,
                  "src": "37199:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "37199:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10529,
                  "mutability": "mutable",
                  "name": "poolAmountIn",
                  "nameLocation": "37225:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10553,
                  "src": "37217:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37217:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37198:40:37"
            },
            "returnParameters": {
              "id": 10533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10532,
                  "mutability": "mutable",
                  "name": "tokenAmountOut",
                  "nameLocation": "37294:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10553,
                  "src": "37286:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37286:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37285:24:37"
            },
            "scope": 10803,
            "src": "37170:382:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10581,
              "nodeType": "Block",
              "src": "37928:235:37",
              "statements": [
                {
                  "assignments": [
                    10565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10565,
                      "mutability": "mutable",
                      "name": "outRecord",
                      "nameLocation": "37952:9:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10581,
                      "src": "37938:23:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_memory_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 10564,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10563,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "37938:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "37938:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10569,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10566,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "37964:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 10568,
                    "indexExpression": {
                      "id": 10567,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10556,
                      "src": "37973:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "37964:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37938:44:37"
                },
                {
                  "expression": {
                    "id": 10577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10570,
                      "name": "poolAmountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10561,
                      "src": "37993:12:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10572,
                            "name": "outRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10565,
                            "src": "38046:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_memory_ptr",
                              "typeString": "struct BPool.Record memory"
                            }
                          },
                          "id": 10573,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "38046:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10574,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10821,
                          "src": "38077:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10575,
                          "name": "tokenAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10558,
                          "src": "38103:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10571,
                        "name": "calcPoolInGivenSingleOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7396,
                        "src": "38008:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "38008:119:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "37993:134:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10578,
                  "nodeType": "ExpressionStatement",
                  "src": "37993:134:37"
                },
                {
                  "expression": {
                    "id": 10579,
                    "name": "poolAmountIn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10561,
                    "src": "38144:12:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10562,
                  "id": 10580,
                  "nodeType": "Return",
                  "src": "38137:19:37"
                }
              ]
            },
            "documentation": {
              "id": 10554,
              "nodeType": "StructuredDocumentation",
              "src": "37558:221:37",
              "text": " @dev calcPoolInSingleOut\n      Returns number of poolshares needed to withdraw exact tokenAmountOut tokens\n @param tokenOut tokenOut\n @param tokenAmountOut expected amount of tokensOut"
            },
            "functionSelector": "a3b3a16d",
            "id": 10582,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcPoolInSingleOut",
            "nameLocation": "37793:19:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10556,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "37821:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10582,
                  "src": "37813:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "37813:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10558,
                  "mutability": "mutable",
                  "name": "tokenAmountOut",
                  "nameLocation": "37839:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10582,
                  "src": "37831:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37831:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37812:42:37"
            },
            "returnParameters": {
              "id": 10562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10561,
                  "mutability": "mutable",
                  "name": "poolAmountIn",
                  "nameLocation": "37910:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10582,
                  "src": "37902:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37902:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37901:22:37"
            },
            "scope": 10803,
            "src": "37784:379:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10610,
              "nodeType": "Block",
              "src": "38557:234:37",
              "statements": [
                {
                  "assignments": [
                    10594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10594,
                      "mutability": "mutable",
                      "name": "inRecord",
                      "nameLocation": "38581:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10610,
                      "src": "38567:22:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_memory_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 10593,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10592,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "38567:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "38567:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10598,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10595,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "38592:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 10597,
                    "indexExpression": {
                      "id": 10596,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10585,
                      "src": "38601:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "38592:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38567:42:37"
                },
                {
                  "expression": {
                    "id": 10606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10599,
                      "name": "tokenAmountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10590,
                      "src": "38620:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10601,
                            "name": "inRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10594,
                            "src": "38674:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_memory_ptr",
                              "typeString": "struct BPool.Record memory"
                            }
                          },
                          "id": 10602,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "38674:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10603,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10821,
                          "src": "38704:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10604,
                          "name": "poolAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10587,
                          "src": "38730:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10600,
                        "name": "calcSingleInGivenPoolOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7286,
                        "src": "38636:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "38636:117:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "38620:133:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10607,
                  "nodeType": "ExpressionStatement",
                  "src": "38620:133:37"
                },
                {
                  "expression": {
                    "id": 10608,
                    "name": "tokenAmountIn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10590,
                    "src": "38771:13:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10591,
                  "id": 10609,
                  "nodeType": "Return",
                  "src": "38764:20:37"
                }
              ]
            },
            "documentation": {
              "id": 10583,
              "nodeType": "StructuredDocumentation",
              "src": "38169:240:37",
              "text": " @dev calcSingleInPoolOut\n      Returns number of tokens to be staked to the pool in order to get an exact number of poolshares\n @param tokenIn tokenIn\n @param poolAmountOut expected amount of pool shares"
            },
            "functionSelector": "ff9b1850",
            "id": 10611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcSingleInPoolOut",
            "nameLocation": "38423:19:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10585,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "38451:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10611,
                  "src": "38443:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38443:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10587,
                  "mutability": "mutable",
                  "name": "poolAmountOut",
                  "nameLocation": "38468:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10611,
                  "src": "38460:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38460:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38442:40:37"
            },
            "returnParameters": {
              "id": 10591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10590,
                  "mutability": "mutable",
                  "name": "tokenAmountIn",
                  "nameLocation": "38538:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10611,
                  "src": "38530:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38530:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38529:23:37"
            },
            "scope": 10803,
            "src": "38414:377:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10639,
              "nodeType": "Block",
              "src": "39162:234:37",
              "statements": [
                {
                  "assignments": [
                    10623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10623,
                      "mutability": "mutable",
                      "name": "inRecord",
                      "nameLocation": "39186:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10639,
                      "src": "39172:22:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_memory_ptr",
                        "typeString": "struct BPool.Record"
                      },
                      "typeName": {
                        "id": 10622,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10621,
                          "name": "Record",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7901,
                          "src": "39172:6:37"
                        },
                        "referencedDeclaration": 7901,
                        "src": "39172:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage_ptr",
                          "typeString": "struct BPool.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10627,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10624,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8083,
                      "src": "39197:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                        "typeString": "mapping(address => struct BPool.Record storage ref)"
                      }
                    },
                    "id": 10626,
                    "indexExpression": {
                      "id": 10625,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10614,
                      "src": "39206:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "39197:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$7901_storage",
                      "typeString": "struct BPool.Record storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39172:42:37"
                },
                {
                  "expression": {
                    "id": 10635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10628,
                      "name": "poolAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10619,
                      "src": "39225:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10630,
                            "name": "inRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10623,
                            "src": "39279:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$7901_memory_ptr",
                              "typeString": "struct BPool.Record memory"
                            }
                          },
                          "id": 10631,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7900,
                          "src": "39279:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10632,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10821,
                          "src": "39309:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10633,
                          "name": "tokenAmountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10616,
                          "src": "39335:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10629,
                        "name": "calcPoolOutGivenSingleIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7231,
                        "src": "39241:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "39241:117:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "39225:133:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10636,
                  "nodeType": "ExpressionStatement",
                  "src": "39225:133:37"
                },
                {
                  "expression": {
                    "id": 10637,
                    "name": "poolAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10619,
                    "src": "39376:13:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10620,
                  "id": 10638,
                  "nodeType": "Return",
                  "src": "39369:20:37"
                }
              ]
            },
            "documentation": {
              "id": 10612,
              "nodeType": "StructuredDocumentation",
              "src": "38797:217:37",
              "text": " @dev calcPoolOutSingleIn\n      Returns number of poolshares obtain by staking exact tokenAmountIn tokens\n @param tokenIn tokenIn\n @param tokenAmountIn exact number of tokens staked"
            },
            "functionSelector": "3950b3fd",
            "id": 10640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcPoolOutSingleIn",
            "nameLocation": "39028:19:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10614,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "39056:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10640,
                  "src": "39048:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "39048:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10616,
                  "mutability": "mutable",
                  "name": "tokenAmountIn",
                  "nameLocation": "39073:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10640,
                  "src": "39065:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39065:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39047:40:37"
            },
            "returnParameters": {
              "id": 10620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10619,
                  "mutability": "mutable",
                  "name": "poolAmountOut",
                  "nameLocation": "39143:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10640,
                  "src": "39135:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39135:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39134:23:37"
            },
            "scope": 10803,
            "src": "39019:377:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10690,
              "nodeType": "Block",
              "src": "39703:325:37",
              "statements": [
                {
                  "assignments": [
                    10650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10650,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "39721:13:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10690,
                      "src": "39713:21:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10649,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "39713:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10660,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10657,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "39769:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BPool_$10803",
                              "typeString": "contract BPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BPool_$10803",
                              "typeString": "contract BPool"
                            }
                          ],
                          "id": 10656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "39761:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10655,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "39761:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "39761:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10652,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10642,
                            "src": "39744:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10651,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3084,
                          "src": "39737:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "39737:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3084",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3023,
                      "src": "39737:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39737:38:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39713:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10665,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10644,
                        "src": "39816:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10668,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "39830:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BPool_$10803",
                              "typeString": "contract BPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BPool_$10803",
                              "typeString": "contract BPool"
                            }
                          ],
                          "id": 10667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "39822:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10666,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "39822:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "39822:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10670,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10646,
                        "src": "39837:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10662,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10642,
                            "src": "39792:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10661,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3084,
                          "src": "39785:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "39785:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3084",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25659,
                      "src": "39785:30:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3084_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3084_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 10671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39785:59:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10672,
                  "nodeType": "ExpressionStatement",
                  "src": "39785:59:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 10680,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "39894:4:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BPool_$10803",
                                    "typeString": "contract BPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BPool_$10803",
                                    "typeString": "contract BPool"
                                  }
                                ],
                                "id": 10679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "39886:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10678,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "39886:7:37",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "39886:13:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10675,
                                  "name": "erc20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10642,
                                  "src": "39869:5:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10674,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "39862:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "39862:13:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3084",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3023,
                            "src": "39862:23:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 10682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "39862:38:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10683,
                            "name": "balanceBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10650,
                            "src": "39904:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 10684,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10646,
                            "src": "39920:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "39904:22:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "39862:64:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657220616d6f756e7420697320746f6f206c6f77",
                        "id": 10687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39948:28:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc64ab46a7322dccc3bfe7ade6ffceda60a180db11389567270dab250e90d5c1",
                          "typeString": "literal_string \"Transfer amount is too low\""
                        },
                        "value": "Transfer amount is too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc64ab46a7322dccc3bfe7ade6ffceda60a180db11389567270dab250e90d5c1",
                          "typeString": "literal_string \"Transfer amount is too low\""
                        }
                      ],
                      "id": 10673,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "39854:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39854:123:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10689,
                  "nodeType": "ExpressionStatement",
                  "src": "39854:123:37"
                }
              ]
            },
            "id": 10691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pullUnderlying",
            "nameLocation": "39603:15:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10642,
                  "mutability": "mutable",
                  "name": "erc20",
                  "nameLocation": "39636:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10691,
                  "src": "39628:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "39628:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10644,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "39659:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10691,
                  "src": "39651:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "39651:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10646,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "39681:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10691,
                  "src": "39673:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39673:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39618:75:37"
            },
            "returnParameters": {
              "id": 10648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "39703:0:37"
            },
            "scope": 10803,
            "src": "39594:434:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10708,
              "nodeType": "Block",
              "src": "40141:99:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10704,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10695,
                        "src": "40178:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10705,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10697,
                        "src": "40182:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10701,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10693,
                            "src": "40158:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10700,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3084,
                          "src": "40151:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "40151:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3084",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25633,
                      "src": "40151:26:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3084_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3084_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 10706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40151:38:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10707,
                  "nodeType": "ExpressionStatement",
                  "src": "40151:38:37"
                }
              ]
            },
            "id": 10709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pushUnderlying",
            "nameLocation": "40043:15:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10693,
                  "mutability": "mutable",
                  "name": "erc20",
                  "nameLocation": "40076:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10709,
                  "src": "40068:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40068:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10695,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "40099:2:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10709,
                  "src": "40091:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40091:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10697,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "40119:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10709,
                  "src": "40111:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40111:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40058:73:37"
            },
            "returnParameters": {
              "id": 10699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40141:0:37"
            },
            "scope": 10803,
            "src": "40034:206:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10721,
              "nodeType": "Block",
              "src": "40309:36:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10717,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10711,
                        "src": "40325:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10718,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10713,
                        "src": "40331:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10716,
                      "name": "_pull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11014,
                      "src": "40319:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40319:19:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10720,
                  "nodeType": "ExpressionStatement",
                  "src": "40319:19:37"
                }
              ]
            },
            "id": 10722,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pullPoolShare",
            "nameLocation": "40255:14:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10711,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "40278:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10722,
                  "src": "40270:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40270:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10713,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "40292:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10722,
                  "src": "40284:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40284:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40269:30:37"
            },
            "returnParameters": {
              "id": 10715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40309:0:37"
            },
            "scope": 10803,
            "src": "40246:99:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10734,
              "nodeType": "Block",
              "src": "40412:34:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10730,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10724,
                        "src": "40428:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10731,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10726,
                        "src": "40432:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10729,
                      "name": "_push",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10997,
                      "src": "40422:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40422:17:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10733,
                  "nodeType": "ExpressionStatement",
                  "src": "40422:17:37"
                }
              ]
            },
            "id": 10735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pushPoolShare",
            "nameLocation": "40360:14:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10724,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "40383:2:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10735,
                  "src": "40375:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40375:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10726,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "40395:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10735,
                  "src": "40387:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40387:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40374:28:37"
            },
            "returnParameters": {
              "id": 10728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40412:0:37"
            },
            "scope": 10803,
            "src": "40351:95:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10744,
              "nodeType": "Block",
              "src": "40501:30:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10741,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10737,
                        "src": "40517:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10740,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10879,
                      "src": "40511:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40511:13:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10743,
                  "nodeType": "ExpressionStatement",
                  "src": "40511:13:37"
                }
              ]
            },
            "id": 10745,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintPoolShare",
            "nameLocation": "40461:14:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10737,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "40484:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10745,
                  "src": "40476:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40476:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40475:16:37"
            },
            "returnParameters": {
              "id": 10739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40501:0:37"
            },
            "scope": 10803,
            "src": "40452:79:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10754,
              "nodeType": "Block",
              "src": "40586:30:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10751,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10747,
                        "src": "40602:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10750,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10933,
                      "src": "40596:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40596:13:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10753,
                  "nodeType": "ExpressionStatement",
                  "src": "40596:13:37"
                }
              ]
            },
            "id": 10755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnPoolShare",
            "nameLocation": "40546:14:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10747,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "40569:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10755,
                  "src": "40561:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40561:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40560:16:37"
            },
            "returnParameters": {
              "id": 10749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40586:0:37"
            },
            "scope": 10803,
            "src": "40537:79:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10801,
              "nodeType": "Block",
              "src": "40763:256:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 10763,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "40781:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 10765,
                          "indexExpression": {
                            "id": 10764,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10757,
                            "src": "40790:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "40781:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 10766,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bound",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7894,
                        "src": "40781:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552525f4e4f545f424f554e44",
                        "id": 10767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "40804:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86a01019fb9a24504897a9ddf06d43e29c7ad173d46588f4f7aa1ef14d3c847c",
                          "typeString": "literal_string \"ERR_NOT_BOUND\""
                        },
                        "value": "ERR_NOT_BOUND"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86a01019fb9a24504897a9ddf06d43e29c7ad173d46588f4f7aa1ef14d3c847c",
                          "typeString": "literal_string \"ERR_NOT_BOUND\""
                        }
                      ],
                      "id": 10762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "40773:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40773:47:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10769,
                  "nodeType": "ExpressionStatement",
                  "src": "40773:47:37"
                },
                {
                  "assignments": [
                    10771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10771,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "40838:10:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10801,
                      "src": "40830:18:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10770,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "40830:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10776,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 10772,
                        "name": "_records",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8083,
                        "src": "40851:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                          "typeString": "mapping(address => struct BPool.Record storage ref)"
                        }
                      },
                      "id": 10774,
                      "indexExpression": {
                        "id": 10773,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10757,
                        "src": "40860:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "40851:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$7901_storage",
                        "typeString": "struct BPool.Record storage ref"
                      }
                    },
                    "id": 10775,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7900,
                    "src": "40851:23:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "40830:44:37"
                },
                {
                  "expression": {
                    "id": 10790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10777,
                          "name": "_records",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8083,
                          "src": "40884:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                            "typeString": "mapping(address => struct BPool.Record storage ref)"
                          }
                        },
                        "id": 10779,
                        "indexExpression": {
                          "id": 10778,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10757,
                          "src": "40893:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "40884:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$7901_storage",
                          "typeString": "struct BPool.Record storage ref"
                        }
                      },
                      "id": 10780,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7900,
                      "src": "40884:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 10787,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "40942:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BPool_$10803",
                                "typeString": "contract BPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BPool_$10803",
                                "typeString": "contract BPool"
                              }
                            ],
                            "id": 10786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "40934:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10785,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "40934:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "40934:13:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 10782,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10757,
                              "src": "40917:5:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10781,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3084,
                            "src": "40910:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$3084_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 10783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "40910:13:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3084",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 10784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3023,
                        "src": "40910:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 10789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "40910:38:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "40884:64:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10791,
                  "nodeType": "ExpressionStatement",
                  "src": "40884:64:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10793,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10757,
                        "src": "40970:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10794,
                        "name": "oldBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10771,
                        "src": "40976:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 10795,
                            "name": "_records",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8083,
                            "src": "40988:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Record_$7901_storage_$",
                              "typeString": "mapping(address => struct BPool.Record storage ref)"
                            }
                          },
                          "id": 10797,
                          "indexExpression": {
                            "id": 10796,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10757,
                            "src": "40997:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "40988:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$7901_storage",
                            "typeString": "struct BPool.Record storage ref"
                          }
                        },
                        "id": 10798,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7900,
                        "src": "40988:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10792,
                      "name": "Gulped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8037,
                      "src": "40963:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 10799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40963:49:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10800,
                  "nodeType": "EmitStatement",
                  "src": "40958:54:37"
                }
              ]
            },
            "functionSelector": "8c28cbe8",
            "id": 10802,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10760,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10759,
                  "name": "_lock_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8055,
                  "src": "40752:6:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "40752:6:37"
              }
            ],
            "name": "gulp",
            "nameLocation": "40707:4:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10757,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "40720:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10802,
                  "src": "40712:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40712:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40711:15:37"
            },
            "returnParameters": {
              "id": 10761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40763:0:37"
            },
            "scope": 10803,
            "src": "40698:321:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10804,
        "src": "721:40300:37",
        "usedErrors": []
      }
    ],
    "src": "0:41021:37"
  },
  "bytecode": "608060405234801561001057600080fd5b5061599980620000216000396000f3fe608060405234801561001057600080fd5b506004361061041d5760003560e01c8063867378c51161022b578063bf7db23611610130578063d4cadf68116100b8578063ec09302111610087578063ec09302114610924578063f1b8a9b71461092c578063f8b2cb4f1461093f578063fde924f714610952578063ff9b18501461096457600080fd5b8063d4cadf68146108d0578063d73dd623146108d8578063dd62ed3e146108eb578063e4a28a52146104a457600080fd5b8063c6580d12116100ff578063c6580d1214610892578063c98a59cf1461089a578063caa01148146108ad578063cc77828d146108c0578063cd2ed8fb146108c857600080fd5b8063bf7db2361461084c578063c36596a6146104f7578063c421a3fc14610862578063c44a42831461088a57600080fd5b8063a3b3a16d116101b3578063b7b800a411610182578063b7b800a414610817578063ba019dab1461081f578063bc063e1a14610827578063bc694ea21461082f578063be3bbd2e1461083757600080fd5b8063a3b3a16d146107e9578063a9059cbb146107fc578063ab77a2de1461080f578063b0e0d1361461081757600080fd5b8063936c3477116101fa578063936c34771461079f5780639381cd2b146107a7578063948d8ce6146107af57806395d89b41146107c2578063992e2a92146107e157600080fd5b8063867378c51461075f578063892cdf9e146107675780638c28cbe81461077a5780638d4e40831461078d57600080fd5b8063313ce567116103315780635e123add116102b957806376c7a3c71161028857806376c7a3c7146107135780637a284be41461071b5780637c5918b31461072457806380ca7308146107445780638329ab331461074c57600080fd5b80635e123add146106bc578063638c9e95146106c457806366188463146106d757806370a08231146106ea57600080fd5b8063430ed5d011610300578063430ed5d014610632578063458c3fb5146106455780634df947d01461065657806351705cd0146106675780635d1ca631146106b557600080fd5b8063313ce567146105e557806334e19907146105fa578063392e53cd1461060d5780633950b3fd1461061f57600080fd5b806318f9722a116103b457806329b88a6a1161038357806329b88a6a1461052c5780632eebd6ae146105345780632f37b6241461056f578063300621921461059b5780633018205f146105bb57600080fd5b806318f9722a146104e4578063218b5382146104f757806323b872dd14610506578063284e97a91461051957600080fd5b806309ef3f5b116103f057806309ef3f5b146104ac57806312989260146104c157806318160ddd146104d4578063189d00ca146104dc57600080fd5b806306fdde0314610422578063079492d414610460578063095ea7b31461048157806309a3bbe4146104a4575b600080fd5b60408051808201909152601081526f27b1b2b0b7102837b7b6102a37b5b2b760811b60208201525b6040516104579190615249565b60405180910390f35b61047361046e366004615291565b610977565b604051908152602001610457565b61049461048f3660046152d2565b610a05565b6040519015158152602001610457565b610473610a60565b6104bf6104ba3660046152fe565b610a76565b005b6104736104cf36600461535a565b610ca9565b600954610473565b6104736110c0565b6104bf6104f23660046152d2565b6110d7565b610473670de0b6b3a764000081565b610494610514366004615291565b61124f565b6104946105273660046153b7565b61139e565b61047361168f565b610547610542366004615497565b611709565b604080519586526020860194909452928401919091526060830152608082015260a001610457565b61049461057d3660046154dd565b6001600160a01b03166000908152600d602052604090205460ff1690565b6104736105a93660046154dd565b60056020526000908152604090205481565b600a5461010090046001600160a01b03165b6040516001600160a01b039091168152602001610457565b60125b60405160ff9091168152602001610457565b6104bf6106083660046154fa565b6117e1565b600f54600160a01b900460ff16610494565b61047361062d3660046152d2565b6118db565b6104736106403660046152d2565b611940565b6003546001600160a01b03166105cd565b6004546001600160a01b03166105cd565b61067a610675366004615529565b61199d565b6040805193845260208085019390935281518482015291810151606080850191909152918101516080840152015160a082015260c001610457565b60016105e8565b600054610473565b600b546105cd906001600160a01b031681565b6104946106e53660046152d2565b611b50565b6104736106f83660046154dd565b6001600160a01b031660009081526007602052604090205490565b610473611c26565b61047360005481565b6104736107323660046154dd565b60066020526000908152604090205481565b6104bf611c3a565b61047361075a36600461535a565b611dc7565b61047361219b565b61067a610775366004615529565b6121b2565b6104bf6107883660046154dd565b61234a565b600b54600160a01b900460ff16610494565b6104736124bc565b6104736124e9565b6104736107bd3660046154dd565b6124fc565b60408051808201909152600381526213d41560ea1b602082015261044a565b61047361254e565b6104736107f73660046152d2565b61256c565b61049461080a3660046152d2565b6125c9565b6104bf6125df565b610473600281565b610473600181565b6104736127a0565b6104736127b3565b61083f6127d2565b60405161045791906155f9565b610854612881565b60405161045792919061560c565b610875610870366004615663565b6129f1565b60408051928352602083019190915201610457565b6108546131c0565b610473600081565b6108756108a8366004615663565b613325565b6105476108bb366004615497565b613a4f565b61083f613af9565b600c54610473565b600154610473565b6104946108e63660046152d2565b613b1f565b6104736108f93660046156a5565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b610473613b92565b61047361093a3660046154dd565b613ba5565b61047361094d3660046154dd565b613bfe565b600a54600160a81b900460ff16610494565b6104736109723660046152d2565b613c4c565b600a5460009060ff16156109a65760405162461bcd60e51b815260040161099d906156d3565b60405180910390fd5b6109af84613ca9565b6109b883613ca9565b6001600160a01b038085166000908152600d60205260408082209286168252902060038083015460028085015492840154908401546109f993919088613d04565b925050505b9392505050565b3360008181526008602090815260408083206001600160a01b0387168085529252808320859055519192909160008051602061594483398151915290610a4e9086815260200190565b60405180910390a35060015b92915050565b610a73670de0b6b3a7640000603261570e565b81565b600a5460ff1615610a995760405162461bcd60e51b815260040161099d906156d3565b600a8054600160ff19909116179081905561010090046001600160a01b03163314610aff5760405162461bcd60e51b815260206004820152601660248201527522a9292fa4a72b20a624a22fa1a7a72a2927a62622a960511b604482015260640161099d565b6003546001600160a01b03878116911614610b5c5760405162461bcd60e51b815260206004820152601d60248201527f4552525f494e56414c49445f44415441544f4b454e5f41444452455353000000604482015260640161099d565b6004546001600160a01b03848116911614610bb95760405162461bcd60e51b815260206004820152601d60248201527f4552525f494e56414c49445f62617365546f6b656e5f41444452455353000000604482015260640161099d565b610bc4868686613d90565b604080518681524260208201526001600160a01b038816913391600080516020615924833981519152910160405180910390a3610c02838383613d90565b604080518381524260208201526001600160a01b038516913391600080516020615924833981519152910160405180910390a3610c3d613f7e565b6040805183815260208101839052908101869052606081018590526001600160a01b03808816919085169033907fbece8b4dcdbe446dd65a9288154698e067e3e91de17a1a408c2f531b9f845d739060800160405180910390a45050600a805460ff1916905550505050565b600a5460009060ff1615610ccf5760405162461bcd60e51b815260040161099d906156d3565b600a805460ff19166001179055600b54600160a01b900460ff16610d055760405162461bcd60e51b815260040161099d9061572d565b600454610d1a906001600160a01b0316613ca9565b6004546001600160a01b03166000908152600d602052604090206003810154600954610d47919086613fdd565b915082821015610d695760405162461bcd60e51b815260040161099d90615758565b6004546001600160a01b03166000908152600d6020526040902060030154610dae90610d9e6002670de0b6b3a7640000615795565b610da99060016157a9565b614087565b821115610df15760405162461bcd60e51b81526020600482015260116024820152704552525f4d41585f4f55545f524154494f60781b604482015260640161099d565b610dff81600301548361416c565b6003820155600454604080518481524260208201526001600160a01b039092169133917f9d9058fd2f25ccc389fec7720abef0ca83472f5abfafd5f10d37f51e6a0493f3910160405180910390a36040518481527ffcda32798d5a9d032f49b37fea876d422f18f6e386e0f07db6029b693624b2c29060200160405180910390a1600f54600354604051630d098ab360e11b81526001600160a01b03918216600482015260248101879052911690631a13156690604401602060405180830381865afa158015610ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef791906157c1565b1561108557600380546001600160a01b03166000908152600d6020526040812091820154600954610f29919088613fdd565b9050610f3982600301548261416c565b60038381019190915554600a54604080518481524260208201526001600160a01b0393841693610100909304909216917f9d9058fd2f25ccc389fec7720abef0ca83472f5abfafd5f10d37f51e6a0493f3910160405180910390a3600a54610faf9061010090046001600160a01b0316876141c9565b610fb8866141d3565b600354600a54610fda916001600160a01b0390811691610100900416836141dc565b600f5460035460405163054a976360e41b81526001600160a01b03918216600482015260248101849052604481018990529116906354a9763090606401600060405180830381600087803b15801561103157600080fd5b505af1158015611045573d6000803e3d6000fd5b505050507f87b3975661762d852ddf2eeaad6a43b2d93777de7b3b7bdb634283df324561188660405161107a91815260200190565b60405180910390a150505b61108f33856141c9565b611098846141d3565b6004546110af906001600160a01b031633846141dc565b50600a805460ff1916905592915050565b610a736402540be400670de0b6b3a7640000615795565b600b546001600160a01b031633146111295760405162461bcd60e51b815260206004820152601560248201527427a7262c9026a0a925a2aa1021a7a62622a1aa27a960591b604482015260640161099d565b6001600160a01b03821661117f5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964205f6e6577436f6c6c6563746f722061646472657373000000604482015260640161099d565b80158061119f575061119b612710670de0b6b3a7640000615795565b8110155b6111bb5760405162461bcd60e51b815260040161099d906157de565b6111ce600a670de0b6b3a7640000615795565b8111156111ed5760405162461bcd60e51b815260040161099d90615803565b600b80546001600160a01b0319166001600160a01b03841690811790915560008290556040517f5e3e722dbd3b6b8071b78568ac80cd0e8ff92e4fb3024e755d504d8f7c2f6f0991611243913391908590615828565b60405180910390a15050565b6000336001600160a01b038516148061128b57506001600160a01b03841660009081526008602090815260408083203384529091529020548211155b6112cf5760405162461bcd60e51b815260206004820152601560248201527422a9292fa12a27a5a2a72fa120a22fa1a0a62622a960591b604482015260640161099d565b6112da8484846141f0565b336001600160a01b0385161480159061131857506001600160a01b038416600090815260086020908152604080832033845290915290205460001914155b15611394576001600160a01b038416600090815260086020908152604080832033845290915290205461134b908361416c565b6001600160a01b03851660008181526008602090815260408083203380855290835292819020859055519384529092600080516020615944833981519152910160405180910390a35b5060019392505050565b600f54600090600160a01b900460ff16156113fb5760405162461bcd60e51b815260206004820152601760248201527f4552525f414c52454144595f494e495449414c495a4544000000000000000000604482015260640161099d565b6001600160a01b0389166114515760405162461bcd60e51b815260206004820152601e60248201527f4552525f494e56414c49445f434f4e54524f4c4c45525f414444524553530000604482015260640161099d565b6001600160a01b0388166114a75760405162461bcd60e51b815260206004820152601b60248201527f4552525f494e56414c49445f464143544f52595f414444524553530000000000604482015260640161099d565b6114bb612710670de0b6b3a7640000615795565b878760008181106114ce576114ce61584c565b9050602002013510156114f35760405162461bcd60e51b815260040161099d906157de565b611506600a670de0b6b3a7640000615795565b878760008181106115195761151961584c565b90506020020135111561153e5760405162461bcd60e51b815260040161099d90615803565b868660018181106115515761155161584c565b90506020020135600014806115925750611575612710670de0b6b3a7640000615795565b878760018181106115885761158861584c565b9050602002013510155b6115ae5760405162461bcd60e51b815260040161099d906157de565b6115c1600a670de0b6b3a7640000615795565b878760018181106115d4576115d461584c565b9050602002013511156115f95760405162461bcd60e51b815260040161099d90615803565b6116828989898980806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040805180820182528c93508b9250908a9060029083908390808284376000920191909152505060408051602081810190925291508a906001908390839080828437600092019190915250614302915050565b9998505050505050505050565b6002546004805460405163b8421e2b60e01b81526001600160a01b0391821692810192909252600092169063b8421e2b90602401602060405180830381865afa1580156116e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117049190615862565b905090565b600080600080600061171a89613ca9565b61172388613ca9565b604080516080810182526001600160a01b03808c166000908152600d6020818152858320600380820154875260029182015483880152948f168085528383528785209586015497870197909752958352529201546060820152906117a86040518060800160405280600081526020016000815260200160008152602001600081525090565b6117b3838b8b6121b2565b805160208201516040830151606090930151949c50909a509850965090945050505050945094509450945094565b600a5461010090046001600160a01b031633146118355760405162461bcd60e51b815260206004820152601260248201527122a9292fa727aa2fa1a7a72a2927a62622a960711b604482015260640161099d565b611849612710670de0b6b3a7640000615795565b8110156118685760405162461bcd60e51b815260040161099d906157de565b61187b600a670de0b6b3a7640000615795565b81111561189a5760405162461bcd60e51b815260040161099d90615803565b600181905560408051338152602081018390527fbca0d601c32979eebac4e8cd06375b6e45d39af80fc06a33f366425b450dfb69910160405180910390a150565b6001600160a01b0382166000908152600d602090815260408083208151608081018352815460ff161515815260018201549381019390935260028101549183019190915260030154606082018190526009546119389190856144b1565b949350505050565b6001600160a01b0382166000908152600d602090815260408083208151608081018352815460ff16151581526001820154938101939093526002810154918301919091526003015460608201819052600954611938919085613fdd565b6000806119cb6040518060800160405280600081526020016000815260200160008152602001600081525090565b60006119e687600360200201518860015b6020020151614564565b905060006119fb88600260200201518861416c565b90506000611a10896002602002015183614564565b90506000611a1e828561467c565b9050611a3281670de0b6b3a764000061416c565b90506000805489611a4161168f565b600154611a4e91906157a9565b611a5891906157a9565b611a6291906157a9565b9050611a90611a798c60005b602002015184614087565b611a8b670de0b6b3a76400008461416c565b614564565b9750611ab388611aae8a610da9670de0b6b3a7640000611aae61168f565b61416c565b866020018181525050611ad888611aae8a610da9670de0b6b3a764000060005461416c565b866040018181525050611afd88611aae8a610da9670de0b6b3a764000060015461416c565b8652611b1988611aae81610da9670de0b6b3a76400008e61416c565b6060870152611b40611b2c8c6000611a6e565b611a8b670de0b6b3a764000060015461416c565b9650505050505093509350939050565b3360009081526008602090815260408083206001600160a01b038616845290915281205480831115611ba5573360009081526008602090815260408083206001600160a01b0388168452909152812055611bd4565b611baf818461416c565b3360009081526008602090815260408083206001600160a01b03891684529091529020555b3360008181526008602090815260408083206001600160a01b03891680855290835292819020549051908152919291600080516020615944833981519152910160405180910390a35060019392505050565b610a73612710670de0b6b3a7640000615795565b6000611c446127d2565b905060005b8151811015611dc357600060066000848481518110611c6a57611c6a61584c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020549050600060066000858581518110611cad57611cad61584c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbaf1ab77be65c7abf8fcd922bfcf0a749f556ac1a4cdf39c126ffaa1851edb5633600b60009054906101000a90046001600160a01b0316858581518110611d2357611d2361584c565b602002602001015184604051611d6194939291906001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b60405180910390a1600b548351611db0916001600160a01b0316908390869086908110611d9057611d9061584c565b60200260200101516001600160a01b03166147a89092919063ffffffff16565b5080611dbb8161587b565b915050611c49565b5050565b600a5460009060ff1615611ded5760405162461bcd60e51b815260040161099d906156d3565b600a805460ff19166001179055600b54600160a01b900460ff16611e235760405162461bcd60e51b815260040161099d9061572d565b600454611e38906001600160a01b0316613ca9565b6004546001600160a01b03166000908152600d6020526040902060030154611e6d90610da96002670de0b6b3a7640000615795565b831115611eaf5760405162461bcd60e51b815260206004820152601060248201526f4552525f4d41585f494e5f524154494f60801b604482015260640161099d565b6004546001600160a01b03166000908152600d602052604090206003810154600954611edc9190866144b1565b915082821015611efe5760405162461bcd60e51b815260040161099d90615758565b611f0c81600301548561480b565b6003820155600454604080518681524260208201526001600160a01b03909216913391600080516020615924833981519152910160405180910390a36040518281527ffcda32798d5a9d032f49b37fea876d422f18f6e386e0f07db6029b693624b2c29060200160405180910390a1600380546001600160a01b03166000908152600d6020526040812091820154600954611fa891908661485d565b600f54600354604051632afbbacb60e01b81526001600160a01b039182166004820152602481018490529293501690632afbbacb90604401602060405180830381865afa158015611ffd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202191906157c1565b1561215e57600f5460035460405163ebedb8b360e01b81526001600160a01b0391821660048201526024810184905291169063ebedb8b390604401600060405180830381600087803b15801561207657600080fd5b505af115801561208a573d6000803e3d6000fd5b5050505061209c82600301548261480b565b60038381019190915554600a54604080518481524260208201526001600160a01b039384169361010090930490921691600080516020615924833981519152910160405180910390a36040518481527f87b3975661762d852ddf2eeaad6a43b2d93777de7b3b7bdb634283df324561189060200160405180910390a1612121846148fa565b600a5461213c9061010090046001600160a01b031685614903565b600354600a5461215e916001600160a01b03908116916101009004168361490d565b612167846148fa565b6121713385614903565b600454612188906001600160a01b0316338861490d565b505050600a805460ff1916905592915050565b610a7364e8d4a51000670de0b6b3a7640000615795565b6000806121e06040518060800160405280600081526020016000815260200160008152602001600081525090565b60006121f587600160200201518860036119dc565b905061221386611aae88610da9670de0b6b3a7640000611aae61168f565b82602001818152505061223886611aae88610da9670de0b6b3a764000060005461416c565b82604001818152505061225d86611aae88610da9670de0b6b3a764000060015461416c565b825261227986611aae81610da9670de0b6b3a76400008a61416c565b606083015260008054869061228c61168f565b60015461229991906157a9565b6122a391906157a9565b6122ad91906157a9565b905060006122c3670de0b6b3a76400008361416c565b90506122cf8882614087565b89519091506000906122e590611a8b818561480b565b905060006122f3828661467c565b90506000612309670de0b6b3a76400008361416c565b905061231c8c6002602002015182614087565b9850886123378c89604001518a60200151611aae91906157a9565b9850985050505050505093509350939050565b600a5460ff161561236d5760405162461bcd60e51b815260040161099d906156d3565b600a805460ff191660011790556001600160a01b0381166000908152600d602052604090205460ff166123d25760405162461bcd60e51b815260206004820152600d60248201526c11549497d393d517d093d55391609a1b604482015260640161099d565b6001600160a01b0381166000818152600d6020526040908190206003015490516370a0823160e01b81523060048201529091906370a0823190602401602060405180830381865afa15801561242b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244f9190615862565b6001600160a01b0383166000818152600d6020908152604091829020600301849055815192835282018490528101919091527f9facca02b471d2776031537a8c9e281dfe5120035ede107bd328b165ffd973389060600160405180910390a15050600a805460ff19169055565b600a5460009060ff16156124e25760405162461bcd60e51b815260040161099d906156d3565b50600e5490565b610a73670de0b6b3a7640000606461570e565b600a5460009060ff16156125225760405162461bcd60e51b815260040161099d906156d3565b61252b82613ca9565b506001600160a01b0381166000908152600d60205260409020600201545b919050565b6125616002670de0b6b3a7640000615795565b610a739060016157a9565b6001600160a01b0382166000908152600d602090815260408083208151608081018352815460ff16151581526001820154938101939093526002810154918301919091526003015460608201819052600954611938919085614a55565b60006125d63384846141f0565b50600192915050565b60006125e96127d2565b905060005b8151811015611dc35760006005600084848151811061260f5761260f61584c565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205490506000600560008585815181106126525761265261584c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055506000600260009054906101000a90046001600160a01b03166001600160a01b0316631a81876d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156126d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f79190615896565b90507fed2b0288692cfc6d01c94a67a53721792f59c3d1388221f8aa4f66c8d2808dde338286868151811061272e5761272e61584c565b60200260200101518560405161276c94939291906001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b60405180910390a161278b8183868681518110611d9057611d9061584c565b505080806127989061587b565b9150506125ee565b610a73600a670de0b6b3a7640000615795565b60016127c8670de0b6b3a7640000600261570e565b610a7391906158b3565b600a5460609060ff16156127f85760405162461bcd60e51b815260040161099d906156d3565b600b54600160a01b900460ff166128215760405162461bcd60e51b815260040161099d9061572d565b600c80548060200260200160405190810160405280929190818152602001828054801561287757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612859575b5050505050905090565b606080600061288e6127d2565b90506000815167ffffffffffffffff8111156128ac576128ac615513565b6040519080825280602002602001820160405280156128d5578160200160208202803683370190505b5090506000825167ffffffffffffffff8111156128f4576128f4615513565b60405190808252806020026020018201604052801561291d578160200160208202803683370190505b50905060005b83518110156129e65783818151811061293e5761293e61584c565b60200260200101518382815181106129585761295861584c565b60200260200101906001600160a01b031690816001600160a01b0316815250506005600085838151811061298e5761298e61584c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548282815181106129c9576129c961584c565b6020908102919091010152806129de8161587b565b915050612923565b509094909350915050565b600a54600090819060ff1615612a195760405162461bcd60e51b815260040161099d906156d3565b600a805460ff19166001179055600b54600160a01b900460ff16612a4f5760405162461bcd60e51b815260040161099d9061572d565b612a5f60408501602086016154dd565b6001600160a01b0316612a7560208601866154dd565b6001600160a01b03161415612ac55760405162461bcd60e51b815260206004820152601660248201527521b0b73737ba1039bbb0b81039b0b6b2903a37b5b2b760511b604482015260640161099d565b612ae48460005b602002016020810190612adf91906154dd565b613ca9565b612aef846001612acc565b6000600d81612b0160208801886154dd565b6001600160a01b03168152602081019190915260400160009081209150600d81876001602002016020810190612b3791906154dd565b6001600160a01b031681526020810191909152604001600020905060608501351580612b7a5750612b72612710670de0b6b3a7640000615795565b606086013510155b612bbf5760405162461bcd60e51b8152602060048201526016602482015275436f6e73756d655377617046656520746f6f206c6f7760501b604482015260640161099d565b612bd2600a670de0b6b3a7640000615795565b60608601351115612c1f5760405162461bcd60e51b8152602060048201526017602482015276086dedce6eadacaa6eec2e08ccaca40e8dede40d0d2ced604b1b604482015260640161099d565b6003820154612c3b90610da96002670de0b6b3a7640000615795565b85351115612c7e5760405162461bcd60e51b815260206004820152601060248201526f4552525f4d41585f494e5f524154494f60801b604482015260640161099d565b6000612cb483600301548460020154846003015485600201548a600360048110612caa57612caa61584c565b6020020135613d04565b90506040860135811115612d005760405162461bcd60e51b81526020600482015260136024820152724552525f4241445f4c494d49545f505249434560681b604482015260640161099d565b600080604051806080016040528086600301548152602001866002015481526020018560030154815260200185600201548152509050612d616040518060800160405280600081526020016000815260200160008152602001600081525090565b612d71828a3560608c01356121b2565b91995093509050612dc0600560008c815b602002016020810190612d9591906154dd565b6001600160a01b03166001600160a01b0316815260200190815260200160002054826020015161480b565b60056000612dd160208e018e6154dd565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550612e4d600660008c600060038110612e0f57612e0f61584c565b602002016020810190612e2291906154dd565b6001600160a01b03166001600160a01b0316815260200190815260200160002054826040015161480b565b60066000612e5e60208e018e6154dd565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055507f53a9dc73d01196a9c660d761bc5ec77b945340a34b5b52e510760af2dab1c0f181600001518260200151836040015184606001518e600060038110612eca57612eca61584c565b602002016020810190612edd91906154dd565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a00160405180910390a16020890135881015612f355760405162461bcd60e51b815260040161099d90615758565b612f4386600301548461480b565b8660030181905550612f5985600301548961416c565b8560030181905550612f8b86600301548760020154876003015488600201548d600360048110612caa57612caa61584c565b965083871015612fad5760405162461bcd60e51b815260040161099d906158ca565b6040890135871115612ff35760405162461bcd60e51b815260206004820152600f60248201526e4552525f4c494d49545f505249434560881b604482015260640161099d565b612ffe893589614564565b84111561301d5760405162461bcd60e51b815260040161099d906158ca565b61302d60408b0160208c016154dd565b6001600160a01b031661304360208c018c6154dd565b60038089015490880154604080518e358152602081018e905242918101919091526060810192909252608082015260a081018a90526001600160a01b03919091169033907fbdafe88494b31fc7436fe7992b0f377e874287e841e62eed1ad77e84f3c5b1719060c00160405180910390a46130cc6130c460208c018c6154dd565b338b3561490d565b60006130f18a35611aae81610da9670de0b6b3a76400008f60035b602002013561416c565b905060608a01351561318c576131358b60025b60200201602081019061311791906154dd565b8261312560208f018f6154dd565b6001600160a01b031691906147a8565b7f6d11837f46cc09b011cf4aae09fcade046c020aac088090ae4f77ff67b70797261316660608d0160408e016154dd565b61317360208e018e6154dd565b8360405161318393929190615828565b60405180910390a15b6131a661319f60408d0160208e016154dd565b338b6141dc565b50505050505050600a805460ff1916905590939092509050565b60608060006131cd6127d2565b90506000815167ffffffffffffffff8111156131eb576131eb615513565b604051908082528060200260200182016040528015613214578160200160208202803683370190505b5090506000825167ffffffffffffffff81111561323357613233615513565b60405190808252806020026020018201604052801561325c578160200160208202803683370190505b50905060005b83518110156129e65783818151811061327d5761327d61584c565b60200260200101518382815181106132975761329761584c565b60200260200101906001600160a01b031690816001600160a01b031681525050600660008583815181106132cd576132cd61584c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548282815181106133085761330861584c565b60209081029190910101528061331d8161587b565b915050613262565b600a54600090819060ff161561334d5760405162461bcd60e51b815260040161099d906156d3565b600a805460ff19166001179055600b54600160a01b900460ff166133835760405162461bcd60e51b815260040161099d9061572d565b61339360408501602086016154dd565b6001600160a01b03166133a960208601866154dd565b6001600160a01b031614156133f95760405162461bcd60e51b815260206004820152601660248201527521b0b73737ba1039bbb0b81039b0b6b2903a37b5b2b760511b604482015260640161099d565b606083013515806134215750613419612710670de0b6b3a7640000615795565b606084013510155b6134665760405162461bcd60e51b8152602060048201526016602482015275436f6e73756d655377617046656520746f6f206c6f7760501b604482015260640161099d565b613479600a670de0b6b3a7640000615795565b606084013511156134c65760405162461bcd60e51b8152602060048201526017602482015276086dedce6eadacaa6eec2e08ccaca40e8dede40d0d2ced604b1b604482015260640161099d565b6134d1846000612acc565b6134dc846001612acc565b6000600d816134ee60208801886154dd565b6001600160a01b03168152602081019190915260400160009081209150600d8187600160200201602081019061352491906154dd565b6001600160a01b03166001600160a01b03168152602001908152602001600020905061356381600301546002670de0b6b3a7640000610d9e9190615795565b602086013511156135aa5760405162461bcd60e51b81526020600482015260116024820152704552525f4d41585f4f55545f524154494f60781b604482015260640161099d565b60006135d683600301548460020154846003015485600201548a600360048110612caa57612caa61584c565b905060408601358111156136225760405162461bcd60e51b81526020600482015260136024820152724552525f4241445f4c494d49545f505249434560681b604482015260640161099d565b6000806040518060800160405280866003015481526020018660020154815260200185600301548152602001856002015481525090506136836040518060800160405280600081526020016000815260200160008152602001600081525090565b6136968260208b013560608c013561199d565b919950935090506136ab600560008c81612d82565b600560006136bc60208e018e6154dd565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506136fa600660008c600060038110612e0f57612e0f61584c565b6006600061370b60208e018e6154dd565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055507f53a9dc73d01196a9c660d761bc5ec77b945340a34b5b52e510760af2dab1c0f181600001518260200151836040015184606001518e6000600381106137775761377761584c565b60200201602081019061378a91906154dd565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a00160405180910390a188358811156137fe5760405162461bcd60e51b815260206004820152600c60248201526b22a9292fa624a6a4aa2fa4a760a11b604482015260640161099d565b61380c86600301548461480b565b600380880191909155850154613824908a60016130e7565b856003018190555061385686600301548760020154876003015488600201548d600360048110612caa57612caa61584c565b9650838710156138785760405162461bcd60e51b815260040161099d906158ca565b60408901358711156138be5760405162461bcd60e51b815260206004820152600f60248201526e4552525f4c494d49545f505249434560881b604482015260640161099d565b6138cc8860208b0135614564565b8411156138eb5760405162461bcd60e51b815260040161099d906158ca565b6138fb60408b0160208c016154dd565b6001600160a01b031661391160208c018c6154dd565b6001600160a01b0316337fbdafe88494b31fc7436fe7992b0f377e874287e841e62eed1ad77e84f3c5b1718b8d60016020020135428c600301548c600301548f60405161398696959493929190958652602086019490945260408501929092526060840152608083015260a082015260c00190565b60405180910390a46139a561399e60208c018c6154dd565b338a61490d565b60006139c389611aae81610da9670de0b6b3a76400008f60036130e7565b905060608a013515613a31576139da8b6002613104565b7f6d11837f46cc09b011cf4aae09fcade046c020aac088090ae4f77ff67b707972613a0b60608d0160408e016154dd565b613a1860208e018e6154dd565b83604051613a2893929190615828565b60405180910390a15b6131a6613a4460408d0160208e016154dd565b3360208d01356141dc565b6000806000806000613a6089613ca9565b613a6988613ca9565b604080516080810182526001600160a01b03808c166000908152600d6020818152858320600380820154875260029182015483880152948f16808552838352878520958601549787019790975295835252920154606082015290613aee6040518060800160405280600081526020016000815260200160008152602001600081525090565b6117b3838b8b61199d565b600a5460609060ff16156128215760405162461bcd60e51b815260040161099d906156d3565b3360009081526008602090815260408083206001600160a01b0386168452909152812054613b4d908361480b565b3360008181526008602090815260408083206001600160a01b038916808552908352928190208590555193845290926000805160206159448339815191529101610a4e565b610a736002670de0b6b3a7640000615795565b600a5460009060ff1615613bcb5760405162461bcd60e51b815260040161099d906156d3565b613bd482613ca9565b6001600160a01b0382166000908152600d6020526040902060020154600e546109fe908290614564565b600a5460009060ff1615613c245760405162461bcd60e51b815260040161099d906156d3565b613c2d82613ca9565b506001600160a01b03166000908152600d602052604090206003015490565b6001600160a01b0382166000908152600d602090815260408083208151608081018352815460ff1615158152600182015493810193909352600281015491830191909152600301546060820181905260095461193891908561485d565b6001600160a01b0381166000908152600d602052604090205460ff16613d015760405162461bcd60e51b815260206004820152600d60248201526c11549497d393d517d093d55391609a1b604482015260640161099d565b50565b600080613d118787614564565b90506000613d1f8686614564565b90506000613d2d8383614564565b90506000613d76670de0b6b3a7640000611a8b670de0b6b3a764000089600054613d5561168f565b600154613d6291906157a9565b613d6c91906157a9565b611aae91906157a9565b9050613d828282614087565b9a9950505050505050505050565b600a5461010090046001600160a01b03163314613de45760405162461bcd60e51b815260206004820152601260248201527122a9292fa727aa2fa1a7a72a2927a62622a960711b604482015260640161099d565b6001600160a01b0383166000908152600d602052604090205460ff1615613e3c5760405162461bcd60e51b815260206004820152600c60248201526b11549497d254d7d093d5539160a21b604482015260640161099d565b600b54600160a01b900460ff1615613e895760405162461bcd60e51b815260206004820152601060248201526f11549497d254d7d1925390531256915160821b604482015260640161099d565b600c54600211613ecc5760405162461bcd60e51b815260206004820152600e60248201526d4552525f4d41585f544f4b454e5360901b604482015260640161099d565b604080516080810182526001808252600c805460208085019182526000858701818152606087018281526001600160a01b038c16808452600d9094529782209651875460ff1916901515178755925186860155915160028601559451600390940193909355805491820181559091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319169091179055613f79838383614af2565b505050565b600b805460ff60a01b1916600160a01b179055600a805460ff60a81b1916600160a81b179055613fbf613fba670de0b6b3a7640000606461570e565b6148fa565b613fdb33613fd6670de0b6b3a7640000606461570e565b614903565b565b600060018210156140305760405162461bcd60e51b815260206004820152601a60248201527f4552525f504f4f4c5f414d4f554e545f494e5f544f4f5f4c4f57000000000000604482015260640161099d565b61403b82600261570e565b91506000614049848461416c565b905060006140578286614564565b9050600061406d670de0b6b3a76400008361416c565b9050600061407b8289614087565b98975050505050505050565b600080614094838561570e565b90508315806140ab5750826140a98583615795565b145b6140ea5760405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b604482015260640161099d565b60006140ff6002670de0b6b3a7640000615795565b61410990836157a9565b90508181101561414e5760405162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b604482015260640161099d565b6000614162670de0b6b3a764000083615795565b9695505050505050565b600080600061417b8585614d11565b9150915080156141c15760405162461bcd60e51b81526020600482015260116024820152704552525f5355425f554e444552464c4f5760781b604482015260640161099d565b509392505050565b611dc38282614d48565b613d0181614d53565b613f796001600160a01b03841683836147a8565b6001600160a01b03831660009081526007602052604090205481111561424f5760405162461bcd60e51b815260206004820152601460248201527311549497d25394d551919250d251539517d0905360621b604482015260640161099d565b6001600160a01b038316600090815260076020526040902054614272908261416c565b6001600160a01b0380851660009081526007602052604080822093909355908416815220546142a1908261480b565b6001600160a01b0380841660008181526007602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906142f59085815260200190565b60405180910390a3505050565b600a8054610100600160a81b0319166101006001600160a01b038a81169190910291909117909155600280546001600160a01b0319169188169190911790558451600090869082906143565761435661584c565b602090810291909101810151600181905560408051338152928301919091527fbca0d601c32979eebac4e8cd06375b6e45d39af80fc06a33f366425b450dfb69910160405180910390a1856001815181106143b3576143b361584c565b6020908102919091018101516000819055600a8054881515600160a81b0260ff60a81b19909116179055600b80548651600380546001600160a01b039283166001600160a01b0319918216179091559488015160048054918316918716919091179055865116881515600160a01b02949094166001600160a81b031990911617831790556040517f5e3e722dbd3b6b8071b78568ac80cd0e8ff92e4fb3024e755d504d8f7c2f6f0992614467923392615828565b60405180910390a15050600f8054600a54600160a01b6101009091046001600160a01b03166001600160a81b03199092169190911781179182905560ff9104169695505050505050565b6000806144c683670de0b6b3a7640000614087565b905060006144d4868361480b565b905060006144e28288614564565b905060006144f882670de0b6b3a764000061416c565b905060006145068289614087565b905060028110156145595760405162461bcd60e51b815260206004820152601b60248201527f4552525f544f4b454e5f414d4f554e545f494e5f544f4f5f4c4f570000000000604482015260640161099d565b611682600282615795565b6000816145a25760405162461bcd60e51b815260206004820152600c60248201526b4552525f4449565f5a45524f60a01b604482015260640161099d565b60006145b6670de0b6b3a76400008561570e565b90508315806145d55750670de0b6b3a76400006145d38583615795565b145b6146145760405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b604482015260640161099d565b6000614621600285615795565b61462b90836157a9565b9050818110156146705760405162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b604482015260640161099d565b60006141628583615795565b600060018310156146c75760405162461bcd60e51b81526020600482015260156024820152744552525f42504f575f424153455f544f4f5f4c4f5760581b604482015260640161099d565b60016146dc670de0b6b3a7640000600261570e565b6146e691906158b3565b83111561472e5760405162461bcd60e51b815260206004820152601660248201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b604482015260640161099d565b600061473983614e1f565b90506000614747848361416c565b9050600061475d8661475885614e3d565b614e51565b90508161476e579250610a5a915050565b6000614791878461478c6402540be400670de0b6b3a7640000615795565b614ec5565b905061479d8282614087565b979650505050505050565b6040516001600160a01b038316602482015260448101829052613f7990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614fb5565b60008061481883856157a9565b9050838110156109fe5760405162461bcd60e51b815260206004820152601060248201526f4552525f4144445f4f564552464c4f5760801b604482015260640161099d565b60008061486a848461480b565b905060006148788286614564565b9050600061488e82670de0b6b3a764000061416c565b9050600061489c8289614087565b905060018110156148ef5760405162461bcd60e51b815260206004820152601b60248201527f4552525f504f4f4c5f414d4f554e545f4f55545f544f4f5f4c4f570000000000604482015260640161099d565b61407b81600261570e565b613d0181615087565b611dc382826150f6565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015614954573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149789190615862565b905061498f6001600160a01b038516843085615101565b61499982826157a9565b6040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156149dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a019190615862565b1015614a4f5760405162461bcd60e51b815260206004820152601a60248201527f5472616e7366657220616d6f756e7420697320746f6f206c6f77000000000000604482015260640161099d565b50505050565b600080614a62858461416c565b90506000614a708287614564565b90506000614a86670de0b6b3a76400008361416c565b90506000614a948288614087565b90506002811015614ae75760405162461bcd60e51b815260206004820152601c60248201527f4552525f544f4b454e5f414d4f554e545f4f55545f544f4f5f4c4f5700000000604482015260640161099d565b61407b600282615795565b670de0b6b3a7640000811015614b3b5760405162461bcd60e51b815260206004820152600e60248201526d11549497d3525397d5d15251d21560921b604482015260640161099d565b614b4e670de0b6b3a7640000603261570e565b811115614b8e5760405162461bcd60e51b815260206004820152600e60248201526d11549497d3505617d5d15251d21560921b604482015260640161099d565b614ba564e8d4a51000670de0b6b3a7640000615795565b821015614be65760405162461bcd60e51b815260206004820152600f60248201526e4552525f4d494e5f42414c414e434560881b604482015260640161099d565b6001600160a01b0383166000908152600d602052604090206002015480821115614c8257614c1f600e54614c1a848461416c565b61480b565b600e55614c35670de0b6b3a7640000603261570e565b600e541115614c7d5760405162461bcd60e51b815260206004820152601460248201527311549497d3505617d513d5105317d5d15251d21560621b604482015260640161099d565b614c9e565b80821015614c9e57614c9a600e54611aae838561416c565b600e555b6001600160a01b0384166000908152600d602052604090206002810183905560030180549084905580841115614ce757614ce28533614cdd878561416c565b61490d565b614d0a565b80841015614d0a576000614cfb828661416c565b9050614d088633836141dc565b505b5050505050565b600080828410614d3057614d2583856158b3565b600091509150614d41565b614d3a84846158b3565b6001915091505b9250929050565b611dc38230836141f0565b30600090815260076020526040902054811115614da95760405162461bcd60e51b815260206004820152601460248201527311549497d25394d551919250d251539517d0905360621b604482015260640161099d565b30600090815260076020526040902054614dc3908261416c565b30600090815260076020526040902055600954614de0908261416c565b60095560405181815260009030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a350565b6000670de0b6b3a7640000614e3383614e3d565b610a5a919061570e565b6000610a5a670de0b6b3a764000083615795565b60008281614e606002856158f3565b614e7257670de0b6b3a7640000614e74565b815b9050614e81600285615795565b93505b831561193857614e948283614087565b9150614ea16002856158f3565b15614eb357614eb08183614087565b90505b614ebe600285615795565b9350614e84565b6000828180614edc87670de0b6b3a7640000614d11565b9092509050670de0b6b3a764000080600060015b888410614fa6576000614f0b670de0b6b3a76400008361570e565b9050600080614f2b8a614f2685670de0b6b3a764000061416c565b614d11565b91509150614f3d87610da9848c614087565b9650614f498784614564565b965086614f5857505050614fa6565b8715614f62579315935b8015614f6c579315935b8415614f8357614f7c868861416c565b9550614f90565b614f8d868861480b565b95505b5050508080614f9e9061587b565b915050614ef0565b50909998505050505050505050565b600061500a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166151229092919063ffffffff16565b805190915015613f79578080602001905181019061502891906157c1565b613f795760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161099d565b306000908152600760205260409020546150a1908261480b565b306000908152600760205260409020556009546150be908261480b565b60095560405181815230906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001614e14565b611dc33083836141f0565b614a4f846323b872dd60e01b8585856040516024016147d493929190615828565b6060611938848460008585843b61517b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161099d565b600080866001600160a01b031685876040516151979190615907565b60006040518083038185875af1925050503d80600081146151d4576040519150601f19603f3d011682016040523d82523d6000602084013e6151d9565b606091505b509150915061479d828286606083156151f35750816109fe565b8251156152035782518084602001fd5b8160405162461bcd60e51b815260040161099d9190615249565b60005b83811015615238578181015183820152602001615220565b83811115614a4f5750506000910152565b602081526000825180602084015261526881604085016020870161521d565b601f01601f19169190910160400192915050565b6001600160a01b0381168114613d0157600080fd5b6000806000606084860312156152a657600080fd5b83356152b18161527c565b925060208401356152c18161527c565b929592945050506040919091013590565b600080604083850312156152e557600080fd5b82356152f08161527c565b946020939093013593505050565b60008060008060008060c0878903121561531757600080fd5b86356153228161527c565b9550602087013594506040870135935060608701356153408161527c565b9598949750929560808101359460a0909101359350915050565b6000806040838503121561536d57600080fd5b50508035926020909101359150565b8015158114613d0157600080fd5b80356125498161537c565b8060408101831015610a5a57600080fd5b8060208101831015610a5a57600080fd5b600080600080600080600080610100898b0312156153d457600080fd5b88356153df8161527c565b975060208901356153ef8161527c565b9650604089013567ffffffffffffffff8082111561540c57600080fd5b818b0191508b601f83011261542057600080fd5b81358181111561542f57600080fd5b8c60208260051b850101111561544457600080fd5b60208301985080975050505061545c60608a0161538a565b935061546a60808a0161538a565b92506154798a60a08b01615395565b91506154888a60e08b016153a6565b90509295985092959890939650565b600080600080608085870312156154ad57600080fd5b84356154b88161527c565b935060208501356154c88161527c565b93969395505050506040820135916060013590565b6000602082840312156154ef57600080fd5b81356109fe8161527c565b60006020828403121561550c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080600060c0848603121561553e57600080fd5b84601f85011261554d57600080fd5b6040516080810181811067ffffffffffffffff8211171561557057615570615513565b60405280608086018781111561558557600080fd5b865b8181101561559f578035835260209283019201615587565b509197913596505060a094909401359392505050565b600081518084526020808501945080840160005b838110156155ee5781516001600160a01b0316875295820195908201906001016155c9565b509495945050505050565b6020815260006109fe60208301846155b5565b60408152600061561f60408301856155b5565b82810360208481019190915284518083528582019282019060005b818110156156565784518352938301939183019160010161563a565b5090979650505050505050565b60008060e0838503121561567657600080fd5b606083018481111561568757600080fd5b8392508460e08501111561569a57600080fd5b809150509250929050565b600080604083850312156156b857600080fd5b82356156c38161527c565b9150602083013561569a8161527c565b6020808252600b908201526a4552525f5245454e54525960a81b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615615728576157286156f8565b500290565b60208082526011908201527011549497d393d517d19253905312569151607a1b604082015260600190565b6020808252600d908201526c11549497d31253525517d3d555609a1b604082015260600190565b634e487b7160e01b600052601260045260246000fd5b6000826157a4576157a461577f565b500490565b600082198211156157bc576157bc6156f8565b500190565b6000602082840312156157d357600080fd5b81516109fe8161537c565b6020808252600b908201526a4552525f4d494e5f46454560a81b604082015260600190565b6020808252600b908201526a4552525f4d41585f46454560a81b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561587457600080fd5b5051919050565b600060001982141561588f5761588f6156f8565b5060010190565b6000602082840312156158a857600080fd5b81516109fe8161527c565b6000828210156158c5576158c56156f8565b500390565b6020808252600f908201526e08aa4a4be9a82a890be82a0a0a49eb608b1b604082015260600190565b6000826159025761590261577f565b500690565b6000825161591981846020870161521d565b919091019291505056fe15a8ca63e37b2cff1677df2b6b82d36fcf8a524228bd7a4b4d02d107c28c1e8a8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a264697066735822122049cf762b073c842e87b02787ca6ec527fa518bec27bf5181236c5993f2b3ff8464736f6c634300080c0033",
  "bytecodeSha1": "34c53e17aa2af6c34e80f96078ac5002172d2d4c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "BPool",
  "coverageMap": {
    "branches": {
      "22": {},
      "28": {},
      "30": {},
      "31": {},
      "33": {},
      "35": {
        "BMath.calcPoolInGivenSingleOut": {
          "379": [
            8289,
            8307,
            true
          ]
        },
        "BMath.calcPoolOutGivenSingleIn": {
          "377": [
            6489,
            6507,
            true
          ]
        },
        "BMath.calcSingleInGivenPoolOut": {
          "378": [
            7067,
            7089,
            true
          ]
        },
        "BMath.calcSingleOutGivenPoolIn": {
          "376": [
            7420,
            7437,
            true
          ]
        }
      },
      "36": {
        "BNum.badd": {
          "391": [
            1242,
            1248,
            true
          ]
        },
        "BNum.bdiv": {
          "384": [
            2125,
            2131,
            true
          ],
          "385": [
            2194,
            2200,
            true
          ],
          "386": [
            2204,
            2218,
            true
          ],
          "387": [
            2306,
            2314,
            true
          ]
        },
        "BNum.bmul": {
          "380": [
            1843,
            1849,
            true
          ],
          "381": [
            1853,
            1864,
            true
          ],
          "382": [
            1938,
            1946,
            true
          ]
        },
        "BNum.bpow": {
          "388": [
            3007,
            3028,
            true
          ],
          "389": [
            3072,
            3093,
            true
          ],
          "390": [
            3261,
            3272,
            false
          ]
        },
        "BNum.bpowApprox": {
          "394": [
            4200,
            4209,
            false
          ],
          "395": [
            4235,
            4239,
            false
          ],
          "396": [
            4279,
            4283,
            false
          ],
          "397": [
            4323,
            4331,
            false
          ]
        },
        "BNum.bpowi": {
          "393": [
            2656,
            2666,
            false
          ]
        },
        "BNum.bsub": {
          "383": [
            1443,
            1448,
            true
          ]
        },
        "BNum.bsubSign": {
          "392": [
            1604,
            1610,
            false
          ]
        }
      },
      "37": {
        "BPool._checkBound": {
          "361": [
            8880,
            8901,
            true
          ]
        },
        "BPool._pullUnderlying": {
          "365": [
            39862,
            39926,
            true
          ]
        },
        "BPool.bind": {
          "362": [
            16868,
            16893,
            true
          ],
          "363": [
            16934,
            16956,
            true
          ],
          "364": [
            16991,
            17002,
            true
          ]
        },
        "BPool.exitswapPoolAmountIn": {
          "311": [
            34593,
            34603,
            true
          ],
          "312": [
            34893,
            34923,
            true
          ],
          "313": [
            34973,
            35047,
            true
          ],
          "314": [
            35479,
            35533,
            false
          ]
        },
        "BPool.getFinalTokens": {
          "336": [
            9657,
            9667,
            true
          ]
        },
        "BPool.gulp": {
          "335": [
            40781,
            40802,
            true
          ]
        },
        "BPool.initialize": {
          "320": [
            4591,
            4603,
            true
          ],
          "321": [
            4649,
            4673,
            true
          ],
          "322": [
            4726,
            4747,
            true
          ],
          "323": [
            4797,
            4819,
            true
          ],
          "324": [
            4853,
            4875,
            true
          ],
          "325": [
            4909,
            4925,
            true
          ],
          "326": [
            4929,
            4950,
            true
          ],
          "327": [
            4984,
            5006,
            true
          ]
        },
        "BPool.joinswapExternAmountIn": {
          "331": [
            32141,
            32151,
            true
          ],
          "332": [
            32244,
            32316,
            true
          ],
          "333": [
            32609,
            32642,
            true
          ],
          "334": [
            33186,
            33236,
            false
          ]
        },
        "BPool.rebind": {
          "366": [
            17723,
            17743,
            true
          ],
          "367": [
            17780,
            17800,
            true
          ],
          "368": [
            17837,
            17859,
            true
          ],
          "369": [
            17991,
            18009,
            false
          ],
          "370": [
            18105,
            18137,
            true
          ],
          "371": [
            18183,
            18201,
            false
          ],
          "372": [
            18500,
            18520,
            false
          ],
          "373": [
            18618,
            18638,
            false
          ]
        },
        "BPool.setSwapFee": {
          "328": [
            16022,
            16047,
            true
          ],
          "329": [
            16088,
            16106,
            true
          ],
          "330": [
            16140,
            16158,
            true
          ]
        },
        "BPool.setup": {
          "308": [
            6968,
            6993,
            true
          ],
          "309": [
            7051,
            7088,
            true
          ],
          "310": [
            7174,
            7211,
            true
          ]
        },
        "BPool.swapExactAmountIn": {
          "337": [
            23527,
            23537,
            true
          ],
          "338": [
            23577,
            23619,
            true
          ],
          "339": [
            23897,
            23922,
            true
          ],
          "340": [
            23926,
            23958,
            true
          ],
          "341": [
            24002,
            24034,
            true
          ],
          "342": [
            24092,
            24153,
            true
          ],
          "343": [
            24442,
            24482,
            true
          ],
          "344": [
            25413,
            25452,
            true
          ],
          "345": [
            25832,
            25865,
            true
          ],
          "346": [
            25903,
            25942,
            true
          ],
          "347": [
            25994,
            26056,
            true
          ],
          "348": [
            26667,
            26692,
            false
          ]
        },
        "BPool.swapExactAmountOut": {
          "349": [
            27768,
            27778,
            true
          ],
          "350": [
            27818,
            27860,
            true
          ],
          "351": [
            27905,
            27930,
            true
          ],
          "352": [
            27934,
            27966,
            true
          ],
          "353": [
            28010,
            28042,
            true
          ],
          "354": [
            28334,
            28397,
            true
          ],
          "355": [
            28687,
            28727,
            true
          ],
          "356": [
            29850,
            29888,
            true
          ],
          "357": [
            30272,
            30305,
            true
          ],
          "358": [
            30343,
            30382,
            true
          ],
          "359": [
            30433,
            30494,
            true
          ],
          "360": [
            31078,
            31103,
            false
          ]
        },
        "BPool.updatePublishMarketFee": {
          "315": [
            12941,
            12978,
            true
          ],
          "316": [
            13022,
            13049,
            true
          ],
          "317": [
            13101,
            13116,
            true
          ],
          "318": [
            13120,
            13142,
            true
          ],
          "319": [
            13176,
            13198,
            true
          ]
        }
      },
      "38": {
        "BToken.decreaseApproval": {
          "402": [
            4260,
            4274,
            false
          ]
        },
        "BToken.transferFrom": {
          "398": [
            4809,
            4826,
            true
          ],
          "399": [
            4830,
            4864,
            true
          ],
          "400": [
            4956,
            4973,
            false
          ],
          "401": [
            4977,
            5024,
            false
          ]
        },
        "BTokenBase._burn": {
          "404": [
            2309,
            2339,
            true
          ]
        },
        "BTokenBase._move": {
          "403": [
            2650,
            2670,
            true
          ]
        }
      },
      "47": {
        "Address._verifyCallResult": {
          "374": [
            7249,
            7256,
            false
          ],
          "375": [
            7390,
            7411,
            false
          ]
        }
      },
      "62": {
        "SafeERC20._callOptionalReturn": {
          "405": [
            3674,
            3695,
            false
          ],
          "406": [
            3758,
            3788,
            true
          ]
        }
      }
    },
    "statements": {
      "22": {},
      "28": {},
      "30": {},
      "31": {},
      "33": {},
      "35": {
        "BMath.calcInGivenOut": {
          "83": [
            5121,
            5142
          ],
          "84": [
            5259,
            5321
          ],
          "85": [
            5331,
            5424
          ],
          "86": [
            5449,
            5560
          ],
          "87": [
            5577,
            5657
          ],
          "88": [
            5667,
            5771
          ],
          "89": [
            5797,
            5866
          ],
          "90": [
            5892,
            5946
          ]
        },
        "BMath.calcOutGivenIn": {
          "118": [
            3689,
            3782
          ],
          "119": [
            3802,
            3913
          ],
          "120": [
            3933,
            4013
          ],
          "121": [
            4023,
            4127
          ],
          "122": [
            4284,
            4328
          ],
          "123": [
            4494,
            4529
          ],
          "124": [
            4547,
            4662
          ]
        },
        "BMath.calcPoolInGivenSingleOut": {
          "263": [
            8281,
            8340
          ],
          "264": [
            8351,
            8382
          ]
        },
        "BMath.calcPoolOutGivenSingleIn": {
          "246": [
            6481,
            6539
          ],
          "247": [
            6550,
            6581
          ]
        },
        "BMath.calcSingleInGivenPoolOut": {
          "257": [
            7059,
            7121
          ],
          "258": [
            7132,
            7173
          ]
        },
        "BMath.calcSingleOutGivenPoolIn": {
          "219": [
            7412,
            7468
          ],
          "220": [
            7479,
            7510
          ]
        },
        "BMath.calcSpotPrice": {
          "207": [
            3134,
            3174
          ]
        },
        "BMath.getOPCFee": {
          "71": [
            1467,
            1527
          ]
        }
      },
      "36": {
        "BNum.badd": {
          "256": [
            1234,
            1269
          ]
        },
        "BNum.bdiv": {
          "248": [
            2117,
            2148
          ],
          "249": [
            2186,
            2239
          ],
          "250": [
            2298,
            2335
          ]
        },
        "BNum.bfloor": {
          "282": [
            1087,
            1108
          ]
        },
        "BNum.bmul": {
          "221": [
            1835,
            1885
          ],
          "222": [
            1930,
            1967
          ]
        },
        "BNum.bpow": {
          "251": [
            2999,
            3054
          ],
          "252": [
            3064,
            3120
          ],
          "253": [
            3288,
            3303
          ],
          "254": [
            3395,
            3431
          ]
        },
        "BNum.bpowApprox": {
          "288": [
            4116,
            4145
          ],
          "289": [
            4159,
            4182
          ],
          "290": [
            4211,
            4216
          ],
          "291": [
            4241,
            4261
          ],
          "292": [
            4285,
            4305
          ],
          "293": [
            4351,
            4372
          ],
          "294": [
            4411,
            4432
          ],
          "295": [
            3998,
            4001
          ],
          "296": [
            4467,
            4477
          ]
        },
        "BNum.bpowi": {
          "284": [
            2585,
            2591
          ],
          "285": [
            2623,
            2637
          ],
          "286": [
            2686,
            2700
          ],
          "287": [
            2601,
            2607
          ]
        },
        "BNum.bsub": {
          "223": [
            1435,
            1470
          ],
          "224": [
            1480,
            1488
          ]
        },
        "BNum.bsubSign": {
          "275": [
            1626,
            1647
          ],
          "276": [
            1678,
            1698
          ]
        },
        "BNum.btoi": {
          "283": [
            976,
            991
          ]
        }
      },
      "37": {
        "BPool._burnPoolShare": {
          "226": [
            40596,
            40609
          ]
        },
        "BPool._checkBound": {
          "206": [
            8872,
            8919
          ]
        },
        "BPool._initialize": {
          "232": [
            5609,
            5633
          ],
          "233": [
            5643,
            5661
          ],
          "234": [
            5671,
            5693
          ],
          "235": [
            5703,
            5744
          ],
          "236": [
            5754,
            5789
          ],
          "237": [
            5799,
            5823
          ],
          "238": [
            5833,
            5855
          ],
          "239": [
            5865,
            5894
          ],
          "240": [
            5904,
            5933
          ],
          "241": [
            5943,
            5985
          ],
          "242": [
            5995,
            6083
          ],
          "243": [
            6093,
            6111
          ],
          "244": [
            6121,
            6159
          ],
          "245": [
            6169,
            6187
          ]
        },
        "BPool._mintPoolShare": {
          "259": [
            40511,
            40524
          ]
        },
        "BPool._pullPoolShare": {
          "225": [
            40319,
            40338
          ]
        },
        "BPool._pullUnderlying": {
          "261": [
            39785,
            39844
          ],
          "262": [
            39854,
            39977
          ]
        },
        "BPool._pushPoolShare": {
          "260": [
            40422,
            40439
          ]
        },
        "BPool._pushUnderlying": {
          "227": [
            40151,
            40189
          ]
        },
        "BPool.bind": {
          "208": [
            16860,
            16916
          ],
          "209": [
            16926,
            16973
          ],
          "210": [
            16983,
            17023
          ],
          "211": [
            17034,
            17094
          ],
          "212": [
            17105,
            17311
          ],
          "213": [
            17321,
            17340
          ],
          "214": [
            17350,
            17380
          ]
        },
        "BPool.calcPoolInSingleOut": {
          "131": [
            37993,
            38127
          ]
        },
        "BPool.calcPoolOutSingleIn": {
          "81": [
            39225,
            39358
          ]
        },
        "BPool.calcSingleInPoolOut": {
          "205": [
            38620,
            38753
          ]
        },
        "BPool.calcSingleOutPoolIn": {
          "82": [
            37379,
            37513
          ]
        },
        "BPool.collectMarketFee": {
          "95": [
            12335,
            12367
          ],
          "96": [
            12381,
            12536
          ],
          "97": [
            12550,
            12613
          ],
          "98": [
            12257,
            12260
          ]
        },
        "BPool.collectOPC": {
          "134": [
            10127,
            10155
          ],
          "135": [
            10249,
            10306
          ],
          "136": [
            10320,
            10373
          ],
          "137": [
            10053,
            10056
          ]
        },
        "BPool.exitswapPoolAmountIn": {
          "32": [
            34585,
            34625
          ],
          "33": [
            34635,
            34665
          ],
          "34": [
            34741,
            34875
          ],
          "35": [
            34885,
            34941
          ],
          "36": [
            34952,
            35090
          ],
          "37": [
            35101,
            35160
          ],
          "38": [
            35229,
            35306
          ],
          "39": [
            35316,
            35342
          ],
          "40": [
            35800,
            35860
          ],
          "41": [
            35928,
            36081
          ],
          "42": [
            36095,
            36136
          ],
          "43": [
            36209,
            36237
          ],
          "44": [
            36300,
            36360
          ],
          "45": [
            36436,
            36562
          ],
          "46": [
            36576,
            36605
          ],
          "47": [
            36634,
            36674
          ],
          "48": [
            36739,
            36767
          ],
          "49": [
            36822,
            36884
          ],
          "50": [
            36894,
            36915
          ]
        },
        "BPool.finalize": {
          "215": [
            16406,
            16423
          ],
          "216": [
            16433,
            16451
          ],
          "217": [
            16462,
            16494
          ],
          "218": [
            16504,
            16548
          ]
        },
        "BPool.getAmountInExactOut": {
          "196": [
            20674,
            20694
          ],
          "197": [
            20704,
            20725
          ],
          "198": [
            21006,
            21226
          ]
        },
        "BPool.getAmountOutExactIn": {
          "72": [
            22277,
            22297
          ],
          "73": [
            22307,
            22328
          ],
          "74": [
            22604,
            22817
          ],
          "75": [
            22827,
            22963
          ]
        },
        "BPool.getBalance": {
          "203": [
            14693,
            14711
          ],
          "204": [
            14721,
            14751
          ]
        },
        "BPool.getBaseTokenAddress": {
          "7": [
            15738,
            15762
          ]
        },
        "BPool.getController": {
          "3": [
            15328,
            15346
          ]
        },
        "BPool.getCurrentMarketFees": {
          "169": [
            11753,
            11778
          ],
          "170": [
            11792,
            11837
          ],
          "171": [
            11734,
            11737
          ]
        },
        "BPool.getCurrentOPCFees": {
          "140": [
            10993,
            11018
          ],
          "141": [
            11032,
            11073
          ],
          "142": [
            10974,
            10977
          ],
          "143": [
            11093,
            11117
          ]
        },
        "BPool.getDatatokenAddress": {
          "6": [
            15530,
            15554
          ]
        },
        "BPool.getDenormalizedWeight": {
          "129": [
            13695,
            13713
          ],
          "130": [
            13723,
            13752
          ]
        },
        "BPool.getFinalTokens": {
          "138": [
            9649,
            9689
          ],
          "139": [
            9699,
            9713
          ]
        },
        "BPool.getId": {
          "8": [
            4028,
            4036
          ]
        },
        "BPool.getMarketFee": {
          "9": [
            15119,
            15147
          ]
        },
        "BPool.getNormalizedWeight": {
          "201": [
            14313,
            14331
          ],
          "202": [
            14390,
            14423
          ]
        },
        "BPool.getNumTokens": {
          "13": [
            9092,
            9113
          ]
        },
        "BPool.getSpotPrice": {
          "17": [
            19362,
            19382
          ],
          "18": [
            19392,
            19413
          ],
          "19": [
            19531,
            19752
          ]
        },
        "BPool.getSwapFee": {
          "14": [
            14928,
            14943
          ]
        },
        "BPool.getTotalDenormalizedWeight": {
          "128": [
            14006,
            14025
          ]
        },
        "BPool.gulp": {
          "125": [
            40773,
            40820
          ],
          "126": [
            40884,
            40948
          ],
          "127": [
            40958,
            41012
          ]
        },
        "BPool.initialize": {
          "63": [
            4583,
            4631
          ],
          "64": [
            4641,
            4708
          ],
          "65": [
            4718,
            4779
          ],
          "66": [
            4789,
            4835
          ],
          "67": [
            4845,
            4891
          ],
          "68": [
            4901,
            4966
          ],
          "69": [
            4976,
            5022
          ],
          "70": [
            5032,
            5265
          ]
        },
        "BPool.isBound": {
          "2": [
            8775,
            8799
          ]
        },
        "BPool.isFinalized": {
          "11": [
            8563,
            8580
          ]
        },
        "BPool.isInitialized": {
          "5": [
            4113,
            4131
          ]
        },
        "BPool.isPublicSwap": {
          "16": [
            8385,
            8403
          ]
        },
        "BPool.joinswapExternAmountIn": {
          "99": [
            32133,
            32173
          ],
          "100": [
            32183,
            32213
          ],
          "101": [
            32223,
            32358
          ],
          "102": [
            32457,
            32590
          ],
          "103": [
            32601,
            32660
          ],
          "104": [
            32671,
            32727
          ],
          "105": [
            32737,
            32813
          ],
          "106": [
            32823,
            32850
          ],
          "107": [
            33299,
            33346
          ],
          "108": [
            33396,
            33453
          ],
          "109": [
            33467,
            33619
          ],
          "110": [
            33633,
            33663
          ],
          "111": [
            33677,
            33706
          ],
          "112": [
            33720,
            33762
          ],
          "113": [
            33776,
            33835
          ],
          "114": [
            33868,
            33897
          ],
          "115": [
            33907,
            33948
          ],
          "116": [
            33958,
            34019
          ],
          "117": [
            34029,
            34049
          ]
        },
        "BPool.rebind": {
          "265": [
            17715,
            17762
          ],
          "266": [
            17772,
            17819
          ],
          "267": [
            17829,
            17879
          ],
          "268": [
            18025,
            18083
          ],
          "269": [
            18097,
            18162
          ],
          "270": [
            18217,
            18275
          ],
          "271": [
            18295,
            18326
          ],
          "272": [
            18453,
            18486
          ],
          "273": [
            18536,
            18597
          ],
          "274": [
            18807,
            18926
          ]
        },
        "BPool.setSwapFee": {
          "76": [
            16014,
            16070
          ],
          "77": [
            16080,
            16122
          ],
          "78": [
            16132,
            16174
          ],
          "79": [
            16184,
            16202
          ],
          "80": [
            16212,
            16252
          ]
        },
        "BPool.setup": {
          "23": [
            6960,
            7020
          ],
          "24": [
            7030,
            7143
          ],
          "25": [
            7153,
            7266
          ],
          "26": [
            7389,
            7445
          ],
          "27": [
            7455,
            7590
          ],
          "28": [
            7627,
            7683
          ],
          "29": [
            7693,
            7828
          ],
          "30": [
            7858,
            7868
          ],
          "31": [
            7878,
            8102
          ]
        },
        "BPool.swapExactAmountIn": {
          "144": [
            23519,
            23559
          ],
          "145": [
            23569,
            23646
          ],
          "146": [
            23656,
            23688
          ],
          "147": [
            23698,
            23730
          ],
          "148": [
            23889,
            23984
          ],
          "149": [
            23994,
            24061
          ],
          "150": [
            24071,
            24195
          ],
          "151": [
            24421,
            24527
          ],
          "152": [
            24769,
            24962
          ],
          "153": [
            24999,
            25101
          ],
          "154": [
            25111,
            25238
          ],
          "155": [
            25248,
            25395
          ],
          "156": [
            25405,
            25470
          ],
          "157": [
            25481,
            25538
          ],
          "158": [
            25548,
            25607
          ],
          "159": [
            25618,
            25813
          ],
          "160": [
            25824,
            25885
          ],
          "161": [
            25895,
            25962
          ],
          "162": [
            25973,
            26097
          ],
          "163": [
            26108,
            26403
          ],
          "164": [
            26414,
            26485
          ],
          "165": [
            26708,
            26839
          ],
          "166": [
            26853,
            27002
          ],
          "167": [
            27022,
            27086
          ],
          "168": [
            27097,
            27136
          ]
        },
        "BPool.swapExactAmountOut": {
          "172": [
            27760,
            27800
          ],
          "173": [
            27810,
            27887
          ],
          "174": [
            27897,
            27992
          ],
          "175": [
            28002,
            28069
          ],
          "176": [
            28079,
            28111
          ],
          "177": [
            28121,
            28153
          ],
          "178": [
            28313,
            28440
          ],
          "179": [
            28666,
            28772
          ],
          "180": [
            29228,
            29426
          ],
          "181": [
            29436,
            29538
          ],
          "182": [
            29548,
            29675
          ],
          "183": [
            29685,
            29832
          ],
          "184": [
            29842,
            29905
          ],
          "185": [
            29916,
            29971
          ],
          "186": [
            29981,
            30047
          ],
          "187": [
            30058,
            30253
          ],
          "188": [
            30264,
            30325
          ],
          "189": [
            30335,
            30402
          ],
          "190": [
            30412,
            30535
          ],
          "191": [
            30546,
            30839
          ],
          "192": [
            30849,
            30912
          ],
          "193": [
            31119,
            31267
          ],
          "194": [
            31281,
            31462
          ],
          "195": [
            31482,
            31553
          ]
        },
        "BPool.updatePublishMarketFee": {
          "51": [
            12933,
            13004
          ],
          "52": [
            13014,
            13083
          ],
          "53": [
            13093,
            13158
          ],
          "54": [
            13168,
            13214
          ],
          "55": [
            13224,
            13263
          ],
          "56": [
            13273,
            13308
          ],
          "57": [
            13318,
            13406
          ]
        }
      },
      "38": {
        "BToken.allowance": {
          "15": [
            3442,
            3469
          ]
        },
        "BToken.approve": {
          "20": [
            3754,
            3787
          ],
          "21": [
            3797,
            3832
          ],
          "22": [
            3842,
            3853
          ]
        },
        "BToken.balanceOf": {
          "10": [
            3554,
            3575
          ]
        },
        "BToken.decimals": {
          "4": [
            3333,
            3342
          ]
        },
        "BToken.decreaseApproval": {
          "91": [
            4290,
            4321
          ],
          "92": [
            4352,
            4401
          ],
          "93": [
            4421,
            4480
          ],
          "94": [
            4490,
            4501
          ]
        },
        "BToken.increaseApproval": {
          "199": [
            3949,
            4017
          ],
          "200": [
            4027,
            4086
          ]
        },
        "BToken.name": {
          "0": [
            3145,
            3170
          ]
        },
        "BToken.symbol": {
          "12": [
            3249,
            3261
          ]
        },
        "BToken.totalSupply": {
          "1": [
            3648,
            3667
          ]
        },
        "BToken.transfer": {
          "132": [
            4589,
            4616
          ],
          "133": [
            4626,
            4637
          ]
        },
        "BToken.transferFrom": {
          "58": [
            4788,
            4912
          ],
          "59": [
            4922,
            4942
          ],
          "60": [
            5041,
            5109
          ],
          "61": [
            5123,
            5182
          ],
          "62": [
            5202,
            5213
          ]
        },
        "BTokenBase._burn": {
          "278": [
            2288,
            2386
          ],
          "279": [
            2396,
            2456
          ],
          "280": [
            2466,
            2504
          ],
          "281": [
            2514,
            2559
          ]
        },
        "BTokenBase._mint": {
          "298": [
            2068,
            2128
          ],
          "299": [
            2138,
            2176
          ],
          "300": [
            2186,
            2231
          ]
        },
        "BTokenBase._move": {
          "228": [
            2642,
            2695
          ],
          "229": [
            2705,
            2745
          ],
          "230": [
            2755,
            2795
          ],
          "231": [
            2805,
            2833
          ]
        },
        "BTokenBase._pull": {
          "277": [
            3002,
            3033
          ]
        },
        "BTokenBase._push": {
          "301": [
            2902,
            2931
          ]
        }
      },
      "47": {
        "Address._verifyCallResult": {
          "306": [
            7272,
            7289
          ],
          "307": [
            7780,
            7800
          ]
        },
        "Address.functionCall": {
          "303": [
            3723,
            3782
          ]
        },
        "Address.functionCallWithValue": {
          "304": [
            4865,
            4925
          ],
          "305": [
            5080,
            5139
          ]
        }
      },
      "62": {
        "SafeERC20._callOptionalReturn": {
          "297": [
            3750,
            3835
          ]
        },
        "SafeERC20.safeTransfer": {
          "255": [
            752,
            838
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "302": [
            989,
            1085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "BConst",
    "BMath",
    "BNum",
    "BToken",
    "BTokenBase",
    "IERC20",
    "IFactoryRouter",
    "IPool",
    "ISideStaking",
    "SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMapi;:::-;;;;;;;;19181:578:37;;;;;;:::i;:::-;;:::i;:::-;;;1408:25:75;;;1396:2;1381:18;19181:578:37;1262:177:75;3680:180:38;;;;;;:::i;:::-;;:::i;:::-;;;1929:14:75;;1922:22;1904:41;;1892:2;1877:18;3680:180:38;1764:187:75;1279:50:33;;;:::i;6713:1396:37:-;;;;;;:::i;:::-;;:::i;:::-;;34390:2532;;;;;;:::i;:::-;;:::i;3588:86:38:-;3655:12;;3588:86;;1569:52:33;;;:::i;12838:575:37:-;;;;;;:::i;:::-;;:::i;1172:45:33:-;;902:4;1172:45;;4650:570:38;;;;;;:::i;:::-;;:::i;4305:967:37:-;;;;;;:::i;:::-;;:::i;1409:125:35:-;;;:::i;21832:1138:37:-;;;;;;:::i;:::-;;:::i;:::-;;;;5542:25:75;;;5598:2;5583:18;;5576:34;;;;5626:18;;;5619:34;;;;5684:2;5669:18;;5662:34;5727:3;5712:19;;5705:35;5529:3;5514:19;21832:1138:37;5283:463:75;8708:98:37;;;;;;:::i;:::-;-1:-1:-1;;;;;8782:11:37;8759:4;8782:11;;;:8;:11;;;;;:17;;;;8708:98;1249:45:35;;;;;;:::i;:::-;;;;;;;;;;;;;;15261:92:37;15335:11;;;;;-1:-1:-1;;;;;15335:11:37;15261:92;;;-1:-1:-1;;;;;6167:32:75;;;6149:51;;6137:2;6122:18;15261:92:37;6003:203:75;3274:75:38;3340:2;3274:75;;;6383:4:75;6371:17;;;6353:36;;6341:2;6326:18;3274:75:38;6211:184:75;15960:299:37;;;;;;:::i;:::-;;:::i;4049:89::-;4120:11;;-1:-1:-1;;;4120:11:37;;;;4049:89;;39019:377;;;;;;:::i;:::-;;:::i;37170:382::-;;;;;;:::i;:::-;;:::i;15457:104::-;15537:17;;-1:-1:-1;;;;;15537:17:37;15457:104;;15665;15745:17;;-1:-1:-1;;;;;15745:17:37;15665:104;;4690:1263:35;;;;;;:::i;:::-;;:::i;:::-;;;;7863:25:75;;;7919:2;7904:18;;;7897:34;;;;7967:13;;7947:18;;;7940:41;8023:15;;;8017:22;8012:2;7997:18;;;7990:50;;;;8083:15;;;8077:22;8071:3;8056:19;;8049:51;8143:15;8137:22;8131:3;8116:19;;8109:51;7850:3;7835:19;4690:1263:35;7608:558:75;3973:70:37;4035:1;3973:70;;15053:101;15100:7;15126:21;15053:101;;3300:38;;;;;-1:-1:-1;;;;;3300:38:37;;;4120:388:38;;;;;;:::i;:::-;;:::i;3482:100::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3561:14:38;3538:4;3561:14;;;:8;:14;;;;;;;3482:100;1010:51:33;;;:::i;981:33:35:-;;;;;;1302:49;;;;;;:::i;:::-;;;;;;;;;;;;;;12119:511:37;;;:::i;31933:2123::-;;;;;;:::i;:::-;;:::i;1335:52:33:-;;;:::i;3356:1322:35:-;;;;;;:::i;:::-;;:::i;40698:321:37:-;;;;;;:::i;:::-;;:::i;8501:86::-;8570:10;;-1:-1:-1;;;8570:10:37;;;;8501:86;;13879:153;;;:::i;1394:51:33:-;;;:::i;13560:199:37:-;;;;;;:::i;:::-;;:::i;3183:85:38:-;3249:12;;;;;;;;;;;;-1:-1:-1;;;3249:12:38;;;;3183:85;;1683:59:33;;;:::i;37784:379:37:-;;;;;;:::i;:::-;;:::i;4514:130:38:-;;;;;;:::i;:::-;;:::i;9921:469:37:-;;;:::i;961:42:33:-;;1002:1;961:42;;1452:46;;1493:5;1452:46;;1067:50;;;:::i;1504:59::-;;;:::i;9520:200:37:-;;;:::i;:::-;;;;;;;:::i;10614:510::-;;;:::i;:::-;;;;;;;;:::i;23308:3897::-;;;;;;:::i;:::-;;:::i;:::-;;;;10288:25:75;;;10344:2;10329:18;;10322:34;;;;10261:18;23308:3897:37;10114:248:75;11371:517:37;;;:::i;1123:42:33:-;;1164:1;1123:42;;27550:4058:37;;;;;;:::i;:::-;;:::i;20242:1137::-;;;;;;:::i;:::-;;:::i;9244:154::-;;;:::i;9026:94::-;9099:7;:14;9026:94;;14864:86;14935:8;;14864:86;;3866:248:38;;;;;;:::i;:::-;;:::i;3355:121::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3449:15:38;;;3423:7;3449:15;;;:10;:15;;;;;;;;:20;;;;;;;;;;;;;3355:121;1628:49:33;;;:::i;14180:250:37:-;;;;;;:::i;:::-;;:::i;14569:189::-;;;;;;:::i;:::-;;:::i;8322:88::-;8392:11;;-1:-1:-1;;;8392:11:37;;;;8322:88;;38414:377;;;;;;:::i;:::-;;:::i;19181:578::-;3056:6;;19333:17;;3056:6;;3055:7;3047:31;;;;-1:-1:-1;;;3047:31:37;;;;;;;:::i;:::-;;;;;;;;;19362:20:::1;19374:7;19362:11;:20::i;:::-;19392:21;19404:8;19392:11;:21::i;:::-;-1:-1:-1::0;;;;;19449:17:37;;::::1;19423:23;19449:17:::0;;;:8:::1;:17;::::0;;;;;19503:18;;::::1;::::0;;;;19581:16:::1;::::0;;::::1;::::0;19615:15:::1;::::0;;::::1;::::0;19648:17;;::::1;::::0;19683:16;;::::1;::::0;19550:202:::1;::::0;19615:15;19648:17;19717:21;19550:13:::1;:202::i;:::-;19531:221;;;;3088:1;19181:578:::0;;;;;:::o;3680:180:38:-;3765:10;3738:4;3754:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;3754:27:38;;;;;;;;;;:33;;;3802:30;3738:4;;3754:27;;-1:-1:-1;;;;;;;;;;;3802:30:38;;;3784:3;1408:25:75;;1396:2;1381:18;;1262:177;3802:30:38;;;;;;;;-1:-1:-1;3849:4:38;3680:180;;;;;:::o;1279:50:33:-;1320:9;902:4;1327:2;1320:9;:::i;:::-;1279:50;:::o;6713:1396:37:-;2922:6;;;;2921:7;2913:31;;;;-1:-1:-1;;;2913:31:37;;;;;;;:::i;:::-;2954:6;:13;;2963:4;-1:-1:-1;;2954:13:37;;;;;;;;;6982:11;::::1;-1:-1:-1::0;;;;;6982:11:37::1;6968:10;:25;6960:60;;;::::0;-1:-1:-1;;;6960:60:37;;11607:2:75;6960:60:37::1;::::0;::::1;11589:21:75::0;11646:2;11626:18;;;11619:30;-1:-1:-1;;;11665:18:75;;;11658:52;11727:18;;6960:60:37::1;11405:346:75::0;6960:60:37::1;7071:17;::::0;-1:-1:-1;;;;;7051:37:37;;::::1;7071:17:::0;::::1;7051:37;7030:113;;;::::0;-1:-1:-1;;;7030:113:37;;11958:2:75;7030:113:37::1;::::0;::::1;11940:21:75::0;11997:2;11977:18;;;11970:30;12036:31;12016:18;;;12009:59;12085:18;;7030:113:37::1;11756:353:75::0;7030:113:37::1;7194:17;::::0;-1:-1:-1;;;;;7174:37:37;;::::1;7194:17:::0;::::1;7174:37;7153:113;;;::::0;-1:-1:-1;;;7153:113:37;;12316:2:75;7153:113:37::1;::::0;::::1;12298:21:75::0;12355:2;12335:18;;;12328:30;12394:31;12374:18;;;12367:59;12443:18;;7153:113:37::1;12114:353:75::0;7153:113:37::1;7389:56;7394:16;7412:15;7429;7389:4;:56::i;:::-;7460:130;::::0;;10288:25:75;;;7565:15:37::1;10344:2:75::0;10329:18;;10322:34;-1:-1:-1;;;;;7460:130:37;::::1;::::0;7482:10:::1;::::0;-1:-1:-1;;;;;;;;;;;7460:130:37;10261:18:75;7460:130:37::1;;;;;;;7627:56;7632:16;7650:15;7667;7627:4;:56::i;:::-;7698:130;::::0;;10288:25:75;;;7803:15:37::1;10344:2:75::0;10329:18;;10322:34;-1:-1:-1;;;;;7698:130:37;::::1;::::0;7720:10:::1;::::0;-1:-1:-1;;;;;;;;;;;7698:130:37;10261:18:75;7698:130:37::1;;;;;;;7858:10;:8;:10::i;:::-;7883:219;::::0;;12703:25:75;;;12759:2;12744:18;;12737:34;;;12787:18;;;12780:34;;;12845:2;12830:18;;12823:34;;;-1:-1:-1;;;;;7883:219:37;;::::1;::::0;;;::::1;::::0;7906:10:::1;::::0;7883:219:::1;::::0;12690:3:75;12675:19;7883:219:37::1;;;;;;;-1:-1:-1::0;;2988:6:37;:14;;-1:-1:-1;;2988:14:37;;;-1:-1:-1;;;;6713:1396:37:o;34390:2532::-;2922:6;;34511:22;;2922:6;;2921:7;2913:31;;;;-1:-1:-1;;;2913:31:37;;;;;;;:::i;:::-;2954:6;:13;;-1:-1:-1;;2954:13:37;2963:4;2954:13;;;34593:10:::1;::::0;-1:-1:-1;;;34593:10:37;::::1;2954:13:::0;34593:10:::1;34585:40;;;;-1:-1:-1::0;;;34585:40:37::1;;;;;;;:::i;:::-;34647:17;::::0;34635:30:::1;::::0;-1:-1:-1;;;;;34647:17:37::1;34635:11;:30::i;:::-;34712:17;::::0;-1:-1:-1;;;;;34712:17:37::1;34676:24;34703:27:::0;;;:8:::1;:27;::::0;;;;34796:17:::1;::::0;::::1;::::0;34827:12:::1;::::0;34758:117:::1;::::0;34796:17;34853:12;34758:24:::1;:117::i;:::-;34741:134;;34911:12;34893:14;:30;;34885:56;;;;-1:-1:-1::0;;;34885:56:37::1;;;;;;;:::i;:::-;35005:17;::::0;-1:-1:-1;;;;;35005:17:37::1;34996:27;::::0;;;:8:::1;:27;::::0;;;;:35:::1;;::::0;34991:56:::1;::::0;1725:8:33::1;1732:1;902:4;1725:8;:::i;:::-;1724:18;::::0;1737:5:::1;1724:18;:::i;:::-;34991:4:37;:56::i;:::-;34973:14;:74;;34952:138;;;::::0;-1:-1:-1;;;34952:138:37;;14148:2:75;34952:138:37::1;::::0;::::1;14130:21:75::0;14187:2;14167:18;;;14160:30;-1:-1:-1;;;14206:18:75;;;14199:47;14263:18;;34952:138:37::1;13946:341:75::0;34952:138:37::1;35121:39;35126:9;:17;;;35145:14;35121:4;:39::i;:::-;35101:17;::::0;::::1;:59:::0;35255:17:::1;::::0;35234:72:::1;::::0;;10288:25:75;;;35290:15:37::1;10344:2:75::0;10329:18;;10322:34;-1:-1:-1;;;;;35255:17:37;;::::1;::::0;35243:10:::1;::::0;35234:72:::1;::::0;10261:18:75;35234:72:37::1;;;;;;;35321:21;::::0;1408:25:75;;;35321:21:37::1;::::0;1396:2:75;1381:18;35321:21:37::1;;;;;;;35479:10;::::0;35501:17:::1;::::0;35479:54:::1;::::0;-1:-1:-1;;;35479:54:37;;-1:-1:-1;;;;;35501:17:37;;::::1;35479:54;::::0;::::1;14466:51:75::0;14533:18;;;14526:34;;;35479:10:37;::::1;::::0;:21:::1;::::0;14439:18:75;;35479:54:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;35462:1154;;;35596:17;::::0;;-1:-1:-1;;;;;35596:17:37::1;35558:26;35587:27:::0;;;:8:::1;:27;::::0;;;;35692:19;;::::1;::::0;35729:12:::1;::::0;35650:135:::1;::::0;35692:19;35759:12;35650:24:::1;:135::i;:::-;35628:157;;35822:38;35827:11;:19;;;35848:11;35822:4;:38::i;:::-;35800:19;::::0;;::::1;:60:::0;;;;35988:17;35959:11:::1;::::0;35933:148:::1;::::0;;10288:25:75;;;36052:15:37::1;10344:2:75::0;10329:18;;10322:34;-1:-1:-1;;;;;35988:17:37;;::::1;::::0;::::1;35959:11:::0;;::::1;::::0;;::::1;::::0;35933:148:::1;::::0;10261:18:75;35933:148:37::1;;;;;;;36110:11;::::0;36095:41:::1;::::0;36110:11:::1;::::0;::::1;-1:-1:-1::0;;;;;36110:11:37::1;36123:12:::0;36095:14:::1;:41::i;:::-;36209:28;36224:12;36209:14;:28::i;:::-;36316:17;::::0;36335:11:::1;::::0;36300:60:::1;::::0;-1:-1:-1;;;;;36316:17:37;;::::1;::::0;::::1;36335:11:::0;::::1;;36348::::0;36300:15:::1;:60::i;:::-;36436:10;::::0;36472:17:::1;::::0;36436:126:::1;::::0;-1:-1:-1;;;36436:126:37;;-1:-1:-1;;;;;36472:17:37;;::::1;36436:126;::::0;::::1;15023:51:75::0;15090:18;;;15083:34;;;15133:18;;;15126:34;;;36436:10:37;::::1;::::0;:18:::1;::::0;14996::75;;36436:126:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;36581:24;36592:12;36581:24;;;;1408:25:75::0;;1396:2;1381:18;;1262:177;36581:24:37::1;;;;;;;;35544:1072;;35462:1154;36634:40;36649:10;36661:12;36634:14;:40::i;:::-;36739:28;36754:12;36739:14;:28::i;:::-;36838:17;::::0;36822:62:::1;::::0;-1:-1:-1;;;;;36838:17:37::1;36857:10;36869:14:::0;36822:15:::1;:62::i;:::-;36894:21;2988:6:::0;:14;;-1:-1:-1;;2988:14:37;;;34390:2532;;-1:-1:-1;;34390:2532:37:o;1569:52:33:-;1610:11;1617:4;902;1610:11;:::i;12838:575:37:-;12941:23;;-1:-1:-1;;;;;12941:23:37;12968:10;12941:37;12933:71;;;;-1:-1:-1;;;12933:71:37;;15373:2:75;12933:71:37;;;15355:21:75;15412:2;15392:18;;;15385:30;-1:-1:-1;;;15431:18:75;;;15424:51;15492:18;;12933:71:37;15171:345:75;12933:71:37;-1:-1:-1;;;;;13022:27:37;;13014:69;;;;-1:-1:-1;;;13014:69:37;;15723:2:75;13014:69:37;;;15705:21:75;15762:2;15742:18;;;15735:30;15801:31;15781:18;;;15774:59;15850:18;;13014:69:37;15521:353:75;13014:69:37;13101:15;;;:41;;-1:-1:-1;1051:10:33;1058:3;902:4;1051:10;:::i;:::-;13120:11:37;:22;;13101:41;13093:65;;;;-1:-1:-1;;;13093:65:37;;;;;;;:::i;:::-;1108:9:33;1115:2;902:4;1108:9;:::i;:::-;13176:11:37;:22;;13168:46;;;;-1:-1:-1;;;13168:46:37;;;;;;;:::i;:::-;13224:23;:39;;-1:-1:-1;;;;;;13224:39:37;-1:-1:-1;;;;;13224:39:37;;;;;;;;-1:-1:-1;13273:35:37;;;13323:83;;;;;;13347:10;;13224:39;13273:35;;13323:83;:::i;:::-;;;;;;;;12838:575;;:::o;4650:570:38:-;4767:4;4809:10;-1:-1:-1;;;;;4809:17:38;;;;:55;;-1:-1:-1;;;;;;4837:15:38;;;;;;:10;:15;;;;;;;;4853:10;4837:27;;;;;;;;4830:34;;;4809:55;4788:124;;;;-1:-1:-1;;;4788:124:38;;17141:2:75;4788:124:38;;;17123:21:75;17180:2;17160:18;;;17153:30;-1:-1:-1;;;17199:18:75;;;17192:51;17260:18;;4788:124:38;16939:345:75;4788:124:38;4922:20;4928:3;4933;4938;4922:5;:20::i;:::-;4956:10;-1:-1:-1;;;;;4956:17:38;;;;;;:68;;-1:-1:-1;;;;;;4977:15:38;;;;;;:10;:15;;;;;;;;4993:10;4977:27;;;;;;;;-1:-1:-1;;4977:47:38;;4956:68;4952:241;;;-1:-1:-1;;;;;5076:15:38;;;;;;:10;:15;;;;;;;;5092:10;5076:27;;;;;;;;5071:38;;5105:3;5071:4;:38::i;:::-;-1:-1:-1;;;;;5041:15:38;;;;;;:10;:15;;;;;;;;5057:10;5041:27;;;;;;;;;;:68;;;5128:54;1408:25:75;;;5057:10:38;;-1:-1:-1;;;;;;;;;;;5128:54:38;1381:18:75;5128:54:38;;;;;;;4952:241;-1:-1:-1;5209:4:38;4650:570;;;;;:::o;4305:967:37:-;4592:11;;4567:4;;-1:-1:-1;;;4592:11:37;;;;4591:12;4583:48;;;;-1:-1:-1;;;4583:48:37;;17491:2:75;4583:48:37;;;17473:21:75;17530:2;17510:18;;;17503:30;17569:25;17549:18;;;17542:53;17612:18;;4583:48:37;17289:347:75;4583:48:37;-1:-1:-1;;;;;4649:24:37;;4641:67;;;;-1:-1:-1;;;4641:67:37;;17843:2:75;4641:67:37;;;17825:21:75;17882:2;17862:18;;;17855:30;17921:32;17901:18;;;17894:60;17971:18;;4641:67:37;17641:354:75;4641:67:37;-1:-1:-1;;;;;4726:21:37;;4718:61;;;;-1:-1:-1;;;4718:61:37;;18202:2:75;4718:61:37;;;18184:21:75;18241:2;18221:18;;;18214:30;18280:29;18260:18;;;18253:57;18327:18;;4718:61:37;18000:351:75;4718:61:37;1051:10:33;1058:3;902:4;1051:10;:::i;:::-;4797:8:37;;4806:1;4797:11;;;;;;;:::i;:::-;;;;;;;:22;;4789:46;;;;-1:-1:-1;;;4789:46:37;;;;;;;:::i;:::-;1108:9:33;1115:2;902:4;1108:9;:::i;:::-;4853:8:37;;4862:1;4853:11;;;;;;;:::i;:::-;;;;;;;:22;;4845:46;;;;-1:-1:-1;;;4845:46:37;;;;;;;:::i;:::-;4909:8;;4918:1;4909:11;;;;;;;:::i;:::-;;;;;;;4924:1;4909:16;:41;;;-1:-1:-1;1051:10:33;1058:3;902:4;1051:10;:::i;:::-;4929:8:37;;4938:1;4929:11;;;;;;;:::i;:::-;;;;;;;:21;;4909:41;4901:65;;;;-1:-1:-1;;;4901:65:37;;;;;;;:::i;:::-;1108:9:33;1115:2;902:4;1108:9;:::i;:::-;4984:8:37;;4993:1;4984:11;;;;;;;:::i;:::-;;;;;;;:22;;4976:46;;;;-1:-1:-1;;;4976:46:37;;;;;;;:::i;:::-;5051:214;5080:10;5108:7;5133:8;;5051:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5051:214:37;;;;;;;;5159:10;;-1:-1:-1;5187:9:37;;-1:-1:-1;5051:214:37;5214:6;;5051:214;;;;5214:6;;5051:214;5214:6;5051:214;;;;;;;;;-1:-1:-1;;5051:214:37;;;;;;;;;;;-1:-1:-1;5238:13:37;;5051:214;;;;5238:13;;5051:214;5238:13;5051:214;;;;;;;;;-1:-1:-1;5051:11:37;;-1:-1:-1;;5051:214:37:i;:::-;5032:233;4305:967;-1:-1:-1;;;;;;;;;4305:967:37:o;1409:125:35:-;1489:8;;1509:17;;;1474:53;;-1:-1:-1;;;1474:53:35;;-1:-1:-1;;;;;1509:17:35;;;1474:53;;;6149:51:75;;;;1451:4:35;;1489:8;;1474:34;;6122:18:75;;1474:53:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1467:60;;1409:125;:::o;21832:1138:37:-;22075:22;22111:16;22142:19;22176:31;22221;22277:20;22289:7;22277:11;:20::i;:::-;22307:21;22319:8;22307:11;:21::i;:::-;22338:191;;;;;;;;-1:-1:-1;;;;;22377:17:37;;;22338:22;22377:17;;;:8;:17;;;;;;;:25;;;;;22338:191;;22416:24;;;;;22338:191;;;;22454:18;;;;;;;;;;;;:26;;;;22338:191;;;;;;;22494:18;;;;:25;;;22338:191;;;;;22568:25;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22568:25:37;22670:147;22702:4;22724:13;22782:21;22670:14;:147::i;:::-;22850:15;;22876:24;;;;22902:32;;;;22936:26;;;;;22604:213;;-1:-1:-1;22850:15:37;;-1:-1:-1;22876:24:37;-1:-1:-1;22902:32:37;-1:-1:-1;22936:26:37;;-1:-1:-1;;;;;21832:1138:37;;;;;;;;;:::o;15960:299::-;16036:11;;;;;-1:-1:-1;;;;;16036:11:37;16022:10;:25;16014:56;;;;-1:-1:-1;;;16014:56:37;;18879:2:75;16014:56:37;;;18861:21:75;18918:2;18898:18;;;18891:30;-1:-1:-1;;;18937:18:75;;;18930:48;18995:18;;16014:56:37;18677:342:75;16014:56:37;1051:10:33;1058:3;902:4;1051:10;:::i;:::-;16088:7:37;:18;;16080:42;;;;-1:-1:-1;;;16080:42:37;;;;;;;:::i;:::-;1108:9:33;1115:2;902:4;1108:9;:::i;:::-;16140:7:37;:18;;16132:42;;;;-1:-1:-1;;;16132:42:37;;;;;;;:::i;:::-;16184:8;:18;;;16217:35;;;16232:10;14466:51:75;;14548:2;14533:18;;14526:34;;;16217:35:37;;14439:18:75;16217:35:37;;;;;;;15960:299;:::o;39019:377::-;-1:-1:-1;;;;;39197:17:37;;39135:21;39197:17;;;:8;:17;;;;;;;;39172:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39309:12;;39241:117;;39172:42;39335:13;39241:24;:117::i;:::-;39225:133;39019:377;-1:-1:-1;;;;39019:377:37:o;37170:382::-;-1:-1:-1;;;;;37350:18:37;;37286:22;37350:18;;;:8;:18;;;;;;;;37324:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37465:12;;37396:117;;37324:44;37491:12;37396:24;:117::i;4690:1263:35:-;4852:18;4872:25;4899;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:25:35;4940:16;4959:22;4964:4;4969:1;4964:7;;;;4973:4;4978:1;4973:7;;;;;4959:4;:22::i;:::-;4940:41;-1:-1:-1;4991:9:35;5003:29;5008:4;5013:1;5008:7;;;;5017:14;5003:4;:29::i;:::-;4991:41;-1:-1:-1;5042:6:35;5051:19;5056:4;5061:1;5056:7;;;;5065:4;5051;:19::i;:::-;5042:28;;5080:8;5091:20;5096:1;5099:11;5091:4;:20::i;:::-;5080:31;;5127:15;5132:3;902:4:33;5127::35;:15::i;:::-;5121:21;;5152:13;5210:21;;5188;5176:11;:9;:11::i;:::-;5167:8;;:20;;;;:::i;:::-;:42;;;;:::i;:::-;:64;;;;:::i;:::-;5152:79;-1:-1:-1;5275:46:35;5280:18;5285:4;5290:1;5285:7;;;;;5294:3;5280:4;:18::i;:::-;5300:20;902:4:33;5311:8:35;5300:4;:20::i;:::-;5275:4;:46::i;:::-;5259:62;;5359:65;5364:13;5379:44;5384:13;5399:23;902:4:33;5410:11:35;:9;:11::i;:::-;5399:4;:23::i;5359:65::-;5331:9;:24;;:93;;;;;5485:75;5490:13;5505:54;5510:13;5525:33;902:4:33;5536:21:35;;5525:4;:33::i;5485:75::-;5449:9;:32;;:111;;;;;5595:62;5600:13;5615:41;5620:13;5635:20;902:4:33;5646:8:35;;5635:4;:20::i;5595:62::-;5577:80;;5696:75;5701:13;5716:54;5701:13;5736:33;902:4:33;5747:21:35;5736:4;:33::i;5696:75::-;5667:26;;;:104;5820:46;5825:18;5830:4;5835:1;5830:7;;5825:18;5845:20;902:4:33;5856:8:35;;5845:4;:20::i;5820:46::-;5797:69;;5892:54;;;;;4690:1263;;;;;;;:::o;4120:388:38:-;4230:10;4187:4;4219:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;4219:27:38;;;;;;;;;;4260:14;;;4256:156;;;4301:10;4320:1;4290:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;4290:27:38;;;;;;;;;:31;4256:156;;;4382:19;4387:8;4397:3;4382:4;:19::i;:::-;4363:10;4352:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;4352:27:38;;;;;;;;;:49;4256:156;4435:10;4452:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;4426:54:38;;4452:27;;;;;;;;;;;4426:54;;1408:25:75;;;4426:54:38;;4435:10;-1:-1:-1;;;;;;;;;;;4426:54:38;1381:18:75;4426:54:38;;;;;;;-1:-1:-1;4497:4:38;;4120:388;-1:-1:-1;;;4120:388:38:o;1010:51:33:-;1051:10;1058:3;902:4;1051:10;:::i;12119:511:37:-;12166:23;12192:16;:14;:16::i;:::-;12166:42;;12223:9;12218:406;12242:6;:13;12238:1;:17;12218:406;;;12276:14;12293:17;:28;12311:6;12318:1;12311:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12293:28:37;-1:-1:-1;;;;;12293:28:37;;;;;;;;;;;;;12276:45;;12366:1;12335:17;:28;12353:6;12360:1;12353:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12335:28:37;-1:-1:-1;;;;;12335:28:37;;;;;;;;;;;;:32;;;;12386:150;12420:10;12448:23;;;;;;;;;-1:-1:-1;;;;;12448:23:37;12489:6;12496:1;12489:9;;;;;;;;:::i;:::-;;;;;;;12516:6;12386:150;;;;;;;;-1:-1:-1;;;;;19311:15:75;;;19293:34;;19363:15;;;19358:2;19343:18;;19336:43;19415:15;;19410:2;19395:18;;19388:43;19462:2;19447:18;;19440:34;;;;19242:3;19227:19;;19024:456;12386:150:37;;;;;;;;12581:23;;12557:9;;12550:63;;-1:-1:-1;;;;;12581:23:37;;12606:6;;12557;;12564:1;;12557:9;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12550:30:37;;;:63;;;;;:::i;:::-;-1:-1:-1;12257:3:37;;;;:::i;:::-;;;;12218:406;;;;12156:474;12119:511::o;31933:2123::-;2922:6;;32061:21;;2922:6;;2921:7;2913:31;;;;-1:-1:-1;;;2913:31:37;;;;;;;:::i;:::-;2954:6;:13;;-1:-1:-1;;2954:13:37;2963:4;2954:13;;;32141:10:::1;::::0;-1:-1:-1;;;32141:10:37;::::1;2954:13:::0;32141:10:::1;32133:40;;;;-1:-1:-1::0;;;32133:40:37::1;;;;;;;:::i;:::-;32195:17;::::0;32183:30:::1;::::0;-1:-1:-1;;;;;32195:17:37::1;32183:11;:30::i;:::-;32275:17;::::0;-1:-1:-1;;;;;32275:17:37::1;32266:27;::::0;;;:8:::1;:27;::::0;;;;:35:::1;;::::0;32261:55:::1;::::0;1669:8:33::1;1676:1;902:4;1669:8;:::i;32261:55:37:-;32244:13;:72;;32223:135;;;::::0;-1:-1:-1;;;32223:135:37;;19827:2:75;32223:135:37::1;::::0;::::1;19809:21:75::0;19866:2;19846:18;;;19839:30;-1:-1:-1;;;19885:18:75;;;19878:46;19941:18;;32223:135:37::1;19625:340:75::0;32223:135:37::1;32428:17;::::0;-1:-1:-1;;;;;32428:17:37::1;32393:23;32419:27:::0;;;:8:::1;:27;::::0;;;;32511:16:::1;::::0;::::1;::::0;32541:12:::1;::::0;32473:117:::1;::::0;32511:16;32567:13;32473:24:::1;:117::i;:::-;32457:133;;32626:16;32609:13;:33;;32601:59;;;;-1:-1:-1::0;;;32601:59:37::1;;;;;;;:::i;:::-;32690:37;32695:8;:16;;;32713:13;32690:4;:37::i;:::-;32671:16;::::0;::::1;:56:::0;32763:17:::1;::::0;32742:71:::1;::::0;;10288:25:75;;;32797:15:37::1;10344:2:75::0;10329:18;;10322:34;-1:-1:-1;;;;;32763:17:37;;::::1;::::0;32751:10:::1;::::0;-1:-1:-1;;;;;;;;;;;32742:71:37;10261:18:75;32742:71:37::1;;;;;;;32828:22;::::0;1408:25:75;;;32828:22:37::1;::::0;1396:2:75;1381:18;32828:22:37::1;;;;;;;33004:17;::::0;;-1:-1:-1;;;;;33004:17:37::1;32967:25;32995:27:::0;;;:8:::1;:27;::::0;;;;33091:18;;::::1;::::0;33123:12:::1;::::0;33053:119:::1;::::0;33091:18;33149:13;33053:24:::1;:119::i;:::-;33186:10;::::0;33206:17:::1;::::0;33186:50:::1;::::0;-1:-1:-1;;;33186:50:37;;-1:-1:-1;;;;;33206:17:37;;::::1;33186:50;::::0;::::1;14466:51:75::0;14533:18;;;14526:34;;;33032:140:37;;-1:-1:-1;33186:10:37::1;::::0;:19:::1;::::0;14439:18:75;;33186:50:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33182:677;;;33299:10;::::0;33316:17:::1;::::0;33299:47:::1;::::0;-1:-1:-1;;;33299:47:37;;-1:-1:-1;;;;;33316:17:37;;::::1;33299:47;::::0;::::1;14466:51:75::0;14533:18;;;14526:34;;;33299:10:37;::::1;::::0;:16:::1;::::0;14439:18:75;;33299:47:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;33417:36;33422:10;:18;;;33442:10;33417:4;:36::i;:::-;33396:18;::::0;;::::1;:57:::0;;;;33527:17;33498:11:::1;::::0;33472:147:::1;::::0;;10288:25:75;;;33590:15:37::1;10344:2:75::0;10329:18;;10322:34;-1:-1:-1;;;;;33527:17:37;;::::1;::::0;::::1;33498:11:::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;;;;;;;33472:147:37;10261:18:75;33472:147:37::1;;;;;;;33638:25;::::0;1408::75;;;33638::37::1;::::0;1396:2:75;1381:18;33638:25:37::1;;;;;;;33677:29;33692:13;33677:14;:29::i;:::-;33735:11;::::0;33720:42:::1;::::0;33735:11:::1;::::0;::::1;-1:-1:-1::0;;;;;33735:11:37::1;33748:13:::0;33720:14:::1;:42::i;:::-;33792:17;::::0;33811:11:::1;::::0;33776:59:::1;::::0;-1:-1:-1;;;;;33792:17:37;;::::1;::::0;::::1;33811:11:::0;::::1;;33824:10:::0;33776:15:::1;:59::i;:::-;33868:29;33883:13;33868:14;:29::i;:::-;33907:41;33922:10;33934:13;33907:14;:41::i;:::-;33974:17;::::0;33958:61:::1;::::0;-1:-1:-1;;;;;33974:17:37::1;33993:10;34005:13:::0;33958:15:::1;:61::i;:::-;34029:20;;;2988:6:::0;:14;;-1:-1:-1;;2988:14:37;;;31933:2123;;-1:-1:-1;;31933:2123:37:o;1335:52:33:-;1376:11;1383:4;902;1376:11;:::i;3356:1322:35:-;3554:19;3575;3596:25;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3596:25:35;3637:16;3656:22;3661:4;3666:1;3661:7;;;;3670:4;3675:1;3670:7;;3656:22;3637:41;;3717:65;3722:13;3737:44;3742:13;3757:23;902:4:33;3768:11:35;:9;:11::i;3717:65::-;3689:9;:24;;:93;;;;;3838:75;3843:13;3858:54;3863:13;3878:33;902:4:33;3889:21:35;;3878:4;:33::i;3838:75::-;3802:9;:32;;:111;;;;;3951:62;3956:13;3971:41;3976:13;3991:20;902:4:33;4002:8:35;;3991:4;:20::i;3951:62::-;3933:80;;4052:75;4057:13;4072:54;4057:13;4092:33;902:4:33;4103:21:35;4092:4;:33::i;4052:75::-;4023:26;;;:104;4137:13;4173:21;;4195;;4161:11;:9;:11::i;:::-;4152:8;;:20;;;;:::i;:::-;:42;;;;:::i;:::-;:64;;;;:::i;:::-;4137:79;;4227:15;4245:20;902:4:33;4256:8:35;4245:4;:20::i;:::-;4227:38;;4297:31;4302:13;4317:10;4297:4;:31::i;:::-;4362:7;;4284:44;;-1:-1:-1;4348:6:35;;4357:40;;4371:25;4362:7;4284:44;4371:4;:25::i;4357:40::-;4348:49;;4407:8;4418:20;4423:1;4426:11;4418:4;:20::i;:::-;4407:31;;4448:8;4459:15;902:4:33;4470:3:35;4459:4;:15::i;:::-;4448:26;-1:-1:-1;4511:18:35;4516:4;4521:1;4516:7;;;;4525:3;4511:4;:18::i;:::-;4494:35;;4555:14;4571:79;4576:13;4616:9;:32;;;4591:9;:24;;;:57;;;;:::i;4571:79::-;4547:115;;;;;;;;;;3356:1322;;;;;;;:::o;40698:321:37:-;2922:6;;;;2921:7;2913:31;;;;-1:-1:-1;;;2913:31:37;;;;;;;:::i;:::-;2954:6;:13;;-1:-1:-1;;2954:13:37;2963:4;2954:13;;;-1:-1:-1;;;;;40781:15:37;::::1;2954:6:::0;40781:15;;;:8:::1;:15;::::0;;;;:21;2954:13;40781:21:::1;40773:47;;;::::0;-1:-1:-1;;;40773:47:37;;20172:2:75;40773:47:37::1;::::0;::::1;20154:21:75::0;20211:2;20191:18;;;20184:30;-1:-1:-1;;;20230:18:75;;;20223:43;20283:18;;40773:47:37::1;19970:337:75::0;40773:47:37::1;-1:-1:-1::0;;;;;40851:15:37;::::1;40830:18;40851:15:::0;;;:8:::1;:15;::::0;;;;;;:23:::1;;::::0;40910:38;;-1:-1:-1;;;40910:38:37;;40942:4:::1;40910:38;::::0;::::1;6149:51:75::0;40851:23:37;;:15;40910:23:::1;::::0;6122:18:75;;40910:38:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;40884:15:37;::::1;;::::0;;;:8:::1;:15;::::0;;;;;;;;:23:::1;;:64:::0;;;40963:49;;15023:51:75;;;15090:18;;15083:34;;;15133:18;;15126:34;;;;40963:49:37::1;::::0;15011:2:75;14996:18;40963:49:37::1;;;;;;;-1:-1:-1::0;;2988:6:37;:14;;-1:-1:-1;;2988:14:37;;;40698:321::o;13879:153::-;3056:6;;13983:7;;3056:6;;3055:7;3047:31;;;;-1:-1:-1;;;3047:31:37;;;;;;;:::i;:::-;-1:-1:-1;14013:12:37::1;::::0;13879:153;:::o;1394:51:33:-;1435:10;902:4;1442:3;1435:10;:::i;13560:199:37:-;3056:6;;13672:7;;3056:6;;3055:7;3047:31;;;;-1:-1:-1;;;3047:31:37;;;;;;;:::i;:::-;13695:18:::1;13707:5;13695:11;:18::i;:::-;-1:-1:-1::0;;;;;;13730:15:37;::::1;;::::0;;;:8:::1;:15;::::0;;;;:22:::1;;::::0;3088:1:::1;13560:199:::0;;;:::o;1683:59:33:-;1725:8;1732:1;902:4;1725:8;:::i;:::-;1724:18;;1737:5;1724:18;:::i;37784:379:37:-;-1:-1:-1;;;;;37964:18:37;;37902:20;37964:18;;;:8;:18;;;;;;;;37938:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38077:12;;38008:119;;37938:44;38103:14;38008:24;:119::i;4514:130:38:-;4573:4;4589:27;4595:10;4607:3;4612;4589:5;:27::i;:::-;-1:-1:-1;4633:4:38;4514:130;;;;:::o;9921:469:37:-;9962:23;9988:16;:14;:16::i;:::-;9962:42;;10019:9;10014:370;10038:6;:13;10034:1;:17;10014:370;;;10072:14;10089:13;:24;10103:6;10110:1;10103:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10089:24:37;-1:-1:-1;;;;;10089:24:37;;;;;;;;;;;;;10072:41;;10154:1;10127:13;:24;10141:6;10148:1;10141:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10127:24:37;-1:-1:-1;;;;;10127:24:37;;;;;;;;;;;;:28;;;;10169:21;10208:8;;;;;;;;;-1:-1:-1;;;;;10208:8:37;-1:-1:-1;;;;;10193:40:37;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10169:66;;10254:52;10261:10;10273:13;10288:6;10295:1;10288:9;;;;;;;;:::i;:::-;;;;;;;10299:6;10254:52;;;;;;;;-1:-1:-1;;;;;19311:15:75;;;19293:34;;19363:15;;;19358:2;19343:18;;19336:43;19415:15;;19410:2;19395:18;;19388:43;19462:2;19447:18;;19440:34;;;;19242:3;19227:19;;19024:456;10254:52:37;;;;;;;;10320:53;10351:13;10366:6;10327;10334:1;10327:9;;;;;;;;:::i;10320:53::-;10058:326;;10053:3;;;;;:::i;:::-;;;;10014:370;;1067:50:33;1108:9;1115:2;902:4;1108:9;:::i;1504:59::-;1558:5;1546:8;902:4;1546:1;:8;:::i;:::-;1545:18;;;;:::i;9520:200:37:-;3056:6;;9610:23;;3056:6;;3055:7;3047:31;;;;-1:-1:-1;;;3047:31:37;;;;;;;:::i;:::-;9657:10:::1;::::0;-1:-1:-1;;;9657:10:37;::::1;;;9649:40;;;;-1:-1:-1::0;;;9649:40:37::1;;;;;;;:::i;:::-;9706:7;9699:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;9699:14:37::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;9520:200:::0;:::o;10614:510::-;10688:16;10706;10738:27;10768:16;:14;:16::i;:::-;10738:46;;10794:23;10834:10;:17;10820:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10820:32:37;;10794:58;;10862:24;10903:10;:17;10889:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10889:32:37;;10862:59;;10936:9;10931:153;10955:10;:17;10951:1;:21;10931:153;;;11005:10;11016:1;11005:13;;;;;;;;:::i;:::-;;;;;;;10993:6;11000:1;10993:9;;;;;;;;:::i;:::-;;;;;;:25;-1:-1:-1;;;;;10993:25:37;;;-1:-1:-1;;;;;10993:25:37;;;;;11045:13;:28;11059:10;11070:1;11059:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11045:28:37;-1:-1:-1;;;;;11045:28:37;;;;;;;;;;;;;11032:7;11040:1;11032:10;;;;;;;;:::i;:::-;;;;;;;;;;:41;10974:3;;;;:::i;:::-;;;;10931:153;;;-1:-1:-1;11101:6:37;;11109:7;;-1:-1:-1;10614:510:37;-1:-1:-1;;10614:510:37:o;23308:3897::-;2922:6;;23461:22;;;;2922:6;;2921:7;2913:31;;;;-1:-1:-1;;;2913:31:37;;;;;;;:::i;:::-;2954:6;:13;;-1:-1:-1;;2954:13:37;2963:4;2954:13;;;23527:10:::1;::::0;-1:-1:-1;;;23527:10:37;::::1;2954:13:::0;23527:10:::1;23519:40;;;;-1:-1:-1::0;;;23519:40:37::1;;;;;;;:::i;:::-;23600:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;23577:42:37::1;:19;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;-1:-1:-1::0;;;;;23577:42:37::1;;;23569:77;;;::::0;-1:-1:-1;;;23569:77:37;;20900:2:75;23569:77:37::1;::::0;::::1;20882:21:75::0;20939:2;20919:18;;;20912:30;-1:-1:-1;;;20958:18:75;;;20951:52;21020:18;;23569:77:37::1;20698:346:75::0;23569:77:37::1;23656:32;23668:16:::0;23685:1:::1;23668:19;;;;;;;;;;;;:::i;:::-;23656:11;:32::i;:::-;23698;23710:16:::0;23727:1:::1;23710:19;::::0;23698:32:::1;23740:23;23766:8;23740:23:::0;23783:19:::1;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;-1:-1:-1::0;;;;;23766:38:37::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;23766:38:37;;;;-1:-1:-1;23841:8:37::1;-1:-1:-1::0;23858:16:37;23875:1:::1;23858:19;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;23841:38:37::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;23841:38:37;;-1:-1:-1;23897:21:37;;::::1;;:25:::0;;:61:::1;;-1:-1:-1::0;1051:10:33::1;1058:3;902:4;1051:10;:::i;:::-;23926:21:37::0;;::::1;;:32;;23897:61;23889:95;;;::::0;-1:-1:-1;;;23889:95:37;;21251:2:75;23889:95:37::1;::::0;::::1;21233:21:75::0;21290:2;21270:18;;;21263:30;-1:-1:-1;;;21309:18:75;;;21302:52;21371:18;;23889:95:37::1;21049:346:75::0;23889:95:37::1;1108:9:33;1115:2;902:4;1108:9;:::i;:::-;24002:21:37::0;;::::1;;:32;;23994:67;;;::::0;-1:-1:-1;;;23994:67:37;;21602:2:75;23994:67:37::1;::::0;::::1;21584:21:75::0;21641:2;21621:18;;;21614:30;-1:-1:-1;;;21660:18:75;;;21653:53;21723:18;;23994:67:37::1;21400:347:75::0;23994:67:37::1;24122:16;::::0;::::1;::::0;24117:36:::1;::::0;1669:8:33::1;1676:1;902:4;1669:8;:::i;24117:36:37:-;24092:21:::0;::::1;:61;;24071:124;;;::::0;-1:-1:-1;;;24071:124:37;;19827:2:75;24071:124:37::1;::::0;::::1;19809:21:75::0;19866:2;19846:18;;;19839:30;-1:-1:-1;;;19885:18:75;;;19878:46;19941:18;;24071:124:37::1;19625:340:75::0;24071:124:37::1;24206:23;24232:178;24259:8;:16;;;24289:8;:15;;;24318:9;:17;;;24349:9;:16;;;24379:18;24398:1;24379:21;;;;;;;:::i;:::-;;;;;24232:13;:178::i;:::-;24206:204:::0;-1:-1:-1;24461:21:37;;::::1;;24442:40:::0;::::1;;24421:106;;;::::0;-1:-1:-1;;;24421:106:37;;21954:2:75;24421:106:37::1;::::0;::::1;21936:21:75::0;21993:2;21973:18;;;21966:30;-1:-1:-1;;;22012:18:75;;;22005:49;22071:18;;24421:106:37::1;21752:343:75::0;24421:106:37::1;24537:22;24569::::0;:155:::1;;;;;;;;24608:8;:16;;;24569:155;;;;24638:8;:15;;;24569:155;;;;24667:9;:17;;;24569:155;;;;24698:9;:16;;;24569:155;;::::0;::::1;;24734:25;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24734:25:37::1;24815:147;24843:4:::0;24861:21;::::1;24931::::0;;::::1;;24815:14;:147::i;:::-;24769:193:::0;;-1:-1:-1;24769:193:37;-1:-1:-1;24769:193:37;-1:-1:-1;25036:65:37::1;25041:13;:34;25055:16:::0;25041:34;25055:19:::1;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;25041:34:37::1;-1:-1:-1::0;;;;;25041:34:37::1;;;;;;;;;;;;;25076:9;:24;;;25036:4;:65::i;:::-;24999:13;:34;25013:19;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;-1:-1:-1::0;;;;;24999:34:37::1;-1:-1:-1::0;;;;;24999:34:37::1;;;;;;;;;;;;:102;;;;25161:77;25166:17;:38;25184:16;25201:1;25184:19;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;25166:38:37::1;-1:-1:-1::0;;;;;25166:38:37::1;;;;;;;;;;;;;25205:9;:32;;;25161:4;:77::i;:::-;25111:17;:38;25129:19;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;-1:-1:-1::0;;;;;25111:38:37::1;-1:-1:-1::0;;;;;25111:38:37::1;;;;;;;;;;;;:127;;;;25253:142;25263:9;:15;;;25280:9;:24;;;25314:9;:32;;;25347:9;:26;;;25375:16;25392:1;25375:19;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;25253:142;::::0;;22359:25:75;;;22415:2;22400:18;;22393:34;;;;22443:18;;;22436:34;;;;22501:2;22486:18;;22479:34;-1:-1:-1;;;;;22550:32:75;22544:3;22529:19;;22522:61;22346:3;22331:19;25253:142:37::1;;;;;;;25431:21;::::0;::::1;;25413:39:::0;::::1;;25405:65;;;;-1:-1:-1::0;;;25405:65:37::1;;;;;;;:::i;:::-;25500:38;25505:8;:16;;;25523:14;25500:4;:38::i;:::-;25481:8;:16;;:57;;;;25568:39;25573:9;:17;;;25592:14;25568:4;:39::i;:::-;25548:9;:17;;:59;;;;25635:178;25662:8;:16;;;25692:8;:15;;;25721:9;:17;;;25752:9;:16;;;25782:18;25801:1;25782:21;;;;;;;:::i;25635:178::-;25618:195;;25850:15;25832:14;:33;;25824:61;;;;-1:-1:-1::0;;;25824:61:37::1;;;;;;;:::i;:::-;25921:21:::0;;::::1;;25903:39:::0;::::1;;25895:67;;;::::0;-1:-1:-1;;;25895:67:37;;23140:2:75;25895:67:37::1;::::0;::::1;23122:21:75::0;23179:2;23159:18;;;23152:30;-1:-1:-1;;;23198:18:75;;;23191:45;23253:18;;25895:67:37::1;22938:339:75::0;25895:67:37::1;26013:43;26018:21:::0;::::1;26041:14:::0;26013:4:::1;:43::i;:::-;25994:15;:62;;25973:124;;;;-1:-1:-1::0;;;25973:124:37::1;;;;;;;:::i;:::-;26192:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;26113:290:37::1;26159:19;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;26317:16;::::0;;::::1;::::0;26347:17;;::::1;::::0;26113:290:::1;::::0;;26225:21;::::1;23569:25:75::0;;26225:21:37::1;23610:18:75::0;;23603:34;;;26288:15:37::1;23653:18:75::0;;;23646:34;;;;23711:2;23696:18;;23689:34;;;;23754:3;23739:19;;23732:35;23798:3;23783:19;;23776:35;;;-1:-1:-1;;;;;26113:290:37;;;::::1;::::0;26135:10:::1;::::0;26113:290:::1;::::0;23556:3:75;23541:19;26113:290:37::1;;;;;;;26414:71;26430:19;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;26451:10;26463:21:::0;::::1;26414:15;:71::i;:::-;26495:30;26528:125;26546:21:::0;::::1;26581:62;26546:21:::0;26609:33:::1;902:4:33;26546:18:37::0;26639:1:::1;26620:21;;;;;26609:4;:33::i;26528:125::-;26495:158:::0;-1:-1:-1;26667:21:37;;::::1;;:25:::0;26663:350:::1;;26708:131;26766:16:::0;26783:1:::1;26766:19;;;;;;;;;;;;:::i;:::-;26803:22:::0;26715:19:::1;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;-1:-1:-1::0;;;;;26708:40:37::1;::::0;:131;:40:::1;:131::i;:::-;26858:144;26892:19;::::0;;;;;::::1;;:::i;:::-;26929;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;26966:22;26858:144;;;;;;;;:::i;:::-;;;;;;;;26663:350;27022:64;27038:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;27059:10;27071:14;27022:15;:64::i;:::-;27097:39;;;;;;;2988:6:::0;:14;;-1:-1:-1;;2988:14:37;;;23308:3897;;;;-1:-1:-1;23308:3897:37;-1:-1:-1;23308:3897:37:o;11371:517::-;11448:16;11466;11498:27;11528:16;:14;:16::i;:::-;11498:46;;11554:23;11594:10;:17;11580:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11580:32:37;;11554:58;;11622:24;11663:10;:17;11649:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11649:32:37;;11622:59;;11696:9;11691:157;11715:10;:17;11711:1;:21;11691:157;;;11765:10;11776:1;11765:13;;;;;;;;:::i;:::-;;;;;;;11753:6;11760:1;11753:9;;;;;;;;:::i;:::-;;;;;;:25;-1:-1:-1;;;;;11753:25:37;;;-1:-1:-1;;;;;11753:25:37;;;;;11805:17;:32;11823:10;11834:1;11823:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11805:32:37;-1:-1:-1;;;;;11805:32:37;;;;;;;;;;;;;11792:7;11800:1;11792:10;;;;;;;;:::i;:::-;;;;;;;;;;:45;11734:3;;;;:::i;:::-;;;;11691:157;;27550:4058;2922:6;;27703:21;;;;2922:6;;2921:7;2913:31;;;;-1:-1:-1;;;2913:31:37;;;;;;;:::i;:::-;2954:6;:13;;-1:-1:-1;;2954:13:37;2963:4;2954:13;;;27768:10:::1;::::0;-1:-1:-1;;;27768:10:37;::::1;2954:13:::0;27768:10:::1;27760:40;;;;-1:-1:-1::0;;;27760:40:37::1;;;;;;;:::i;:::-;27841:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;27818:42:37::1;:19;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;-1:-1:-1::0;;;;;27818:42:37::1;;;27810:77;;;::::0;-1:-1:-1;;;27810:77:37;;20900:2:75;27810:77:37::1;::::0;::::1;20882:21:75::0;20939:2;20919:18;;;20912:30;-1:-1:-1;;;20958:18:75;;;20951:52;21020:18;;27810:77:37::1;20698:346:75::0;27810:77:37::1;27905:21:::0;;::::1;;:25:::0;;:61:::1;;-1:-1:-1::0;1051:10:33::1;1058:3;902:4;1051:10;:::i;:::-;27934:21:37::0;;::::1;;:32;;27905:61;27897:95;;;::::0;-1:-1:-1;;;27897:95:37;;21251:2:75;27897:95:37::1;::::0;::::1;21233:21:75::0;21290:2;21270:18;;;21263:30;-1:-1:-1;;;21309:18:75;;;21302:52;21371:18;;27897:95:37::1;21049:346:75::0;27897:95:37::1;1108:9:33;1115:2;902:4;1108:9;:::i;:::-;28010:21:37::0;;::::1;;:32;;28002:67;;;::::0;-1:-1:-1;;;28002:67:37;;21602:2:75;28002:67:37::1;::::0;::::1;21584:21:75::0;21641:2;21621:18;;;21614:30;-1:-1:-1;;;21660:18:75;;;21653:53;21723:18;;28002:67:37::1;21400:347:75::0;28002:67:37::1;28079:32;28091:16:::0;28108:1:::1;28091:19;::::0;28079:32:::1;28121;28133:16:::0;28150:1:::1;28133:19;::::0;28121:32:::1;28163:23;28189:8;28163:23:::0;28206:19:::1;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;-1:-1:-1::0;;;;;28189:38:37::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;28189:38:37;;;;-1:-1:-1;28264:8:37::1;-1:-1:-1::0;28281:16:37;28298:1:::1;28281:19;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;28264:38:37::1;-1:-1:-1::0;;;;;28264:38:37::1;;;;;;;;;;;;28237:65;;28359:38;28364:9;:17;;;1732:1:33;902:4;1725:8;;;;:::i;28359:38:37:-;28334:21;::::0;::::1;;:63;;28313:127;;;::::0;-1:-1:-1;;;28313:127:37;;14148:2:75;28313:127:37::1;::::0;::::1;14130:21:75::0;14187:2;14167:18;;;14160:30;-1:-1:-1;;;14206:18:75;;;14199:47;14263:18;;28313:127:37::1;13946:341:75::0;28313:127:37::1;28451:23;28477:178;28504:8;:16;;;28534:8;:15;;;28563:9;:17;;;28594:9;:16;;;28624:18;28643:1;28624:21;;;;;;;:::i;28477:178::-;28451:204:::0;-1:-1:-1;28706:21:37;;::::1;;28687:40:::0;::::1;;28666:106;;;::::0;-1:-1:-1;;;28666:106:37;;21954:2:75;28666:106:37::1;::::0;::::1;21936:21:75::0;21993:2;21973:18;;;21966:30;-1:-1:-1;;;22012:18:75;;;22005:49;22071:18;;28666:106:37::1;21752:343:75::0;28666:106:37::1;28998:20;29028:22:::0;:155:::1;;;;;;;;29067:8;:16;;;29028:155;;;;29097:8;:15;;;29028:155;;;;29126:9;:17;;;29028:155;;;;29157:9;:16;;;29028:155;;::::0;::::1;;29193:25;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29193:25:37::1;29279:147;29307:4:::0;29325:21:::1;::::0;::::1;;29395::::0;;::::1;;29279:14;:147::i;:::-;29228:198:::0;;-1:-1:-1;29228:198:37;-1:-1:-1;29228:198:37;-1:-1:-1;29473:65:37::1;29478:13;:34;29492:16:::0;29478:34;29492:19:::1;::::0;29473:65:::1;29436:13;:34;29450:19;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;-1:-1:-1::0;;;;;29436:34:37::1;-1:-1:-1::0;;;;;29436:34:37::1;;;;;;;;;;;;:102;;;;29598:77;29603:17;:38;29621:16;29638:1;29621:19;;;;;;;:::i;29598:77::-;29548:17;:38;29566:19;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;-1:-1:-1::0;;;;;29548:38:37::1;-1:-1:-1::0;;;;;29548:38:37::1;;;;;;;;;;;;:127;;;;29690:142;29700:9;:15;;;29717:9;:24;;;29751:9;:32;;;29784:9;:26;;;29812:16;29829:1;29812:19;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;29690:142;::::0;;22359:25:75;;;22415:2;22400:18;;22393:34;;;;22443:18;;;22436:34;;;;22501:2;22486:18;;22479:34;-1:-1:-1;;;;;22550:32:75;22544:3;22529:19;;22522:61;22346:3;22331:19;29690:142:37::1;;;;;;;29867:21:::0;::::1;29850:38:::0;::::1;;29842:63;;;::::0;-1:-1:-1;;;29842:63:37;;24024:2:75;29842:63:37::1;::::0;::::1;24006:21:75::0;24063:2;24043:18;;;24036:30;-1:-1:-1;;;24082:18:75;;;24075:42;24134:18;;29842:63:37::1;23822:336:75::0;29842:63:37::1;29935:36;29940:8;:16;;;29958:12;29935:4;:36::i;:::-;29916:16;::::0;;::::1;:55:::0;;;;30006:17;::::1;::::0;30001:46:::1;::::0;30025:18;30044:1:::1;30025:21;::::0;30001:46:::1;29981:9;:17;;:66;;;;30075:178;30102:8;:16;;;30132:8;:15;;;30161:9;:17;;;30192:9;:16;;;30222:18;30241:1;30222:21;;;;;;;:::i;30075:178::-;30058:195;;30290:15;30272:14;:33;;30264:61;;;;-1:-1:-1::0;;;30264:61:37::1;;;;;;;:::i;:::-;30361:21:::0;;::::1;;30343:39:::0;::::1;;30335:67;;;::::0;-1:-1:-1;;;30335:67:37;;23140:2:75;30335:67:37::1;::::0;::::1;23122:21:75::0;23179:2;23159:18;;;23152:30;-1:-1:-1;;;23198:18:75;;;23191:45;23253:18;;30335:67:37::1;22938:339:75::0;30335:67:37::1;30452:42;30457:13:::0;30472:21:::1;::::0;::::1;;30452:4;:42::i;:::-;30433:15;:61;;30412:123;;;;-1:-1:-1::0;;;30412:123:37::1;;;;;;;:::i;:::-;30630:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;30551:288:37::1;30597:19;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;-1:-1:-1::0;;;;;30551:288:37::1;30573:10;30551:288;30663:13:::0;30690:18;30709:1:::1;30690:21;;;;30725:15;30754:8;:16;;;30784:9;:17;;;30815:14;30551:288;;;;;;;;;;23569:25:75::0;;;23625:2;23610:18;;23603:34;;;;23668:2;23653:18;;23646:34;;;;23711:2;23696:18;;23689:34;23754:3;23739:19;;23732:35;23798:3;23783:19;;23776:35;23556:3;23541:19;;23282:535;30551:288:37::1;;;;;;;;30849:63;30865:19;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;30886:10;30898:13;30849:15;:63::i;:::-;30922:30;30955:109;30973:13:::0;31000:54:::1;30973:13:::0;31020:33:::1;902:4:33;31031:18:37::0;31050:1:::1;31031:21;::::0;30955:109:::1;30922:142:::0;-1:-1:-1;31078:21:37;;::::1;;:25:::0;31074:399:::1;;31119:148;31177:16:::0;31194:1:::1;31177:19;::::0;31119:148:::1;31286:176;31320:19;::::0;;;;;::::1;;:::i;:::-;31380;;::::0;::::1;:16:::0;:19:::1;:::i;:::-;31426:22;31286:176;;;;;;;;:::i;:::-;;;;;;;;31074:399;31482:71;31498:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;31519:10;31531:21;::::0;::::1;;31482:15;:71::i;20242:1137::-:0;20485:21;20508:16;20539:19;20573:31;20618;20674:20;20686:7;20674:11;:20::i;:::-;20704:21;20716:8;20704:11;:21::i;:::-;20735:191;;;;;;;;-1:-1:-1;;;;;20774:17:37;;;20735:22;20774:17;;;:8;:17;;;;;;;:25;;;;;20735:191;;20813:24;;;;;20735:191;;;;20851:18;;;;;;;;;;;;:26;;;;20735:191;;;;;;;20891:18;;;;:25;;;20735:191;;;;;20971:25;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20971:25:37;21077:149;21109:4;21131:14;21191:21;21077:14;:149::i;9244:154::-;3056:6;;9338:23;;3056:6;;3055:7;3047:31;;;;-1:-1:-1;;;3047:31:37;;;;;;;:::i;3866:248:38:-;3995:10;3933:4;3984:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;3984:27:38;;;;;;;;;;3979:38;;4013:3;3979:4;:38::i;:::-;3960:10;3949:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;3949:27:38;;;;;;;;;;;;:68;;;4032:54;1408:25:75;;;3949:27:38;;-1:-1:-1;;;;;;;;;;;4032:54:38;1381:18:75;4032:54:38;1262:177:75;1628:49:33;1669:8;1676:1;902:4;1669:8;:::i;14180:250:37:-;3056:6;;14290:7;;3056:6;;3055:7;3047:31;;;;-1:-1:-1;;;3047:31:37;;;;;;;:::i;:::-;14313:18:::1;14325:5;14313:11;:18::i;:::-;-1:-1:-1::0;;;;;14358:15:37;::::1;14341:14;14358:15:::0;;;:8:::1;:15;::::0;;;;:22:::1;;::::0;14410:12:::1;::::0;14397:26:::1;::::0;14358:22;;14397:4:::1;:26::i;14569:189::-:0;3056:6;;14670:7;;3056:6;;3055:7;3047:31;;;;-1:-1:-1;;;3047:31:37;;;;;;;:::i;:::-;14693:18:::1;14705:5;14693:11;:18::i;:::-;-1:-1:-1::0;;;;;;14728:15:37::1;;::::0;;;:8:::1;:15;::::0;;;;:23:::1;;::::0;;14569:189::o;38414:377::-;-1:-1:-1;;;;;38592:17:37;;38530:21;38592:17;;;:8;:17;;;;;;;;38567:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38704:12;;38636:117;;38567:42;38730:13;38636:24;:117::i;8812:114::-;-1:-1:-1;;;;;8880:15:37;;;;;;:8;:15;;;;;:21;;;8872:47;;;;-1:-1:-1;;;8872:47:37;;20172:2:75;8872:47:37;;;20154:21:75;20211:2;20191:18;;;20184:30;-1:-1:-1;;;20230:18:75;;;20223:43;20283:18;;8872:47:37;19970:337:75;8872:47:37;8812:114;:::o;2600:581:35:-;2813:14;2864:10;2877:35;2882:14;2898:13;2877:4;:35::i;:::-;2864:48;;2922:10;2935:37;2940:15;2957:14;2935:4;:37::i;:::-;2922:50;;2982:10;2995:18;3000:5;3007;2995:4;:18::i;:::-;2982:31;;3023:10;3036:81;902:4:33;3047:69:35;902:4:33;3101:14:35;3079:21;;3067:11;:9;:11::i;:::-;3058:8;;:20;;;;:::i;:::-;:42;;;;:::i;:::-;:57;;;;:::i;3036:81::-;3023:94;;3155:18;3160:5;3167;3155:4;:18::i;:::-;3143:30;2600:581;-1:-1:-1;;;;;;;;;;2600:581:35:o;16749:638:37:-;16882:11;;;;;-1:-1:-1;;;;;16882:11:37;16868:10;:25;16860:56;;;;-1:-1:-1;;;16860:56:37;;18879:2:75;16860:56:37;;;18861:21:75;18918:2;18898:18;;;18891:30;-1:-1:-1;;;18937:18:75;;;18930:48;18995:18;;16860:56:37;18677:342:75;16860:56:37;-1:-1:-1;;;;;16935:15:37;;;;;;:8;:15;;;;;:21;;;16934:22;16926:47;;;;-1:-1:-1;;;16926:47:37;;24365:2:75;16926:47:37;;;24347:21:75;24404:2;24384:18;;;24377:30;-1:-1:-1;;;24423:18:75;;;24416:42;24475:18;;16926:47:37;24163:336:75;16926:47:37;16992:10;;-1:-1:-1;;;16992:10:37;;;;16991:11;16983:40;;;;-1:-1:-1;;;16983:40:37;;24706:2:75;16983:40:37;;;24688:21:75;24745:2;24725:18;;;24718:30;-1:-1:-1;;;24764:18:75;;;24757:46;24820:18;;16983:40:37;24504:340:75;16983:40:37;17042:7;:14;1002:1:33;-1:-1:-1;17034:60:37;;;;-1:-1:-1;;;17034:60:37;;25051:2:75;17034:60:37;;;25033:21:75;25090:2;25070:18;;;25063:30;-1:-1:-1;;;25109:18:75;;;25102:44;25163:18;;17034:60:37;24849:338:75;17034:60:37;17123:188;;;;;;;;17151:4;17123:188;;;17176:7;:14;;17123:188;;;;;;;-1:-1:-1;17123:188:37;;;;;;;;;;;;-1:-1:-1;;;;;17105:15:37;;;;;:8;:15;;;;;;:206;;;;-1:-1:-1;;17105:206:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17321:19;;;;;;;;;;;;;;-1:-1:-1;;;;;;17321:19:37;;;;;;17350:30;17105:15;17364:7;17373:6;17350;:30::i;:::-;16749:638;;;:::o;16367:188::-;16406:10;:17;;-1:-1:-1;;;;16406:17:37;-1:-1:-1;;;16406:17:37;;;16433:11;:18;;-1:-1:-1;;;;16433:18:37;-1:-1:-1;;;16433:18:37;;;16462:32;1435:10:33;902:4;1442:3;1435:10;:::i;:::-;16462:14:37;:32::i;:::-;16504:44;16519:10;1435::33;902:4;1442:3;1435:10;:::i;:::-;16504:14:37;:44::i;:::-;16367:188::o;7220:570:35:-;7377:19;7436:1;7420:12;:17;;7412:56;;;;-1:-1:-1;;;7412:56:35;;25394:2:75;7412:56:35;;;25376:21:75;25433:2;25413:18;;;25406:30;25472:28;25452:18;;;25445:56;25518:18;;7412:56:35;25192:350:75;7412:56:35;7494:16;:12;7509:1;7494:16;:::i;:::-;7479:31;;7520:18;7541:30;7546:10;7558:12;7541:4;:30::i;:::-;7520:51;;7581:14;7598:31;7603:13;7618:10;7598:4;:31::i;:::-;7581:48;;7639:18;7660:20;902:4:33;7670:9:35;7660:4;:20::i;:::-;7639:41;;7690:23;7716:32;7721:13;7736:11;7716:4;:32::i;:::-;7690:58;7220:570;-1:-1:-1;;;;;;;;7220:570:35:o;1721:301:36:-;1790:4;;1820:5;1824:1;1820;:5;:::i;:::-;1810:15;-1:-1:-1;1843:6:36;;;:21;;-1:-1:-1;1863:1:36;1853:6;1858:1;1853:2;:6;:::i;:::-;:11;1843:21;1835:50;;;;-1:-1:-1;;;1835:50:36;;25749:2:75;1835:50:36;;;25731:21:75;25788:2;25768:18;;;25761:30;-1:-1:-1;;;25807:18:75;;;25800:46;25863:18;;1835:50:36;25547:340:75;1835:50:36;1895:7;1911:8;1918:1;902:4:33;1911:8:36;:::i;:::-;1905:15;;:2;:15;:::i;:::-;1895:25;;1944:2;1938;:8;;1930:37;;;;-1:-1:-1;;;1930:37:36;;25749:2:75;1930:37:36;;;25731:21:75;25788:2;25768:18;;;25761:30;-1:-1:-1;;;25807:18:75;;;25800:46;25863:18;;1930:37:36;25547:340:75;1930:37:36;1977:7;1987:9;902:4:33;1987:2:36;:9;:::i;:::-;1977:19;1721:301;-1:-1:-1;;;;;;1721:301:36:o;1300:195::-;1369:4;1390:6;1398:9;1411:14;1420:1;1423;1411:8;:14::i;:::-;1389:36;;;;1444:4;1443:5;1435:35;;;;-1:-1:-1;;;1435:35:36;;26094:2:75;1435:35:36;;;26076:21:75;26133:2;26113:18;;;26106:30;-1:-1:-1;;;26152:18:75;;;26145:47;26209:18;;1435:35:36;25892:341:75;1435:35:36;-1:-1:-1;1487:1:36;1300:195;-1:-1:-1;;;1300:195:36:o;40246:99:37:-;40319:19;40325:4;40331:6;40319:5;:19::i;40537:79::-;40596:13;40602:6;40596:5;:13::i;40034:206::-;40151:38;-1:-1:-1;;;;;40151:26:37;;40178:2;40182:6;40151:26;:38::i;2572:268:38:-;-1:-1:-1;;;;;2650:13:38;;;;;;:8;:13;;;;;;:20;-1:-1:-1;2650:20:38;2642:53;;;;-1:-1:-1;;;2642:53:38;;26440:2:75;2642:53:38;;;26422:21:75;26479:2;26459:18;;;26452:30;-1:-1:-1;;;26498:18:75;;;26491:50;26558:18;;2642:53:38;26238:344:75;2642:53:38;-1:-1:-1;;;;;2726:13:38;;;;;;:8;:13;;;;;;2721:24;;2741:3;2721:4;:24::i;:::-;-1:-1:-1;;;;;2705:13:38;;;;;;;:8;:13;;;;;;:40;;;;2776:13;;;;;;;2771:24;;2791:3;2771:4;:24::i;:::-;-1:-1:-1;;;;;2755:13:38;;;;;;;:8;:13;;;;;;;:40;;;;2810:23;;;;;;;;;;2829:3;1408:25:75;;1396:2;1381:18;;1262:177;2810:23:38;;;;;;;;2572:268;;;:::o;5337:857:37:-;5609:11;:24;;-1:-1:-1;;;;;;5609:24:37;;-1:-1:-1;;;;;5609:24:37;;;;;;;;;;;;;;5643:8;:18;;-1:-1:-1;;;;;;5643:18:37;;;;;;;;;;5682:11;;-1:-1:-1;;5682:11:37;;-1:-1:-1;;5682:11:37;;;;:::i;:::-;;;;;;;;;;;;5671:8;:22;;;5708:36;;;5723:10;14466:51:75;;14533:18;;;14526:34;;;;5708:36:37;;14439:18:75;5708:36:37;;;;;;;5778:8;5787:1;5778:11;;;;;;;;:::i;:::-;;;;;;;;;;;;5754:21;:35;;;5799:11;:24;;;;;-1:-1:-1;;;5799:24:37;-1:-1:-1;;;;5799:24:37;;;;;;5833:10;:22;;5885:9;;5865:17;:29;;-1:-1:-1;;;;;5865:29:37;;;-1:-1:-1;;;;;;5865:29:37;;;;;;;5924:9;;;;5904:17;:29;;;;;;;;;;;;;;5969:16;;5943:42;5833:22;;;-1:-1:-1;;;5833:22:37;5943:42;;;;-1:-1:-1;;;;;;5943:42:37;;;;;;;;6000:83;;;;;;6024:10;;6000:83;:::i;:::-;;;;;;;;-1:-1:-1;;6093:11:37;:18;;6147:11;;-1:-1:-1;;;6093:18:37;6147:11;;;-1:-1:-1;;;;;6147:11:37;-1:-1:-1;;;;;;6121:38:37;;;;;;;;;;;;;6093:18;6176:11;;;;5337:857;-1:-1:-1;;;;;;5337:857:37:o;5959:659:35:-;6128:18;6162:26;6191:25;6196:13;902:4:33;6191::35;:25::i;:::-;6162:54;;6226:22;6251:43;6256:14;6272:21;6251:4;:43::i;:::-;6226:68;;6304:17;6324:39;6329:17;6348:14;6324:4;:39::i;:::-;6304:59;;6373:14;6390:23;6395:12;902:4:33;6390::35;:23::i;:::-;6373:40;;6423:18;6444:27;6449:9;6460:10;6444:4;:27::i;:::-;6423:48;;6506:1;6489:13;:18;;6481:58;;;;-1:-1:-1;;;6481:58:35;;26789:2:75;6481:58:35;;;26771:21:75;26828:2;26808:18;;;26801:30;26867:29;26847:18;;;26840:57;26914:18;;6481:58:35;26587:351:75;6481:58:35;6566:15;6580:1;6566:13;:15;:::i;2028:376:36:-;2097:4;2125:6;2117:31;;;;-1:-1:-1;;;2117:31:36;;27145:2:75;2117:31:36;;;27127:21:75;27184:2;27164:18;;;27157:30;-1:-1:-1;;;27203:18:75;;;27196:42;27255:18;;2117:31:36;26943:336:75;2117:31:36;2158:7;2168:8;902:4:33;2168:1:36;:8;:::i;:::-;2158:18;-1:-1:-1;2194:6:36;;;:24;;-1:-1:-1;902:4:33;2204:6:36;2209:1;2204:2;:6;:::i;:::-;:14;2194:24;2186:53;;;;-1:-1:-1;;;2186:53:36;;27486:2:75;2186:53:36;;;27468:21:75;27525:2;27505:18;;;27498:30;-1:-1:-1;;;27544:18:75;;;27537:46;27600:18;;2186:53:36;27284:340:75;2186:53:36;2266:7;2282:5;2286:1;2282;:5;:::i;:::-;2276:12;;:2;:12;:::i;:::-;2266:22;;2312:2;2306;:8;;2298:37;;;;-1:-1:-1;;;2298:37:36;;27486:2:75;2298:37:36;;;27468:21:75;27525:2;27505:18;;;27498:30;-1:-1:-1;;;27544:18:75;;;27537:46;27600:18;;2298:37:36;27284:340:75;2298:37:36;2362:7;2372:6;2377:1;2372:2;:6;:::i;2905:533::-;2979:4;1493:5:33;3007:4:36;:21;;2999:55;;;;-1:-1:-1;;;2999:55:36;;27831:2:75;2999:55:36;;;27813:21:75;27870:2;27850:18;;;27843:30;-1:-1:-1;;;27889:18:75;;;27882:51;27950:18;;2999:55:36;27629:345:75;2999:55:36;1558:5:33;1546:8;902:4;1546:1;:8;:::i;:::-;1545:18;;;;:::i;:::-;3072:4:36;:21;;3064:56;;;;-1:-1:-1;;;3064:56:36;;28181:2:75;3064:56:36;;;28163:21:75;28220:2;28200:18;;;28193:30;-1:-1:-1;;;28239:18:75;;;28232:52;28301:18;;3064:56:36;27979:346:75;3064:56:36;3131:10;3144:11;3151:3;3144:6;:11::i;:::-;3131:24;;3165:11;3179:16;3184:3;3189:5;3179:4;:16::i;:::-;3165:30;;3206:13;3222:24;3228:4;3234:11;3239:5;3234:4;:11::i;:::-;3222:5;:24::i;:::-;3206:40;-1:-1:-1;3261:11:36;3257:57;;3295:8;-1:-1:-1;3288:15:36;;-1:-1:-1;;3288:15:36;3257:57;3324:18;3345:40;3356:4;3362:6;1610:11:33;1617:4;902;1610:11;:::i;:::-;3345:10:36;:40::i;:::-;3324:61;;3402:29;3407:8;3417:13;3402:4;:29::i;:::-;3395:36;2905:533;-1:-1:-1;;;;;;;2905:533:36:o;640:205:62:-;779:58;;-1:-1:-1;;;;;14484:32:75;;779:58:62;;;14466:51:75;14533:18;;;14526:34;;;752:86:62;;772:5;;-1:-1:-1;;;802:23:62;14439:18:75;;779:58:62;;;;-1:-1:-1;;779:58:62;;;;;;;;;;;;;;-1:-1:-1;;;;;779:58:62;-1:-1:-1;;;;;;779:58:62;;;;;;;;;;752:19;:86::i;1121:173:36:-;1190:4;;1219:5;1223:1;1219;:5;:::i;:::-;1210:14;;1247:1;1242;:6;;1234:35;;;;-1:-1:-1;;;1234:35:36;;28532:2:75;1234:35:36;;;28514:21:75;28571:2;28551:18;;;28544:30;-1:-1:-1;;;28590:18:75;;;28583:46;28646:18;;1234:35:36;28330:340:75;6624:590:35;6785:18;6819;6840:31;6845:10;6857:13;6840:4;:31::i;:::-;6819:52;;6881:14;6898:31;6903:13;6918:10;6898:4;:31::i;:::-;6881:48;;6939:17;6959:21;6964:9;902:4:33;6959::35;:21::i;:::-;6939:41;;6990:22;7015:34;7020:12;7034:14;7015:4;:34::i;:::-;6990:59;;7088:1;7067:17;:22;;7059:62;;;;-1:-1:-1;;;7059:62:35;;28877:2:75;7059:62:35;;;28859:21:75;28916:2;28896:18;;;28889:30;28955:29;28935:18;;;28928:57;29002:18;;7059:62:35;28675:351:75;7059:62:35;7152:21;:17;7172:1;7152:21;:::i;40452:79:37:-;40511:13;40517:6;40511:5;:13::i;40351:95::-;40422:17;40428:2;40432:6;40422:5;:17::i;39594:434::-;39737:38;;-1:-1:-1;;;39737:38:37;;39769:4;39737:38;;;6149:51:75;39713:21:37;;-1:-1:-1;;;;;39737:23:37;;;;;6122:18:75;;39737:38:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39713:62;-1:-1:-1;39785:59:37;-1:-1:-1;;;;;39785:30:37;;39816:4;39830;39837:6;39785:30;:59::i;:::-;39904:22;39920:6;39904:13;:22;:::i;:::-;39862:38;;-1:-1:-1;;;39862:38:37;;39894:4;39862:38;;;6149:51:75;-1:-1:-1;;;;;39862:23:37;;;;;6122:18:75;;39862:38:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;39854:123;;;;-1:-1:-1;;;39854:123:37;;29233:2:75;39854:123:37;;;29215:21:75;29272:2;29252:18;;;29245:30;29311:28;29291:18;;;29284:56;29357:18;;39854:123:37;29031:350:75;39854:123:37;39703:325;39594:434;;;:::o;7796:623:35:-;7959:17;7992:23;8018:72;8036:15;8066:14;8018:4;:72::i;:::-;7992:98;;8100:18;8121:41;8126:18;8146:15;8121:4;:41::i;:::-;8100:62;;8172:14;8189:24;902:4:33;8199:13:35;8189:4;:24::i;:::-;8172:41;;8223:18;8244:27;8249:9;8260:10;8244:4;:27::i;:::-;8223:48;;8306:1;8289:13;:18;;8281:59;;;;-1:-1:-1;;;8281:59:35;;29588:2:75;8281:59:35;;;29570:21:75;29627:2;29607:18;;;29600:30;29666;29646:18;;;29639:58;29714:18;;8281:59:35;29386:352:75;8281:59:35;8367:15;8381:1;8367:13;:15;:::i;17602:1341:37:-;902:4:33;17723:6:37;:20;;17715:47;;;;-1:-1:-1;;;17715:47:37;;29945:2:75;17715:47:37;;;29927:21:75;29984:2;29964:18;;;29957:30;-1:-1:-1;;;30003:18:75;;;29996:44;30057:18;;17715:47:37;29743:338:75;17715:47:37;1264:9:33;902:4;1271:2;1264:9;:::i;:::-;17780:6:37;:20;;17772:47;;;;-1:-1:-1;;;17772:47:37;;30288:2:75;17772:47:37;;;30270:21:75;30327:2;30307:18;;;30300:30;-1:-1:-1;;;30346:18:75;;;30339:44;30400:18;;17772:47:37;30086:338:75;17772:47:37;1376:11:33;1383:4;902;1376:11;:::i;:::-;17837:7:37;:22;;17829:50;;;;-1:-1:-1;;;17829:50:37;;30631:2:75;17829:50:37;;;30613:21:75;30670:2;30650:18;;;30643:30;-1:-1:-1;;;30689:18:75;;;30682:45;30744:18;;17829:50:37;30429:339:75;17829:50:37;-1:-1:-1;;;;;17955:15:37;;17935:17;17955:15;;;:8;:15;;;;;:22;;;17991:18;;;17987:299;;;18040:43;18045:12;;18059:23;18064:6;18072:9;18059:4;:23::i;:::-;18040:4;:43::i;:::-;18025:12;:58;1320:9:33;902:4;1327:2;1320:9;:::i;:::-;18105:12:37;;:32;;18097:65;;;;-1:-1:-1;;;18097:65:37;;30975:2:75;18097:65:37;;;30957:21:75;31014:2;30994:18;;;30987:30;-1:-1:-1;;;31033:18:75;;;31026:50;31093:18;;18097:65:37;30773:344:75;18097:65:37;17987:299;;;18192:9;18183:6;:18;18179:107;;;18232:43;18237:12;;18251:23;18256:9;18267:6;18251:4;:23::i;18232:43::-;18217:12;:58;18179:107;-1:-1:-1;;;;;18295:15:37;;;;;;:8;:15;;;;;:22;;;:31;;;18420:23;;;;18453:33;;;;18500:20;;;18496:441;;;18536:61;18552:5;18559:10;18571:25;18576:7;18585:10;18571:4;:25::i;:::-;18536:15;:61::i;:::-;18496:441;;;18628:10;18618:7;:20;18614:323;;;18736:29;18768:25;18773:10;18785:7;18768:4;:25::i;:::-;18736:57;;18807:119;18840:5;18863:10;18891:21;18807:15;:119::i;:::-;18640:297;18614:323;17705:1238;;17602:1341;;;:::o;1501:214:36:-;1574:4;1580;1609:1;1604;:6;1600:109;;1634:5;1638:1;1634;:5;:::i;:::-;1641;1626:21;;;;;;1600:109;1686:5;1690:1;1686;:5;:::i;:::-;1693:4;1678:20;;;;1600:109;1501:214;;;;;:::o;2944:96:38:-;3002:31;3008:4;3022;3029:3;3002:5;:31::i;2244:322::-;2326:4;2309:23;;;;:8;:23;;;;;;:30;-1:-1:-1;2309:30:38;2288:98;;;;-1:-1:-1;;;2288:98:38;;26440:2:75;2288:98:38;;;26422:21:75;26479:2;26459:18;;;26452:30;-1:-1:-1;;;26498:18:75;;;26491:50;26558:18;;2288:98:38;26238:344:75;2288:98:38;2444:4;2427:23;;;;:8;:23;;;;;;2422:34;;2452:3;2422:4;:34::i;:::-;2413:4;2396:23;;;;:8;:23;;;;;:60;2486:12;;2481:23;;2500:3;2481:4;:23::i;:::-;2466:12;:38;2519:40;;1408:25:75;;;2551:1:38;;2536:4;;2519:40;;1396:2:75;1381:18;2519:40:38;;;;;;;;2244:322;:::o;1004:111:36:-;1067:4;902::33;1094:7:36;1099:1;1094:4;:7::i;:::-;:14;;;;:::i;894:104::-;956:4;983:8;902:4:33;983:1:36;:8;:::i;2429:320::-;2499:4;2528:1;2499:4;2548:5;2552:1;2548;:5;:::i;:::-;:21;;902:4:33;2548:21:36;;;2561:1;2548:21;2539:30;-1:-1:-1;2585:6:36;2590:1;2585:6;;:::i;:::-;;;2580:145;2593:6;;2580:145;;2627:10;2632:1;2635;2627:4;:10::i;:::-;2623:14;-1:-1:-1;2656:5:36;2660:1;2656;:5;:::i;:::-;:10;2652:63;;2690:10;2695:1;2698;2690:4;:10::i;:::-;2686:14;;2652:63;2601:6;2606:1;2601:6;;:::i;:::-;;;2580:145;;3444:1040;3540:4;3588:3;3540:4;;3623:20;3632:4;902::33;3623:8:36;:20::i;:::-;3601:42;;-1:-1:-1;3601:42:36;-1:-1:-1;902:4:33;;3653:9:36;3976:1;3962:495;3987:9;3979:4;:17;3962:495;;4017:9;4029:8;902:4:33;4029:1:36;:8;:::i;:::-;4017:20;;4052:6;4060:9;4073:29;4082:1;4085:16;4090:4;902::33;4085::36;:16::i;:::-;4073:8;:29::i;:::-;4051:51;;;;4123:22;4128:4;4134:10;4139:1;4142;4134:4;:10::i;4123:22::-;4116:29;;4166:16;4171:4;4177;4166;:16::i;:::-;4159:23;-1:-1:-1;4200:9:36;4196:20;;4211:5;;;;;4196:20;4235:4;4231:30;;;4252:9;;;4231:30;4279:4;4275:30;;;4296:9;;;4275:30;4323:8;4319:128;;;4357:15;4362:3;4367:4;4357;:15::i;:::-;4351:21;;4319:128;;;4417:15;4422:3;4427:4;4417;:15::i;:::-;4411:21;;4319:128;4003:454;;;3998:3;;;;;:::i;:::-;;;;3962:495;;;-1:-1:-1;4474:3:36;;3444:1040;-1:-1:-1;;;;;;;;;3444:1040:36:o;3146:706:62:-;3565:23;3591:69;3619:4;3591:69;;;;;;;;;;;;;;;;;3599:5;-1:-1:-1;;;;;3591:27:62;;;:69;;;;;:::i;:::-;3674:17;;3565:95;;-1:-1:-1;3674:21:62;3670:176;;3769:10;3758:30;;;;;;;;;;;;:::i;:::-;3750:85;;;;-1:-1:-1;;;3750:85:62;;31441:2:75;3750:85:62;;;31423:21:75;31480:2;31460:18;;;31453:30;31519:34;31499:18;;;31492:62;-1:-1:-1;;;31570:18:75;;;31563:40;31620:19;;3750:85:62;31239:406:75;2024:214:38;2116:4;2099:23;;;;:8;:23;;;;;;2094:34;;2124:3;2094:4;:34::i;:::-;2085:4;2068:23;;;;:8;:23;;;;;:60;2158:12;;2153:23;;2172:3;2153:4;:23::i;:::-;2138:12;:38;2191:40;;1408:25:75;;;2220:4:38;;2208:1;;2191:40;;1396:2:75;1381:18;2191:40:38;1262:177:75;2846:92:38;2902:29;2916:4;2923:2;2927:3;2902:5;:29::i;851:241:62:-;989:96;1009:5;1039:27;;;1068:4;1074:2;1078:5;1016:68;;;;;;;;;;:::i;3596:193:47:-;3699:12;3730:52;3752:6;3760:4;3766:1;3769:12;3699;1101:20;;4865:60;;;;-1:-1:-1;;;4865:60:47;;32259:2:75;4865:60:47;;;32241:21:75;32298:2;32278:18;;;32271:30;32337:31;32317:18;;;32310:59;32386:18;;4865:60:47;32057:353:75;4865:60:47;4996:12;5010:23;5037:6;-1:-1:-1;;;;;5037:11:47;5057:5;5065:4;5037:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4995:75;;;;5087:52;5105:7;5114:10;5126:12;7221;7249:7;7245:580;;;-1:-1:-1;7279:10:47;7272:17;;7245:580;7390:17;;:21;7386:429;;7648:10;7642:17;7708:15;7695:10;7691:2;7687:19;7680:44;7386:429;7787:12;7780:20;;-1:-1:-1;;;7780:20:47;;;;;;;;:::i;14:258:75:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:75;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:75;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:75:o;665:131::-;-1:-1:-1;;;;;740:31:75;;730:42;;720:70;;786:1;783;776:12;801:456;878:6;886;894;947:2;935:9;926:7;922:23;918:32;915:52;;;963:1;960;953:12;915:52;1002:9;989:23;1021:31;1046:5;1021:31;:::i;:::-;1071:5;-1:-1:-1;1128:2:75;1113:18;;1100:32;1141:33;1100:32;1141:33;:::i;:::-;801:456;;1193:7;;-1:-1:-1;;;1247:2:75;1232:18;;;;1219:32;;801:456::o;1444:315::-;1512:6;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1628:9;1615:23;1647:31;1672:5;1647:31;:::i;:::-;1697:5;1749:2;1734:18;;;;1721:32;;-1:-1:-1;;;1444:315:75:o;1956:663::-;2060:6;2068;2076;2084;2092;2100;2153:3;2141:9;2132:7;2128:23;2124:33;2121:53;;;2170:1;2167;2160:12;2121:53;2209:9;2196:23;2228:31;2253:5;2228:31;:::i;:::-;2278:5;-1:-1:-1;2330:2:75;2315:18;;2302:32;;-1:-1:-1;2381:2:75;2366:18;;2353:32;;-1:-1:-1;2437:2:75;2422:18;;2409:32;2450:33;2409:32;2450:33;:::i;:::-;1956:663;;;;-1:-1:-1;1956:663:75;;2556:3;2541:19;;2528:33;;2608:3;2593:19;;;2580:33;;-1:-1:-1;1956:663:75;-1:-1:-1;;1956:663:75:o;2624:248::-;2692:6;2700;2753:2;2741:9;2732:7;2728:23;2724:32;2721:52;;;2769:1;2766;2759:12;2721:52;-1:-1:-1;;2792:23:75;;;2862:2;2847:18;;;2834:32;;-1:-1:-1;2624:248:75:o;2877:118::-;2963:5;2956:13;2949:21;2942:5;2939:32;2929:60;;2985:1;2982;2975:12;3000:128;3065:20;;3094:28;3065:20;3094:28;:::i;3133:163::-;3231:6;3264:2;3252:15;;3249:24;-1:-1:-1;3246:44:75;;;3286:1;3283;3276:12;3301:161;3395:6;3428:4;3416:17;;3413:26;-1:-1:-1;3410:46:75;;;3452:1;3449;3442:12;3467:1281;3651:6;3659;3667;3675;3683;3691;3699;3707;3760:3;3748:9;3739:7;3735:23;3731:33;3728:53;;;3777:1;3774;3767:12;3728:53;3816:9;3803:23;3835:31;3860:5;3835:31;:::i;:::-;3885:5;-1:-1:-1;3942:2:75;3927:18;;3914:32;3955:33;3914:32;3955:33;:::i;:::-;4007:7;-1:-1:-1;4065:2:75;4050:18;;4037:32;4088:18;4118:14;;;4115:34;;;4145:1;4142;4135:12;4115:34;4183:6;4172:9;4168:22;4158:32;;4228:7;4221:4;4217:2;4213:13;4209:27;4199:55;;4250:1;4247;4240:12;4199:55;4290:2;4277:16;4316:2;4308:6;4305:14;4302:34;;;4332:1;4329;4322:12;4302:34;4385:7;4380:2;4370:6;4367:1;4363:14;4359:2;4355:23;4351:32;4348:45;4345:65;;;4406:1;4403;4396:12;4345:65;4437:2;4433;4429:11;4419:21;;4459:6;4449:16;;;;;4484:35;4515:2;4504:9;4500:18;4484:35;:::i;:::-;4474:45;;4538:36;4569:3;4558:9;4554:19;4538:36;:::i;:::-;4528:46;;4593:67;4652:7;4646:3;4635:9;4631:19;4593:67;:::i;:::-;4583:77;;4679:63;4734:7;4728:3;4717:9;4713:19;4679:63;:::i;:::-;4669:73;;3467:1281;;;;;;;;;;;:::o;4753:525::-;4839:6;4847;4855;4863;4916:3;4904:9;4895:7;4891:23;4887:33;4884:53;;;4933:1;4930;4923:12;4884:53;4972:9;4959:23;4991:31;5016:5;4991:31;:::i;:::-;5041:5;-1:-1:-1;5098:2:75;5083:18;;5070:32;5111:33;5070:32;5111:33;:::i;:::-;4753:525;;5163:7;;-1:-1:-1;;;;5217:2:75;5202:18;;5189:32;;5268:2;5253:18;5240:32;;4753:525::o;5751:247::-;5810:6;5863:2;5851:9;5842:7;5838:23;5834:32;5831:52;;;5879:1;5876;5869:12;5831:52;5918:9;5905:23;5937:31;5962:5;5937:31;:::i;6400:180::-;6459:6;6512:2;6500:9;6491:7;6487:23;6483:32;6480:52;;;6528:1;6525;6518:12;6480:52;-1:-1:-1;6551:23:75;;6400:180;-1:-1:-1;6400:180:75:o;6585:127::-;6646:10;6641:3;6637:20;6634:1;6627:31;6677:4;6674:1;6667:15;6701:4;6698:1;6691:15;6717:886;6817:6;6825;6833;6886:3;6874:9;6865:7;6861:23;6857:33;6854:53;;;6903:1;6900;6893:12;6854:53;6952:7;6945:4;6934:9;6930:20;6926:34;6916:62;;6974:1;6971;6964:12;6916:62;7007:2;7001:9;7049:3;7041:6;7037:16;7119:6;7107:10;7104:22;7083:18;7071:10;7068:34;7065:62;7062:88;;;7130:18;;:::i;:::-;7166:2;7159:22;7201:6;7245:3;7230:19;;7261;;;7258:39;;;7293:1;7290;7283:12;7258:39;7317:9;7335:146;7351:6;7346:3;7343:15;7335:146;;;7419:17;;7407:30;;7466:4;7457:14;;;;7368;7335:146;;;-1:-1:-1;7500:6:75;;7525:20;;;-1:-1:-1;;7592:3:75;7577:19;;;;7564:33;;6717:886;-1:-1:-1;;;6717:886:75:o;8171:461::-;8224:3;8262:5;8256:12;8289:6;8284:3;8277:19;8315:4;8344:2;8339:3;8335:12;8328:19;;8381:2;8374:5;8370:14;8402:1;8412:195;8426:6;8423:1;8420:13;8412:195;;;8491:13;;-1:-1:-1;;;;;8487:39:75;8475:52;;8547:12;;;;8582:15;;;;8523:1;8441:9;8412:195;;;-1:-1:-1;8623:3:75;;8171:461;-1:-1:-1;;;;;8171:461:75:o;8637:261::-;8816:2;8805:9;8798:21;8779:4;8836:56;8888:2;8877:9;8873:18;8865:6;8836:56;:::i;8903:804::-;9160:2;9149:9;9142:21;9123:4;9186:56;9238:2;9227:9;9223:18;9215:6;9186:56;:::i;:::-;9299:22;;;9261:2;9279:18;;;9272:50;;;;9371:13;;9393:22;;;9469:15;;;;9431;;;9502:1;9512:169;9526:6;9523:1;9520:13;9512:169;;;9587:13;;9575:26;;9656:15;;;;9621:12;;;;9548:1;9541:9;9512:169;;;-1:-1:-1;9698:3:75;;8903:804;-1:-1:-1;;;;;;;8903:804:75:o;9712:397::-;9830:6;9838;9891:3;9879:9;9870:7;9866:23;9862:33;9859:53;;;9908:1;9905;9898:12;9859:53;9946:2;9935:9;9931:18;9968:7;9964:2;9961:15;9958:35;;;9989:1;9986;9979:12;9958:35;10012:9;10002:19;;10057:7;10051:3;10040:9;10036:19;10033:32;10030:52;;;10078:1;10075;10068:12;10030:52;10101:2;10091:12;;;9712:397;;;;;:::o;10367:388::-;10435:6;10443;10496:2;10484:9;10475:7;10471:23;10467:32;10464:52;;;10512:1;10509;10502:12;10464:52;10551:9;10538:23;10570:31;10595:5;10570:31;:::i;:::-;10620:5;-1:-1:-1;10677:2:75;10662:18;;10649:32;10690:33;10649:32;10690:33;:::i;10760:335::-;10962:2;10944:21;;;11001:2;10981:18;;;10974:30;-1:-1:-1;;;11035:2:75;11020:18;;11013:41;11086:2;11071:18;;10760:335::o;11100:127::-;11161:10;11156:3;11152:20;11149:1;11142:31;11192:4;11189:1;11182:15;11216:4;11213:1;11206:15;11232:168;11272:7;11338:1;11334;11330:6;11326:14;11323:1;11320:21;11315:1;11308:9;11301:17;11297:45;11294:71;;;11345:18;;:::i;:::-;-1:-1:-1;11385:9:75;;11232:168::o;12868:341::-;13070:2;13052:21;;;13109:2;13089:18;;;13082:30;-1:-1:-1;;;13143:2:75;13128:18;;13121:47;13200:2;13185:18;;12868:341::o;13214:337::-;13416:2;13398:21;;;13455:2;13435:18;;;13428:30;-1:-1:-1;;;13489:2:75;13474:18;;13467:43;13542:2;13527:18;;13214:337::o;13556:127::-;13617:10;13612:3;13608:20;13605:1;13598:31;13648:4;13645:1;13638:15;13672:4;13669:1;13662:15;13688:120;13728:1;13754;13744:35;;13759:18;;:::i;:::-;-1:-1:-1;13793:9:75;;13688:120::o;13813:128::-;13853:3;13884:1;13880:6;13877:1;13874:13;13871:39;;;13890:18;;:::i;:::-;-1:-1:-1;13926:9:75;;13813:128::o;14571:245::-;14638:6;14691:2;14679:9;14670:7;14666:23;14662:32;14659:52;;;14707:1;14704;14697:12;14659:52;14739:9;14733:16;14758:28;14780:5;14758:28;:::i;15879:335::-;16081:2;16063:21;;;16120:2;16100:18;;;16093:30;-1:-1:-1;;;16154:2:75;16139:18;;16132:41;16205:2;16190:18;;15879:335::o;16219:::-;16421:2;16403:21;;;16460:2;16440:18;;;16433:30;-1:-1:-1;;;16494:2:75;16479:18;;16472:41;16545:2;16530:18;;16219:335::o;16559:375::-;-1:-1:-1;;;;;16817:15:75;;;16799:34;;16869:15;;;;16864:2;16849:18;;16842:43;16916:2;16901:18;;16894:34;;;;16749:2;16734:18;;16559:375::o;18356:127::-;18417:10;18412:3;18408:20;18405:1;18398:31;18448:4;18445:1;18438:15;18472:4;18469:1;18462:15;18488:184;18558:6;18611:2;18599:9;18590:7;18586:23;18582:32;18579:52;;;18627:1;18624;18617:12;18579:52;-1:-1:-1;18650:16:75;;18488:184;-1:-1:-1;18488:184:75:o;19485:135::-;19524:3;-1:-1:-1;;19545:17:75;;19542:43;;;19565:18;;:::i;:::-;-1:-1:-1;19612:1:75;19601:13;;19485:135::o;20312:251::-;20382:6;20435:2;20423:9;20414:7;20410:23;20406:32;20403:52;;;20451:1;20448;20441:12;20403:52;20483:9;20477:16;20502:31;20527:5;20502:31;:::i;20568:125::-;20608:4;20636:1;20633;20630:8;20627:34;;;20641:18;;:::i;:::-;-1:-1:-1;20678:9:75;;20568:125::o;22594:339::-;22796:2;22778:21;;;22835:2;22815:18;;;22808:30;-1:-1:-1;;;22869:2:75;22854:18;;22847:45;22924:2;22909:18;;22594:339::o;31122:112::-;31154:1;31180;31170:35;;31185:18;;:::i;:::-;-1:-1:-1;31219:9:75;;31122:112::o;32415:274::-;32544:3;32582:6;32576:13;32598:53;32644:6;32639:3;32632:4;32624:6;32620:17;32598:53;:::i;:::-;32667:16;;;;;32415:274;-1:-1:-1;;32415:274:75:o",
  "language": "Solidity",
  "natspec": {
    "details": "Used by the (Ocean version) BFactory contract as a bytecode reference to      deploy new BPools. This contract is a friendly fork of Balancer [1]  [1] https://github.com/balancer-labs/balancer-core/contracts/. All fees are expressed in wei.  Examples:  (1e17 = 10 % , 1e16 = 1% , 1e15 = 0.1%, 1e14 = 0.01%)",
    "kind": "dev",
    "methods": {
      "calcPoolInSingleOut(address,uint256)": {
        "details": "calcPoolInSingleOut      Returns number of poolshares needed to withdraw exact tokenAmountOut tokens",
        "params": {
          "tokenAmountOut": "expected amount of tokensOut",
          "tokenOut": "tokenOut"
        }
      },
      "calcPoolOutSingleIn(address,uint256)": {
        "details": "calcPoolOutSingleIn      Returns number of poolshares obtain by staking exact tokenAmountIn tokens",
        "params": {
          "tokenAmountIn": "exact number of tokens staked",
          "tokenIn": "tokenIn"
        }
      },
      "calcSingleInPoolOut(address,uint256)": {
        "details": "calcSingleInPoolOut      Returns number of tokens to be staked to the pool in order to get an exact number of poolshares",
        "params": {
          "poolAmountOut": "expected amount of pool shares",
          "tokenIn": "tokenIn"
        }
      },
      "calcSingleOutPoolIn(address,uint256)": {
        "details": "calcSingleOutPoolIn      Returns expected amount of tokenOut for removing exact poolAmountIn pool shares from the pool",
        "params": {
          "poolAmountIn": "amount of shares spent",
          "tokenOut": "tokenOut"
        }
      },
      "collectMarketFee()": {
        "details": "collectMarketFee      Collects and send all Market Fees to _publishMarketCollector.      This function can be called by anyone, because fees are being sent to _publishMarketCollector"
      },
      "collectOPC()": {
        "details": "collectOPC      Collects and send all OPC Fees to _opcCollector.      This funtion can be called by anyone, because fees are being sent to _opcCollector"
      },
      "exitswapPoolAmountIn(uint256,uint256)": {
        "details": "exitswapPoolAmountIn      Single side remove liquidity from the pool,      expecting a minAmountOut of basetokens for spending poolAmountIn pool shares",
        "params": {
          "minAmountOut": "minimum amount of basetokens expected",
          "poolAmountIn": "exact number of pool shares to spend"
        }
      },
      "getAmountInExactOut(address,address,uint256,uint256)": {
        "details": "getAmountInExactOut      How many tokensIn do you need in order to get exact tokenAmountOut. Returns: tokenAmountIn, LPFee, opcFee , publishMarketSwapFee, consumeMarketSwapFee",
        "params": {
          "_consumeMarketSwapFee": "consume market swap fee",
          "tokenAmountOut": "exact amount of tokenOut",
          "tokenIn": "token to be swaped",
          "tokenOut": "token to get"
        }
      },
      "getAmountOutExactIn(address,address,uint256,uint256)": {
        "details": "getAmountOutExactIn      How many tokensOut you will get for a exact tokenAmountIn Returns: tokenAmountOut, LPFee, opcFee ,  publishMarketSwapFee, consumeMarketSwapFee",
        "params": {
          "_consumeMarketSwapFee": "consume market swap fee",
          "tokenAmountOut": "exact amount of tokenOut",
          "tokenIn": "token to be swaped",
          "tokenOut": "token to get"
        }
      },
      "getBalance(address)": {
        "details": "getBalance      Returns the current token reserve amount",
        "params": {
          "token": "token to be checked"
        }
      },
      "getBaseTokenAddress()": {
        "details": "getBaseTokenAddress      Returns the current baseToken address"
      },
      "getController()": {
        "details": "getController      Returns the current controller address (ssBot)"
      },
      "getCurrentMarketFees()": {
        "details": "getCurrentMarketFees      Get the current amount of fees which can be withdrawned by _publishMarketCollector",
        "returns": {
          "_0": "address[] - array of tokens addresses         uint256[] - array of amounts"
        }
      },
      "getCurrentOPCFees()": {
        "details": "getCurrentOPCFees      Get the current amount of fees which can be withdrawned by OPC",
        "returns": {
          "_0": "address[] - array of tokens addresses         uint256[] - array of amounts"
        }
      },
      "getCurrentTokens()": {
        "details": "getCurrentTokens      Returns tokens bounded to pool, before the pool is finalized"
      },
      "getDatatokenAddress()": {
        "details": "getDatatokenAddress      Returns the current datatoken address"
      },
      "getDenormalizedWeight(address)": {
        "details": "getDenormalizedWeight      Returns denormalized weight of a token",
        "params": {
          "token": "token to be checked"
        }
      },
      "getFinalTokens()": {
        "details": "getFinalTokens      Returns tokens bounded to pool, after the pool was finalized"
      },
      "getId()": {
        "details": "getId      Return template id in case we need different ABIs.       If you construct your own template, please make sure to change the hardcoded value"
      },
      "getMarketFee()": {
        "details": "getMarketFee      Returns the current fee of publishingMarket"
      },
      "getNormalizedWeight(address)": {
        "details": "getNormalizedWeight      Returns normalized weight of a token",
        "params": {
          "token": "token to be checked"
        }
      },
      "getNumTokens()": {
        "details": "getNumTokens      Returns number of tokens bounded to pool"
      },
      "getSpotPrice(address,address,uint256)": {
        "details": "getSpotPrice      Return the spot price of swapping tokenIn to tokenOut",
        "params": {
          "_consumeMarketSwapFee": "consume market swap fee ",
          "tokenIn": "in token",
          "tokenOut": "out token"
        }
      },
      "getSwapFee()": {
        "details": "getSwapFee      Returns the current Liquidity Providers swap fee"
      },
      "getTotalDenormalizedWeight()": {
        "details": "getTotalDenormalizedWeight      Returns total denormalized weught of the pool"
      },
      "isBound(address)": {
        "details": "isBound      Returns true if token is bound",
        "params": {
          "t": "token to be checked"
        }
      },
      "isFinalized()": {
        "details": "isFinalized      Returns true if pool is finalized"
      },
      "isPublicSwap()": {
        "details": "isPublicSwap      Returns true if swapping is allowed"
      },
      "joinswapExternAmountIn(uint256,uint256)": {
        "details": "joinswapExternAmountIn      Single side add liquidity to the pool,      expecting a minPoolAmountOut of shares for spending tokenAmountIn basetokens",
        "params": {
          "minPoolAmountOut": "minimum of pool shares expectex",
          "tokenAmountIn": "exact number of base tokens to spend"
        }
      },
      "setSwapFee(uint256)": {
        "details": "setSwapFee      Allows controller to change the swapFee",
        "params": {
          "swapFee": "new swap fee (max 1e17 = 10 % , 1e16 = 1% , 1e15 = 0.1%, 1e14 = 0.01%)"
        }
      },
      "setup(address,uint256,uint256,address,uint256,uint256)": {
        "details": "setup      Initial setup of the pool      Can be called only by the controller",
        "params": {
          "baseTokenAddress": "base token",
          "baseTokenAmount": "how many basetokens in the initial reserve",
          "baseTokenWeight": "base weight (hardcoded in deployer at 50%)",
          "datatokenAddress": "datatokenAddress",
          "datatokenAmount": "how many datatokens in the initial reserve",
          "datatokenWeight": "datatoken weight (hardcoded in deployer at 50%)"
        }
      },
      "swapExactAmountIn(address[3],uint256[4])": {
        "details": "swapExactAmountIn      Swaps an exact amount of tokensIn to get a mimum amount of tokenOut",
        "params": {
          "amountsInOutMaxFee": "array of ints: [tokenAmountIn, minAmountOut, maxPrice, consumeMarketSwapFee]",
          "tokenInOutMarket": "array of addreses: [tokenIn, tokenOut, consumeMarketFeeAddress]"
        }
      },
      "swapExactAmountOut(address[3],uint256[4])": {
        "details": "swapExactAmountOut      Swaps a maximum  maxAmountIn of tokensIn to get an exact amount of tokenOut",
        "params": {
          "amountsInOutMaxFee": "array of ints: [maxAmountIn,tokenAmountOut,maxPrice, consumeMarketSwapFee]",
          "tokenInOutMarket": "array of addreses: [tokenIn, tokenOut, consumeMarketFeeAddress]"
        }
      },
      "updatePublishMarketFee(address,uint256)": {
        "details": "updatePublishMarketFee      Set _newCollector as _publishMarketCollector",
        "params": {
          "_newCollector": "new _publishMarketCollector",
          "_newSwapFee": "new swapFee"
        }
      }
    },
    "title": "BPool",
    "version": 1
  },
  "offset": [
    721,
    41021
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x867378C5 GT PUSH2 0x22B JUMPI DUP1 PUSH4 0xBF7DB236 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xD4CADF68 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xEC093021 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x924 JUMPI DUP1 PUSH4 0xF1B8A9B7 EQ PUSH2 0x92C JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x93F JUMPI DUP1 PUSH4 0xFDE924F7 EQ PUSH2 0x952 JUMPI DUP1 PUSH4 0xFF9B1850 EQ PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD4CADF68 EQ PUSH2 0x8D0 JUMPI DUP1 PUSH4 0xD73DD623 EQ PUSH2 0x8D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x8EB JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6580D12 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x892 JUMPI DUP1 PUSH4 0xC98A59CF EQ PUSH2 0x89A JUMPI DUP1 PUSH4 0xCAA01148 EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0xCC77828D EQ PUSH2 0x8C0 JUMPI DUP1 PUSH4 0xCD2ED8FB EQ PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF7DB236 EQ PUSH2 0x84C JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xC421A3FC EQ PUSH2 0x862 JUMPI DUP1 PUSH4 0xC44A4283 EQ PUSH2 0x88A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3B3A16D GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB7B800A4 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x817 JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x81F JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x827 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x82F JUMPI DUP1 PUSH4 0xBE3BBD2E EQ PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3B3A16D EQ PUSH2 0x7E9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xAB77A2DE EQ PUSH2 0x80F JUMPI DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x936C3477 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x936C3477 EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x7A7 JUMPI DUP1 PUSH4 0x948D8CE6 EQ PUSH2 0x7AF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x867378C5 EQ PUSH2 0x75F JUMPI DUP1 PUSH4 0x892CDF9E EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0x8C28CBE8 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0x8D4E4083 EQ PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x331 JUMPI DUP1 PUSH4 0x5E123ADD GT PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x76C7A3C7 GT PUSH2 0x288 JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0x7A284BE4 EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0x7C5918B3 EQ PUSH2 0x724 JUMPI DUP1 PUSH4 0x80CA7308 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0x8329AB33 EQ PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5E123ADD EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0x638C9E95 EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0x66188463 EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x430ED5D0 GT PUSH2 0x300 JUMPI DUP1 PUSH4 0x430ED5D0 EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0x458C3FB5 EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0x4DF947D0 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0x51705CD0 EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x34E19907 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0x3950B3FD EQ PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18F9722A GT PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x29B88A6A GT PUSH2 0x383 JUMPI DUP1 PUSH4 0x29B88A6A EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x2EEBD6AE EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x2F37B624 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x30062192 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x3018205F EQ PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18F9722A EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x284E97A9 EQ PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EF3F5B GT PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x9EF3F5B EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x12989260 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x79492D4 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x4A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x27B1B2B0B7102837B7B6102A37B5B2B7 PUSH1 0x81 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x5249 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x473 PUSH2 0x46E CALLDATASIZE PUSH1 0x4 PUSH2 0x5291 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x457 JUMP JUMPDEST PUSH2 0x494 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x52D2 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x457 JUMP JUMPDEST PUSH2 0x473 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x4BA CALLDATASIZE PUSH1 0x4 PUSH2 0x52FE JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x535A JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x473 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D2 JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x473 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x494 PUSH2 0x514 CALLDATASIZE PUSH1 0x4 PUSH2 0x5291 JUMP JUMPDEST PUSH2 0x124F JUMP JUMPDEST PUSH2 0x494 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x53B7 JUMP JUMPDEST PUSH2 0x139E JUMP JUMPDEST PUSH2 0x473 PUSH2 0x168F JUMP JUMPDEST PUSH2 0x547 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x5497 JUMP JUMPDEST PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x457 JUMP JUMPDEST PUSH2 0x494 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x5A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x457 JUMP JUMPDEST PUSH1 0x12 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x457 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x54FA JUMP JUMPDEST PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x494 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x62D CALLDATASIZE PUSH1 0x4 PUSH2 0x52D2 JUMP JUMPDEST PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x473 PUSH2 0x640 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D2 JUMP JUMPDEST PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x67A PUSH2 0x675 CALLDATASIZE PUSH1 0x4 PUSH2 0x5529 JUMP JUMPDEST PUSH2 0x199D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP5 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x457 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x473 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x5CD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x494 PUSH2 0x6E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D2 JUMP JUMPDEST PUSH2 0x1B50 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x6F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x1C26 JUMP JUMPDEST PUSH2 0x473 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x732 CALLDATASIZE PUSH1 0x4 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0x473 PUSH2 0x75A CALLDATASIZE PUSH1 0x4 PUSH2 0x535A JUMP JUMPDEST PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x67A PUSH2 0x775 CALLDATASIZE PUSH1 0x4 PUSH2 0x5529 JUMP JUMPDEST PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x788 CALLDATASIZE PUSH1 0x4 PUSH2 0x54DD JUMP JUMPDEST PUSH2 0x234A JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x494 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x473 PUSH2 0x24E9 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x7BD CALLDATASIZE PUSH1 0x4 PUSH2 0x54DD JUMP JUMPDEST PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x13D415 PUSH1 0xEA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x44A JUMP JUMPDEST PUSH2 0x473 PUSH2 0x254E JUMP JUMPDEST PUSH2 0x473 PUSH2 0x7F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D2 JUMP JUMPDEST PUSH2 0x256C JUMP JUMPDEST PUSH2 0x494 PUSH2 0x80A CALLDATASIZE PUSH1 0x4 PUSH2 0x52D2 JUMP JUMPDEST PUSH2 0x25C9 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x25DF JUMP JUMPDEST PUSH2 0x473 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x473 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x27A0 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x83F PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x55F9 JUMP JUMPDEST PUSH2 0x854 PUSH2 0x2881 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP3 SWAP2 SWAP1 PUSH2 0x560C JUMP JUMPDEST PUSH2 0x875 PUSH2 0x870 CALLDATASIZE PUSH1 0x4 PUSH2 0x5663 JUMP JUMPDEST PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x457 JUMP JUMPDEST PUSH2 0x854 PUSH2 0x31C0 JUMP JUMPDEST PUSH2 0x473 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x875 PUSH2 0x8A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5663 JUMP JUMPDEST PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x547 PUSH2 0x8BB CALLDATASIZE PUSH1 0x4 PUSH2 0x5497 JUMP JUMPDEST PUSH2 0x3A4F JUMP JUMPDEST PUSH2 0x83F PUSH2 0x3AF9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x473 JUMP JUMPDEST PUSH2 0x494 PUSH2 0x8E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D2 JUMP JUMPDEST PUSH2 0x3B1F JUMP JUMPDEST PUSH2 0x473 PUSH2 0x8F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x56A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x3B92 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x93A CALLDATASIZE PUSH1 0x4 PUSH2 0x54DD JUMP JUMPDEST PUSH2 0x3BA5 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x94D CALLDATASIZE PUSH1 0x4 PUSH2 0x54DD JUMP JUMPDEST PUSH2 0x3BFE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x494 JUMP JUMPDEST PUSH2 0x473 PUSH2 0x972 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D2 JUMP JUMPDEST PUSH2 0x3C4C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AF DUP5 PUSH2 0x3CA9 JUMP JUMPDEST PUSH2 0x9B8 DUP4 PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 PUSH1 0x3 DUP1 DUP4 ADD SLOAD PUSH1 0x2 DUP1 DUP6 ADD SLOAD SWAP3 DUP5 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH2 0x9F9 SWAP4 SWAP2 SWAP1 DUP9 PUSH2 0x3D04 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5944 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xA4E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA73 PUSH8 0xDE0B6B3A7640000 PUSH1 0x32 PUSH2 0x570E JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 DUP2 SWAP1 SSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x22A9292FA4A72B20A624A22FA1A7A72A2927A62622A9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F494E56414C49445F44415441544F4B454E5F41444452455353000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F494E56414C49445F62617365546F6B656E5F41444452455353000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0xBC4 DUP7 DUP7 DUP7 PUSH2 0x3D90 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5924 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC02 DUP4 DUP4 DUP4 PUSH2 0x3D90 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5924 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC3D PUSH2 0x3F7E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP2 SWAP1 DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0xBECE8B4DCDBE446DD65A9288154698E067E3E91DE17A1A408C2F531B9F845D73 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xCCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x572D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xD1A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0xD47 SWAP2 SWAP1 DUP7 PUSH2 0x3FDD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x5758 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xDAE SWAP1 PUSH2 0xD9E PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH2 0xDA9 SWAP1 PUSH1 0x1 PUSH2 0x57A9 JUMP JUMPDEST PUSH2 0x4087 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0xDF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552525F4D41585F4F55545F524154494F PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0xDFF DUP2 PUSH1 0x3 ADD SLOAD DUP4 PUSH2 0x416C JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 PUSH32 0x9D9058FD2F25CCC389FEC7720ABEF0CA83472F5ABFAFD5F10D37F51E6A0493F3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH32 0xFCDA32798D5A9D032F49B37FEA876D422F18F6E386E0F07DB6029B693624B2C2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xF SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD098AB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x1A131566 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x57C1 JUMP JUMPDEST ISZERO PUSH2 0x1085 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 DUP3 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0xF29 SWAP2 SWAP1 DUP9 PUSH2 0x3FDD JUMP JUMPDEST SWAP1 POP PUSH2 0xF39 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH2 0x416C JUMP JUMPDEST PUSH1 0x3 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH2 0x100 SWAP1 SWAP4 DIV SWAP1 SWAP3 AND SWAP2 PUSH32 0x9D9058FD2F25CCC389FEC7720ABEF0CA83472F5ABFAFD5F10D37F51E6A0493F3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0xA SLOAD PUSH2 0xFAF SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH2 0x41C9 JUMP JUMPDEST PUSH2 0xFB8 DUP7 PUSH2 0x41D3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA SLOAD PUSH2 0xFDA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP4 PUSH2 0x41DC JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x54A9763 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x54A97630 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1031 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1045 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x87B3975661762D852DDF2EEAAD6A43B2D93777DE7B3B7BDB634283DF32456118 DUP7 PUSH1 0x40 MLOAD PUSH2 0x107A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST PUSH2 0x108F CALLER DUP6 PUSH2 0x41C9 JUMP JUMPDEST PUSH2 0x1098 DUP5 PUSH2 0x41D3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x10AF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x41DC JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA73 PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1129 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x27A7262C9026A0A925A2AA1021A7A62622A1AA27A9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x117F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205F6E6577436F6C6C6563746F722061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x119F JUMPI POP PUSH2 0x119B PUSH2 0x2710 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP2 LT ISZERO JUMPDEST PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x57DE JUMP JUMPDEST PUSH2 0x11CE PUSH1 0xA PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x11ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x5803 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5E3E722DBD3B6B8071B78568AC80CD0E8FF92E4FB3024E755D504D8F7C2F6F09 SWAP2 PUSH2 0x1243 SWAP2 CALLER SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x5828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 PUSH2 0x128B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x12CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x22A9292FA12A27A5A2A72FA120A22FA1A0A62622A9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x12DA DUP5 DUP5 DUP5 PUSH2 0x41F0 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x1318 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT EQ ISZERO JUMPDEST ISZERO PUSH2 0x1394 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x134B SWAP1 DUP4 PUSH2 0x416C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP1 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5944 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F414C52454144595F494E495449414C495A4544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F494E56414C49445F434F4E54524F4C4C45525F414444524553530000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x14A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F494E56414C49445F464143544F52595F414444524553530000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x14BB PUSH2 0x2710 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x14CE JUMPI PUSH2 0x14CE PUSH2 0x584C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT ISZERO PUSH2 0x14F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x57DE JUMP JUMPDEST PUSH2 0x1506 PUSH1 0xA PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1519 JUMPI PUSH2 0x1519 PUSH2 0x584C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x153E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x5803 JUMP JUMPDEST DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x1551 JUMPI PUSH2 0x1551 PUSH2 0x584C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 EQ DUP1 PUSH2 0x1592 JUMPI POP PUSH2 0x1575 PUSH2 0x2710 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP8 DUP8 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x1588 JUMPI PUSH2 0x1588 PUSH2 0x584C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT ISZERO JUMPDEST PUSH2 0x15AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x57DE JUMP JUMPDEST PUSH2 0x15C1 PUSH1 0xA PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP8 DUP8 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x15D4 JUMPI PUSH2 0x15D4 PUSH2 0x584C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x15F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x5803 JUMP JUMPDEST PUSH2 0x1682 DUP10 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP13 SWAP4 POP DUP12 SWAP3 POP SWAP1 DUP11 SWAP1 PUSH1 0x2 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP2 POP DUP11 SWAP1 PUSH1 0x1 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x4302 SWAP2 POP POP JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB8421E2B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xB8421E2B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1704 SWAP2 SWAP1 PUSH2 0x5862 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x171A DUP10 PUSH2 0x3CA9 JUMP JUMPDEST PUSH2 0x1723 DUP9 PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 DUP2 DUP2 MSTORE DUP6 DUP4 KECCAK256 PUSH1 0x3 DUP1 DUP3 ADD SLOAD DUP8 MSTORE PUSH1 0x2 SWAP2 DUP3 ADD SLOAD DUP4 DUP9 ADD MSTORE SWAP5 DUP16 AND DUP1 DUP6 MSTORE DUP4 DUP4 MSTORE DUP8 DUP6 KECCAK256 SWAP6 DUP7 ADD SLOAD SWAP8 DUP8 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP6 DUP4 MSTORE MSTORE SWAP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 PUSH2 0x17A8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x17B3 DUP4 DUP12 DUP12 PUSH2 0x21B2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP5 SWAP13 POP SWAP1 SWAP11 POP SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x22A9292FA727AA2FA1A7A72A2927A62622A9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x1849 PUSH2 0x2710 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1868 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x57DE JUMP JUMPDEST PUSH2 0x187B PUSH1 0xA PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x189A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x5803 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xBCA0D601C32979EEBAC4E8CD06375B6E45D39AF80FC06A33F366425B450DFB69 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 SLOAD PUSH2 0x1938 SWAP2 SWAP1 DUP6 PUSH2 0x44B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 SLOAD PUSH2 0x1938 SWAP2 SWAP1 DUP6 PUSH2 0x3FDD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19CB PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E6 DUP8 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x4564 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19FB DUP9 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A10 DUP10 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0x4564 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A1E DUP3 DUP6 PUSH2 0x467C JUMP JUMPDEST SWAP1 POP PUSH2 0x1A32 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP10 PUSH2 0x1A41 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1A4E SWAP2 SWAP1 PUSH2 0x57A9 JUMP JUMPDEST PUSH2 0x1A58 SWAP2 SWAP1 PUSH2 0x57A9 JUMP JUMPDEST PUSH2 0x1A62 SWAP2 SWAP1 PUSH2 0x57A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A90 PUSH2 0x1A79 DUP13 PUSH1 0x0 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH2 0x4087 JUMP JUMPDEST PUSH2 0x1A8B PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x416C JUMP JUMPDEST PUSH2 0x4564 JUMP JUMPDEST SWAP8 POP PUSH2 0x1AB3 DUP9 PUSH2 0x1AAE DUP11 PUSH2 0xDA9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1AAE PUSH2 0x168F JUMP JUMPDEST PUSH2 0x416C JUMP JUMPDEST DUP7 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1AD8 DUP9 PUSH2 0x1AAE DUP11 PUSH2 0xDA9 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 SLOAD PUSH2 0x416C JUMP JUMPDEST DUP7 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1AFD DUP9 PUSH2 0x1AAE DUP11 PUSH2 0xDA9 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SLOAD PUSH2 0x416C JUMP JUMPDEST DUP7 MSTORE PUSH2 0x1B19 DUP9 PUSH2 0x1AAE DUP2 PUSH2 0xDA9 PUSH8 0xDE0B6B3A7640000 DUP15 PUSH2 0x416C JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1B40 PUSH2 0x1B2C DUP13 PUSH1 0x0 PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x1A8B PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SLOAD PUSH2 0x416C JUMP JUMPDEST SWAP7 POP POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP1 DUP4 GT ISZERO PUSH2 0x1BA5 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x1BAF DUP2 DUP5 PUSH2 0x416C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5944 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x2710 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C44 PUSH2 0x27D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1DC3 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1C6A JUMPI PUSH2 0x1C6A PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1CAD JUMPI PUSH2 0x1CAD PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xBAF1AB77BE65C7ABF8FCD922BFCF0A749F556AC1A4CDF39C126FFAA1851EDB56 CALLER PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1D23 JUMPI PUSH2 0x1D23 PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D61 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xB SLOAD DUP4 MLOAD PUSH2 0x1DB0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x1D90 JUMPI PUSH2 0x1D90 PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47A8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 PUSH2 0x1DBB DUP2 PUSH2 0x587B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1DED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x572D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1E38 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1E6D SWAP1 PUSH2 0xDA9 PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x1EAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4D41585F494E5F524154494F PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x1EDC SWAP2 SWAP1 DUP7 PUSH2 0x44B1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x1EFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x5758 JUMP JUMPDEST PUSH2 0x1F0C DUP2 PUSH1 0x3 ADD SLOAD DUP6 PUSH2 0x480B JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5924 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xFCDA32798D5A9D032F49B37FEA876D422F18F6E386E0F07DB6029B693624B2C2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 DUP3 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x1FA8 SWAP2 SWAP1 DUP7 PUSH2 0x485D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2AFBBACB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x2AFBBACB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2021 SWAP2 SWAP1 PUSH2 0x57C1 JUMP JUMPDEST ISZERO PUSH2 0x215E JUMPI PUSH1 0xF SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEBEDB8B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xEBEDB8B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x208A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x209C DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH2 0x480B JUMP JUMPDEST PUSH1 0x3 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH2 0x100 SWAP1 SWAP4 DIV SWAP1 SWAP3 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5924 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH32 0x87B3975661762D852DDF2EEAAD6A43B2D93777DE7B3B7BDB634283DF32456118 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2121 DUP5 PUSH2 0x48FA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x213C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x4903 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA SLOAD PUSH2 0x215E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP4 PUSH2 0x490D JUMP JUMPDEST PUSH2 0x2167 DUP5 PUSH2 0x48FA JUMP JUMPDEST PUSH2 0x2171 CALLER DUP6 PUSH2 0x4903 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2188 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP9 PUSH2 0x490D JUMP JUMPDEST POP POP POP PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA73 PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21E0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F5 DUP8 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x3 PUSH2 0x19DC JUMP JUMPDEST SWAP1 POP PUSH2 0x2213 DUP7 PUSH2 0x1AAE DUP9 PUSH2 0xDA9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1AAE PUSH2 0x168F JUMP JUMPDEST DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2238 DUP7 PUSH2 0x1AAE DUP9 PUSH2 0xDA9 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 SLOAD PUSH2 0x416C JUMP JUMPDEST DUP3 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x225D DUP7 PUSH2 0x1AAE DUP9 PUSH2 0xDA9 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SLOAD PUSH2 0x416C JUMP JUMPDEST DUP3 MSTORE PUSH2 0x2279 DUP7 PUSH2 0x1AAE DUP2 PUSH2 0xDA9 PUSH8 0xDE0B6B3A7640000 DUP11 PUSH2 0x416C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP1 SLOAD DUP7 SWAP1 PUSH2 0x228C PUSH2 0x168F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x2299 SWAP2 SWAP1 PUSH2 0x57A9 JUMP JUMPDEST PUSH2 0x22A3 SWAP2 SWAP1 PUSH2 0x57A9 JUMP JUMPDEST PUSH2 0x22AD SWAP2 SWAP1 PUSH2 0x57A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22C3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH2 0x22CF DUP9 DUP3 PUSH2 0x4087 JUMP JUMPDEST DUP10 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x22E5 SWAP1 PUSH2 0x1A8B DUP2 DUP6 PUSH2 0x480B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22F3 DUP3 DUP7 PUSH2 0x467C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2309 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH2 0x231C DUP13 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH2 0x4087 JUMP JUMPDEST SWAP9 POP DUP9 PUSH2 0x2337 DUP13 DUP10 PUSH1 0x40 ADD MLOAD DUP11 PUSH1 0x20 ADD MLOAD PUSH2 0x1AAE SWAP2 SWAP1 PUSH2 0x57A9 JUMP JUMPDEST SWAP9 POP SWAP9 POP POP POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x236D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x23D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x11549497D393D517D093D55391 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x242B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x244F SWAP2 SWAP1 PUSH2 0x5862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP5 SWAP1 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x9FACCA02B471D2776031537A8C9E281DFE5120035EDE107BD328B165FFD97338 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x24E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST POP PUSH1 0xE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA73 PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH2 0x570E JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH2 0x252B DUP3 PUSH2 0x3CA9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2561 PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH2 0xA73 SWAP1 PUSH1 0x1 PUSH2 0x57A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 SLOAD PUSH2 0x1938 SWAP2 SWAP1 DUP6 PUSH2 0x4A55 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D6 CALLER DUP5 DUP5 PUSH2 0x41F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25E9 PUSH2 0x27D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1DC3 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x260F JUMPI PUSH2 0x260F PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2652 JUMPI PUSH2 0x2652 PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A81876D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26F7 SWAP2 SWAP1 PUSH2 0x5896 JUMP JUMPDEST SWAP1 POP PUSH32 0xED2B0288692CFC6D01C94A67A53721792F59C3D1388221F8AA4F66C8D2808DDE CALLER DUP3 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x272E JUMPI PUSH2 0x272E PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x276C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x278B DUP2 DUP4 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1D90 JUMPI PUSH2 0x1D90 PUSH2 0x584C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2798 SWAP1 PUSH2 0x587B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25EE JUMP JUMPDEST PUSH2 0xA73 PUSH1 0xA PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x27C8 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 PUSH2 0x570E JUMP JUMPDEST PUSH2 0xA73 SWAP2 SWAP1 PUSH2 0x58B3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x27F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2821 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x572D JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2877 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2859 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x288E PUSH2 0x27D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28AC JUMPI PUSH2 0x28AC PUSH2 0x5513 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x28D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28F4 JUMPI PUSH2 0x28F4 PUSH2 0x5513 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x291D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x29E6 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x293E JUMPI PUSH2 0x293E PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2958 JUMPI PUSH2 0x2958 PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x5 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x298E JUMPI PUSH2 0x298E PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x29C9 JUMPI PUSH2 0x29C9 PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x29DE DUP2 PUSH2 0x587B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2923 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2A19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2A4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x572D JUMP JUMPDEST PUSH2 0x2A5F PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A75 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2AC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B73737BA1039BBB0B81039B0B6B2903A37B5B2B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x2AE4 DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2ADF SWAP2 SWAP1 PUSH2 0x54DD JUMP JUMPDEST PUSH2 0x3CA9 JUMP JUMPDEST PUSH2 0x2AEF DUP5 PUSH1 0x1 PUSH2 0x2ACC JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 PUSH2 0x2B01 PUSH1 0x20 DUP9 ADD DUP9 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 POP PUSH1 0xD DUP2 DUP8 PUSH1 0x1 PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2B37 SWAP2 SWAP1 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD ISZERO DUP1 PUSH2 0x2B7A JUMPI POP PUSH2 0x2B72 PUSH2 0x2710 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD CALLDATALOAD LT ISZERO JUMPDEST PUSH2 0x2BBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6E73756D655377617046656520746F6F206C6F77 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x2BD2 PUSH1 0xA PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD CALLDATALOAD GT ISZERO PUSH2 0x2C1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x86DEDCE6EADACAA6EEC2E08CCACA40E8DEDE40D0D2CED PUSH1 0x4B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0x2C3B SWAP1 PUSH2 0xDA9 PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP6 CALLDATALOAD GT ISZERO PUSH2 0x2C7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4D41585F494E5F524154494F PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB4 DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x2 ADD SLOAD DUP11 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x2CAA JUMPI PUSH2 0x2CAA PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x3D04 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD DUP2 GT ISZERO PUSH2 0x2D00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4552525F4241445F4C494D49545F5052494345 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x2 ADD SLOAD DUP2 MSTORE POP SWAP1 POP PUSH2 0x2D61 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x2D71 DUP3 DUP11 CALLDATALOAD PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH2 0x21B2 JUMP JUMPDEST SWAP2 SWAP10 POP SWAP4 POP SWAP1 POP PUSH2 0x2DC0 PUSH1 0x5 PUSH1 0x0 DUP13 DUP2 JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2D95 SWAP2 SWAP1 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x480B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x2DD1 PUSH1 0x20 DUP15 ADD DUP15 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2E4D PUSH1 0x6 PUSH1 0x0 DUP13 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x2E0F JUMPI PUSH2 0x2E0F PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2E22 SWAP2 SWAP1 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x480B JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 PUSH2 0x2E5E PUSH1 0x20 DUP15 ADD DUP15 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x53A9DC73D01196A9C660D761BC5EC77B945340A34B5B52E510760AF2DAB1C0F1 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD DUP15 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x2ECA JUMPI PUSH2 0x2ECA PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2EDD SWAP2 SWAP1 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x20 DUP10 ADD CALLDATALOAD DUP9 LT ISZERO PUSH2 0x2F35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x5758 JUMP JUMPDEST PUSH2 0x2F43 DUP7 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0x480B JUMP JUMPDEST DUP7 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2F59 DUP6 PUSH1 0x3 ADD SLOAD DUP10 PUSH2 0x416C JUMP JUMPDEST DUP6 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2F8B DUP7 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x2 ADD SLOAD DUP8 PUSH1 0x3 ADD SLOAD DUP9 PUSH1 0x2 ADD SLOAD DUP14 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x2CAA JUMPI PUSH2 0x2CAA PUSH2 0x584C JUMP JUMPDEST SWAP7 POP DUP4 DUP8 LT ISZERO PUSH2 0x2FAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x58CA JUMP JUMPDEST PUSH1 0x40 DUP10 ADD CALLDATALOAD DUP8 GT ISZERO PUSH2 0x2FF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4552525F4C494D49545F5052494345 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x2FFE DUP10 CALLDATALOAD DUP10 PUSH2 0x4564 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x301D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x58CA JUMP JUMPDEST PUSH2 0x302D PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3043 PUSH1 0x20 DUP13 ADD DUP13 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x3 DUP1 DUP10 ADD SLOAD SWAP1 DUP9 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP15 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP15 SWAP1 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH32 0xBDAFE88494B31FC7436FE7992B0F377E874287E841E62EED1AD77E84F3C5B171 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x30CC PUSH2 0x30C4 PUSH1 0x20 DUP13 ADD DUP13 PUSH2 0x54DD JUMP JUMPDEST CALLER DUP12 CALLDATALOAD PUSH2 0x490D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F1 DUP11 CALLDATALOAD PUSH2 0x1AAE DUP2 PUSH2 0xDA9 PUSH8 0xDE0B6B3A7640000 DUP16 PUSH1 0x3 JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD ISZERO PUSH2 0x318C JUMPI PUSH2 0x3135 DUP12 PUSH1 0x2 JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3117 SWAP2 SWAP1 PUSH2 0x54DD JUMP JUMPDEST DUP3 PUSH2 0x3125 PUSH1 0x20 DUP16 ADD DUP16 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x47A8 JUMP JUMPDEST PUSH32 0x6D11837F46CC09B011CF4AAE09FCADE046C020AAC088090AE4F77FF67B707972 PUSH2 0x3166 PUSH1 0x60 DUP14 ADD PUSH1 0x40 DUP15 ADD PUSH2 0x54DD JUMP JUMPDEST PUSH2 0x3173 PUSH1 0x20 DUP15 ADD DUP15 PUSH2 0x54DD JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x3183 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0x31A6 PUSH2 0x319F PUSH1 0x40 DUP14 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x54DD JUMP JUMPDEST CALLER DUP12 PUSH2 0x41DC JUMP JUMPDEST POP POP POP POP POP POP POP PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x31CD PUSH2 0x27D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31EB JUMPI PUSH2 0x31EB PUSH2 0x5513 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3214 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3233 JUMPI PUSH2 0x3233 PUSH2 0x5513 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x325C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x29E6 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x327D JUMPI PUSH2 0x327D PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3297 JUMPI PUSH2 0x3297 PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x32CD JUMPI PUSH2 0x32CD PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3308 JUMPI PUSH2 0x3308 PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x331D DUP2 PUSH2 0x587B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3262 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x334D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3383 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x572D JUMP JUMPDEST PUSH2 0x3393 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33A9 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x33F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B73737BA1039BBB0B81039B0B6B2903A37B5B2B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x60 DUP4 ADD CALLDATALOAD ISZERO DUP1 PUSH2 0x3421 JUMPI POP PUSH2 0x3419 PUSH2 0x2710 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD CALLDATALOAD LT ISZERO JUMPDEST PUSH2 0x3466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6E73756D655377617046656520746F6F206C6F77 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x3479 PUSH1 0xA PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD CALLDATALOAD GT ISZERO PUSH2 0x34C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x86DEDCE6EADACAA6EEC2E08CCACA40E8DEDE40D0D2CED PUSH1 0x4B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x34D1 DUP5 PUSH1 0x0 PUSH2 0x2ACC JUMP JUMPDEST PUSH2 0x34DC DUP5 PUSH1 0x1 PUSH2 0x2ACC JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 PUSH2 0x34EE PUSH1 0x20 DUP9 ADD DUP9 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 POP PUSH1 0xD DUP2 DUP8 PUSH1 0x1 PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3524 SWAP2 SWAP1 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x3563 DUP2 PUSH1 0x3 ADD SLOAD PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD CALLDATALOAD GT ISZERO PUSH2 0x35AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552525F4D41585F4F55545F524154494F PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D6 DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x2 ADD SLOAD DUP11 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x2CAA JUMPI PUSH2 0x2CAA PUSH2 0x584C JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD DUP2 GT ISZERO PUSH2 0x3622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4552525F4241445F4C494D49545F5052494345 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x2 ADD SLOAD DUP2 MSTORE POP SWAP1 POP PUSH2 0x3683 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x3696 DUP3 PUSH1 0x20 DUP12 ADD CALLDATALOAD PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH2 0x199D JUMP JUMPDEST SWAP2 SWAP10 POP SWAP4 POP SWAP1 POP PUSH2 0x36AB PUSH1 0x5 PUSH1 0x0 DUP13 DUP2 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x36BC PUSH1 0x20 DUP15 ADD DUP15 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x36FA PUSH1 0x6 PUSH1 0x0 DUP13 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x2E0F JUMPI PUSH2 0x2E0F PUSH2 0x584C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 PUSH2 0x370B PUSH1 0x20 DUP15 ADD DUP15 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x53A9DC73D01196A9C660D761BC5EC77B945340A34B5B52E510760AF2DAB1C0F1 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD DUP15 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x3777 JUMPI PUSH2 0x3777 PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x378A SWAP2 SWAP1 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP9 CALLDATALOAD DUP9 GT ISZERO PUSH2 0x37FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x22A9292FA624A6A4AA2FA4A7 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x380C DUP7 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0x480B JUMP JUMPDEST PUSH1 0x3 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP6 ADD SLOAD PUSH2 0x3824 SWAP1 DUP11 PUSH1 0x1 PUSH2 0x30E7 JUMP JUMPDEST DUP6 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3856 DUP7 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x2 ADD SLOAD DUP8 PUSH1 0x3 ADD SLOAD DUP9 PUSH1 0x2 ADD SLOAD DUP14 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0x2CAA JUMPI PUSH2 0x2CAA PUSH2 0x584C JUMP JUMPDEST SWAP7 POP DUP4 DUP8 LT ISZERO PUSH2 0x3878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x58CA JUMP JUMPDEST PUSH1 0x40 DUP10 ADD CALLDATALOAD DUP8 GT ISZERO PUSH2 0x38BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4552525F4C494D49545F5052494345 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x38CC DUP9 PUSH1 0x20 DUP12 ADD CALLDATALOAD PUSH2 0x4564 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x38EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x58CA JUMP JUMPDEST PUSH2 0x38FB PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3911 PUSH1 0x20 DUP13 ADD DUP13 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH32 0xBDAFE88494B31FC7436FE7992B0F377E874287E841E62EED1AD77E84F3C5B171 DUP12 DUP14 PUSH1 0x1 PUSH1 0x20 MUL ADD CALLDATALOAD TIMESTAMP DUP13 PUSH1 0x3 ADD SLOAD DUP13 PUSH1 0x3 ADD SLOAD DUP16 PUSH1 0x40 MLOAD PUSH2 0x3986 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x39A5 PUSH2 0x399E PUSH1 0x20 DUP13 ADD DUP13 PUSH2 0x54DD JUMP JUMPDEST CALLER DUP11 PUSH2 0x490D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C3 DUP10 PUSH2 0x1AAE DUP2 PUSH2 0xDA9 PUSH8 0xDE0B6B3A7640000 DUP16 PUSH1 0x3 PUSH2 0x30E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD ISZERO PUSH2 0x3A31 JUMPI PUSH2 0x39DA DUP12 PUSH1 0x2 PUSH2 0x3104 JUMP JUMPDEST PUSH32 0x6D11837F46CC09B011CF4AAE09FCADE046C020AAC088090AE4F77FF67B707972 PUSH2 0x3A0B PUSH1 0x60 DUP14 ADD PUSH1 0x40 DUP15 ADD PUSH2 0x54DD JUMP JUMPDEST PUSH2 0x3A18 PUSH1 0x20 DUP15 ADD DUP15 PUSH2 0x54DD JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x3A28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0x31A6 PUSH2 0x3A44 PUSH1 0x40 DUP14 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x54DD JUMP JUMPDEST CALLER PUSH1 0x20 DUP14 ADD CALLDATALOAD PUSH2 0x41DC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3A60 DUP10 PUSH2 0x3CA9 JUMP JUMPDEST PUSH2 0x3A69 DUP9 PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 DUP2 DUP2 MSTORE DUP6 DUP4 KECCAK256 PUSH1 0x3 DUP1 DUP3 ADD SLOAD DUP8 MSTORE PUSH1 0x2 SWAP2 DUP3 ADD SLOAD DUP4 DUP9 ADD MSTORE SWAP5 DUP16 AND DUP1 DUP6 MSTORE DUP4 DUP4 MSTORE DUP8 DUP6 KECCAK256 SWAP6 DUP7 ADD SLOAD SWAP8 DUP8 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP6 DUP4 MSTORE MSTORE SWAP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 PUSH2 0x3AEE PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x17B3 DUP4 DUP12 DUP12 PUSH2 0x199D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2821 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x3B4D SWAP1 DUP4 PUSH2 0x480B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP1 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5944 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH2 0xA73 PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x3BCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH2 0x3BD4 DUP3 PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xE SLOAD PUSH2 0x9FE SWAP1 DUP3 SWAP1 PUSH2 0x4564 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x3C24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x56D3 JUMP JUMPDEST PUSH2 0x3C2D DUP3 PUSH2 0x3CA9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x9 SLOAD PUSH2 0x1938 SWAP2 SWAP1 DUP6 PUSH2 0x485D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3D01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x11549497D393D517D093D55391 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D11 DUP8 DUP8 PUSH2 0x4564 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3D1F DUP7 DUP7 PUSH2 0x4564 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3D2D DUP4 DUP4 PUSH2 0x4564 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3D76 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A8B PUSH8 0xDE0B6B3A7640000 DUP10 PUSH1 0x0 SLOAD PUSH2 0x3D55 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x3D62 SWAP2 SWAP1 PUSH2 0x57A9 JUMP JUMPDEST PUSH2 0x3D6C SWAP2 SWAP1 PUSH2 0x57A9 JUMP JUMPDEST PUSH2 0x1AAE SWAP2 SWAP1 PUSH2 0x57A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D82 DUP3 DUP3 PUSH2 0x4087 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3DE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x22A9292FA727AA2FA1A7A72A2927A62622A9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3E3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x11549497D254D7D093D55391 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3E89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11549497D254D7D19253905312569151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x2 GT PUSH2 0x3ECC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4552525F4D41585F544F4B454E53 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP6 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x60 DUP8 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP1 DUP5 MSTORE PUSH1 0xD SWAP1 SWAP5 MSTORE SWAP8 DUP3 KECCAK256 SWAP7 MLOAD DUP8 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP8 SSTORE SWAP3 MLOAD DUP7 DUP7 ADD SSTORE SWAP2 MLOAD PUSH1 0x2 DUP7 ADD SSTORE SWAP5 MLOAD PUSH1 0x3 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x3F79 DUP4 DUP4 DUP4 PUSH2 0x4AF2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH2 0x3FBF PUSH2 0x3FBA PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH2 0x570E JUMP JUMPDEST PUSH2 0x48FA JUMP JUMPDEST PUSH2 0x3FDB CALLER PUSH2 0x3FD6 PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH2 0x570E JUMP JUMPDEST PUSH2 0x4903 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 LT ISZERO PUSH2 0x4030 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F504F4F4C5F414D4F554E545F494E5F544F4F5F4C4F57000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x403B DUP3 PUSH1 0x2 PUSH2 0x570E JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x4049 DUP5 DUP5 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4057 DUP3 DUP7 PUSH2 0x4564 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x406D PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x407B DUP3 DUP10 PUSH2 0x4087 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4094 DUP4 DUP6 PUSH2 0x570E JUMP JUMPDEST SWAP1 POP DUP4 ISZERO DUP1 PUSH2 0x40AB JUMPI POP DUP3 PUSH2 0x40A9 DUP6 DUP4 PUSH2 0x5795 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x40EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4D554C5F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40FF PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH2 0x4109 SWAP1 DUP4 PUSH2 0x57A9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x414E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4D554C5F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4162 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x5795 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x417B DUP6 DUP6 PUSH2 0x4D11 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 ISZERO PUSH2 0x41C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552525F5355425F554E444552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1DC3 DUP3 DUP3 PUSH2 0x4D48 JUMP JUMPDEST PUSH2 0x3D01 DUP2 PUSH2 0x4D53 JUMP JUMPDEST PUSH2 0x3F79 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x47A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x424F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x11549497D25394D551919250D251539517D09053 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4272 SWAP1 DUP3 PUSH2 0x416C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x42A1 SWAP1 DUP3 PUSH2 0x480B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x42F5 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 MLOAD PUSH1 0x0 SWAP1 DUP7 SWAP1 DUP3 SWAP1 PUSH2 0x4356 JUMPI PUSH2 0x4356 PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP3 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xBCA0D601C32979EEBAC4E8CD06375B6E45D39AF80FC06A33F366425B450DFB69 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x43B3 JUMPI PUSH2 0x43B3 PUSH2 0x584C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP9 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP5 DUP9 ADD MLOAD PUSH1 0x4 DUP1 SLOAD SWAP2 DUP4 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP7 MLOAD AND DUP9 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR DUP4 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5E3E722DBD3B6B8071B78568AC80CD0E8FF92E4FB3024E755D504D8F7C2F6F09 SWAP3 PUSH2 0x4467 SWAP3 CALLER SWAP3 PUSH2 0x5828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0xF DUP1 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0xFF SWAP2 DIV AND SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x44C6 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4087 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44D4 DUP7 DUP4 PUSH2 0x480B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44E2 DUP3 DUP9 PUSH2 0x4564 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44F8 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4506 DUP3 DUP10 PUSH2 0x4087 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x4559 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F544F4B454E5F414D4F554E545F494E5F544F4F5F4C4F570000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x1682 PUSH1 0x2 DUP3 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x45A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4552525F4449565F5A45524F PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B6 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x570E JUMP JUMPDEST SWAP1 POP DUP4 ISZERO DUP1 PUSH2 0x45D5 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x45D3 DUP6 DUP4 PUSH2 0x5795 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x4614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11549497D1125597D253951154939053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4621 PUSH1 0x2 DUP6 PUSH2 0x5795 JUMP JUMPDEST PUSH2 0x462B SWAP1 DUP4 PUSH2 0x57A9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11549497D1125597D253951154939053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4162 DUP6 DUP4 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 LT ISZERO PUSH2 0x46C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4552525F42504F575F424153455F544F4F5F4C4F57 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x1 PUSH2 0x46DC PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 PUSH2 0x570E JUMP JUMPDEST PUSH2 0x46E6 SWAP2 SWAP1 PUSH2 0x58B3 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x472E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x8AA4A4BE84A09EAEBE8482A68ABEA89E9EBE90928E9 PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4739 DUP4 PUSH2 0x4E1F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4747 DUP5 DUP4 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x475D DUP7 PUSH2 0x4758 DUP6 PUSH2 0x4E3D JUMP JUMPDEST PUSH2 0x4E51 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x476E JUMPI SWAP3 POP PUSH2 0xA5A SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4791 DUP8 DUP5 PUSH2 0x478C PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST PUSH2 0x4EC5 JUMP JUMPDEST SWAP1 POP PUSH2 0x479D DUP3 DUP3 PUSH2 0x4087 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x3F79 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x4FB5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4818 DUP4 DUP6 PUSH2 0x57A9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F4144445F4F564552464C4F57 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x486A DUP5 DUP5 PUSH2 0x480B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4878 DUP3 DUP7 PUSH2 0x4564 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x488E DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x489C DUP3 DUP10 PUSH2 0x4087 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x48EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F504F4F4C5F414D4F554E545F4F55545F544F4F5F4C4F570000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x407B DUP2 PUSH1 0x2 PUSH2 0x570E JUMP JUMPDEST PUSH2 0x3D01 DUP2 PUSH2 0x5087 JUMP JUMPDEST PUSH2 0x1DC3 DUP3 DUP3 PUSH2 0x50F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4954 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4978 SWAP2 SWAP1 PUSH2 0x5862 JUMP JUMPDEST SWAP1 POP PUSH2 0x498F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 ADDRESS DUP6 PUSH2 0x5101 JUMP JUMPDEST PUSH2 0x4999 DUP3 DUP3 PUSH2 0x57A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A01 SWAP2 SWAP1 PUSH2 0x5862 JUMP JUMPDEST LT ISZERO PUSH2 0x4A4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E7420697320746F6F206C6F77000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A62 DUP6 DUP5 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A70 DUP3 DUP8 PUSH2 0x4564 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A86 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A94 DUP3 DUP9 PUSH2 0x4087 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x4AE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F544F4B454E5F414D4F554E545F4F55545F544F4F5F4C4F5700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x407B PUSH1 0x2 DUP3 PUSH2 0x5795 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x4B3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x11549497D3525397D5D15251D215 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x4B4E PUSH8 0xDE0B6B3A7640000 PUSH1 0x32 PUSH2 0x570E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x4B8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x11549497D3505617D5D15251D215 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x4BA5 PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5795 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x4BE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4552525F4D494E5F42414C414E4345 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 DUP3 GT ISZERO PUSH2 0x4C82 JUMPI PUSH2 0x4C1F PUSH1 0xE SLOAD PUSH2 0x4C1A DUP5 DUP5 PUSH2 0x416C JUMP JUMPDEST PUSH2 0x480B JUMP JUMPDEST PUSH1 0xE SSTORE PUSH2 0x4C35 PUSH8 0xDE0B6B3A7640000 PUSH1 0x32 PUSH2 0x570E JUMP JUMPDEST PUSH1 0xE SLOAD GT ISZERO PUSH2 0x4C7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x11549497D3505617D513D5105317D5D15251D215 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH2 0x4C9E JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x4C9E JUMPI PUSH2 0x4C9A PUSH1 0xE SLOAD PUSH2 0x1AAE DUP4 DUP6 PUSH2 0x416C JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 ADD DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE DUP1 DUP5 GT ISZERO PUSH2 0x4CE7 JUMPI PUSH2 0x4CE2 DUP6 CALLER PUSH2 0x4CDD DUP8 DUP6 PUSH2 0x416C JUMP JUMPDEST PUSH2 0x490D JUMP JUMPDEST PUSH2 0x4D0A JUMP JUMPDEST DUP1 DUP5 LT ISZERO PUSH2 0x4D0A JUMPI PUSH1 0x0 PUSH2 0x4CFB DUP3 DUP7 PUSH2 0x416C JUMP JUMPDEST SWAP1 POP PUSH2 0x4D08 DUP7 CALLER DUP4 PUSH2 0x41DC JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 LT PUSH2 0x4D30 JUMPI PUSH2 0x4D25 DUP4 DUP6 PUSH2 0x58B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP SWAP2 POP PUSH2 0x4D41 JUMP JUMPDEST PUSH2 0x4D3A DUP5 DUP5 PUSH2 0x58B3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC3 DUP3 ADDRESS DUP4 PUSH2 0x41F0 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x4DA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x11549497D25394D551919250D251539517D09053 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4DC3 SWAP1 DUP3 PUSH2 0x416C JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x9 SLOAD PUSH2 0x4DE0 SWAP1 DUP3 PUSH2 0x416C JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 ADDRESS SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4E33 DUP4 PUSH2 0x4E3D JUMP JUMPDEST PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x570E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5A PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x5795 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 PUSH2 0x4E60 PUSH1 0x2 DUP6 PUSH2 0x58F3 JUMP JUMPDEST PUSH2 0x4E72 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x4E74 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x4E81 PUSH1 0x2 DUP6 PUSH2 0x5795 JUMP JUMPDEST SWAP4 POP JUMPDEST DUP4 ISZERO PUSH2 0x1938 JUMPI PUSH2 0x4E94 DUP3 DUP4 PUSH2 0x4087 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EA1 PUSH1 0x2 DUP6 PUSH2 0x58F3 JUMP JUMPDEST ISZERO PUSH2 0x4EB3 JUMPI PUSH2 0x4EB0 DUP2 DUP4 PUSH2 0x4087 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x4EBE PUSH1 0x2 DUP6 PUSH2 0x5795 JUMP JUMPDEST SWAP4 POP PUSH2 0x4E84 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 DUP1 PUSH2 0x4EDC DUP8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4D11 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP1 PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP9 DUP5 LT PUSH2 0x4FA6 JUMPI PUSH1 0x0 PUSH2 0x4F0B PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x570E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x4F2B DUP11 PUSH2 0x4F26 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x416C JUMP JUMPDEST PUSH2 0x4D11 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x4F3D DUP8 PUSH2 0xDA9 DUP5 DUP13 PUSH2 0x4087 JUMP JUMPDEST SWAP7 POP PUSH2 0x4F49 DUP8 DUP5 PUSH2 0x4564 JUMP JUMPDEST SWAP7 POP DUP7 PUSH2 0x4F58 JUMPI POP POP POP PUSH2 0x4FA6 JUMP JUMPDEST DUP8 ISZERO PUSH2 0x4F62 JUMPI SWAP4 ISZERO SWAP4 JUMPDEST DUP1 ISZERO PUSH2 0x4F6C JUMPI SWAP4 ISZERO SWAP4 JUMPDEST DUP5 ISZERO PUSH2 0x4F83 JUMPI PUSH2 0x4F7C DUP7 DUP9 PUSH2 0x416C JUMP JUMPDEST SWAP6 POP PUSH2 0x4F90 JUMP JUMPDEST PUSH2 0x4F8D DUP7 DUP9 PUSH2 0x480B JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x4F9E SWAP1 PUSH2 0x587B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4EF0 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x500A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5122 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x3F79 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5028 SWAP2 SWAP1 PUSH2 0x57C1 JUMP JUMPDEST PUSH2 0x3F79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x99D JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x50A1 SWAP1 DUP3 PUSH2 0x480B JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x9 SLOAD PUSH2 0x50BE SWAP1 DUP3 PUSH2 0x480B JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x4E14 JUMP JUMPDEST PUSH2 0x1DC3 ADDRESS DUP4 DUP4 PUSH2 0x41F0 JUMP JUMPDEST PUSH2 0x4A4F DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x47D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5828 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1938 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 DUP5 EXTCODESIZE PUSH2 0x517B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x5197 SWAP2 SWAP1 PUSH2 0x5907 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x51D4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x51D9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x479D DUP3 DUP3 DUP7 PUSH1 0x60 DUP4 ISZERO PUSH2 0x51F3 JUMPI POP DUP2 PUSH2 0x9FE JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x5203 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x5249 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5238 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5220 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4A4F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5268 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x521D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x52A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x52B1 DUP2 PUSH2 0x527C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x52C1 DUP2 PUSH2 0x527C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x52E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x52F0 DUP2 PUSH2 0x527C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x5317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x5322 DUP2 PUSH2 0x527C JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x5340 DUP2 PUSH2 0x527C JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x536D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2549 DUP2 PUSH2 0x537C JUMP JUMPDEST DUP1 PUSH1 0x40 DUP2 ADD DUP4 LT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP2 ADD DUP4 LT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x53D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x53DF DUP2 PUSH2 0x527C JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x53EF DUP2 PUSH2 0x527C JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x540C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x542F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x5444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP9 POP DUP1 SWAP8 POP POP POP POP PUSH2 0x545C PUSH1 0x60 DUP11 ADD PUSH2 0x538A JUMP JUMPDEST SWAP4 POP PUSH2 0x546A PUSH1 0x80 DUP11 ADD PUSH2 0x538A JUMP JUMPDEST SWAP3 POP PUSH2 0x5479 DUP11 PUSH1 0xA0 DUP12 ADD PUSH2 0x5395 JUMP JUMPDEST SWAP2 POP PUSH2 0x5488 DUP11 PUSH1 0xE0 DUP12 ADD PUSH2 0x53A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x54AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x54B8 DUP2 PUSH2 0x527C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x54C8 DUP2 PUSH2 0x527C JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9FE DUP2 PUSH2 0x527C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x550C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x553E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x1F DUP6 ADD SLT PUSH2 0x554D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5570 JUMPI PUSH2 0x5570 PUSH2 0x5513 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x80 DUP7 ADD DUP8 DUP2 GT ISZERO PUSH2 0x5585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x559F JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5587 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP2 CALLDATALOAD SWAP7 POP POP PUSH1 0xA0 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x55EE JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x55C9 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x55B5 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x561F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x55B5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP4 MSTORE DUP6 DUP3 ADD SWAP3 DUP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5656 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x563A JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP4 ADD DUP5 DUP2 GT ISZERO PUSH2 0x5687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 SWAP3 POP DUP5 PUSH1 0xE0 DUP6 ADD GT ISZERO PUSH2 0x569A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x56B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x56C3 DUP2 PUSH2 0x527C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x569A DUP2 PUSH2 0x527C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x4552525F5245454E545259 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5728 JUMPI PUSH2 0x5728 PUSH2 0x56F8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x11549497D393D517D19253905312569151 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x11549497D31253525517D3D555 PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x57A4 JUMPI PUSH2 0x57A4 PUSH2 0x577F JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x57BC JUMPI PUSH2 0x57BC PUSH2 0x56F8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9FE DUP2 PUSH2 0x537C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x4552525F4D494E5F464545 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x4552525F4D41585F464545 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x588F JUMPI PUSH2 0x588F PUSH2 0x56F8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9FE DUP2 PUSH2 0x527C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x58C5 JUMPI PUSH2 0x58C5 PUSH2 0x56F8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x8AA4A4BE9A82A890BE82A0A0A49EB PUSH1 0x8B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5902 JUMPI PUSH2 0x5902 PUSH2 0x577F JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5919 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x521D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID ISZERO 0xA8 0xCA PUSH4 0xE37B2CFF AND PUSH24 0xDF2B6B82D36FCF8A524228BD7A4B4D02D107C28C1E8A8C5B 0xE1 0xE5 0xEB 0xEC PUSH30 0x5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925A264697066 PUSH20 0x5822122049CF762B073C842E87B02787CA6EC527 STATICCALL MLOAD DUP12 0xEC 0x27 0xBF MLOAD DUP2 0x23 PUSH13 0x5993F2B3FF8464736F6C634300 ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "CALLVALUE",
      "path": "37"
    },
    "6": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "16": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "17": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "POP",
      "path": "37"
    },
    "18": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "21": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "LT",
      "path": "37"
    },
    "22": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41D"
    },
    "25": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "26": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "29": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "SHR",
      "path": "37"
    },
    "32": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "33": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x867378C5"
    },
    "38": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "39": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x22B"
    },
    "42": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "43": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "44": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xBF7DB236"
    },
    "49": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "50": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x130"
    },
    "53": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "54": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "55": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xD4CADF68"
    },
    "60": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "61": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xB8"
    },
    "64": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "65": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "66": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xEC093021"
    },
    "71": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "72": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x87"
    },
    "75": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "76": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "77": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xEC093021"
    },
    "82": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "83": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x924"
    },
    "86": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "87": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "88": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xF1B8A9B7"
    },
    "93": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "94": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x92C"
    },
    "97": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "98": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "99": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xF8B2CB4F"
    },
    "104": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "105": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x93F"
    },
    "108": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "109": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "110": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFDE924F7"
    },
    "115": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "116": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x952"
    },
    "119": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "120": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "121": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFF9B1850"
    },
    "126": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "127": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x964"
    },
    "130": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "131": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "134": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "135": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "136": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "137": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xD4CADF68"
    },
    "142": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "143": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8D0"
    },
    "146": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "147": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "148": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xD73DD623"
    },
    "153": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "154": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8D8"
    },
    "157": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "158": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "159": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xDD62ED3E"
    },
    "164": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "165": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8EB"
    },
    "168": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "169": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "170": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xE4A28A52"
    },
    "175": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "176": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4A4"
    },
    "179": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "180": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "183": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "184": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "185": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "186": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xC6580D12"
    },
    "191": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "192": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "196": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "197": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xC6580D12"
    },
    "202": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "203": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x892"
    },
    "206": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "207": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "208": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xC98A59CF"
    },
    "213": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "214": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x89A"
    },
    "217": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "218": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "219": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xCAA01148"
    },
    "224": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "225": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8AD"
    },
    "228": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "229": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "230": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xCC77828D"
    },
    "235": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "236": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8C0"
    },
    "239": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "240": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "241": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xCD2ED8FB"
    },
    "246": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "247": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8C8"
    },
    "250": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "251": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "254": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "255": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "256": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "257": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xBF7DB236"
    },
    "262": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "263": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x84C"
    },
    "266": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "267": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "268": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xC36596A6"
    },
    "273": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "274": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4F7"
    },
    "277": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "278": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "279": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xC421A3FC"
    },
    "284": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "285": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x862"
    },
    "288": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "289": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "290": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xC44A4283"
    },
    "295": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "296": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x88A"
    },
    "299": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "300": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "302": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "303": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "304": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "305": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "306": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xA3B3A16D"
    },
    "311": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "312": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1B3"
    },
    "315": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "316": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "317": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xB7B800A4"
    },
    "322": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "323": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x182"
    },
    "326": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "327": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "328": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xB7B800A4"
    },
    "333": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "334": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x817"
    },
    "337": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "338": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "339": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xBA019DAB"
    },
    "344": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "345": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x81F"
    },
    "348": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "349": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "350": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xBC063E1A"
    },
    "355": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "356": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x827"
    },
    "359": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "360": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "361": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xBC694EA2"
    },
    "366": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "367": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x82F"
    },
    "370": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "371": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "372": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xBE3BBD2E"
    },
    "377": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "378": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x837"
    },
    "381": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "382": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "384": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "385": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "386": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "387": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "388": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xA3B3A16D"
    },
    "393": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "394": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7E9"
    },
    "397": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "398": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "399": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xA9059CBB"
    },
    "404": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "405": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7FC"
    },
    "408": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "409": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "410": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xAB77A2DE"
    },
    "415": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "416": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x80F"
    },
    "419": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "420": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "421": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xB0E0D136"
    },
    "426": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "427": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x817"
    },
    "430": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "431": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "433": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "434": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "435": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "436": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "437": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x936C3477"
    },
    "442": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "443": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1FA"
    },
    "446": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "447": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "448": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x936C3477"
    },
    "453": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "454": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x79F"
    },
    "457": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "458": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "459": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x9381CD2B"
    },
    "464": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "465": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7A7"
    },
    "468": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "469": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "470": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x948D8CE6"
    },
    "475": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "476": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7AF"
    },
    "479": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "480": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "481": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x95D89B41"
    },
    "486": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "487": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7C2"
    },
    "490": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "491": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "492": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x992E2A92"
    },
    "497": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "498": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7E1"
    },
    "501": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "502": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "504": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "505": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "506": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "507": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "508": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x867378C5"
    },
    "513": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "514": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x75F"
    },
    "517": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "518": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "519": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x892CDF9E"
    },
    "524": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "525": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x767"
    },
    "528": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "529": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "530": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x8C28CBE8"
    },
    "535": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "536": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x77A"
    },
    "539": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "540": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "541": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x8D4E4083"
    },
    "546": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "547": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x78D"
    },
    "550": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "551": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "553": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "554": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "555": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "556": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "557": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x313CE567"
    },
    "562": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "563": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x331"
    },
    "566": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "567": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "568": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x5E123ADD"
    },
    "573": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "574": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2B9"
    },
    "577": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "578": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "579": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x76C7A3C7"
    },
    "584": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "585": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x288"
    },
    "588": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "589": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "590": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x76C7A3C7"
    },
    "595": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "596": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x713"
    },
    "599": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "600": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "601": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x7A284BE4"
    },
    "606": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "607": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x71B"
    },
    "610": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "611": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "612": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x7C5918B3"
    },
    "617": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "618": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x724"
    },
    "621": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "622": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "623": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x80CA7308"
    },
    "628": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "629": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x744"
    },
    "632": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "633": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "634": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x8329AB33"
    },
    "639": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "640": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x74C"
    },
    "643": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "644": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "646": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "647": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "648": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "649": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "650": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x5E123ADD"
    },
    "655": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "656": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6BC"
    },
    "659": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "660": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "661": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x638C9E95"
    },
    "666": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "667": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6C4"
    },
    "670": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "671": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "672": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x66188463"
    },
    "677": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "678": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6D7"
    },
    "681": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "682": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "683": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x70A08231"
    },
    "688": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "689": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6EA"
    },
    "692": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "693": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "695": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "696": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "697": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "698": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "699": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x430ED5D0"
    },
    "704": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "705": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x300"
    },
    "708": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "709": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "710": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x430ED5D0"
    },
    "715": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "716": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x632"
    },
    "719": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "720": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "721": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x458C3FB5"
    },
    "726": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "727": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x645"
    },
    "730": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "731": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "732": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x4DF947D0"
    },
    "737": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "738": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x656"
    },
    "741": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "742": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "743": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x51705CD0"
    },
    "748": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "749": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x667"
    },
    "752": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "753": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "754": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x5D1CA631"
    },
    "759": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "760": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B5"
    },
    "763": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "764": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "766": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "767": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "768": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "769": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "770": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x313CE567"
    },
    "775": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "776": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5E5"
    },
    "779": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "780": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "781": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x34E19907"
    },
    "786": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "787": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5FA"
    },
    "790": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "791": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "792": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x392E53CD"
    },
    "797": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "798": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x60D"
    },
    "801": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "802": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "803": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x3950B3FD"
    },
    "808": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "809": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x61F"
    },
    "812": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "813": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "815": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "816": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "817": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "818": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "819": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x18F9722A"
    },
    "824": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "825": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3B4"
    },
    "828": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "829": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "830": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x29B88A6A"
    },
    "835": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "836": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x383"
    },
    "839": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "840": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "841": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x29B88A6A"
    },
    "846": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "847": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x52C"
    },
    "850": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "851": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "852": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x2EEBD6AE"
    },
    "857": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "858": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x534"
    },
    "861": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "862": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "863": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x2F37B624"
    },
    "868": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "869": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56F"
    },
    "872": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "873": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "874": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x30062192"
    },
    "879": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "880": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x59B"
    },
    "883": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "884": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "885": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x3018205F"
    },
    "890": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "891": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5BB"
    },
    "894": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "895": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "897": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "898": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "899": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "900": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "901": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x18F9722A"
    },
    "906": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "907": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4E4"
    },
    "910": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "911": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "912": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x218B5382"
    },
    "917": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "918": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4F7"
    },
    "921": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "922": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "923": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x23B872DD"
    },
    "928": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "929": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x506"
    },
    "932": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "933": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "934": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x284E97A9"
    },
    "939": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "940": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x519"
    },
    "943": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "944": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "946": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "947": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "948": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "949": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "950": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x9EF3F5B"
    },
    "955": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "GT",
      "path": "37"
    },
    "956": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3F0"
    },
    "959": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "960": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "961": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x9EF3F5B"
    },
    "966": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "967": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4AC"
    },
    "970": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "971": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "972": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x12989260"
    },
    "977": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "978": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4C1"
    },
    "981": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "982": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "983": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x18160DDD"
    },
    "988": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "989": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4D4"
    },
    "992": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "993": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "994": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x189D00CA"
    },
    "999": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "1000": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4DC"
    },
    "1003": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1004": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1006": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1007": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1008": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1009": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1010": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x6FDDE03"
    },
    "1015": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "1016": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "1019": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1020": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1021": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x79492D4"
    },
    "1026": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "1027": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x460"
    },
    "1030": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1031": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1032": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x95EA7B3"
    },
    "1037": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "1038": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x481"
    },
    "1041": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1042": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1043": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x9A3BBE4"
    },
    "1048": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "EQ",
      "path": "37"
    },
    "1049": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4A4"
    },
    "1052": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1053": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1054": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1056": {
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1057": {
      "first_revert": true,
      "fn": null,
      "offset": [
        721,
        41021
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1058": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1059": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 0,
      "value": "0x40"
    },
    "1061": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1062": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1063": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1064": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1065": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "ADD",
      "path": "38"
    },
    "1066": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1067": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1068": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1069": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x10"
    },
    "1071": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1072": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1073": {
      "op": "PUSH16",
      "value": "0x27B1B2B0B7102837B7B6102A37B5B2B7"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1095": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1096": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "ADD",
      "path": "38"
    },
    "1097": {
      "fn": "BToken.name",
      "offset": [
        3145,
        3170
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1098": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1099": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1101": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1102": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x457"
    },
    "1105": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1106": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1107": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x5249"
    },
    "1110": {
      "fn": "BToken.name",
      "jump": "i",
      "offset": [
        3081,
        3177
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1111": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1112": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1114": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1115": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1116": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1117": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "SUB",
      "path": "38"
    },
    "1118": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1119": {
      "fn": "BToken.name",
      "offset": [
        3081,
        3177
      ],
      "op": "RETURN",
      "path": "38"
    },
    "1120": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1121": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "1124": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x46E"
    },
    "1127": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1128": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1130": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5291"
    },
    "1133": {
      "fn": "BPool.getSpotPrice",
      "jump": "i",
      "offset": [
        19181,
        19759
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1134": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1135": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x977"
    },
    "1138": {
      "fn": "BPool.getSpotPrice",
      "jump": "i",
      "offset": [
        19181,
        19759
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1139": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1140": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1142": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1143": {
      "op": "SWAP1"
    },
    "1144": {
      "op": "DUP2"
    },
    "1145": {
      "op": "MSTORE"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1148": {
      "op": "ADD"
    },
    "1149": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x457"
    },
    "1152": {
      "op": "JUMP"
    },
    "1153": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1154": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x494"
    },
    "1157": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x48F"
    },
    "1160": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "1161": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1163": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x52D2"
    },
    "1166": {
      "fn": "BToken.approve",
      "jump": "i",
      "offset": [
        3680,
        3860
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1167": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1168": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA05"
    },
    "1171": {
      "fn": "BToken.approve",
      "jump": "i",
      "offset": [
        3680,
        3860
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1172": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1173": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1175": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1176": {
      "op": "SWAP1"
    },
    "1177": {
      "op": "ISZERO"
    },
    "1178": {
      "op": "ISZERO"
    },
    "1179": {
      "op": "DUP2"
    },
    "1180": {
      "op": "MSTORE"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1183": {
      "op": "ADD"
    },
    "1184": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x457"
    },
    "1187": {
      "op": "JUMP"
    },
    "1188": {
      "offset": [
        1279,
        1329
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1189": {
      "fn": "BToken.approve",
      "offset": [
        1279,
        1329
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "1192": {
      "fn": "BToken.approve",
      "offset": [
        1279,
        1329
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA60"
    },
    "1195": {
      "fn": "BToken.approve",
      "jump": "i",
      "offset": [
        1279,
        1329
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1196": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1197": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4BF"
    },
    "1200": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4BA"
    },
    "1203": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1204": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1206": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x52FE"
    },
    "1209": {
      "fn": "BPool.setup",
      "jump": "i",
      "offset": [
        6713,
        8109
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1210": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1211": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xA76"
    },
    "1214": {
      "fn": "BPool.setup",
      "jump": "i",
      "offset": [
        6713,
        8109
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1215": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1216": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "STOP",
      "path": "37"
    },
    "1217": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1218": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "1221": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4CF"
    },
    "1224": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1225": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1227": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x535A"
    },
    "1230": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        34390,
        36922
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1231": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1232": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCA9"
    },
    "1235": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        34390,
        36922
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1236": {
      "fn": "BToken.totalSupply",
      "offset": [
        3588,
        3674
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1237": {
      "fn": "BToken.totalSupply",
      "offset": [
        3655,
        3667
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 1,
      "value": "0x9"
    },
    "1239": {
      "fn": "BToken.totalSupply",
      "offset": [
        3655,
        3667
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "1240": {
      "fn": "BToken.totalSupply",
      "offset": [
        3588,
        3674
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x473"
    },
    "1243": {
      "fn": "BToken.totalSupply",
      "offset": [
        3588,
        3674
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1244": {
      "offset": [
        1569,
        1621
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1245": {
      "fn": "BToken.totalSupply",
      "offset": [
        1569,
        1621
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "1248": {
      "fn": "BToken.totalSupply",
      "offset": [
        1569,
        1621
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x10C0"
    },
    "1251": {
      "fn": "BToken.totalSupply",
      "jump": "i",
      "offset": [
        1569,
        1621
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1252": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1253": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4BF"
    },
    "1256": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4F2"
    },
    "1259": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1260": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1262": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x52D2"
    },
    "1265": {
      "fn": "BPool.updatePublishMarketFee",
      "jump": "i",
      "offset": [
        12838,
        13413
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1266": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1267": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10D7"
    },
    "1270": {
      "fn": "BPool.updatePublishMarketFee",
      "jump": "i",
      "offset": [
        12838,
        13413
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1271": {
      "offset": [
        1172,
        1217
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1272": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        1172,
        1217
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "1275": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "1284": {
      "offset": [
        1172,
        1217
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1285": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        1172,
        1217
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1286": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1287": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x494"
    },
    "1290": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x514"
    },
    "1293": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "1294": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1296": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x5291"
    },
    "1299": {
      "fn": "BToken.transferFrom",
      "jump": "i",
      "offset": [
        4650,
        5220
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1300": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1301": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x124F"
    },
    "1304": {
      "fn": "BToken.transferFrom",
      "jump": "i",
      "offset": [
        4650,
        5220
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1305": {
      "fn": "BPool.initialize",
      "offset": [
        4305,
        5272
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1306": {
      "fn": "BPool.initialize",
      "offset": [
        4305,
        5272
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x494"
    },
    "1309": {
      "fn": "BPool.initialize",
      "offset": [
        4305,
        5272
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x527"
    },
    "1312": {
      "fn": "BPool.initialize",
      "offset": [
        4305,
        5272
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1313": {
      "fn": "BPool.initialize",
      "offset": [
        4305,
        5272
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1315": {
      "fn": "BPool.initialize",
      "offset": [
        4305,
        5272
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x53B7"
    },
    "1318": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4305,
        5272
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1319": {
      "fn": "BPool.initialize",
      "offset": [
        4305,
        5272
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1320": {
      "fn": "BPool.initialize",
      "offset": [
        4305,
        5272
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x139E"
    },
    "1323": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4305,
        5272
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1324": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1409,
        1534
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1325": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1409,
        1534
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x473"
    },
    "1328": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1409,
        1534
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x168F"
    },
    "1331": {
      "fn": "BMath.getOPCFee",
      "jump": "i",
      "offset": [
        1409,
        1534
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1332": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1333": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x547"
    },
    "1336": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x542"
    },
    "1339": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1340": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1342": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5497"
    },
    "1345": {
      "fn": "BPool.getAmountOutExactIn",
      "jump": "i",
      "offset": [
        21832,
        22970
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1346": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1347": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1709"
    },
    "1350": {
      "fn": "BPool.getAmountOutExactIn",
      "jump": "i",
      "offset": [
        21832,
        22970
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1351": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1352": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1354": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1355": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1356": {
      "op": "SWAP6"
    },
    "1357": {
      "op": "DUP7"
    },
    "1358": {
      "op": "MSTORE"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1361": {
      "op": "DUP7"
    },
    "1362": {
      "op": "ADD"
    },
    "1363": {
      "op": "SWAP5"
    },
    "1364": {
      "op": "SWAP1"
    },
    "1365": {
      "op": "SWAP5"
    },
    "1366": {
      "op": "MSTORE"
    },
    "1367": {
      "op": "SWAP3"
    },
    "1368": {
      "op": "DUP5"
    },
    "1369": {
      "op": "ADD"
    },
    "1370": {
      "op": "SWAP2"
    },
    "1371": {
      "op": "SWAP1"
    },
    "1372": {
      "op": "SWAP2"
    },
    "1373": {
      "op": "MSTORE"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1376": {
      "op": "DUP4"
    },
    "1377": {
      "op": "ADD"
    },
    "1378": {
      "op": "MSTORE"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1381": {
      "op": "DUP3"
    },
    "1382": {
      "op": "ADD"
    },
    "1383": {
      "op": "MSTORE"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1386": {
      "op": "ADD"
    },
    "1387": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x457"
    },
    "1390": {
      "op": "JUMP"
    },
    "1391": {
      "fn": "BPool.isBound",
      "offset": [
        8708,
        8806
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1392": {
      "fn": "BPool.isBound",
      "offset": [
        8708,
        8806
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x494"
    },
    "1395": {
      "fn": "BPool.isBound",
      "offset": [
        8708,
        8806
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x57D"
    },
    "1398": {
      "fn": "BPool.isBound",
      "offset": [
        8708,
        8806
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1399": {
      "fn": "BPool.isBound",
      "offset": [
        8708,
        8806
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1401": {
      "fn": "BPool.isBound",
      "offset": [
        8708,
        8806
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "1404": {
      "fn": "BPool.isBound",
      "jump": "i",
      "offset": [
        8708,
        8806
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1405": {
      "fn": "BPool.isBound",
      "offset": [
        8708,
        8806
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1412": {
      "op": "SHL"
    },
    "1413": {
      "op": "SUB"
    },
    "1414": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8793
      ],
      "op": "AND",
      "path": "37",
      "statement": 2
    },
    "1415": {
      "fn": "BPool.isBound",
      "offset": [
        8759,
        8763
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1417": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8793
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1418": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8793
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1419": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8793
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1420": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8790
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "1422": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8793
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1424": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8793
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1425": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8793
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1427": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8793
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1428": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8793
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "1429": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8799
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1430": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8799
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "1432": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8799
      ],
      "op": "AND",
      "path": "37"
    },
    "1433": {
      "fn": "BPool.isBound",
      "offset": [
        8782,
        8799
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1434": {
      "fn": "BPool.isBound",
      "offset": [
        8708,
        8806
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1435": {
      "offset": [
        1249,
        1294
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1436": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x473"
    },
    "1439": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5A9"
    },
    "1442": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "1443": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "1445": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x54DD"
    },
    "1448": {
      "fn": "BPool.isBound",
      "jump": "i",
      "offset": [
        1249,
        1294
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1449": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1450": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x5"
    },
    "1452": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "1454": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1455": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1457": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1458": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1459": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1460": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1462": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1463": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "KECCAK256",
      "path": "35"
    },
    "1464": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "1465": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1466": {
      "fn": "BPool.isBound",
      "offset": [
        1249,
        1294
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1467": {
      "fn": "BPool.getController",
      "offset": [
        15261,
        15353
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1468": {
      "fn": "BPool.getController",
      "offset": [
        15335,
        15346
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 3,
      "value": "0xA"
    },
    "1470": {
      "fn": "BPool.getController",
      "offset": [
        15335,
        15346
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1471": {
      "fn": "BPool.getController",
      "offset": [
        15335,
        15346
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "1474": {
      "fn": "BPool.getController",
      "offset": [
        15335,
        15346
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1475": {
      "fn": "BPool.getController",
      "offset": [
        15335,
        15346
      ],
      "op": "DIV",
      "path": "37"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "op": "SUB"
    },
    "1484": {
      "fn": "BPool.getController",
      "offset": [
        15335,
        15346
      ],
      "op": "AND",
      "path": "37"
    },
    "1485": {
      "fn": "BPool.getController",
      "offset": [
        15261,
        15353
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1486": {
      "fn": "BPool.getController",
      "offset": [
        15261,
        15353
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1488": {
      "fn": "BPool.getController",
      "offset": [
        15261,
        15353
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1495": {
      "op": "SHL"
    },
    "1496": {
      "op": "SUB"
    },
    "1497": {
      "op": "SWAP1"
    },
    "1498": {
      "op": "SWAP2"
    },
    "1499": {
      "op": "AND"
    },
    "1500": {
      "op": "DUP2"
    },
    "1501": {
      "op": "MSTORE"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "fn": "BPool.getController",
      "offset": [
        15261,
        15353
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x457"
    },
    "1508": {
      "op": "JUMP"
    },
    "1509": {
      "fn": "BToken.decimals",
      "offset": [
        3274,
        3349
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1510": {
      "fn": "BToken.decimals",
      "offset": [
        3340,
        3342
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 4,
      "value": "0x12"
    },
    "1512": {
      "fn": "BToken.decimals",
      "offset": [
        3274,
        3349
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1513": {
      "fn": "BToken.decimals",
      "offset": [
        3274,
        3349
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1515": {
      "fn": "BToken.decimals",
      "offset": [
        3274,
        3349
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1518": {
      "op": "SWAP1"
    },
    "1519": {
      "op": "SWAP2"
    },
    "1520": {
      "op": "AND"
    },
    "1521": {
      "op": "DUP2"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1525": {
      "op": "ADD"
    },
    "1526": {
      "fn": "BToken.decimals",
      "offset": [
        3274,
        3349
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x457"
    },
    "1529": {
      "op": "JUMP"
    },
    "1530": {
      "fn": "BPool.setSwapFee",
      "offset": [
        15960,
        16259
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1531": {
      "fn": "BPool.setSwapFee",
      "offset": [
        15960,
        16259
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4BF"
    },
    "1534": {
      "fn": "BPool.setSwapFee",
      "offset": [
        15960,
        16259
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x608"
    },
    "1537": {
      "fn": "BPool.setSwapFee",
      "offset": [
        15960,
        16259
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1538": {
      "fn": "BPool.setSwapFee",
      "offset": [
        15960,
        16259
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1540": {
      "fn": "BPool.setSwapFee",
      "offset": [
        15960,
        16259
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54FA"
    },
    "1543": {
      "fn": "BPool.setSwapFee",
      "jump": "i",
      "offset": [
        15960,
        16259
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1544": {
      "fn": "BPool.setSwapFee",
      "offset": [
        15960,
        16259
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1545": {
      "fn": "BPool.setSwapFee",
      "offset": [
        15960,
        16259
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x17E1"
    },
    "1548": {
      "fn": "BPool.setSwapFee",
      "jump": "i",
      "offset": [
        15960,
        16259
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1549": {
      "fn": "BPool.isInitialized",
      "offset": [
        4049,
        4138
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1550": {
      "fn": "BPool.isInitialized",
      "offset": [
        4120,
        4131
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 5,
      "value": "0xF"
    },
    "1552": {
      "fn": "BPool.isInitialized",
      "offset": [
        4120,
        4131
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1557": {
      "op": "SHL"
    },
    "1558": {
      "fn": "BPool.isInitialized",
      "offset": [
        4120,
        4131
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1559": {
      "fn": "BPool.isInitialized",
      "offset": [
        4120,
        4131
      ],
      "op": "DIV",
      "path": "37"
    },
    "1560": {
      "fn": "BPool.isInitialized",
      "offset": [
        4120,
        4131
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "1562": {
      "fn": "BPool.isInitialized",
      "offset": [
        4120,
        4131
      ],
      "op": "AND",
      "path": "37"
    },
    "1563": {
      "fn": "BPool.isInitialized",
      "offset": [
        4049,
        4138
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x494"
    },
    "1566": {
      "fn": "BPool.isInitialized",
      "offset": [
        4049,
        4138
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1567": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39019,
        39396
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1568": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39019,
        39396
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "1571": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39019,
        39396
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x62D"
    },
    "1574": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39019,
        39396
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1575": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39019,
        39396
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1577": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39019,
        39396
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x52D2"
    },
    "1580": {
      "fn": "BPool.calcPoolOutSingleIn",
      "jump": "i",
      "offset": [
        39019,
        39396
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1581": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39019,
        39396
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1582": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39019,
        39396
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x18DB"
    },
    "1585": {
      "fn": "BPool.calcPoolOutSingleIn",
      "jump": "i",
      "offset": [
        39019,
        39396
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1586": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37170,
        37552
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1587": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37170,
        37552
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "1590": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37170,
        37552
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x640"
    },
    "1593": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37170,
        37552
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1594": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37170,
        37552
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1596": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37170,
        37552
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x52D2"
    },
    "1599": {
      "fn": "BPool.calcSingleOutPoolIn",
      "jump": "i",
      "offset": [
        37170,
        37552
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1600": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37170,
        37552
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1601": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37170,
        37552
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1940"
    },
    "1604": {
      "fn": "BPool.calcSingleOutPoolIn",
      "jump": "i",
      "offset": [
        37170,
        37552
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1605": {
      "fn": "BPool.getDatatokenAddress",
      "offset": [
        15457,
        15561
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1606": {
      "fn": "BPool.getDatatokenAddress",
      "offset": [
        15537,
        15554
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 6,
      "value": "0x3"
    },
    "1608": {
      "fn": "BPool.getDatatokenAddress",
      "offset": [
        15537,
        15554
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "fn": "BPool.getDatatokenAddress",
      "offset": [
        15537,
        15554
      ],
      "op": "AND",
      "path": "37"
    },
    "1618": {
      "fn": "BPool.getDatatokenAddress",
      "offset": [
        15457,
        15561
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5CD"
    },
    "1621": {
      "fn": "BPool.getDatatokenAddress",
      "offset": [
        15457,
        15561
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1622": {
      "fn": "BPool.getBaseTokenAddress",
      "offset": [
        15665,
        15769
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1623": {
      "fn": "BPool.getBaseTokenAddress",
      "offset": [
        15745,
        15762
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 7,
      "value": "0x4"
    },
    "1625": {
      "fn": "BPool.getBaseTokenAddress",
      "offset": [
        15745,
        15762
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "op": "SUB"
    },
    "1634": {
      "fn": "BPool.getBaseTokenAddress",
      "offset": [
        15745,
        15762
      ],
      "op": "AND",
      "path": "37"
    },
    "1635": {
      "fn": "BPool.getBaseTokenAddress",
      "offset": [
        15665,
        15769
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5CD"
    },
    "1638": {
      "fn": "BPool.getBaseTokenAddress",
      "offset": [
        15665,
        15769
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1639": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1640": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x67A"
    },
    "1643": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x675"
    },
    "1646": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "1647": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "1649": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5529"
    },
    "1652": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        4690,
        5953
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1653": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1654": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x199D"
    },
    "1657": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        4690,
        5953
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1658": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1659": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1661": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1662": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1663": {
      "op": "SWAP4"
    },
    "1664": {
      "op": "DUP5"
    },
    "1665": {
      "op": "MSTORE"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1668": {
      "op": "DUP1"
    },
    "1669": {
      "op": "DUP6"
    },
    "1670": {
      "op": "ADD"
    },
    "1671": {
      "op": "SWAP4"
    },
    "1672": {
      "op": "SWAP1"
    },
    "1673": {
      "op": "SWAP4"
    },
    "1674": {
      "op": "MSTORE"
    },
    "1675": {
      "op": "DUP2"
    },
    "1676": {
      "op": "MLOAD"
    },
    "1677": {
      "op": "DUP5"
    },
    "1678": {
      "op": "DUP3"
    },
    "1679": {
      "op": "ADD"
    },
    "1680": {
      "op": "MSTORE"
    },
    "1681": {
      "op": "SWAP2"
    },
    "1682": {
      "op": "DUP2"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "MLOAD"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1687": {
      "op": "DUP1"
    },
    "1688": {
      "op": "DUP6"
    },
    "1689": {
      "op": "ADD"
    },
    "1690": {
      "op": "SWAP2"
    },
    "1691": {
      "op": "SWAP1"
    },
    "1692": {
      "op": "SWAP2"
    },
    "1693": {
      "op": "MSTORE"
    },
    "1694": {
      "op": "SWAP2"
    },
    "1695": {
      "op": "DUP2"
    },
    "1696": {
      "op": "ADD"
    },
    "1697": {
      "op": "MLOAD"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1700": {
      "op": "DUP5"
    },
    "1701": {
      "op": "ADD"
    },
    "1702": {
      "op": "MSTORE"
    },
    "1703": {
      "op": "ADD"
    },
    "1704": {
      "op": "MLOAD"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1707": {
      "op": "DUP3"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "op": "MSTORE"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1712": {
      "op": "ADD"
    },
    "1713": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x457"
    },
    "1716": {
      "op": "JUMP"
    },
    "1717": {
      "fn": "BPool.getId",
      "offset": [
        3973,
        4043
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1718": {
      "fn": "BPool.getId",
      "offset": [
        4035,
        4036
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 8,
      "value": "0x1"
    },
    "1720": {
      "fn": "BPool.getId",
      "offset": [
        3973,
        4043
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5E8"
    },
    "1723": {
      "fn": "BPool.getId",
      "offset": [
        3973,
        4043
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1724": {
      "fn": "BPool.getMarketFee",
      "offset": [
        15053,
        15154
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1725": {
      "fn": "BPool.getMarketFee",
      "offset": [
        15100,
        15107
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1727": {
      "fn": "BPool.getMarketFee",
      "offset": [
        15126,
        15147
      ],
      "op": "SLOAD",
      "path": "37",
      "statement": 9
    },
    "1728": {
      "fn": "BPool.getMarketFee",
      "offset": [
        15053,
        15154
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "1731": {
      "fn": "BPool.getMarketFee",
      "offset": [
        15053,
        15154
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1732": {
      "offset": [
        3300,
        3338
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1733": {
      "fn": "BPool.getMarketFee",
      "offset": [
        3300,
        3338
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xB"
    },
    "1735": {
      "fn": "BPool.getMarketFee",
      "offset": [
        3300,
        3338
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1736": {
      "fn": "BPool.getMarketFee",
      "offset": [
        3300,
        3338
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5CD"
    },
    "1739": {
      "fn": "BPool.getMarketFee",
      "offset": [
        3300,
        3338
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "op": "SUB"
    },
    "1748": {
      "offset": [
        3300,
        3338
      ],
      "op": "AND",
      "path": "37"
    },
    "1749": {
      "fn": "BPool.getMarketFee",
      "offset": [
        3300,
        3338
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1750": {
      "fn": "BPool.getMarketFee",
      "offset": [
        3300,
        3338
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1751": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4120,
        4508
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1752": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4120,
        4508
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x494"
    },
    "1755": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4120,
        4508
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6E5"
    },
    "1758": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4120,
        4508
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "1759": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4120,
        4508
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1761": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4120,
        4508
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x52D2"
    },
    "1764": {
      "fn": "BToken.decreaseApproval",
      "jump": "i",
      "offset": [
        4120,
        4508
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1765": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4120,
        4508
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1766": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4120,
        4508
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1B50"
    },
    "1769": {
      "fn": "BToken.decreaseApproval",
      "jump": "i",
      "offset": [
        4120,
        4508
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1770": {
      "fn": "BToken.balanceOf",
      "offset": [
        3482,
        3582
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1771": {
      "fn": "BToken.balanceOf",
      "offset": [
        3482,
        3582
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x473"
    },
    "1774": {
      "fn": "BToken.balanceOf",
      "offset": [
        3482,
        3582
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6F8"
    },
    "1777": {
      "fn": "BToken.balanceOf",
      "offset": [
        3482,
        3582
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "1778": {
      "fn": "BToken.balanceOf",
      "offset": [
        3482,
        3582
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1780": {
      "fn": "BToken.balanceOf",
      "offset": [
        3482,
        3582
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x54DD"
    },
    "1783": {
      "fn": "BToken.balanceOf",
      "jump": "i",
      "offset": [
        3482,
        3582
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1784": {
      "fn": "BToken.balanceOf",
      "offset": [
        3482,
        3582
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "op": "SUB"
    },
    "1793": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "AND",
      "path": "38",
      "statement": 10
    },
    "1794": {
      "fn": "BToken.balanceOf",
      "offset": [
        3538,
        3542
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1796": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1797": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1798": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1799": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3569
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "1801": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1803": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1804": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1806": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1807": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "1808": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "1809": {
      "fn": "BToken.balanceOf",
      "offset": [
        3561,
        3575
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1810": {
      "fn": "BToken.balanceOf",
      "offset": [
        3482,
        3582
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1811": {
      "offset": [
        1010,
        1061
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1812": {
      "fn": "BToken.balanceOf",
      "offset": [
        1010,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "1815": {
      "fn": "BToken.balanceOf",
      "offset": [
        1010,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1C26"
    },
    "1818": {
      "fn": "BToken.balanceOf",
      "jump": "i",
      "offset": [
        1010,
        1061
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1819": {
      "offset": [
        981,
        1014
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1820": {
      "fn": "BToken.balanceOf",
      "offset": [
        981,
        1014
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x473"
    },
    "1823": {
      "fn": "BToken.balanceOf",
      "offset": [
        981,
        1014
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1825": {
      "fn": "BToken.balanceOf",
      "offset": [
        981,
        1014
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "1826": {
      "fn": "BToken.balanceOf",
      "offset": [
        981,
        1014
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1827": {
      "fn": "BToken.balanceOf",
      "offset": [
        981,
        1014
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1828": {
      "offset": [
        1302,
        1351
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1829": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x473"
    },
    "1832": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x732"
    },
    "1835": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "1836": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "1838": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x54DD"
    },
    "1841": {
      "fn": "BToken.balanceOf",
      "jump": "i",
      "offset": [
        1302,
        1351
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1842": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1843": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x6"
    },
    "1845": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "1847": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1848": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1850": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1851": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1852": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1853": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1855": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1856": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "KECCAK256",
      "path": "35"
    },
    "1857": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "1858": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1859": {
      "fn": "BToken.balanceOf",
      "offset": [
        1302,
        1351
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1860": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12119,
        12630
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1861": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12119,
        12630
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4BF"
    },
    "1864": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12119,
        12630
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C3A"
    },
    "1867": {
      "fn": "BPool.collectMarketFee",
      "jump": "i",
      "offset": [
        12119,
        12630
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1868": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1869": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "1872": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x75A"
    },
    "1875": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1876": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1878": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x535A"
    },
    "1881": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        31933,
        34056
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1882": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1883": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1DC7"
    },
    "1886": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        31933,
        34056
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1887": {
      "offset": [
        1335,
        1387
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1888": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        1335,
        1387
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "1891": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        1335,
        1387
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x219B"
    },
    "1894": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        1335,
        1387
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1895": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1896": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x67A"
    },
    "1899": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x775"
    },
    "1902": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "1903": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "1905": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5529"
    },
    "1908": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        3356,
        4678
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1909": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1910": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x21B2"
    },
    "1913": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        3356,
        4678
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1914": {
      "fn": "BPool.gulp",
      "offset": [
        40698,
        41019
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1915": {
      "fn": "BPool.gulp",
      "offset": [
        40698,
        41019
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4BF"
    },
    "1918": {
      "fn": "BPool.gulp",
      "offset": [
        40698,
        41019
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x788"
    },
    "1921": {
      "fn": "BPool.gulp",
      "offset": [
        40698,
        41019
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1922": {
      "fn": "BPool.gulp",
      "offset": [
        40698,
        41019
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1924": {
      "fn": "BPool.gulp",
      "offset": [
        40698,
        41019
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "1927": {
      "fn": "BPool.gulp",
      "jump": "i",
      "offset": [
        40698,
        41019
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1928": {
      "fn": "BPool.gulp",
      "offset": [
        40698,
        41019
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1929": {
      "fn": "BPool.gulp",
      "offset": [
        40698,
        41019
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x234A"
    },
    "1932": {
      "fn": "BPool.gulp",
      "jump": "i",
      "offset": [
        40698,
        41019
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1933": {
      "fn": "BPool.isFinalized",
      "offset": [
        8501,
        8587
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1934": {
      "fn": "BPool.isFinalized",
      "offset": [
        8570,
        8580
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 11,
      "value": "0xB"
    },
    "1936": {
      "fn": "BPool.isFinalized",
      "offset": [
        8570,
        8580
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "fn": "BPool.isFinalized",
      "offset": [
        8570,
        8580
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1943": {
      "fn": "BPool.isFinalized",
      "offset": [
        8570,
        8580
      ],
      "op": "DIV",
      "path": "37"
    },
    "1944": {
      "fn": "BPool.isFinalized",
      "offset": [
        8570,
        8580
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "1946": {
      "fn": "BPool.isFinalized",
      "offset": [
        8570,
        8580
      ],
      "op": "AND",
      "path": "37"
    },
    "1947": {
      "fn": "BPool.isFinalized",
      "offset": [
        8501,
        8587
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x494"
    },
    "1950": {
      "fn": "BPool.isFinalized",
      "offset": [
        8501,
        8587
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1951": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        13879,
        14032
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1952": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        13879,
        14032
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "1955": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        13879,
        14032
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x24BC"
    },
    "1958": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "jump": "i",
      "offset": [
        13879,
        14032
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1959": {
      "offset": [
        1394,
        1445
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1960": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        1394,
        1445
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "1963": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        1394,
        1445
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x24E9"
    },
    "1966": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "jump": "i",
      "offset": [
        1394,
        1445
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1967": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1968": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "1971": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7BD"
    },
    "1974": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1975": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1977": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "1980": {
      "fn": "BPool.getDenormalizedWeight",
      "jump": "i",
      "offset": [
        13560,
        13759
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1981": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1982": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x24FC"
    },
    "1985": {
      "fn": "BPool.getDenormalizedWeight",
      "jump": "i",
      "offset": [
        13560,
        13759
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1986": {
      "fn": "BToken.symbol",
      "offset": [
        3183,
        3268
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1987": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 12,
      "value": "0x40"
    },
    "1989": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1990": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1991": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1992": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1993": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "ADD",
      "path": "38"
    },
    "1994": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1995": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1996": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1997": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x3"
    },
    "1999": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2000": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2001": {
      "op": "PUSH3",
      "value": "0x13D415"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2010": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2011": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "ADD",
      "path": "38"
    },
    "2012": {
      "fn": "BToken.symbol",
      "offset": [
        3249,
        3261
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2013": {
      "fn": "BToken.symbol",
      "offset": [
        3183,
        3268
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x44A"
    },
    "2016": {
      "fn": "BToken.symbol",
      "offset": [
        3183,
        3268
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2017": {
      "offset": [
        1683,
        1742
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2018": {
      "fn": "BToken.symbol",
      "offset": [
        1683,
        1742
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "2021": {
      "fn": "BToken.symbol",
      "offset": [
        1683,
        1742
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x254E"
    },
    "2024": {
      "fn": "BToken.symbol",
      "jump": "i",
      "offset": [
        1683,
        1742
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2025": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37784,
        38163
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2026": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37784,
        38163
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "2029": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37784,
        38163
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7F7"
    },
    "2032": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37784,
        38163
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "2033": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37784,
        38163
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2035": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37784,
        38163
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x52D2"
    },
    "2038": {
      "fn": "BPool.calcPoolInSingleOut",
      "jump": "i",
      "offset": [
        37784,
        38163
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2039": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37784,
        38163
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2040": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37784,
        38163
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x256C"
    },
    "2043": {
      "fn": "BPool.calcPoolInSingleOut",
      "jump": "i",
      "offset": [
        37784,
        38163
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2044": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2045": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x494"
    },
    "2048": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x80A"
    },
    "2051": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "2052": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2054": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x52D2"
    },
    "2057": {
      "fn": "BToken.transfer",
      "jump": "i",
      "offset": [
        4514,
        4644
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2058": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2059": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x25C9"
    },
    "2062": {
      "fn": "BToken.transfer",
      "jump": "i",
      "offset": [
        4514,
        4644
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2063": {
      "fn": "BPool.collectOPC",
      "offset": [
        9921,
        10390
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2064": {
      "fn": "BPool.collectOPC",
      "offset": [
        9921,
        10390
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4BF"
    },
    "2067": {
      "fn": "BPool.collectOPC",
      "offset": [
        9921,
        10390
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x25DF"
    },
    "2070": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        9921,
        10390
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2071": {
      "offset": [
        961,
        1003
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2072": {
      "fn": "BPool.collectOPC",
      "offset": [
        961,
        1003
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "2075": {
      "offset": [
        1002,
        1003
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "2077": {
      "offset": [
        961,
        1003
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2078": {
      "fn": "BPool.collectOPC",
      "offset": [
        961,
        1003
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2079": {
      "offset": [
        1452,
        1498
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2080": {
      "fn": "BPool.collectOPC",
      "offset": [
        1452,
        1498
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "2083": {
      "offset": [
        1493,
        1498
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "2085": {
      "offset": [
        1452,
        1498
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2086": {
      "fn": "BPool.collectOPC",
      "offset": [
        1452,
        1498
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2087": {
      "offset": [
        1067,
        1117
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2088": {
      "fn": "BPool.collectOPC",
      "offset": [
        1067,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "2091": {
      "fn": "BPool.collectOPC",
      "offset": [
        1067,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x27A0"
    },
    "2094": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        1067,
        1117
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2095": {
      "offset": [
        1504,
        1563
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2096": {
      "fn": "BPool.collectOPC",
      "offset": [
        1504,
        1563
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "2099": {
      "fn": "BPool.collectOPC",
      "offset": [
        1504,
        1563
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x27B3"
    },
    "2102": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        1504,
        1563
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2103": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2104": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x83F"
    },
    "2107": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27D2"
    },
    "2110": {
      "fn": "BPool.getFinalTokens",
      "jump": "i",
      "offset": [
        9520,
        9720
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2111": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2112": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2114": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2115": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x457"
    },
    "2118": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2119": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2120": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x55F9"
    },
    "2123": {
      "fn": "BPool.getFinalTokens",
      "jump": "i",
      "offset": [
        9520,
        9720
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2124": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2125": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x854"
    },
    "2128": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2881"
    },
    "2131": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "i",
      "offset": [
        10614,
        11124
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2132": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2133": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2135": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2136": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x457"
    },
    "2139": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "2140": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2141": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2142": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x560C"
    },
    "2145": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "i",
      "offset": [
        10614,
        11124
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2146": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2147": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x875"
    },
    "2150": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x870"
    },
    "2153": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "2154": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2156": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5663"
    },
    "2159": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        23308,
        27205
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2160": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2161": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x29F1"
    },
    "2164": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        23308,
        27205
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2165": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2166": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2168": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2169": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2170": {
      "op": "SWAP3"
    },
    "2171": {
      "op": "DUP4"
    },
    "2172": {
      "op": "MSTORE"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2175": {
      "op": "DUP4"
    },
    "2176": {
      "op": "ADD"
    },
    "2177": {
      "op": "SWAP2"
    },
    "2178": {
      "op": "SWAP1"
    },
    "2179": {
      "op": "SWAP2"
    },
    "2180": {
      "op": "MSTORE"
    },
    "2181": {
      "op": "ADD"
    },
    "2182": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x457"
    },
    "2185": {
      "op": "JUMP"
    },
    "2186": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11371,
        11888
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2187": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11371,
        11888
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x854"
    },
    "2190": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11371,
        11888
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x31C0"
    },
    "2193": {
      "fn": "BPool.getCurrentMarketFees",
      "jump": "i",
      "offset": [
        11371,
        11888
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2194": {
      "offset": [
        1123,
        1165
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2195": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        1123,
        1165
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "2198": {
      "offset": [
        1164,
        1165
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "2200": {
      "offset": [
        1123,
        1165
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2201": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        1123,
        1165
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2202": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27550,
        31608
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2203": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27550,
        31608
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x875"
    },
    "2206": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27550,
        31608
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8A8"
    },
    "2209": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27550,
        31608
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "2210": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27550,
        31608
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2212": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27550,
        31608
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5663"
    },
    "2215": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        27550,
        31608
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2216": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27550,
        31608
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2217": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27550,
        31608
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3325"
    },
    "2220": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        27550,
        31608
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2221": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20242,
        21379
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2222": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20242,
        21379
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x547"
    },
    "2225": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20242,
        21379
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8BB"
    },
    "2228": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20242,
        21379
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "2229": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20242,
        21379
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2231": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20242,
        21379
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5497"
    },
    "2234": {
      "fn": "BPool.getAmountInExactOut",
      "jump": "i",
      "offset": [
        20242,
        21379
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2235": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20242,
        21379
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2236": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20242,
        21379
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3A4F"
    },
    "2239": {
      "fn": "BPool.getAmountInExactOut",
      "jump": "i",
      "offset": [
        20242,
        21379
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2240": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        9244,
        9398
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2241": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        9244,
        9398
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x83F"
    },
    "2244": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        9244,
        9398
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3AF9"
    },
    "2247": {
      "fn": "BPool.getCurrentTokens",
      "jump": "i",
      "offset": [
        9244,
        9398
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2248": {
      "fn": "BPool.getNumTokens",
      "offset": [
        9026,
        9120
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2249": {
      "fn": "BPool.getNumTokens",
      "offset": [
        9099,
        9106
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 13,
      "value": "0xC"
    },
    "2251": {
      "fn": "BPool.getNumTokens",
      "offset": [
        9099,
        9113
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2252": {
      "fn": "BPool.getNumTokens",
      "offset": [
        9026,
        9120
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "2255": {
      "fn": "BPool.getNumTokens",
      "offset": [
        9026,
        9120
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2256": {
      "fn": "BPool.getSwapFee",
      "offset": [
        14864,
        14950
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2257": {
      "fn": "BPool.getSwapFee",
      "offset": [
        14935,
        14943
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 14,
      "value": "0x1"
    },
    "2259": {
      "fn": "BPool.getSwapFee",
      "offset": [
        14935,
        14943
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2260": {
      "fn": "BPool.getSwapFee",
      "offset": [
        14864,
        14950
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "2263": {
      "fn": "BPool.getSwapFee",
      "offset": [
        14864,
        14950
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2264": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3866,
        4114
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2265": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3866,
        4114
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x494"
    },
    "2268": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3866,
        4114
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x8E6"
    },
    "2271": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3866,
        4114
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "2272": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3866,
        4114
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2274": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3866,
        4114
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x52D2"
    },
    "2277": {
      "fn": "BToken.increaseApproval",
      "jump": "i",
      "offset": [
        3866,
        4114
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2278": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3866,
        4114
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2279": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3866,
        4114
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3B1F"
    },
    "2282": {
      "fn": "BToken.increaseApproval",
      "jump": "i",
      "offset": [
        3866,
        4114
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2283": {
      "fn": "BToken.allowance",
      "offset": [
        3355,
        3476
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2284": {
      "fn": "BToken.allowance",
      "offset": [
        3355,
        3476
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x473"
    },
    "2287": {
      "fn": "BToken.allowance",
      "offset": [
        3355,
        3476
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x8F9"
    },
    "2290": {
      "fn": "BToken.allowance",
      "offset": [
        3355,
        3476
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "2291": {
      "fn": "BToken.allowance",
      "offset": [
        3355,
        3476
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2293": {
      "fn": "BToken.allowance",
      "offset": [
        3355,
        3476
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x56A5"
    },
    "2296": {
      "fn": "BToken.allowance",
      "jump": "i",
      "offset": [
        3355,
        3476
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2297": {
      "fn": "BToken.allowance",
      "offset": [
        3355,
        3476
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2304": {
      "op": "SHL"
    },
    "2305": {
      "op": "SUB"
    },
    "2306": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "SWAP2",
      "path": "38",
      "statement": 15
    },
    "2307": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2308": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "AND",
      "path": "38"
    },
    "2309": {
      "fn": "BToken.allowance",
      "offset": [
        3423,
        3430
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2311": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2312": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2313": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2314": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3459
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "2316": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2318": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2319": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2320": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2321": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2323": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2324": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2325": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3464
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "2326": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "2327": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2328": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "SWAP5",
      "path": "38"
    },
    "2329": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "AND",
      "path": "38"
    },
    "2330": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2331": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2332": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2333": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2334": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2335": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2336": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "2337": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2338": {
      "fn": "BToken.allowance",
      "offset": [
        3449,
        3469
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2339": {
      "fn": "BToken.allowance",
      "offset": [
        3355,
        3476
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2340": {
      "offset": [
        1628,
        1677
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2341": {
      "fn": "BToken.allowance",
      "offset": [
        1628,
        1677
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x473"
    },
    "2344": {
      "fn": "BToken.allowance",
      "offset": [
        1628,
        1677
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x3B92"
    },
    "2347": {
      "fn": "BToken.allowance",
      "jump": "i",
      "offset": [
        1628,
        1677
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2348": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14180,
        14430
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2349": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14180,
        14430
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "2352": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14180,
        14430
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x93A"
    },
    "2355": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14180,
        14430
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "2356": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14180,
        14430
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2358": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14180,
        14430
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "2361": {
      "fn": "BPool.getNormalizedWeight",
      "jump": "i",
      "offset": [
        14180,
        14430
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2362": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14180,
        14430
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2363": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14180,
        14430
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3BA5"
    },
    "2366": {
      "fn": "BPool.getNormalizedWeight",
      "jump": "i",
      "offset": [
        14180,
        14430
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2367": {
      "fn": "BPool.getBalance",
      "offset": [
        14569,
        14758
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2368": {
      "fn": "BPool.getBalance",
      "offset": [
        14569,
        14758
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "2371": {
      "fn": "BPool.getBalance",
      "offset": [
        14569,
        14758
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x94D"
    },
    "2374": {
      "fn": "BPool.getBalance",
      "offset": [
        14569,
        14758
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "2375": {
      "fn": "BPool.getBalance",
      "offset": [
        14569,
        14758
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2377": {
      "fn": "BPool.getBalance",
      "offset": [
        14569,
        14758
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "2380": {
      "fn": "BPool.getBalance",
      "jump": "i",
      "offset": [
        14569,
        14758
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2381": {
      "fn": "BPool.getBalance",
      "offset": [
        14569,
        14758
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2382": {
      "fn": "BPool.getBalance",
      "offset": [
        14569,
        14758
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3BFE"
    },
    "2385": {
      "fn": "BPool.getBalance",
      "jump": "i",
      "offset": [
        14569,
        14758
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2386": {
      "fn": "BPool.isPublicSwap",
      "offset": [
        8322,
        8410
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2387": {
      "fn": "BPool.isPublicSwap",
      "offset": [
        8392,
        8403
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 16,
      "value": "0xA"
    },
    "2389": {
      "fn": "BPool.isPublicSwap",
      "offset": [
        8392,
        8403
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2394": {
      "op": "SHL"
    },
    "2395": {
      "fn": "BPool.isPublicSwap",
      "offset": [
        8392,
        8403
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2396": {
      "fn": "BPool.isPublicSwap",
      "offset": [
        8392,
        8403
      ],
      "op": "DIV",
      "path": "37"
    },
    "2397": {
      "fn": "BPool.isPublicSwap",
      "offset": [
        8392,
        8403
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "2399": {
      "fn": "BPool.isPublicSwap",
      "offset": [
        8392,
        8403
      ],
      "op": "AND",
      "path": "37"
    },
    "2400": {
      "fn": "BPool.isPublicSwap",
      "offset": [
        8322,
        8410
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x494"
    },
    "2403": {
      "fn": "BPool.isPublicSwap",
      "offset": [
        8322,
        8410
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2404": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38414,
        38791
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2405": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38414,
        38791
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x473"
    },
    "2408": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38414,
        38791
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x972"
    },
    "2411": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38414,
        38791
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "2412": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38414,
        38791
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2414": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38414,
        38791
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x52D2"
    },
    "2417": {
      "fn": "BPool.calcSingleInPoolOut",
      "jump": "i",
      "offset": [
        38414,
        38791
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2418": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38414,
        38791
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2419": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38414,
        38791
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3C4C"
    },
    "2422": {
      "fn": "BPool.calcSingleInPoolOut",
      "jump": "i",
      "offset": [
        38414,
        38791
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2423": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2424": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "2426": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3056,
        3062
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2427": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19333,
        19350
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2429": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19333,
        19350
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2430": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "2432": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3056,
        3062
      ],
      "op": "AND",
      "path": "37"
    },
    "2433": {
      "offset": [
        3055,
        3062
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2434": {
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x9A6"
    },
    "2437": {
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2438": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2440": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2447": {
      "op": "SHL"
    },
    "2448": {
      "offset": [
        3047,
        3078
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2449": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2450": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2452": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "ADD",
      "path": "37"
    },
    "2453": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "2456": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2457": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "2460": {
      "fn": "BPool.getSpotPrice",
      "jump": "i",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2461": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2462": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2464": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2465": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2466": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2467": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "SUB",
      "path": "37"
    },
    "2468": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2469": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "37"
    },
    "2470": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2471": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19362,
        19382
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 17,
      "value": "0x9AF"
    },
    "2474": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19374,
        19381
      ],
      "op": "DUP5",
      "path": "37"
    },
    "2475": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19362,
        19373
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "2478": {
      "fn": "BPool.getSpotPrice",
      "jump": "i",
      "offset": [
        19362,
        19382
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2479": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19362,
        19382
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2480": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19392,
        19413
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 18,
      "value": "0x9B8"
    },
    "2483": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19404,
        19412
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2484": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19392,
        19403
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "2487": {
      "fn": "BPool.getSpotPrice",
      "jump": "i",
      "offset": [
        19392,
        19413
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2488": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19392,
        19413
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2495": {
      "op": "SHL"
    },
    "2496": {
      "op": "SUB"
    },
    "2497": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2498": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "DUP6",
      "path": "37"
    },
    "2499": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "AND",
      "path": "37"
    },
    "2500": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19423,
        19446
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2502": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2503": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2504": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2505": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19457
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "2507": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2509": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2510": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2512": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2513": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2514": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19449,
        19466
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "2515": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19503,
        19521
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "2516": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19503,
        19521
      ],
      "op": "DUP7",
      "path": "37"
    },
    "2517": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19503,
        19521
      ],
      "op": "AND",
      "path": "37"
    },
    "2518": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19503,
        19521
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2519": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19503,
        19521
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2520": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19503,
        19521
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2521": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19503,
        19521
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "2522": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19581,
        19597
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 19,
      "value": "0x3"
    },
    "2524": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19581,
        19597
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2525": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19581,
        19597
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2526": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19581,
        19597
      ],
      "op": "ADD",
      "path": "37"
    },
    "2527": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19581,
        19597
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2528": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19615,
        19630
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "2530": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19615,
        19630
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2531": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19615,
        19630
      ],
      "op": "DUP6",
      "path": "37"
    },
    "2532": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19615,
        19630
      ],
      "op": "ADD",
      "path": "37"
    },
    "2533": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19615,
        19630
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2534": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19648,
        19665
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "2535": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19648,
        19665
      ],
      "op": "DUP5",
      "path": "37"
    },
    "2536": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19648,
        19665
      ],
      "op": "ADD",
      "path": "37"
    },
    "2537": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19648,
        19665
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2538": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19683,
        19699
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2539": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19683,
        19699
      ],
      "op": "DUP5",
      "path": "37"
    },
    "2540": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19683,
        19699
      ],
      "op": "ADD",
      "path": "37"
    },
    "2541": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19683,
        19699
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2542": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19550,
        19752
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x9F9"
    },
    "2545": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19550,
        19752
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "2546": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19615,
        19630
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2547": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19648,
        19665
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2548": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19717,
        19738
      ],
      "op": "DUP9",
      "path": "37"
    },
    "2549": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19550,
        19563
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3D04"
    },
    "2552": {
      "fn": "BPool.getSpotPrice",
      "jump": "i",
      "offset": [
        19550,
        19752
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2553": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19550,
        19752
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2554": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19531,
        19752
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "2555": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19531,
        19752
      ],
      "op": "POP",
      "path": "37"
    },
    "2556": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19531,
        19752
      ],
      "op": "POP",
      "path": "37"
    },
    "2557": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19531,
        19752
      ],
      "op": "POP",
      "path": "37"
    },
    "2558": {
      "offset": [
        3088,
        3089
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2559": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "2560": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "2561": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "POP",
      "path": "37"
    },
    "2562": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "POP",
      "path": "37"
    },
    "2563": {
      "fn": "BPool.getSpotPrice",
      "offset": [
        19181,
        19759
      ],
      "op": "POP",
      "path": "37"
    },
    "2564": {
      "fn": "BPool.getSpotPrice",
      "jump": "o",
      "offset": [
        19181,
        19759
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2565": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2566": {
      "fn": "BToken.approve",
      "offset": [
        3765,
        3775
      ],
      "op": "CALLER",
      "path": "38",
      "statement": 20
    },
    "2567": {
      "fn": "BToken.approve",
      "offset": [
        3738,
        3742
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2569": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2570": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2571": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2572": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3764
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "2574": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2576": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2577": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2578": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2579": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2581": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2582": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2583": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3776
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2590": {
      "op": "SHL"
    },
    "2591": {
      "op": "SUB"
    },
    "2592": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "DUP8",
      "path": "38"
    },
    "2593": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "AND",
      "path": "38"
    },
    "2594": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2595": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "DUP6",
      "path": "38"
    },
    "2596": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2597": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2598": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2599": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2600": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2601": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "2602": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3787
      ],
      "op": "DUP6",
      "path": "38"
    },
    "2603": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3787
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2604": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3787
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "2605": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "MLOAD",
      "path": "38",
      "statement": 21
    },
    "2606": {
      "fn": "BToken.approve",
      "offset": [
        3738,
        3742
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2607": {
      "fn": "BToken.approve",
      "offset": [
        3738,
        3742
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2608": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2609": {
      "fn": "BToken.approve",
      "offset": [
        3754,
        3781
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2612": {
      "op": "DUP1"
    },
    "2613": {
      "op": "MLOAD"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2616": {
      "op": "PUSH2",
      "value": "0x5944"
    },
    "2619": {
      "op": "DUP4"
    },
    "2620": {
      "op": "CODECOPY"
    },
    "2621": {
      "op": "DUP2"
    },
    "2622": {
      "op": "MLOAD"
    },
    "2623": {
      "op": "SWAP2"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2626": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA4E"
    },
    "2629": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2630": {
      "fn": "BToken.approve",
      "offset": [
        3784,
        3787
      ],
      "op": "DUP7",
      "path": "38"
    },
    "2631": {
      "op": "DUP2"
    },
    "2632": {
      "op": "MSTORE"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2635": {
      "op": "ADD"
    },
    "2636": {
      "op": "SWAP1"
    },
    "2637": {
      "op": "JUMP"
    },
    "2638": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2639": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2641": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2642": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2643": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2644": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "SUB",
      "path": "38"
    },
    "2645": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2646": {
      "fn": "BToken.approve",
      "offset": [
        3802,
        3832
      ],
      "op": "LOG3",
      "path": "38"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "fn": "BToken.approve",
      "offset": [
        3849,
        3853
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 22,
      "value": "0x1"
    },
    "2650": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2651": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2652": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2653": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "POP",
      "path": "38"
    },
    "2654": {
      "fn": "BToken.approve",
      "offset": [
        3680,
        3860
      ],
      "op": "POP",
      "path": "38"
    },
    "2655": {
      "fn": "BToken.approve",
      "jump": "o",
      "offset": [
        3680,
        3860
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2656": {
      "offset": [
        1279,
        1329
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2657": {
      "offset": [
        1320,
        1329
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA73"
    },
    "2660": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "2669": {
      "offset": [
        1327,
        1329
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x32"
    },
    "2671": {
      "offset": [
        1320,
        1329
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x570E"
    },
    "2674": {
      "fn": "BToken.approve",
      "jump": "i",
      "offset": [
        1320,
        1329
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2675": {
      "fn": "BToken.approve",
      "offset": [
        1320,
        1329
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2676": {
      "offset": [
        1279,
        1329
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2677": {
      "fn": "BToken.approve",
      "jump": "o",
      "offset": [
        1279,
        1329
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2678": {
      "fn": "BPool.setup",
      "offset": [
        6713,
        8109
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2679": {
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "2681": {
      "fn": "BPool.setup",
      "offset": [
        2922,
        2928
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2682": {
      "fn": "BPool.setup",
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "2684": {
      "fn": "BPool.setup",
      "offset": [
        2922,
        2928
      ],
      "op": "AND",
      "path": "37"
    },
    "2685": {
      "offset": [
        2921,
        2928
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2686": {
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xA99"
    },
    "2689": {
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2690": {
      "fn": "BPool.setup",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2692": {
      "fn": "BPool.setup",
      "offset": [
        2913,
        2944
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2699": {
      "op": "SHL"
    },
    "2700": {
      "offset": [
        2913,
        2944
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2701": {
      "fn": "BPool.setup",
      "offset": [
        2913,
        2944
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2702": {
      "fn": "BPool.setup",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2704": {
      "fn": "BPool.setup",
      "offset": [
        2913,
        2944
      ],
      "op": "ADD",
      "path": "37"
    },
    "2705": {
      "fn": "BPool.setup",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "2708": {
      "fn": "BPool.setup",
      "offset": [
        2913,
        2944
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2709": {
      "fn": "BPool.setup",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "2712": {
      "fn": "BPool.setup",
      "jump": "i",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2713": {
      "fn": "BPool.setup",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2714": {
      "offset": [
        2954,
        2960
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "2716": {
      "offset": [
        2954,
        2967
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2717": {
      "fn": "BPool.setup",
      "offset": [
        2954,
        2967
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2718": {
      "offset": [
        2963,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2722": {
      "op": "NOT"
    },
    "2723": {
      "offset": [
        2954,
        2967
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2724": {
      "fn": "BPool.setup",
      "offset": [
        2954,
        2967
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2725": {
      "fn": "BPool.setup",
      "offset": [
        2954,
        2967
      ],
      "op": "AND",
      "path": "37"
    },
    "2726": {
      "fn": "BPool.setup",
      "offset": [
        2954,
        2967
      ],
      "op": "OR",
      "path": "37"
    },
    "2727": {
      "fn": "BPool.setup",
      "offset": [
        2954,
        2967
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2728": {
      "fn": "BPool.setup",
      "offset": [
        2954,
        2967
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2729": {
      "fn": "BPool.setup",
      "offset": [
        2954,
        2967
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2730": {
      "fn": "BPool.setup",
      "offset": [
        2954,
        2967
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "2731": {
      "fn": "BPool.setup",
      "offset": [
        2954,
        2967
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "2734": {
      "fn": "BPool.setup",
      "offset": [
        6982,
        6993
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 23
    },
    "2735": {
      "fn": "BPool.setup",
      "offset": [
        6982,
        6993
      ],
      "op": "DIV",
      "path": "37"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2742": {
      "op": "SHL"
    },
    "2743": {
      "op": "SUB"
    },
    "2744": {
      "fn": "BPool.setup",
      "offset": [
        6982,
        6993
      ],
      "op": "AND",
      "path": "37"
    },
    "2745": {
      "fn": "BPool.setup",
      "offset": [
        6968,
        6978
      ],
      "op": "CALLER",
      "path": "37"
    },
    "2746": {
      "branch": 308,
      "fn": "BPool.setup",
      "offset": [
        6968,
        6993
      ],
      "op": "EQ",
      "path": "37"
    },
    "2747": {
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xAFF"
    },
    "2750": {
      "branch": 308,
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2751": {
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2753": {
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2760": {
      "op": "SHL"
    },
    "2761": {
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2762": {
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2765": {
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2767": {
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2768": {
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "ADD",
      "path": "37"
    },
    "2769": {
      "op": "MSTORE"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2774": {
      "op": "DUP3"
    },
    "2775": {
      "op": "ADD"
    },
    "2776": {
      "op": "MSTORE"
    },
    "2777": {
      "op": "PUSH22",
      "value": "0x22A9292FA4A72B20A624A22FA1A7A72A2927A62622A9"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2805": {
      "op": "DUP3"
    },
    "2806": {
      "op": "ADD"
    },
    "2807": {
      "op": "MSTORE"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2810": {
      "op": "ADD"
    },
    "2811": {
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "2814": {
      "op": "JUMP"
    },
    "2815": {
      "fn": "BPool.setup",
      "offset": [
        6960,
        7020
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2816": {
      "fn": "BPool.setup",
      "offset": [
        7071,
        7088
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 24,
      "value": "0x3"
    },
    "2818": {
      "fn": "BPool.setup",
      "offset": [
        7071,
        7088
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2825": {
      "op": "SHL"
    },
    "2826": {
      "op": "SUB"
    },
    "2827": {
      "fn": "BPool.setup",
      "offset": [
        7051,
        7088
      ],
      "op": "DUP8",
      "path": "37"
    },
    "2828": {
      "fn": "BPool.setup",
      "offset": [
        7051,
        7088
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2829": {
      "fn": "BPool.setup",
      "offset": [
        7051,
        7088
      ],
      "op": "AND",
      "path": "37"
    },
    "2830": {
      "fn": "BPool.setup",
      "offset": [
        7071,
        7088
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2831": {
      "fn": "BPool.setup",
      "offset": [
        7071,
        7088
      ],
      "op": "AND",
      "path": "37"
    },
    "2832": {
      "branch": 309,
      "fn": "BPool.setup",
      "offset": [
        7051,
        7088
      ],
      "op": "EQ",
      "path": "37"
    },
    "2833": {
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xB5C"
    },
    "2836": {
      "branch": 309,
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2837": {
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2839": {
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2840": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2846": {
      "op": "SHL"
    },
    "2847": {
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2848": {
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2851": {
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2853": {
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2854": {
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "ADD",
      "path": "37"
    },
    "2855": {
      "op": "MSTORE"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2860": {
      "op": "DUP3"
    },
    "2861": {
      "op": "ADD"
    },
    "2862": {
      "op": "MSTORE"
    },
    "2863": {
      "op": "PUSH32",
      "value": "0x4552525F494E56414C49445F44415441544F4B454E5F41444452455353000000"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2898": {
      "op": "DUP3"
    },
    "2899": {
      "op": "ADD"
    },
    "2900": {
      "op": "MSTORE"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2903": {
      "op": "ADD"
    },
    "2904": {
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "2907": {
      "op": "JUMP"
    },
    "2908": {
      "fn": "BPool.setup",
      "offset": [
        7030,
        7143
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2909": {
      "fn": "BPool.setup",
      "offset": [
        7194,
        7211
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 25,
      "value": "0x4"
    },
    "2911": {
      "fn": "BPool.setup",
      "offset": [
        7194,
        7211
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2918": {
      "op": "SHL"
    },
    "2919": {
      "op": "SUB"
    },
    "2920": {
      "fn": "BPool.setup",
      "offset": [
        7174,
        7211
      ],
      "op": "DUP5",
      "path": "37"
    },
    "2921": {
      "fn": "BPool.setup",
      "offset": [
        7174,
        7211
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2922": {
      "fn": "BPool.setup",
      "offset": [
        7174,
        7211
      ],
      "op": "AND",
      "path": "37"
    },
    "2923": {
      "fn": "BPool.setup",
      "offset": [
        7194,
        7211
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2924": {
      "fn": "BPool.setup",
      "offset": [
        7194,
        7211
      ],
      "op": "AND",
      "path": "37"
    },
    "2925": {
      "branch": 310,
      "fn": "BPool.setup",
      "offset": [
        7174,
        7211
      ],
      "op": "EQ",
      "path": "37"
    },
    "2926": {
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBB9"
    },
    "2929": {
      "branch": 310,
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2930": {
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2932": {
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2941": {
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2944": {
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2946": {
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2947": {
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "ADD",
      "path": "37"
    },
    "2948": {
      "op": "MSTORE"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2953": {
      "op": "DUP3"
    },
    "2954": {
      "op": "ADD"
    },
    "2955": {
      "op": "MSTORE"
    },
    "2956": {
      "op": "PUSH32",
      "value": "0x4552525F494E56414C49445F62617365546F6B656E5F41444452455353000000"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2991": {
      "op": "DUP3"
    },
    "2992": {
      "op": "ADD"
    },
    "2993": {
      "op": "MSTORE"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2996": {
      "op": "ADD"
    },
    "2997": {
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "3000": {
      "op": "JUMP"
    },
    "3001": {
      "fn": "BPool.setup",
      "offset": [
        7153,
        7266
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3002": {
      "fn": "BPool.setup",
      "offset": [
        7389,
        7445
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 26,
      "value": "0xBC4"
    },
    "3005": {
      "fn": "BPool.setup",
      "offset": [
        7394,
        7410
      ],
      "op": "DUP7",
      "path": "37"
    },
    "3006": {
      "fn": "BPool.setup",
      "offset": [
        7412,
        7427
      ],
      "op": "DUP7",
      "path": "37"
    },
    "3007": {
      "fn": "BPool.setup",
      "offset": [
        7429,
        7444
      ],
      "op": "DUP7",
      "path": "37"
    },
    "3008": {
      "fn": "BPool.setup",
      "offset": [
        7389,
        7393
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3D90"
    },
    "3011": {
      "fn": "BPool.setup",
      "jump": "i",
      "offset": [
        7389,
        7445
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3012": {
      "fn": "BPool.setup",
      "offset": [
        7389,
        7445
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3013": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 27,
      "value": "0x40"
    },
    "3015": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3016": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3017": {
      "op": "DUP7"
    },
    "3018": {
      "op": "DUP2"
    },
    "3019": {
      "op": "MSTORE"
    },
    "3020": {
      "fn": "BPool.setup",
      "offset": [
        7565,
        7580
      ],
      "op": "TIMESTAMP",
      "path": "37"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3023": {
      "op": "DUP3"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "MSTORE"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3032": {
      "op": "SHL"
    },
    "3033": {
      "op": "SUB"
    },
    "3034": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "DUP9",
      "path": "37"
    },
    "3035": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "AND",
      "path": "37"
    },
    "3036": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3037": {
      "fn": "BPool.setup",
      "offset": [
        7482,
        7492
      ],
      "op": "CALLER",
      "path": "37"
    },
    "3038": {
      "fn": "BPool.setup",
      "offset": [
        7482,
        7492
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3041": {
      "op": "DUP1"
    },
    "3042": {
      "op": "MLOAD"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3045": {
      "op": "PUSH2",
      "value": "0x5924"
    },
    "3048": {
      "op": "DUP4"
    },
    "3049": {
      "op": "CODECOPY"
    },
    "3050": {
      "op": "DUP2"
    },
    "3051": {
      "op": "MLOAD"
    },
    "3052": {
      "op": "SWAP2"
    },
    "3053": {
      "op": "MSTORE"
    },
    "3054": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3055": {
      "op": "ADD"
    },
    "3056": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3058": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3059": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3060": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3061": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "SUB",
      "path": "37"
    },
    "3062": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3063": {
      "fn": "BPool.setup",
      "offset": [
        7460,
        7590
      ],
      "op": "LOG3",
      "path": "37"
    },
    "3064": {
      "fn": "BPool.setup",
      "offset": [
        7627,
        7683
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 28,
      "value": "0xC02"
    },
    "3067": {
      "fn": "BPool.setup",
      "offset": [
        7632,
        7648
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3068": {
      "fn": "BPool.setup",
      "offset": [
        7650,
        7665
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3069": {
      "fn": "BPool.setup",
      "offset": [
        7667,
        7682
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3070": {
      "fn": "BPool.setup",
      "offset": [
        7627,
        7631
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3D90"
    },
    "3073": {
      "fn": "BPool.setup",
      "jump": "i",
      "offset": [
        7627,
        7683
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3074": {
      "fn": "BPool.setup",
      "offset": [
        7627,
        7683
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3075": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 29,
      "value": "0x40"
    },
    "3077": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3078": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3079": {
      "op": "DUP4"
    },
    "3080": {
      "op": "DUP2"
    },
    "3081": {
      "op": "MSTORE"
    },
    "3082": {
      "fn": "BPool.setup",
      "offset": [
        7803,
        7818
      ],
      "op": "TIMESTAMP",
      "path": "37"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3085": {
      "op": "DUP3"
    },
    "3086": {
      "op": "ADD"
    },
    "3087": {
      "op": "MSTORE"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3094": {
      "op": "SHL"
    },
    "3095": {
      "op": "SUB"
    },
    "3096": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "DUP6",
      "path": "37"
    },
    "3097": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "AND",
      "path": "37"
    },
    "3098": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3099": {
      "fn": "BPool.setup",
      "offset": [
        7720,
        7730
      ],
      "op": "CALLER",
      "path": "37"
    },
    "3100": {
      "fn": "BPool.setup",
      "offset": [
        7720,
        7730
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3103": {
      "op": "DUP1"
    },
    "3104": {
      "op": "MLOAD"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3107": {
      "op": "PUSH2",
      "value": "0x5924"
    },
    "3110": {
      "op": "DUP4"
    },
    "3111": {
      "op": "CODECOPY"
    },
    "3112": {
      "op": "DUP2"
    },
    "3113": {
      "op": "MLOAD"
    },
    "3114": {
      "op": "SWAP2"
    },
    "3115": {
      "op": "MSTORE"
    },
    "3116": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3117": {
      "op": "ADD"
    },
    "3118": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3120": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3121": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3122": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3123": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "SUB",
      "path": "37"
    },
    "3124": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3125": {
      "fn": "BPool.setup",
      "offset": [
        7698,
        7828
      ],
      "op": "LOG3",
      "path": "37"
    },
    "3126": {
      "fn": "BPool.setup",
      "offset": [
        7858,
        7868
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 30,
      "value": "0xC3D"
    },
    "3129": {
      "fn": "BPool.setup",
      "offset": [
        7858,
        7866
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3F7E"
    },
    "3132": {
      "fn": "BPool.setup",
      "jump": "i",
      "offset": [
        7858,
        7868
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3133": {
      "fn": "BPool.setup",
      "offset": [
        7858,
        7868
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3134": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 31,
      "value": "0x40"
    },
    "3136": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3137": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3138": {
      "op": "DUP4"
    },
    "3139": {
      "op": "DUP2"
    },
    "3140": {
      "op": "MSTORE"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3143": {
      "op": "DUP2"
    },
    "3144": {
      "op": "ADD"
    },
    "3145": {
      "op": "DUP4"
    },
    "3146": {
      "op": "SWAP1"
    },
    "3147": {
      "op": "MSTORE"
    },
    "3148": {
      "op": "SWAP1"
    },
    "3149": {
      "op": "DUP2"
    },
    "3150": {
      "op": "ADD"
    },
    "3151": {
      "op": "DUP7"
    },
    "3152": {
      "op": "SWAP1"
    },
    "3153": {
      "op": "MSTORE"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3156": {
      "op": "DUP2"
    },
    "3157": {
      "op": "ADD"
    },
    "3158": {
      "op": "DUP6"
    },
    "3159": {
      "op": "SWAP1"
    },
    "3160": {
      "op": "MSTORE"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3167": {
      "op": "SHL"
    },
    "3168": {
      "op": "SUB"
    },
    "3169": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3170": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "DUP9",
      "path": "37"
    },
    "3171": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "AND",
      "path": "37"
    },
    "3172": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3173": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3174": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "DUP6",
      "path": "37"
    },
    "3175": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "AND",
      "path": "37"
    },
    "3176": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3177": {
      "fn": "BPool.setup",
      "offset": [
        7906,
        7916
      ],
      "op": "CALLER",
      "path": "37"
    },
    "3178": {
      "fn": "BPool.setup",
      "offset": [
        7906,
        7916
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3179": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xBECE8B4DCDBE446DD65A9288154698E067E3E91DE17A1A408C2F531B9F845D73"
    },
    "3212": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3215": {
      "op": "ADD"
    },
    "3216": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3218": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3219": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3220": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3221": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "SUB",
      "path": "37"
    },
    "3222": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3223": {
      "fn": "BPool.setup",
      "offset": [
        7883,
        8102
      ],
      "op": "LOG4",
      "path": "37"
    },
    "3224": {
      "op": "POP"
    },
    "3225": {
      "op": "POP"
    },
    "3226": {
      "offset": [
        2988,
        2994
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "3228": {
      "offset": [
        2988,
        3002
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3229": {
      "fn": "BPool.setup",
      "offset": [
        2988,
        3002
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3232": {
      "op": "NOT"
    },
    "3233": {
      "offset": [
        2988,
        3002
      ],
      "op": "AND",
      "path": "37"
    },
    "3234": {
      "fn": "BPool.setup",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3235": {
      "fn": "BPool.setup",
      "offset": [
        2988,
        3002
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "3236": {
      "op": "POP"
    },
    "3237": {
      "op": "POP"
    },
    "3238": {
      "op": "POP"
    },
    "3239": {
      "op": "POP"
    },
    "3240": {
      "fn": "BPool.setup",
      "jump": "o",
      "offset": [
        6713,
        8109
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3241": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3242": {
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "3244": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2922,
        2928
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3245": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34511,
        34533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3247": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34511,
        34533
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3248": {
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "3250": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2922,
        2928
      ],
      "op": "AND",
      "path": "37"
    },
    "3251": {
      "offset": [
        2921,
        2928
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3252": {
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCCF"
    },
    "3255": {
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3256": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3258": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3259": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3265": {
      "op": "SHL"
    },
    "3266": {
      "offset": [
        2913,
        2944
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3267": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3268": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3270": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "ADD",
      "path": "37"
    },
    "3271": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "3274": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3275": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "3278": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3279": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3280": {
      "offset": [
        2954,
        2960
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "3282": {
      "offset": [
        2954,
        2967
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3283": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2954,
        2967
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3286": {
      "op": "NOT"
    },
    "3287": {
      "offset": [
        2954,
        2967
      ],
      "op": "AND",
      "path": "37"
    },
    "3288": {
      "offset": [
        2963,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "3290": {
      "offset": [
        2954,
        2967
      ],
      "op": "OR",
      "path": "37"
    },
    "3291": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2954,
        2967
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3292": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2954,
        2967
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "3293": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34593,
        34603
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 32,
      "value": "0xB"
    },
    "3295": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34593,
        34603
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3300": {
      "op": "SHL"
    },
    "3301": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34593,
        34603
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3302": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34593,
        34603
      ],
      "op": "DIV",
      "path": "37"
    },
    "3303": {
      "offset": [
        2954,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "3305": {
      "branch": 311,
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34593,
        34603
      ],
      "op": "AND",
      "path": "37"
    },
    "3306": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD05"
    },
    "3309": {
      "branch": 311,
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3310": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3312": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3313": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3321": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3322": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3324": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "ADD",
      "path": "37"
    },
    "3325": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "3328": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3329": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x572D"
    },
    "3332": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        34585,
        34625
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3333": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34585,
        34625
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3334": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34647,
        34664
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 33,
      "value": "0x4"
    },
    "3336": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34647,
        34664
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3337": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34635,
        34665
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD1A"
    },
    "3340": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34635,
        34665
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3347": {
      "op": "SHL"
    },
    "3348": {
      "op": "SUB"
    },
    "3349": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34647,
        34664
      ],
      "op": "AND",
      "path": "37"
    },
    "3350": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34635,
        34646
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "3353": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        34635,
        34665
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3354": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34635,
        34665
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3355": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34712,
        34729
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3357": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34712,
        34729
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3364": {
      "op": "SHL"
    },
    "3365": {
      "op": "SUB"
    },
    "3366": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34712,
        34729
      ],
      "op": "AND",
      "path": "37"
    },
    "3367": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34676,
        34700
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3369": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34703,
        34730
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3370": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34703,
        34730
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3371": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34703,
        34730
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3372": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34703,
        34711
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "3374": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34703,
        34730
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3376": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34703,
        34730
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3377": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34703,
        34730
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3379": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34703,
        34730
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3380": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34703,
        34730
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3381": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34796,
        34813
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 34,
      "value": "0x3"
    },
    "3383": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34796,
        34813
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3384": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34796,
        34813
      ],
      "op": "ADD",
      "path": "37"
    },
    "3385": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34796,
        34813
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3386": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34827,
        34839
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "3388": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34827,
        34839
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3389": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34758,
        34875
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD47"
    },
    "3392": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34758,
        34875
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3393": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34796,
        34813
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3394": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34853,
        34865
      ],
      "op": "DUP7",
      "path": "37"
    },
    "3395": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34758,
        34782
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FDD"
    },
    "3398": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        34758,
        34875
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3399": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34758,
        34875
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3400": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34741,
        34875
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3401": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34741,
        34875
      ],
      "op": "POP",
      "path": "37"
    },
    "3402": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34911,
        34923
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 35
    },
    "3403": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34893,
        34907
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3404": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34893,
        34923
      ],
      "op": "LT",
      "path": "37"
    },
    "3405": {
      "branch": 312,
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34893,
        34923
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3406": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD69"
    },
    "3409": {
      "branch": 312,
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3410": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3412": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3419": {
      "op": "SHL"
    },
    "3420": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3421": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3422": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3424": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "ADD",
      "path": "37"
    },
    "3425": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "3428": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3429": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5758"
    },
    "3432": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        34885,
        34941
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3433": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34885,
        34941
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3434": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35005,
        35022
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 36,
      "value": "0x4"
    },
    "3436": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35005,
        35022
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3443": {
      "op": "SHL"
    },
    "3444": {
      "op": "SUB"
    },
    "3445": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35005,
        35022
      ],
      "op": "AND",
      "path": "37"
    },
    "3446": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35023
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3448": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35023
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3449": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35023
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3450": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35023
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3451": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35004
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "3453": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35023
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3455": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35023
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3456": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35023
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3458": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35023
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3459": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35023
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3460": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35031
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3462": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35031
      ],
      "op": "ADD",
      "path": "37"
    },
    "3463": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34996,
        35031
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3464": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34991,
        35047
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDAE"
    },
    "3467": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34991,
        35047
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3468": {
      "offset": [
        1725,
        1733
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xD9E"
    },
    "3471": {
      "offset": [
        1732,
        1733
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "3473": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "3482": {
      "offset": [
        1725,
        1733
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "3485": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        1725,
        1733
      ],
      "op": "JUMP",
      "path": "33"
    },
    "3486": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        1725,
        1733
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "3487": {
      "offset": [
        1724,
        1742
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xDA9"
    },
    "3490": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        1724,
        1742
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "3491": {
      "offset": [
        1737,
        1742
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "3493": {
      "offset": [
        1724,
        1742
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x57A9"
    },
    "3496": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        1724,
        1742
      ],
      "op": "JUMP",
      "path": "33"
    },
    "3497": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        1724,
        1742
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "3498": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34991,
        34995
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4087"
    },
    "3501": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        34991,
        35047
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3502": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34991,
        35047
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3503": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34973,
        34987
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3504": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34973,
        35047
      ],
      "op": "GT",
      "path": "37"
    },
    "3505": {
      "branch": 313,
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34973,
        35047
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3506": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDF1"
    },
    "3509": {
      "branch": 313,
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3510": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3512": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3519": {
      "op": "SHL"
    },
    "3520": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3521": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3524": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3526": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3527": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "ADD",
      "path": "37"
    },
    "3528": {
      "op": "MSTORE"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3533": {
      "op": "DUP3"
    },
    "3534": {
      "op": "ADD"
    },
    "3535": {
      "op": "MSTORE"
    },
    "3536": {
      "op": "PUSH17",
      "value": "0x4552525F4D41585F4F55545F524154494F"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3556": {
      "op": "SHL"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3559": {
      "op": "DUP3"
    },
    "3560": {
      "op": "ADD"
    },
    "3561": {
      "op": "MSTORE"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3564": {
      "op": "ADD"
    },
    "3565": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "3568": {
      "op": "JUMP"
    },
    "3569": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34952,
        35090
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3570": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35121,
        35160
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 37,
      "value": "0xDFF"
    },
    "3573": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35126,
        35135
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3574": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35126,
        35143
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3576": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35126,
        35143
      ],
      "op": "ADD",
      "path": "37"
    },
    "3577": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35126,
        35143
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3578": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35145,
        35159
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3579": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35121,
        35125
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x416C"
    },
    "3582": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        35121,
        35160
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3583": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35121,
        35160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3584": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35101,
        35118
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3586": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35101,
        35118
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3587": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35101,
        35118
      ],
      "op": "ADD",
      "path": "37"
    },
    "3588": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35101,
        35160
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "3589": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35255,
        35272
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 38,
      "value": "0x4"
    },
    "3591": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35255,
        35272
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3592": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3594": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3595": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3596": {
      "op": "DUP5"
    },
    "3597": {
      "op": "DUP2"
    },
    "3598": {
      "op": "MSTORE"
    },
    "3599": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35290,
        35305
      ],
      "op": "TIMESTAMP",
      "path": "37"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3602": {
      "op": "DUP3"
    },
    "3603": {
      "op": "ADD"
    },
    "3604": {
      "op": "MSTORE"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3611": {
      "op": "SHL"
    },
    "3612": {
      "op": "SUB"
    },
    "3613": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35255,
        35272
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3614": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35255,
        35272
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3615": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35255,
        35272
      ],
      "op": "AND",
      "path": "37"
    },
    "3616": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35255,
        35272
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3617": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35243,
        35253
      ],
      "op": "CALLER",
      "path": "37"
    },
    "3618": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35243,
        35253
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3619": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x9D9058FD2F25CCC389FEC7720ABEF0CA83472F5ABFAFD5F10D37F51E6A0493F3"
    },
    "3652": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3653": {
      "op": "ADD"
    },
    "3654": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3656": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3657": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3658": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3659": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "SUB",
      "path": "37"
    },
    "3660": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3661": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35234,
        35306
      ],
      "op": "LOG3",
      "path": "37"
    },
    "3662": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 39,
      "value": "0x40"
    },
    "3664": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3665": {
      "op": "DUP5"
    },
    "3666": {
      "op": "DUP2"
    },
    "3667": {
      "op": "MSTORE"
    },
    "3668": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xFCDA32798D5A9D032F49B37FEA876D422F18F6E386E0F07DB6029B693624B2C2"
    },
    "3701": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3704": {
      "op": "ADD"
    },
    "3705": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3707": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3708": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3709": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3710": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "SUB",
      "path": "37"
    },
    "3711": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3712": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35321,
        35342
      ],
      "op": "LOG1",
      "path": "37"
    },
    "3713": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xF"
    },
    "3715": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35489
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3716": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35501,
        35518
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3718": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35501,
        35518
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3719": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3721": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3722": {
      "op": "PUSH4",
      "value": "0xD098AB3"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3729": {
      "op": "SHL"
    },
    "3730": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3731": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "op": "SUB"
    },
    "3740": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35501,
        35518
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3741": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35501,
        35518
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3742": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35501,
        35518
      ],
      "op": "AND",
      "path": "37"
    },
    "3743": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3745": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3746": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "ADD",
      "path": "37"
    },
    "3747": {
      "op": "MSTORE"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3750": {
      "op": "DUP2"
    },
    "3751": {
      "op": "ADD"
    },
    "3752": {
      "op": "DUP8"
    },
    "3753": {
      "op": "SWAP1"
    },
    "3754": {
      "op": "MSTORE"
    },
    "3755": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35489
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3756": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35489
      ],
      "op": "AND",
      "path": "37"
    },
    "3757": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35489
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3758": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35500
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x1A131566"
    },
    "3763": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35500
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3769": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3771": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3772": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3773": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3774": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "SUB",
      "path": "37"
    },
    "3775": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3776": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP7",
      "path": "37"
    },
    "3777": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "GAS",
      "path": "37"
    },
    "3778": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "STATICCALL",
      "path": "37"
    },
    "3779": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3780": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3781": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3782": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xED3"
    },
    "3785": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3786": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "3787": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3789": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3790": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "3791": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "3792": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3794": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "REVERT",
      "path": "37"
    },
    "3795": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3796": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "POP",
      "path": "37"
    },
    "3797": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "POP",
      "path": "37"
    },
    "3798": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "POP",
      "path": "37"
    },
    "3799": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "POP",
      "path": "37"
    },
    "3800": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3802": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3803": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "3804": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "3806": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "NOT",
      "path": "37"
    },
    "3807": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "3809": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3810": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "ADD",
      "path": "37"
    },
    "3811": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "AND",
      "path": "37"
    },
    "3812": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3813": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "ADD",
      "path": "37"
    },
    "3814": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3815": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3817": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3818": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "POP",
      "path": "37"
    },
    "3819": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3820": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "ADD",
      "path": "37"
    },
    "3821": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3822": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xEF7"
    },
    "3825": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3826": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3827": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x57C1"
    },
    "3830": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        35479,
        35533
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3831": {
      "branch": 314,
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35479,
        35533
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3832": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35462,
        36616
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3833": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35462,
        36616
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1085"
    },
    "3836": {
      "branch": 314,
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35462,
        36616
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3837": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35596,
        35613
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3839": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35596,
        35613
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3840": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35596,
        35613
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3847": {
      "op": "SHL"
    },
    "3848": {
      "op": "SUB"
    },
    "3849": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35596,
        35613
      ],
      "op": "AND",
      "path": "37"
    },
    "3850": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35558,
        35584
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3852": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35587,
        35614
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3853": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35587,
        35614
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3854": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35587,
        35614
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3855": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35587,
        35595
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "3857": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35587,
        35614
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3859": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35587,
        35614
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3860": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35587,
        35614
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3862": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35587,
        35614
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3863": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35587,
        35614
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3864": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35692,
        35711
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3865": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35692,
        35711
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3866": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35692,
        35711
      ],
      "op": "ADD",
      "path": "37"
    },
    "3867": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35692,
        35711
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3868": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35729,
        35741
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "3870": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35729,
        35741
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3871": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35650,
        35785
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF29"
    },
    "3874": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35650,
        35785
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3875": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35692,
        35711
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3876": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35759,
        35771
      ],
      "op": "DUP9",
      "path": "37"
    },
    "3877": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35650,
        35674
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FDD"
    },
    "3880": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        35650,
        35785
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3881": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35650,
        35785
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3882": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35628,
        35785
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3883": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35628,
        35785
      ],
      "op": "POP",
      "path": "37"
    },
    "3884": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35822,
        35860
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 40,
      "value": "0xF39"
    },
    "3887": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35827,
        35838
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3888": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35827,
        35846
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3890": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35827,
        35846
      ],
      "op": "ADD",
      "path": "37"
    },
    "3891": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35827,
        35846
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3892": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35848,
        35859
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3893": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35822,
        35826
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x416C"
    },
    "3896": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        35822,
        35860
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3897": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35822,
        35860
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3898": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35800,
        35819
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3900": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35800,
        35819
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3901": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35800,
        35819
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3902": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35800,
        35819
      ],
      "op": "ADD",
      "path": "37"
    },
    "3903": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35800,
        35860
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3904": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35800,
        35860
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3905": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35800,
        35860
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3906": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35800,
        35860
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "3907": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35988,
        36005
      ],
      "op": "SLOAD",
      "path": "37",
      "statement": 41
    },
    "3908": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35959,
        35970
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "3910": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35959,
        35970
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3911": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3913": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3914": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3915": {
      "op": "DUP5"
    },
    "3916": {
      "op": "DUP2"
    },
    "3917": {
      "op": "MSTORE"
    },
    "3918": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36052,
        36067
      ],
      "op": "TIMESTAMP",
      "path": "37"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3921": {
      "op": "DUP3"
    },
    "3922": {
      "op": "ADD"
    },
    "3923": {
      "op": "MSTORE"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3930": {
      "op": "SHL"
    },
    "3931": {
      "op": "SUB"
    },
    "3932": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35988,
        36005
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3933": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35988,
        36005
      ],
      "op": "DUP5",
      "path": "37"
    },
    "3934": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35988,
        36005
      ],
      "op": "AND",
      "path": "37"
    },
    "3935": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35988,
        36005
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3936": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35988,
        36005
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "3939": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35959,
        35970
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3940": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35959,
        35970
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3941": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35959,
        35970
      ],
      "op": "DIV",
      "path": "37"
    },
    "3942": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35959,
        35970
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3943": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35959,
        35970
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3944": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35959,
        35970
      ],
      "op": "AND",
      "path": "37"
    },
    "3945": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35959,
        35970
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3946": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x9D9058FD2F25CCC389FEC7720ABEF0CA83472F5ABFAFD5F10D37F51E6A0493F3"
    },
    "3979": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3980": {
      "op": "ADD"
    },
    "3981": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3983": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3984": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3985": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3986": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "SUB",
      "path": "37"
    },
    "3987": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3988": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35933,
        36081
      ],
      "op": "LOG3",
      "path": "37"
    },
    "3989": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36110,
        36121
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 42,
      "value": "0xA"
    },
    "3991": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36110,
        36121
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3992": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36095,
        36136
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xFAF"
    },
    "3995": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36095,
        36136
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3996": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36110,
        36121
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "3999": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36110,
        36121
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4000": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36110,
        36121
      ],
      "op": "DIV",
      "path": "37"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4007": {
      "op": "SHL"
    },
    "4008": {
      "op": "SUB"
    },
    "4009": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36110,
        36121
      ],
      "op": "AND",
      "path": "37"
    },
    "4010": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36123,
        36135
      ],
      "op": "DUP8",
      "path": "37"
    },
    "4011": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36095,
        36109
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41C9"
    },
    "4014": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        36095,
        36136
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4015": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36095,
        36136
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4016": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36209,
        36237
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 43,
      "value": "0xFB8"
    },
    "4019": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36224,
        36236
      ],
      "op": "DUP7",
      "path": "37"
    },
    "4020": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36209,
        36223
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41D3"
    },
    "4023": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        36209,
        36237
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4024": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36209,
        36237
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4025": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36316,
        36333
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 44,
      "value": "0x3"
    },
    "4027": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36316,
        36333
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4028": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36335,
        36346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "4030": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36335,
        36346
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4031": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36300,
        36360
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xFDA"
    },
    "4034": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36300,
        36360
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4041": {
      "op": "SHL"
    },
    "4042": {
      "op": "SUB"
    },
    "4043": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36316,
        36333
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4044": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36316,
        36333
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4045": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36316,
        36333
      ],
      "op": "AND",
      "path": "37"
    },
    "4046": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36316,
        36333
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4047": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36316,
        36333
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "4050": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36335,
        36346
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4051": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36335,
        36346
      ],
      "op": "DIV",
      "path": "37"
    },
    "4052": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36335,
        36346
      ],
      "op": "AND",
      "path": "37"
    },
    "4053": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36348,
        36359
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4054": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36300,
        36315
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41DC"
    },
    "4057": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        36300,
        36360
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4058": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36300,
        36360
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4059": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36446
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 45,
      "value": "0xF"
    },
    "4061": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36446
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4062": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36472,
        36489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "4064": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36472,
        36489
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4065": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4067": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4068": {
      "op": "PUSH4",
      "value": "0x54A9763"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "4075": {
      "op": "SHL"
    },
    "4076": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4077": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4084": {
      "op": "SHL"
    },
    "4085": {
      "op": "SUB"
    },
    "4086": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36472,
        36489
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4087": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36472,
        36489
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4088": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36472,
        36489
      ],
      "op": "AND",
      "path": "37"
    },
    "4089": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4091": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4092": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "ADD",
      "path": "37"
    },
    "4093": {
      "op": "MSTORE"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4096": {
      "op": "DUP2"
    },
    "4097": {
      "op": "ADD"
    },
    "4098": {
      "op": "DUP5"
    },
    "4099": {
      "op": "SWAP1"
    },
    "4100": {
      "op": "MSTORE"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4103": {
      "op": "DUP2"
    },
    "4104": {
      "op": "ADD"
    },
    "4105": {
      "op": "DUP10"
    },
    "4106": {
      "op": "SWAP1"
    },
    "4107": {
      "op": "MSTORE"
    },
    "4108": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36446
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4109": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36446
      ],
      "op": "AND",
      "path": "37"
    },
    "4110": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36446
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4111": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36454
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x54A97630"
    },
    "4116": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36454
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4119": {
      "op": "ADD"
    },
    "4120": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4122": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4124": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4125": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4126": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4127": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "SUB",
      "path": "37"
    },
    "4128": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4129": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4131": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP8",
      "path": "37"
    },
    "4132": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4133": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "EXTCODESIZE",
      "path": "37"
    },
    "4134": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4135": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4136": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4137": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1031"
    },
    "4140": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4141": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4143": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4144": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "REVERT",
      "path": "37"
    },
    "4145": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4146": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "POP",
      "path": "37"
    },
    "4147": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "GAS",
      "path": "37"
    },
    "4148": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "CALL",
      "path": "37"
    },
    "4149": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4150": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4151": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4152": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1045"
    },
    "4155": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4156": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "4157": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4159": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4160": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "4161": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "4162": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4164": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "REVERT",
      "path": "37"
    },
    "4165": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4166": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "POP",
      "path": "37"
    },
    "4167": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "POP",
      "path": "37"
    },
    "4168": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "POP",
      "path": "37"
    },
    "4169": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36436,
        36562
      ],
      "op": "POP",
      "path": "37"
    },
    "4170": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "PUSH32",
      "path": "37",
      "statement": 46,
      "value": "0x87B3975661762D852DDF2EEAAD6A43B2D93777DE7B3B7BDB634283DF32456118"
    },
    "4203": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36592,
        36604
      ],
      "op": "DUP7",
      "path": "37"
    },
    "4204": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4206": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4207": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x107A"
    },
    "4210": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4211": {
      "op": "DUP2"
    },
    "4212": {
      "op": "MSTORE"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4215": {
      "op": "ADD"
    },
    "4216": {
      "op": "SWAP1"
    },
    "4217": {
      "op": "JUMP"
    },
    "4218": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4219": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4221": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4222": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4223": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4224": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "SUB",
      "path": "37"
    },
    "4225": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4226": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36581,
        36605
      ],
      "op": "LOG1",
      "path": "37"
    },
    "4227": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35544,
        36616
      ],
      "op": "POP",
      "path": "37"
    },
    "4228": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35544,
        36616
      ],
      "op": "POP",
      "path": "37"
    },
    "4229": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        35462,
        36616
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4230": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36634,
        36674
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 47,
      "value": "0x108F"
    },
    "4233": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36649,
        36659
      ],
      "op": "CALLER",
      "path": "37"
    },
    "4234": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36661,
        36673
      ],
      "op": "DUP6",
      "path": "37"
    },
    "4235": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36634,
        36648
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41C9"
    },
    "4238": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        36634,
        36674
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4239": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36634,
        36674
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4240": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36739,
        36767
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 48,
      "value": "0x1098"
    },
    "4243": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36754,
        36766
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4244": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36739,
        36753
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41D3"
    },
    "4247": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        36739,
        36767
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4248": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36739,
        36767
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4249": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36838,
        36855
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 49,
      "value": "0x4"
    },
    "4251": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36838,
        36855
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4252": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36822,
        36884
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10AF"
    },
    "4255": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36822,
        36884
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4262": {
      "op": "SHL"
    },
    "4263": {
      "op": "SUB"
    },
    "4264": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36838,
        36855
      ],
      "op": "AND",
      "path": "37"
    },
    "4265": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36857,
        36867
      ],
      "op": "CALLER",
      "path": "37"
    },
    "4266": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36869,
        36883
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4267": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36822,
        36837
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41DC"
    },
    "4270": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        36822,
        36884
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4271": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36822,
        36884
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4272": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        36894,
        36915
      ],
      "op": "POP",
      "path": "37",
      "statement": 50
    },
    "4273": {
      "offset": [
        2988,
        2994
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "4275": {
      "offset": [
        2988,
        3002
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4276": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2988,
        3002
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4279": {
      "op": "NOT"
    },
    "4280": {
      "offset": [
        2988,
        3002
      ],
      "op": "AND",
      "path": "37"
    },
    "4281": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4282": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        2988,
        3002
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "4283": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4284": {
      "fn": "BPool.exitswapPoolAmountIn",
      "offset": [
        34390,
        36922
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4285": {
      "op": "POP"
    },
    "4286": {
      "op": "POP"
    },
    "4287": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "o",
      "offset": [
        34390,
        36922
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4288": {
      "offset": [
        1569,
        1621
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4289": {
      "offset": [
        1610,
        1621
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA73"
    },
    "4292": {
      "offset": [
        1617,
        1621
      ],
      "op": "PUSH5",
      "path": "33",
      "value": "0x2540BE400"
    },
    "4298": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "4307": {
      "offset": [
        1610,
        1621
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "4310": {
      "fn": "BPool.exitswapPoolAmountIn",
      "jump": "i",
      "offset": [
        1610,
        1621
      ],
      "op": "JUMP",
      "path": "33"
    },
    "4311": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4312": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12941,
        12964
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 51,
      "value": "0xB"
    },
    "4314": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12941,
        12964
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4321": {
      "op": "SHL"
    },
    "4322": {
      "op": "SUB"
    },
    "4323": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12941,
        12964
      ],
      "op": "AND",
      "path": "37"
    },
    "4324": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12968,
        12978
      ],
      "op": "CALLER",
      "path": "37"
    },
    "4325": {
      "branch": 315,
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12941,
        12978
      ],
      "op": "EQ",
      "path": "37"
    },
    "4326": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1129"
    },
    "4329": {
      "branch": 315,
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4330": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4332": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4333": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4339": {
      "op": "SHL"
    },
    "4340": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4341": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4344": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4346": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4347": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "ADD",
      "path": "37"
    },
    "4348": {
      "op": "MSTORE"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4353": {
      "op": "DUP3"
    },
    "4354": {
      "op": "ADD"
    },
    "4355": {
      "op": "MSTORE"
    },
    "4356": {
      "op": "PUSH21",
      "value": "0x27A7262C9026A0A925A2AA1021A7A62622A1AA27A9"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "4380": {
      "op": "SHL"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4383": {
      "op": "DUP3"
    },
    "4384": {
      "op": "ADD"
    },
    "4385": {
      "op": "MSTORE"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4388": {
      "op": "ADD"
    },
    "4389": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "4392": {
      "op": "JUMP"
    },
    "4393": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12933,
        13004
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4400": {
      "op": "SHL"
    },
    "4401": {
      "op": "SUB"
    },
    "4402": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13022,
        13049
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 52
    },
    "4403": {
      "branch": 316,
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13022,
        13049
      ],
      "op": "AND",
      "path": "37"
    },
    "4404": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x117F"
    },
    "4407": {
      "branch": 316,
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4408": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4410": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4411": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4417": {
      "op": "SHL"
    },
    "4418": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4419": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4422": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4424": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4425": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "ADD",
      "path": "37"
    },
    "4426": {
      "op": "MSTORE"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4431": {
      "op": "DUP3"
    },
    "4432": {
      "op": "ADD"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "op": "PUSH32",
      "value": "0x496E76616C6964205F6E6577436F6C6C6563746F722061646472657373000000"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4469": {
      "op": "DUP3"
    },
    "4470": {
      "op": "ADD"
    },
    "4471": {
      "op": "MSTORE"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4474": {
      "op": "ADD"
    },
    "4475": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "4478": {
      "op": "JUMP"
    },
    "4479": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13014,
        13083
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4480": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13101,
        13116
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 53
    },
    "4481": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13101,
        13116
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4482": {
      "branch": 317,
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13101,
        13116
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4483": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13101,
        13142
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x119F"
    },
    "4486": {
      "branch": 317,
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13101,
        13142
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4487": {
      "op": "POP"
    },
    "4488": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x119B"
    },
    "4491": {
      "offset": [
        1058,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2710"
    },
    "4494": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "4503": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "4506": {
      "fn": "BPool.updatePublishMarketFee",
      "jump": "i",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMP",
      "path": "33"
    },
    "4507": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4508": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13120,
        13131
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4509": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13120,
        13142
      ],
      "op": "LT",
      "path": "37"
    },
    "4510": {
      "branch": 318,
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13120,
        13142
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4511": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13101,
        13142
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4512": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x11BB"
    },
    "4515": {
      "branch": 318,
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4516": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4518": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4519": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4525": {
      "op": "SHL"
    },
    "4526": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4527": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4528": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4530": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "ADD",
      "path": "37"
    },
    "4531": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "4534": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4535": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x57DE"
    },
    "4538": {
      "fn": "BPool.updatePublishMarketFee",
      "jump": "i",
      "offset": [
        13093,
        13158
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4539": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13093,
        13158
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4540": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x11CE"
    },
    "4543": {
      "offset": [
        1115,
        1117
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xA"
    },
    "4545": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "4554": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "4557": {
      "fn": "BPool.updatePublishMarketFee",
      "jump": "i",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMP",
      "path": "33"
    },
    "4558": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4559": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13176,
        13187
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 54
    },
    "4560": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13176,
        13198
      ],
      "op": "GT",
      "path": "37"
    },
    "4561": {
      "branch": 319,
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13176,
        13198
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4562": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x11ED"
    },
    "4565": {
      "branch": 319,
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4566": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4568": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4569": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4575": {
      "op": "SHL"
    },
    "4576": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4577": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4578": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4580": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "ADD",
      "path": "37"
    },
    "4581": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "4584": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4585": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5803"
    },
    "4588": {
      "fn": "BPool.updatePublishMarketFee",
      "jump": "i",
      "offset": [
        13168,
        13214
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4589": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13168,
        13214
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4590": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13247
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 55,
      "value": "0xB"
    },
    "4592": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4593": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4600": {
      "op": "SHL"
    },
    "4601": {
      "op": "SUB"
    },
    "4602": {
      "op": "NOT"
    },
    "4603": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "AND",
      "path": "37"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4610": {
      "op": "SHL"
    },
    "4611": {
      "op": "SUB"
    },
    "4612": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4613": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "AND",
      "path": "37"
    },
    "4614": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4615": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4616": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "OR",
      "path": "37"
    },
    "4617": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4618": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4619": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4622": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 56
    },
    "4623": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13273,
        13308
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4624": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13273,
        13308
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "4625": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 57,
      "value": "0x40"
    },
    "4627": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4628": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x5E3E722DBD3B6B8071B78568AC80CD0E8FF92E4FB3024E755D504D8F7C2F6F09"
    },
    "4661": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4662": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1243"
    },
    "4665": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4666": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13347,
        13357
      ],
      "op": "CALLER",
      "path": "37"
    },
    "4667": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13347,
        13357
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4668": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13224,
        13263
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4669": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP6",
      "path": "37"
    },
    "4670": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13273,
        13308
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4671": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5828"
    },
    "4674": {
      "fn": "BPool.updatePublishMarketFee",
      "jump": "i",
      "offset": [
        13323,
        13406
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4675": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4676": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4678": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4679": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4680": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4681": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "SUB",
      "path": "37"
    },
    "4682": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4683": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        13323,
        13406
      ],
      "op": "LOG1",
      "path": "37"
    },
    "4684": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "POP",
      "path": "37"
    },
    "4685": {
      "fn": "BPool.updatePublishMarketFee",
      "offset": [
        12838,
        13413
      ],
      "op": "POP",
      "path": "37"
    },
    "4686": {
      "fn": "BPool.updatePublishMarketFee",
      "jump": "o",
      "offset": [
        12838,
        13413
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4687": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "4688": {
      "fn": "BToken.transferFrom",
      "offset": [
        4767,
        4771
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "4690": {
      "fn": "BToken.transferFrom",
      "offset": [
        4809,
        4819
      ],
      "op": "CALLER",
      "path": "38",
      "statement": 58
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4697": {
      "op": "SHL"
    },
    "4698": {
      "op": "SUB"
    },
    "4699": {
      "fn": "BToken.transferFrom",
      "offset": [
        4809,
        4826
      ],
      "op": "DUP6",
      "path": "38"
    },
    "4700": {
      "fn": "BToken.transferFrom",
      "offset": [
        4809,
        4826
      ],
      "op": "AND",
      "path": "38"
    },
    "4701": {
      "fn": "BToken.transferFrom",
      "offset": [
        4809,
        4826
      ],
      "op": "EQ",
      "path": "38"
    },
    "4702": {
      "branch": 398,
      "fn": "BToken.transferFrom",
      "offset": [
        4809,
        4826
      ],
      "op": "DUP1",
      "path": "38"
    },
    "4703": {
      "fn": "BToken.transferFrom",
      "offset": [
        4809,
        4864
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x128B"
    },
    "4706": {
      "branch": 398,
      "fn": "BToken.transferFrom",
      "offset": [
        4809,
        4864
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "4707": {
      "op": "POP"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4714": {
      "op": "SHL"
    },
    "4715": {
      "op": "SUB"
    },
    "4716": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "DUP5",
      "path": "38"
    },
    "4717": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "AND",
      "path": "38"
    },
    "4718": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "4720": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4721": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4722": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4723": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4847
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "4725": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "4727": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4728": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4729": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4730": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4732": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "DUP1",
      "path": "38"
    },
    "4733": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "DUP4",
      "path": "38"
    },
    "4734": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4852
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "4735": {
      "fn": "BToken.transferFrom",
      "offset": [
        4853,
        4863
      ],
      "op": "CALLER",
      "path": "38"
    },
    "4736": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4864
      ],
      "op": "DUP5",
      "path": "38"
    },
    "4737": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4864
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4738": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4864
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4739": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4864
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "4740": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4864
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4741": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4864
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4742": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4864
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "4743": {
      "fn": "BToken.transferFrom",
      "offset": [
        4837,
        4864
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "4744": {
      "fn": "BToken.transferFrom",
      "offset": [
        4830,
        4864
      ],
      "op": "DUP3",
      "path": "38"
    },
    "4745": {
      "fn": "BToken.transferFrom",
      "offset": [
        4830,
        4864
      ],
      "op": "GT",
      "path": "38"
    },
    "4746": {
      "branch": 399,
      "fn": "BToken.transferFrom",
      "offset": [
        4830,
        4864
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "4747": {
      "fn": "BToken.transferFrom",
      "offset": [
        4809,
        4864
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "4748": {
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x12CF"
    },
    "4751": {
      "branch": 399,
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "4752": {
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4754": {
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "4755": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4761": {
      "op": "SHL"
    },
    "4762": {
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4763": {
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4766": {
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "4768": {
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "DUP3",
      "path": "38"
    },
    "4769": {
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "ADD",
      "path": "38"
    },
    "4770": {
      "op": "MSTORE"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4775": {
      "op": "DUP3"
    },
    "4776": {
      "op": "ADD"
    },
    "4777": {
      "op": "MSTORE"
    },
    "4778": {
      "op": "PUSH21",
      "value": "0x22A9292FA12A27A5A2A72FA120A22FA1A0A62622A9"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "4802": {
      "op": "SHL"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4805": {
      "op": "DUP3"
    },
    "4806": {
      "op": "ADD"
    },
    "4807": {
      "op": "MSTORE"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4810": {
      "op": "ADD"
    },
    "4811": {
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x99D"
    },
    "4814": {
      "op": "JUMP"
    },
    "4815": {
      "fn": "BToken.transferFrom",
      "offset": [
        4788,
        4912
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "4816": {
      "fn": "BToken.transferFrom",
      "offset": [
        4922,
        4942
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 59,
      "value": "0x12DA"
    },
    "4819": {
      "fn": "BToken.transferFrom",
      "offset": [
        4928,
        4931
      ],
      "op": "DUP5",
      "path": "38"
    },
    "4820": {
      "fn": "BToken.transferFrom",
      "offset": [
        4933,
        4936
      ],
      "op": "DUP5",
      "path": "38"
    },
    "4821": {
      "fn": "BToken.transferFrom",
      "offset": [
        4938,
        4941
      ],
      "op": "DUP5",
      "path": "38"
    },
    "4822": {
      "fn": "BToken.transferFrom",
      "offset": [
        4922,
        4927
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x41F0"
    },
    "4825": {
      "fn": "BToken.transferFrom",
      "jump": "i",
      "offset": [
        4922,
        4942
      ],
      "op": "JUMP",
      "path": "38"
    },
    "4826": {
      "fn": "BToken.transferFrom",
      "offset": [
        4922,
        4942
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "4827": {
      "fn": "BToken.transferFrom",
      "offset": [
        4956,
        4966
      ],
      "op": "CALLER",
      "path": "38"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4834": {
      "op": "SHL"
    },
    "4835": {
      "op": "SUB"
    },
    "4836": {
      "fn": "BToken.transferFrom",
      "offset": [
        4956,
        4973
      ],
      "op": "DUP6",
      "path": "38"
    },
    "4837": {
      "fn": "BToken.transferFrom",
      "offset": [
        4956,
        4973
      ],
      "op": "AND",
      "path": "38"
    },
    "4838": {
      "fn": "BToken.transferFrom",
      "offset": [
        4956,
        4973
      ],
      "op": "EQ",
      "path": "38"
    },
    "4839": {
      "fn": "BToken.transferFrom",
      "offset": [
        4956,
        4973
      ],
      "op": "DUP1",
      "path": "38"
    },
    "4840": {
      "fn": "BToken.transferFrom",
      "offset": [
        4956,
        4973
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "4841": {
      "branch": 400,
      "fn": "BToken.transferFrom",
      "offset": [
        4956,
        4973
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4842": {
      "fn": "BToken.transferFrom",
      "offset": [
        4956,
        5024
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1318"
    },
    "4845": {
      "branch": 400,
      "fn": "BToken.transferFrom",
      "offset": [
        4956,
        5024
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4853": {
      "op": "SHL"
    },
    "4854": {
      "op": "SUB"
    },
    "4855": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "DUP5",
      "path": "38"
    },
    "4856": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "AND",
      "path": "38"
    },
    "4857": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "4859": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4860": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4861": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4862": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4987
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "4864": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "4866": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4867": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4868": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4869": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4871": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "DUP1",
      "path": "38"
    },
    "4872": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "DUP4",
      "path": "38"
    },
    "4873": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        4992
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "4874": {
      "fn": "BToken.transferFrom",
      "offset": [
        4993,
        5003
      ],
      "op": "CALLER",
      "path": "38"
    },
    "4875": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        5004
      ],
      "op": "DUP5",
      "path": "38"
    },
    "4876": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        5004
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4877": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        5004
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4878": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        5004
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "4879": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        5004
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4880": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        5004
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4881": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        5004
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "4882": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        5004
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4885": {
      "op": "NOT"
    },
    "4886": {
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        5024
      ],
      "op": "EQ",
      "path": "38"
    },
    "4887": {
      "branch": 401,
      "fn": "BToken.transferFrom",
      "offset": [
        4977,
        5024
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "4888": {
      "fn": "BToken.transferFrom",
      "offset": [
        4956,
        5024
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "4889": {
      "fn": "BToken.transferFrom",
      "offset": [
        4952,
        5193
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "4890": {
      "fn": "BToken.transferFrom",
      "offset": [
        4952,
        5193
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1394"
    },
    "4893": {
      "branch": 401,
      "fn": "BToken.transferFrom",
      "offset": [
        4952,
        5193
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4900": {
      "op": "SHL"
    },
    "4901": {
      "op": "SUB"
    },
    "4902": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "DUP5",
      "path": "38",
      "statement": 60
    },
    "4903": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "AND",
      "path": "38"
    },
    "4904": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "4906": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4907": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4908": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4909": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5086
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "4911": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "4913": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4914": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4915": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4916": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4918": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "DUP1",
      "path": "38"
    },
    "4919": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "DUP4",
      "path": "38"
    },
    "4920": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5091
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "4921": {
      "fn": "BToken.transferFrom",
      "offset": [
        5092,
        5102
      ],
      "op": "CALLER",
      "path": "38"
    },
    "4922": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5103
      ],
      "op": "DUP5",
      "path": "38"
    },
    "4923": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5103
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4924": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5103
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4925": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5103
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "4926": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5103
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4927": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5103
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4928": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5103
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "4929": {
      "fn": "BToken.transferFrom",
      "offset": [
        5076,
        5103
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "4930": {
      "fn": "BToken.transferFrom",
      "offset": [
        5071,
        5109
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x134B"
    },
    "4933": {
      "fn": "BToken.transferFrom",
      "offset": [
        5071,
        5109
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4934": {
      "fn": "BToken.transferFrom",
      "offset": [
        5105,
        5108
      ],
      "op": "DUP4",
      "path": "38"
    },
    "4935": {
      "fn": "BToken.transferFrom",
      "offset": [
        5071,
        5075
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x416C"
    },
    "4938": {
      "fn": "BToken.transferFrom",
      "jump": "i",
      "offset": [
        5071,
        5109
      ],
      "op": "JUMP",
      "path": "38"
    },
    "4939": {
      "fn": "BToken.transferFrom",
      "offset": [
        5071,
        5109
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4946": {
      "op": "SHL"
    },
    "4947": {
      "op": "SUB"
    },
    "4948": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "DUP6",
      "path": "38"
    },
    "4949": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "AND",
      "path": "38"
    },
    "4950": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "4952": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4953": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4954": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4955": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5051
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "4957": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "4959": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4960": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4961": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4962": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4964": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "DUP1",
      "path": "38"
    },
    "4965": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "DUP4",
      "path": "38"
    },
    "4966": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5056
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "4967": {
      "fn": "BToken.transferFrom",
      "offset": [
        5057,
        5067
      ],
      "op": "CALLER",
      "path": "38"
    },
    "4968": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5068
      ],
      "op": "DUP1",
      "path": "38"
    },
    "4969": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5068
      ],
      "op": "DUP6",
      "path": "38"
    },
    "4970": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5068
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4971": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5068
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4972": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5068
      ],
      "op": "DUP4",
      "path": "38"
    },
    "4973": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5068
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4974": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5068
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "4975": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5068
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4976": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5068
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4977": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5068
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "4978": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5109
      ],
      "op": "DUP6",
      "path": "38"
    },
    "4979": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5109
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4980": {
      "fn": "BToken.transferFrom",
      "offset": [
        5041,
        5109
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "4981": {
      "fn": "BToken.transferFrom",
      "offset": [
        5128,
        5182
      ],
      "op": "MLOAD",
      "path": "38",
      "statement": 61
    },
    "4982": {
      "op": "SWAP4"
    },
    "4983": {
      "op": "DUP5"
    },
    "4984": {
      "op": "MSTORE"
    },
    "4985": {
      "fn": "BToken.transferFrom",
      "offset": [
        5057,
        5067
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4986": {
      "fn": "BToken.transferFrom",
      "offset": [
        5057,
        5067
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4989": {
      "op": "DUP1"
    },
    "4990": {
      "op": "MLOAD"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4993": {
      "op": "PUSH2",
      "value": "0x5944"
    },
    "4996": {
      "op": "DUP4"
    },
    "4997": {
      "op": "CODECOPY"
    },
    "4998": {
      "op": "DUP2"
    },
    "4999": {
      "op": "MLOAD"
    },
    "5000": {
      "op": "SWAP2"
    },
    "5001": {
      "op": "MSTORE"
    },
    "5002": {
      "fn": "BToken.transferFrom",
      "offset": [
        5128,
        5182
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "5003": {
      "op": "ADD"
    },
    "5004": {
      "fn": "BToken.transferFrom",
      "offset": [
        5128,
        5182
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "5006": {
      "fn": "BToken.transferFrom",
      "offset": [
        5128,
        5182
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "5007": {
      "fn": "BToken.transferFrom",
      "offset": [
        5128,
        5182
      ],
      "op": "DUP1",
      "path": "38"
    },
    "5008": {
      "fn": "BToken.transferFrom",
      "offset": [
        5128,
        5182
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "5009": {
      "fn": "BToken.transferFrom",
      "offset": [
        5128,
        5182
      ],
      "op": "SUB",
      "path": "38"
    },
    "5010": {
      "fn": "BToken.transferFrom",
      "offset": [
        5128,
        5182
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "5011": {
      "fn": "BToken.transferFrom",
      "offset": [
        5128,
        5182
      ],
      "op": "LOG3",
      "path": "38"
    },
    "5012": {
      "fn": "BToken.transferFrom",
      "offset": [
        4952,
        5193
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "5013": {
      "op": "POP"
    },
    "5014": {
      "fn": "BToken.transferFrom",
      "offset": [
        5209,
        5213
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 62,
      "value": "0x1"
    },
    "5016": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "5017": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "5018": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "POP",
      "path": "38"
    },
    "5019": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "POP",
      "path": "38"
    },
    "5020": {
      "fn": "BToken.transferFrom",
      "offset": [
        4650,
        5220
      ],
      "op": "POP",
      "path": "38"
    },
    "5021": {
      "fn": "BToken.transferFrom",
      "jump": "o",
      "offset": [
        4650,
        5220
      ],
      "op": "JUMP",
      "path": "38"
    },
    "5022": {
      "fn": "BPool.initialize",
      "offset": [
        4305,
        5272
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5023": {
      "fn": "BPool.initialize",
      "offset": [
        4592,
        4603
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 63,
      "value": "0xF"
    },
    "5025": {
      "fn": "BPool.initialize",
      "offset": [
        4592,
        4603
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "5026": {
      "fn": "BPool.initialize",
      "offset": [
        4567,
        4571
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5028": {
      "fn": "BPool.initialize",
      "offset": [
        4567,
        4571
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5033": {
      "op": "SHL"
    },
    "5034": {
      "fn": "BPool.initialize",
      "offset": [
        4592,
        4603
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5035": {
      "fn": "BPool.initialize",
      "offset": [
        4592,
        4603
      ],
      "op": "DIV",
      "path": "37"
    },
    "5036": {
      "fn": "BPool.initialize",
      "offset": [
        4592,
        4603
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "5038": {
      "fn": "BPool.initialize",
      "offset": [
        4592,
        4603
      ],
      "op": "AND",
      "path": "37"
    },
    "5039": {
      "branch": 320,
      "fn": "BPool.initialize",
      "offset": [
        4591,
        4603
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "5040": {
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x13FB"
    },
    "5043": {
      "branch": 320,
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5044": {
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5046": {
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5053": {
      "op": "SHL"
    },
    "5054": {
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5055": {
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5058": {
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "5060": {
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5061": {
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "ADD",
      "path": "37"
    },
    "5062": {
      "op": "MSTORE"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5067": {
      "op": "DUP3"
    },
    "5068": {
      "op": "ADD"
    },
    "5069": {
      "op": "MSTORE"
    },
    "5070": {
      "op": "PUSH32",
      "value": "0x4552525F414C52454144595F494E495449414C495A4544000000000000000000"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5105": {
      "op": "DUP3"
    },
    "5106": {
      "op": "ADD"
    },
    "5107": {
      "op": "MSTORE"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5110": {
      "op": "ADD"
    },
    "5111": {
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "5114": {
      "op": "JUMP"
    },
    "5115": {
      "fn": "BPool.initialize",
      "offset": [
        4583,
        4631
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5122": {
      "op": "SHL"
    },
    "5123": {
      "op": "SUB"
    },
    "5124": {
      "fn": "BPool.initialize",
      "offset": [
        4649,
        4673
      ],
      "op": "DUP10",
      "path": "37",
      "statement": 64
    },
    "5125": {
      "branch": 321,
      "fn": "BPool.initialize",
      "offset": [
        4649,
        4673
      ],
      "op": "AND",
      "path": "37"
    },
    "5126": {
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1451"
    },
    "5129": {
      "branch": 321,
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5130": {
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5132": {
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5139": {
      "op": "SHL"
    },
    "5140": {
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5141": {
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5144": {
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "5146": {
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5147": {
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "ADD",
      "path": "37"
    },
    "5148": {
      "op": "MSTORE"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5153": {
      "op": "DUP3"
    },
    "5154": {
      "op": "ADD"
    },
    "5155": {
      "op": "MSTORE"
    },
    "5156": {
      "op": "PUSH32",
      "value": "0x4552525F494E56414C49445F434F4E54524F4C4C45525F414444524553530000"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5191": {
      "op": "DUP3"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "MSTORE"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5196": {
      "op": "ADD"
    },
    "5197": {
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "5200": {
      "op": "JUMP"
    },
    "5201": {
      "fn": "BPool.initialize",
      "offset": [
        4641,
        4708
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5208": {
      "op": "SHL"
    },
    "5209": {
      "op": "SUB"
    },
    "5210": {
      "fn": "BPool.initialize",
      "offset": [
        4726,
        4747
      ],
      "op": "DUP9",
      "path": "37",
      "statement": 65
    },
    "5211": {
      "branch": 322,
      "fn": "BPool.initialize",
      "offset": [
        4726,
        4747
      ],
      "op": "AND",
      "path": "37"
    },
    "5212": {
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x14A7"
    },
    "5215": {
      "branch": 322,
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5216": {
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5218": {
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5225": {
      "op": "SHL"
    },
    "5226": {
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5227": {
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5230": {
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "5232": {
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5233": {
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "ADD",
      "path": "37"
    },
    "5234": {
      "op": "MSTORE"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5239": {
      "op": "DUP3"
    },
    "5240": {
      "op": "ADD"
    },
    "5241": {
      "op": "MSTORE"
    },
    "5242": {
      "op": "PUSH32",
      "value": "0x4552525F494E56414C49445F464143544F52595F414444524553530000000000"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5277": {
      "op": "DUP3"
    },
    "5278": {
      "op": "ADD"
    },
    "5279": {
      "op": "MSTORE"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5282": {
      "op": "ADD"
    },
    "5283": {
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "5286": {
      "op": "JUMP"
    },
    "5287": {
      "fn": "BPool.initialize",
      "offset": [
        4718,
        4779
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5288": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x14BB"
    },
    "5291": {
      "offset": [
        1058,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2710"
    },
    "5294": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "5303": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "5306": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5307": {
      "fn": "BPool.initialize",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5308": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4805
      ],
      "op": "DUP8",
      "path": "37",
      "statement": 66
    },
    "5309": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4805
      ],
      "op": "DUP8",
      "path": "37"
    },
    "5310": {
      "fn": "BPool.initialize",
      "offset": [
        4806,
        4807
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5312": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5313": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5314": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "LT",
      "path": "37"
    },
    "5315": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x14CE"
    },
    "5318": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5319": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x14CE"
    },
    "5322": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "5325": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4797,
        4808
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5326": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5327": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5328": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "POP",
      "path": "37"
    },
    "5329": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5331": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "MUL",
      "path": "37"
    },
    "5332": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "ADD",
      "path": "37"
    },
    "5333": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4808
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "5334": {
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4819
      ],
      "op": "LT",
      "path": "37"
    },
    "5335": {
      "branch": 323,
      "fn": "BPool.initialize",
      "offset": [
        4797,
        4819
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "5336": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x14F3"
    },
    "5339": {
      "branch": 323,
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5340": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5342": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5349": {
      "op": "SHL"
    },
    "5350": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5351": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5352": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "5354": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "ADD",
      "path": "37"
    },
    "5355": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "5358": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5359": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x57DE"
    },
    "5362": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4789,
        4835
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5363": {
      "fn": "BPool.initialize",
      "offset": [
        4789,
        4835
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5364": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1506"
    },
    "5367": {
      "offset": [
        1115,
        1117
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xA"
    },
    "5369": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "5378": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "5381": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5382": {
      "fn": "BPool.initialize",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5383": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4861
      ],
      "op": "DUP8",
      "path": "37",
      "statement": 67
    },
    "5384": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4861
      ],
      "op": "DUP8",
      "path": "37"
    },
    "5385": {
      "fn": "BPool.initialize",
      "offset": [
        4862,
        4863
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5387": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5388": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5389": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "LT",
      "path": "37"
    },
    "5390": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1519"
    },
    "5393": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5394": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1519"
    },
    "5397": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "5400": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4853,
        4864
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5401": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5402": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5403": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "POP",
      "path": "37"
    },
    "5404": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5406": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "MUL",
      "path": "37"
    },
    "5407": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "ADD",
      "path": "37"
    },
    "5408": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4864
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "5409": {
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4875
      ],
      "op": "GT",
      "path": "37"
    },
    "5410": {
      "branch": 324,
      "fn": "BPool.initialize",
      "offset": [
        4853,
        4875
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "5411": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x153E"
    },
    "5414": {
      "branch": 324,
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5415": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5417": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5418": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5424": {
      "op": "SHL"
    },
    "5425": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5426": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5427": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "5429": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "ADD",
      "path": "37"
    },
    "5430": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "5433": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5434": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5803"
    },
    "5437": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4845,
        4891
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5438": {
      "fn": "BPool.initialize",
      "offset": [
        4845,
        4891
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5439": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4917
      ],
      "op": "DUP7",
      "path": "37",
      "statement": 68
    },
    "5440": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4917
      ],
      "op": "DUP7",
      "path": "37"
    },
    "5441": {
      "fn": "BPool.initialize",
      "offset": [
        4918,
        4919
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "5443": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5444": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5445": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "LT",
      "path": "37"
    },
    "5446": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1551"
    },
    "5449": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5450": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1551"
    },
    "5453": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "5456": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4909,
        4920
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5457": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5458": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5459": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "POP",
      "path": "37"
    },
    "5460": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5462": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "MUL",
      "path": "37"
    },
    "5463": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "ADD",
      "path": "37"
    },
    "5464": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4920
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "5465": {
      "fn": "BPool.initialize",
      "offset": [
        4924,
        4925
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5467": {
      "branch": 325,
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4925
      ],
      "op": "EQ",
      "path": "37"
    },
    "5468": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4950
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5469": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4950
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1592"
    },
    "5472": {
      "branch": 325,
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4950
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5473": {
      "op": "POP"
    },
    "5474": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1575"
    },
    "5477": {
      "offset": [
        1058,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2710"
    },
    "5480": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "5489": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "5492": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5493": {
      "fn": "BPool.initialize",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5494": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4937
      ],
      "op": "DUP8",
      "path": "37"
    },
    "5495": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4937
      ],
      "op": "DUP8",
      "path": "37"
    },
    "5496": {
      "fn": "BPool.initialize",
      "offset": [
        4938,
        4939
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "5498": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5499": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5500": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "LT",
      "path": "37"
    },
    "5501": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1588"
    },
    "5504": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5505": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1588"
    },
    "5508": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "5511": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4929,
        4940
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5512": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5513": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5514": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "POP",
      "path": "37"
    },
    "5515": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5517": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "MUL",
      "path": "37"
    },
    "5518": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "ADD",
      "path": "37"
    },
    "5519": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4940
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "5520": {
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4950
      ],
      "op": "LT",
      "path": "37"
    },
    "5521": {
      "branch": 326,
      "fn": "BPool.initialize",
      "offset": [
        4929,
        4950
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "5522": {
      "fn": "BPool.initialize",
      "offset": [
        4909,
        4950
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5523": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15AE"
    },
    "5526": {
      "branch": 326,
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5527": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5529": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5536": {
      "op": "SHL"
    },
    "5537": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5538": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5539": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "5541": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "ADD",
      "path": "37"
    },
    "5542": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "5545": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5546": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x57DE"
    },
    "5549": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4901,
        4966
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5550": {
      "fn": "BPool.initialize",
      "offset": [
        4901,
        4966
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5551": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x15C1"
    },
    "5554": {
      "offset": [
        1115,
        1117
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xA"
    },
    "5556": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "5565": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "5568": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5569": {
      "fn": "BPool.initialize",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5570": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4992
      ],
      "op": "DUP8",
      "path": "37",
      "statement": 69
    },
    "5571": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4992
      ],
      "op": "DUP8",
      "path": "37"
    },
    "5572": {
      "fn": "BPool.initialize",
      "offset": [
        4993,
        4994
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "5574": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5575": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5576": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "LT",
      "path": "37"
    },
    "5577": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15D4"
    },
    "5580": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5581": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15D4"
    },
    "5584": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "5587": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4984,
        4995
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5588": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5589": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5590": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "POP",
      "path": "37"
    },
    "5591": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5593": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "MUL",
      "path": "37"
    },
    "5594": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "ADD",
      "path": "37"
    },
    "5595": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        4995
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "5596": {
      "fn": "BPool.initialize",
      "offset": [
        4984,
        5006
      ],
      "op": "GT",
      "path": "37"
    },
    "5597": {
      "branch": 327,
      "fn": "BPool.initialize",
      "offset": [
        4984,
        5006
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "5598": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15F9"
    },
    "5601": {
      "branch": 327,
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "5602": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5604": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5605": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5609": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5611": {
      "op": "SHL"
    },
    "5612": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5613": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5614": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "5616": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "ADD",
      "path": "37"
    },
    "5617": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "5620": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5621": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5803"
    },
    "5624": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        4976,
        5022
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5625": {
      "fn": "BPool.initialize",
      "offset": [
        4976,
        5022
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5626": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 70,
      "value": "0x1682"
    },
    "5629": {
      "fn": "BPool.initialize",
      "offset": [
        5080,
        5090
      ],
      "op": "DUP10",
      "path": "37"
    },
    "5630": {
      "fn": "BPool.initialize",
      "offset": [
        5108,
        5115
      ],
      "op": "DUP10",
      "path": "37"
    },
    "5631": {
      "fn": "BPool.initialize",
      "offset": [
        5133,
        5141
      ],
      "op": "DUP10",
      "path": "37"
    },
    "5632": {
      "fn": "BPool.initialize",
      "offset": [
        5133,
        5141
      ],
      "op": "DUP10",
      "path": "37"
    },
    "5633": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5634": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5635": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5637": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MUL",
      "path": "37"
    },
    "5638": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5640": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "ADD",
      "path": "37"
    },
    "5641": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5643": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5644": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5645": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5646": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "ADD",
      "path": "37"
    },
    "5647": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5649": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5650": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5651": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "5652": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "5653": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "5654": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5655": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5656": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5657": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5658": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5660": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "ADD",
      "path": "37"
    },
    "5661": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP4",
      "path": "37"
    },
    "5662": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP4",
      "path": "37"
    },
    "5663": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5665": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MUL",
      "path": "37"
    },
    "5666": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5667": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5668": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP5",
      "path": "37"
    },
    "5669": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "5670": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5672": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "5673": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "ADD",
      "path": "37"
    },
    "5674": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "5675": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5676": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "5677": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5678": {
      "op": "POP"
    },
    "5679": {
      "op": "POP"
    },
    "5680": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5682": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5683": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5684": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5685": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5686": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "ADD",
      "path": "37"
    },
    "5687": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5688": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5689": {
      "fn": "BPool.initialize",
      "offset": [
        5159,
        5169
      ],
      "op": "DUP13",
      "path": "37"
    },
    "5690": {
      "fn": "BPool.initialize",
      "offset": [
        5159,
        5169
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "fn": "BPool.initialize",
      "offset": [
        5187,
        5196
      ],
      "op": "DUP12",
      "path": "37"
    },
    "5693": {
      "fn": "BPool.initialize",
      "offset": [
        5187,
        5196
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "5694": {
      "op": "POP"
    },
    "5695": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5696": {
      "fn": "BPool.initialize",
      "offset": [
        5214,
        5220
      ],
      "op": "DUP11",
      "path": "37"
    },
    "5697": {
      "fn": "BPool.initialize",
      "offset": [
        5214,
        5220
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5698": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "5700": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5701": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP4",
      "path": "37"
    },
    "5702": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5703": {
      "fn": "BPool.initialize",
      "offset": [
        5214,
        5220
      ],
      "op": "DUP4",
      "path": "37"
    },
    "5704": {
      "fn": "BPool.initialize",
      "offset": [
        5214,
        5220
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5705": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5706": {
      "fn": "BPool.initialize",
      "offset": [
        5214,
        5220
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5707": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP5",
      "path": "37"
    },
    "5708": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "5709": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5711": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "5712": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "ADD",
      "path": "37"
    },
    "5713": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "5714": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5715": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "5716": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5717": {
      "op": "POP"
    },
    "5718": {
      "op": "POP"
    },
    "5719": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5721": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5722": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5723": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5725": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5726": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5727": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "ADD",
      "path": "37"
    },
    "5728": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5729": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "5730": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5731": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "5732": {
      "op": "POP"
    },
    "5733": {
      "fn": "BPool.initialize",
      "offset": [
        5238,
        5251
      ],
      "op": "DUP11",
      "path": "37"
    },
    "5734": {
      "fn": "BPool.initialize",
      "offset": [
        5238,
        5251
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5735": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "5737": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5738": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP4",
      "path": "37"
    },
    "5739": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5740": {
      "fn": "BPool.initialize",
      "offset": [
        5238,
        5251
      ],
      "op": "DUP4",
      "path": "37"
    },
    "5741": {
      "fn": "BPool.initialize",
      "offset": [
        5238,
        5251
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5742": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5743": {
      "fn": "BPool.initialize",
      "offset": [
        5238,
        5251
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5744": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "DUP5",
      "path": "37"
    },
    "5745": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "5746": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5748": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "5749": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "ADD",
      "path": "37"
    },
    "5750": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "5751": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5752": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "5753": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5754": {
      "op": "POP"
    },
    "5755": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5062
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4302"
    },
    "5758": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5062
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "5759": {
      "op": "POP"
    },
    "5760": {
      "op": "POP"
    },
    "5761": {
      "fn": "BPool.initialize",
      "jump": "i",
      "offset": [
        5051,
        5265
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5762": {
      "fn": "BPool.initialize",
      "offset": [
        5051,
        5265
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5763": {
      "fn": "BPool.initialize",
      "offset": [
        5032,
        5265
      ],
      "op": "SWAP10",
      "path": "37"
    },
    "5764": {
      "fn": "BPool.initialize",
      "offset": [
        4305,
        5272
      ],
      "op": "SWAP9",
      "path": "37"
    },
    "5765": {
      "op": "POP"
    },
    "5766": {
      "op": "POP"
    },
    "5767": {
      "op": "POP"
    },
    "5768": {
      "op": "POP"
    },
    "5769": {
      "op": "POP"
    },
    "5770": {
      "op": "POP"
    },
    "5771": {
      "op": "POP"
    },
    "5772": {
      "op": "POP"
    },
    "5773": {
      "op": "POP"
    },
    "5774": {
      "fn": "BPool.initialize",
      "jump": "o",
      "offset": [
        4305,
        5272
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5775": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1409,
        1534
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "5776": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1489,
        1497
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 71,
      "value": "0x2"
    },
    "5778": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1489,
        1497
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "5779": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1509,
        1526
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "5781": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1509,
        1526
      ],
      "op": "DUP1",
      "path": "35"
    },
    "5782": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1509,
        1526
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "5783": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "5785": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "5786": {
      "op": "PUSH4",
      "value": "0xB8421E2B"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5793": {
      "op": "SHL"
    },
    "5794": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP2",
      "path": "35"
    },
    "5795": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5802": {
      "op": "SHL"
    },
    "5803": {
      "op": "SUB"
    },
    "5804": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1509,
        1526
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "5805": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1509,
        1526
      ],
      "op": "DUP3",
      "path": "35"
    },
    "5806": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1509,
        1526
      ],
      "op": "AND",
      "path": "35"
    },
    "5807": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "5808": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP2",
      "path": "35"
    },
    "5809": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "ADD",
      "path": "35"
    },
    "5810": {
      "op": "SWAP3"
    },
    "5811": {
      "op": "SWAP1"
    },
    "5812": {
      "op": "SWAP3"
    },
    "5813": {
      "op": "MSTORE"
    },
    "5814": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1451,
        1455
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "5816": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1451,
        1455
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "5817": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1489,
        1497
      ],
      "op": "AND",
      "path": "35"
    },
    "5818": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1489,
        1497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "5819": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1508
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xB8421E2B"
    },
    "5824": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1508
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5827": {
      "op": "ADD"
    },
    "5828": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "5830": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "5832": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "5833": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP1",
      "path": "35"
    },
    "5834": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP4",
      "path": "35"
    },
    "5835": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "SUB",
      "path": "35"
    },
    "5836": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP2",
      "path": "35"
    },
    "5837": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP7",
      "path": "35"
    },
    "5838": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "GAS",
      "path": "35"
    },
    "5839": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "STATICCALL",
      "path": "35"
    },
    "5840": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "5841": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP1",
      "path": "35"
    },
    "5842": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "5843": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x16E0"
    },
    "5846": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "5847": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "5848": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "5850": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP1",
      "path": "35"
    },
    "5851": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "5852": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "5853": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "5855": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "REVERT",
      "path": "35"
    },
    "5856": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "5857": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "POP",
      "path": "35"
    },
    "5858": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "POP",
      "path": "35"
    },
    "5859": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "POP",
      "path": "35"
    },
    "5860": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "POP",
      "path": "35"
    },
    "5861": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "5863": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "5864": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "5865": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "5867": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "NOT",
      "path": "35"
    },
    "5868": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "5870": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP3",
      "path": "35"
    },
    "5871": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "ADD",
      "path": "35"
    },
    "5872": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "AND",
      "path": "35"
    },
    "5873": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP3",
      "path": "35"
    },
    "5874": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "ADD",
      "path": "35"
    },
    "5875": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP1",
      "path": "35"
    },
    "5876": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "5878": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "5879": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "POP",
      "path": "35"
    },
    "5880": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "DUP2",
      "path": "35"
    },
    "5881": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "ADD",
      "path": "35"
    },
    "5882": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "5883": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1704"
    },
    "5886": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "5887": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "5888": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5862"
    },
    "5891": {
      "fn": "BMath.getOPCFee",
      "jump": "i",
      "offset": [
        1474,
        1527
      ],
      "op": "JUMP",
      "path": "35"
    },
    "5892": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1474,
        1527
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "5893": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1467,
        1527
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "5894": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1467,
        1527
      ],
      "op": "POP",
      "path": "35"
    },
    "5895": {
      "fn": "BMath.getOPCFee",
      "offset": [
        1409,
        1534
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "5896": {
      "fn": "BMath.getOPCFee",
      "jump": "o",
      "offset": [
        1409,
        1534
      ],
      "op": "JUMP",
      "path": "35"
    },
    "5897": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5898": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22075,
        22097
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5900": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22111,
        22127
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5901": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22142,
        22161
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5903": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22176,
        22207
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5904": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22221,
        22252
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5906": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22277,
        22297
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 72,
      "value": "0x171A"
    },
    "5909": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22289,
        22296
      ],
      "op": "DUP10",
      "path": "37"
    },
    "5910": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22277,
        22288
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "5913": {
      "fn": "BPool.getAmountOutExactIn",
      "jump": "i",
      "offset": [
        22277,
        22297
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5914": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22277,
        22297
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5915": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22307,
        22328
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 73,
      "value": "0x1723"
    },
    "5918": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22319,
        22327
      ],
      "op": "DUP9",
      "path": "37"
    },
    "5919": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22307,
        22318
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "5922": {
      "fn": "BPool.getAmountOutExactIn",
      "jump": "i",
      "offset": [
        22307,
        22328
      ],
      "op": "JUMP",
      "path": "37"
    },
    "5923": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22307,
        22328
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "5924": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "5926": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5927": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "5928": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "5930": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5931": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "ADD",
      "path": "37"
    },
    "5932": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5933": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5940": {
      "op": "SHL"
    },
    "5941": {
      "op": "SUB"
    },
    "5942": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5943": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "DUP13",
      "path": "37"
    },
    "5944": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "AND",
      "path": "37"
    },
    "5945": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22360
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "5947": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5948": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5949": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5950": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22385
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "5952": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "5954": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5955": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "DUP2",
      "path": "37"
    },
    "5956": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5957": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "DUP6",
      "path": "37"
    },
    "5958": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "DUP4",
      "path": "37"
    },
    "5959": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22394
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "5960": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22402
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "5962": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22402
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5963": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22402
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5964": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22402
      ],
      "op": "ADD",
      "path": "37"
    },
    "5965": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22377,
        22402
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "5966": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "DUP8",
      "path": "37"
    },
    "5967": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5968": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22416,
        22440
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "5970": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22416,
        22440
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "5971": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22416,
        22440
      ],
      "op": "DUP3",
      "path": "37"
    },
    "5972": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22416,
        22440
      ],
      "op": "ADD",
      "path": "37"
    },
    "5973": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22416,
        22440
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "5974": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "DUP4",
      "path": "37"
    },
    "5975": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "DUP9",
      "path": "37"
    },
    "5976": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "ADD",
      "path": "37"
    },
    "5977": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5978": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "5979": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "DUP16",
      "path": "37"
    },
    "5980": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "AND",
      "path": "37"
    },
    "5981": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "DUP1",
      "path": "37"
    },
    "5982": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "DUP6",
      "path": "37"
    },
    "5983": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5984": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "DUP4",
      "path": "37"
    },
    "5985": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "DUP4",
      "path": "37"
    },
    "5986": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5987": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "DUP8",
      "path": "37"
    },
    "5988": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "DUP6",
      "path": "37"
    },
    "5989": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22472
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "5990": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22480
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "5991": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22480
      ],
      "op": "DUP7",
      "path": "37"
    },
    "5992": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22480
      ],
      "op": "ADD",
      "path": "37"
    },
    "5993": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22454,
        22480
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "5994": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "SWAP8",
      "path": "37"
    },
    "5995": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "DUP8",
      "path": "37"
    },
    "5996": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "ADD",
      "path": "37"
    },
    "5997": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "SWAP8",
      "path": "37"
    },
    "5998": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "5999": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "SWAP8",
      "path": "37"
    },
    "6000": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6001": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22494,
        22512
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "6002": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22494,
        22512
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6003": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22494,
        22512
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6004": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22494,
        22512
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6005": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22494,
        22519
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "6006": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22494,
        22519
      ],
      "op": "ADD",
      "path": "37"
    },
    "6007": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22494,
        22519
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6008": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "6010": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6011": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "ADD",
      "path": "37"
    },
    "6012": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6013": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22338,
        22529
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6014": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22568,
        22593
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x17A8"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6019": {
      "op": "MLOAD"
    },
    "6020": {
      "op": "DUP1"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6023": {
      "op": "ADD"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6026": {
      "op": "MSTORE"
    },
    "6027": {
      "op": "DUP1"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6030": {
      "op": "DUP2"
    },
    "6031": {
      "op": "MSTORE"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6034": {
      "op": "ADD"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6037": {
      "op": "DUP2"
    },
    "6038": {
      "op": "MSTORE"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6041": {
      "op": "ADD"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6044": {
      "op": "DUP2"
    },
    "6045": {
      "op": "MSTORE"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6048": {
      "op": "ADD"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6051": {
      "op": "DUP2"
    },
    "6052": {
      "op": "MSTORE"
    },
    "6053": {
      "op": "POP"
    },
    "6054": {
      "op": "SWAP1"
    },
    "6055": {
      "op": "JUMP"
    },
    "6056": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22568,
        22593
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6057": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22670,
        22817
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 74,
      "value": "0x17B3"
    },
    "6060": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22702,
        22706
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6061": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22724,
        22737
      ],
      "op": "DUP12",
      "path": "37"
    },
    "6062": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22782,
        22803
      ],
      "op": "DUP12",
      "path": "37"
    },
    "6063": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22670,
        22684
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x21B2"
    },
    "6066": {
      "fn": "BPool.getAmountOutExactIn",
      "jump": "i",
      "offset": [
        22670,
        22817
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6067": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22670,
        22817
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6068": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22850,
        22865
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 75
    },
    "6069": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22850,
        22865
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6070": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22876,
        22900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "6072": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22876,
        22900
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6073": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22876,
        22900
      ],
      "op": "ADD",
      "path": "37"
    },
    "6074": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22876,
        22900
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6075": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22902,
        22934
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6077": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22902,
        22934
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6078": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22902,
        22934
      ],
      "op": "ADD",
      "path": "37"
    },
    "6079": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22902,
        22934
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6080": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22936,
        22962
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "6082": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22936,
        22962
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6083": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22936,
        22962
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "6084": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22936,
        22962
      ],
      "op": "ADD",
      "path": "37"
    },
    "6085": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22936,
        22962
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6086": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22604,
        22817
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "6087": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22604,
        22817
      ],
      "op": "SWAP13",
      "path": "37"
    },
    "6088": {
      "op": "POP"
    },
    "6089": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22850,
        22865
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6090": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22850,
        22865
      ],
      "op": "SWAP11",
      "path": "37"
    },
    "6091": {
      "op": "POP"
    },
    "6092": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22876,
        22900
      ],
      "op": "SWAP9",
      "path": "37"
    },
    "6093": {
      "op": "POP"
    },
    "6094": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22902,
        22934
      ],
      "op": "SWAP7",
      "path": "37"
    },
    "6095": {
      "op": "POP"
    },
    "6096": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22936,
        22962
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6097": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        22936,
        22962
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "6098": {
      "op": "POP"
    },
    "6099": {
      "op": "POP"
    },
    "6100": {
      "op": "POP"
    },
    "6101": {
      "op": "POP"
    },
    "6102": {
      "op": "POP"
    },
    "6103": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "6104": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "POP",
      "path": "37"
    },
    "6105": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "6106": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "POP",
      "path": "37"
    },
    "6107": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "6108": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "POP",
      "path": "37"
    },
    "6109": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "6110": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "POP",
      "path": "37"
    },
    "6111": {
      "fn": "BPool.getAmountOutExactIn",
      "offset": [
        21832,
        22970
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "6112": {
      "fn": "BPool.getAmountOutExactIn",
      "jump": "o",
      "offset": [
        21832,
        22970
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6113": {
      "fn": "BPool.setSwapFee",
      "offset": [
        15960,
        16259
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6114": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16036,
        16047
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 76,
      "value": "0xA"
    },
    "6116": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16036,
        16047
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6117": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16036,
        16047
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "6120": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16036,
        16047
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6121": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16036,
        16047
      ],
      "op": "DIV",
      "path": "37"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6128": {
      "op": "SHL"
    },
    "6129": {
      "op": "SUB"
    },
    "6130": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16036,
        16047
      ],
      "op": "AND",
      "path": "37"
    },
    "6131": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16022,
        16032
      ],
      "op": "CALLER",
      "path": "37"
    },
    "6132": {
      "branch": 328,
      "fn": "BPool.setSwapFee",
      "offset": [
        16022,
        16047
      ],
      "op": "EQ",
      "path": "37"
    },
    "6133": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1835"
    },
    "6136": {
      "branch": 328,
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "6137": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6139": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6140": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6144": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6146": {
      "op": "SHL"
    },
    "6147": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6148": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6151": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "6153": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6154": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "ADD",
      "path": "37"
    },
    "6155": {
      "op": "MSTORE"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6160": {
      "op": "DUP3"
    },
    "6161": {
      "op": "ADD"
    },
    "6162": {
      "op": "MSTORE"
    },
    "6163": {
      "op": "PUSH18",
      "value": "0x22A9292FA727AA2FA1A7A72A2927A62622A9"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "6184": {
      "op": "SHL"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6187": {
      "op": "DUP3"
    },
    "6188": {
      "op": "ADD"
    },
    "6189": {
      "op": "MSTORE"
    },
    "6190": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6192": {
      "op": "ADD"
    },
    "6193": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "6196": {
      "op": "JUMP"
    },
    "6197": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16014,
        16070
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6198": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1849"
    },
    "6201": {
      "offset": [
        1058,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2710"
    },
    "6204": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "6213": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "6216": {
      "fn": "BPool.setSwapFee",
      "jump": "i",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMP",
      "path": "33"
    },
    "6217": {
      "fn": "BPool.setSwapFee",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "6218": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16088,
        16095
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 77
    },
    "6219": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16088,
        16106
      ],
      "op": "LT",
      "path": "37"
    },
    "6220": {
      "branch": 329,
      "fn": "BPool.setSwapFee",
      "offset": [
        16088,
        16106
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6221": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1868"
    },
    "6224": {
      "branch": 329,
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "6225": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6227": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6234": {
      "op": "SHL"
    },
    "6235": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6236": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6237": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "6239": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "ADD",
      "path": "37"
    },
    "6240": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "6243": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6244": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x57DE"
    },
    "6247": {
      "fn": "BPool.setSwapFee",
      "jump": "i",
      "offset": [
        16080,
        16122
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6248": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16080,
        16122
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6249": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x187B"
    },
    "6252": {
      "offset": [
        1115,
        1117
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xA"
    },
    "6254": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "6263": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "6266": {
      "fn": "BPool.setSwapFee",
      "jump": "i",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMP",
      "path": "33"
    },
    "6267": {
      "fn": "BPool.setSwapFee",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "6268": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16140,
        16147
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 78
    },
    "6269": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16140,
        16158
      ],
      "op": "GT",
      "path": "37"
    },
    "6270": {
      "branch": 330,
      "fn": "BPool.setSwapFee",
      "offset": [
        16140,
        16158
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6271": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x189A"
    },
    "6274": {
      "branch": 330,
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "6275": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6277": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6284": {
      "op": "SHL"
    },
    "6285": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6286": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6287": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "6289": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "ADD",
      "path": "37"
    },
    "6290": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "6293": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6294": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5803"
    },
    "6297": {
      "fn": "BPool.setSwapFee",
      "jump": "i",
      "offset": [
        16132,
        16174
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6298": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16132,
        16174
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6299": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16184,
        16192
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 79,
      "value": "0x1"
    },
    "6301": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16184,
        16202
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6302": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16184,
        16202
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6303": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16184,
        16202
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "6304": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 80,
      "value": "0x40"
    },
    "6306": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6307": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6308": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16232,
        16242
      ],
      "op": "CALLER",
      "path": "37"
    },
    "6309": {
      "op": "DUP2"
    },
    "6310": {
      "op": "MSTORE"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6313": {
      "op": "DUP2"
    },
    "6314": {
      "op": "ADD"
    },
    "6315": {
      "op": "DUP4"
    },
    "6316": {
      "op": "SWAP1"
    },
    "6317": {
      "op": "MSTORE"
    },
    "6318": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xBCA0D601C32979EEBAC4E8CD06375B6E45D39AF80FC06A33F366425B450DFB69"
    },
    "6351": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6352": {
      "op": "ADD"
    },
    "6353": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6355": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6356": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6357": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6358": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "SUB",
      "path": "37"
    },
    "6359": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6360": {
      "fn": "BPool.setSwapFee",
      "offset": [
        16217,
        16252
      ],
      "op": "LOG1",
      "path": "37"
    },
    "6361": {
      "fn": "BPool.setSwapFee",
      "offset": [
        15960,
        16259
      ],
      "op": "POP",
      "path": "37"
    },
    "6362": {
      "fn": "BPool.setSwapFee",
      "jump": "o",
      "offset": [
        15960,
        16259
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6363": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39019,
        39396
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6370": {
      "op": "SHL"
    },
    "6371": {
      "op": "SUB"
    },
    "6372": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6373": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "AND",
      "path": "37"
    },
    "6374": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39135,
        39156
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6376": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6377": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6378": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6379": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39205
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "6381": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "6383": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6384": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6385": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6386": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6388": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6389": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6390": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39197,
        39214
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "6391": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6392": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6393": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "6395": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6396": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "ADD",
      "path": "37"
    },
    "6397": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6398": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6399": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6400": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6401": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "6403": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "AND",
      "path": "37"
    },
    "6404": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6405": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6406": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6407": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6408": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "6410": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6411": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "ADD",
      "path": "37"
    },
    "6412": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6413": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "6414": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6415": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "ADD",
      "path": "37"
    },
    "6416": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "6417": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6418": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "6419": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6420": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "6422": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6423": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "ADD",
      "path": "37"
    },
    "6424": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6425": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6426": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6427": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "ADD",
      "path": "37"
    },
    "6428": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6429": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6430": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6431": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6432": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "6434": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "ADD",
      "path": "37"
    },
    "6435": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6436": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "6438": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6439": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "ADD",
      "path": "37"
    },
    "6440": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6441": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6442": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6443": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39309,
        39321
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 81,
      "value": "0x9"
    },
    "6445": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39309,
        39321
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6446": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39241,
        39358
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1938"
    },
    "6449": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39241,
        39358
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6450": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39172,
        39214
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6451": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39335,
        39348
      ],
      "op": "DUP6",
      "path": "37"
    },
    "6452": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39241,
        39265
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x44B1"
    },
    "6455": {
      "fn": "BPool.calcPoolOutSingleIn",
      "jump": "i",
      "offset": [
        39241,
        39358
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6456": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39241,
        39358
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6457": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39225,
        39358
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "6458": {
      "fn": "BPool.calcPoolOutSingleIn",
      "offset": [
        39019,
        39396
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "6459": {
      "op": "POP"
    },
    "6460": {
      "op": "POP"
    },
    "6461": {
      "op": "POP"
    },
    "6462": {
      "op": "POP"
    },
    "6463": {
      "fn": "BPool.calcPoolOutSingleIn",
      "jump": "o",
      "offset": [
        39019,
        39396
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6464": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37170,
        37552
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6471": {
      "op": "SHL"
    },
    "6472": {
      "op": "SUB"
    },
    "6473": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6474": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "AND",
      "path": "37"
    },
    "6475": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37286,
        37308
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6477": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6478": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6479": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6480": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37358
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "6482": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "6484": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6485": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6486": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6487": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6489": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6490": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6491": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37350,
        37368
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "6492": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6493": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6494": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "6496": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6497": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "ADD",
      "path": "37"
    },
    "6498": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6499": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6500": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6501": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6502": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "6504": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "AND",
      "path": "37"
    },
    "6505": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6506": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6507": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6508": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6509": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "6511": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6512": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "ADD",
      "path": "37"
    },
    "6513": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6514": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "6515": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6516": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "ADD",
      "path": "37"
    },
    "6517": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "6518": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6519": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "6520": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6521": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "6523": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6524": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "ADD",
      "path": "37"
    },
    "6525": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6526": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6527": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6528": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "ADD",
      "path": "37"
    },
    "6529": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6530": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6531": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6532": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6533": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "6535": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "ADD",
      "path": "37"
    },
    "6536": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6537": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "6539": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6540": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "ADD",
      "path": "37"
    },
    "6541": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6542": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6543": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6544": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37465,
        37477
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 82,
      "value": "0x9"
    },
    "6546": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37465,
        37477
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6547": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37396,
        37513
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1938"
    },
    "6550": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37396,
        37513
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6551": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37324,
        37368
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6552": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37491,
        37503
      ],
      "op": "DUP6",
      "path": "37"
    },
    "6553": {
      "fn": "BPool.calcSingleOutPoolIn",
      "offset": [
        37396,
        37420
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3FDD"
    },
    "6556": {
      "fn": "BPool.calcSingleOutPoolIn",
      "jump": "i",
      "offset": [
        37396,
        37513
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6557": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6558": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4852,
        4870
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "6560": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4872,
        4897
      ],
      "op": "DUP1",
      "path": "35"
    },
    "6561": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4899,
        4924
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x19CB"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6566": {
      "op": "MLOAD"
    },
    "6567": {
      "op": "DUP1"
    },
    "6568": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6570": {
      "op": "ADD"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6573": {
      "op": "MSTORE"
    },
    "6574": {
      "op": "DUP1"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6577": {
      "op": "DUP2"
    },
    "6578": {
      "op": "MSTORE"
    },
    "6579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6581": {
      "op": "ADD"
    },
    "6582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6584": {
      "op": "DUP2"
    },
    "6585": {
      "op": "MSTORE"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6588": {
      "op": "ADD"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6591": {
      "op": "DUP2"
    },
    "6592": {
      "op": "MSTORE"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6595": {
      "op": "ADD"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6598": {
      "op": "DUP2"
    },
    "6599": {
      "op": "MSTORE"
    },
    "6600": {
      "op": "POP"
    },
    "6601": {
      "op": "SWAP1"
    },
    "6602": {
      "op": "JUMP"
    },
    "6603": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4899,
        4924
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6604": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4940,
        4956
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "6606": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4959,
        4981
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x19E6"
    },
    "6609": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4964,
        4968
      ],
      "op": "DUP8",
      "path": "35"
    },
    "6610": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4969,
        4970
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3"
    },
    "6612": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4964,
        4971
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "6614": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4964,
        4971
      ],
      "op": "MUL",
      "path": "35"
    },
    "6615": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4964,
        4971
      ],
      "op": "ADD",
      "path": "35"
    },
    "6616": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4964,
        4971
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "6617": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4973,
        4977
      ],
      "op": "DUP9",
      "path": "35"
    },
    "6618": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4978,
        4979
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "6620": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4973,
        4980
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6621": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4973,
        4980
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "6623": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4973,
        4980
      ],
      "op": "MUL",
      "path": "35"
    },
    "6624": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4973,
        4980
      ],
      "op": "ADD",
      "path": "35"
    },
    "6625": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4973,
        4980
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "6626": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4959,
        4963
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4564"
    },
    "6629": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        4959,
        4981
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6630": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4959,
        4981
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6631": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4940,
        4981
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "6632": {
      "op": "POP"
    },
    "6633": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4991,
        5000
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "6635": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5003,
        5032
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x19FB"
    },
    "6638": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5008,
        5012
      ],
      "op": "DUP9",
      "path": "35"
    },
    "6639": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5013,
        5014
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "6641": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5008,
        5015
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "6643": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5008,
        5015
      ],
      "op": "MUL",
      "path": "35"
    },
    "6644": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5008,
        5015
      ],
      "op": "ADD",
      "path": "35"
    },
    "6645": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5008,
        5015
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "6646": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5017,
        5031
      ],
      "op": "DUP9",
      "path": "35"
    },
    "6647": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5003,
        5007
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "6650": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5003,
        5032
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6651": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5003,
        5032
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6652": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4991,
        5032
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "6653": {
      "op": "POP"
    },
    "6654": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5042,
        5048
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "6656": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5051,
        5070
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A10"
    },
    "6659": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5056,
        5060
      ],
      "op": "DUP10",
      "path": "35"
    },
    "6660": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5061,
        5062
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "6662": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5056,
        5063
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "6664": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5056,
        5063
      ],
      "op": "MUL",
      "path": "35"
    },
    "6665": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5056,
        5063
      ],
      "op": "ADD",
      "path": "35"
    },
    "6666": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5056,
        5063
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "6667": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5065,
        5069
      ],
      "op": "DUP4",
      "path": "35"
    },
    "6668": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5051,
        5055
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4564"
    },
    "6671": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5051,
        5070
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6672": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5051,
        5070
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6673": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5042,
        5070
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "6674": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5042,
        5070
      ],
      "op": "POP",
      "path": "35"
    },
    "6675": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5080,
        5088
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "6677": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5091,
        5111
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A1E"
    },
    "6680": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5096,
        5097
      ],
      "op": "DUP3",
      "path": "35"
    },
    "6681": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5099,
        5110
      ],
      "op": "DUP6",
      "path": "35"
    },
    "6682": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5091,
        5095
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x467C"
    },
    "6685": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5091,
        5111
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6686": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5091,
        5111
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6687": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5080,
        5111
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "6688": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5080,
        5111
      ],
      "op": "POP",
      "path": "35"
    },
    "6689": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5127,
        5142
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 83,
      "value": "0x1A32"
    },
    "6692": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5132,
        5135
      ],
      "op": "DUP2",
      "path": "35"
    },
    "6693": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "6702": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5127,
        5131
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "6705": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5127,
        5142
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6706": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5127,
        5142
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6707": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5121,
        5142
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "6708": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5121,
        5142
      ],
      "op": "POP",
      "path": "35"
    },
    "6709": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5152,
        5165
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "6711": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5210,
        5231
      ],
      "op": "DUP1",
      "path": "35"
    },
    "6712": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5210,
        5231
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "6713": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5188,
        5209
      ],
      "op": "DUP10",
      "path": "35"
    },
    "6714": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5176,
        5187
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A41"
    },
    "6717": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5176,
        5185
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x168F"
    },
    "6720": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5176,
        5187
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6721": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5176,
        5187
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6722": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5175
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "6724": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5175
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "6725": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5187
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A4E"
    },
    "6728": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5187
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "6729": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5187
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "6730": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5187
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57A9"
    },
    "6733": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5167,
        5187
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6734": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5187
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6735": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5209
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A58"
    },
    "6738": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5209
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "6739": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5209
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "6740": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5209
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57A9"
    },
    "6743": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5167,
        5209
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6744": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5209
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6745": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5231
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A62"
    },
    "6748": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5231
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "6749": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5231
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "6750": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5231
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57A9"
    },
    "6753": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5167,
        5231
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6754": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5167,
        5231
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6755": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5152,
        5231
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "6756": {
      "op": "POP"
    },
    "6757": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5275,
        5321
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 84,
      "value": "0x1A90"
    },
    "6760": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5280,
        5298
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A79"
    },
    "6763": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5285,
        5289
      ],
      "op": "DUP13",
      "path": "35"
    },
    "6764": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5290,
        5291
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "6766": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5285,
        5292
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6767": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5285,
        5292
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "6769": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5285,
        5292
      ],
      "op": "MUL",
      "path": "35"
    },
    "6770": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5285,
        5292
      ],
      "op": "ADD",
      "path": "35"
    },
    "6771": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5285,
        5292
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "6772": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5294,
        5297
      ],
      "op": "DUP5",
      "path": "35"
    },
    "6773": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5280,
        5284
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4087"
    },
    "6776": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5280,
        5298
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6777": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5280,
        5298
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6778": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5300,
        5320
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A8B"
    },
    "6781": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "6790": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5311,
        5319
      ],
      "op": "DUP5",
      "path": "35"
    },
    "6791": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5300,
        5304
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "6794": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5300,
        5320
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6795": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5300,
        5320
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6796": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5275,
        5279
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4564"
    },
    "6799": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5275,
        5321
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6800": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5275,
        5321
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6801": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5259,
        5321
      ],
      "op": "SWAP8",
      "path": "35"
    },
    "6802": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5259,
        5321
      ],
      "op": "POP",
      "path": "35"
    },
    "6803": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5359,
        5424
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 85,
      "value": "0x1AB3"
    },
    "6806": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5364,
        5377
      ],
      "op": "DUP9",
      "path": "35"
    },
    "6807": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5379,
        5423
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "6810": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5384,
        5397
      ],
      "op": "DUP11",
      "path": "35"
    },
    "6811": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5399,
        5422
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDA9"
    },
    "6814": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "6823": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5410,
        5421
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "6826": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5410,
        5419
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x168F"
    },
    "6829": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5410,
        5421
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6830": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5410,
        5421
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6831": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5399,
        5403
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "6834": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5399,
        5422
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6835": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5359,
        5424
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6836": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5331,
        5340
      ],
      "op": "DUP7",
      "path": "35"
    },
    "6837": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5331,
        5355
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "6839": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5331,
        5355
      ],
      "op": "ADD",
      "path": "35"
    },
    "6840": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5331,
        5424
      ],
      "op": "DUP2",
      "path": "35"
    },
    "6841": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5331,
        5424
      ],
      "op": "DUP2",
      "path": "35"
    },
    "6842": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5331,
        5424
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "6843": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5331,
        5424
      ],
      "op": "POP",
      "path": "35"
    },
    "6844": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5331,
        5424
      ],
      "op": "POP",
      "path": "35"
    },
    "6845": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5485,
        5560
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 86,
      "value": "0x1AD8"
    },
    "6848": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5490,
        5503
      ],
      "op": "DUP9",
      "path": "35"
    },
    "6849": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5505,
        5559
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "6852": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5510,
        5523
      ],
      "op": "DUP11",
      "path": "35"
    },
    "6853": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5525,
        5558
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDA9"
    },
    "6856": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "6865": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5536,
        5557
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "6867": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5536,
        5557
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "6868": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5525,
        5529
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "6871": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5525,
        5558
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6872": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5485,
        5560
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6873": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5449,
        5458
      ],
      "op": "DUP7",
      "path": "35"
    },
    "6874": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5449,
        5481
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "6876": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5449,
        5481
      ],
      "op": "ADD",
      "path": "35"
    },
    "6877": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5449,
        5560
      ],
      "op": "DUP2",
      "path": "35"
    },
    "6878": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5449,
        5560
      ],
      "op": "DUP2",
      "path": "35"
    },
    "6879": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5449,
        5560
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "6880": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5449,
        5560
      ],
      "op": "POP",
      "path": "35"
    },
    "6881": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5449,
        5560
      ],
      "op": "POP",
      "path": "35"
    },
    "6882": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5595,
        5657
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 87,
      "value": "0x1AFD"
    },
    "6885": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5600,
        5613
      ],
      "op": "DUP9",
      "path": "35"
    },
    "6886": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5615,
        5656
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "6889": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5620,
        5633
      ],
      "op": "DUP11",
      "path": "35"
    },
    "6890": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5635,
        5655
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDA9"
    },
    "6893": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "6902": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5646,
        5654
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "6904": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5646,
        5654
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "6905": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5635,
        5639
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "6908": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5635,
        5655
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6909": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5595,
        5657
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6910": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5577,
        5657
      ],
      "op": "DUP7",
      "path": "35"
    },
    "6911": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5577,
        5657
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "6912": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5696,
        5771
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 88,
      "value": "0x1B19"
    },
    "6915": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5701,
        5714
      ],
      "op": "DUP9",
      "path": "35"
    },
    "6916": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5716,
        5770
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "6919": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5701,
        5714
      ],
      "op": "DUP2",
      "path": "35"
    },
    "6920": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5736,
        5769
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDA9"
    },
    "6923": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "6932": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5747,
        5768
      ],
      "op": "DUP15",
      "path": "35"
    },
    "6933": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5736,
        5740
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "6936": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5736,
        5769
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6937": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5696,
        5771
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6938": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5667,
        5693
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "6940": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5667,
        5693
      ],
      "op": "DUP8",
      "path": "35"
    },
    "6941": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5667,
        5693
      ],
      "op": "ADD",
      "path": "35"
    },
    "6942": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5667,
        5771
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "6943": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5820,
        5866
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 89,
      "value": "0x1B40"
    },
    "6946": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5825,
        5843
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B2C"
    },
    "6949": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5830,
        5834
      ],
      "op": "DUP13",
      "path": "35"
    },
    "6950": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5835,
        5836
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "6952": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5830,
        5837
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A6E"
    },
    "6955": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5830,
        5837
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6956": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5825,
        5843
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6957": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5845,
        5865
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A8B"
    },
    "6960": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "6969": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5856,
        5864
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "6971": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5856,
        5864
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "6972": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5845,
        5849
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "6975": {
      "fn": "BMath.calcInGivenOut",
      "jump": "i",
      "offset": [
        5845,
        5865
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6976": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5820,
        5866
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "6977": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5797,
        5866
      ],
      "op": "SWAP7",
      "path": "35"
    },
    "6978": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5797,
        5866
      ],
      "op": "POP",
      "path": "35"
    },
    "6979": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5892,
        5946
      ],
      "op": "POP",
      "path": "35",
      "statement": 90
    },
    "6980": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5892,
        5946
      ],
      "op": "POP",
      "path": "35"
    },
    "6981": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5892,
        5946
      ],
      "op": "POP",
      "path": "35"
    },
    "6982": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5892,
        5946
      ],
      "op": "POP",
      "path": "35"
    },
    "6983": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        5892,
        5946
      ],
      "op": "POP",
      "path": "35"
    },
    "6984": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "SWAP4",
      "path": "35"
    },
    "6985": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "POP",
      "path": "35"
    },
    "6986": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "SWAP4",
      "path": "35"
    },
    "6987": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "POP",
      "path": "35"
    },
    "6988": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "SWAP4",
      "path": "35"
    },
    "6989": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "6990": {
      "fn": "BMath.calcInGivenOut",
      "offset": [
        4690,
        5953
      ],
      "op": "POP",
      "path": "35"
    },
    "6991": {
      "fn": "BMath.calcInGivenOut",
      "jump": "o",
      "offset": [
        4690,
        5953
      ],
      "op": "JUMP",
      "path": "35"
    },
    "6992": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4120,
        4508
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "6993": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4230,
        4240
      ],
      "op": "CALLER",
      "path": "38"
    },
    "6994": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4187,
        4191
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "6996": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "6997": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "DUP2",
      "path": "38"
    },
    "6998": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "6999": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4229
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "7001": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "7003": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7004": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7005": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7006": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "7008": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7009": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "DUP4",
      "path": "38"
    },
    "7010": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4241
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "7011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7017": {
      "op": "SHL"
    },
    "7018": {
      "op": "SUB"
    },
    "7019": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4246
      ],
      "op": "DUP7",
      "path": "38"
    },
    "7020": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4246
      ],
      "op": "AND",
      "path": "38"
    },
    "7021": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4246
      ],
      "op": "DUP5",
      "path": "38"
    },
    "7022": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4246
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7023": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4246
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7024": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4246
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "7025": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4246
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7026": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4246
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7027": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4246
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "7028": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4219,
        4246
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "7029": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4260,
        4274
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7030": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4260,
        4274
      ],
      "op": "DUP4",
      "path": "38"
    },
    "7031": {
      "branch": 402,
      "fn": "BToken.decreaseApproval",
      "offset": [
        4260,
        4274
      ],
      "op": "GT",
      "path": "38"
    },
    "7032": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4256,
        4412
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "7033": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4256,
        4412
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1BA5"
    },
    "7036": {
      "branch": 402,
      "fn": "BToken.decreaseApproval",
      "offset": [
        4256,
        4412
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "7037": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4301,
        4311
      ],
      "op": "CALLER",
      "path": "38",
      "statement": 91
    },
    "7038": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4320,
        4321
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "7040": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7041": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7042": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7043": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4300
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "7045": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "7047": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7048": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7049": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7050": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "7052": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7053": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "DUP4",
      "path": "38"
    },
    "7054": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4312
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7061": {
      "op": "SHL"
    },
    "7062": {
      "op": "SUB"
    },
    "7063": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4317
      ],
      "op": "DUP9",
      "path": "38"
    },
    "7064": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4317
      ],
      "op": "AND",
      "path": "38"
    },
    "7065": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4317
      ],
      "op": "DUP5",
      "path": "38"
    },
    "7066": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4317
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7067": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4317
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7068": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4317
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "7069": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4317
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7070": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4317
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7071": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4317
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "7072": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4290,
        4321
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "7073": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4256,
        4412
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1BD4"
    },
    "7076": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4256,
        4412
      ],
      "op": "JUMP",
      "path": "38"
    },
    "7077": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4256,
        4412
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "7078": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4382,
        4401
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 92,
      "value": "0x1BAF"
    },
    "7081": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4387,
        4395
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7082": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4397,
        4400
      ],
      "op": "DUP5",
      "path": "38"
    },
    "7083": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4382,
        4386
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x416C"
    },
    "7086": {
      "fn": "BToken.decreaseApproval",
      "jump": "i",
      "offset": [
        4382,
        4401
      ],
      "op": "JUMP",
      "path": "38"
    },
    "7087": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4382,
        4401
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "7088": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4363,
        4373
      ],
      "op": "CALLER",
      "path": "38"
    },
    "7089": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "7091": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7092": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7093": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7094": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4362
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "7096": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "7098": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7099": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7100": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7101": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "7103": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7104": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "DUP4",
      "path": "38"
    },
    "7105": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4374
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7112": {
      "op": "SHL"
    },
    "7113": {
      "op": "SUB"
    },
    "7114": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4379
      ],
      "op": "DUP10",
      "path": "38"
    },
    "7115": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4379
      ],
      "op": "AND",
      "path": "38"
    },
    "7116": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4379
      ],
      "op": "DUP5",
      "path": "38"
    },
    "7117": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4379
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7118": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7119": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "7120": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4379
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7121": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7122": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4379
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "7123": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4352,
        4401
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "7124": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4256,
        4412
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "7125": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4435,
        4445
      ],
      "op": "CALLER",
      "path": "38",
      "statement": 93
    },
    "7126": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "7128": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7129": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7130": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7131": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4462
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "7133": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "7135": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7136": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7137": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7138": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "7140": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7141": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "DUP4",
      "path": "38"
    },
    "7142": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4474
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7149": {
      "op": "SHL"
    },
    "7150": {
      "op": "SUB"
    },
    "7151": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "DUP10",
      "path": "38"
    },
    "7152": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "AND",
      "path": "38"
    },
    "7153": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7154": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "DUP6",
      "path": "38"
    },
    "7155": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7156": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7157": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "DUP4",
      "path": "38"
    },
    "7158": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "7159": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "7160": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "DUP2",
      "path": "38"
    },
    "7161": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7162": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "7163": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4452,
        4479
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "7164": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7165": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "7166": {
      "op": "SWAP1"
    },
    "7167": {
      "op": "DUP2"
    },
    "7168": {
      "op": "MSTORE"
    },
    "7169": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "7170": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "7171": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4435,
        4445
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "7172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7174": {
      "op": "DUP1"
    },
    "7175": {
      "op": "MLOAD"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7178": {
      "op": "PUSH2",
      "value": "0x5944"
    },
    "7181": {
      "op": "DUP4"
    },
    "7182": {
      "op": "CODECOPY"
    },
    "7183": {
      "op": "DUP2"
    },
    "7184": {
      "op": "MLOAD"
    },
    "7185": {
      "op": "SWAP2"
    },
    "7186": {
      "op": "MSTORE"
    },
    "7187": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "7188": {
      "op": "ADD"
    },
    "7189": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "7191": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "7192": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7193": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "7194": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "SUB",
      "path": "38"
    },
    "7195": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "7196": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4426,
        4480
      ],
      "op": "LOG3",
      "path": "38"
    },
    "7197": {
      "op": "POP"
    },
    "7198": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4497,
        4501
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 94,
      "value": "0x1"
    },
    "7200": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4497,
        4501
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "7201": {
      "fn": "BToken.decreaseApproval",
      "offset": [
        4120,
        4508
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "7202": {
      "op": "POP"
    },
    "7203": {
      "op": "POP"
    },
    "7204": {
      "op": "POP"
    },
    "7205": {
      "fn": "BToken.decreaseApproval",
      "jump": "o",
      "offset": [
        4120,
        4508
      ],
      "op": "JUMP",
      "path": "38"
    },
    "7206": {
      "offset": [
        1010,
        1061
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "7207": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA73"
    },
    "7210": {
      "offset": [
        1058,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2710"
    },
    "7213": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "7222": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "7225": {
      "fn": "BToken.decreaseApproval",
      "jump": "i",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMP",
      "path": "33"
    },
    "7226": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12119,
        12630
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7227": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12166,
        12189
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7229": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12192,
        12208
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C44"
    },
    "7232": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12192,
        12206
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27D2"
    },
    "7235": {
      "fn": "BPool.collectMarketFee",
      "jump": "i",
      "offset": [
        12192,
        12208
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7236": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12192,
        12208
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7237": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12166,
        12208
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7238": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12166,
        12208
      ],
      "op": "POP",
      "path": "37"
    },
    "7239": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12223,
        12232
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7241": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12218,
        12624
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7242": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12242,
        12248
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7243": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12242,
        12255
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7244": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12238,
        12239
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7245": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12238,
        12255
      ],
      "op": "LT",
      "path": "37"
    },
    "7246": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12218,
        12624
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "7247": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12218,
        12624
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1DC3"
    },
    "7250": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12218,
        12624
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7251": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12276,
        12290
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7253": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12310
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "7255": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7257": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12317
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7258": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12318,
        12319
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7259": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7260": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7261": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7262": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "LT",
      "path": "37"
    },
    "7263": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C6A"
    },
    "7266": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7267": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C6A"
    },
    "7270": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "7273": {
      "fn": "BPool.collectMarketFee",
      "jump": "i",
      "offset": [
        12311,
        12320
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7274": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7275": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7277": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "MUL",
      "path": "37"
    },
    "7278": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7280": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "ADD",
      "path": "37"
    },
    "7281": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "ADD",
      "path": "37"
    },
    "7282": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12311,
        12320
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7289": {
      "op": "SHL"
    },
    "7290": {
      "op": "SUB"
    },
    "7291": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "AND",
      "path": "37"
    },
    "7292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7298": {
      "op": "SHL"
    },
    "7299": {
      "op": "SUB"
    },
    "7300": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "AND",
      "path": "37"
    },
    "7301": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7302": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7303": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7305": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "ADD",
      "path": "37"
    },
    "7306": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7307": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7308": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7309": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7311": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "ADD",
      "path": "37"
    },
    "7312": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7314": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7315": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12293,
        12321
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7316": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12276,
        12321
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7317": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12276,
        12321
      ],
      "op": "POP",
      "path": "37"
    },
    "7318": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12366,
        12367
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 95,
      "value": "0x0"
    },
    "7320": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12352
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "7322": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7324": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12359
      ],
      "op": "DUP6",
      "path": "37"
    },
    "7325": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12360,
        12361
      ],
      "op": "DUP6",
      "path": "37"
    },
    "7326": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7327": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7328": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7329": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "LT",
      "path": "37"
    },
    "7330": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1CAD"
    },
    "7333": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7334": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1CAD"
    },
    "7337": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "7340": {
      "fn": "BPool.collectMarketFee",
      "jump": "i",
      "offset": [
        12353,
        12362
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7341": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7342": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7344": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "MUL",
      "path": "37"
    },
    "7345": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7347": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "ADD",
      "path": "37"
    },
    "7348": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "ADD",
      "path": "37"
    },
    "7349": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12353,
        12362
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7356": {
      "op": "SHL"
    },
    "7357": {
      "op": "SUB"
    },
    "7358": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "AND",
      "path": "37"
    },
    "7359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7365": {
      "op": "SHL"
    },
    "7366": {
      "op": "SUB"
    },
    "7367": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "AND",
      "path": "37"
    },
    "7368": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7369": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7370": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7372": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "ADD",
      "path": "37"
    },
    "7373": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7374": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7375": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7376": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7378": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "ADD",
      "path": "37"
    },
    "7379": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7381": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12363
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7382": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12367
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7383": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12367
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7384": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12367
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "7385": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12335,
        12367
      ],
      "op": "POP",
      "path": "37"
    },
    "7386": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "PUSH32",
      "path": "37",
      "statement": 96,
      "value": "0xBAF1AB77BE65C7ABF8FCD922BFCF0A749F556AC1A4CDF39C126FFAA1851EDB56"
    },
    "7419": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12420,
        12430
      ],
      "op": "CALLER",
      "path": "37"
    },
    "7420": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12448,
        12471
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xB"
    },
    "7422": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12448,
        12471
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7424": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12448,
        12471
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7425": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12448,
        12471
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7426": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12448,
        12471
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7427": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12448,
        12471
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "7430": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12448,
        12471
      ],
      "op": "EXP",
      "path": "37"
    },
    "7431": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12448,
        12471
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7432": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12448,
        12471
      ],
      "op": "DIV",
      "path": "37"
    },
    "7433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7439": {
      "op": "SHL"
    },
    "7440": {
      "op": "SUB"
    },
    "7441": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12448,
        12471
      ],
      "op": "AND",
      "path": "37"
    },
    "7442": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12495
      ],
      "op": "DUP6",
      "path": "37"
    },
    "7443": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12496,
        12497
      ],
      "op": "DUP6",
      "path": "37"
    },
    "7444": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7445": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7446": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7447": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "LT",
      "path": "37"
    },
    "7448": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1D23"
    },
    "7451": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7452": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1D23"
    },
    "7455": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "7458": {
      "fn": "BPool.collectMarketFee",
      "jump": "i",
      "offset": [
        12489,
        12498
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7459": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7460": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7462": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "MUL",
      "path": "37"
    },
    "7463": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7465": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "ADD",
      "path": "37"
    },
    "7466": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "ADD",
      "path": "37"
    },
    "7467": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12489,
        12498
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7468": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12516,
        12522
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7469": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7471": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7472": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1D61"
    },
    "7475": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "7476": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "7477": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7478": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7479": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7486": {
      "op": "SHL"
    },
    "7487": {
      "op": "SUB"
    },
    "7488": {
      "op": "SWAP5"
    },
    "7489": {
      "op": "DUP6"
    },
    "7490": {
      "op": "AND"
    },
    "7491": {
      "op": "DUP2"
    },
    "7492": {
      "op": "MSTORE"
    },
    "7493": {
      "op": "SWAP3"
    },
    "7494": {
      "op": "DUP5"
    },
    "7495": {
      "op": "AND"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7498": {
      "op": "DUP5"
    },
    "7499": {
      "op": "ADD"
    },
    "7500": {
      "op": "MSTORE"
    },
    "7501": {
      "op": "SWAP3"
    },
    "7502": {
      "op": "AND"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7505": {
      "op": "DUP3"
    },
    "7506": {
      "op": "ADD"
    },
    "7507": {
      "op": "MSTORE"
    },
    "7508": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7510": {
      "op": "DUP2"
    },
    "7511": {
      "op": "ADD"
    },
    "7512": {
      "op": "SWAP2"
    },
    "7513": {
      "op": "SWAP1"
    },
    "7514": {
      "op": "SWAP2"
    },
    "7515": {
      "op": "MSTORE"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7518": {
      "op": "ADD"
    },
    "7519": {
      "op": "SWAP1"
    },
    "7520": {
      "op": "JUMP"
    },
    "7521": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7522": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7524": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7525": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7526": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7527": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "SUB",
      "path": "37"
    },
    "7528": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7529": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12386,
        12536
      ],
      "op": "LOG1",
      "path": "37"
    },
    "7530": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12581,
        12604
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 97,
      "value": "0xB"
    },
    "7532": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12581,
        12604
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7533": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7534": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7535": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12613
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1DB0"
    },
    "7538": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12613
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7545": {
      "op": "SHL"
    },
    "7546": {
      "op": "SUB"
    },
    "7547": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12581,
        12604
      ],
      "op": "AND",
      "path": "37"
    },
    "7548": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12581,
        12604
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7549": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12606,
        12612
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7550": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12606,
        12612
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7551": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12563
      ],
      "op": "DUP7",
      "path": "37"
    },
    "7552": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12563
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7553": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12564,
        12565
      ],
      "op": "DUP7",
      "path": "37"
    },
    "7554": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12564,
        12565
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7555": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7556": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "LT",
      "path": "37"
    },
    "7557": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1D90"
    },
    "7560": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7561": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1D90"
    },
    "7564": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "7567": {
      "fn": "BPool.collectMarketFee",
      "jump": "i",
      "offset": [
        12557,
        12566
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7568": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7569": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7571": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "MUL",
      "path": "37"
    },
    "7572": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7574": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "ADD",
      "path": "37"
    },
    "7575": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "ADD",
      "path": "37"
    },
    "7576": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12557,
        12566
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7583": {
      "op": "SHL"
    },
    "7584": {
      "op": "SUB"
    },
    "7585": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12580
      ],
      "op": "AND",
      "path": "37"
    },
    "7586": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12580
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x47A8"
    },
    "7589": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12580
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7590": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12613
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7591": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12613
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7592": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12613
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7593": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12613
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "7598": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12613
      ],
      "op": "AND",
      "path": "37"
    },
    "7599": {
      "fn": "BPool.collectMarketFee",
      "jump": "i",
      "offset": [
        12550,
        12613
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7600": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12550,
        12613
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7601": {
      "op": "POP"
    },
    "7602": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12257,
        12260
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 98
    },
    "7603": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12257,
        12260
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1DBB"
    },
    "7606": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12257,
        12260
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7607": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12257,
        12260
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x587B"
    },
    "7610": {
      "fn": "BPool.collectMarketFee",
      "jump": "i",
      "offset": [
        12257,
        12260
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7611": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12257,
        12260
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7612": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12257,
        12260
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7613": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12257,
        12260
      ],
      "op": "POP",
      "path": "37"
    },
    "7614": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12257,
        12260
      ],
      "op": "POP",
      "path": "37"
    },
    "7615": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12218,
        12624
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C49"
    },
    "7618": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12218,
        12624
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7619": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12218,
        12624
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7620": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12218,
        12624
      ],
      "op": "POP",
      "path": "37"
    },
    "7621": {
      "fn": "BPool.collectMarketFee",
      "offset": [
        12156,
        12630
      ],
      "op": "POP",
      "path": "37"
    },
    "7622": {
      "fn": "BPool.collectMarketFee",
      "jump": "o",
      "offset": [
        12119,
        12630
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7623": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7624": {
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "7626": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2922,
        2928
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7627": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32061,
        32082
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7629": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32061,
        32082
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7630": {
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "7632": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2922,
        2928
      ],
      "op": "AND",
      "path": "37"
    },
    "7633": {
      "offset": [
        2921,
        2928
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "7634": {
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1DED"
    },
    "7637": {
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7638": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7640": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7647": {
      "op": "SHL"
    },
    "7648": {
      "offset": [
        2913,
        2944
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7649": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7650": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "7652": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "ADD",
      "path": "37"
    },
    "7653": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "7656": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7657": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "7660": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7661": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7662": {
      "offset": [
        2954,
        2960
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "7664": {
      "offset": [
        2954,
        2967
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7665": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2954,
        2967
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7666": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7668": {
      "op": "NOT"
    },
    "7669": {
      "offset": [
        2954,
        2967
      ],
      "op": "AND",
      "path": "37"
    },
    "7670": {
      "offset": [
        2963,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "7672": {
      "offset": [
        2954,
        2967
      ],
      "op": "OR",
      "path": "37"
    },
    "7673": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2954,
        2967
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7674": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2954,
        2967
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "7675": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32141,
        32151
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 99,
      "value": "0xB"
    },
    "7677": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32141,
        32151
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7682": {
      "op": "SHL"
    },
    "7683": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32141,
        32151
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7684": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32141,
        32151
      ],
      "op": "DIV",
      "path": "37"
    },
    "7685": {
      "offset": [
        2954,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "7687": {
      "branch": 331,
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32141,
        32151
      ],
      "op": "AND",
      "path": "37"
    },
    "7688": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1E23"
    },
    "7691": {
      "branch": 331,
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7692": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7694": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7695": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7701": {
      "op": "SHL"
    },
    "7702": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7703": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7704": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "7706": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "ADD",
      "path": "37"
    },
    "7707": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "7710": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7711": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x572D"
    },
    "7714": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        32133,
        32173
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7715": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32133,
        32173
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7716": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32195,
        32212
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 100,
      "value": "0x4"
    },
    "7718": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32195,
        32212
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7719": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32183,
        32213
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1E38"
    },
    "7722": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32183,
        32213
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7729": {
      "op": "SHL"
    },
    "7730": {
      "op": "SUB"
    },
    "7731": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32195,
        32212
      ],
      "op": "AND",
      "path": "37"
    },
    "7732": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32183,
        32194
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "7735": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        32183,
        32213
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7736": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32183,
        32213
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7737": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32275,
        32292
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 101,
      "value": "0x4"
    },
    "7739": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32275,
        32292
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7746": {
      "op": "SHL"
    },
    "7747": {
      "op": "SUB"
    },
    "7748": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32275,
        32292
      ],
      "op": "AND",
      "path": "37"
    },
    "7749": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32293
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7751": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32293
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7752": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32293
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7753": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32293
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7754": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32274
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "7756": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32293
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7758": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32293
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7759": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32293
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7761": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32293
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7762": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32293
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7763": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32301
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "7765": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32301
      ],
      "op": "ADD",
      "path": "37"
    },
    "7766": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32266,
        32301
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7767": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32261,
        32316
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1E6D"
    },
    "7770": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32261,
        32316
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7771": {
      "offset": [
        1669,
        1677
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xDA9"
    },
    "7774": {
      "offset": [
        1676,
        1677
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "7776": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "7785": {
      "offset": [
        1669,
        1677
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "7788": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        1669,
        1677
      ],
      "op": "JUMP",
      "path": "33"
    },
    "7789": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32261,
        32316
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7790": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32244,
        32257
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7791": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32244,
        32316
      ],
      "op": "GT",
      "path": "37"
    },
    "7792": {
      "branch": 332,
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32244,
        32316
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "7793": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1EAF"
    },
    "7796": {
      "branch": 332,
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7797": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7799": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7800": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7806": {
      "op": "SHL"
    },
    "7807": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7808": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7811": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "7813": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7814": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "ADD",
      "path": "37"
    },
    "7815": {
      "op": "MSTORE"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7820": {
      "op": "DUP3"
    },
    "7821": {
      "op": "ADD"
    },
    "7822": {
      "op": "MSTORE"
    },
    "7823": {
      "op": "PUSH16",
      "value": "0x4552525F4D41585F494E5F524154494F"
    },
    "7840": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7842": {
      "op": "SHL"
    },
    "7843": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7845": {
      "op": "DUP3"
    },
    "7846": {
      "op": "ADD"
    },
    "7847": {
      "op": "MSTORE"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7850": {
      "op": "ADD"
    },
    "7851": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "7854": {
      "op": "JUMP"
    },
    "7855": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32223,
        32358
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7856": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32428,
        32445
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "7858": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32428,
        32445
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7865": {
      "op": "SHL"
    },
    "7866": {
      "op": "SUB"
    },
    "7867": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32428,
        32445
      ],
      "op": "AND",
      "path": "37"
    },
    "7868": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32393,
        32416
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7870": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32419,
        32446
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7871": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32419,
        32446
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7872": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32419,
        32446
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7873": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32419,
        32427
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "7875": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32419,
        32446
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7877": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32419,
        32446
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7878": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32419,
        32446
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7880": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32419,
        32446
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7881": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32419,
        32446
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7882": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32511,
        32527
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 102,
      "value": "0x3"
    },
    "7884": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32511,
        32527
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7885": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32511,
        32527
      ],
      "op": "ADD",
      "path": "37"
    },
    "7886": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32511,
        32527
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7887": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32541,
        32553
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "7889": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32541,
        32553
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7890": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32473,
        32590
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1EDC"
    },
    "7893": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32473,
        32590
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7894": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32511,
        32527
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7895": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32567,
        32580
      ],
      "op": "DUP7",
      "path": "37"
    },
    "7896": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32473,
        32497
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x44B1"
    },
    "7899": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        32473,
        32590
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7900": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32473,
        32590
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7901": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32457,
        32590
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7902": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32457,
        32590
      ],
      "op": "POP",
      "path": "37"
    },
    "7903": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32626,
        32642
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 103
    },
    "7904": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32609,
        32622
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7905": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32609,
        32642
      ],
      "op": "LT",
      "path": "37"
    },
    "7906": {
      "branch": 333,
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32609,
        32642
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "7907": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1EFE"
    },
    "7910": {
      "branch": 333,
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7911": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7913": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7920": {
      "op": "SHL"
    },
    "7921": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7922": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7923": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "7925": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "ADD",
      "path": "37"
    },
    "7926": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "7929": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7930": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5758"
    },
    "7933": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        32601,
        32660
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7934": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32601,
        32660
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7935": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32690,
        32727
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 104,
      "value": "0x1F0C"
    },
    "7938": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32695,
        32703
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7939": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32695,
        32711
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "7941": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32695,
        32711
      ],
      "op": "ADD",
      "path": "37"
    },
    "7942": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32695,
        32711
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7943": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32713,
        32726
      ],
      "op": "DUP6",
      "path": "37"
    },
    "7944": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32690,
        32694
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x480B"
    },
    "7947": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        32690,
        32727
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7948": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32690,
        32727
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7949": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32671,
        32687
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "7951": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32671,
        32687
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7952": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32671,
        32687
      ],
      "op": "ADD",
      "path": "37"
    },
    "7953": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32671,
        32727
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "7954": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32763,
        32780
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 105,
      "value": "0x4"
    },
    "7956": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32763,
        32780
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7957": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7959": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7960": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7961": {
      "op": "DUP7"
    },
    "7962": {
      "op": "DUP2"
    },
    "7963": {
      "op": "MSTORE"
    },
    "7964": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32797,
        32812
      ],
      "op": "TIMESTAMP",
      "path": "37"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7967": {
      "op": "DUP3"
    },
    "7968": {
      "op": "ADD"
    },
    "7969": {
      "op": "MSTORE"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7976": {
      "op": "SHL"
    },
    "7977": {
      "op": "SUB"
    },
    "7978": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32763,
        32780
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7979": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32763,
        32780
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7980": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32763,
        32780
      ],
      "op": "AND",
      "path": "37"
    },
    "7981": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32763,
        32780
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7982": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32751,
        32761
      ],
      "op": "CALLER",
      "path": "37"
    },
    "7983": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32751,
        32761
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7986": {
      "op": "DUP1"
    },
    "7987": {
      "op": "MLOAD"
    },
    "7988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7990": {
      "op": "PUSH2",
      "value": "0x5924"
    },
    "7993": {
      "op": "DUP4"
    },
    "7994": {
      "op": "CODECOPY"
    },
    "7995": {
      "op": "DUP2"
    },
    "7996": {
      "op": "MLOAD"
    },
    "7997": {
      "op": "SWAP2"
    },
    "7998": {
      "op": "MSTORE"
    },
    "7999": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8000": {
      "op": "ADD"
    },
    "8001": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8003": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8004": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8005": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8006": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "SUB",
      "path": "37"
    },
    "8007": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8008": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32742,
        32813
      ],
      "op": "LOG3",
      "path": "37"
    },
    "8009": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 106,
      "value": "0x40"
    },
    "8011": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8012": {
      "op": "DUP3"
    },
    "8013": {
      "op": "DUP2"
    },
    "8014": {
      "op": "MSTORE"
    },
    "8015": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xFCDA32798D5A9D032F49B37FEA876D422F18F6E386E0F07DB6029B693624B2C2"
    },
    "8048": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8051": {
      "op": "ADD"
    },
    "8052": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8054": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8055": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8056": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8057": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "SUB",
      "path": "37"
    },
    "8058": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8059": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32828,
        32850
      ],
      "op": "LOG1",
      "path": "37"
    },
    "8060": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33004,
        33021
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "8062": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33004,
        33021
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8063": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33004,
        33021
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8070": {
      "op": "SHL"
    },
    "8071": {
      "op": "SUB"
    },
    "8072": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33004,
        33021
      ],
      "op": "AND",
      "path": "37"
    },
    "8073": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32967,
        32992
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8075": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32995,
        33022
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8076": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32995,
        33022
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8077": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32995,
        33022
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "8078": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32995,
        33003
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "8080": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32995,
        33022
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "8082": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32995,
        33022
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "8083": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32995,
        33022
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8085": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32995,
        33022
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8086": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        32995,
        33022
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "8087": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33091,
        33109
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8088": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33091,
        33109
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8089": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33091,
        33109
      ],
      "op": "ADD",
      "path": "37"
    },
    "8090": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33091,
        33109
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8091": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33123,
        33135
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "8093": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33123,
        33135
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8094": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33053,
        33172
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1FA8"
    },
    "8097": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33053,
        33172
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8098": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33091,
        33109
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8099": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33149,
        33162
      ],
      "op": "DUP7",
      "path": "37"
    },
    "8100": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33053,
        33077
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x485D"
    },
    "8103": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        33053,
        33172
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8104": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33053,
        33172
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8105": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33196
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xF"
    },
    "8107": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33196
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8108": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33206,
        33223
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "8110": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33206,
        33223
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8111": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8113": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8114": {
      "op": "PUSH4",
      "value": "0x2AFBBACB"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8121": {
      "op": "SHL"
    },
    "8122": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8123": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8130": {
      "op": "SHL"
    },
    "8131": {
      "op": "SUB"
    },
    "8132": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33206,
        33223
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8133": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33206,
        33223
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8134": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33206,
        33223
      ],
      "op": "AND",
      "path": "37"
    },
    "8135": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "8137": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8138": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "ADD",
      "path": "37"
    },
    "8139": {
      "op": "MSTORE"
    },
    "8140": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8142": {
      "op": "DUP2"
    },
    "8143": {
      "op": "ADD"
    },
    "8144": {
      "op": "DUP5"
    },
    "8145": {
      "op": "SWAP1"
    },
    "8146": {
      "op": "MSTORE"
    },
    "8147": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33032,
        33172
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "8148": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33032,
        33172
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "8149": {
      "op": "POP"
    },
    "8150": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33196
      ],
      "op": "AND",
      "path": "37"
    },
    "8151": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33196
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8152": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33205
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x2AFBBACB"
    },
    "8157": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33205
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8160": {
      "op": "ADD"
    },
    "8161": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "8163": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8165": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8166": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8167": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP4",
      "path": "37"
    },
    "8168": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "SUB",
      "path": "37"
    },
    "8169": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8170": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP7",
      "path": "37"
    },
    "8171": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "GAS",
      "path": "37"
    },
    "8172": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "STATICCALL",
      "path": "37"
    },
    "8173": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8174": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8175": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8176": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1FFD"
    },
    "8179": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "8180": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "8181": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8183": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8184": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "8185": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "8186": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8188": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "REVERT",
      "path": "37"
    },
    "8189": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8190": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "POP",
      "path": "37"
    },
    "8191": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "POP",
      "path": "37"
    },
    "8192": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "POP",
      "path": "37"
    },
    "8193": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "POP",
      "path": "37"
    },
    "8194": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8196": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8197": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "8198": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "8200": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "NOT",
      "path": "37"
    },
    "8201": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "8203": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8204": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "ADD",
      "path": "37"
    },
    "8205": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "AND",
      "path": "37"
    },
    "8206": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8207": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "ADD",
      "path": "37"
    },
    "8208": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8209": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8211": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "8212": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "POP",
      "path": "37"
    },
    "8213": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8214": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "ADD",
      "path": "37"
    },
    "8215": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8216": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2021"
    },
    "8219": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8220": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8221": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x57C1"
    },
    "8224": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        33186,
        33236
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8225": {
      "branch": 334,
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33186,
        33236
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8226": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33182,
        33859
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8227": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33182,
        33859
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x215E"
    },
    "8230": {
      "branch": 334,
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33182,
        33859
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "8231": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33309
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 107,
      "value": "0xF"
    },
    "8233": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33309
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8234": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33316,
        33333
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "8236": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33316,
        33333
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8237": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8239": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8240": {
      "op": "PUSH4",
      "value": "0xEBEDB8B3"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8247": {
      "op": "SHL"
    },
    "8248": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8249": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8256": {
      "op": "SHL"
    },
    "8257": {
      "op": "SUB"
    },
    "8258": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33316,
        33333
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8259": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33316,
        33333
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8260": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33316,
        33333
      ],
      "op": "AND",
      "path": "37"
    },
    "8261": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "8263": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8264": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "ADD",
      "path": "37"
    },
    "8265": {
      "op": "MSTORE"
    },
    "8266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8268": {
      "op": "DUP2"
    },
    "8269": {
      "op": "ADD"
    },
    "8270": {
      "op": "DUP5"
    },
    "8271": {
      "op": "SWAP1"
    },
    "8272": {
      "op": "MSTORE"
    },
    "8273": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33309
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8274": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33309
      ],
      "op": "AND",
      "path": "37"
    },
    "8275": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33309
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8276": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33315
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xEBEDB8B3"
    },
    "8281": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33315
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8284": {
      "op": "ADD"
    },
    "8285": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8287": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8289": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8290": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8291": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP4",
      "path": "37"
    },
    "8292": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "SUB",
      "path": "37"
    },
    "8293": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8294": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8296": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP8",
      "path": "37"
    },
    "8297": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8298": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "EXTCODESIZE",
      "path": "37"
    },
    "8299": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8300": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8301": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8302": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2076"
    },
    "8305": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "8306": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8308": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8309": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "REVERT",
      "path": "37"
    },
    "8310": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8311": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "POP",
      "path": "37"
    },
    "8312": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "GAS",
      "path": "37"
    },
    "8313": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "CALL",
      "path": "37"
    },
    "8314": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8315": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8316": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8317": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x208A"
    },
    "8320": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "8321": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "8322": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8324": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8325": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "8326": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "8327": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8329": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "REVERT",
      "path": "37"
    },
    "8330": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8331": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "POP",
      "path": "37"
    },
    "8332": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "POP",
      "path": "37"
    },
    "8333": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "POP",
      "path": "37"
    },
    "8334": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33299,
        33346
      ],
      "op": "POP",
      "path": "37"
    },
    "8335": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33417,
        33453
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 108,
      "value": "0x209C"
    },
    "8338": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33422,
        33432
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8339": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33422,
        33440
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "8341": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33422,
        33440
      ],
      "op": "ADD",
      "path": "37"
    },
    "8342": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33422,
        33440
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8343": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33442,
        33452
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8344": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33417,
        33421
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x480B"
    },
    "8347": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        33417,
        33453
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8348": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33417,
        33453
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8349": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33396,
        33414
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "8351": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33396,
        33414
      ],
      "op": "DUP4",
      "path": "37"
    },
    "8352": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33396,
        33414
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8353": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33396,
        33414
      ],
      "op": "ADD",
      "path": "37"
    },
    "8354": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33396,
        33453
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8355": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33396,
        33453
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8356": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33396,
        33453
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8357": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33396,
        33453
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "8358": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33527,
        33544
      ],
      "op": "SLOAD",
      "path": "37",
      "statement": 109
    },
    "8359": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33498,
        33509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "8361": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33498,
        33509
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8362": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8364": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8365": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8366": {
      "op": "DUP5"
    },
    "8367": {
      "op": "DUP2"
    },
    "8368": {
      "op": "MSTORE"
    },
    "8369": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33590,
        33605
      ],
      "op": "TIMESTAMP",
      "path": "37"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8372": {
      "op": "DUP3"
    },
    "8373": {
      "op": "ADD"
    },
    "8374": {
      "op": "MSTORE"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8381": {
      "op": "SHL"
    },
    "8382": {
      "op": "SUB"
    },
    "8383": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33527,
        33544
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "8384": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33527,
        33544
      ],
      "op": "DUP5",
      "path": "37"
    },
    "8385": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33527,
        33544
      ],
      "op": "AND",
      "path": "37"
    },
    "8386": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33527,
        33544
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "8387": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33527,
        33544
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "8390": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33498,
        33509
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8391": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33498,
        33509
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "8392": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33498,
        33509
      ],
      "op": "DIV",
      "path": "37"
    },
    "8393": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33498,
        33509
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8394": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33498,
        33509
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "8395": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33498,
        33509
      ],
      "op": "AND",
      "path": "37"
    },
    "8396": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33498,
        33509
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8399": {
      "op": "DUP1"
    },
    "8400": {
      "op": "MLOAD"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8403": {
      "op": "PUSH2",
      "value": "0x5924"
    },
    "8406": {
      "op": "DUP4"
    },
    "8407": {
      "op": "CODECOPY"
    },
    "8408": {
      "op": "DUP2"
    },
    "8409": {
      "op": "MLOAD"
    },
    "8410": {
      "op": "SWAP2"
    },
    "8411": {
      "op": "MSTORE"
    },
    "8412": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8413": {
      "op": "ADD"
    },
    "8414": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8416": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8417": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8418": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8419": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "SUB",
      "path": "37"
    },
    "8420": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8421": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33472,
        33619
      ],
      "op": "LOG3",
      "path": "37"
    },
    "8422": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 110,
      "value": "0x40"
    },
    "8424": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8425": {
      "op": "DUP5"
    },
    "8426": {
      "op": "DUP2"
    },
    "8427": {
      "op": "MSTORE"
    },
    "8428": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x87B3975661762D852DDF2EEAAD6A43B2D93777DE7B3B7BDB634283DF32456118"
    },
    "8461": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8464": {
      "op": "ADD"
    },
    "8465": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8467": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8468": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8469": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8470": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "SUB",
      "path": "37"
    },
    "8471": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8472": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33638,
        33663
      ],
      "op": "LOG1",
      "path": "37"
    },
    "8473": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33677,
        33706
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 111,
      "value": "0x2121"
    },
    "8476": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33692,
        33705
      ],
      "op": "DUP5",
      "path": "37"
    },
    "8477": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33677,
        33691
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x48FA"
    },
    "8480": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        33677,
        33706
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8481": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33677,
        33706
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8482": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33735,
        33746
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 112,
      "value": "0xA"
    },
    "8484": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33735,
        33746
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8485": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33720,
        33762
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x213C"
    },
    "8488": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33720,
        33762
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8489": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33735,
        33746
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "8492": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33735,
        33746
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8493": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33735,
        33746
      ],
      "op": "DIV",
      "path": "37"
    },
    "8494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8500": {
      "op": "SHL"
    },
    "8501": {
      "op": "SUB"
    },
    "8502": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33735,
        33746
      ],
      "op": "AND",
      "path": "37"
    },
    "8503": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33748,
        33761
      ],
      "op": "DUP6",
      "path": "37"
    },
    "8504": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33720,
        33734
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4903"
    },
    "8507": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        33720,
        33762
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8508": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33720,
        33762
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8509": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33792,
        33809
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 113,
      "value": "0x3"
    },
    "8511": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33792,
        33809
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8512": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33811,
        33822
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "8514": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33811,
        33822
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8515": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33776,
        33835
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x215E"
    },
    "8518": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33776,
        33835
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8525": {
      "op": "SHL"
    },
    "8526": {
      "op": "SUB"
    },
    "8527": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33792,
        33809
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8528": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33792,
        33809
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8529": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33792,
        33809
      ],
      "op": "AND",
      "path": "37"
    },
    "8530": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33792,
        33809
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8531": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33792,
        33809
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "8534": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33811,
        33822
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8535": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33811,
        33822
      ],
      "op": "DIV",
      "path": "37"
    },
    "8536": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33811,
        33822
      ],
      "op": "AND",
      "path": "37"
    },
    "8537": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33824,
        33834
      ],
      "op": "DUP4",
      "path": "37"
    },
    "8538": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33776,
        33791
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x490D"
    },
    "8541": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        33776,
        33835
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8542": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33776,
        33835
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8543": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33868,
        33897
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 114,
      "value": "0x2167"
    },
    "8546": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33883,
        33896
      ],
      "op": "DUP5",
      "path": "37"
    },
    "8547": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33868,
        33882
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x48FA"
    },
    "8550": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        33868,
        33897
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8551": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33868,
        33897
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8552": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33907,
        33948
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 115,
      "value": "0x2171"
    },
    "8555": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33922,
        33932
      ],
      "op": "CALLER",
      "path": "37"
    },
    "8556": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33934,
        33947
      ],
      "op": "DUP6",
      "path": "37"
    },
    "8557": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33907,
        33921
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4903"
    },
    "8560": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        33907,
        33948
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8561": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33907,
        33948
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8562": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33974,
        33991
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 116,
      "value": "0x4"
    },
    "8564": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33974,
        33991
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8565": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33958,
        34019
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2188"
    },
    "8568": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33958,
        34019
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8575": {
      "op": "SHL"
    },
    "8576": {
      "op": "SUB"
    },
    "8577": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33974,
        33991
      ],
      "op": "AND",
      "path": "37"
    },
    "8578": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33993,
        34003
      ],
      "op": "CALLER",
      "path": "37"
    },
    "8579": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        34005,
        34018
      ],
      "op": "DUP9",
      "path": "37"
    },
    "8580": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33958,
        33973
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x490D"
    },
    "8583": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        33958,
        34019
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8584": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        33958,
        34019
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8585": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        34029,
        34049
      ],
      "op": "POP",
      "path": "37",
      "statement": 117
    },
    "8586": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        34029,
        34049
      ],
      "op": "POP",
      "path": "37"
    },
    "8587": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        34029,
        34049
      ],
      "op": "POP",
      "path": "37"
    },
    "8588": {
      "offset": [
        2988,
        2994
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "8590": {
      "offset": [
        2988,
        3002
      ],
      "op": "DUP1",
      "path": "37"
    },
    "8591": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2988,
        3002
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8594": {
      "op": "NOT"
    },
    "8595": {
      "offset": [
        2988,
        3002
      ],
      "op": "AND",
      "path": "37"
    },
    "8596": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "8597": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        2988,
        3002
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "8598": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "8599": {
      "fn": "BPool.joinswapExternAmountIn",
      "offset": [
        31933,
        34056
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8600": {
      "op": "POP"
    },
    "8601": {
      "op": "POP"
    },
    "8602": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "o",
      "offset": [
        31933,
        34056
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8603": {
      "offset": [
        1335,
        1387
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "8604": {
      "offset": [
        1376,
        1387
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA73"
    },
    "8607": {
      "offset": [
        1383,
        1387
      ],
      "op": "PUSH5",
      "path": "33",
      "value": "0xE8D4A51000"
    },
    "8613": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "8622": {
      "offset": [
        1376,
        1387
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "8625": {
      "fn": "BPool.joinswapExternAmountIn",
      "jump": "i",
      "offset": [
        1376,
        1387
      ],
      "op": "JUMP",
      "path": "33"
    },
    "8626": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8627": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3554,
        3573
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "8629": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3575,
        3594
      ],
      "op": "DUP1",
      "path": "35"
    },
    "8630": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3596,
        3621
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x21E0"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8635": {
      "op": "MLOAD"
    },
    "8636": {
      "op": "DUP1"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8639": {
      "op": "ADD"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8642": {
      "op": "MSTORE"
    },
    "8643": {
      "op": "DUP1"
    },
    "8644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8646": {
      "op": "DUP2"
    },
    "8647": {
      "op": "MSTORE"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8650": {
      "op": "ADD"
    },
    "8651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8653": {
      "op": "DUP2"
    },
    "8654": {
      "op": "MSTORE"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8657": {
      "op": "ADD"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8660": {
      "op": "DUP2"
    },
    "8661": {
      "op": "MSTORE"
    },
    "8662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8664": {
      "op": "ADD"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8667": {
      "op": "DUP2"
    },
    "8668": {
      "op": "MSTORE"
    },
    "8669": {
      "op": "POP"
    },
    "8670": {
      "op": "SWAP1"
    },
    "8671": {
      "op": "JUMP"
    },
    "8672": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3596,
        3621
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8673": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3637,
        3653
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "8675": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3656,
        3678
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x21F5"
    },
    "8678": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3661,
        3665
      ],
      "op": "DUP8",
      "path": "35"
    },
    "8679": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3666,
        3667
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "8681": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3661,
        3668
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "8683": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3661,
        3668
      ],
      "op": "MUL",
      "path": "35"
    },
    "8684": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3661,
        3668
      ],
      "op": "ADD",
      "path": "35"
    },
    "8685": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3661,
        3668
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "8686": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3670,
        3674
      ],
      "op": "DUP9",
      "path": "35"
    },
    "8687": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3675,
        3676
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3"
    },
    "8689": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3670,
        3677
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x19DC"
    },
    "8692": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3670,
        3677
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8693": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3656,
        3678
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8694": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3637,
        3678
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8695": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3637,
        3678
      ],
      "op": "POP",
      "path": "35"
    },
    "8696": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3717,
        3782
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 118,
      "value": "0x2213"
    },
    "8699": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3722,
        3735
      ],
      "op": "DUP7",
      "path": "35"
    },
    "8700": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3737,
        3781
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "8703": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3742,
        3755
      ],
      "op": "DUP9",
      "path": "35"
    },
    "8704": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3757,
        3780
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDA9"
    },
    "8707": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "8716": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3768,
        3779
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "8719": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3768,
        3777
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x168F"
    },
    "8722": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        3768,
        3779
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8723": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3717,
        3782
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8724": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3689,
        3698
      ],
      "op": "DUP3",
      "path": "35"
    },
    "8725": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3689,
        3713
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "8727": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3689,
        3713
      ],
      "op": "ADD",
      "path": "35"
    },
    "8728": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3689,
        3782
      ],
      "op": "DUP2",
      "path": "35"
    },
    "8729": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3689,
        3782
      ],
      "op": "DUP2",
      "path": "35"
    },
    "8730": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3689,
        3782
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "8731": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3689,
        3782
      ],
      "op": "POP",
      "path": "35"
    },
    "8732": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3689,
        3782
      ],
      "op": "POP",
      "path": "35"
    },
    "8733": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3838,
        3913
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 119,
      "value": "0x2238"
    },
    "8736": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3843,
        3856
      ],
      "op": "DUP7",
      "path": "35"
    },
    "8737": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3858,
        3912
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "8740": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3863,
        3876
      ],
      "op": "DUP9",
      "path": "35"
    },
    "8741": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3878,
        3911
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDA9"
    },
    "8744": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "8753": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3889,
        3910
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "8755": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3889,
        3910
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "8756": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3878,
        3882
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "8759": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        3878,
        3911
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8760": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3838,
        3913
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8761": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3802,
        3811
      ],
      "op": "DUP3",
      "path": "35"
    },
    "8762": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3802,
        3834
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "8764": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3802,
        3834
      ],
      "op": "ADD",
      "path": "35"
    },
    "8765": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3802,
        3913
      ],
      "op": "DUP2",
      "path": "35"
    },
    "8766": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3802,
        3913
      ],
      "op": "DUP2",
      "path": "35"
    },
    "8767": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3802,
        3913
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "8768": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3802,
        3913
      ],
      "op": "POP",
      "path": "35"
    },
    "8769": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3802,
        3913
      ],
      "op": "POP",
      "path": "35"
    },
    "8770": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3951,
        4013
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 120,
      "value": "0x225D"
    },
    "8773": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3956,
        3969
      ],
      "op": "DUP7",
      "path": "35"
    },
    "8774": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3971,
        4012
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "8777": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3976,
        3989
      ],
      "op": "DUP9",
      "path": "35"
    },
    "8778": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3991,
        4011
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDA9"
    },
    "8781": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "8790": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4002,
        4010
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "8792": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4002,
        4010
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "8793": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3991,
        3995
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "8796": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        3991,
        4011
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8797": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3951,
        4013
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8798": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3933,
        4013
      ],
      "op": "DUP3",
      "path": "35"
    },
    "8799": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3933,
        4013
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "8800": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4052,
        4127
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 121,
      "value": "0x2279"
    },
    "8803": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4057,
        4070
      ],
      "op": "DUP7",
      "path": "35"
    },
    "8804": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4072,
        4126
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "8807": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4057,
        4070
      ],
      "op": "DUP2",
      "path": "35"
    },
    "8808": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4092,
        4125
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDA9"
    },
    "8811": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "8820": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4103,
        4124
      ],
      "op": "DUP11",
      "path": "35"
    },
    "8821": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4092,
        4096
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "8824": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4092,
        4125
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8825": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4052,
        4127
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8826": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4023,
        4049
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "8828": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4023,
        4049
      ],
      "op": "DUP4",
      "path": "35"
    },
    "8829": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4023,
        4049
      ],
      "op": "ADD",
      "path": "35"
    },
    "8830": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4023,
        4127
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "8831": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4137,
        4150
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "8833": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4173,
        4194
      ],
      "op": "DUP1",
      "path": "35"
    },
    "8834": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4173,
        4194
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "8835": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4195,
        4216
      ],
      "op": "DUP7",
      "path": "35"
    },
    "8836": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4195,
        4216
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8837": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4161,
        4172
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x228C"
    },
    "8840": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4161,
        4170
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x168F"
    },
    "8843": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4161,
        4172
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8844": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4161,
        4172
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8845": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4160
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "8847": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4160
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "8848": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4172
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2299"
    },
    "8851": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4172
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "8852": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4172
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8853": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4172
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57A9"
    },
    "8856": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4152,
        4172
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8857": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4172
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8858": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4194
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x22A3"
    },
    "8861": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4194
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "8862": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4194
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8863": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4194
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57A9"
    },
    "8866": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4152,
        4194
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8867": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4194
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8868": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4216
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x22AD"
    },
    "8871": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4216
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "8872": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4216
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8873": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4216
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57A9"
    },
    "8876": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4152,
        4216
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8877": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4152,
        4216
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8878": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4137,
        4216
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8879": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4137,
        4216
      ],
      "op": "POP",
      "path": "35"
    },
    "8880": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4227,
        4242
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "8882": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4245,
        4265
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x22C3"
    },
    "8885": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "8894": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4256,
        4264
      ],
      "op": "DUP4",
      "path": "35"
    },
    "8895": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4245,
        4249
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "8898": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4245,
        4265
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8899": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4245,
        4265
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8900": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4227,
        4265
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8901": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4227,
        4265
      ],
      "op": "POP",
      "path": "35"
    },
    "8902": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4297,
        4328
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 122,
      "value": "0x22CF"
    },
    "8905": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4302,
        4315
      ],
      "op": "DUP9",
      "path": "35"
    },
    "8906": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4317,
        4327
      ],
      "op": "DUP3",
      "path": "35"
    },
    "8907": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4297,
        4301
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4087"
    },
    "8910": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4297,
        4328
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8911": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4297,
        4328
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8912": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4362,
        4369
      ],
      "op": "DUP10",
      "path": "35"
    },
    "8913": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4362,
        4369
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "8914": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4284,
        4328
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8915": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4284,
        4328
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "8916": {
      "op": "POP"
    },
    "8917": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4348,
        4354
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "8919": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4348,
        4354
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8920": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4357,
        4397
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x22E5"
    },
    "8923": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4357,
        4397
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8924": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4371,
        4396
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A8B"
    },
    "8927": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4362,
        4369
      ],
      "op": "DUP2",
      "path": "35"
    },
    "8928": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4284,
        4328
      ],
      "op": "DUP6",
      "path": "35"
    },
    "8929": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4371,
        4375
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x480B"
    },
    "8932": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4371,
        4396
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8933": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4357,
        4397
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8934": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4348,
        4397
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8935": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4348,
        4397
      ],
      "op": "POP",
      "path": "35"
    },
    "8936": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4407,
        4415
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "8938": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4418,
        4438
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x22F3"
    },
    "8941": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4423,
        4424
      ],
      "op": "DUP3",
      "path": "35"
    },
    "8942": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4426,
        4437
      ],
      "op": "DUP7",
      "path": "35"
    },
    "8943": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4418,
        4422
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x467C"
    },
    "8946": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4418,
        4438
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8947": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4418,
        4438
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8948": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4407,
        4438
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8949": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4407,
        4438
      ],
      "op": "POP",
      "path": "35"
    },
    "8950": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4448,
        4456
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "8952": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4459,
        4474
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2309"
    },
    "8955": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "8964": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4470,
        4473
      ],
      "op": "DUP4",
      "path": "35"
    },
    "8965": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4459,
        4463
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "8968": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4459,
        4474
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8969": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4459,
        4474
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8970": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4448,
        4474
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8971": {
      "op": "POP"
    },
    "8972": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4511,
        4529
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 123,
      "value": "0x231C"
    },
    "8975": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4516,
        4520
      ],
      "op": "DUP13",
      "path": "35"
    },
    "8976": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4521,
        4522
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "8978": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4516,
        4523
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "8980": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4516,
        4523
      ],
      "op": "MUL",
      "path": "35"
    },
    "8981": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4516,
        4523
      ],
      "op": "ADD",
      "path": "35"
    },
    "8982": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4516,
        4523
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "8983": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4525,
        4528
      ],
      "op": "DUP3",
      "path": "35"
    },
    "8984": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4511,
        4515
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4087"
    },
    "8987": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4511,
        4529
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8988": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4511,
        4529
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8989": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4494,
        4529
      ],
      "op": "SWAP9",
      "path": "35"
    },
    "8990": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4494,
        4529
      ],
      "op": "POP",
      "path": "35"
    },
    "8991": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4555,
        4569
      ],
      "op": "DUP9",
      "path": "35",
      "statement": 124
    },
    "8992": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4571,
        4650
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2337"
    },
    "8995": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4576,
        4589
      ],
      "op": "DUP13",
      "path": "35"
    },
    "8996": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4616,
        4625
      ],
      "op": "DUP10",
      "path": "35"
    },
    "8997": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4616,
        4648
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "8999": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4616,
        4648
      ],
      "op": "ADD",
      "path": "35"
    },
    "9000": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4616,
        4648
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "9001": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4591,
        4600
      ],
      "op": "DUP11",
      "path": "35"
    },
    "9002": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4591,
        4615
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "9004": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4591,
        4615
      ],
      "op": "ADD",
      "path": "35"
    },
    "9005": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4591,
        4615
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "9006": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4591,
        4648
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "9009": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4591,
        4648
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "9010": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4591,
        4648
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "9011": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4591,
        4648
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57A9"
    },
    "9014": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "i",
      "offset": [
        4591,
        4648
      ],
      "op": "JUMP",
      "path": "35"
    },
    "9015": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4571,
        4650
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "9016": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4547,
        4662
      ],
      "op": "SWAP9",
      "path": "35"
    },
    "9017": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4547,
        4662
      ],
      "op": "POP",
      "path": "35"
    },
    "9018": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4547,
        4662
      ],
      "op": "SWAP9",
      "path": "35"
    },
    "9019": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4547,
        4662
      ],
      "op": "POP",
      "path": "35"
    },
    "9020": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4547,
        4662
      ],
      "op": "POP",
      "path": "35"
    },
    "9021": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4547,
        4662
      ],
      "op": "POP",
      "path": "35"
    },
    "9022": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4547,
        4662
      ],
      "op": "POP",
      "path": "35"
    },
    "9023": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4547,
        4662
      ],
      "op": "POP",
      "path": "35"
    },
    "9024": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4547,
        4662
      ],
      "op": "POP",
      "path": "35"
    },
    "9025": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        4547,
        4662
      ],
      "op": "POP",
      "path": "35"
    },
    "9026": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "SWAP4",
      "path": "35"
    },
    "9027": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "POP",
      "path": "35"
    },
    "9028": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "SWAP4",
      "path": "35"
    },
    "9029": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "POP",
      "path": "35"
    },
    "9030": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "SWAP4",
      "path": "35"
    },
    "9031": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "9032": {
      "fn": "BMath.calcOutGivenIn",
      "offset": [
        3356,
        4678
      ],
      "op": "POP",
      "path": "35"
    },
    "9033": {
      "fn": "BMath.calcOutGivenIn",
      "jump": "o",
      "offset": [
        3356,
        4678
      ],
      "op": "JUMP",
      "path": "35"
    },
    "9034": {
      "fn": "BPool.gulp",
      "offset": [
        40698,
        41019
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9035": {
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "9037": {
      "fn": "BPool.gulp",
      "offset": [
        2922,
        2928
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9038": {
      "fn": "BPool.gulp",
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "9040": {
      "fn": "BPool.gulp",
      "offset": [
        2922,
        2928
      ],
      "op": "AND",
      "path": "37"
    },
    "9041": {
      "offset": [
        2921,
        2928
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "9042": {
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x236D"
    },
    "9045": {
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9046": {
      "fn": "BPool.gulp",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9048": {
      "fn": "BPool.gulp",
      "offset": [
        2913,
        2944
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9055": {
      "op": "SHL"
    },
    "9056": {
      "offset": [
        2913,
        2944
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9057": {
      "fn": "BPool.gulp",
      "offset": [
        2913,
        2944
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9058": {
      "fn": "BPool.gulp",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "9060": {
      "fn": "BPool.gulp",
      "offset": [
        2913,
        2944
      ],
      "op": "ADD",
      "path": "37"
    },
    "9061": {
      "fn": "BPool.gulp",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "9064": {
      "fn": "BPool.gulp",
      "offset": [
        2913,
        2944
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9065": {
      "fn": "BPool.gulp",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "9068": {
      "fn": "BPool.gulp",
      "jump": "i",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9069": {
      "fn": "BPool.gulp",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9070": {
      "offset": [
        2954,
        2960
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "9072": {
      "offset": [
        2954,
        2967
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9073": {
      "fn": "BPool.gulp",
      "offset": [
        2954,
        2967
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9074": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9076": {
      "op": "NOT"
    },
    "9077": {
      "offset": [
        2954,
        2967
      ],
      "op": "AND",
      "path": "37"
    },
    "9078": {
      "offset": [
        2963,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "9080": {
      "offset": [
        2954,
        2967
      ],
      "op": "OR",
      "path": "37"
    },
    "9081": {
      "fn": "BPool.gulp",
      "offset": [
        2954,
        2967
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9082": {
      "fn": "BPool.gulp",
      "offset": [
        2954,
        2967
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "9083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9089": {
      "op": "SHL"
    },
    "9090": {
      "op": "SUB"
    },
    "9091": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40796
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 125
    },
    "9092": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40796
      ],
      "op": "AND",
      "path": "37"
    },
    "9093": {
      "offset": [
        2954,
        2960
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9095": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40796
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9096": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40796
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9097": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40796
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9098": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40789
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "9100": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40796
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9102": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40796
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9103": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40796
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9105": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40796
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9106": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40796
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9107": {
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40802
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9108": {
      "offset": [
        2954,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "9110": {
      "branch": 335,
      "fn": "BPool.gulp",
      "offset": [
        40781,
        40802
      ],
      "op": "AND",
      "path": "37"
    },
    "9111": {
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x23D2"
    },
    "9114": {
      "branch": 335,
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9115": {
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9117": {
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9124": {
      "op": "SHL"
    },
    "9125": {
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9126": {
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9129": {
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "9131": {
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9132": {
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "ADD",
      "path": "37"
    },
    "9133": {
      "op": "MSTORE"
    },
    "9134": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9138": {
      "op": "DUP3"
    },
    "9139": {
      "op": "ADD"
    },
    "9140": {
      "op": "MSTORE"
    },
    "9141": {
      "op": "PUSH13",
      "value": "0x11549497D393D517D093D55391"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "9157": {
      "op": "SHL"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9160": {
      "op": "DUP3"
    },
    "9161": {
      "op": "ADD"
    },
    "9162": {
      "op": "MSTORE"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9165": {
      "op": "ADD"
    },
    "9166": {
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "9169": {
      "op": "JUMP"
    },
    "9170": {
      "fn": "BPool.gulp",
      "offset": [
        40773,
        40820
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9177": {
      "op": "SHL"
    },
    "9178": {
      "op": "SUB"
    },
    "9179": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9180": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "AND",
      "path": "37"
    },
    "9181": {
      "fn": "BPool.gulp",
      "offset": [
        40830,
        40848
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9183": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9184": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9185": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9186": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40859
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "9188": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9190": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9191": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9193": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9194": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9195": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9196": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9197": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40874
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "9199": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40874
      ],
      "op": "ADD",
      "path": "37"
    },
    "9200": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40874
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9201": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 126
    },
    "9202": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9203": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9208": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9210": {
      "op": "SHL"
    },
    "9211": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9212": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9213": {
      "fn": "BPool.gulp",
      "offset": [
        40942,
        40946
      ],
      "op": "ADDRESS",
      "path": "37"
    },
    "9214": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "9216": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9217": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "ADD",
      "path": "37"
    },
    "9218": {
      "op": "MSTORE"
    },
    "9219": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40874
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9220": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40874
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9221": {
      "fn": "BPool.gulp",
      "offset": [
        40851,
        40866
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9222": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40933
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x70A08231"
    },
    "9227": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40933
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9230": {
      "op": "ADD"
    },
    "9231": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9233": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9235": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9236": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9237": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9238": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "SUB",
      "path": "37"
    },
    "9239": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9240": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP7",
      "path": "37"
    },
    "9241": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "GAS",
      "path": "37"
    },
    "9242": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "STATICCALL",
      "path": "37"
    },
    "9243": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "9244": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9245": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "9246": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x242B"
    },
    "9249": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9250": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "9251": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9253": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9254": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "9255": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "9256": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9258": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "REVERT",
      "path": "37"
    },
    "9259": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9260": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "POP",
      "path": "37"
    },
    "9261": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "POP",
      "path": "37"
    },
    "9262": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "POP",
      "path": "37"
    },
    "9263": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "POP",
      "path": "37"
    },
    "9264": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9266": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9267": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "9268": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "9270": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "NOT",
      "path": "37"
    },
    "9271": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "9273": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9274": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "ADD",
      "path": "37"
    },
    "9275": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "AND",
      "path": "37"
    },
    "9276": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9277": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "ADD",
      "path": "37"
    },
    "9278": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9279": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9281": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9282": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "POP",
      "path": "37"
    },
    "9283": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9284": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "ADD",
      "path": "37"
    },
    "9285": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9286": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x244F"
    },
    "9289": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9290": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9291": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5862"
    },
    "9294": {
      "fn": "BPool.gulp",
      "jump": "i",
      "offset": [
        40910,
        40948
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9295": {
      "fn": "BPool.gulp",
      "offset": [
        40910,
        40948
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9302": {
      "op": "SHL"
    },
    "9303": {
      "op": "SUB"
    },
    "9304": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9305": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "AND",
      "path": "37"
    },
    "9306": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9308": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9309": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9310": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9311": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40892
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "9313": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9315": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9316": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9317": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9318": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9320": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9321": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9322": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9323": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40899
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9324": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40907
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "9326": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40907
      ],
      "op": "ADD",
      "path": "37"
    },
    "9327": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40948
      ],
      "op": "DUP5",
      "path": "37"
    },
    "9328": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40948
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9329": {
      "fn": "BPool.gulp",
      "offset": [
        40884,
        40948
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "9330": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 127
    },
    "9331": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9332": {
      "op": "SWAP3"
    },
    "9333": {
      "op": "DUP4"
    },
    "9334": {
      "op": "MSTORE"
    },
    "9335": {
      "op": "DUP3"
    },
    "9336": {
      "op": "ADD"
    },
    "9337": {
      "op": "DUP5"
    },
    "9338": {
      "op": "SWAP1"
    },
    "9339": {
      "op": "MSTORE"
    },
    "9340": {
      "op": "DUP2"
    },
    "9341": {
      "op": "ADD"
    },
    "9342": {
      "op": "SWAP2"
    },
    "9343": {
      "op": "SWAP1"
    },
    "9344": {
      "op": "SWAP2"
    },
    "9345": {
      "op": "MSTORE"
    },
    "9346": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x9FACCA02B471D2776031537A8C9E281DFE5120035EDE107BD328B165FFD97338"
    },
    "9379": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9380": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9382": {
      "op": "ADD"
    },
    "9383": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9385": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9386": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9387": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9388": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "SUB",
      "path": "37"
    },
    "9389": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9390": {
      "fn": "BPool.gulp",
      "offset": [
        40963,
        41012
      ],
      "op": "LOG1",
      "path": "37"
    },
    "9391": {
      "op": "POP"
    },
    "9392": {
      "op": "POP"
    },
    "9393": {
      "offset": [
        2988,
        2994
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "9395": {
      "offset": [
        2988,
        3002
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9396": {
      "fn": "BPool.gulp",
      "offset": [
        2988,
        3002
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9397": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9399": {
      "op": "NOT"
    },
    "9400": {
      "offset": [
        2988,
        3002
      ],
      "op": "AND",
      "path": "37"
    },
    "9401": {
      "fn": "BPool.gulp",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9402": {
      "fn": "BPool.gulp",
      "offset": [
        2988,
        3002
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "9403": {
      "fn": "BPool.gulp",
      "jump": "o",
      "offset": [
        40698,
        41019
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9404": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        13879,
        14032
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9405": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "9407": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3056,
        3062
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9408": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        13983,
        13990
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9410": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        13983,
        13990
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9411": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "9413": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3056,
        3062
      ],
      "op": "AND",
      "path": "37"
    },
    "9414": {
      "offset": [
        3055,
        3062
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "9415": {
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x24E2"
    },
    "9418": {
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9419": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9421": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9428": {
      "op": "SHL"
    },
    "9429": {
      "offset": [
        3047,
        3078
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9430": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9431": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "9433": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "ADD",
      "path": "37"
    },
    "9434": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "9437": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9438": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "9441": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "jump": "i",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9442": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9443": {
      "op": "POP"
    },
    "9444": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        14013,
        14025
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 128,
      "value": "0xE"
    },
    "9446": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        14013,
        14025
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9447": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "offset": [
        13879,
        14032
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9448": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "jump": "o",
      "offset": [
        13879,
        14032
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9449": {
      "offset": [
        1394,
        1445
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "9450": {
      "offset": [
        1435,
        1445
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA73"
    },
    "9453": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "9462": {
      "offset": [
        1442,
        1445
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x64"
    },
    "9464": {
      "offset": [
        1435,
        1445
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x570E"
    },
    "9467": {
      "fn": "BPool.getTotalDenormalizedWeight",
      "jump": "i",
      "offset": [
        1435,
        1445
      ],
      "op": "JUMP",
      "path": "33"
    },
    "9468": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9469": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "9471": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3056,
        3062
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9472": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13672,
        13679
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9474": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13672,
        13679
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9475": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "9477": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3056,
        3062
      ],
      "op": "AND",
      "path": "37"
    },
    "9478": {
      "offset": [
        3055,
        3062
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "9479": {
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2522"
    },
    "9482": {
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9483": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9485": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9492": {
      "op": "SHL"
    },
    "9493": {
      "offset": [
        3047,
        3078
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9494": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9495": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "9497": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "ADD",
      "path": "37"
    },
    "9498": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "9501": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9502": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "9505": {
      "fn": "BPool.getDenormalizedWeight",
      "jump": "i",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9506": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9507": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13695,
        13713
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 129,
      "value": "0x252B"
    },
    "9510": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13707,
        13712
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9511": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13695,
        13706
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "9514": {
      "fn": "BPool.getDenormalizedWeight",
      "jump": "i",
      "offset": [
        13695,
        13713
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9515": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13695,
        13713
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9516": {
      "op": "POP"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9523": {
      "op": "SHL"
    },
    "9524": {
      "op": "SUB"
    },
    "9525": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 130
    },
    "9526": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "AND",
      "path": "37"
    },
    "9527": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9529": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9530": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9531": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9532": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13738
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "9534": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9536": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9537": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9539": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9540": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13745
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9541": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13752
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "9543": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13752
      ],
      "op": "ADD",
      "path": "37"
    },
    "9544": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13730,
        13752
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9545": {
      "offset": [
        3088,
        3089
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9546": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9547": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9548": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        13560,
        13759
      ],
      "op": "POP",
      "path": "37"
    },
    "9549": {
      "fn": "BPool.getDenormalizedWeight",
      "jump": "o",
      "offset": [
        13560,
        13759
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9550": {
      "offset": [
        1683,
        1742
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "9551": {
      "offset": [
        1725,
        1733
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2561"
    },
    "9554": {
      "offset": [
        1732,
        1733
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "9556": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "9565": {
      "offset": [
        1725,
        1733
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "9568": {
      "fn": "BPool.getDenormalizedWeight",
      "jump": "i",
      "offset": [
        1725,
        1733
      ],
      "op": "JUMP",
      "path": "33"
    },
    "9569": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        1725,
        1733
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "9570": {
      "offset": [
        1724,
        1742
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA73"
    },
    "9573": {
      "fn": "BPool.getDenormalizedWeight",
      "offset": [
        1724,
        1742
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "9574": {
      "offset": [
        1737,
        1742
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "9576": {
      "offset": [
        1724,
        1742
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x57A9"
    },
    "9579": {
      "fn": "BPool.getDenormalizedWeight",
      "jump": "i",
      "offset": [
        1724,
        1742
      ],
      "op": "JUMP",
      "path": "33"
    },
    "9580": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37784,
        38163
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9587": {
      "op": "SHL"
    },
    "9588": {
      "op": "SUB"
    },
    "9589": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9590": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "AND",
      "path": "37"
    },
    "9591": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37902,
        37922
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9593": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9594": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9595": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9596": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37972
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "9598": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9600": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9601": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9602": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9603": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9605": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9606": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9607": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37964,
        37982
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9608": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9609": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9610": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "9612": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9613": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "ADD",
      "path": "37"
    },
    "9614": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9615": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9616": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9617": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9618": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "9620": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "AND",
      "path": "37"
    },
    "9621": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "9622": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "9623": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9624": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9625": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "9627": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9628": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "ADD",
      "path": "37"
    },
    "9629": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9630": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "9631": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9632": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "ADD",
      "path": "37"
    },
    "9633": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "9634": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9635": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "9636": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9637": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "9639": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9640": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "ADD",
      "path": "37"
    },
    "9641": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9642": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9643": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9644": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "ADD",
      "path": "37"
    },
    "9645": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9646": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9647": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9648": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9649": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "9651": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "ADD",
      "path": "37"
    },
    "9652": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9653": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "9655": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9656": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "ADD",
      "path": "37"
    },
    "9657": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9658": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9659": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9660": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        38077,
        38089
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 131,
      "value": "0x9"
    },
    "9662": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        38077,
        38089
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9663": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        38008,
        38127
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1938"
    },
    "9666": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        38008,
        38127
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9667": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        37938,
        37982
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9668": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        38103,
        38117
      ],
      "op": "DUP6",
      "path": "37"
    },
    "9669": {
      "fn": "BPool.calcPoolInSingleOut",
      "offset": [
        38008,
        38032
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4A55"
    },
    "9672": {
      "fn": "BPool.calcPoolInSingleOut",
      "jump": "i",
      "offset": [
        38008,
        38127
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9673": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "9674": {
      "fn": "BToken.transfer",
      "offset": [
        4573,
        4577
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "9676": {
      "fn": "BToken.transfer",
      "offset": [
        4589,
        4616
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 132,
      "value": "0x25D6"
    },
    "9679": {
      "fn": "BToken.transfer",
      "offset": [
        4595,
        4605
      ],
      "op": "CALLER",
      "path": "38"
    },
    "9680": {
      "fn": "BToken.transfer",
      "offset": [
        4607,
        4610
      ],
      "op": "DUP5",
      "path": "38"
    },
    "9681": {
      "fn": "BToken.transfer",
      "offset": [
        4612,
        4615
      ],
      "op": "DUP5",
      "path": "38"
    },
    "9682": {
      "fn": "BToken.transfer",
      "offset": [
        4589,
        4594
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x41F0"
    },
    "9685": {
      "fn": "BToken.transfer",
      "jump": "i",
      "offset": [
        4589,
        4616
      ],
      "op": "JUMP",
      "path": "38"
    },
    "9686": {
      "fn": "BToken.transfer",
      "offset": [
        4589,
        4616
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "9687": {
      "op": "POP"
    },
    "9688": {
      "fn": "BToken.transfer",
      "offset": [
        4633,
        4637
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 133,
      "value": "0x1"
    },
    "9690": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "9691": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "9692": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "POP",
      "path": "38"
    },
    "9693": {
      "fn": "BToken.transfer",
      "offset": [
        4514,
        4644
      ],
      "op": "POP",
      "path": "38"
    },
    "9694": {
      "fn": "BToken.transfer",
      "jump": "o",
      "offset": [
        4514,
        4644
      ],
      "op": "JUMP",
      "path": "38"
    },
    "9695": {
      "fn": "BPool.collectOPC",
      "offset": [
        9921,
        10390
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9696": {
      "fn": "BPool.collectOPC",
      "offset": [
        9962,
        9985
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9698": {
      "fn": "BPool.collectOPC",
      "offset": [
        9988,
        10004
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x25E9"
    },
    "9701": {
      "fn": "BPool.collectOPC",
      "offset": [
        9988,
        10002
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27D2"
    },
    "9704": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        9988,
        10004
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9705": {
      "fn": "BPool.collectOPC",
      "offset": [
        9988,
        10004
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9706": {
      "fn": "BPool.collectOPC",
      "offset": [
        9962,
        10004
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9707": {
      "fn": "BPool.collectOPC",
      "offset": [
        9962,
        10004
      ],
      "op": "POP",
      "path": "37"
    },
    "9708": {
      "fn": "BPool.collectOPC",
      "offset": [
        10019,
        10028
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9710": {
      "fn": "BPool.collectOPC",
      "offset": [
        10014,
        10384
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9711": {
      "fn": "BPool.collectOPC",
      "offset": [
        10038,
        10044
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9712": {
      "fn": "BPool.collectOPC",
      "offset": [
        10038,
        10051
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9713": {
      "fn": "BPool.collectOPC",
      "offset": [
        10034,
        10035
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9714": {
      "fn": "BPool.collectOPC",
      "offset": [
        10034,
        10051
      ],
      "op": "LT",
      "path": "37"
    },
    "9715": {
      "fn": "BPool.collectOPC",
      "offset": [
        10014,
        10384
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "9716": {
      "fn": "BPool.collectOPC",
      "offset": [
        10014,
        10384
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1DC3"
    },
    "9719": {
      "fn": "BPool.collectOPC",
      "offset": [
        10014,
        10384
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9720": {
      "fn": "BPool.collectOPC",
      "offset": [
        10072,
        10086
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9722": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10102
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "9724": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9726": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10109
      ],
      "op": "DUP5",
      "path": "37"
    },
    "9727": {
      "fn": "BPool.collectOPC",
      "offset": [
        10110,
        10111
      ],
      "op": "DUP5",
      "path": "37"
    },
    "9728": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9729": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9730": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9731": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "LT",
      "path": "37"
    },
    "9732": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x260F"
    },
    "9735": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9736": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x260F"
    },
    "9739": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "9742": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        10103,
        10112
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9743": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9744": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9746": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "MUL",
      "path": "37"
    },
    "9747": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9749": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "ADD",
      "path": "37"
    },
    "9750": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "ADD",
      "path": "37"
    },
    "9751": {
      "fn": "BPool.collectOPC",
      "offset": [
        10103,
        10112
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9758": {
      "op": "SHL"
    },
    "9759": {
      "op": "SUB"
    },
    "9760": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "AND",
      "path": "37"
    },
    "9761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9767": {
      "op": "SHL"
    },
    "9768": {
      "op": "SUB"
    },
    "9769": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "AND",
      "path": "37"
    },
    "9770": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9771": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9772": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9774": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "ADD",
      "path": "37"
    },
    "9775": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9776": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9777": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9778": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9780": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "ADD",
      "path": "37"
    },
    "9781": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9783": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9784": {
      "fn": "BPool.collectOPC",
      "offset": [
        10089,
        10113
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9785": {
      "fn": "BPool.collectOPC",
      "offset": [
        10072,
        10113
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9786": {
      "fn": "BPool.collectOPC",
      "offset": [
        10072,
        10113
      ],
      "op": "POP",
      "path": "37"
    },
    "9787": {
      "fn": "BPool.collectOPC",
      "offset": [
        10154,
        10155
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 134,
      "value": "0x0"
    },
    "9789": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10140
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "9791": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9793": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10147
      ],
      "op": "DUP6",
      "path": "37"
    },
    "9794": {
      "fn": "BPool.collectOPC",
      "offset": [
        10148,
        10149
      ],
      "op": "DUP6",
      "path": "37"
    },
    "9795": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9796": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9797": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9798": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "LT",
      "path": "37"
    },
    "9799": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2652"
    },
    "9802": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9803": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2652"
    },
    "9806": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "9809": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        10141,
        10150
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9810": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9811": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9813": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "MUL",
      "path": "37"
    },
    "9814": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9816": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "ADD",
      "path": "37"
    },
    "9817": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "ADD",
      "path": "37"
    },
    "9818": {
      "fn": "BPool.collectOPC",
      "offset": [
        10141,
        10150
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9825": {
      "op": "SHL"
    },
    "9826": {
      "op": "SUB"
    },
    "9827": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "AND",
      "path": "37"
    },
    "9828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9834": {
      "op": "SHL"
    },
    "9835": {
      "op": "SUB"
    },
    "9836": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "AND",
      "path": "37"
    },
    "9837": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9838": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9839": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9841": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "ADD",
      "path": "37"
    },
    "9842": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9843": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9844": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9845": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9847": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "ADD",
      "path": "37"
    },
    "9848": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9850": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10151
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9851": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10155
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9852": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10155
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9853": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10155
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "9854": {
      "fn": "BPool.collectOPC",
      "offset": [
        10127,
        10155
      ],
      "op": "POP",
      "path": "37"
    },
    "9855": {
      "fn": "BPool.collectOPC",
      "offset": [
        10169,
        10190
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9857": {
      "fn": "BPool.collectOPC",
      "offset": [
        10208,
        10216
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "9859": {
      "fn": "BPool.collectOPC",
      "offset": [
        10208,
        10216
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9861": {
      "fn": "BPool.collectOPC",
      "offset": [
        10208,
        10216
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9862": {
      "fn": "BPool.collectOPC",
      "offset": [
        10208,
        10216
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9863": {
      "fn": "BPool.collectOPC",
      "offset": [
        10208,
        10216
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9864": {
      "fn": "BPool.collectOPC",
      "offset": [
        10208,
        10216
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "9867": {
      "fn": "BPool.collectOPC",
      "offset": [
        10208,
        10216
      ],
      "op": "EXP",
      "path": "37"
    },
    "9868": {
      "fn": "BPool.collectOPC",
      "offset": [
        10208,
        10216
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9869": {
      "fn": "BPool.collectOPC",
      "offset": [
        10208,
        10216
      ],
      "op": "DIV",
      "path": "37"
    },
    "9870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9876": {
      "op": "SHL"
    },
    "9877": {
      "op": "SUB"
    },
    "9878": {
      "fn": "BPool.collectOPC",
      "offset": [
        10208,
        10216
      ],
      "op": "AND",
      "path": "37"
    },
    "9879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9885": {
      "op": "SHL"
    },
    "9886": {
      "op": "SUB"
    },
    "9887": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10233
      ],
      "op": "AND",
      "path": "37"
    },
    "9888": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10233
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x1A81876D"
    },
    "9893": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9895": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9896": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9897": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "9902": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "AND",
      "path": "37"
    },
    "9903": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE0"
    },
    "9905": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "SHL",
      "path": "37"
    },
    "9906": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9907": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9908": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "9910": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "ADD",
      "path": "37"
    },
    "9911": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9913": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9915": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9916": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9917": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9918": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "SUB",
      "path": "37"
    },
    "9919": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9920": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP7",
      "path": "37"
    },
    "9921": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "GAS",
      "path": "37"
    },
    "9922": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "STATICCALL",
      "path": "37"
    },
    "9923": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "9924": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9925": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "9926": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x26D3"
    },
    "9929": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9930": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "9931": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9933": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9934": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "9935": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "9936": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9938": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "REVERT",
      "path": "37"
    },
    "9939": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9940": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "POP",
      "path": "37"
    },
    "9941": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "POP",
      "path": "37"
    },
    "9942": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "POP",
      "path": "37"
    },
    "9943": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "POP",
      "path": "37"
    },
    "9944": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9946": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9947": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "9948": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "9950": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "NOT",
      "path": "37"
    },
    "9951": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "9953": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9954": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "ADD",
      "path": "37"
    },
    "9955": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "AND",
      "path": "37"
    },
    "9956": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9957": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "ADD",
      "path": "37"
    },
    "9958": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9959": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9961": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9962": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "POP",
      "path": "37"
    },
    "9963": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9964": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "ADD",
      "path": "37"
    },
    "9965": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9966": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x26F7"
    },
    "9969": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9970": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9971": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5896"
    },
    "9974": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        10193,
        10235
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9975": {
      "fn": "BPool.collectOPC",
      "offset": [
        10193,
        10235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9976": {
      "fn": "BPool.collectOPC",
      "offset": [
        10169,
        10235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9977": {
      "fn": "BPool.collectOPC",
      "offset": [
        10169,
        10235
      ],
      "op": "POP",
      "path": "37"
    },
    "9978": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "PUSH32",
      "path": "37",
      "statement": 135,
      "value": "0xED2B0288692CFC6D01C94A67A53721792F59C3D1388221F8AA4F66C8D2808DDE"
    },
    "10011": {
      "fn": "BPool.collectOPC",
      "offset": [
        10261,
        10271
      ],
      "op": "CALLER",
      "path": "37"
    },
    "10012": {
      "fn": "BPool.collectOPC",
      "offset": [
        10273,
        10286
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10013": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10294
      ],
      "op": "DUP7",
      "path": "37"
    },
    "10014": {
      "fn": "BPool.collectOPC",
      "offset": [
        10295,
        10296
      ],
      "op": "DUP7",
      "path": "37"
    },
    "10015": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10016": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10017": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10018": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "LT",
      "path": "37"
    },
    "10019": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x272E"
    },
    "10022": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10023": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x272E"
    },
    "10026": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "10029": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        10288,
        10297
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10030": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10031": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10033": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "MUL",
      "path": "37"
    },
    "10034": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10036": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "ADD",
      "path": "37"
    },
    "10037": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "ADD",
      "path": "37"
    },
    "10038": {
      "fn": "BPool.collectOPC",
      "offset": [
        10288,
        10297
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10039": {
      "fn": "BPool.collectOPC",
      "offset": [
        10299,
        10305
      ],
      "op": "DUP6",
      "path": "37"
    },
    "10040": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10042": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10043": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x276C"
    },
    "10046": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "10047": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "10048": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "10049": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10050": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10057": {
      "op": "SHL"
    },
    "10058": {
      "op": "SUB"
    },
    "10059": {
      "op": "SWAP5"
    },
    "10060": {
      "op": "DUP6"
    },
    "10061": {
      "op": "AND"
    },
    "10062": {
      "op": "DUP2"
    },
    "10063": {
      "op": "MSTORE"
    },
    "10064": {
      "op": "SWAP3"
    },
    "10065": {
      "op": "DUP5"
    },
    "10066": {
      "op": "AND"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10069": {
      "op": "DUP5"
    },
    "10070": {
      "op": "ADD"
    },
    "10071": {
      "op": "MSTORE"
    },
    "10072": {
      "op": "SWAP3"
    },
    "10073": {
      "op": "AND"
    },
    "10074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10076": {
      "op": "DUP3"
    },
    "10077": {
      "op": "ADD"
    },
    "10078": {
      "op": "MSTORE"
    },
    "10079": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10081": {
      "op": "DUP2"
    },
    "10082": {
      "op": "ADD"
    },
    "10083": {
      "op": "SWAP2"
    },
    "10084": {
      "op": "SWAP1"
    },
    "10085": {
      "op": "SWAP2"
    },
    "10086": {
      "op": "MSTORE"
    },
    "10087": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10089": {
      "op": "ADD"
    },
    "10090": {
      "op": "SWAP1"
    },
    "10091": {
      "op": "JUMP"
    },
    "10092": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10093": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10095": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10096": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10097": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10098": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "SUB",
      "path": "37"
    },
    "10099": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10100": {
      "fn": "BPool.collectOPC",
      "offset": [
        10254,
        10306
      ],
      "op": "LOG1",
      "path": "37"
    },
    "10101": {
      "fn": "BPool.collectOPC",
      "offset": [
        10320,
        10373
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 136,
      "value": "0x278B"
    },
    "10104": {
      "fn": "BPool.collectOPC",
      "offset": [
        10351,
        10364
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10105": {
      "fn": "BPool.collectOPC",
      "offset": [
        10366,
        10372
      ],
      "op": "DUP4",
      "path": "37"
    },
    "10106": {
      "fn": "BPool.collectOPC",
      "offset": [
        10327,
        10333
      ],
      "op": "DUP7",
      "path": "37"
    },
    "10107": {
      "fn": "BPool.collectOPC",
      "offset": [
        10334,
        10335
      ],
      "op": "DUP7",
      "path": "37"
    },
    "10108": {
      "fn": "BPool.collectOPC",
      "offset": [
        10327,
        10336
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10109": {
      "fn": "BPool.collectOPC",
      "offset": [
        10327,
        10336
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10110": {
      "fn": "BPool.collectOPC",
      "offset": [
        10327,
        10336
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10111": {
      "fn": "BPool.collectOPC",
      "offset": [
        10327,
        10336
      ],
      "op": "LT",
      "path": "37"
    },
    "10112": {
      "fn": "BPool.collectOPC",
      "offset": [
        10327,
        10336
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1D90"
    },
    "10115": {
      "fn": "BPool.collectOPC",
      "offset": [
        10327,
        10336
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10116": {
      "fn": "BPool.collectOPC",
      "offset": [
        10327,
        10336
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1D90"
    },
    "10119": {
      "fn": "BPool.collectOPC",
      "offset": [
        10327,
        10336
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "10122": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        10327,
        10336
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10123": {
      "fn": "BPool.collectOPC",
      "offset": [
        10320,
        10373
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10124": {
      "fn": "BPool.collectOPC",
      "offset": [
        10058,
        10384
      ],
      "op": "POP",
      "path": "37"
    },
    "10125": {
      "fn": "BPool.collectOPC",
      "offset": [
        10058,
        10384
      ],
      "op": "POP",
      "path": "37"
    },
    "10126": {
      "fn": "BPool.collectOPC",
      "offset": [
        10053,
        10056
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 137
    },
    "10127": {
      "fn": "BPool.collectOPC",
      "offset": [
        10053,
        10056
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10128": {
      "fn": "BPool.collectOPC",
      "offset": [
        10053,
        10056
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2798"
    },
    "10131": {
      "fn": "BPool.collectOPC",
      "offset": [
        10053,
        10056
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10132": {
      "fn": "BPool.collectOPC",
      "offset": [
        10053,
        10056
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x587B"
    },
    "10135": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        10053,
        10056
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10136": {
      "fn": "BPool.collectOPC",
      "offset": [
        10053,
        10056
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10137": {
      "fn": "BPool.collectOPC",
      "offset": [
        10053,
        10056
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10138": {
      "fn": "BPool.collectOPC",
      "offset": [
        10053,
        10056
      ],
      "op": "POP",
      "path": "37"
    },
    "10139": {
      "fn": "BPool.collectOPC",
      "offset": [
        10053,
        10056
      ],
      "op": "POP",
      "path": "37"
    },
    "10140": {
      "fn": "BPool.collectOPC",
      "offset": [
        10014,
        10384
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x25EE"
    },
    "10143": {
      "fn": "BPool.collectOPC",
      "offset": [
        10014,
        10384
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10144": {
      "offset": [
        1067,
        1117
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "10145": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA73"
    },
    "10148": {
      "offset": [
        1115,
        1117
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xA"
    },
    "10150": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "10159": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "10162": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMP",
      "path": "33"
    },
    "10163": {
      "offset": [
        1504,
        1563
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "10164": {
      "offset": [
        1558,
        1563
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "10166": {
      "offset": [
        1546,
        1554
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x27C8"
    },
    "10169": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "10178": {
      "offset": [
        1546,
        1547
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "10180": {
      "offset": [
        1546,
        1554
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x570E"
    },
    "10183": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        1546,
        1554
      ],
      "op": "JUMP",
      "path": "33"
    },
    "10184": {
      "fn": "BPool.collectOPC",
      "offset": [
        1546,
        1554
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "10185": {
      "offset": [
        1545,
        1563
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA73"
    },
    "10188": {
      "fn": "BPool.collectOPC",
      "offset": [
        1545,
        1563
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "10189": {
      "fn": "BPool.collectOPC",
      "offset": [
        1545,
        1563
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "10190": {
      "fn": "BPool.collectOPC",
      "offset": [
        1545,
        1563
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x58B3"
    },
    "10193": {
      "fn": "BPool.collectOPC",
      "jump": "i",
      "offset": [
        1545,
        1563
      ],
      "op": "JUMP",
      "path": "33"
    },
    "10194": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10195": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "10197": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3056,
        3062
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "10198": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9610,
        9633
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "10200": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9610,
        9633
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10201": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "10203": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3056,
        3062
      ],
      "op": "AND",
      "path": "37"
    },
    "10204": {
      "offset": [
        3055,
        3062
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "10205": {
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27F8"
    },
    "10208": {
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10209": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10211": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10212": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10216": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10218": {
      "op": "SHL"
    },
    "10219": {
      "offset": [
        3047,
        3078
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10220": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10221": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "10223": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "ADD",
      "path": "37"
    },
    "10224": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "10227": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10228": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "10231": {
      "fn": "BPool.getFinalTokens",
      "jump": "i",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10232": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10233": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9657,
        9667
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 138,
      "value": "0xB"
    },
    "10235": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9657,
        9667
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10240": {
      "op": "SHL"
    },
    "10241": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9657,
        9667
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10242": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9657,
        9667
      ],
      "op": "DIV",
      "path": "37"
    },
    "10243": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9657,
        9667
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "10245": {
      "branch": 336,
      "fn": "BPool.getFinalTokens",
      "offset": [
        9657,
        9667
      ],
      "op": "AND",
      "path": "37"
    },
    "10246": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2821"
    },
    "10249": {
      "branch": 336,
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10250": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10252": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10253": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10257": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10259": {
      "op": "SHL"
    },
    "10260": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10261": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10262": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "10264": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "ADD",
      "path": "37"
    },
    "10265": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "10268": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10269": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x572D"
    },
    "10272": {
      "fn": "BPool.getFinalTokens",
      "jump": "i",
      "offset": [
        9649,
        9689
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10273": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9649,
        9689
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10274": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9706,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 139,
      "value": "0xC"
    },
    "10276": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10277": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "10278": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10279": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10281": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "MUL",
      "path": "37"
    },
    "10282": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10284": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "ADD",
      "path": "37"
    },
    "10285": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10287": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10288": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10289": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10290": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "ADD",
      "path": "37"
    },
    "10291": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10293": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10294": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10295": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "10296": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10297": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10298": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10299": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10300": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10301": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10303": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "ADD",
      "path": "37"
    },
    "10304": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10305": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10306": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "10307": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10308": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "10309": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2877"
    },
    "10312": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10313": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10315": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "MUL",
      "path": "37"
    },
    "10316": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10317": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "ADD",
      "path": "37"
    },
    "10318": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10319": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10320": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10322": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10323": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10325": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10327": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "10328": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10329": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10330": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10331": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "10332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10338": {
      "op": "SHL"
    },
    "10339": {
      "op": "SUB"
    },
    "10340": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "AND",
      "path": "37"
    },
    "10341": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10342": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10343": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "10345": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10346": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10347": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "ADD",
      "path": "37"
    },
    "10348": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10349": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10351": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "ADD",
      "path": "37"
    },
    "10352": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10353": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "DUP4",
      "path": "37"
    },
    "10354": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "GT",
      "path": "37"
    },
    "10355": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2859"
    },
    "10358": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10359": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10360": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "POP",
      "path": "37"
    },
    "10361": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "POP",
      "path": "37"
    },
    "10362": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "POP",
      "path": "37"
    },
    "10363": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "POP",
      "path": "37"
    },
    "10364": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "POP",
      "path": "37"
    },
    "10365": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10366": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9699,
        9713
      ],
      "op": "POP",
      "path": "37"
    },
    "10367": {
      "fn": "BPool.getFinalTokens",
      "offset": [
        9520,
        9720
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10368": {
      "fn": "BPool.getFinalTokens",
      "jump": "o",
      "offset": [
        9520,
        9720
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10369": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10370": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10688,
        10704
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "10372": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10706,
        10722
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10373": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10738,
        10765
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10375": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10768,
        10784
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x288E"
    },
    "10378": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10768,
        10782
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27D2"
    },
    "10381": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "i",
      "offset": [
        10768,
        10784
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10382": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10768,
        10784
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10383": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10738,
        10784
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10384": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10738,
        10784
      ],
      "op": "POP",
      "path": "37"
    },
    "10385": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10794,
        10817
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10387": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10834,
        10844
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10388": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10834,
        10851
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10389": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH8",
      "path": "37",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10398": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10399": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "GT",
      "path": "37"
    },
    "10400": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "10401": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x28AC"
    },
    "10404": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10405": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x28AC"
    },
    "10408": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5513"
    },
    "10411": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "i",
      "offset": [
        10820,
        10852
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10412": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10413": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10415": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10416": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10417": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10418": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10419": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10420": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10421": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10423": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "MUL",
      "path": "37"
    },
    "10424": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10426": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "ADD",
      "path": "37"
    },
    "10427": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10428": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "ADD",
      "path": "37"
    },
    "10429": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10431": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10432": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10433": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "10434": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x28D5"
    },
    "10437": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10438": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10439": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10441": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "ADD",
      "path": "37"
    },
    "10442": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10444": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10445": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "MUL",
      "path": "37"
    },
    "10446": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10447": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "10448": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "DUP4",
      "path": "37"
    },
    "10449": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "10450": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "ADD",
      "path": "37"
    },
    "10451": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10452": {
      "op": "POP"
    },
    "10453": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10454": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10820,
        10852
      ],
      "op": "POP",
      "path": "37"
    },
    "10455": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10794,
        10852
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10456": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10794,
        10852
      ],
      "op": "POP",
      "path": "37"
    },
    "10457": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10862,
        10886
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10459": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10903,
        10913
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10460": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10903,
        10920
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10461": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH8",
      "path": "37",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10470": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10471": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "GT",
      "path": "37"
    },
    "10472": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "10473": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x28F4"
    },
    "10476": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10477": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x28F4"
    },
    "10480": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5513"
    },
    "10483": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "i",
      "offset": [
        10889,
        10921
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10484": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10485": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10487": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10488": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10489": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10490": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10491": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10492": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10493": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10495": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "MUL",
      "path": "37"
    },
    "10496": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10498": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "ADD",
      "path": "37"
    },
    "10499": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10500": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "ADD",
      "path": "37"
    },
    "10501": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10503": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10504": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10505": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "10506": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x291D"
    },
    "10509": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10510": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10511": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10513": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "ADD",
      "path": "37"
    },
    "10514": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10516": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10517": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "MUL",
      "path": "37"
    },
    "10518": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10519": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "10520": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "DUP4",
      "path": "37"
    },
    "10521": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "10522": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "ADD",
      "path": "37"
    },
    "10523": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10524": {
      "op": "POP"
    },
    "10525": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10526": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10889,
        10921
      ],
      "op": "POP",
      "path": "37"
    },
    "10527": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10862,
        10921
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10528": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10862,
        10921
      ],
      "op": "POP",
      "path": "37"
    },
    "10529": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10936,
        10945
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10531": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10931,
        11084
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10532": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10955,
        10965
      ],
      "op": "DUP4",
      "path": "37"
    },
    "10533": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10955,
        10972
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10534": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10951,
        10952
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10535": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10951,
        10972
      ],
      "op": "LT",
      "path": "37"
    },
    "10536": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10931,
        11084
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "10537": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10931,
        11084
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x29E6"
    },
    "10540": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10931,
        11084
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10541": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11015
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 140
    },
    "10542": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11016,
        11017
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10543": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10544": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10545": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10546": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "LT",
      "path": "37"
    },
    "10547": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x293E"
    },
    "10550": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10551": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x293E"
    },
    "10554": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "10557": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "i",
      "offset": [
        11005,
        11018
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10558": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10559": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10561": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "MUL",
      "path": "37"
    },
    "10562": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10564": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "ADD",
      "path": "37"
    },
    "10565": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "ADD",
      "path": "37"
    },
    "10566": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11005,
        11018
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10567": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        10999
      ],
      "op": "DUP4",
      "path": "37"
    },
    "10568": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11000,
        11001
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10569": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10570": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10571": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10572": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "LT",
      "path": "37"
    },
    "10573": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2958"
    },
    "10576": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10577": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2958"
    },
    "10580": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "10583": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "i",
      "offset": [
        10993,
        11002
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10584": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10585": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10587": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "MUL",
      "path": "37"
    },
    "10588": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10590": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "ADD",
      "path": "37"
    },
    "10591": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11002
      ],
      "op": "ADD",
      "path": "37"
    },
    "10592": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11018
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10599": {
      "op": "SHL"
    },
    "10600": {
      "op": "SUB"
    },
    "10601": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11018
      ],
      "op": "AND",
      "path": "37"
    },
    "10602": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11018
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10603": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11018
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10610": {
      "op": "SHL"
    },
    "10611": {
      "op": "SUB"
    },
    "10612": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11018
      ],
      "op": "AND",
      "path": "37"
    },
    "10613": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11018
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10614": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11018
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10615": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11018
      ],
      "op": "POP",
      "path": "37"
    },
    "10616": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10993,
        11018
      ],
      "op": "POP",
      "path": "37"
    },
    "10617": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11058
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 141,
      "value": "0x5"
    },
    "10619": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10621": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11069
      ],
      "op": "DUP6",
      "path": "37"
    },
    "10622": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11070,
        11071
      ],
      "op": "DUP4",
      "path": "37"
    },
    "10623": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10624": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10625": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10626": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "LT",
      "path": "37"
    },
    "10627": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x298E"
    },
    "10630": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10631": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x298E"
    },
    "10634": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "10637": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "i",
      "offset": [
        11059,
        11072
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10638": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10639": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10641": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "MUL",
      "path": "37"
    },
    "10642": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10644": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "ADD",
      "path": "37"
    },
    "10645": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "ADD",
      "path": "37"
    },
    "10646": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11059,
        11072
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10653": {
      "op": "SHL"
    },
    "10654": {
      "op": "SUB"
    },
    "10655": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "AND",
      "path": "37"
    },
    "10656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10662": {
      "op": "SHL"
    },
    "10663": {
      "op": "SUB"
    },
    "10664": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "AND",
      "path": "37"
    },
    "10665": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10666": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10667": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10669": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "ADD",
      "path": "37"
    },
    "10670": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10671": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10672": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10673": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10675": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "ADD",
      "path": "37"
    },
    "10676": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10678": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "10679": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11045,
        11073
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "10680": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11039
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10681": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11040,
        11041
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10682": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10683": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10684": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10685": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "LT",
      "path": "37"
    },
    "10686": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x29C9"
    },
    "10689": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10690": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x29C9"
    },
    "10693": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "10696": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "i",
      "offset": [
        11032,
        11042
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10697": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10698": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10700": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10701": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10702": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "MUL",
      "path": "37"
    },
    "10703": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10704": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10705": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10706": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "ADD",
      "path": "37"
    },
    "10707": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11042
      ],
      "op": "ADD",
      "path": "37"
    },
    "10708": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11032,
        11073
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10709": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10974,
        10977
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 142
    },
    "10710": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10974,
        10977
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x29DE"
    },
    "10713": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10974,
        10977
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10714": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10974,
        10977
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x587B"
    },
    "10717": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "i",
      "offset": [
        10974,
        10977
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10718": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10974,
        10977
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10719": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10974,
        10977
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10720": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10974,
        10977
      ],
      "op": "POP",
      "path": "37"
    },
    "10721": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10974,
        10977
      ],
      "op": "POP",
      "path": "37"
    },
    "10722": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10931,
        11084
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2923"
    },
    "10725": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10931,
        11084
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10726": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10931,
        11084
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10727": {
      "op": "POP"
    },
    "10728": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11101,
        11107
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 143
    },
    "10729": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11101,
        11107
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "10730": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11109,
        11116
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10731": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        11109,
        11116
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "10732": {
      "op": "POP"
    },
    "10733": {
      "fn": "BPool.getCurrentOPCFees",
      "offset": [
        10614,
        11124
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10734": {
      "op": "POP"
    },
    "10735": {
      "op": "POP"
    },
    "10736": {
      "fn": "BPool.getCurrentOPCFees",
      "jump": "o",
      "offset": [
        10614,
        11124
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10737": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10738": {
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "10740": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2922,
        2928
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "10741": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23461,
        23483
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10743": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23461,
        23483
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10744": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23461,
        23483
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10745": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23461,
        23483
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10746": {
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "10748": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2922,
        2928
      ],
      "op": "AND",
      "path": "37"
    },
    "10749": {
      "offset": [
        2921,
        2928
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "10750": {
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2A19"
    },
    "10753": {
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10754": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10756": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10757": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10761": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10763": {
      "op": "SHL"
    },
    "10764": {
      "offset": [
        2913,
        2944
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10765": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10766": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "10768": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "ADD",
      "path": "37"
    },
    "10769": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "10772": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10773": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "10776": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10777": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10778": {
      "offset": [
        2954,
        2960
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "10780": {
      "offset": [
        2954,
        2967
      ],
      "op": "DUP1",
      "path": "37"
    },
    "10781": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2954,
        2967
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "10782": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10784": {
      "op": "NOT"
    },
    "10785": {
      "offset": [
        2954,
        2967
      ],
      "op": "AND",
      "path": "37"
    },
    "10786": {
      "offset": [
        2963,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "10788": {
      "offset": [
        2954,
        2967
      ],
      "op": "OR",
      "path": "37"
    },
    "10789": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2954,
        2967
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10790": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2954,
        2967
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "10791": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23527,
        23537
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 144,
      "value": "0xB"
    },
    "10793": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23527,
        23537
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10798": {
      "op": "SHL"
    },
    "10799": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23527,
        23537
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10800": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23527,
        23537
      ],
      "op": "DIV",
      "path": "37"
    },
    "10801": {
      "offset": [
        2954,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "10803": {
      "branch": 337,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23527,
        23537
      ],
      "op": "AND",
      "path": "37"
    },
    "10804": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2A4F"
    },
    "10807": {
      "branch": 337,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10808": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10810": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10811": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10815": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10817": {
      "op": "SHL"
    },
    "10818": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10819": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10820": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "10822": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "ADD",
      "path": "37"
    },
    "10823": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "10826": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10827": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x572D"
    },
    "10830": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        23519,
        23559
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10831": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23519,
        23559
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10832": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23600,
        23619
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 145,
      "value": "0x2A5F"
    },
    "10835": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23600,
        23619
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10837": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23600,
        23619
      ],
      "op": "DUP6",
      "path": "37"
    },
    "10838": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23600,
        23619
      ],
      "op": "ADD",
      "path": "37"
    },
    "10839": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23600,
        23619
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10841": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23600,
        23619
      ],
      "op": "DUP7",
      "path": "37"
    },
    "10842": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23600,
        23619
      ],
      "op": "ADD",
      "path": "37"
    },
    "10843": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23600,
        23619
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "10846": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        23600,
        23619
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10847": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23600,
        23619
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10854": {
      "op": "SHL"
    },
    "10855": {
      "op": "SUB"
    },
    "10856": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23619
      ],
      "op": "AND",
      "path": "37"
    },
    "10857": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23596
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2A75"
    },
    "10860": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23596
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10862": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23596
      ],
      "op": "DUP7",
      "path": "37"
    },
    "10863": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23596
      ],
      "op": "ADD",
      "path": "37"
    },
    "10864": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23593
      ],
      "op": "DUP7",
      "path": "37"
    },
    "10865": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23596
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "10868": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        23577,
        23596
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10869": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23596
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10876": {
      "op": "SHL"
    },
    "10877": {
      "op": "SUB"
    },
    "10878": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23619
      ],
      "op": "AND",
      "path": "37"
    },
    "10879": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23619
      ],
      "op": "EQ",
      "path": "37"
    },
    "10880": {
      "branch": 338,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23577,
        23619
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "10881": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2AC5"
    },
    "10884": {
      "branch": 338,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "10885": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "10887": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "10888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10894": {
      "op": "SHL"
    },
    "10895": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10896": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "10897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10899": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "10901": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "DUP3",
      "path": "37"
    },
    "10902": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "ADD",
      "path": "37"
    },
    "10903": {
      "op": "MSTORE"
    },
    "10904": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "10906": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10908": {
      "op": "DUP3"
    },
    "10909": {
      "op": "ADD"
    },
    "10910": {
      "op": "MSTORE"
    },
    "10911": {
      "op": "PUSH22",
      "value": "0x21B0B73737BA1039BBB0B81039B0B6B2903A37B5B2B7"
    },
    "10934": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "10936": {
      "op": "SHL"
    },
    "10937": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10939": {
      "op": "DUP3"
    },
    "10940": {
      "op": "ADD"
    },
    "10941": {
      "op": "MSTORE"
    },
    "10942": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10944": {
      "op": "ADD"
    },
    "10945": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "10948": {
      "op": "JUMP"
    },
    "10949": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23569,
        23646
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10950": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23656,
        23688
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 146,
      "value": "0x2AE4"
    },
    "10953": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23684
      ],
      "op": "DUP5",
      "path": "37"
    },
    "10954": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23685,
        23686
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10956": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10957": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10959": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "MUL",
      "path": "37"
    },
    "10960": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "ADD",
      "path": "37"
    },
    "10961": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "10963": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10964": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "ADD",
      "path": "37"
    },
    "10965": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10966": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2ADF"
    },
    "10969": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "10970": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "10971": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "10974": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        23668,
        23687
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10975": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23668,
        23687
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10976": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23656,
        23667
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "10979": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        23656,
        23688
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10980": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23656,
        23688
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10981": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23698,
        23730
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 147,
      "value": "0x2AEF"
    },
    "10984": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23710,
        23726
      ],
      "op": "DUP5",
      "path": "37"
    },
    "10985": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23727,
        23728
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "10987": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23710,
        23729
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2ACC"
    },
    "10990": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23710,
        23729
      ],
      "op": "JUMP",
      "path": "37"
    },
    "10991": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23698,
        23730
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "10992": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23740,
        23763
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "10994": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23774
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "10996": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23740,
        23763
      ],
      "op": "DUP2",
      "path": "37"
    },
    "10997": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23783,
        23802
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2B01"
    },
    "11000": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23783,
        23802
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11002": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23783,
        23802
      ],
      "op": "DUP9",
      "path": "37"
    },
    "11003": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23783,
        23802
      ],
      "op": "ADD",
      "path": "37"
    },
    "11004": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23783,
        23799
      ],
      "op": "DUP9",
      "path": "37"
    },
    "11005": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23783,
        23802
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "11008": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        23783,
        23802
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11009": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23783,
        23802
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11016": {
      "op": "SHL"
    },
    "11017": {
      "op": "SUB"
    },
    "11018": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "AND",
      "path": "37"
    },
    "11019": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11020": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11021": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11023": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11024": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "ADD",
      "path": "37"
    },
    "11025": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "11026": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11027": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "11028": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11029": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "11031": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "ADD",
      "path": "37"
    },
    "11032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11034": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11035": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11036": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "11037": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23766,
        23804
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "11038": {
      "op": "POP"
    },
    "11039": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23849
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "11041": {
      "op": "DUP2"
    },
    "11042": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23874
      ],
      "op": "DUP8",
      "path": "37"
    },
    "11043": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23875,
        23876
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "11045": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11047": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "MUL",
      "path": "37"
    },
    "11048": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "ADD",
      "path": "37"
    },
    "11049": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11051": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11052": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "ADD",
      "path": "37"
    },
    "11053": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11054": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2B37"
    },
    "11057": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "11058": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11059": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "11062": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        23858,
        23877
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11063": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23858,
        23877
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11070": {
      "op": "SHL"
    },
    "11071": {
      "op": "SUB"
    },
    "11072": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "AND",
      "path": "37"
    },
    "11073": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11074": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11075": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11077": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11078": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "ADD",
      "path": "37"
    },
    "11079": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "11080": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11081": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "11082": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11083": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "11085": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "ADD",
      "path": "37"
    },
    "11086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11088": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "11089": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23841,
        23879
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11090": {
      "op": "POP"
    },
    "11091": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23897,
        23918
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 148,
      "value": "0x60"
    },
    "11093": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23897,
        23918
      ],
      "op": "DUP6",
      "path": "37"
    },
    "11094": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23897,
        23918
      ],
      "op": "ADD",
      "path": "37"
    },
    "11095": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23897,
        23918
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "11096": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23897,
        23922
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "11097": {
      "branch": 339,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23897,
        23922
      ],
      "op": "DUP1",
      "path": "37"
    },
    "11098": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23897,
        23958
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2B7A"
    },
    "11101": {
      "branch": 339,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23897,
        23958
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "11102": {
      "op": "POP"
    },
    "11103": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2B72"
    },
    "11106": {
      "offset": [
        1058,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2710"
    },
    "11109": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "11118": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "11121": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMP",
      "path": "33"
    },
    "11122": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "11123": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23926,
        23947
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "11125": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23926,
        23947
      ],
      "op": "DUP7",
      "path": "37"
    },
    "11126": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23926,
        23947
      ],
      "op": "ADD",
      "path": "37"
    },
    "11127": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23926,
        23947
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "11128": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23926,
        23958
      ],
      "op": "LT",
      "path": "37"
    },
    "11129": {
      "branch": 340,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23926,
        23958
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "11130": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23897,
        23958
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11131": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2BBF"
    },
    "11134": {
      "branch": 340,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "11135": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "11137": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11144": {
      "op": "SHL"
    },
    "11145": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11146": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11149": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "11151": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "DUP3",
      "path": "37"
    },
    "11152": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "ADD",
      "path": "37"
    },
    "11153": {
      "op": "MSTORE"
    },
    "11154": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "11156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11158": {
      "op": "DUP3"
    },
    "11159": {
      "op": "ADD"
    },
    "11160": {
      "op": "MSTORE"
    },
    "11161": {
      "op": "PUSH22",
      "value": "0x436F6E73756D655377617046656520746F6F206C6F77"
    },
    "11184": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "11186": {
      "op": "SHL"
    },
    "11187": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11189": {
      "op": "DUP3"
    },
    "11190": {
      "op": "ADD"
    },
    "11191": {
      "op": "MSTORE"
    },
    "11192": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11194": {
      "op": "ADD"
    },
    "11195": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "11198": {
      "op": "JUMP"
    },
    "11199": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23889,
        23984
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11200": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2BD2"
    },
    "11203": {
      "offset": [
        1115,
        1117
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xA"
    },
    "11205": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "11214": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "11217": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMP",
      "path": "33"
    },
    "11218": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "11219": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24002,
        24023
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 149,
      "value": "0x60"
    },
    "11221": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24002,
        24023
      ],
      "op": "DUP7",
      "path": "37"
    },
    "11222": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24002,
        24023
      ],
      "op": "ADD",
      "path": "37"
    },
    "11223": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24002,
        24023
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "11224": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24002,
        24034
      ],
      "op": "GT",
      "path": "37"
    },
    "11225": {
      "branch": 341,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24002,
        24034
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "11226": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2C1F"
    },
    "11229": {
      "branch": 341,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "11230": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "11232": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11239": {
      "op": "SHL"
    },
    "11240": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11241": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11244": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "11246": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "DUP3",
      "path": "37"
    },
    "11247": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "ADD",
      "path": "37"
    },
    "11248": {
      "op": "MSTORE"
    },
    "11249": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "11251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11253": {
      "op": "DUP3"
    },
    "11254": {
      "op": "ADD"
    },
    "11255": {
      "op": "MSTORE"
    },
    "11256": {
      "op": "PUSH23",
      "value": "0x86DEDCE6EADACAA6EEC2E08CCACA40E8DEDE40D0D2CED"
    },
    "11280": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "11282": {
      "op": "SHL"
    },
    "11283": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11285": {
      "op": "DUP3"
    },
    "11286": {
      "op": "ADD"
    },
    "11287": {
      "op": "MSTORE"
    },
    "11288": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11290": {
      "op": "ADD"
    },
    "11291": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "11294": {
      "op": "JUMP"
    },
    "11295": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23994,
        24061
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11296": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24122,
        24138
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 150,
      "value": "0x3"
    },
    "11298": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24122,
        24138
      ],
      "op": "DUP3",
      "path": "37"
    },
    "11299": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24122,
        24138
      ],
      "op": "ADD",
      "path": "37"
    },
    "11300": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24122,
        24138
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11301": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24117,
        24153
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2C3B"
    },
    "11304": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24117,
        24153
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11305": {
      "offset": [
        1669,
        1677
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xDA9"
    },
    "11308": {
      "offset": [
        1676,
        1677
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "11310": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "11319": {
      "offset": [
        1669,
        1677
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "11322": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        1669,
        1677
      ],
      "op": "JUMP",
      "path": "33"
    },
    "11323": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24117,
        24153
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11324": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24092,
        24113
      ],
      "op": "DUP6",
      "path": "37"
    },
    "11325": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24092,
        24113
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "11326": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24092,
        24153
      ],
      "op": "GT",
      "path": "37"
    },
    "11327": {
      "branch": 342,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24092,
        24153
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "11328": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2C7E"
    },
    "11331": {
      "branch": 342,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "11332": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "11334": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11341": {
      "op": "SHL"
    },
    "11342": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11343": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11346": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "11348": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "DUP3",
      "path": "37"
    },
    "11349": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "ADD",
      "path": "37"
    },
    "11350": {
      "op": "MSTORE"
    },
    "11351": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "11353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11355": {
      "op": "DUP3"
    },
    "11356": {
      "op": "ADD"
    },
    "11357": {
      "op": "MSTORE"
    },
    "11358": {
      "op": "PUSH16",
      "value": "0x4552525F4D41585F494E5F524154494F"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11377": {
      "op": "SHL"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11380": {
      "op": "DUP3"
    },
    "11381": {
      "op": "ADD"
    },
    "11382": {
      "op": "MSTORE"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11385": {
      "op": "ADD"
    },
    "11386": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "11389": {
      "op": "JUMP"
    },
    "11390": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24071,
        24195
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11391": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24206,
        24229
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11393": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24232,
        24410
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CB4"
    },
    "11396": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24259,
        24267
      ],
      "op": "DUP4",
      "path": "37"
    },
    "11397": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24259,
        24275
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "11399": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24259,
        24275
      ],
      "op": "ADD",
      "path": "37"
    },
    "11400": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24259,
        24275
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11401": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24289,
        24297
      ],
      "op": "DUP5",
      "path": "37"
    },
    "11402": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24289,
        24304
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "11404": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24289,
        24304
      ],
      "op": "ADD",
      "path": "37"
    },
    "11405": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24289,
        24304
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11406": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24318,
        24327
      ],
      "op": "DUP5",
      "path": "37"
    },
    "11407": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24318,
        24335
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "11409": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24318,
        24335
      ],
      "op": "ADD",
      "path": "37"
    },
    "11410": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24318,
        24335
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11411": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24349,
        24358
      ],
      "op": "DUP6",
      "path": "37"
    },
    "11412": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24349,
        24365
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "11414": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24349,
        24365
      ],
      "op": "ADD",
      "path": "37"
    },
    "11415": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24349,
        24365
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11416": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24397
      ],
      "op": "DUP11",
      "path": "37"
    },
    "11417": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24398,
        24399
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "11419": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "11421": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11422": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "LT",
      "path": "37"
    },
    "11423": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CAA"
    },
    "11426": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "11427": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CAA"
    },
    "11430": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "11433": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        24379,
        24400
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11434": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11435": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11437": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "MUL",
      "path": "37"
    },
    "11438": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "ADD",
      "path": "37"
    },
    "11439": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24379,
        24400
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "11440": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24232,
        24245
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3D04"
    },
    "11443": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        24232,
        24410
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11444": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24232,
        24410
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11445": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24206,
        24410
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11446": {
      "op": "POP"
    },
    "11447": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24461,
        24482
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 151,
      "value": "0x40"
    },
    "11449": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24461,
        24482
      ],
      "op": "DUP7",
      "path": "37"
    },
    "11450": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24461,
        24482
      ],
      "op": "ADD",
      "path": "37"
    },
    "11451": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24461,
        24482
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "11452": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24442,
        24482
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11453": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24442,
        24482
      ],
      "op": "GT",
      "path": "37"
    },
    "11454": {
      "branch": 343,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24442,
        24482
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "11455": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2D00"
    },
    "11458": {
      "branch": 343,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "11459": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "11461": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11462": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11466": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11468": {
      "op": "SHL"
    },
    "11469": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11470": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11473": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "11475": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "DUP3",
      "path": "37"
    },
    "11476": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "ADD",
      "path": "37"
    },
    "11477": {
      "op": "MSTORE"
    },
    "11478": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "11480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11482": {
      "op": "DUP3"
    },
    "11483": {
      "op": "ADD"
    },
    "11484": {
      "op": "MSTORE"
    },
    "11485": {
      "op": "PUSH19",
      "value": "0x4552525F4241445F4C494D49545F5052494345"
    },
    "11505": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "11507": {
      "op": "SHL"
    },
    "11508": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11510": {
      "op": "DUP3"
    },
    "11511": {
      "op": "ADD"
    },
    "11512": {
      "op": "MSTORE"
    },
    "11513": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11515": {
      "op": "ADD"
    },
    "11516": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "11519": {
      "op": "JUMP"
    },
    "11520": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24421,
        24527
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11521": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24537,
        24559
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11523": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24591
      ],
      "op": "DUP1",
      "path": "37"
    },
    "11524": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "11526": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11527": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "DUP1",
      "path": "37"
    },
    "11528": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "11530": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "ADD",
      "path": "37"
    },
    "11531": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "11533": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11534": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "DUP1",
      "path": "37"
    },
    "11535": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24608,
        24616
      ],
      "op": "DUP7",
      "path": "37"
    },
    "11536": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24608,
        24624
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "11538": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24608,
        24624
      ],
      "op": "ADD",
      "path": "37"
    },
    "11539": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24608,
        24624
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11540": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11541": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11542": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11544": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "ADD",
      "path": "37"
    },
    "11545": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24638,
        24646
      ],
      "op": "DUP7",
      "path": "37"
    },
    "11546": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24638,
        24653
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "11548": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24638,
        24653
      ],
      "op": "ADD",
      "path": "37"
    },
    "11549": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24638,
        24653
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11550": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11551": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11552": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11554": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "ADD",
      "path": "37"
    },
    "11555": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24667,
        24676
      ],
      "op": "DUP6",
      "path": "37"
    },
    "11556": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24667,
        24684
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "11558": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24667,
        24684
      ],
      "op": "ADD",
      "path": "37"
    },
    "11559": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24667,
        24684
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11560": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11561": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11562": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11564": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "ADD",
      "path": "37"
    },
    "11565": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24698,
        24707
      ],
      "op": "DUP6",
      "path": "37"
    },
    "11566": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24698,
        24714
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "11568": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24698,
        24714
      ],
      "op": "ADD",
      "path": "37"
    },
    "11569": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24698,
        24714
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11570": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11571": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11572": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "POP",
      "path": "37"
    },
    "11573": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11574": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24569,
        24724
      ],
      "op": "POP",
      "path": "37"
    },
    "11575": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24734,
        24759
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2D61"
    },
    "11578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11580": {
      "op": "MLOAD"
    },
    "11581": {
      "op": "DUP1"
    },
    "11582": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11584": {
      "op": "ADD"
    },
    "11585": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11587": {
      "op": "MSTORE"
    },
    "11588": {
      "op": "DUP1"
    },
    "11589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11591": {
      "op": "DUP2"
    },
    "11592": {
      "op": "MSTORE"
    },
    "11593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11595": {
      "op": "ADD"
    },
    "11596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11598": {
      "op": "DUP2"
    },
    "11599": {
      "op": "MSTORE"
    },
    "11600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11602": {
      "op": "ADD"
    },
    "11603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11605": {
      "op": "DUP2"
    },
    "11606": {
      "op": "MSTORE"
    },
    "11607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11609": {
      "op": "ADD"
    },
    "11610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11612": {
      "op": "DUP2"
    },
    "11613": {
      "op": "MSTORE"
    },
    "11614": {
      "op": "POP"
    },
    "11615": {
      "op": "SWAP1"
    },
    "11616": {
      "op": "JUMP"
    },
    "11617": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24734,
        24759
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11618": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24815,
        24962
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 152,
      "value": "0x2D71"
    },
    "11621": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24843,
        24847
      ],
      "op": "DUP3",
      "path": "37"
    },
    "11622": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24861,
        24882
      ],
      "op": "DUP11",
      "path": "37"
    },
    "11623": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24861,
        24882
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "11624": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24931,
        24952
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "11626": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24931,
        24952
      ],
      "op": "DUP13",
      "path": "37"
    },
    "11627": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24931,
        24952
      ],
      "op": "ADD",
      "path": "37"
    },
    "11628": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24931,
        24952
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "11629": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24815,
        24829
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x21B2"
    },
    "11632": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        24815,
        24962
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11633": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24815,
        24962
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11634": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24769,
        24962
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "11635": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24769,
        24962
      ],
      "op": "SWAP10",
      "path": "37"
    },
    "11636": {
      "op": "POP"
    },
    "11637": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24769,
        24962
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "11638": {
      "op": "POP"
    },
    "11639": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24769,
        24962
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11640": {
      "op": "POP"
    },
    "11641": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25036,
        25101
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 153,
      "value": "0x2DC0"
    },
    "11644": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25054
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "11646": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11648": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25071
      ],
      "op": "DUP13",
      "path": "37"
    },
    "11649": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11650": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11651": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11653": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "MUL",
      "path": "37"
    },
    "11654": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "ADD",
      "path": "37"
    },
    "11655": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11657": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11658": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "ADD",
      "path": "37"
    },
    "11659": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11660": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2D95"
    },
    "11663": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "11664": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11665": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "11668": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25055,
        25074
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11669": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25055,
        25074
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11676": {
      "op": "SHL"
    },
    "11677": {
      "op": "SUB"
    },
    "11678": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "AND",
      "path": "37"
    },
    "11679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11685": {
      "op": "SHL"
    },
    "11686": {
      "op": "SUB"
    },
    "11687": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "AND",
      "path": "37"
    },
    "11688": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11689": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11690": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11692": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "ADD",
      "path": "37"
    },
    "11693": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11694": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11695": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11696": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11698": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "ADD",
      "path": "37"
    },
    "11699": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11701": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "11702": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25041,
        25075
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11703": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25076,
        25085
      ],
      "op": "DUP3",
      "path": "37"
    },
    "11704": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25076,
        25100
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11706": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25076,
        25100
      ],
      "op": "ADD",
      "path": "37"
    },
    "11707": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25076,
        25100
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11708": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25036,
        25040
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x480B"
    },
    "11711": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25036,
        25101
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11712": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25036,
        25101
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11713": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25012
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "11715": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11717": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25013,
        25032
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2DD1"
    },
    "11720": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25013,
        25032
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11722": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25013,
        25032
      ],
      "op": "DUP15",
      "path": "37"
    },
    "11723": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25013,
        25032
      ],
      "op": "ADD",
      "path": "37"
    },
    "11724": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25013,
        25029
      ],
      "op": "DUP15",
      "path": "37"
    },
    "11725": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25013,
        25032
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "11728": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25013,
        25032
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11729": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25013,
        25032
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11736": {
      "op": "SHL"
    },
    "11737": {
      "op": "SUB"
    },
    "11738": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "AND",
      "path": "37"
    },
    "11739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11745": {
      "op": "SHL"
    },
    "11746": {
      "op": "SUB"
    },
    "11747": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "AND",
      "path": "37"
    },
    "11748": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11749": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11750": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11752": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "ADD",
      "path": "37"
    },
    "11753": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11754": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11755": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11756": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11758": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "ADD",
      "path": "37"
    },
    "11759": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11761": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25033
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "11762": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25101
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11763": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25101
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11764": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25101
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "11765": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        24999,
        25101
      ],
      "op": "POP",
      "path": "37"
    },
    "11766": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25161,
        25238
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 154,
      "value": "0x2E4D"
    },
    "11769": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25183
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "11771": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11773": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25200
      ],
      "op": "DUP13",
      "path": "37"
    },
    "11774": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25201,
        25202
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11776": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "11778": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11779": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "LT",
      "path": "37"
    },
    "11780": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2E0F"
    },
    "11783": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "11784": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2E0F"
    },
    "11787": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "11790": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25184,
        25203
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11791": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11792": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11794": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "MUL",
      "path": "37"
    },
    "11795": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "ADD",
      "path": "37"
    },
    "11796": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11798": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11799": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "ADD",
      "path": "37"
    },
    "11800": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11801": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2E22"
    },
    "11804": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "11805": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11806": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "11809": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25184,
        25203
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11810": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25184,
        25203
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11817": {
      "op": "SHL"
    },
    "11818": {
      "op": "SUB"
    },
    "11819": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "AND",
      "path": "37"
    },
    "11820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11826": {
      "op": "SHL"
    },
    "11827": {
      "op": "SUB"
    },
    "11828": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "AND",
      "path": "37"
    },
    "11829": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11830": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11831": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11833": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "ADD",
      "path": "37"
    },
    "11834": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11835": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11836": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11837": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11839": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "ADD",
      "path": "37"
    },
    "11840": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11842": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "11843": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25166,
        25204
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "11844": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25205,
        25214
      ],
      "op": "DUP3",
      "path": "37"
    },
    "11845": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25205,
        25237
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "11847": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25205,
        25237
      ],
      "op": "ADD",
      "path": "37"
    },
    "11848": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25205,
        25237
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11849": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25161,
        25165
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x480B"
    },
    "11852": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25161,
        25238
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11853": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25161,
        25238
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11854": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25128
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "11856": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11858": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25129,
        25148
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2E5E"
    },
    "11861": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25129,
        25148
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11863": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25129,
        25148
      ],
      "op": "DUP15",
      "path": "37"
    },
    "11864": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25129,
        25148
      ],
      "op": "ADD",
      "path": "37"
    },
    "11865": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25129,
        25145
      ],
      "op": "DUP15",
      "path": "37"
    },
    "11866": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25129,
        25148
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "11869": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25129,
        25148
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11870": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25129,
        25148
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11877": {
      "op": "SHL"
    },
    "11878": {
      "op": "SUB"
    },
    "11879": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "AND",
      "path": "37"
    },
    "11880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11886": {
      "op": "SHL"
    },
    "11887": {
      "op": "SUB"
    },
    "11888": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "AND",
      "path": "37"
    },
    "11889": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11890": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11891": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11893": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "ADD",
      "path": "37"
    },
    "11894": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11895": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11896": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "11897": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11899": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "ADD",
      "path": "37"
    },
    "11900": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11902": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25149
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "11903": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25238
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11904": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25238
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11905": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25238
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "11906": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25111,
        25238
      ],
      "op": "POP",
      "path": "37"
    },
    "11907": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "PUSH32",
      "path": "37",
      "statement": 155,
      "value": "0x53A9DC73D01196A9C660D761BC5EC77B945340A34B5B52E510760AF2DAB1C0F1"
    },
    "11940": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25263,
        25272
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11941": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25263,
        25278
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11943": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25263,
        25278
      ],
      "op": "ADD",
      "path": "37"
    },
    "11944": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25263,
        25278
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11945": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25280,
        25289
      ],
      "op": "DUP3",
      "path": "37"
    },
    "11946": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25280,
        25304
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11948": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25280,
        25304
      ],
      "op": "ADD",
      "path": "37"
    },
    "11949": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25280,
        25304
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11950": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25314,
        25323
      ],
      "op": "DUP4",
      "path": "37"
    },
    "11951": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25314,
        25346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "11953": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25314,
        25346
      ],
      "op": "ADD",
      "path": "37"
    },
    "11954": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25314,
        25346
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11955": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25347,
        25356
      ],
      "op": "DUP5",
      "path": "37"
    },
    "11956": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25347,
        25373
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "11958": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25347,
        25373
      ],
      "op": "ADD",
      "path": "37"
    },
    "11959": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25347,
        25373
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "11960": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25391
      ],
      "op": "DUP15",
      "path": "37"
    },
    "11961": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25392,
        25393
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "11963": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "11965": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11966": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "LT",
      "path": "37"
    },
    "11967": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2ECA"
    },
    "11970": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "11971": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2ECA"
    },
    "11974": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "11977": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25375,
        25394
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11978": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11979": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11981": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "MUL",
      "path": "37"
    },
    "11982": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "ADD",
      "path": "37"
    },
    "11983": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "11985": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "DUP2",
      "path": "37"
    },
    "11986": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "ADD",
      "path": "37"
    },
    "11987": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11988": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2EDD"
    },
    "11991": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "11992": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "11993": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "11996": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25375,
        25394
      ],
      "op": "JUMP",
      "path": "37"
    },
    "11997": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25375,
        25394
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "11998": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12000": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12001": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12002": {
      "op": "SWAP6"
    },
    "12003": {
      "op": "DUP7"
    },
    "12004": {
      "op": "MSTORE"
    },
    "12005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12007": {
      "op": "DUP7"
    },
    "12008": {
      "op": "ADD"
    },
    "12009": {
      "op": "SWAP5"
    },
    "12010": {
      "op": "SWAP1"
    },
    "12011": {
      "op": "SWAP5"
    },
    "12012": {
      "op": "MSTORE"
    },
    "12013": {
      "op": "SWAP3"
    },
    "12014": {
      "op": "DUP5"
    },
    "12015": {
      "op": "ADD"
    },
    "12016": {
      "op": "SWAP2"
    },
    "12017": {
      "op": "SWAP1"
    },
    "12018": {
      "op": "SWAP2"
    },
    "12019": {
      "op": "MSTORE"
    },
    "12020": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12022": {
      "op": "DUP4"
    },
    "12023": {
      "op": "ADD"
    },
    "12024": {
      "op": "MSTORE"
    },
    "12025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12031": {
      "op": "SHL"
    },
    "12032": {
      "op": "SUB"
    },
    "12033": {
      "op": "AND"
    },
    "12034": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12036": {
      "op": "DUP3"
    },
    "12037": {
      "op": "ADD"
    },
    "12038": {
      "op": "MSTORE"
    },
    "12039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12041": {
      "op": "ADD"
    },
    "12042": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12044": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12045": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12046": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "12047": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "SUB",
      "path": "37"
    },
    "12048": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12049": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25253,
        25395
      ],
      "op": "LOG1",
      "path": "37"
    },
    "12050": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25431,
        25452
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 156,
      "value": "0x20"
    },
    "12052": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25431,
        25452
      ],
      "op": "DUP10",
      "path": "37"
    },
    "12053": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25431,
        25452
      ],
      "op": "ADD",
      "path": "37"
    },
    "12054": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25431,
        25452
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "12055": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25413,
        25452
      ],
      "op": "DUP9",
      "path": "37"
    },
    "12056": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25413,
        25452
      ],
      "op": "LT",
      "path": "37"
    },
    "12057": {
      "branch": 344,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25413,
        25452
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "12058": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2F35"
    },
    "12061": {
      "branch": 344,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12062": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12064": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12065": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12069": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12071": {
      "op": "SHL"
    },
    "12072": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12073": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "12074": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "12076": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "ADD",
      "path": "37"
    },
    "12077": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "12080": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12081": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5758"
    },
    "12084": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25405,
        25470
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12085": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25405,
        25470
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12086": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25500,
        25538
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 157,
      "value": "0x2F43"
    },
    "12089": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25505,
        25513
      ],
      "op": "DUP7",
      "path": "37"
    },
    "12090": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25505,
        25521
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "12092": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25505,
        25521
      ],
      "op": "ADD",
      "path": "37"
    },
    "12093": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25505,
        25521
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "12094": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25523,
        25537
      ],
      "op": "DUP5",
      "path": "37"
    },
    "12095": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25500,
        25504
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x480B"
    },
    "12098": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25500,
        25538
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12099": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25500,
        25538
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12100": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25481,
        25489
      ],
      "op": "DUP7",
      "path": "37"
    },
    "12101": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25481,
        25497
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "12103": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25481,
        25497
      ],
      "op": "ADD",
      "path": "37"
    },
    "12104": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25481,
        25538
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12105": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25481,
        25538
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12106": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25481,
        25538
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "12107": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25481,
        25538
      ],
      "op": "POP",
      "path": "37"
    },
    "12108": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25568,
        25607
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 158,
      "value": "0x2F59"
    },
    "12111": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25573,
        25582
      ],
      "op": "DUP6",
      "path": "37"
    },
    "12112": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25573,
        25590
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "12114": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25573,
        25590
      ],
      "op": "ADD",
      "path": "37"
    },
    "12115": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25573,
        25590
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "12116": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25592,
        25606
      ],
      "op": "DUP10",
      "path": "37"
    },
    "12117": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25568,
        25572
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x416C"
    },
    "12120": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25568,
        25607
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12121": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25568,
        25607
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12122": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25548,
        25557
      ],
      "op": "DUP6",
      "path": "37"
    },
    "12123": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25548,
        25565
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "12125": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25548,
        25565
      ],
      "op": "ADD",
      "path": "37"
    },
    "12126": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25548,
        25607
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12127": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25548,
        25607
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12128": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25548,
        25607
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "12129": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25548,
        25607
      ],
      "op": "POP",
      "path": "37"
    },
    "12130": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25635,
        25813
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 159,
      "value": "0x2F8B"
    },
    "12133": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25662,
        25670
      ],
      "op": "DUP7",
      "path": "37"
    },
    "12134": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25662,
        25678
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "12136": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25662,
        25678
      ],
      "op": "ADD",
      "path": "37"
    },
    "12137": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25662,
        25678
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "12138": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25692,
        25700
      ],
      "op": "DUP8",
      "path": "37"
    },
    "12139": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25692,
        25707
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "12141": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25692,
        25707
      ],
      "op": "ADD",
      "path": "37"
    },
    "12142": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25692,
        25707
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "12143": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25721,
        25730
      ],
      "op": "DUP8",
      "path": "37"
    },
    "12144": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25721,
        25738
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "12146": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25721,
        25738
      ],
      "op": "ADD",
      "path": "37"
    },
    "12147": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25721,
        25738
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "12148": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25752,
        25761
      ],
      "op": "DUP9",
      "path": "37"
    },
    "12149": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25752,
        25768
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "12151": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25752,
        25768
      ],
      "op": "ADD",
      "path": "37"
    },
    "12152": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25752,
        25768
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "12153": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25782,
        25800
      ],
      "op": "DUP14",
      "path": "37"
    },
    "12154": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25801,
        25802
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "12156": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25782,
        25803
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "12158": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25782,
        25803
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12159": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25782,
        25803
      ],
      "op": "LT",
      "path": "37"
    },
    "12160": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25782,
        25803
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CAA"
    },
    "12163": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25782,
        25803
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12164": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25782,
        25803
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CAA"
    },
    "12167": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25782,
        25803
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "12170": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25782,
        25803
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12171": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25635,
        25813
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12172": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25618,
        25813
      ],
      "op": "SWAP7",
      "path": "37"
    },
    "12173": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25618,
        25813
      ],
      "op": "POP",
      "path": "37"
    },
    "12174": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25850,
        25865
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 160
    },
    "12175": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25832,
        25846
      ],
      "op": "DUP8",
      "path": "37"
    },
    "12176": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25832,
        25865
      ],
      "op": "LT",
      "path": "37"
    },
    "12177": {
      "branch": 345,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25832,
        25865
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "12178": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2FAD"
    },
    "12181": {
      "branch": 345,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12182": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12184": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12185": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12189": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12191": {
      "op": "SHL"
    },
    "12192": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12193": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "12194": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "12196": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "ADD",
      "path": "37"
    },
    "12197": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "12200": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12201": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x58CA"
    },
    "12204": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25824,
        25885
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12205": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25824,
        25885
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12206": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25921,
        25942
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 161,
      "value": "0x40"
    },
    "12208": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25921,
        25942
      ],
      "op": "DUP10",
      "path": "37"
    },
    "12209": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25921,
        25942
      ],
      "op": "ADD",
      "path": "37"
    },
    "12210": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25921,
        25942
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "12211": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25903,
        25942
      ],
      "op": "DUP8",
      "path": "37"
    },
    "12212": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25903,
        25942
      ],
      "op": "GT",
      "path": "37"
    },
    "12213": {
      "branch": 346,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25903,
        25942
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "12214": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2FF3"
    },
    "12217": {
      "branch": 346,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12218": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12220": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12221": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12225": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12227": {
      "op": "SHL"
    },
    "12228": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12229": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "12230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12232": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "12234": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "DUP3",
      "path": "37"
    },
    "12235": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "ADD",
      "path": "37"
    },
    "12236": {
      "op": "MSTORE"
    },
    "12237": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "12239": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12241": {
      "op": "DUP3"
    },
    "12242": {
      "op": "ADD"
    },
    "12243": {
      "op": "MSTORE"
    },
    "12244": {
      "op": "PUSH15",
      "value": "0x4552525F4C494D49545F5052494345"
    },
    "12260": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "12262": {
      "op": "SHL"
    },
    "12263": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12265": {
      "op": "DUP3"
    },
    "12266": {
      "op": "ADD"
    },
    "12267": {
      "op": "MSTORE"
    },
    "12268": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12270": {
      "op": "ADD"
    },
    "12271": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "12274": {
      "op": "JUMP"
    },
    "12275": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25895,
        25962
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12276": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26013,
        26056
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 162,
      "value": "0x2FFE"
    },
    "12279": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26018,
        26039
      ],
      "op": "DUP10",
      "path": "37"
    },
    "12280": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26018,
        26039
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "12281": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26041,
        26055
      ],
      "op": "DUP10",
      "path": "37"
    },
    "12282": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26013,
        26017
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4564"
    },
    "12285": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26013,
        26056
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12286": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26013,
        26056
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12287": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25994,
        26009
      ],
      "op": "DUP5",
      "path": "37"
    },
    "12288": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25994,
        26056
      ],
      "op": "GT",
      "path": "37"
    },
    "12289": {
      "branch": 347,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25994,
        26056
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "12290": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x301D"
    },
    "12293": {
      "branch": 347,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12294": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12296": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12297": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12301": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12303": {
      "op": "SHL"
    },
    "12304": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12305": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "12306": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "12308": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "ADD",
      "path": "37"
    },
    "12309": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "12312": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12313": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x58CA"
    },
    "12316": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        25973,
        26097
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12317": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        25973,
        26097
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12318": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26192,
        26211
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 163,
      "value": "0x302D"
    },
    "12321": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26192,
        26211
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12323": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26192,
        26211
      ],
      "op": "DUP12",
      "path": "37"
    },
    "12324": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26192,
        26211
      ],
      "op": "ADD",
      "path": "37"
    },
    "12325": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26192,
        26211
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12327": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26192,
        26211
      ],
      "op": "DUP13",
      "path": "37"
    },
    "12328": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26192,
        26211
      ],
      "op": "ADD",
      "path": "37"
    },
    "12329": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26192,
        26211
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "12332": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26192,
        26211
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12333": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26192,
        26211
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12340": {
      "op": "SHL"
    },
    "12341": {
      "op": "SUB"
    },
    "12342": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "AND",
      "path": "37"
    },
    "12343": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26159,
        26178
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3043"
    },
    "12346": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26159,
        26178
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12348": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26159,
        26178
      ],
      "op": "DUP13",
      "path": "37"
    },
    "12349": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26159,
        26178
      ],
      "op": "ADD",
      "path": "37"
    },
    "12350": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26159,
        26175
      ],
      "op": "DUP13",
      "path": "37"
    },
    "12351": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26159,
        26178
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "12354": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26159,
        26178
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12355": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26159,
        26178
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12356": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26317,
        26333
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "12358": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26317,
        26333
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12359": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26317,
        26333
      ],
      "op": "DUP10",
      "path": "37"
    },
    "12360": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26317,
        26333
      ],
      "op": "ADD",
      "path": "37"
    },
    "12361": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26317,
        26333
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "12362": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26347,
        26364
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12363": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26347,
        26364
      ],
      "op": "DUP9",
      "path": "37"
    },
    "12364": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26347,
        26364
      ],
      "op": "ADD",
      "path": "37"
    },
    "12365": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26347,
        26364
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "12366": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12368": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12369": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12370": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26225,
        26246
      ],
      "op": "DUP15",
      "path": "37"
    },
    "12371": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26225,
        26246
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "12372": {
      "op": "DUP2"
    },
    "12373": {
      "op": "MSTORE"
    },
    "12374": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26225,
        26246
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12376": {
      "op": "DUP2"
    },
    "12377": {
      "op": "ADD"
    },
    "12378": {
      "op": "DUP15"
    },
    "12379": {
      "op": "SWAP1"
    },
    "12380": {
      "op": "MSTORE"
    },
    "12381": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26288,
        26303
      ],
      "op": "TIMESTAMP",
      "path": "37"
    },
    "12382": {
      "op": "SWAP2"
    },
    "12383": {
      "op": "DUP2"
    },
    "12384": {
      "op": "ADD"
    },
    "12385": {
      "op": "SWAP2"
    },
    "12386": {
      "op": "SWAP1"
    },
    "12387": {
      "op": "SWAP2"
    },
    "12388": {
      "op": "MSTORE"
    },
    "12389": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12391": {
      "op": "DUP2"
    },
    "12392": {
      "op": "ADD"
    },
    "12393": {
      "op": "SWAP3"
    },
    "12394": {
      "op": "SWAP1"
    },
    "12395": {
      "op": "SWAP3"
    },
    "12396": {
      "op": "MSTORE"
    },
    "12397": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12399": {
      "op": "DUP3"
    },
    "12400": {
      "op": "ADD"
    },
    "12401": {
      "op": "MSTORE"
    },
    "12402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12404": {
      "op": "DUP2"
    },
    "12405": {
      "op": "ADD"
    },
    "12406": {
      "op": "DUP11"
    },
    "12407": {
      "op": "SWAP1"
    },
    "12408": {
      "op": "MSTORE"
    },
    "12409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12415": {
      "op": "SHL"
    },
    "12416": {
      "op": "SUB"
    },
    "12417": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "12418": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12419": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "12420": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "AND",
      "path": "37"
    },
    "12421": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12422": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26135,
        26145
      ],
      "op": "CALLER",
      "path": "37"
    },
    "12423": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26135,
        26145
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12424": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xBDAFE88494B31FC7436FE7992B0F377E874287E841E62EED1AD77E84F3C5B171"
    },
    "12457": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12458": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12460": {
      "op": "ADD"
    },
    "12461": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12463": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12464": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12465": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "12466": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "SUB",
      "path": "37"
    },
    "12467": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12468": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26113,
        26403
      ],
      "op": "LOG4",
      "path": "37"
    },
    "12469": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26414,
        26485
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 164,
      "value": "0x30CC"
    },
    "12472": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26430,
        26449
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x30C4"
    },
    "12475": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26430,
        26449
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12477": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26430,
        26449
      ],
      "op": "DUP13",
      "path": "37"
    },
    "12478": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26430,
        26449
      ],
      "op": "ADD",
      "path": "37"
    },
    "12479": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26430,
        26446
      ],
      "op": "DUP13",
      "path": "37"
    },
    "12480": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26430,
        26449
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "12483": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26430,
        26449
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12484": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26430,
        26449
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12485": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26451,
        26461
      ],
      "op": "CALLER",
      "path": "37"
    },
    "12486": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26463,
        26484
      ],
      "op": "DUP12",
      "path": "37"
    },
    "12487": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26463,
        26484
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "12488": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26414,
        26429
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x490D"
    },
    "12491": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26414,
        26485
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12492": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26414,
        26485
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12493": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26495,
        26525
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "12495": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26528,
        26653
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x30F1"
    },
    "12498": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26546,
        26567
      ],
      "op": "DUP11",
      "path": "37"
    },
    "12499": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26546,
        26567
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "12500": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26581,
        26643
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1AAE"
    },
    "12503": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26546,
        26567
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12504": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26609,
        26642
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDA9"
    },
    "12507": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "12516": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26546,
        26564
      ],
      "op": "DUP16",
      "path": "37"
    },
    "12517": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26639,
        26640
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "12519": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26620,
        26641
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12520": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26620,
        26641
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12522": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26620,
        26641
      ],
      "op": "MUL",
      "path": "37"
    },
    "12523": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26620,
        26641
      ],
      "op": "ADD",
      "path": "37"
    },
    "12524": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26620,
        26641
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "12525": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26609,
        26613
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x416C"
    },
    "12528": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26609,
        26642
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12529": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26528,
        26653
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12530": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26495,
        26653
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12531": {
      "op": "POP"
    },
    "12532": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26667,
        26688
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "12534": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26667,
        26688
      ],
      "op": "DUP11",
      "path": "37"
    },
    "12535": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26667,
        26688
      ],
      "op": "ADD",
      "path": "37"
    },
    "12536": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26667,
        26688
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "12537": {
      "branch": 348,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26667,
        26692
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "12538": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26663,
        27013
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x318C"
    },
    "12541": {
      "branch": 348,
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26663,
        27013
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12542": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26708,
        26839
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 165,
      "value": "0x3135"
    },
    "12545": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26782
      ],
      "op": "DUP12",
      "path": "37"
    },
    "12546": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26783,
        26784
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "12548": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12549": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12551": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "MUL",
      "path": "37"
    },
    "12552": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "ADD",
      "path": "37"
    },
    "12553": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12555": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12556": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "ADD",
      "path": "37"
    },
    "12557": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12558": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3117"
    },
    "12561": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "12562": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12563": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "12566": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26766,
        26785
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12567": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26766,
        26785
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12568": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26803,
        26825
      ],
      "op": "DUP3",
      "path": "37"
    },
    "12569": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26715,
        26734
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3125"
    },
    "12572": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26715,
        26734
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12574": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26715,
        26734
      ],
      "op": "DUP16",
      "path": "37"
    },
    "12575": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26715,
        26734
      ],
      "op": "ADD",
      "path": "37"
    },
    "12576": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26715,
        26731
      ],
      "op": "DUP16",
      "path": "37"
    },
    "12577": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26715,
        26734
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "12580": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26715,
        26734
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12581": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26715,
        26734
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12588": {
      "op": "SHL"
    },
    "12589": {
      "op": "SUB"
    },
    "12590": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26708,
        26748
      ],
      "op": "AND",
      "path": "37"
    },
    "12591": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26708,
        26748
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "12592": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26708,
        26839
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12593": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26708,
        26748
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x47A8"
    },
    "12596": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26708,
        26839
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12597": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26708,
        26839
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12598": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "PUSH32",
      "path": "37",
      "statement": 166,
      "value": "0x6D11837F46CC09B011CF4AAE09FCADE046C020AAC088090AE4F77FF67B707972"
    },
    "12631": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26892,
        26911
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3166"
    },
    "12634": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26892,
        26911
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "12636": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26892,
        26911
      ],
      "op": "DUP14",
      "path": "37"
    },
    "12637": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26892,
        26911
      ],
      "op": "ADD",
      "path": "37"
    },
    "12638": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26892,
        26911
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12640": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26892,
        26911
      ],
      "op": "DUP15",
      "path": "37"
    },
    "12641": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26892,
        26911
      ],
      "op": "ADD",
      "path": "37"
    },
    "12642": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26892,
        26911
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "12645": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26892,
        26911
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12646": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26892,
        26911
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12647": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26929,
        26948
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3173"
    },
    "12650": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26929,
        26948
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12652": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26929,
        26948
      ],
      "op": "DUP15",
      "path": "37"
    },
    "12653": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26929,
        26948
      ],
      "op": "ADD",
      "path": "37"
    },
    "12654": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26929,
        26945
      ],
      "op": "DUP15",
      "path": "37"
    },
    "12655": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26929,
        26948
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "12658": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26929,
        26948
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12659": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26929,
        26948
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12660": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26966,
        26988
      ],
      "op": "DUP4",
      "path": "37"
    },
    "12661": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12663": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12664": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3183"
    },
    "12667": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "12668": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "12669": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "12670": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12671": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5828"
    },
    "12674": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        26858,
        27002
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12675": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12676": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12678": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12679": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12680": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "12681": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "SUB",
      "path": "37"
    },
    "12682": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12683": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26858,
        27002
      ],
      "op": "LOG1",
      "path": "37"
    },
    "12684": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        26663,
        27013
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12685": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27022,
        27086
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 167,
      "value": "0x31A6"
    },
    "12688": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27038,
        27057
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x319F"
    },
    "12691": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27038,
        27057
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12693": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27038,
        27057
      ],
      "op": "DUP14",
      "path": "37"
    },
    "12694": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27038,
        27057
      ],
      "op": "ADD",
      "path": "37"
    },
    "12695": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27038,
        27057
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12697": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27038,
        27057
      ],
      "op": "DUP15",
      "path": "37"
    },
    "12698": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27038,
        27057
      ],
      "op": "ADD",
      "path": "37"
    },
    "12699": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27038,
        27057
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "12702": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        27038,
        27057
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12703": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27038,
        27057
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12704": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27059,
        27069
      ],
      "op": "CALLER",
      "path": "37"
    },
    "12705": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27071,
        27085
      ],
      "op": "DUP12",
      "path": "37"
    },
    "12706": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27022,
        27037
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41DC"
    },
    "12709": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "i",
      "offset": [
        27022,
        27086
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12710": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27022,
        27086
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12711": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27097,
        27136
      ],
      "op": "POP",
      "path": "37",
      "statement": 168
    },
    "12712": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27097,
        27136
      ],
      "op": "POP",
      "path": "37"
    },
    "12713": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27097,
        27136
      ],
      "op": "POP",
      "path": "37"
    },
    "12714": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27097,
        27136
      ],
      "op": "POP",
      "path": "37"
    },
    "12715": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27097,
        27136
      ],
      "op": "POP",
      "path": "37"
    },
    "12716": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27097,
        27136
      ],
      "op": "POP",
      "path": "37"
    },
    "12717": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        27097,
        27136
      ],
      "op": "POP",
      "path": "37"
    },
    "12718": {
      "offset": [
        2988,
        2994
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "12720": {
      "offset": [
        2988,
        3002
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12721": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2988,
        3002
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12724": {
      "op": "NOT"
    },
    "12725": {
      "offset": [
        2988,
        3002
      ],
      "op": "AND",
      "path": "37"
    },
    "12726": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12727": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        2988,
        3002
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "12728": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12729": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "12730": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12731": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "12732": {
      "op": "POP"
    },
    "12733": {
      "fn": "BPool.swapExactAmountIn",
      "offset": [
        23308,
        27205
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12734": {
      "op": "POP"
    },
    "12735": {
      "fn": "BPool.swapExactAmountIn",
      "jump": "o",
      "offset": [
        23308,
        27205
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12736": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11371,
        11888
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12737": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11448,
        11464
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "12739": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11466,
        11482
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12740": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11498,
        11525
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "12742": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11528,
        11544
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x31CD"
    },
    "12745": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11528,
        11542
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27D2"
    },
    "12748": {
      "fn": "BPool.getCurrentMarketFees",
      "jump": "i",
      "offset": [
        11528,
        11544
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12749": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11528,
        11544
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12750": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11498,
        11544
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12751": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11498,
        11544
      ],
      "op": "POP",
      "path": "37"
    },
    "12752": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11554,
        11577
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "12754": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11594,
        11604
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12755": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11594,
        11611
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12756": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH8",
      "path": "37",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12765": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12766": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "GT",
      "path": "37"
    },
    "12767": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "12768": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x31EB"
    },
    "12771": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12772": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x31EB"
    },
    "12775": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5513"
    },
    "12778": {
      "fn": "BPool.getCurrentMarketFees",
      "jump": "i",
      "offset": [
        11580,
        11612
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12779": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12780": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12782": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12783": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12784": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12785": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "DUP3",
      "path": "37"
    },
    "12786": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "12787": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12788": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12790": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "MUL",
      "path": "37"
    },
    "12791": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12793": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "ADD",
      "path": "37"
    },
    "12794": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "DUP3",
      "path": "37"
    },
    "12795": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "ADD",
      "path": "37"
    },
    "12796": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12798": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "12799": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12800": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "12801": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3214"
    },
    "12804": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12805": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12806": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12808": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "ADD",
      "path": "37"
    },
    "12809": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12811": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "DUP3",
      "path": "37"
    },
    "12812": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "MUL",
      "path": "37"
    },
    "12813": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12814": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "12815": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "DUP4",
      "path": "37"
    },
    "12816": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "12817": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "ADD",
      "path": "37"
    },
    "12818": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12819": {
      "op": "POP"
    },
    "12820": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12821": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11580,
        11612
      ],
      "op": "POP",
      "path": "37"
    },
    "12822": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11554,
        11612
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12823": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11554,
        11612
      ],
      "op": "POP",
      "path": "37"
    },
    "12824": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11622,
        11646
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "12826": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11663,
        11673
      ],
      "op": "DUP3",
      "path": "37"
    },
    "12827": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11663,
        11680
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12828": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH8",
      "path": "37",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12837": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12838": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "GT",
      "path": "37"
    },
    "12839": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "12840": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3233"
    },
    "12843": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12844": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3233"
    },
    "12847": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5513"
    },
    "12850": {
      "fn": "BPool.getCurrentMarketFees",
      "jump": "i",
      "offset": [
        11649,
        11681
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12851": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12852": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12854": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12855": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12856": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12857": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "DUP3",
      "path": "37"
    },
    "12858": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "12859": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12860": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12862": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "MUL",
      "path": "37"
    },
    "12863": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12865": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "ADD",
      "path": "37"
    },
    "12866": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "DUP3",
      "path": "37"
    },
    "12867": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "ADD",
      "path": "37"
    },
    "12868": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "12870": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "12871": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12872": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "12873": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x325C"
    },
    "12876": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12877": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12878": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12880": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "ADD",
      "path": "37"
    },
    "12881": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12883": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "DUP3",
      "path": "37"
    },
    "12884": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "MUL",
      "path": "37"
    },
    "12885": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "DUP1",
      "path": "37"
    },
    "12886": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "12887": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "DUP4",
      "path": "37"
    },
    "12888": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "12889": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "ADD",
      "path": "37"
    },
    "12890": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12891": {
      "op": "POP"
    },
    "12892": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12893": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11649,
        11681
      ],
      "op": "POP",
      "path": "37"
    },
    "12894": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11622,
        11681
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12895": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11622,
        11681
      ],
      "op": "POP",
      "path": "37"
    },
    "12896": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11696,
        11705
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "12898": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11691,
        11848
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12899": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11715,
        11725
      ],
      "op": "DUP4",
      "path": "37"
    },
    "12900": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11715,
        11732
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12901": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11711,
        11712
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12902": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11711,
        11732
      ],
      "op": "LT",
      "path": "37"
    },
    "12903": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11691,
        11848
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "12904": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11691,
        11848
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x29E6"
    },
    "12907": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11691,
        11848
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12908": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11775
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 169
    },
    "12909": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11776,
        11777
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12910": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12911": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12912": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12913": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "LT",
      "path": "37"
    },
    "12914": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x327D"
    },
    "12917": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12918": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x327D"
    },
    "12921": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "12924": {
      "fn": "BPool.getCurrentMarketFees",
      "jump": "i",
      "offset": [
        11765,
        11778
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12925": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12926": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12928": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "MUL",
      "path": "37"
    },
    "12929": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12931": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "ADD",
      "path": "37"
    },
    "12932": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "ADD",
      "path": "37"
    },
    "12933": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11765,
        11778
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12934": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11759
      ],
      "op": "DUP4",
      "path": "37"
    },
    "12935": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11760,
        11761
      ],
      "op": "DUP3",
      "path": "37"
    },
    "12936": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12937": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12938": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12939": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "LT",
      "path": "37"
    },
    "12940": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3297"
    },
    "12943": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12944": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3297"
    },
    "12947": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "12950": {
      "fn": "BPool.getCurrentMarketFees",
      "jump": "i",
      "offset": [
        11753,
        11762
      ],
      "op": "JUMP",
      "path": "37"
    },
    "12951": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "12952": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12954": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "MUL",
      "path": "37"
    },
    "12955": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "12957": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "ADD",
      "path": "37"
    },
    "12958": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11762
      ],
      "op": "ADD",
      "path": "37"
    },
    "12959": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11778
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12966": {
      "op": "SHL"
    },
    "12967": {
      "op": "SUB"
    },
    "12968": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11778
      ],
      "op": "AND",
      "path": "37"
    },
    "12969": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11778
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "12970": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11778
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12977": {
      "op": "SHL"
    },
    "12978": {
      "op": "SUB"
    },
    "12979": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11778
      ],
      "op": "AND",
      "path": "37"
    },
    "12980": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11778
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12981": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11778
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "12982": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11778
      ],
      "op": "POP",
      "path": "37"
    },
    "12983": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11753,
        11778
      ],
      "op": "POP",
      "path": "37"
    },
    "12984": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11822
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 170,
      "value": "0x6"
    },
    "12986": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "12988": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11833
      ],
      "op": "DUP6",
      "path": "37"
    },
    "12989": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11834,
        11835
      ],
      "op": "DUP4",
      "path": "37"
    },
    "12990": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12991": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "12992": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "DUP2",
      "path": "37"
    },
    "12993": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "LT",
      "path": "37"
    },
    "12994": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x32CD"
    },
    "12997": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12998": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x32CD"
    },
    "13001": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "13004": {
      "fn": "BPool.getCurrentMarketFees",
      "jump": "i",
      "offset": [
        11823,
        11836
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13005": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13006": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13008": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "MUL",
      "path": "37"
    },
    "13009": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13011": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "ADD",
      "path": "37"
    },
    "13012": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "ADD",
      "path": "37"
    },
    "13013": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11823,
        11836
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "13014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13020": {
      "op": "SHL"
    },
    "13021": {
      "op": "SUB"
    },
    "13022": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "AND",
      "path": "37"
    },
    "13023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13029": {
      "op": "SHL"
    },
    "13030": {
      "op": "SUB"
    },
    "13031": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "AND",
      "path": "37"
    },
    "13032": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13033": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13034": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13036": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "ADD",
      "path": "37"
    },
    "13037": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13038": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13039": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13040": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13042": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "ADD",
      "path": "37"
    },
    "13043": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "13045": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "13046": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11805,
        11837
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13047": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11799
      ],
      "op": "DUP3",
      "path": "37"
    },
    "13048": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11800,
        11801
      ],
      "op": "DUP3",
      "path": "37"
    },
    "13049": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13050": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "13051": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13052": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "LT",
      "path": "37"
    },
    "13053": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3308"
    },
    "13056": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "13057": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3308"
    },
    "13060": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "13063": {
      "fn": "BPool.getCurrentMarketFees",
      "jump": "i",
      "offset": [
        11792,
        11802
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13064": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13065": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13067": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13068": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13069": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "MUL",
      "path": "37"
    },
    "13070": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "13071": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13072": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "13073": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "ADD",
      "path": "37"
    },
    "13074": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11802
      ],
      "op": "ADD",
      "path": "37"
    },
    "13075": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11792,
        11837
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13076": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11734,
        11737
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 171
    },
    "13077": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11734,
        11737
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x331D"
    },
    "13080": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11734,
        11737
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13081": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11734,
        11737
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x587B"
    },
    "13084": {
      "fn": "BPool.getCurrentMarketFees",
      "jump": "i",
      "offset": [
        11734,
        11737
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13085": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11734,
        11737
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13086": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11734,
        11737
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "13087": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11734,
        11737
      ],
      "op": "POP",
      "path": "37"
    },
    "13088": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11734,
        11737
      ],
      "op": "POP",
      "path": "37"
    },
    "13089": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11691,
        11848
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3262"
    },
    "13092": {
      "fn": "BPool.getCurrentMarketFees",
      "offset": [
        11691,
        11848
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13093": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27550,
        31608
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13094": {
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "13096": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2922,
        2928
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13097": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27703,
        27724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "13099": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27703,
        27724
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13100": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27703,
        27724
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13101": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27703,
        27724
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13102": {
      "offset": [
        2922,
        2928
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "13104": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2922,
        2928
      ],
      "op": "AND",
      "path": "37"
    },
    "13105": {
      "offset": [
        2921,
        2928
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "13106": {
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x334D"
    },
    "13109": {
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "13110": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13112": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2913,
        2944
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "13113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13119": {
      "op": "SHL"
    },
    "13120": {
      "offset": [
        2913,
        2944
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13121": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2913,
        2944
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13122": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "13124": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2913,
        2944
      ],
      "op": "ADD",
      "path": "37"
    },
    "13125": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "13128": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2913,
        2944
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13129": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2913,
        2944
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "13132": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13133": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2913,
        2944
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13134": {
      "offset": [
        2954,
        2960
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "13136": {
      "offset": [
        2954,
        2967
      ],
      "op": "DUP1",
      "path": "37"
    },
    "13137": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2954,
        2967
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13138": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13140": {
      "op": "NOT"
    },
    "13141": {
      "offset": [
        2954,
        2967
      ],
      "op": "AND",
      "path": "37"
    },
    "13142": {
      "offset": [
        2963,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "13144": {
      "offset": [
        2954,
        2967
      ],
      "op": "OR",
      "path": "37"
    },
    "13145": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2954,
        2967
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13146": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        2954,
        2967
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "13147": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27768,
        27778
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 172,
      "value": "0xB"
    },
    "13149": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27768,
        27778
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13154": {
      "op": "SHL"
    },
    "13155": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27768,
        27778
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13156": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27768,
        27778
      ],
      "op": "DIV",
      "path": "37"
    },
    "13157": {
      "offset": [
        2954,
        2967
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "13159": {
      "branch": 349,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27768,
        27778
      ],
      "op": "AND",
      "path": "37"
    },
    "13160": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3383"
    },
    "13163": {
      "branch": 349,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "13164": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13166": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "13167": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13171": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13173": {
      "op": "SHL"
    },
    "13174": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13175": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13176": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "13178": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "ADD",
      "path": "37"
    },
    "13179": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "13182": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13183": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x572D"
    },
    "13186": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        27760,
        27800
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13187": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27760,
        27800
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13188": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27841,
        27860
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 173,
      "value": "0x3393"
    },
    "13191": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27841,
        27860
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13193": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27841,
        27860
      ],
      "op": "DUP6",
      "path": "37"
    },
    "13194": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27841,
        27860
      ],
      "op": "ADD",
      "path": "37"
    },
    "13195": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27841,
        27860
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13197": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27841,
        27860
      ],
      "op": "DUP7",
      "path": "37"
    },
    "13198": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27841,
        27860
      ],
      "op": "ADD",
      "path": "37"
    },
    "13199": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27841,
        27860
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "13202": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        27841,
        27860
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13203": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27841,
        27860
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13210": {
      "op": "SHL"
    },
    "13211": {
      "op": "SUB"
    },
    "13212": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27860
      ],
      "op": "AND",
      "path": "37"
    },
    "13213": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27837
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x33A9"
    },
    "13216": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27837
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13218": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27837
      ],
      "op": "DUP7",
      "path": "37"
    },
    "13219": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27837
      ],
      "op": "ADD",
      "path": "37"
    },
    "13220": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27834
      ],
      "op": "DUP7",
      "path": "37"
    },
    "13221": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27837
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "13224": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        27818,
        27837
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13225": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27837
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13232": {
      "op": "SHL"
    },
    "13233": {
      "op": "SUB"
    },
    "13234": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27860
      ],
      "op": "AND",
      "path": "37"
    },
    "13235": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27860
      ],
      "op": "EQ",
      "path": "37"
    },
    "13236": {
      "branch": 350,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27818,
        27860
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "13237": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x33F9"
    },
    "13240": {
      "branch": 350,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "13241": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13243": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "13244": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13248": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13250": {
      "op": "SHL"
    },
    "13251": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13252": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13255": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "13257": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "DUP3",
      "path": "37"
    },
    "13258": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "ADD",
      "path": "37"
    },
    "13259": {
      "op": "MSTORE"
    },
    "13260": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "13262": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13264": {
      "op": "DUP3"
    },
    "13265": {
      "op": "ADD"
    },
    "13266": {
      "op": "MSTORE"
    },
    "13267": {
      "op": "PUSH22",
      "value": "0x21B0B73737BA1039BBB0B81039B0B6B2903A37B5B2B7"
    },
    "13290": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "13292": {
      "op": "SHL"
    },
    "13293": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13295": {
      "op": "DUP3"
    },
    "13296": {
      "op": "ADD"
    },
    "13297": {
      "op": "MSTORE"
    },
    "13298": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13300": {
      "op": "ADD"
    },
    "13301": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "13304": {
      "op": "JUMP"
    },
    "13305": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27810,
        27887
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13306": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27905,
        27926
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 174,
      "value": "0x60"
    },
    "13308": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27905,
        27926
      ],
      "op": "DUP4",
      "path": "37"
    },
    "13309": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27905,
        27926
      ],
      "op": "ADD",
      "path": "37"
    },
    "13310": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27905,
        27926
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "13311": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27905,
        27930
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "13312": {
      "branch": 351,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27905,
        27930
      ],
      "op": "DUP1",
      "path": "37"
    },
    "13313": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27905,
        27966
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3421"
    },
    "13316": {
      "branch": 351,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27905,
        27966
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "13317": {
      "op": "POP"
    },
    "13318": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x3419"
    },
    "13321": {
      "offset": [
        1058,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2710"
    },
    "13324": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "13333": {
      "offset": [
        1051,
        1061
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "13336": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMP",
      "path": "33"
    },
    "13337": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        1051,
        1061
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "13338": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27934,
        27955
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "13340": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27934,
        27955
      ],
      "op": "DUP5",
      "path": "37"
    },
    "13341": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27934,
        27955
      ],
      "op": "ADD",
      "path": "37"
    },
    "13342": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27934,
        27955
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "13343": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27934,
        27966
      ],
      "op": "LT",
      "path": "37"
    },
    "13344": {
      "branch": 352,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27934,
        27966
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "13345": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27905,
        27966
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13346": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3466"
    },
    "13349": {
      "branch": 352,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "13350": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13352": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "13353": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13357": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13359": {
      "op": "SHL"
    },
    "13360": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13361": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13364": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "13366": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "DUP3",
      "path": "37"
    },
    "13367": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "ADD",
      "path": "37"
    },
    "13368": {
      "op": "MSTORE"
    },
    "13369": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "13371": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13373": {
      "op": "DUP3"
    },
    "13374": {
      "op": "ADD"
    },
    "13375": {
      "op": "MSTORE"
    },
    "13376": {
      "op": "PUSH22",
      "value": "0x436F6E73756D655377617046656520746F6F206C6F77"
    },
    "13399": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "13401": {
      "op": "SHL"
    },
    "13402": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13404": {
      "op": "DUP3"
    },
    "13405": {
      "op": "ADD"
    },
    "13406": {
      "op": "MSTORE"
    },
    "13407": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13409": {
      "op": "ADD"
    },
    "13410": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "13413": {
      "op": "JUMP"
    },
    "13414": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        27897,
        27992
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13415": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x3479"
    },
    "13418": {
      "offset": [
        1115,
        1117
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xA"
    },
    "13420": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "13429": {
      "offset": [
        1108,
        1117
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "13432": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMP",
      "path": "33"
    },
    "13433": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        1108,
        1117
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "13434": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28010,
        28031
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 175,
      "value": "0x60"
    },
    "13436": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28010,
        28031
      ],
      "op": "DUP5",
      "path": "37"
    },
    "13437": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28010,
        28031
      ],
      "op": "ADD",
      "path": "37"
    },
    "13438": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28010,
        28031
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "13439": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28010,
        28042
      ],
      "op": "GT",
      "path": "37"
    },
    "13440": {
      "branch": 353,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28010,
        28042
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "13441": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x34C6"
    },
    "13444": {
      "branch": 353,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "13445": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13447": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "13448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13454": {
      "op": "SHL"
    },
    "13455": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13456": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13459": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "13461": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "DUP3",
      "path": "37"
    },
    "13462": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "ADD",
      "path": "37"
    },
    "13463": {
      "op": "MSTORE"
    },
    "13464": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "13466": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13468": {
      "op": "DUP3"
    },
    "13469": {
      "op": "ADD"
    },
    "13470": {
      "op": "MSTORE"
    },
    "13471": {
      "op": "PUSH23",
      "value": "0x86DEDCE6EADACAA6EEC2E08CCACA40E8DEDE40D0D2CED"
    },
    "13495": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "13497": {
      "op": "SHL"
    },
    "13498": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13500": {
      "op": "DUP3"
    },
    "13501": {
      "op": "ADD"
    },
    "13502": {
      "op": "MSTORE"
    },
    "13503": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13505": {
      "op": "ADD"
    },
    "13506": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "13509": {
      "op": "JUMP"
    },
    "13510": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28002,
        28069
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13511": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28079,
        28111
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 176,
      "value": "0x34D1"
    },
    "13514": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28091,
        28107
      ],
      "op": "DUP5",
      "path": "37"
    },
    "13515": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28108,
        28109
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "13517": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28091,
        28110
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2ACC"
    },
    "13520": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28091,
        28110
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13521": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28079,
        28111
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13522": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28121,
        28153
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 177,
      "value": "0x34DC"
    },
    "13525": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28133,
        28149
      ],
      "op": "DUP5",
      "path": "37"
    },
    "13526": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28150,
        28151
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "13528": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28133,
        28152
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2ACC"
    },
    "13531": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28133,
        28152
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13532": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28121,
        28153
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13533": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28163,
        28186
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "13535": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28197
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "13537": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28163,
        28186
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13538": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28206,
        28225
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x34EE"
    },
    "13541": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28206,
        28225
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13543": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28206,
        28225
      ],
      "op": "DUP9",
      "path": "37"
    },
    "13544": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28206,
        28225
      ],
      "op": "ADD",
      "path": "37"
    },
    "13545": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28206,
        28222
      ],
      "op": "DUP9",
      "path": "37"
    },
    "13546": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28206,
        28225
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "13549": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        28206,
        28225
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13550": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28206,
        28225
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13557": {
      "op": "SHL"
    },
    "13558": {
      "op": "SUB"
    },
    "13559": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "AND",
      "path": "37"
    },
    "13560": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13561": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13562": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13564": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13565": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "ADD",
      "path": "37"
    },
    "13566": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "13567": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13568": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "13569": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13570": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13572": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "ADD",
      "path": "37"
    },
    "13573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13575": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13576": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13577": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "13578": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28189,
        28227
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "13579": {
      "op": "POP"
    },
    "13580": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28272
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "13582": {
      "op": "DUP2"
    },
    "13583": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28297
      ],
      "op": "DUP8",
      "path": "37"
    },
    "13584": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28298,
        28299
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "13586": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13588": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "MUL",
      "path": "37"
    },
    "13589": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "ADD",
      "path": "37"
    },
    "13590": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13592": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13593": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "ADD",
      "path": "37"
    },
    "13594": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13595": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3524"
    },
    "13598": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "13599": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13600": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "13603": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        28281,
        28300
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13604": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28281,
        28300
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13611": {
      "op": "SHL"
    },
    "13612": {
      "op": "SUB"
    },
    "13613": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "AND",
      "path": "37"
    },
    "13614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13620": {
      "op": "SHL"
    },
    "13621": {
      "op": "SUB"
    },
    "13622": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "AND",
      "path": "37"
    },
    "13623": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13624": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13625": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13627": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "ADD",
      "path": "37"
    },
    "13628": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13629": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13630": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13631": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13633": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "ADD",
      "path": "37"
    },
    "13634": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "13636": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28264,
        28302
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "13637": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28237,
        28302
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13638": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28237,
        28302
      ],
      "op": "POP",
      "path": "37"
    },
    "13639": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28359,
        28397
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 178,
      "value": "0x3563"
    },
    "13642": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28364,
        28373
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13643": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28364,
        28381
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "13645": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28364,
        28381
      ],
      "op": "ADD",
      "path": "37"
    },
    "13646": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28364,
        28381
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13647": {
      "offset": [
        1732,
        1733
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "13649": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "13658": {
      "offset": [
        1725,
        1733
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xD9E"
    },
    "13661": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        1725,
        1733
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "13662": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        1725,
        1733
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "13663": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        1725,
        1733
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "13666": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        1725,
        1733
      ],
      "op": "JUMP",
      "path": "33"
    },
    "13667": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28359,
        28397
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13668": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28334,
        28355
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13670": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28334,
        28355
      ],
      "op": "DUP7",
      "path": "37"
    },
    "13671": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28334,
        28355
      ],
      "op": "ADD",
      "path": "37"
    },
    "13672": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28334,
        28355
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "13673": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28334,
        28397
      ],
      "op": "GT",
      "path": "37"
    },
    "13674": {
      "branch": 354,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28334,
        28397
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "13675": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x35AA"
    },
    "13678": {
      "branch": 354,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "13679": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13681": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "13682": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13688": {
      "op": "SHL"
    },
    "13689": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13690": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13693": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "13695": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "DUP3",
      "path": "37"
    },
    "13696": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "ADD",
      "path": "37"
    },
    "13697": {
      "op": "MSTORE"
    },
    "13698": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13700": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13702": {
      "op": "DUP3"
    },
    "13703": {
      "op": "ADD"
    },
    "13704": {
      "op": "MSTORE"
    },
    "13705": {
      "op": "PUSH17",
      "value": "0x4552525F4D41585F4F55545F524154494F"
    },
    "13723": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "13725": {
      "op": "SHL"
    },
    "13726": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13728": {
      "op": "DUP3"
    },
    "13729": {
      "op": "ADD"
    },
    "13730": {
      "op": "MSTORE"
    },
    "13731": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13733": {
      "op": "ADD"
    },
    "13734": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "13737": {
      "op": "JUMP"
    },
    "13738": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28313,
        28440
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13739": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28451,
        28474
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "13741": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28477,
        28655
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x35D6"
    },
    "13744": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28504,
        28512
      ],
      "op": "DUP4",
      "path": "37"
    },
    "13745": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28504,
        28520
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "13747": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28504,
        28520
      ],
      "op": "ADD",
      "path": "37"
    },
    "13748": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28504,
        28520
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13749": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28534,
        28542
      ],
      "op": "DUP5",
      "path": "37"
    },
    "13750": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28534,
        28549
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "13752": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28534,
        28549
      ],
      "op": "ADD",
      "path": "37"
    },
    "13753": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28534,
        28549
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13754": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28563,
        28572
      ],
      "op": "DUP5",
      "path": "37"
    },
    "13755": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28563,
        28580
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "13757": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28563,
        28580
      ],
      "op": "ADD",
      "path": "37"
    },
    "13758": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28563,
        28580
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13759": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28594,
        28603
      ],
      "op": "DUP6",
      "path": "37"
    },
    "13760": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28594,
        28610
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "13762": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28594,
        28610
      ],
      "op": "ADD",
      "path": "37"
    },
    "13763": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28594,
        28610
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13764": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28624,
        28642
      ],
      "op": "DUP11",
      "path": "37"
    },
    "13765": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28643,
        28644
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "13767": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28624,
        28645
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "13769": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28624,
        28645
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13770": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28624,
        28645
      ],
      "op": "LT",
      "path": "37"
    },
    "13771": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28624,
        28645
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CAA"
    },
    "13774": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28624,
        28645
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "13775": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28624,
        28645
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CAA"
    },
    "13778": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28624,
        28645
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "13781": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        28624,
        28645
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13782": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28477,
        28655
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13783": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28451,
        28655
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13784": {
      "op": "POP"
    },
    "13785": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28706,
        28727
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 179,
      "value": "0x40"
    },
    "13787": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28706,
        28727
      ],
      "op": "DUP7",
      "path": "37"
    },
    "13788": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28706,
        28727
      ],
      "op": "ADD",
      "path": "37"
    },
    "13789": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28706,
        28727
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "13790": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28687,
        28727
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13791": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28687,
        28727
      ],
      "op": "GT",
      "path": "37"
    },
    "13792": {
      "branch": 355,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28687,
        28727
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "13793": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3622"
    },
    "13796": {
      "branch": 355,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "13797": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13799": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "13800": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13804": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13806": {
      "op": "SHL"
    },
    "13807": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13808": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13811": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "13813": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "DUP3",
      "path": "37"
    },
    "13814": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "ADD",
      "path": "37"
    },
    "13815": {
      "op": "MSTORE"
    },
    "13816": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "13818": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13820": {
      "op": "DUP3"
    },
    "13821": {
      "op": "ADD"
    },
    "13822": {
      "op": "MSTORE"
    },
    "13823": {
      "op": "PUSH19",
      "value": "0x4552525F4241445F4C494D49545F5052494345"
    },
    "13843": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "13845": {
      "op": "SHL"
    },
    "13846": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13848": {
      "op": "DUP3"
    },
    "13849": {
      "op": "ADD"
    },
    "13850": {
      "op": "MSTORE"
    },
    "13851": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13853": {
      "op": "ADD"
    },
    "13854": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "13857": {
      "op": "JUMP"
    },
    "13858": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28666,
        28772
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13859": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        28998,
        29018
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "13861": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29050
      ],
      "op": "DUP1",
      "path": "37"
    },
    "13862": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13864": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "13865": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "DUP1",
      "path": "37"
    },
    "13866": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "13868": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "ADD",
      "path": "37"
    },
    "13869": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "13871": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13872": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "DUP1",
      "path": "37"
    },
    "13873": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29067,
        29075
      ],
      "op": "DUP7",
      "path": "37"
    },
    "13874": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29067,
        29083
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "13876": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29067,
        29083
      ],
      "op": "ADD",
      "path": "37"
    },
    "13877": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29067,
        29083
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13878": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13879": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13880": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13882": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "ADD",
      "path": "37"
    },
    "13883": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29097,
        29105
      ],
      "op": "DUP7",
      "path": "37"
    },
    "13884": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29097,
        29112
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "13886": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29097,
        29112
      ],
      "op": "ADD",
      "path": "37"
    },
    "13887": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29097,
        29112
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13888": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13889": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13890": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13892": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "ADD",
      "path": "37"
    },
    "13893": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29126,
        29135
      ],
      "op": "DUP6",
      "path": "37"
    },
    "13894": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29126,
        29143
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "13896": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29126,
        29143
      ],
      "op": "ADD",
      "path": "37"
    },
    "13897": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29126,
        29143
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13898": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13899": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13900": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13902": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "ADD",
      "path": "37"
    },
    "13903": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29157,
        29166
      ],
      "op": "DUP6",
      "path": "37"
    },
    "13904": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29157,
        29173
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "13906": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29157,
        29173
      ],
      "op": "ADD",
      "path": "37"
    },
    "13907": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29157,
        29173
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "13908": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13909": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "13910": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "POP",
      "path": "37"
    },
    "13911": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13912": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29028,
        29183
      ],
      "op": "POP",
      "path": "37"
    },
    "13913": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29193,
        29218
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3683"
    },
    "13916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13918": {
      "op": "MLOAD"
    },
    "13919": {
      "op": "DUP1"
    },
    "13920": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13922": {
      "op": "ADD"
    },
    "13923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13925": {
      "op": "MSTORE"
    },
    "13926": {
      "op": "DUP1"
    },
    "13927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13929": {
      "op": "DUP2"
    },
    "13930": {
      "op": "MSTORE"
    },
    "13931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13933": {
      "op": "ADD"
    },
    "13934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13936": {
      "op": "DUP2"
    },
    "13937": {
      "op": "MSTORE"
    },
    "13938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13940": {
      "op": "ADD"
    },
    "13941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13943": {
      "op": "DUP2"
    },
    "13944": {
      "op": "MSTORE"
    },
    "13945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13947": {
      "op": "ADD"
    },
    "13948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13950": {
      "op": "DUP2"
    },
    "13951": {
      "op": "MSTORE"
    },
    "13952": {
      "op": "POP"
    },
    "13953": {
      "op": "SWAP1"
    },
    "13954": {
      "op": "JUMP"
    },
    "13955": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29193,
        29218
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13956": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29279,
        29426
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 180,
      "value": "0x3696"
    },
    "13959": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29307,
        29311
      ],
      "op": "DUP3",
      "path": "37"
    },
    "13960": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29325,
        29346
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "13962": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29325,
        29346
      ],
      "op": "DUP12",
      "path": "37"
    },
    "13963": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29325,
        29346
      ],
      "op": "ADD",
      "path": "37"
    },
    "13964": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29325,
        29346
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "13965": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29395,
        29416
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "13967": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29395,
        29416
      ],
      "op": "DUP13",
      "path": "37"
    },
    "13968": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29395,
        29416
      ],
      "op": "ADD",
      "path": "37"
    },
    "13969": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29395,
        29416
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "13970": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29279,
        29293
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x199D"
    },
    "13973": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        29279,
        29426
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13974": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29279,
        29426
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13975": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29228,
        29426
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "13976": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29228,
        29426
      ],
      "op": "SWAP10",
      "path": "37"
    },
    "13977": {
      "op": "POP"
    },
    "13978": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29228,
        29426
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "13979": {
      "op": "POP"
    },
    "13980": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29228,
        29426
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "13981": {
      "op": "POP"
    },
    "13982": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29473,
        29538
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 181,
      "value": "0x36AB"
    },
    "13985": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29478,
        29491
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "13987": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29478,
        29512
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "13989": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29492,
        29508
      ],
      "op": "DUP13",
      "path": "37"
    },
    "13990": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29478,
        29512
      ],
      "op": "DUP2",
      "path": "37"
    },
    "13991": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29492,
        29511
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2D82"
    },
    "13994": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29492,
        29511
      ],
      "op": "JUMP",
      "path": "37"
    },
    "13995": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29473,
        29538
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "13996": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29449
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "13998": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14000": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29450,
        29469
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x36BC"
    },
    "14003": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29450,
        29469
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14005": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29450,
        29469
      ],
      "op": "DUP15",
      "path": "37"
    },
    "14006": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29450,
        29469
      ],
      "op": "ADD",
      "path": "37"
    },
    "14007": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29450,
        29466
      ],
      "op": "DUP15",
      "path": "37"
    },
    "14008": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29450,
        29469
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "14011": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        29450,
        29469
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14012": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29450,
        29469
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14019": {
      "op": "SHL"
    },
    "14020": {
      "op": "SUB"
    },
    "14021": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "AND",
      "path": "37"
    },
    "14022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14028": {
      "op": "SHL"
    },
    "14029": {
      "op": "SUB"
    },
    "14030": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "AND",
      "path": "37"
    },
    "14031": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14032": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14033": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14035": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "ADD",
      "path": "37"
    },
    "14036": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14037": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14038": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14039": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14041": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "ADD",
      "path": "37"
    },
    "14042": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14044": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29470
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "14045": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29538
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14046": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29538
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14047": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29538
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "14048": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29436,
        29538
      ],
      "op": "POP",
      "path": "37"
    },
    "14049": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29598,
        29675
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 182,
      "value": "0x36FA"
    },
    "14052": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29603,
        29620
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "14054": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29603,
        29641
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14056": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29621,
        29637
      ],
      "op": "DUP13",
      "path": "37"
    },
    "14057": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29638,
        29639
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14059": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29621,
        29640
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14061": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29621,
        29640
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14062": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29621,
        29640
      ],
      "op": "LT",
      "path": "37"
    },
    "14063": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29621,
        29640
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2E0F"
    },
    "14066": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29621,
        29640
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "14067": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29621,
        29640
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2E0F"
    },
    "14070": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29621,
        29640
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "14073": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        29621,
        29640
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14074": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29598,
        29675
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14075": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29565
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "14077": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14079": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29566,
        29585
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x370B"
    },
    "14082": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29566,
        29585
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14084": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29566,
        29585
      ],
      "op": "DUP15",
      "path": "37"
    },
    "14085": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29566,
        29585
      ],
      "op": "ADD",
      "path": "37"
    },
    "14086": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29566,
        29582
      ],
      "op": "DUP15",
      "path": "37"
    },
    "14087": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29566,
        29585
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "14090": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        29566,
        29585
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14091": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29566,
        29585
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14098": {
      "op": "SHL"
    },
    "14099": {
      "op": "SUB"
    },
    "14100": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "AND",
      "path": "37"
    },
    "14101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14107": {
      "op": "SHL"
    },
    "14108": {
      "op": "SUB"
    },
    "14109": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "AND",
      "path": "37"
    },
    "14110": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14111": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14112": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14114": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "ADD",
      "path": "37"
    },
    "14115": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14116": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14117": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14118": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14120": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "ADD",
      "path": "37"
    },
    "14121": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14123": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29586
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "14124": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29675
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14125": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29675
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14126": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29675
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "14127": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29548,
        29675
      ],
      "op": "POP",
      "path": "37"
    },
    "14128": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "PUSH32",
      "path": "37",
      "statement": 183,
      "value": "0x53A9DC73D01196A9C660D761BC5EC77B945340A34B5B52E510760AF2DAB1C0F1"
    },
    "14161": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29700,
        29709
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14162": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29700,
        29715
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14164": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29700,
        29715
      ],
      "op": "ADD",
      "path": "37"
    },
    "14165": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29700,
        29715
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14166": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29717,
        29726
      ],
      "op": "DUP3",
      "path": "37"
    },
    "14167": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29717,
        29741
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14169": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29717,
        29741
      ],
      "op": "ADD",
      "path": "37"
    },
    "14170": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29717,
        29741
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14171": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29751,
        29760
      ],
      "op": "DUP4",
      "path": "37"
    },
    "14172": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29751,
        29783
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14174": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29751,
        29783
      ],
      "op": "ADD",
      "path": "37"
    },
    "14175": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29751,
        29783
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14176": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29784,
        29793
      ],
      "op": "DUP5",
      "path": "37"
    },
    "14177": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29784,
        29810
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "14179": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29784,
        29810
      ],
      "op": "ADD",
      "path": "37"
    },
    "14180": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29784,
        29810
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14181": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29828
      ],
      "op": "DUP15",
      "path": "37"
    },
    "14182": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29829,
        29830
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14184": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14186": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14187": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "LT",
      "path": "37"
    },
    "14188": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3777"
    },
    "14191": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "14192": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3777"
    },
    "14195": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "14198": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        29812,
        29831
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14199": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14200": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14202": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "MUL",
      "path": "37"
    },
    "14203": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "ADD",
      "path": "37"
    },
    "14204": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14206": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14207": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "ADD",
      "path": "37"
    },
    "14208": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14209": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x378A"
    },
    "14212": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "14213": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14214": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "14217": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        29812,
        29831
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14218": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29812,
        29831
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14219": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14221": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "DUP1",
      "path": "37"
    },
    "14222": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14223": {
      "op": "SWAP6"
    },
    "14224": {
      "op": "DUP7"
    },
    "14225": {
      "op": "MSTORE"
    },
    "14226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14228": {
      "op": "DUP7"
    },
    "14229": {
      "op": "ADD"
    },
    "14230": {
      "op": "SWAP5"
    },
    "14231": {
      "op": "SWAP1"
    },
    "14232": {
      "op": "SWAP5"
    },
    "14233": {
      "op": "MSTORE"
    },
    "14234": {
      "op": "SWAP3"
    },
    "14235": {
      "op": "DUP5"
    },
    "14236": {
      "op": "ADD"
    },
    "14237": {
      "op": "SWAP2"
    },
    "14238": {
      "op": "SWAP1"
    },
    "14239": {
      "op": "SWAP2"
    },
    "14240": {
      "op": "MSTORE"
    },
    "14241": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14243": {
      "op": "DUP4"
    },
    "14244": {
      "op": "ADD"
    },
    "14245": {
      "op": "MSTORE"
    },
    "14246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14252": {
      "op": "SHL"
    },
    "14253": {
      "op": "SUB"
    },
    "14254": {
      "op": "AND"
    },
    "14255": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14257": {
      "op": "DUP3"
    },
    "14258": {
      "op": "ADD"
    },
    "14259": {
      "op": "MSTORE"
    },
    "14260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14262": {
      "op": "ADD"
    },
    "14263": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14265": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14266": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "DUP1",
      "path": "37"
    },
    "14267": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "14268": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "SUB",
      "path": "37"
    },
    "14269": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14270": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29690,
        29832
      ],
      "op": "LOG1",
      "path": "37"
    },
    "14271": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29867,
        29888
      ],
      "op": "DUP9",
      "path": "37",
      "statement": 184
    },
    "14272": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29867,
        29888
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "14273": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29850,
        29888
      ],
      "op": "DUP9",
      "path": "37"
    },
    "14274": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29850,
        29888
      ],
      "op": "GT",
      "path": "37"
    },
    "14275": {
      "branch": 356,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29850,
        29888
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "14276": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x37FE"
    },
    "14279": {
      "branch": 356,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "14280": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14282": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14283": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14287": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14289": {
      "op": "SHL"
    },
    "14290": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14291": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14294": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "14296": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "DUP3",
      "path": "37"
    },
    "14297": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "ADD",
      "path": "37"
    },
    "14298": {
      "op": "MSTORE"
    },
    "14299": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "14301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14303": {
      "op": "DUP3"
    },
    "14304": {
      "op": "ADD"
    },
    "14305": {
      "op": "MSTORE"
    },
    "14306": {
      "op": "PUSH12",
      "value": "0x22A9292FA624A6A4AA2FA4A7"
    },
    "14319": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "14321": {
      "op": "SHL"
    },
    "14322": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14324": {
      "op": "DUP3"
    },
    "14325": {
      "op": "ADD"
    },
    "14326": {
      "op": "MSTORE"
    },
    "14327": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14329": {
      "op": "ADD"
    },
    "14330": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "14333": {
      "op": "JUMP"
    },
    "14334": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29842,
        29905
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14335": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29935,
        29971
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 185,
      "value": "0x380C"
    },
    "14338": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29940,
        29948
      ],
      "op": "DUP7",
      "path": "37"
    },
    "14339": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29940,
        29956
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14341": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29940,
        29956
      ],
      "op": "ADD",
      "path": "37"
    },
    "14342": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29940,
        29956
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "14343": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29958,
        29970
      ],
      "op": "DUP5",
      "path": "37"
    },
    "14344": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29935,
        29939
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x480B"
    },
    "14347": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        29935,
        29971
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14348": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29935,
        29971
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14349": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29916,
        29932
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14351": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29916,
        29932
      ],
      "op": "DUP1",
      "path": "37"
    },
    "14352": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29916,
        29932
      ],
      "op": "DUP9",
      "path": "37"
    },
    "14353": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29916,
        29932
      ],
      "op": "ADD",
      "path": "37"
    },
    "14354": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29916,
        29971
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "14355": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29916,
        29971
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14356": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29916,
        29971
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "14357": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29916,
        29971
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "14358": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30006,
        30023
      ],
      "op": "DUP6",
      "path": "37",
      "statement": 186
    },
    "14359": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30006,
        30023
      ],
      "op": "ADD",
      "path": "37"
    },
    "14360": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30006,
        30023
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "14361": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30001,
        30047
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3824"
    },
    "14364": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30001,
        30047
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14365": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30025,
        30043
      ],
      "op": "DUP11",
      "path": "37"
    },
    "14366": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30044,
        30045
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "14368": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30025,
        30046
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x30E7"
    },
    "14371": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30025,
        30046
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14372": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30001,
        30047
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14373": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29981,
        29990
      ],
      "op": "DUP6",
      "path": "37"
    },
    "14374": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29981,
        29998
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14376": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29981,
        29998
      ],
      "op": "ADD",
      "path": "37"
    },
    "14377": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29981,
        30047
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14378": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29981,
        30047
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14379": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29981,
        30047
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "14380": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        29981,
        30047
      ],
      "op": "POP",
      "path": "37"
    },
    "14381": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30075,
        30253
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 187,
      "value": "0x3856"
    },
    "14384": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30102,
        30110
      ],
      "op": "DUP7",
      "path": "37"
    },
    "14385": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30102,
        30118
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14387": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30102,
        30118
      ],
      "op": "ADD",
      "path": "37"
    },
    "14388": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30102,
        30118
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "14389": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30132,
        30140
      ],
      "op": "DUP8",
      "path": "37"
    },
    "14390": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30132,
        30147
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "14392": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30132,
        30147
      ],
      "op": "ADD",
      "path": "37"
    },
    "14393": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30132,
        30147
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "14394": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30161,
        30170
      ],
      "op": "DUP8",
      "path": "37"
    },
    "14395": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30161,
        30178
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14397": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30161,
        30178
      ],
      "op": "ADD",
      "path": "37"
    },
    "14398": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30161,
        30178
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "14399": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30192,
        30201
      ],
      "op": "DUP9",
      "path": "37"
    },
    "14400": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30192,
        30208
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "14402": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30192,
        30208
      ],
      "op": "ADD",
      "path": "37"
    },
    "14403": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30192,
        30208
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "14404": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30222,
        30240
      ],
      "op": "DUP14",
      "path": "37"
    },
    "14405": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30241,
        30242
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14407": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30222,
        30243
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "14409": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30222,
        30243
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14410": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30222,
        30243
      ],
      "op": "LT",
      "path": "37"
    },
    "14411": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30222,
        30243
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CAA"
    },
    "14414": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30222,
        30243
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "14415": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30222,
        30243
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CAA"
    },
    "14418": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30222,
        30243
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "14421": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        30222,
        30243
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14422": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30075,
        30253
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14423": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30058,
        30253
      ],
      "op": "SWAP7",
      "path": "37"
    },
    "14424": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30058,
        30253
      ],
      "op": "POP",
      "path": "37"
    },
    "14425": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30290,
        30305
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 188
    },
    "14426": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30272,
        30286
      ],
      "op": "DUP8",
      "path": "37"
    },
    "14427": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30272,
        30305
      ],
      "op": "LT",
      "path": "37"
    },
    "14428": {
      "branch": 357,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30272,
        30305
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "14429": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3878"
    },
    "14432": {
      "branch": 357,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "14433": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14435": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14442": {
      "op": "SHL"
    },
    "14443": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14444": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14445": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "14447": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "ADD",
      "path": "37"
    },
    "14448": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "14451": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14452": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x58CA"
    },
    "14455": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        30264,
        30325
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14456": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30264,
        30325
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14457": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30361,
        30382
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 189,
      "value": "0x40"
    },
    "14459": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30361,
        30382
      ],
      "op": "DUP10",
      "path": "37"
    },
    "14460": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30361,
        30382
      ],
      "op": "ADD",
      "path": "37"
    },
    "14461": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30361,
        30382
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "14462": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30343,
        30382
      ],
      "op": "DUP8",
      "path": "37"
    },
    "14463": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30343,
        30382
      ],
      "op": "GT",
      "path": "37"
    },
    "14464": {
      "branch": 358,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30343,
        30382
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "14465": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x38BE"
    },
    "14468": {
      "branch": 358,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "14469": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14471": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14478": {
      "op": "SHL"
    },
    "14479": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14480": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14483": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "14485": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "DUP3",
      "path": "37"
    },
    "14486": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "ADD",
      "path": "37"
    },
    "14487": {
      "op": "MSTORE"
    },
    "14488": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "14490": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14492": {
      "op": "DUP3"
    },
    "14493": {
      "op": "ADD"
    },
    "14494": {
      "op": "MSTORE"
    },
    "14495": {
      "op": "PUSH15",
      "value": "0x4552525F4C494D49545F5052494345"
    },
    "14511": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "14513": {
      "op": "SHL"
    },
    "14514": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14516": {
      "op": "DUP3"
    },
    "14517": {
      "op": "ADD"
    },
    "14518": {
      "op": "MSTORE"
    },
    "14519": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14521": {
      "op": "ADD"
    },
    "14522": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "14525": {
      "op": "JUMP"
    },
    "14526": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30335,
        30402
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14527": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30452,
        30494
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 190,
      "value": "0x38CC"
    },
    "14530": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30457,
        30470
      ],
      "op": "DUP9",
      "path": "37"
    },
    "14531": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30472,
        30493
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14533": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30472,
        30493
      ],
      "op": "DUP12",
      "path": "37"
    },
    "14534": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30472,
        30493
      ],
      "op": "ADD",
      "path": "37"
    },
    "14535": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30472,
        30493
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "14536": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30452,
        30456
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4564"
    },
    "14539": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        30452,
        30494
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14540": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30452,
        30494
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14541": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30433,
        30448
      ],
      "op": "DUP5",
      "path": "37"
    },
    "14542": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30433,
        30494
      ],
      "op": "GT",
      "path": "37"
    },
    "14543": {
      "branch": 359,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30433,
        30494
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "14544": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x38EB"
    },
    "14547": {
      "branch": 359,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "14548": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14550": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14557": {
      "op": "SHL"
    },
    "14558": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14559": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14560": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "14562": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "ADD",
      "path": "37"
    },
    "14563": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "14566": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14567": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x58CA"
    },
    "14570": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        30412,
        30535
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14571": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30412,
        30535
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14572": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30630,
        30649
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 191,
      "value": "0x38FB"
    },
    "14575": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30630,
        30649
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14577": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30630,
        30649
      ],
      "op": "DUP12",
      "path": "37"
    },
    "14578": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30630,
        30649
      ],
      "op": "ADD",
      "path": "37"
    },
    "14579": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30630,
        30649
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14581": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30630,
        30649
      ],
      "op": "DUP13",
      "path": "37"
    },
    "14582": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30630,
        30649
      ],
      "op": "ADD",
      "path": "37"
    },
    "14583": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30630,
        30649
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "14586": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        30630,
        30649
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14587": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30630,
        30649
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14594": {
      "op": "SHL"
    },
    "14595": {
      "op": "SUB"
    },
    "14596": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "AND",
      "path": "37"
    },
    "14597": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30597,
        30616
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3911"
    },
    "14600": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30597,
        30616
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14602": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30597,
        30616
      ],
      "op": "DUP13",
      "path": "37"
    },
    "14603": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30597,
        30616
      ],
      "op": "ADD",
      "path": "37"
    },
    "14604": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30597,
        30613
      ],
      "op": "DUP13",
      "path": "37"
    },
    "14605": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30597,
        30616
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "14608": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        30597,
        30616
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14609": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30597,
        30616
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14616": {
      "op": "SHL"
    },
    "14617": {
      "op": "SUB"
    },
    "14618": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "AND",
      "path": "37"
    },
    "14619": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30573,
        30583
      ],
      "op": "CALLER",
      "path": "37"
    },
    "14620": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xBDAFE88494B31FC7436FE7992B0F377E874287E841E62EED1AD77E84F3C5B171"
    },
    "14653": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30663,
        30676
      ],
      "op": "DUP12",
      "path": "37"
    },
    "14654": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30690,
        30708
      ],
      "op": "DUP14",
      "path": "37"
    },
    "14655": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30709,
        30710
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "14657": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30690,
        30711
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14659": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30690,
        30711
      ],
      "op": "MUL",
      "path": "37"
    },
    "14660": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30690,
        30711
      ],
      "op": "ADD",
      "path": "37"
    },
    "14661": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30690,
        30711
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "14662": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30725,
        30740
      ],
      "op": "TIMESTAMP",
      "path": "37"
    },
    "14663": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30754,
        30762
      ],
      "op": "DUP13",
      "path": "37"
    },
    "14664": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30754,
        30770
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14666": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30754,
        30770
      ],
      "op": "ADD",
      "path": "37"
    },
    "14667": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30754,
        30770
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "14668": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30784,
        30793
      ],
      "op": "DUP13",
      "path": "37"
    },
    "14669": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30784,
        30801
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14671": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30784,
        30801
      ],
      "op": "ADD",
      "path": "37"
    },
    "14672": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30784,
        30801
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "14673": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30815,
        30829
      ],
      "op": "DUP16",
      "path": "37"
    },
    "14674": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14676": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14677": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3986"
    },
    "14680": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "SWAP7",
      "path": "37"
    },
    "14681": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "14682": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "14683": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "14684": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "14685": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "14686": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14687": {
      "op": "SWAP6"
    },
    "14688": {
      "op": "DUP7"
    },
    "14689": {
      "op": "MSTORE"
    },
    "14690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14692": {
      "op": "DUP7"
    },
    "14693": {
      "op": "ADD"
    },
    "14694": {
      "op": "SWAP5"
    },
    "14695": {
      "op": "SWAP1"
    },
    "14696": {
      "op": "SWAP5"
    },
    "14697": {
      "op": "MSTORE"
    },
    "14698": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14700": {
      "op": "DUP6"
    },
    "14701": {
      "op": "ADD"
    },
    "14702": {
      "op": "SWAP3"
    },
    "14703": {
      "op": "SWAP1"
    },
    "14704": {
      "op": "SWAP3"
    },
    "14705": {
      "op": "MSTORE"
    },
    "14706": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14708": {
      "op": "DUP5"
    },
    "14709": {
      "op": "ADD"
    },
    "14710": {
      "op": "MSTORE"
    },
    "14711": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14713": {
      "op": "DUP4"
    },
    "14714": {
      "op": "ADD"
    },
    "14715": {
      "op": "MSTORE"
    },
    "14716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14718": {
      "op": "DUP3"
    },
    "14719": {
      "op": "ADD"
    },
    "14720": {
      "op": "MSTORE"
    },
    "14721": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14723": {
      "op": "ADD"
    },
    "14724": {
      "op": "SWAP1"
    },
    "14725": {
      "op": "JUMP"
    },
    "14726": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14727": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14729": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14730": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "DUP1",
      "path": "37"
    },
    "14731": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "14732": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "SUB",
      "path": "37"
    },
    "14733": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14734": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30551,
        30839
      ],
      "op": "LOG4",
      "path": "37"
    },
    "14735": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30849,
        30912
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 192,
      "value": "0x39A5"
    },
    "14738": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30865,
        30884
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x399E"
    },
    "14741": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30865,
        30884
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14743": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30865,
        30884
      ],
      "op": "DUP13",
      "path": "37"
    },
    "14744": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30865,
        30884
      ],
      "op": "ADD",
      "path": "37"
    },
    "14745": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30865,
        30881
      ],
      "op": "DUP13",
      "path": "37"
    },
    "14746": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30865,
        30884
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "14749": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        30865,
        30884
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14750": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30865,
        30884
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14751": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30886,
        30896
      ],
      "op": "CALLER",
      "path": "37"
    },
    "14752": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30898,
        30911
      ],
      "op": "DUP11",
      "path": "37"
    },
    "14753": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30849,
        30864
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x490D"
    },
    "14756": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        30849,
        30912
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14757": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30849,
        30912
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14758": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30922,
        30952
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14760": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30955,
        31064
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x39C3"
    },
    "14763": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30973,
        30986
      ],
      "op": "DUP10",
      "path": "37"
    },
    "14764": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31000,
        31054
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1AAE"
    },
    "14767": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30973,
        30986
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14768": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31020,
        31053
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDA9"
    },
    "14771": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "14780": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31031,
        31049
      ],
      "op": "DUP16",
      "path": "37"
    },
    "14781": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31050,
        31051
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14783": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31031,
        31052
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x30E7"
    },
    "14786": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31031,
        31052
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14787": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30955,
        31064
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14788": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        30922,
        31064
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14789": {
      "op": "POP"
    },
    "14790": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31078,
        31099
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "14792": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31078,
        31099
      ],
      "op": "DUP11",
      "path": "37"
    },
    "14793": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31078,
        31099
      ],
      "op": "ADD",
      "path": "37"
    },
    "14794": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31078,
        31099
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "14795": {
      "branch": 360,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31078,
        31103
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "14796": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31074,
        31473
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3A31"
    },
    "14799": {
      "branch": 360,
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31074,
        31473
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "14800": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31119,
        31267
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 193,
      "value": "0x39DA"
    },
    "14803": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31177,
        31193
      ],
      "op": "DUP12",
      "path": "37"
    },
    "14804": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31194,
        31195
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "14806": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31177,
        31196
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3104"
    },
    "14809": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31177,
        31196
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14810": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31119,
        31267
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14811": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "PUSH32",
      "path": "37",
      "statement": 194,
      "value": "0x6D11837F46CC09B011CF4AAE09FCADE046C020AAC088090AE4F77FF67B707972"
    },
    "14844": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31320,
        31339
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3A0B"
    },
    "14847": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31320,
        31339
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "14849": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31320,
        31339
      ],
      "op": "DUP14",
      "path": "37"
    },
    "14850": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31320,
        31339
      ],
      "op": "ADD",
      "path": "37"
    },
    "14851": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31320,
        31339
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14853": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31320,
        31339
      ],
      "op": "DUP15",
      "path": "37"
    },
    "14854": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31320,
        31339
      ],
      "op": "ADD",
      "path": "37"
    },
    "14855": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31320,
        31339
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "14858": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        31320,
        31339
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14859": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31320,
        31339
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14860": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31380,
        31399
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3A18"
    },
    "14863": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31380,
        31399
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14865": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31380,
        31399
      ],
      "op": "DUP15",
      "path": "37"
    },
    "14866": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31380,
        31399
      ],
      "op": "ADD",
      "path": "37"
    },
    "14867": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31380,
        31396
      ],
      "op": "DUP15",
      "path": "37"
    },
    "14868": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31380,
        31399
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "14871": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        31380,
        31399
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14872": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31380,
        31399
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14873": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31426,
        31448
      ],
      "op": "DUP4",
      "path": "37"
    },
    "14874": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14876": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14877": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3A28"
    },
    "14880": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "14881": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "14882": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "14883": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14884": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5828"
    },
    "14887": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        31286,
        31462
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14888": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14889": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14891": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14892": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "DUP1",
      "path": "37"
    },
    "14893": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "14894": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "SUB",
      "path": "37"
    },
    "14895": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14896": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31286,
        31462
      ],
      "op": "LOG1",
      "path": "37"
    },
    "14897": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31074,
        31473
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14898": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31482,
        31553
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 195,
      "value": "0x31A6"
    },
    "14901": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31498,
        31517
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3A44"
    },
    "14904": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31498,
        31517
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14906": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31498,
        31517
      ],
      "op": "DUP14",
      "path": "37"
    },
    "14907": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31498,
        31517
      ],
      "op": "ADD",
      "path": "37"
    },
    "14908": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31498,
        31517
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14910": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31498,
        31517
      ],
      "op": "DUP15",
      "path": "37"
    },
    "14911": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31498,
        31517
      ],
      "op": "ADD",
      "path": "37"
    },
    "14912": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31498,
        31517
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x54DD"
    },
    "14915": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        31498,
        31517
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14916": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31498,
        31517
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14917": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31519,
        31529
      ],
      "op": "CALLER",
      "path": "37"
    },
    "14918": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31531,
        31552
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14920": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31531,
        31552
      ],
      "op": "DUP14",
      "path": "37"
    },
    "14921": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31531,
        31552
      ],
      "op": "ADD",
      "path": "37"
    },
    "14922": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31531,
        31552
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "14923": {
      "fn": "BPool.swapExactAmountOut",
      "offset": [
        31482,
        31497
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41DC"
    },
    "14926": {
      "fn": "BPool.swapExactAmountOut",
      "jump": "i",
      "offset": [
        31482,
        31553
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14927": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20242,
        21379
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14928": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20485,
        20506
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14930": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20508,
        20524
      ],
      "op": "DUP1",
      "path": "37"
    },
    "14931": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20539,
        20558
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14933": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20573,
        20604
      ],
      "op": "DUP1",
      "path": "37"
    },
    "14934": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20618,
        20649
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14936": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20674,
        20694
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 196,
      "value": "0x3A60"
    },
    "14939": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20686,
        20693
      ],
      "op": "DUP10",
      "path": "37"
    },
    "14940": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20674,
        20685
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "14943": {
      "fn": "BPool.getAmountInExactOut",
      "jump": "i",
      "offset": [
        20674,
        20694
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14944": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20674,
        20694
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14945": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20704,
        20725
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 197,
      "value": "0x3A69"
    },
    "14948": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20716,
        20724
      ],
      "op": "DUP9",
      "path": "37"
    },
    "14949": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20704,
        20715
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "14952": {
      "fn": "BPool.getAmountInExactOut",
      "jump": "i",
      "offset": [
        20704,
        20725
      ],
      "op": "JUMP",
      "path": "37"
    },
    "14953": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20704,
        20725
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "14954": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "14956": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "DUP1",
      "path": "37"
    },
    "14957": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "14958": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "14960": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14961": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "ADD",
      "path": "37"
    },
    "14962": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "DUP3",
      "path": "37"
    },
    "14963": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14970": {
      "op": "SHL"
    },
    "14971": {
      "op": "SUB"
    },
    "14972": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "DUP1",
      "path": "37"
    },
    "14973": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "DUP13",
      "path": "37"
    },
    "14974": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "AND",
      "path": "37"
    },
    "14975": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20757
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14977": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "14978": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14979": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14980": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20782
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "14982": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "14984": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14985": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "DUP2",
      "path": "37"
    },
    "14986": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14987": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "DUP6",
      "path": "37"
    },
    "14988": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "DUP4",
      "path": "37"
    },
    "14989": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20791
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "14990": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20799
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "14992": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20799
      ],
      "op": "DUP1",
      "path": "37"
    },
    "14993": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20799
      ],
      "op": "DUP3",
      "path": "37"
    },
    "14994": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20799
      ],
      "op": "ADD",
      "path": "37"
    },
    "14995": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20774,
        20799
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "14996": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "DUP8",
      "path": "37"
    },
    "14997": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "14998": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20813,
        20837
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "15000": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20813,
        20837
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "15001": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20813,
        20837
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15002": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20813,
        20837
      ],
      "op": "ADD",
      "path": "37"
    },
    "15003": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20813,
        20837
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15004": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "DUP4",
      "path": "37"
    },
    "15005": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "DUP9",
      "path": "37"
    },
    "15006": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "ADD",
      "path": "37"
    },
    "15007": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15008": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "15009": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "DUP16",
      "path": "37"
    },
    "15010": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "AND",
      "path": "37"
    },
    "15011": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "DUP1",
      "path": "37"
    },
    "15012": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "DUP6",
      "path": "37"
    },
    "15013": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15014": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "DUP4",
      "path": "37"
    },
    "15015": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "DUP4",
      "path": "37"
    },
    "15016": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15017": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "DUP8",
      "path": "37"
    },
    "15018": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "DUP6",
      "path": "37"
    },
    "15019": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20869
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "15020": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20877
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "15021": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20877
      ],
      "op": "DUP7",
      "path": "37"
    },
    "15022": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20877
      ],
      "op": "ADD",
      "path": "37"
    },
    "15023": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20851,
        20877
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15024": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "SWAP8",
      "path": "37"
    },
    "15025": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "DUP8",
      "path": "37"
    },
    "15026": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "ADD",
      "path": "37"
    },
    "15027": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "SWAP8",
      "path": "37"
    },
    "15028": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15029": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "SWAP8",
      "path": "37"
    },
    "15030": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15031": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20891,
        20909
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "15032": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20891,
        20909
      ],
      "op": "DUP4",
      "path": "37"
    },
    "15033": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20891,
        20909
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15034": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20891,
        20909
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15035": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20891,
        20916
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "15036": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20891,
        20916
      ],
      "op": "ADD",
      "path": "37"
    },
    "15037": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20891,
        20916
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15038": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "15040": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15041": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "ADD",
      "path": "37"
    },
    "15042": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15043": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20735,
        20926
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15044": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20971,
        20996
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3AEE"
    },
    "15047": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15049": {
      "op": "MLOAD"
    },
    "15050": {
      "op": "DUP1"
    },
    "15051": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15053": {
      "op": "ADD"
    },
    "15054": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15056": {
      "op": "MSTORE"
    },
    "15057": {
      "op": "DUP1"
    },
    "15058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15060": {
      "op": "DUP2"
    },
    "15061": {
      "op": "MSTORE"
    },
    "15062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15064": {
      "op": "ADD"
    },
    "15065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15067": {
      "op": "DUP2"
    },
    "15068": {
      "op": "MSTORE"
    },
    "15069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15071": {
      "op": "ADD"
    },
    "15072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15074": {
      "op": "DUP2"
    },
    "15075": {
      "op": "MSTORE"
    },
    "15076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15078": {
      "op": "ADD"
    },
    "15079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15081": {
      "op": "DUP2"
    },
    "15082": {
      "op": "MSTORE"
    },
    "15083": {
      "op": "POP"
    },
    "15084": {
      "op": "SWAP1"
    },
    "15085": {
      "op": "JUMP"
    },
    "15086": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        20971,
        20996
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15087": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        21077,
        21226
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 198,
      "value": "0x17B3"
    },
    "15090": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        21109,
        21113
      ],
      "op": "DUP4",
      "path": "37"
    },
    "15091": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        21131,
        21145
      ],
      "op": "DUP12",
      "path": "37"
    },
    "15092": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        21191,
        21212
      ],
      "op": "DUP12",
      "path": "37"
    },
    "15093": {
      "fn": "BPool.getAmountInExactOut",
      "offset": [
        21077,
        21091
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x199D"
    },
    "15096": {
      "fn": "BPool.getAmountInExactOut",
      "jump": "i",
      "offset": [
        21077,
        21226
      ],
      "op": "JUMP",
      "path": "37"
    },
    "15097": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        9244,
        9398
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15098": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "15100": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        3056,
        3062
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15101": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        9338,
        9361
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "15103": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        9338,
        9361
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15104": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "15106": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        3056,
        3062
      ],
      "op": "AND",
      "path": "37"
    },
    "15107": {
      "offset": [
        3055,
        3062
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "15108": {
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2821"
    },
    "15111": {
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "15112": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15114": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "15115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15121": {
      "op": "SHL"
    },
    "15122": {
      "offset": [
        3047,
        3078
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15123": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15124": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "15126": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "ADD",
      "path": "37"
    },
    "15127": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "15130": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15131": {
      "fn": "BPool.getCurrentTokens",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "15134": {
      "fn": "BPool.getCurrentTokens",
      "jump": "i",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMP",
      "path": "37"
    },
    "15135": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3866,
        4114
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "15136": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3995,
        4005
      ],
      "op": "CALLER",
      "path": "38",
      "statement": 199
    },
    "15137": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3933,
        3937
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "15139": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "15140": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "DUP2",
      "path": "38"
    },
    "15141": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "15142": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        3994
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "15144": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "15146": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "15147": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "DUP2",
      "path": "38"
    },
    "15148": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "15149": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "15151": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "DUP1",
      "path": "38"
    },
    "15152": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "DUP4",
      "path": "38"
    },
    "15153": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4006
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "15154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15160": {
      "op": "SHL"
    },
    "15161": {
      "op": "SUB"
    },
    "15162": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4011
      ],
      "op": "DUP7",
      "path": "38"
    },
    "15163": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4011
      ],
      "op": "AND",
      "path": "38"
    },
    "15164": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4011
      ],
      "op": "DUP5",
      "path": "38"
    },
    "15165": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4011
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "15166": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4011
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "15167": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4011
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "15168": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4011
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "15169": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4011
      ],
      "op": "DUP2",
      "path": "38"
    },
    "15170": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4011
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "15171": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3984,
        4011
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "15172": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3979,
        4017
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3B4D"
    },
    "15175": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3979,
        4017
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "15176": {
      "fn": "BToken.increaseApproval",
      "offset": [
        4013,
        4016
      ],
      "op": "DUP4",
      "path": "38"
    },
    "15177": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3979,
        3983
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x480B"
    },
    "15180": {
      "fn": "BToken.increaseApproval",
      "jump": "i",
      "offset": [
        3979,
        4017
      ],
      "op": "JUMP",
      "path": "38"
    },
    "15181": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3979,
        4017
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "15182": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3960,
        3970
      ],
      "op": "CALLER",
      "path": "38"
    },
    "15183": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "15185": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "DUP2",
      "path": "38"
    },
    "15186": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "DUP2",
      "path": "38"
    },
    "15187": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "15188": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3959
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x8"
    },
    "15190": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "15192": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "15193": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "DUP2",
      "path": "38"
    },
    "15194": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "15195": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "15197": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "DUP1",
      "path": "38"
    },
    "15198": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "DUP4",
      "path": "38"
    },
    "15199": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3971
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "15200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15206": {
      "op": "SHL"
    },
    "15207": {
      "op": "SUB"
    },
    "15208": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "DUP10",
      "path": "38"
    },
    "15209": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "AND",
      "path": "38"
    },
    "15210": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "DUP1",
      "path": "38"
    },
    "15211": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "DUP6",
      "path": "38"
    },
    "15212": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "15213": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "15214": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "DUP4",
      "path": "38"
    },
    "15215": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "15216": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "15217": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "DUP2",
      "path": "38"
    },
    "15218": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "15219": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "15220": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        4017
      ],
      "op": "DUP6",
      "path": "38"
    },
    "15221": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        4017
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "15222": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        4017
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "15223": {
      "fn": "BToken.increaseApproval",
      "offset": [
        4032,
        4086
      ],
      "op": "MLOAD",
      "path": "38",
      "statement": 200
    },
    "15224": {
      "op": "SWAP4"
    },
    "15225": {
      "op": "DUP5"
    },
    "15226": {
      "op": "MSTORE"
    },
    "15227": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "15228": {
      "fn": "BToken.increaseApproval",
      "offset": [
        3949,
        3976
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "15229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15231": {
      "op": "DUP1"
    },
    "15232": {
      "op": "MLOAD"
    },
    "15233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15235": {
      "op": "PUSH2",
      "value": "0x5944"
    },
    "15238": {
      "op": "DUP4"
    },
    "15239": {
      "op": "CODECOPY"
    },
    "15240": {
      "op": "DUP2"
    },
    "15241": {
      "op": "MLOAD"
    },
    "15242": {
      "op": "SWAP2"
    },
    "15243": {
      "op": "MSTORE"
    },
    "15244": {
      "fn": "BToken.increaseApproval",
      "offset": [
        4032,
        4086
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "15245": {
      "op": "ADD"
    },
    "15246": {
      "fn": "BToken.increaseApproval",
      "offset": [
        4032,
        4086
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA4E"
    },
    "15249": {
      "op": "JUMP"
    },
    "15250": {
      "offset": [
        1628,
        1677
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "15251": {
      "offset": [
        1669,
        1677
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA73"
    },
    "15254": {
      "offset": [
        1676,
        1677
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "15256": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "15265": {
      "offset": [
        1669,
        1677
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "15268": {
      "fn": "BToken.increaseApproval",
      "jump": "i",
      "offset": [
        1669,
        1677
      ],
      "op": "JUMP",
      "path": "33"
    },
    "15269": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14180,
        14430
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15270": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "15272": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3056,
        3062
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15273": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14290,
        14297
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "15275": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14290,
        14297
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15276": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "15278": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3056,
        3062
      ],
      "op": "AND",
      "path": "37"
    },
    "15279": {
      "offset": [
        3055,
        3062
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "15280": {
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3BCB"
    },
    "15283": {
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "15284": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15286": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "15287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15293": {
      "op": "SHL"
    },
    "15294": {
      "offset": [
        3047,
        3078
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15295": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15296": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "15298": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "ADD",
      "path": "37"
    },
    "15299": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "15302": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15303": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "15306": {
      "fn": "BPool.getNormalizedWeight",
      "jump": "i",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMP",
      "path": "37"
    },
    "15307": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15308": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14313,
        14331
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 201,
      "value": "0x3BD4"
    },
    "15311": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14325,
        14330
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15312": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14313,
        14324
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "15315": {
      "fn": "BPool.getNormalizedWeight",
      "jump": "i",
      "offset": [
        14313,
        14331
      ],
      "op": "JUMP",
      "path": "37"
    },
    "15316": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14313,
        14331
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15323": {
      "op": "SHL"
    },
    "15324": {
      "op": "SUB"
    },
    "15325": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14373
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15326": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14373
      ],
      "op": "AND",
      "path": "37"
    },
    "15327": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14341,
        14355
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "15329": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14373
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15330": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14373
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15331": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14373
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15332": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14366
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "15334": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14373
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "15336": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14373
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15337": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14373
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15339": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14373
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15340": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14373
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "15341": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14380
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "15343": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14380
      ],
      "op": "ADD",
      "path": "37"
    },
    "15344": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14380
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15345": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14410,
        14422
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 202,
      "value": "0xE"
    },
    "15347": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14410,
        14422
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15348": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14397,
        14423
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x9FE"
    },
    "15351": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14397,
        14423
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15352": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14380
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15353": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14358,
        14380
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15354": {
      "fn": "BPool.getNormalizedWeight",
      "offset": [
        14397,
        14401
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4564"
    },
    "15357": {
      "fn": "BPool.getNormalizedWeight",
      "jump": "i",
      "offset": [
        14397,
        14423
      ],
      "op": "JUMP",
      "path": "37"
    },
    "15358": {
      "fn": "BPool.getBalance",
      "offset": [
        14569,
        14758
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15359": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "15361": {
      "fn": "BPool.getBalance",
      "offset": [
        3056,
        3062
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15362": {
      "fn": "BPool.getBalance",
      "offset": [
        14670,
        14677
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "15364": {
      "fn": "BPool.getBalance",
      "offset": [
        14670,
        14677
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15365": {
      "offset": [
        3056,
        3062
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "15367": {
      "fn": "BPool.getBalance",
      "offset": [
        3056,
        3062
      ],
      "op": "AND",
      "path": "37"
    },
    "15368": {
      "offset": [
        3055,
        3062
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "15369": {
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3C24"
    },
    "15372": {
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "15373": {
      "fn": "BPool.getBalance",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15375": {
      "fn": "BPool.getBalance",
      "offset": [
        3047,
        3078
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "15376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15382": {
      "op": "SHL"
    },
    "15383": {
      "offset": [
        3047,
        3078
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15384": {
      "fn": "BPool.getBalance",
      "offset": [
        3047,
        3078
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15385": {
      "fn": "BPool.getBalance",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "15387": {
      "fn": "BPool.getBalance",
      "offset": [
        3047,
        3078
      ],
      "op": "ADD",
      "path": "37"
    },
    "15388": {
      "fn": "BPool.getBalance",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "15391": {
      "fn": "BPool.getBalance",
      "offset": [
        3047,
        3078
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15392": {
      "fn": "BPool.getBalance",
      "offset": [
        3047,
        3078
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x56D3"
    },
    "15395": {
      "fn": "BPool.getBalance",
      "jump": "i",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMP",
      "path": "37"
    },
    "15396": {
      "fn": "BPool.getBalance",
      "offset": [
        3047,
        3078
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15397": {
      "fn": "BPool.getBalance",
      "offset": [
        14693,
        14711
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 203,
      "value": "0x3C2D"
    },
    "15400": {
      "fn": "BPool.getBalance",
      "offset": [
        14705,
        14710
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15401": {
      "fn": "BPool.getBalance",
      "offset": [
        14693,
        14704
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CA9"
    },
    "15404": {
      "fn": "BPool.getBalance",
      "jump": "i",
      "offset": [
        14693,
        14711
      ],
      "op": "JUMP",
      "path": "37"
    },
    "15405": {
      "fn": "BPool.getBalance",
      "offset": [
        14693,
        14711
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15406": {
      "op": "POP"
    },
    "15407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15413": {
      "op": "SHL"
    },
    "15414": {
      "op": "SUB"
    },
    "15415": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14743
      ],
      "op": "AND",
      "path": "37",
      "statement": 204
    },
    "15416": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14743
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "15418": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14743
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15419": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14743
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15420": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14743
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15421": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14736
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "15423": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14743
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "15425": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14743
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15426": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14743
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15428": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14743
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15429": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14743
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "15430": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14751
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "15432": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14751
      ],
      "op": "ADD",
      "path": "37"
    },
    "15433": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14751
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15434": {
      "fn": "BPool.getBalance",
      "offset": [
        14728,
        14751
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15435": {
      "fn": "BPool.getBalance",
      "jump": "o",
      "offset": [
        14569,
        14758
      ],
      "op": "JUMP",
      "path": "37"
    },
    "15436": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38414,
        38791
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15443": {
      "op": "SHL"
    },
    "15444": {
      "op": "SUB"
    },
    "15445": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15446": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "AND",
      "path": "37"
    },
    "15447": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38530,
        38551
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "15449": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15450": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15451": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15452": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38600
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "15454": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "15456": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15457": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15458": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15459": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15461": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "DUP1",
      "path": "37"
    },
    "15462": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "DUP4",
      "path": "37"
    },
    "15463": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38592,
        38609
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "15464": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15465": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "15466": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "15468": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15469": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "ADD",
      "path": "37"
    },
    "15470": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP4",
      "path": "37"
    },
    "15471": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15472": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15473": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15474": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "15476": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "AND",
      "path": "37"
    },
    "15477": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "15478": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "15479": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15480": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15481": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "15483": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15484": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "ADD",
      "path": "37"
    },
    "15485": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15486": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "15487": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15488": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "ADD",
      "path": "37"
    },
    "15489": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "15490": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15491": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "15492": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15493": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "15495": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15496": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "ADD",
      "path": "37"
    },
    "15497": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15498": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "15499": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP4",
      "path": "37"
    },
    "15500": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "ADD",
      "path": "37"
    },
    "15501": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "15502": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15503": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "15504": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15505": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "15507": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "ADD",
      "path": "37"
    },
    "15508": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15509": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "15511": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15512": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "ADD",
      "path": "37"
    },
    "15513": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15514": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15515": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15516": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38704,
        38716
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 205,
      "value": "0x9"
    },
    "15518": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38704,
        38716
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15519": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38636,
        38753
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1938"
    },
    "15522": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38636,
        38753
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "15523": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38567,
        38609
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15524": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38730,
        38743
      ],
      "op": "DUP6",
      "path": "37"
    },
    "15525": {
      "fn": "BPool.calcSingleInPoolOut",
      "offset": [
        38636,
        38660
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x485D"
    },
    "15528": {
      "fn": "BPool.calcSingleInPoolOut",
      "jump": "i",
      "offset": [
        38636,
        38753
      ],
      "op": "JUMP",
      "path": "37"
    },
    "15529": {
      "fn": "BPool._checkBound",
      "offset": [
        8812,
        8926
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15536": {
      "op": "SHL"
    },
    "15537": {
      "op": "SUB"
    },
    "15538": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 206
    },
    "15539": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "AND",
      "path": "37"
    },
    "15540": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "15542": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15543": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15544": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15545": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8888
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "15547": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "15549": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15550": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15552": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15553": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8895
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "15554": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8901
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15555": {
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8901
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "15557": {
      "branch": 361,
      "fn": "BPool._checkBound",
      "offset": [
        8880,
        8901
      ],
      "op": "AND",
      "path": "37"
    },
    "15558": {
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3D01"
    },
    "15561": {
      "branch": 361,
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "15562": {
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15564": {
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "15565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15571": {
      "op": "SHL"
    },
    "15572": {
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15573": {
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15576": {
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "15578": {
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15579": {
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "ADD",
      "path": "37"
    },
    "15580": {
      "op": "MSTORE"
    },
    "15581": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "15583": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15585": {
      "op": "DUP3"
    },
    "15586": {
      "op": "ADD"
    },
    "15587": {
      "op": "MSTORE"
    },
    "15588": {
      "op": "PUSH13",
      "value": "0x11549497D393D517D093D55391"
    },
    "15602": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "15604": {
      "op": "SHL"
    },
    "15605": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15607": {
      "op": "DUP3"
    },
    "15608": {
      "op": "ADD"
    },
    "15609": {
      "op": "MSTORE"
    },
    "15610": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15612": {
      "op": "ADD"
    },
    "15613": {
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "15616": {
      "op": "JUMP"
    },
    "15617": {
      "fn": "BPool._checkBound",
      "offset": [
        8872,
        8919
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15618": {
      "fn": "BPool._checkBound",
      "offset": [
        8812,
        8926
      ],
      "op": "POP",
      "path": "37"
    },
    "15619": {
      "fn": "BPool._checkBound",
      "jump": "o",
      "offset": [
        8812,
        8926
      ],
      "op": "JUMP",
      "path": "37"
    },
    "15620": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2600,
        3181
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "15621": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2813,
        2827
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "15623": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2864,
        2874
      ],
      "op": "DUP1",
      "path": "35"
    },
    "15624": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2877,
        2912
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3D11"
    },
    "15627": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2882,
        2896
      ],
      "op": "DUP8",
      "path": "35"
    },
    "15628": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2898,
        2911
      ],
      "op": "DUP8",
      "path": "35"
    },
    "15629": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2877,
        2881
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4564"
    },
    "15632": {
      "fn": "BMath.calcSpotPrice",
      "jump": "i",
      "offset": [
        2877,
        2912
      ],
      "op": "JUMP",
      "path": "35"
    },
    "15633": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2877,
        2912
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "15634": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2864,
        2912
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "15635": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2864,
        2912
      ],
      "op": "POP",
      "path": "35"
    },
    "15636": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2922,
        2932
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "15638": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2935,
        2972
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3D1F"
    },
    "15641": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2940,
        2955
      ],
      "op": "DUP7",
      "path": "35"
    },
    "15642": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2957,
        2971
      ],
      "op": "DUP7",
      "path": "35"
    },
    "15643": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2935,
        2939
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4564"
    },
    "15646": {
      "fn": "BMath.calcSpotPrice",
      "jump": "i",
      "offset": [
        2935,
        2972
      ],
      "op": "JUMP",
      "path": "35"
    },
    "15647": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2935,
        2972
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "15648": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2922,
        2972
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "15649": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2922,
        2972
      ],
      "op": "POP",
      "path": "35"
    },
    "15650": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2982,
        2992
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "15652": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2995,
        3013
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3D2D"
    },
    "15655": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3000,
        3005
      ],
      "op": "DUP4",
      "path": "35"
    },
    "15656": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3007,
        3012
      ],
      "op": "DUP4",
      "path": "35"
    },
    "15657": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2995,
        2999
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4564"
    },
    "15660": {
      "fn": "BMath.calcSpotPrice",
      "jump": "i",
      "offset": [
        2995,
        3013
      ],
      "op": "JUMP",
      "path": "35"
    },
    "15661": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2995,
        3013
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "15662": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2982,
        3013
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "15663": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2982,
        3013
      ],
      "op": "POP",
      "path": "35"
    },
    "15664": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3023,
        3033
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "15666": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3036,
        3117
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3D76"
    },
    "15669": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "15678": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3047,
        3116
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A8B"
    },
    "15681": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "15690": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3101,
        3115
      ],
      "op": "DUP10",
      "path": "35"
    },
    "15691": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3079,
        3100
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "15693": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3079,
        3100
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "15694": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3067,
        3078
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3D55"
    },
    "15697": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3067,
        3076
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x168F"
    },
    "15700": {
      "fn": "BMath.calcSpotPrice",
      "jump": "i",
      "offset": [
        3067,
        3078
      ],
      "op": "JUMP",
      "path": "35"
    },
    "15701": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3067,
        3078
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "15702": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3066
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "15704": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3066
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "15705": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3078
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3D62"
    },
    "15708": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3078
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "15709": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3078
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "15710": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3078
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57A9"
    },
    "15713": {
      "fn": "BMath.calcSpotPrice",
      "jump": "i",
      "offset": [
        3058,
        3078
      ],
      "op": "JUMP",
      "path": "35"
    },
    "15714": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3078
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "15715": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3100
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3D6C"
    },
    "15718": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3100
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "15719": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3100
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "15720": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3100
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57A9"
    },
    "15723": {
      "fn": "BMath.calcSpotPrice",
      "jump": "i",
      "offset": [
        3058,
        3100
      ],
      "op": "JUMP",
      "path": "35"
    },
    "15724": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3100
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "15725": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3115
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAE"
    },
    "15728": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3115
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "15729": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3115
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "15730": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3058,
        3115
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57A9"
    },
    "15733": {
      "fn": "BMath.calcSpotPrice",
      "jump": "i",
      "offset": [
        3058,
        3115
      ],
      "op": "JUMP",
      "path": "35"
    },
    "15734": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3036,
        3117
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "15735": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3023,
        3117
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "15736": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3023,
        3117
      ],
      "op": "POP",
      "path": "35"
    },
    "15737": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3155,
        3173
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 207,
      "value": "0x3D82"
    },
    "15740": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3160,
        3165
      ],
      "op": "DUP3",
      "path": "35"
    },
    "15741": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3167,
        3172
      ],
      "op": "DUP3",
      "path": "35"
    },
    "15742": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3155,
        3159
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4087"
    },
    "15745": {
      "fn": "BMath.calcSpotPrice",
      "jump": "i",
      "offset": [
        3155,
        3173
      ],
      "op": "JUMP",
      "path": "35"
    },
    "15746": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3155,
        3173
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "15747": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        3143,
        3173
      ],
      "op": "SWAP11",
      "path": "35"
    },
    "15748": {
      "fn": "BMath.calcSpotPrice",
      "offset": [
        2600,
        3181
      ],
      "op": "SWAP10",
      "path": "35"
    },
    "15749": {
      "op": "POP"
    },
    "15750": {
      "op": "POP"
    },
    "15751": {
      "op": "POP"
    },
    "15752": {
      "op": "POP"
    },
    "15753": {
      "op": "POP"
    },
    "15754": {
      "op": "POP"
    },
    "15755": {
      "op": "POP"
    },
    "15756": {
      "op": "POP"
    },
    "15757": {
      "op": "POP"
    },
    "15758": {
      "op": "POP"
    },
    "15759": {
      "fn": "BMath.calcSpotPrice",
      "jump": "o",
      "offset": [
        2600,
        3181
      ],
      "op": "JUMP",
      "path": "35"
    },
    "15760": {
      "fn": "BPool.bind",
      "offset": [
        16749,
        17387
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15761": {
      "fn": "BPool.bind",
      "offset": [
        16882,
        16893
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 208,
      "value": "0xA"
    },
    "15763": {
      "fn": "BPool.bind",
      "offset": [
        16882,
        16893
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15764": {
      "fn": "BPool.bind",
      "offset": [
        16882,
        16893
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "15767": {
      "fn": "BPool.bind",
      "offset": [
        16882,
        16893
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15768": {
      "fn": "BPool.bind",
      "offset": [
        16882,
        16893
      ],
      "op": "DIV",
      "path": "37"
    },
    "15769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15775": {
      "op": "SHL"
    },
    "15776": {
      "op": "SUB"
    },
    "15777": {
      "fn": "BPool.bind",
      "offset": [
        16882,
        16893
      ],
      "op": "AND",
      "path": "37"
    },
    "15778": {
      "fn": "BPool.bind",
      "offset": [
        16868,
        16878
      ],
      "op": "CALLER",
      "path": "37"
    },
    "15779": {
      "branch": 362,
      "fn": "BPool.bind",
      "offset": [
        16868,
        16893
      ],
      "op": "EQ",
      "path": "37"
    },
    "15780": {
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3DE4"
    },
    "15783": {
      "branch": 362,
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "15784": {
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15786": {
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "15787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15793": {
      "op": "SHL"
    },
    "15794": {
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15795": {
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15798": {
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "15800": {
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15801": {
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "ADD",
      "path": "37"
    },
    "15802": {
      "op": "MSTORE"
    },
    "15803": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "15805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15807": {
      "op": "DUP3"
    },
    "15808": {
      "op": "ADD"
    },
    "15809": {
      "op": "MSTORE"
    },
    "15810": {
      "op": "PUSH18",
      "value": "0x22A9292FA727AA2FA1A7A72A2927A62622A9"
    },
    "15829": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "15831": {
      "op": "SHL"
    },
    "15832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15834": {
      "op": "DUP3"
    },
    "15835": {
      "op": "ADD"
    },
    "15836": {
      "op": "MSTORE"
    },
    "15837": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15839": {
      "op": "ADD"
    },
    "15840": {
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "15843": {
      "op": "JUMP"
    },
    "15844": {
      "fn": "BPool.bind",
      "offset": [
        16860,
        16916
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15851": {
      "op": "SHL"
    },
    "15852": {
      "op": "SUB"
    },
    "15853": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 209
    },
    "15854": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "AND",
      "path": "37"
    },
    "15855": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "15857": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15858": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15859": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15860": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16943
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "15862": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "15864": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15865": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15867": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15868": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16950
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "15869": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16956
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15870": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16956
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "15872": {
      "fn": "BPool.bind",
      "offset": [
        16935,
        16956
      ],
      "op": "AND",
      "path": "37"
    },
    "15873": {
      "branch": 363,
      "fn": "BPool.bind",
      "offset": [
        16934,
        16956
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "15874": {
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3E3C"
    },
    "15877": {
      "branch": 363,
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "15878": {
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15880": {
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "15881": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15885": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15887": {
      "op": "SHL"
    },
    "15888": {
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15889": {
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15892": {
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "15894": {
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15895": {
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "ADD",
      "path": "37"
    },
    "15896": {
      "op": "MSTORE"
    },
    "15897": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "15899": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15901": {
      "op": "DUP3"
    },
    "15902": {
      "op": "ADD"
    },
    "15903": {
      "op": "MSTORE"
    },
    "15904": {
      "op": "PUSH12",
      "value": "0x11549497D254D7D093D55391"
    },
    "15917": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "15919": {
      "op": "SHL"
    },
    "15920": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15922": {
      "op": "DUP3"
    },
    "15923": {
      "op": "ADD"
    },
    "15924": {
      "op": "MSTORE"
    },
    "15925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15927": {
      "op": "ADD"
    },
    "15928": {
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "15931": {
      "op": "JUMP"
    },
    "15932": {
      "fn": "BPool.bind",
      "offset": [
        16926,
        16973
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "15933": {
      "fn": "BPool.bind",
      "offset": [
        16992,
        17002
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 210,
      "value": "0xB"
    },
    "15935": {
      "fn": "BPool.bind",
      "offset": [
        16992,
        17002
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "15936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15940": {
      "op": "SHL"
    },
    "15941": {
      "fn": "BPool.bind",
      "offset": [
        16992,
        17002
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "15942": {
      "fn": "BPool.bind",
      "offset": [
        16992,
        17002
      ],
      "op": "DIV",
      "path": "37"
    },
    "15943": {
      "fn": "BPool.bind",
      "offset": [
        16992,
        17002
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "15945": {
      "fn": "BPool.bind",
      "offset": [
        16992,
        17002
      ],
      "op": "AND",
      "path": "37"
    },
    "15946": {
      "branch": 364,
      "fn": "BPool.bind",
      "offset": [
        16991,
        17002
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "15947": {
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3E89"
    },
    "15950": {
      "branch": 364,
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "15951": {
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "15953": {
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "15954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15960": {
      "op": "SHL"
    },
    "15961": {
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "DUP2",
      "path": "37"
    },
    "15962": {
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "15963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15965": {
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "15967": {
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "DUP3",
      "path": "37"
    },
    "15968": {
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "ADD",
      "path": "37"
    },
    "15969": {
      "op": "MSTORE"
    },
    "15970": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "15972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15974": {
      "op": "DUP3"
    },
    "15975": {
      "op": "ADD"
    },
    "15976": {
      "op": "MSTORE"
    },
    "15977": {
      "op": "PUSH16",
      "value": "0x11549497D254D7D19253905312569151"
    },
    "15994": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "15996": {
      "op": "SHL"
    },
    "15997": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15999": {
      "op": "DUP3"
    },
    "16000": {
      "op": "ADD"
    },
    "16001": {
      "op": "MSTORE"
    },
    "16002": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16004": {
      "op": "ADD"
    },
    "16005": {
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "16008": {
      "op": "JUMP"
    },
    "16009": {
      "fn": "BPool.bind",
      "offset": [
        16983,
        17023
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "16010": {
      "fn": "BPool.bind",
      "offset": [
        17042,
        17049
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 211,
      "value": "0xC"
    },
    "16012": {
      "fn": "BPool.bind",
      "offset": [
        17042,
        17056
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "16013": {
      "offset": [
        1002,
        1003
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "16015": {
      "op": "GT"
    },
    "16016": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3ECC"
    },
    "16019": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "16020": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "16022": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "16023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16029": {
      "op": "SHL"
    },
    "16030": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "DUP2",
      "path": "37"
    },
    "16031": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "16032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16034": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "16036": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "DUP3",
      "path": "37"
    },
    "16037": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "ADD",
      "path": "37"
    },
    "16038": {
      "op": "MSTORE"
    },
    "16039": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "16041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16043": {
      "op": "DUP3"
    },
    "16044": {
      "op": "ADD"
    },
    "16045": {
      "op": "MSTORE"
    },
    "16046": {
      "op": "PUSH14",
      "value": "0x4552525F4D41585F544F4B454E53"
    },
    "16061": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "16063": {
      "op": "SHL"
    },
    "16064": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16066": {
      "op": "DUP3"
    },
    "16067": {
      "op": "ADD"
    },
    "16068": {
      "op": "MSTORE"
    },
    "16069": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16071": {
      "op": "ADD"
    },
    "16072": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "16075": {
      "op": "JUMP"
    },
    "16076": {
      "fn": "BPool.bind",
      "offset": [
        17034,
        17094
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "16077": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 212,
      "value": "0x40"
    },
    "16079": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP1",
      "path": "37"
    },
    "16080": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "16081": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "16083": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP2",
      "path": "37"
    },
    "16084": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "ADD",
      "path": "37"
    },
    "16085": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP3",
      "path": "37"
    },
    "16086": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "16087": {
      "fn": "BPool.bind",
      "offset": [
        17151,
        17155
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "16089": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP1",
      "path": "37"
    },
    "16090": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP3",
      "path": "37"
    },
    "16091": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "16092": {
      "fn": "BPool.bind",
      "offset": [
        17176,
        17183
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xC"
    },
    "16094": {
      "fn": "BPool.bind",
      "offset": [
        17176,
        17190
      ],
      "op": "DUP1",
      "path": "37"
    },
    "16095": {
      "fn": "BPool.bind",
      "offset": [
        17176,
        17190
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "16096": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "16098": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP1",
      "path": "37"
    },
    "16099": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP6",
      "path": "37"
    },
    "16100": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "ADD",
      "path": "37"
    },
    "16101": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "16102": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP3",
      "path": "37"
    },
    "16103": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "16104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16106": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP6",
      "path": "37"
    },
    "16107": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP8",
      "path": "37"
    },
    "16108": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "ADD",
      "path": "37"
    },
    "16109": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP2",
      "path": "37"
    },
    "16110": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP2",
      "path": "37"
    },
    "16111": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "16112": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "16114": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP8",
      "path": "37"
    },
    "16115": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "ADD",
      "path": "37"
    },
    "16116": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP3",
      "path": "37"
    },
    "16117": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "DUP2",
      "path": "37"
    },
    "16118": {
      "fn": "BPool.bind",
      "offset": [
        17123,
        17311
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "16119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16125": {
      "op": "SHL"
    },
    "16126": {
      "op": "SUB"
    },
    "16127": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "DUP13",
      "path": "37"
    },
    "16128": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "AND",
      "path": "37"
    },
    "16129": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "DUP1",
      "path": "37"
    },
    "16130": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "DUP5",
      "path": "37"
    },
    "16131": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "16132": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17113
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "16134": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "16135": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "16136": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "16137": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "SWAP8",
      "path": "37"
    },
    "16138": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "DUP3",
      "path": "37"
    },
    "16139": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "16140": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SWAP7",
      "path": "37"
    },
    "16141": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "16142": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "DUP8",
      "path": "37"
    },
    "16143": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "16144": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16146": {
      "op": "NOT"
    },
    "16147": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "AND",
      "path": "37"
    },
    "16148": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "16149": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "16150": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "16151": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "OR",
      "path": "37"
    },
    "16152": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "DUP8",
      "path": "37"
    },
    "16153": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "16154": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "16155": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "16156": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "DUP7",
      "path": "37"
    },
    "16157": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "DUP7",
      "path": "37"
    },
    "16158": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "ADD",
      "path": "37"
    },
    "16159": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "16160": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "16161": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "16162": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "16164": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "DUP7",
      "path": "37"
    },
    "16165": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "ADD",
      "path": "37"
    },
    "16166": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "16167": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "16168": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "16169": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "16171": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "16172": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "16173": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "ADD",
      "path": "37"
    },
    "16174": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "16175": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "16176": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "16177": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17311
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "16178": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 213
    },
    "16179": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "16180": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "16181": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "DUP3",
      "path": "37"
    },
    "16182": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "ADD",
      "path": "37"
    },
    "16183": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "DUP2",
      "path": "37"
    },
    "16184": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "16185": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "16186": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "16187": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "16188": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7"
    },
    "16221": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "ADD",
      "path": "37"
    },
    "16222": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "DUP1",
      "path": "37"
    },
    "16223": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "16224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16230": {
      "op": "SHL"
    },
    "16231": {
      "op": "SUB"
    },
    "16232": {
      "op": "NOT"
    },
    "16233": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "AND",
      "path": "37"
    },
    "16234": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "16235": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "16236": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "OR",
      "path": "37"
    },
    "16237": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "16238": {
      "fn": "BPool.bind",
      "offset": [
        17321,
        17340
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "16239": {
      "fn": "BPool.bind",
      "offset": [
        17350,
        17380
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 214,
      "value": "0x3F79"
    },
    "16242": {
      "fn": "BPool.bind",
      "offset": [
        17105,
        17120
      ],
      "op": "DUP4",
      "path": "37"
    },
    "16243": {
      "fn": "BPool.bind",
      "offset": [
        17364,
        17371
      ],
      "op": "DUP4",
      "path": "37"
    },
    "16244": {
      "fn": "BPool.bind",
      "offset": [
        17373,
        17379
      ],
      "op": "DUP4",
      "path": "37"
    },
    "16245": {
      "fn": "BPool.bind",
      "offset": [
        17350,
        17356
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4AF2"
    },
    "16248": {
      "fn": "BPool.bind",
      "jump": "i",
      "offset": [
        17350,
        17380
      ],
      "op": "JUMP",
      "path": "37"
    },
    "16249": {
      "fn": "BPool.bind",
      "offset": [
        17350,
        17380
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "16250": {
      "fn": "BPool.bind",
      "offset": [
        16749,
        17387
      ],
      "op": "POP",
      "path": "37"
    },
    "16251": {
      "fn": "BPool.bind",
      "offset": [
        16749,
        17387
      ],
      "op": "POP",
      "path": "37"
    },
    "16252": {
      "fn": "BPool.bind",
      "offset": [
        16749,
        17387
      ],
      "op": "POP",
      "path": "37"
    },
    "16253": {
      "fn": "BPool.bind",
      "jump": "o",
      "offset": [
        16749,
        17387
      ],
      "op": "JUMP",
      "path": "37"
    },
    "16254": {
      "fn": "BPool.finalize",
      "offset": [
        16367,
        16555
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "16255": {
      "fn": "BPool.finalize",
      "offset": [
        16406,
        16416
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 215,
      "value": "0xB"
    },
    "16257": {
      "fn": "BPool.finalize",
      "offset": [
        16406,
        16423
      ],
      "op": "DUP1",
      "path": "37"
    },
    "16258": {
      "fn": "BPool.finalize",
      "offset": [
        16406,
        16423
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "16259": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16263": {
      "op": "SHL"
    },
    "16264": {
      "op": "NOT"
    },
    "16265": {
      "fn": "BPool.finalize",
      "offset": [
        16406,
        16423
      ],
      "op": "AND",
      "path": "37"
    },
    "16266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16270": {
      "op": "SHL"
    },
    "16271": {
      "fn": "BPool.finalize",
      "offset": [
        16406,
        16423
      ],
      "op": "OR",
      "path": "37"
    },
    "16272": {
      "fn": "BPool.finalize",
      "offset": [
        16406,
        16423
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "16273": {
      "fn": "BPool.finalize",
      "offset": [
        16406,
        16423
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "16274": {
      "fn": "BPool.finalize",
      "offset": [
        16433,
        16444
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 216,
      "value": "0xA"
    },
    "16276": {
      "fn": "BPool.finalize",
      "offset": [
        16433,
        16451
      ],
      "op": "DUP1",
      "path": "37"
    },
    "16277": {
      "fn": "BPool.finalize",
      "offset": [
        16433,
        16451
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "16278": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16280": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "16282": {
      "op": "SHL"
    },
    "16283": {
      "op": "NOT"
    },
    "16284": {
      "fn": "BPool.finalize",
      "offset": [
        16433,
        16451
      ],
      "op": "AND",
      "path": "37"
    },
    "16285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16287": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "16289": {
      "op": "SHL"
    },
    "16290": {
      "fn": "BPool.finalize",
      "offset": [
        16433,
        16451
      ],
      "op": "OR",
      "path": "37"
    },
    "16291": {
      "fn": "BPool.finalize",
      "offset": [
        16433,
        16451
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "16292": {
      "fn": "BPool.finalize",
      "offset": [
        16433,
        16451
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "16293": {
      "fn": "BPool.finalize",
      "offset": [
        16462,
        16494
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 217,
      "value": "0x3FBF"
    },
    "16296": {
      "offset": [
        1435,
        1445
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x3FBA"
    },
    "16299": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "16308": {
      "offset": [
        1442,
        1445
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x64"
    },
    "16310": {
      "offset": [
        1435,
        1445
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x570E"
    },
    "16313": {
      "fn": "BPool.finalize",
      "jump": "i",
      "offset": [
        1435,
        1445
      ],
      "op": "JUMP",
      "path": "33"
    },
    "16314": {
      "fn": "BPool.finalize",
      "offset": [
        1435,
        1445
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "16315": {
      "fn": "BPool.finalize",
      "offset": [
        16462,
        16476
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x48FA"
    },
    "16318": {
      "fn": "BPool.finalize",
      "jump": "i",
      "offset": [
        16462,
        16494
      ],
      "op": "JUMP",
      "path": "37"
    },
    "16319": {
      "fn": "BPool.finalize",
      "offset": [
        16462,
        16494
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "16320": {
      "fn": "BPool.finalize",
      "offset": [
        16504,
        16548
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 218,
      "value": "0x3FDB"
    },
    "16323": {
      "fn": "BPool.finalize",
      "offset": [
        16519,
        16529
      ],
      "op": "CALLER",
      "path": "37"
    },
    "16324": {
      "offset": [
        1435,
        1445
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x3FD6"
    },
    "16327": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "16336": {
      "offset": [
        1442,
        1445
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x64"
    },
    "16338": {
      "offset": [
        1435,
        1445
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x570E"
    },
    "16341": {
      "fn": "BPool.finalize",
      "jump": "i",
      "offset": [
        1435,
        1445
      ],
      "op": "JUMP",
      "path": "33"
    },
    "16342": {
      "fn": "BPool.finalize",
      "offset": [
        1435,
        1445
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "16343": {
      "fn": "BPool.finalize",
      "offset": [
        16504,
        16518
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4903"
    },
    "16346": {
      "fn": "BPool.finalize",
      "jump": "i",
      "offset": [
        16504,
        16548
      ],
      "op": "JUMP",
      "path": "37"
    },
    "16347": {
      "fn": "BPool.finalize",
      "offset": [
        16504,
        16548
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "16348": {
      "fn": "BPool.finalize",
      "jump": "o",
      "offset": [
        16367,
        16555
      ],
      "op": "JUMP",
      "path": "37"
    },
    "16349": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7220,
        7790
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "16350": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7377,
        7396
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "16352": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7436,
        7437
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 219,
      "value": "0x1"
    },
    "16354": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7420,
        7432
      ],
      "op": "DUP3",
      "path": "35"
    },
    "16355": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7420,
        7437
      ],
      "op": "LT",
      "path": "35"
    },
    "16356": {
      "branch": 376,
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7420,
        7437
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "16357": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4030"
    },
    "16360": {
      "branch": 376,
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "16361": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "16363": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "16364": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16368": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16370": {
      "op": "SHL"
    },
    "16371": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "DUP2",
      "path": "35"
    },
    "16372": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "16373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16375": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "16377": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "DUP3",
      "path": "35"
    },
    "16378": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "ADD",
      "path": "35"
    },
    "16379": {
      "op": "MSTORE"
    },
    "16380": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "16382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16384": {
      "op": "DUP3"
    },
    "16385": {
      "op": "ADD"
    },
    "16386": {
      "op": "MSTORE"
    },
    "16387": {
      "op": "PUSH32",
      "value": "0x4552525F504F4F4C5F414D4F554E545F494E5F544F4F5F4C4F57000000000000"
    },
    "16420": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16422": {
      "op": "DUP3"
    },
    "16423": {
      "op": "ADD"
    },
    "16424": {
      "op": "MSTORE"
    },
    "16425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16427": {
      "op": "ADD"
    },
    "16428": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x99D"
    },
    "16431": {
      "op": "JUMP"
    },
    "16432": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7412,
        7468
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "16433": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7494,
        7510
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 220,
      "value": "0x403B"
    },
    "16436": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7494,
        7506
      ],
      "op": "DUP3",
      "path": "35"
    },
    "16437": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7509,
        7510
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "16439": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7494,
        7510
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x570E"
    },
    "16442": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "jump": "i",
      "offset": [
        7494,
        7510
      ],
      "op": "JUMP",
      "path": "35"
    },
    "16443": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7494,
        7510
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "16444": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7479,
        7510
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "16445": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7479,
        7510
      ],
      "op": "POP",
      "path": "35"
    },
    "16446": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7520,
        7538
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "16448": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7541,
        7571
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4049"
    },
    "16451": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7546,
        7556
      ],
      "op": "DUP5",
      "path": "35"
    },
    "16452": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7558,
        7570
      ],
      "op": "DUP5",
      "path": "35"
    },
    "16453": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7541,
        7545
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "16456": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "jump": "i",
      "offset": [
        7541,
        7571
      ],
      "op": "JUMP",
      "path": "35"
    },
    "16457": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7541,
        7571
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "16458": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7520,
        7571
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "16459": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7520,
        7571
      ],
      "op": "POP",
      "path": "35"
    },
    "16460": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7581,
        7595
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "16462": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7598,
        7629
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4057"
    },
    "16465": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7603,
        7616
      ],
      "op": "DUP3",
      "path": "35"
    },
    "16466": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7618,
        7628
      ],
      "op": "DUP7",
      "path": "35"
    },
    "16467": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7598,
        7602
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4564"
    },
    "16470": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "jump": "i",
      "offset": [
        7598,
        7629
      ],
      "op": "JUMP",
      "path": "35"
    },
    "16471": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7598,
        7629
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "16472": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7581,
        7629
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "16473": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7581,
        7629
      ],
      "op": "POP",
      "path": "35"
    },
    "16474": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7639,
        7657
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "16476": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7660,
        7680
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x406D"
    },
    "16479": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "16488": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7670,
        7679
      ],
      "op": "DUP4",
      "path": "35"
    },
    "16489": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7660,
        7664
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "16492": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "jump": "i",
      "offset": [
        7660,
        7680
      ],
      "op": "JUMP",
      "path": "35"
    },
    "16493": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7660,
        7680
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "16494": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7639,
        7680
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "16495": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7639,
        7680
      ],
      "op": "POP",
      "path": "35"
    },
    "16496": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7690,
        7713
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "16498": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7716,
        7748
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x407B"
    },
    "16501": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7721,
        7734
      ],
      "op": "DUP3",
      "path": "35"
    },
    "16502": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7736,
        7747
      ],
      "op": "DUP10",
      "path": "35"
    },
    "16503": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7716,
        7720
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4087"
    },
    "16506": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "jump": "i",
      "offset": [
        7716,
        7748
      ],
      "op": "JUMP",
      "path": "35"
    },
    "16507": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7716,
        7748
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "16508": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7690,
        7748
      ],
      "op": "SWAP9",
      "path": "35"
    },
    "16509": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "offset": [
        7220,
        7790
      ],
      "op": "SWAP8",
      "path": "35"
    },
    "16510": {
      "op": "POP"
    },
    "16511": {
      "op": "POP"
    },
    "16512": {
      "op": "POP"
    },
    "16513": {
      "op": "POP"
    },
    "16514": {
      "op": "POP"
    },
    "16515": {
      "op": "POP"
    },
    "16516": {
      "op": "POP"
    },
    "16517": {
      "op": "POP"
    },
    "16518": {
      "fn": "BMath.calcSingleOutGivenPoolIn",
      "jump": "o",
      "offset": [
        7220,
        7790
      ],
      "op": "JUMP",
      "path": "35"
    },
    "16519": {
      "fn": "BNum.bmul",
      "offset": [
        1721,
        2022
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16520": {
      "fn": "BNum.bmul",
      "offset": [
        1790,
        1794
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "16522": {
      "fn": "BNum.bmul",
      "offset": [
        1790,
        1794
      ],
      "op": "DUP1",
      "path": "36"
    },
    "16523": {
      "fn": "BNum.bmul",
      "offset": [
        1820,
        1825
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4094"
    },
    "16526": {
      "fn": "BNum.bmul",
      "offset": [
        1824,
        1825
      ],
      "op": "DUP4",
      "path": "36"
    },
    "16527": {
      "fn": "BNum.bmul",
      "offset": [
        1820,
        1821
      ],
      "op": "DUP6",
      "path": "36"
    },
    "16528": {
      "fn": "BNum.bmul",
      "offset": [
        1820,
        1825
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x570E"
    },
    "16531": {
      "fn": "BNum.bmul",
      "jump": "i",
      "offset": [
        1820,
        1825
      ],
      "op": "JUMP",
      "path": "36"
    },
    "16532": {
      "fn": "BNum.bmul",
      "offset": [
        1820,
        1825
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16533": {
      "fn": "BNum.bmul",
      "offset": [
        1810,
        1825
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "16534": {
      "op": "POP"
    },
    "16535": {
      "fn": "BNum.bmul",
      "offset": [
        1843,
        1849
      ],
      "op": "DUP4",
      "path": "36",
      "statement": 221
    },
    "16536": {
      "fn": "BNum.bmul",
      "offset": [
        1843,
        1849
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "16537": {
      "branch": 380,
      "fn": "BNum.bmul",
      "offset": [
        1843,
        1849
      ],
      "op": "DUP1",
      "path": "36"
    },
    "16538": {
      "fn": "BNum.bmul",
      "offset": [
        1843,
        1864
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x40AB"
    },
    "16541": {
      "branch": 380,
      "fn": "BNum.bmul",
      "offset": [
        1843,
        1864
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "16542": {
      "op": "POP"
    },
    "16543": {
      "fn": "BNum.bmul",
      "offset": [
        1863,
        1864
      ],
      "op": "DUP3",
      "path": "36"
    },
    "16544": {
      "fn": "BNum.bmul",
      "offset": [
        1853,
        1859
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x40A9"
    },
    "16547": {
      "fn": "BNum.bmul",
      "offset": [
        1858,
        1859
      ],
      "op": "DUP6",
      "path": "36"
    },
    "16548": {
      "fn": "BNum.bmul",
      "offset": [
        1853,
        1855
      ],
      "op": "DUP4",
      "path": "36"
    },
    "16549": {
      "fn": "BNum.bmul",
      "offset": [
        1853,
        1859
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5795"
    },
    "16552": {
      "fn": "BNum.bmul",
      "jump": "i",
      "offset": [
        1853,
        1859
      ],
      "op": "JUMP",
      "path": "36"
    },
    "16553": {
      "fn": "BNum.bmul",
      "offset": [
        1853,
        1859
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16554": {
      "branch": 381,
      "fn": "BNum.bmul",
      "offset": [
        1853,
        1864
      ],
      "op": "EQ",
      "path": "36"
    },
    "16555": {
      "fn": "BNum.bmul",
      "offset": [
        1843,
        1864
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16556": {
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x40EA"
    },
    "16559": {
      "branch": 381,
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "16560": {
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "16562": {
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "16563": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16567": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16569": {
      "op": "SHL"
    },
    "16570": {
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "DUP2",
      "path": "36"
    },
    "16571": {
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "16572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16574": {
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "16576": {
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "DUP3",
      "path": "36"
    },
    "16577": {
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "ADD",
      "path": "36"
    },
    "16578": {
      "op": "MSTORE"
    },
    "16579": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "16581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16583": {
      "op": "DUP3"
    },
    "16584": {
      "op": "ADD"
    },
    "16585": {
      "op": "MSTORE"
    },
    "16586": {
      "op": "PUSH16",
      "value": "0x4552525F4D554C5F4F564552464C4F57"
    },
    "16603": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16605": {
      "op": "SHL"
    },
    "16606": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16608": {
      "op": "DUP3"
    },
    "16609": {
      "op": "ADD"
    },
    "16610": {
      "op": "MSTORE"
    },
    "16611": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16613": {
      "op": "ADD"
    },
    "16614": {
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x99D"
    },
    "16617": {
      "op": "JUMP"
    },
    "16618": {
      "fn": "BNum.bmul",
      "offset": [
        1835,
        1885
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16619": {
      "fn": "BNum.bmul",
      "offset": [
        1895,
        1902
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "16621": {
      "fn": "BNum.bmul",
      "offset": [
        1911,
        1919
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x40FF"
    },
    "16624": {
      "fn": "BNum.bmul",
      "offset": [
        1918,
        1919
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x2"
    },
    "16626": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "16635": {
      "fn": "BNum.bmul",
      "offset": [
        1911,
        1919
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5795"
    },
    "16638": {
      "fn": "BNum.bmul",
      "jump": "i",
      "offset": [
        1911,
        1919
      ],
      "op": "JUMP",
      "path": "36"
    },
    "16639": {
      "fn": "BNum.bmul",
      "offset": [
        1911,
        1919
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16640": {
      "fn": "BNum.bmul",
      "offset": [
        1905,
        1920
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4109"
    },
    "16643": {
      "fn": "BNum.bmul",
      "offset": [
        1905,
        1920
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "16644": {
      "fn": "BNum.bmul",
      "offset": [
        1905,
        1907
      ],
      "op": "DUP4",
      "path": "36"
    },
    "16645": {
      "fn": "BNum.bmul",
      "offset": [
        1905,
        1920
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x57A9"
    },
    "16648": {
      "fn": "BNum.bmul",
      "jump": "i",
      "offset": [
        1905,
        1920
      ],
      "op": "JUMP",
      "path": "36"
    },
    "16649": {
      "fn": "BNum.bmul",
      "offset": [
        1905,
        1920
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16650": {
      "fn": "BNum.bmul",
      "offset": [
        1895,
        1920
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "16651": {
      "fn": "BNum.bmul",
      "offset": [
        1895,
        1920
      ],
      "op": "POP",
      "path": "36"
    },
    "16652": {
      "fn": "BNum.bmul",
      "offset": [
        1944,
        1946
      ],
      "op": "DUP2",
      "path": "36",
      "statement": 222
    },
    "16653": {
      "fn": "BNum.bmul",
      "offset": [
        1938,
        1940
      ],
      "op": "DUP2",
      "path": "36"
    },
    "16654": {
      "fn": "BNum.bmul",
      "offset": [
        1938,
        1946
      ],
      "op": "LT",
      "path": "36"
    },
    "16655": {
      "branch": 382,
      "fn": "BNum.bmul",
      "offset": [
        1938,
        1946
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "16656": {
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x414E"
    },
    "16659": {
      "branch": 382,
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "16660": {
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "16662": {
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "16663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16669": {
      "op": "SHL"
    },
    "16670": {
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "DUP2",
      "path": "36"
    },
    "16671": {
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "16672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16674": {
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "16676": {
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "DUP3",
      "path": "36"
    },
    "16677": {
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "ADD",
      "path": "36"
    },
    "16678": {
      "op": "MSTORE"
    },
    "16679": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "16681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16683": {
      "op": "DUP3"
    },
    "16684": {
      "op": "ADD"
    },
    "16685": {
      "op": "MSTORE"
    },
    "16686": {
      "op": "PUSH16",
      "value": "0x4552525F4D554C5F4F564552464C4F57"
    },
    "16703": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16705": {
      "op": "SHL"
    },
    "16706": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16708": {
      "op": "DUP3"
    },
    "16709": {
      "op": "ADD"
    },
    "16710": {
      "op": "MSTORE"
    },
    "16711": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16713": {
      "op": "ADD"
    },
    "16714": {
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x99D"
    },
    "16717": {
      "op": "JUMP"
    },
    "16718": {
      "fn": "BNum.bmul",
      "offset": [
        1930,
        1967
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16719": {
      "fn": "BNum.bmul",
      "offset": [
        1977,
        1984
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "16721": {
      "fn": "BNum.bmul",
      "offset": [
        1987,
        1996
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4162"
    },
    "16724": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "16733": {
      "fn": "BNum.bmul",
      "offset": [
        1987,
        1989
      ],
      "op": "DUP4",
      "path": "36"
    },
    "16734": {
      "fn": "BNum.bmul",
      "offset": [
        1987,
        1996
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5795"
    },
    "16737": {
      "fn": "BNum.bmul",
      "jump": "i",
      "offset": [
        1987,
        1996
      ],
      "op": "JUMP",
      "path": "36"
    },
    "16738": {
      "fn": "BNum.bmul",
      "offset": [
        1987,
        1996
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16739": {
      "fn": "BNum.bmul",
      "offset": [
        1977,
        1996
      ],
      "op": "SWAP7",
      "path": "36"
    },
    "16740": {
      "fn": "BNum.bmul",
      "offset": [
        1721,
        2022
      ],
      "op": "SWAP6",
      "path": "36"
    },
    "16741": {
      "op": "POP"
    },
    "16742": {
      "op": "POP"
    },
    "16743": {
      "op": "POP"
    },
    "16744": {
      "op": "POP"
    },
    "16745": {
      "op": "POP"
    },
    "16746": {
      "op": "POP"
    },
    "16747": {
      "fn": "BNum.bmul",
      "jump": "o",
      "offset": [
        1721,
        2022
      ],
      "op": "JUMP",
      "path": "36"
    },
    "16748": {
      "fn": "BNum.bsub",
      "offset": [
        1300,
        1495
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16749": {
      "fn": "BNum.bsub",
      "offset": [
        1369,
        1373
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "16751": {
      "fn": "BNum.bsub",
      "offset": [
        1390,
        1396
      ],
      "op": "DUP1",
      "path": "36"
    },
    "16752": {
      "fn": "BNum.bsub",
      "offset": [
        1398,
        1407
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "16754": {
      "fn": "BNum.bsub",
      "offset": [
        1411,
        1425
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x417B"
    },
    "16757": {
      "fn": "BNum.bsub",
      "offset": [
        1420,
        1421
      ],
      "op": "DUP6",
      "path": "36"
    },
    "16758": {
      "fn": "BNum.bsub",
      "offset": [
        1423,
        1424
      ],
      "op": "DUP6",
      "path": "36"
    },
    "16759": {
      "fn": "BNum.bsub",
      "offset": [
        1411,
        1419
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4D11"
    },
    "16762": {
      "fn": "BNum.bsub",
      "jump": "i",
      "offset": [
        1411,
        1425
      ],
      "op": "JUMP",
      "path": "36"
    },
    "16763": {
      "fn": "BNum.bsub",
      "offset": [
        1411,
        1425
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16764": {
      "fn": "BNum.bsub",
      "offset": [
        1389,
        1425
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "16765": {
      "fn": "BNum.bsub",
      "offset": [
        1389,
        1425
      ],
      "op": "POP",
      "path": "36"
    },
    "16766": {
      "fn": "BNum.bsub",
      "offset": [
        1389,
        1425
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "16767": {
      "fn": "BNum.bsub",
      "offset": [
        1389,
        1425
      ],
      "op": "POP",
      "path": "36"
    },
    "16768": {
      "fn": "BNum.bsub",
      "offset": [
        1444,
        1448
      ],
      "op": "DUP1",
      "path": "36",
      "statement": 223
    },
    "16769": {
      "branch": 383,
      "fn": "BNum.bsub",
      "offset": [
        1443,
        1448
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "16770": {
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x41C1"
    },
    "16773": {
      "branch": 383,
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "16774": {
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "16776": {
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "16777": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16781": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16783": {
      "op": "SHL"
    },
    "16784": {
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "DUP2",
      "path": "36"
    },
    "16785": {
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "16786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16788": {
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "16790": {
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "DUP3",
      "path": "36"
    },
    "16791": {
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "ADD",
      "path": "36"
    },
    "16792": {
      "op": "MSTORE"
    },
    "16793": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16795": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16797": {
      "op": "DUP3"
    },
    "16798": {
      "op": "ADD"
    },
    "16799": {
      "op": "MSTORE"
    },
    "16800": {
      "op": "PUSH17",
      "value": "0x4552525F5355425F554E444552464C4F57"
    },
    "16818": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "16820": {
      "op": "SHL"
    },
    "16821": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16823": {
      "op": "DUP3"
    },
    "16824": {
      "op": "ADD"
    },
    "16825": {
      "op": "MSTORE"
    },
    "16826": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16828": {
      "op": "ADD"
    },
    "16829": {
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x99D"
    },
    "16832": {
      "op": "JUMP"
    },
    "16833": {
      "fn": "BNum.bsub",
      "offset": [
        1435,
        1470
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16834": {
      "op": "POP"
    },
    "16835": {
      "fn": "BNum.bsub",
      "offset": [
        1487,
        1488
      ],
      "op": "SWAP4",
      "path": "36",
      "statement": 224
    },
    "16836": {
      "fn": "BNum.bsub",
      "offset": [
        1300,
        1495
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "16837": {
      "op": "POP"
    },
    "16838": {
      "op": "POP"
    },
    "16839": {
      "op": "POP"
    },
    "16840": {
      "fn": "BNum.bsub",
      "jump": "o",
      "offset": [
        1300,
        1495
      ],
      "op": "JUMP",
      "path": "36"
    },
    "16841": {
      "fn": "BPool._pullPoolShare",
      "offset": [
        40246,
        40345
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "16842": {
      "fn": "BPool._pullPoolShare",
      "offset": [
        40319,
        40338
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 225,
      "value": "0x1DC3"
    },
    "16845": {
      "fn": "BPool._pullPoolShare",
      "offset": [
        40325,
        40329
      ],
      "op": "DUP3",
      "path": "37"
    },
    "16846": {
      "fn": "BPool._pullPoolShare",
      "offset": [
        40331,
        40337
      ],
      "op": "DUP3",
      "path": "37"
    },
    "16847": {
      "fn": "BPool._pullPoolShare",
      "offset": [
        40319,
        40324
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4D48"
    },
    "16850": {
      "fn": "BPool._pullPoolShare",
      "jump": "i",
      "offset": [
        40319,
        40338
      ],
      "op": "JUMP",
      "path": "37"
    },
    "16851": {
      "fn": "BPool._burnPoolShare",
      "offset": [
        40537,
        40616
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "16852": {
      "fn": "BPool._burnPoolShare",
      "offset": [
        40596,
        40609
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 226,
      "value": "0x3D01"
    },
    "16855": {
      "fn": "BPool._burnPoolShare",
      "offset": [
        40602,
        40608
      ],
      "op": "DUP2",
      "path": "37"
    },
    "16856": {
      "fn": "BPool._burnPoolShare",
      "offset": [
        40596,
        40601
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4D53"
    },
    "16859": {
      "fn": "BPool._burnPoolShare",
      "jump": "i",
      "offset": [
        40596,
        40609
      ],
      "op": "JUMP",
      "path": "37"
    },
    "16860": {
      "fn": "BPool._pushUnderlying",
      "offset": [
        40034,
        40240
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "16861": {
      "fn": "BPool._pushUnderlying",
      "offset": [
        40151,
        40189
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 227,
      "value": "0x3F79"
    },
    "16864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16870": {
      "op": "SHL"
    },
    "16871": {
      "op": "SUB"
    },
    "16872": {
      "fn": "BPool._pushUnderlying",
      "offset": [
        40151,
        40177
      ],
      "op": "DUP5",
      "path": "37"
    },
    "16873": {
      "fn": "BPool._pushUnderlying",
      "offset": [
        40151,
        40177
      ],
      "op": "AND",
      "path": "37"
    },
    "16874": {
      "fn": "BPool._pushUnderlying",
      "offset": [
        40178,
        40180
      ],
      "op": "DUP4",
      "path": "37"
    },
    "16875": {
      "fn": "BPool._pushUnderlying",
      "offset": [
        40182,
        40188
      ],
      "op": "DUP4",
      "path": "37"
    },
    "16876": {
      "fn": "BPool._pushUnderlying",
      "offset": [
        40151,
        40177
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x47A8"
    },
    "16879": {
      "fn": "BPool._pushUnderlying",
      "jump": "i",
      "offset": [
        40151,
        40189
      ],
      "op": "JUMP",
      "path": "37"
    },
    "16880": {
      "fn": "BTokenBase._move",
      "offset": [
        2572,
        2840
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "16881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16887": {
      "op": "SHL"
    },
    "16888": {
      "op": "SUB"
    },
    "16889": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "DUP4",
      "path": "38",
      "statement": 228
    },
    "16890": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "AND",
      "path": "38"
    },
    "16891": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "16893": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "16894": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "DUP2",
      "path": "38"
    },
    "16895": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "16896": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2658
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "16898": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "16900": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "16901": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "16903": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "16904": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "16905": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2663
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "16906": {
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2670
      ],
      "op": "DUP2",
      "path": "38"
    },
    "16907": {
      "op": "GT"
    },
    "16908": {
      "branch": 403,
      "fn": "BTokenBase._move",
      "offset": [
        2650,
        2670
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "16909": {
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x424F"
    },
    "16912": {
      "branch": 403,
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "16913": {
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "16915": {
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "16916": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16920": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16922": {
      "op": "SHL"
    },
    "16923": {
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "DUP2",
      "path": "38"
    },
    "16924": {
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "16925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16927": {
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "16929": {
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "DUP3",
      "path": "38"
    },
    "16930": {
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "ADD",
      "path": "38"
    },
    "16931": {
      "op": "MSTORE"
    },
    "16932": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "16934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16936": {
      "op": "DUP3"
    },
    "16937": {
      "op": "ADD"
    },
    "16938": {
      "op": "MSTORE"
    },
    "16939": {
      "op": "PUSH20",
      "value": "0x11549497D25394D551919250D251539517D09053"
    },
    "16960": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "16962": {
      "op": "SHL"
    },
    "16963": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16965": {
      "op": "DUP3"
    },
    "16966": {
      "op": "ADD"
    },
    "16967": {
      "op": "MSTORE"
    },
    "16968": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16970": {
      "op": "ADD"
    },
    "16971": {
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x99D"
    },
    "16974": {
      "op": "JUMP"
    },
    "16975": {
      "fn": "BTokenBase._move",
      "offset": [
        2642,
        2695
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "16976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16982": {
      "op": "SHL"
    },
    "16983": {
      "op": "SUB"
    },
    "16984": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "DUP4",
      "path": "38",
      "statement": 229
    },
    "16985": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "AND",
      "path": "38"
    },
    "16986": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "16988": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "16989": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "DUP2",
      "path": "38"
    },
    "16990": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "16991": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2734
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "16993": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "16995": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "16996": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "16998": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "16999": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "17000": {
      "fn": "BTokenBase._move",
      "offset": [
        2726,
        2739
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "17001": {
      "fn": "BTokenBase._move",
      "offset": [
        2721,
        2745
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4272"
    },
    "17004": {
      "fn": "BTokenBase._move",
      "offset": [
        2721,
        2745
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17005": {
      "fn": "BTokenBase._move",
      "offset": [
        2741,
        2744
      ],
      "op": "DUP3",
      "path": "38"
    },
    "17006": {
      "fn": "BTokenBase._move",
      "offset": [
        2721,
        2725
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x416C"
    },
    "17009": {
      "fn": "BTokenBase._move",
      "jump": "i",
      "offset": [
        2721,
        2745
      ],
      "op": "JUMP",
      "path": "38"
    },
    "17010": {
      "fn": "BTokenBase._move",
      "offset": [
        2721,
        2745
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "17011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17017": {
      "op": "SHL"
    },
    "17018": {
      "op": "SUB"
    },
    "17019": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "DUP1",
      "path": "38"
    },
    "17020": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "DUP6",
      "path": "38"
    },
    "17021": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "AND",
      "path": "38"
    },
    "17022": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "17024": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17025": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "DUP2",
      "path": "38"
    },
    "17026": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "17027": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2713
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "17029": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "17031": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "17032": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "17034": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "DUP1",
      "path": "38"
    },
    "17035": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "DUP3",
      "path": "38"
    },
    "17036": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2718
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "17037": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2745
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "17038": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2745
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17039": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2745
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "17040": {
      "fn": "BTokenBase._move",
      "offset": [
        2705,
        2745
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "17041": {
      "fn": "BTokenBase._move",
      "offset": [
        2776,
        2789
      ],
      "op": "SWAP1",
      "path": "38",
      "statement": 230
    },
    "17042": {
      "fn": "BTokenBase._move",
      "offset": [
        2776,
        2789
      ],
      "op": "DUP5",
      "path": "38"
    },
    "17043": {
      "fn": "BTokenBase._move",
      "offset": [
        2776,
        2789
      ],
      "op": "AND",
      "path": "38"
    },
    "17044": {
      "fn": "BTokenBase._move",
      "offset": [
        2776,
        2789
      ],
      "op": "DUP2",
      "path": "38"
    },
    "17045": {
      "fn": "BTokenBase._move",
      "offset": [
        2776,
        2789
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "17046": {
      "fn": "BTokenBase._move",
      "offset": [
        2776,
        2789
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "17047": {
      "fn": "BTokenBase._move",
      "offset": [
        2776,
        2789
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "17048": {
      "fn": "BTokenBase._move",
      "offset": [
        2771,
        2795
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x42A1"
    },
    "17051": {
      "fn": "BTokenBase._move",
      "offset": [
        2771,
        2795
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17052": {
      "fn": "BTokenBase._move",
      "offset": [
        2791,
        2794
      ],
      "op": "DUP3",
      "path": "38"
    },
    "17053": {
      "fn": "BTokenBase._move",
      "offset": [
        2771,
        2775
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x480B"
    },
    "17056": {
      "fn": "BTokenBase._move",
      "jump": "i",
      "offset": [
        2771,
        2795
      ],
      "op": "JUMP",
      "path": "38"
    },
    "17057": {
      "fn": "BTokenBase._move",
      "offset": [
        2771,
        2795
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "17058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17064": {
      "op": "SHL"
    },
    "17065": {
      "op": "SUB"
    },
    "17066": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "DUP1",
      "path": "38"
    },
    "17067": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "DUP5",
      "path": "38"
    },
    "17068": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "AND",
      "path": "38"
    },
    "17069": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "17071": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "DUP2",
      "path": "38"
    },
    "17072": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "DUP2",
      "path": "38"
    },
    "17073": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "17074": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2763
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "17076": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "17078": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "17079": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "17081": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17082": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "DUP2",
      "path": "38"
    },
    "17083": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17084": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2768
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "17085": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2795
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "17086": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2795
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17087": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2795
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "17088": {
      "fn": "BTokenBase._move",
      "offset": [
        2755,
        2795
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "17089": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "SWAP2",
      "path": "38",
      "statement": 231
    },
    "17090": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "17091": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17092": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "DUP6",
      "path": "38"
    },
    "17093": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "AND",
      "path": "38"
    },
    "17094": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17095": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "17128": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17129": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x42F5"
    },
    "17132": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17133": {
      "fn": "BTokenBase._move",
      "offset": [
        2829,
        2832
      ],
      "op": "DUP6",
      "path": "38"
    },
    "17134": {
      "op": "DUP2"
    },
    "17135": {
      "op": "MSTORE"
    },
    "17136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17138": {
      "op": "ADD"
    },
    "17139": {
      "op": "SWAP1"
    },
    "17140": {
      "op": "JUMP"
    },
    "17141": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "17142": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "17144": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "17145": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "DUP1",
      "path": "38"
    },
    "17146": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "17147": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "SUB",
      "path": "38"
    },
    "17148": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "17149": {
      "fn": "BTokenBase._move",
      "offset": [
        2810,
        2833
      ],
      "op": "LOG3",
      "path": "38"
    },
    "17150": {
      "fn": "BTokenBase._move",
      "offset": [
        2572,
        2840
      ],
      "op": "POP",
      "path": "38"
    },
    "17151": {
      "fn": "BTokenBase._move",
      "offset": [
        2572,
        2840
      ],
      "op": "POP",
      "path": "38"
    },
    "17152": {
      "fn": "BTokenBase._move",
      "offset": [
        2572,
        2840
      ],
      "op": "POP",
      "path": "38"
    },
    "17153": {
      "fn": "BTokenBase._move",
      "jump": "o",
      "offset": [
        2572,
        2840
      ],
      "op": "JUMP",
      "path": "38"
    },
    "17154": {
      "fn": "BPool._initialize",
      "offset": [
        5337,
        6194
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "17155": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5620
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 232,
      "value": "0xA"
    },
    "17157": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "DUP1",
      "path": "37"
    },
    "17158": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "17159": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "17162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17164": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "17166": {
      "op": "SHL"
    },
    "17167": {
      "op": "SUB"
    },
    "17168": {
      "op": "NOT"
    },
    "17169": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "AND",
      "path": "37"
    },
    "17170": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "17173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17179": {
      "op": "SHL"
    },
    "17180": {
      "op": "SUB"
    },
    "17181": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "DUP11",
      "path": "37"
    },
    "17182": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "DUP2",
      "path": "37"
    },
    "17183": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "AND",
      "path": "37"
    },
    "17184": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17185": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17186": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17187": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "MUL",
      "path": "37"
    },
    "17188": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17189": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17190": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17191": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "OR",
      "path": "37"
    },
    "17192": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17193": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17194": {
      "fn": "BPool._initialize",
      "offset": [
        5609,
        5633
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "17195": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5651
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 233,
      "value": "0x2"
    },
    "17197": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "DUP1",
      "path": "37"
    },
    "17198": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "17199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17205": {
      "op": "SHL"
    },
    "17206": {
      "op": "SUB"
    },
    "17207": {
      "op": "NOT"
    },
    "17208": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "AND",
      "path": "37"
    },
    "17209": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17210": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "DUP9",
      "path": "37"
    },
    "17211": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "AND",
      "path": "37"
    },
    "17212": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17213": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17214": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17215": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "OR",
      "path": "37"
    },
    "17216": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17217": {
      "fn": "BPool._initialize",
      "offset": [
        5643,
        5661
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "17218": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "DUP5",
      "path": "37",
      "statement": 234
    },
    "17219": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17222": {
      "op": "SWAP1"
    },
    "17223": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "DUP7",
      "path": "37"
    },
    "17224": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17225": {
      "op": "DUP3"
    },
    "17226": {
      "op": "SWAP1"
    },
    "17227": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4356"
    },
    "17230": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "17231": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4356"
    },
    "17234": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "17237": {
      "fn": "BPool._initialize",
      "jump": "i",
      "offset": [
        5682,
        5693
      ],
      "op": "JUMP",
      "path": "37"
    },
    "17238": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "17239": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "17241": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17242": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "DUP2",
      "path": "37"
    },
    "17243": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "MUL",
      "path": "37"
    },
    "17244": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17245": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17246": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17247": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "ADD",
      "path": "37"
    },
    "17248": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "DUP2",
      "path": "37"
    },
    "17249": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "ADD",
      "path": "37"
    },
    "17250": {
      "fn": "BPool._initialize",
      "offset": [
        5682,
        5693
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17251": {
      "fn": "BPool._initialize",
      "offset": [
        5671,
        5679
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "17253": {
      "fn": "BPool._initialize",
      "offset": [
        5671,
        5693
      ],
      "op": "DUP2",
      "path": "37"
    },
    "17254": {
      "fn": "BPool._initialize",
      "offset": [
        5671,
        5693
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17255": {
      "fn": "BPool._initialize",
      "offset": [
        5671,
        5693
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "17256": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 235,
      "value": "0x40"
    },
    "17258": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "DUP1",
      "path": "37"
    },
    "17259": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17260": {
      "fn": "BPool._initialize",
      "offset": [
        5723,
        5733
      ],
      "op": "CALLER",
      "path": "37"
    },
    "17261": {
      "op": "DUP2"
    },
    "17262": {
      "op": "MSTORE"
    },
    "17263": {
      "op": "SWAP3"
    },
    "17264": {
      "op": "DUP4"
    },
    "17265": {
      "op": "ADD"
    },
    "17266": {
      "op": "SWAP2"
    },
    "17267": {
      "op": "SWAP1"
    },
    "17268": {
      "op": "SWAP2"
    },
    "17269": {
      "op": "MSTORE"
    },
    "17270": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xBCA0D601C32979EEBAC4E8CD06375B6E45D39AF80FC06A33F366425B450DFB69"
    },
    "17303": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17304": {
      "op": "ADD"
    },
    "17305": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "17307": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17308": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "DUP1",
      "path": "37"
    },
    "17309": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17310": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "SUB",
      "path": "37"
    },
    "17311": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17312": {
      "fn": "BPool._initialize",
      "offset": [
        5708,
        5744
      ],
      "op": "LOG1",
      "path": "37"
    },
    "17313": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5786
      ],
      "op": "DUP6",
      "path": "37",
      "statement": 236
    },
    "17314": {
      "fn": "BPool._initialize",
      "offset": [
        5787,
        5788
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "17316": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "DUP2",
      "path": "37"
    },
    "17317": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17318": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "DUP2",
      "path": "37"
    },
    "17319": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "LT",
      "path": "37"
    },
    "17320": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x43B3"
    },
    "17323": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "17324": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x43B3"
    },
    "17327": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x584C"
    },
    "17330": {
      "fn": "BPool._initialize",
      "jump": "i",
      "offset": [
        5778,
        5789
      ],
      "op": "JUMP",
      "path": "37"
    },
    "17331": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "17332": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "17334": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17335": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "DUP2",
      "path": "37"
    },
    "17336": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "MUL",
      "path": "37"
    },
    "17337": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17338": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17339": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17340": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "ADD",
      "path": "37"
    },
    "17341": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "DUP2",
      "path": "37"
    },
    "17342": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "ADD",
      "path": "37"
    },
    "17343": {
      "fn": "BPool._initialize",
      "offset": [
        5778,
        5789
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17344": {
      "fn": "BPool._initialize",
      "offset": [
        5754,
        5775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "17346": {
      "fn": "BPool._initialize",
      "offset": [
        5754,
        5789
      ],
      "op": "DUP2",
      "path": "37"
    },
    "17347": {
      "fn": "BPool._initialize",
      "offset": [
        5754,
        5789
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17348": {
      "fn": "BPool._initialize",
      "offset": [
        5754,
        5789
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "17349": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5810
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 237,
      "value": "0xA"
    },
    "17351": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "DUP1",
      "path": "37"
    },
    "17352": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "17353": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "DUP9",
      "path": "37"
    },
    "17354": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "17355": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "17356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17358": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "17360": {
      "op": "SHL"
    },
    "17361": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "MUL",
      "path": "37"
    },
    "17362": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17364": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "17366": {
      "op": "SHL"
    },
    "17367": {
      "op": "NOT"
    },
    "17368": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17369": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17370": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "AND",
      "path": "37"
    },
    "17371": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "OR",
      "path": "37"
    },
    "17372": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17373": {
      "fn": "BPool._initialize",
      "offset": [
        5799,
        5823
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "17374": {
      "fn": "BPool._initialize",
      "offset": [
        5833,
        5843
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 238,
      "value": "0xB"
    },
    "17376": {
      "fn": "BPool._initialize",
      "offset": [
        5833,
        5855
      ],
      "op": "DUP1",
      "path": "37"
    },
    "17377": {
      "fn": "BPool._initialize",
      "offset": [
        5833,
        5855
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "17378": {
      "fn": "BPool._initialize",
      "offset": [
        5885,
        5894
      ],
      "op": "DUP7",
      "path": "37",
      "statement": 239
    },
    "17379": {
      "fn": "BPool._initialize",
      "offset": [
        5885,
        5894
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17380": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5882
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "17382": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "DUP1",
      "path": "37"
    },
    "17383": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "17384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17390": {
      "op": "SHL"
    },
    "17391": {
      "op": "SUB"
    },
    "17392": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "17393": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "DUP4",
      "path": "37"
    },
    "17394": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "AND",
      "path": "37"
    },
    "17395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17401": {
      "op": "SHL"
    },
    "17402": {
      "op": "SUB"
    },
    "17403": {
      "op": "NOT"
    },
    "17404": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17405": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "DUP3",
      "path": "37"
    },
    "17406": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "AND",
      "path": "37"
    },
    "17407": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "OR",
      "path": "37"
    },
    "17408": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17409": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17410": {
      "fn": "BPool._initialize",
      "offset": [
        5865,
        5894
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "17411": {
      "fn": "BPool._initialize",
      "offset": [
        5924,
        5933
      ],
      "op": "SWAP5",
      "path": "37",
      "statement": 240
    },
    "17412": {
      "fn": "BPool._initialize",
      "offset": [
        5924,
        5933
      ],
      "op": "DUP9",
      "path": "37"
    },
    "17413": {
      "fn": "BPool._initialize",
      "offset": [
        5924,
        5933
      ],
      "op": "ADD",
      "path": "37"
    },
    "17414": {
      "fn": "BPool._initialize",
      "offset": [
        5924,
        5933
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17415": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5921
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "17417": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "DUP1",
      "path": "37"
    },
    "17418": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "17419": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17420": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "DUP4",
      "path": "37"
    },
    "17421": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "AND",
      "path": "37"
    },
    "17422": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17423": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "DUP8",
      "path": "37"
    },
    "17424": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "AND",
      "path": "37"
    },
    "17425": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17426": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17427": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17428": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "OR",
      "path": "37"
    },
    "17429": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17430": {
      "fn": "BPool._initialize",
      "offset": [
        5904,
        5933
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "17431": {
      "fn": "BPool._initialize",
      "offset": [
        5969,
        5985
      ],
      "op": "DUP7",
      "path": "37",
      "statement": 241
    },
    "17432": {
      "fn": "BPool._initialize",
      "offset": [
        5969,
        5985
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17433": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "AND",
      "path": "37"
    },
    "17434": {
      "fn": "BPool._initialize",
      "offset": [
        5833,
        5855
      ],
      "op": "DUP9",
      "path": "37"
    },
    "17435": {
      "fn": "BPool._initialize",
      "offset": [
        5833,
        5855
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "17436": {
      "fn": "BPool._initialize",
      "offset": [
        5833,
        5855
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "17437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17441": {
      "op": "SHL"
    },
    "17442": {
      "fn": "BPool._initialize",
      "offset": [
        5833,
        5855
      ],
      "op": "MUL",
      "path": "37"
    },
    "17443": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "17444": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17445": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "17446": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "AND",
      "path": "37"
    },
    "17447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17451": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "17453": {
      "op": "SHL"
    },
    "17454": {
      "op": "SUB"
    },
    "17455": {
      "op": "NOT"
    },
    "17456": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17457": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17458": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "AND",
      "path": "37"
    },
    "17459": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "OR",
      "path": "37"
    },
    "17460": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "DUP4",
      "path": "37"
    },
    "17461": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "OR",
      "path": "37"
    },
    "17462": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17463": {
      "fn": "BPool._initialize",
      "offset": [
        5943,
        5985
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "17464": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 242,
      "value": "0x40"
    },
    "17466": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17467": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x5E3E722DBD3B6B8071B78568AC80CD0E8FF92E4FB3024E755D504D8F7C2F6F09"
    },
    "17500": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "17501": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4467"
    },
    "17504": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "17505": {
      "fn": "BPool._initialize",
      "offset": [
        6024,
        6034
      ],
      "op": "CALLER",
      "path": "37"
    },
    "17506": {
      "fn": "BPool._initialize",
      "offset": [
        6024,
        6034
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "17507": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5828"
    },
    "17510": {
      "fn": "BPool._initialize",
      "jump": "i",
      "offset": [
        6000,
        6083
      ],
      "op": "JUMP",
      "path": "37"
    },
    "17511": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "17512": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "17514": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "17515": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "DUP1",
      "path": "37"
    },
    "17516": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17517": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "SUB",
      "path": "37"
    },
    "17518": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17519": {
      "fn": "BPool._initialize",
      "offset": [
        6000,
        6083
      ],
      "op": "LOG1",
      "path": "37"
    },
    "17520": {
      "op": "POP"
    },
    "17521": {
      "op": "POP"
    },
    "17522": {
      "fn": "BPool._initialize",
      "offset": [
        6093,
        6104
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 243,
      "value": "0xF"
    },
    "17524": {
      "fn": "BPool._initialize",
      "offset": [
        6093,
        6111
      ],
      "op": "DUP1",
      "path": "37"
    },
    "17525": {
      "fn": "BPool._initialize",
      "offset": [
        6093,
        6111
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "17526": {
      "fn": "BPool._initialize",
      "offset": [
        6147,
        6158
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 244,
      "value": "0xA"
    },
    "17528": {
      "fn": "BPool._initialize",
      "offset": [
        6147,
        6158
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "17529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17533": {
      "op": "SHL"
    },
    "17534": {
      "fn": "BPool._initialize",
      "offset": [
        6093,
        6111
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "17537": {
      "fn": "BPool._initialize",
      "offset": [
        6147,
        6158
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17538": {
      "fn": "BPool._initialize",
      "offset": [
        6147,
        6158
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17539": {
      "fn": "BPool._initialize",
      "offset": [
        6147,
        6158
      ],
      "op": "DIV",
      "path": "37"
    },
    "17540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17546": {
      "op": "SHL"
    },
    "17547": {
      "op": "SUB"
    },
    "17548": {
      "fn": "BPool._initialize",
      "offset": [
        6147,
        6158
      ],
      "op": "AND",
      "path": "37"
    },
    "17549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17553": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "17555": {
      "op": "SHL"
    },
    "17556": {
      "op": "SUB"
    },
    "17557": {
      "op": "NOT"
    },
    "17558": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17559": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "17560": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "AND",
      "path": "37"
    },
    "17561": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17562": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17563": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17564": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "OR",
      "path": "37"
    },
    "17565": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "DUP2",
      "path": "37"
    },
    "17566": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "OR",
      "path": "37"
    },
    "17567": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "17568": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "DUP3",
      "path": "37"
    },
    "17569": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "17570": {
      "fn": "BPool._initialize",
      "offset": [
        6121,
        6159
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "17571": {
      "fn": "BPool._initialize",
      "offset": [
        6093,
        6111
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "17573": {
      "fn": "BPool._initialize",
      "offset": [
        6176,
        6187
      ],
      "op": "SWAP2",
      "path": "37",
      "statement": 245
    },
    "17574": {
      "fn": "BPool._initialize",
      "offset": [
        6176,
        6187
      ],
      "op": "DIV",
      "path": "37"
    },
    "17575": {
      "fn": "BPool._initialize",
      "offset": [
        6176,
        6187
      ],
      "op": "AND",
      "path": "37"
    },
    "17576": {
      "fn": "BPool._initialize",
      "offset": [
        6176,
        6187
      ],
      "op": "SWAP7",
      "path": "37"
    },
    "17577": {
      "fn": "BPool._initialize",
      "offset": [
        5337,
        6194
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "17578": {
      "op": "POP"
    },
    "17579": {
      "op": "POP"
    },
    "17580": {
      "op": "POP"
    },
    "17581": {
      "op": "POP"
    },
    "17582": {
      "op": "POP"
    },
    "17583": {
      "op": "POP"
    },
    "17584": {
      "fn": "BPool._initialize",
      "jump": "o",
      "offset": [
        5337,
        6194
      ],
      "op": "JUMP",
      "path": "37"
    },
    "17585": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        5959,
        6618
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "17586": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6128,
        6146
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "17588": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6162,
        6188
      ],
      "op": "DUP1",
      "path": "35"
    },
    "17589": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6191,
        6216
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x44C6"
    },
    "17592": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6196,
        6209
      ],
      "op": "DUP4",
      "path": "35"
    },
    "17593": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "17602": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6191,
        6195
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4087"
    },
    "17605": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "jump": "i",
      "offset": [
        6191,
        6216
      ],
      "op": "JUMP",
      "path": "35"
    },
    "17606": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6191,
        6216
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "17607": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6162,
        6216
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "17608": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6162,
        6216
      ],
      "op": "POP",
      "path": "35"
    },
    "17609": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6226,
        6248
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "17611": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6251,
        6294
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x44D4"
    },
    "17614": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6256,
        6270
      ],
      "op": "DUP7",
      "path": "35"
    },
    "17615": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6272,
        6293
      ],
      "op": "DUP4",
      "path": "35"
    },
    "17616": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6251,
        6255
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x480B"
    },
    "17619": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "jump": "i",
      "offset": [
        6251,
        6294
      ],
      "op": "JUMP",
      "path": "35"
    },
    "17620": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6251,
        6294
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "17621": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6226,
        6294
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "17622": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6226,
        6294
      ],
      "op": "POP",
      "path": "35"
    },
    "17623": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6304,
        6321
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "17625": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6324,
        6363
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x44E2"
    },
    "17628": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6329,
        6346
      ],
      "op": "DUP3",
      "path": "35"
    },
    "17629": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6348,
        6362
      ],
      "op": "DUP9",
      "path": "35"
    },
    "17630": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6324,
        6328
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4564"
    },
    "17633": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "jump": "i",
      "offset": [
        6324,
        6363
      ],
      "op": "JUMP",
      "path": "35"
    },
    "17634": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6324,
        6363
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "17635": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6304,
        6363
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "17636": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6304,
        6363
      ],
      "op": "POP",
      "path": "35"
    },
    "17637": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6373,
        6387
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "17639": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6390,
        6413
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x44F8"
    },
    "17642": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6395,
        6407
      ],
      "op": "DUP3",
      "path": "35"
    },
    "17643": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "17652": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6390,
        6394
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "17655": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "jump": "i",
      "offset": [
        6390,
        6413
      ],
      "op": "JUMP",
      "path": "35"
    },
    "17656": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6390,
        6413
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "17657": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6373,
        6413
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "17658": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6373,
        6413
      ],
      "op": "POP",
      "path": "35"
    },
    "17659": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "17661": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6444,
        6471
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4506"
    },
    "17664": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6449,
        6458
      ],
      "op": "DUP3",
      "path": "35"
    },
    "17665": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6460,
        6470
      ],
      "op": "DUP10",
      "path": "35"
    },
    "17666": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6444,
        6448
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4087"
    },
    "17669": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "jump": "i",
      "offset": [
        6444,
        6471
      ],
      "op": "JUMP",
      "path": "35"
    },
    "17670": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6444,
        6471
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "17671": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6423,
        6471
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "17672": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6423,
        6471
      ],
      "op": "POP",
      "path": "35"
    },
    "17673": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6506,
        6507
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 246,
      "value": "0x2"
    },
    "17675": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6489,
        6502
      ],
      "op": "DUP2",
      "path": "35"
    },
    "17676": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6489,
        6507
      ],
      "op": "LT",
      "path": "35"
    },
    "17677": {
      "branch": 377,
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6489,
        6507
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "17678": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4559"
    },
    "17681": {
      "branch": 377,
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "17682": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "17684": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "17685": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17689": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17691": {
      "op": "SHL"
    },
    "17692": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "DUP2",
      "path": "35"
    },
    "17693": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "17694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17696": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "17698": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "DUP3",
      "path": "35"
    },
    "17699": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "ADD",
      "path": "35"
    },
    "17700": {
      "op": "MSTORE"
    },
    "17701": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "17703": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17705": {
      "op": "DUP3"
    },
    "17706": {
      "op": "ADD"
    },
    "17707": {
      "op": "MSTORE"
    },
    "17708": {
      "op": "PUSH32",
      "value": "0x4552525F544F4B454E5F414D4F554E545F494E5F544F4F5F4C4F570000000000"
    },
    "17741": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17743": {
      "op": "DUP3"
    },
    "17744": {
      "op": "ADD"
    },
    "17745": {
      "op": "MSTORE"
    },
    "17746": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17748": {
      "op": "ADD"
    },
    "17749": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x99D"
    },
    "17752": {
      "op": "JUMP"
    },
    "17753": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6481,
        6539
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "17754": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6566,
        6581
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 247,
      "value": "0x1682"
    },
    "17757": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6580,
        6581
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "17759": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6566,
        6579
      ],
      "op": "DUP3",
      "path": "35"
    },
    "17760": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "offset": [
        6566,
        6581
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5795"
    },
    "17763": {
      "fn": "BMath.calcPoolOutGivenSingleIn",
      "jump": "i",
      "offset": [
        6566,
        6581
      ],
      "op": "JUMP",
      "path": "35"
    },
    "17764": {
      "fn": "BNum.bdiv",
      "offset": [
        2028,
        2404
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17765": {
      "fn": "BNum.bdiv",
      "offset": [
        2097,
        2101
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "17767": {
      "branch": 384,
      "fn": "BNum.bdiv",
      "offset": [
        2125,
        2131
      ],
      "op": "DUP2",
      "path": "36",
      "statement": 248
    },
    "17768": {
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x45A2"
    },
    "17771": {
      "branch": 384,
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "17772": {
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "17774": {
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "17775": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17779": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17781": {
      "op": "SHL"
    },
    "17782": {
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "DUP2",
      "path": "36"
    },
    "17783": {
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "17784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17786": {
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "17788": {
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "DUP3",
      "path": "36"
    },
    "17789": {
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "ADD",
      "path": "36"
    },
    "17790": {
      "op": "MSTORE"
    },
    "17791": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "17793": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17795": {
      "op": "DUP3"
    },
    "17796": {
      "op": "ADD"
    },
    "17797": {
      "op": "MSTORE"
    },
    "17798": {
      "op": "PUSH12",
      "value": "0x4552525F4449565F5A45524F"
    },
    "17811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17813": {
      "op": "SHL"
    },
    "17814": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17816": {
      "op": "DUP3"
    },
    "17817": {
      "op": "ADD"
    },
    "17818": {
      "op": "MSTORE"
    },
    "17819": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17821": {
      "op": "ADD"
    },
    "17822": {
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x99D"
    },
    "17825": {
      "op": "JUMP"
    },
    "17826": {
      "fn": "BNum.bdiv",
      "offset": [
        2117,
        2148
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17827": {
      "fn": "BNum.bdiv",
      "offset": [
        2158,
        2165
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "17829": {
      "fn": "BNum.bdiv",
      "offset": [
        2168,
        2176
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x45B6"
    },
    "17832": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "17841": {
      "fn": "BNum.bdiv",
      "offset": [
        2168,
        2169
      ],
      "op": "DUP6",
      "path": "36"
    },
    "17842": {
      "fn": "BNum.bdiv",
      "offset": [
        2168,
        2176
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x570E"
    },
    "17845": {
      "fn": "BNum.bdiv",
      "jump": "i",
      "offset": [
        2168,
        2176
      ],
      "op": "JUMP",
      "path": "36"
    },
    "17846": {
      "fn": "BNum.bdiv",
      "offset": [
        2168,
        2176
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17847": {
      "fn": "BNum.bdiv",
      "offset": [
        2158,
        2176
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "17848": {
      "op": "POP"
    },
    "17849": {
      "fn": "BNum.bdiv",
      "offset": [
        2194,
        2200
      ],
      "op": "DUP4",
      "path": "36",
      "statement": 249
    },
    "17850": {
      "fn": "BNum.bdiv",
      "offset": [
        2194,
        2200
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "17851": {
      "branch": 385,
      "fn": "BNum.bdiv",
      "offset": [
        2194,
        2200
      ],
      "op": "DUP1",
      "path": "36"
    },
    "17852": {
      "fn": "BNum.bdiv",
      "offset": [
        2194,
        2218
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x45D5"
    },
    "17855": {
      "branch": 385,
      "fn": "BNum.bdiv",
      "offset": [
        2194,
        2218
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "17856": {
      "op": "POP"
    },
    "17857": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "17866": {
      "fn": "BNum.bdiv",
      "offset": [
        2204,
        2210
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x45D3"
    },
    "17869": {
      "fn": "BNum.bdiv",
      "offset": [
        2209,
        2210
      ],
      "op": "DUP6",
      "path": "36"
    },
    "17870": {
      "fn": "BNum.bdiv",
      "offset": [
        2204,
        2206
      ],
      "op": "DUP4",
      "path": "36"
    },
    "17871": {
      "fn": "BNum.bdiv",
      "offset": [
        2204,
        2210
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5795"
    },
    "17874": {
      "fn": "BNum.bdiv",
      "jump": "i",
      "offset": [
        2204,
        2210
      ],
      "op": "JUMP",
      "path": "36"
    },
    "17875": {
      "fn": "BNum.bdiv",
      "offset": [
        2204,
        2210
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17876": {
      "branch": 386,
      "fn": "BNum.bdiv",
      "offset": [
        2204,
        2218
      ],
      "op": "EQ",
      "path": "36"
    },
    "17877": {
      "fn": "BNum.bdiv",
      "offset": [
        2194,
        2218
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17878": {
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4614"
    },
    "17881": {
      "branch": 386,
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "17882": {
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "17884": {
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "17885": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17889": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17891": {
      "op": "SHL"
    },
    "17892": {
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "DUP2",
      "path": "36"
    },
    "17893": {
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "17894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17896": {
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "17898": {
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "DUP3",
      "path": "36"
    },
    "17899": {
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "ADD",
      "path": "36"
    },
    "17900": {
      "op": "MSTORE"
    },
    "17901": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "17903": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17905": {
      "op": "DUP3"
    },
    "17906": {
      "op": "ADD"
    },
    "17907": {
      "op": "MSTORE"
    },
    "17908": {
      "op": "PUSH16",
      "value": "0x11549497D1125597D253951154939053"
    },
    "17925": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "17927": {
      "op": "SHL"
    },
    "17928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17930": {
      "op": "DUP3"
    },
    "17931": {
      "op": "ADD"
    },
    "17932": {
      "op": "MSTORE"
    },
    "17933": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17935": {
      "op": "ADD"
    },
    "17936": {
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x99D"
    },
    "17939": {
      "op": "JUMP"
    },
    "17940": {
      "fn": "BNum.bdiv",
      "offset": [
        2186,
        2239
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17941": {
      "fn": "BNum.bdiv",
      "offset": [
        2266,
        2273
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "17943": {
      "fn": "BNum.bdiv",
      "offset": [
        2282,
        2287
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4621"
    },
    "17946": {
      "fn": "BNum.bdiv",
      "offset": [
        2286,
        2287
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x2"
    },
    "17948": {
      "fn": "BNum.bdiv",
      "offset": [
        2282,
        2283
      ],
      "op": "DUP6",
      "path": "36"
    },
    "17949": {
      "fn": "BNum.bdiv",
      "offset": [
        2282,
        2287
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5795"
    },
    "17952": {
      "fn": "BNum.bdiv",
      "jump": "i",
      "offset": [
        2282,
        2287
      ],
      "op": "JUMP",
      "path": "36"
    },
    "17953": {
      "fn": "BNum.bdiv",
      "offset": [
        2282,
        2287
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17954": {
      "fn": "BNum.bdiv",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x462B"
    },
    "17957": {
      "fn": "BNum.bdiv",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "17958": {
      "fn": "BNum.bdiv",
      "offset": [
        2276,
        2278
      ],
      "op": "DUP4",
      "path": "36"
    },
    "17959": {
      "fn": "BNum.bdiv",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x57A9"
    },
    "17962": {
      "fn": "BNum.bdiv",
      "jump": "i",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMP",
      "path": "36"
    },
    "17963": {
      "fn": "BNum.bdiv",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17964": {
      "fn": "BNum.bdiv",
      "offset": [
        2266,
        2288
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "17965": {
      "fn": "BNum.bdiv",
      "offset": [
        2266,
        2288
      ],
      "op": "POP",
      "path": "36"
    },
    "17966": {
      "fn": "BNum.bdiv",
      "offset": [
        2312,
        2314
      ],
      "op": "DUP2",
      "path": "36",
      "statement": 250
    },
    "17967": {
      "fn": "BNum.bdiv",
      "offset": [
        2306,
        2308
      ],
      "op": "DUP2",
      "path": "36"
    },
    "17968": {
      "fn": "BNum.bdiv",
      "offset": [
        2306,
        2314
      ],
      "op": "LT",
      "path": "36"
    },
    "17969": {
      "branch": 387,
      "fn": "BNum.bdiv",
      "offset": [
        2306,
        2314
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "17970": {
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4670"
    },
    "17973": {
      "branch": 387,
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "17974": {
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "17976": {
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "17977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17983": {
      "op": "SHL"
    },
    "17984": {
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "DUP2",
      "path": "36"
    },
    "17985": {
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "17986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17988": {
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "17990": {
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "DUP3",
      "path": "36"
    },
    "17991": {
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "ADD",
      "path": "36"
    },
    "17992": {
      "op": "MSTORE"
    },
    "17993": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "17995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17997": {
      "op": "DUP3"
    },
    "17998": {
      "op": "ADD"
    },
    "17999": {
      "op": "MSTORE"
    },
    "18000": {
      "op": "PUSH16",
      "value": "0x11549497D1125597D253951154939053"
    },
    "18017": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "18019": {
      "op": "SHL"
    },
    "18020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18022": {
      "op": "DUP3"
    },
    "18023": {
      "op": "ADD"
    },
    "18024": {
      "op": "MSTORE"
    },
    "18025": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18027": {
      "op": "ADD"
    },
    "18028": {
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x99D"
    },
    "18031": {
      "op": "JUMP"
    },
    "18032": {
      "fn": "BNum.bdiv",
      "offset": [
        2298,
        2335
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18033": {
      "fn": "BNum.bdiv",
      "offset": [
        2362,
        2369
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "18035": {
      "fn": "BNum.bdiv",
      "offset": [
        2372,
        2378
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4162"
    },
    "18038": {
      "fn": "BNum.bdiv",
      "offset": [
        2377,
        2378
      ],
      "op": "DUP6",
      "path": "36"
    },
    "18039": {
      "fn": "BNum.bdiv",
      "offset": [
        2372,
        2374
      ],
      "op": "DUP4",
      "path": "36"
    },
    "18040": {
      "fn": "BNum.bdiv",
      "offset": [
        2372,
        2378
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5795"
    },
    "18043": {
      "fn": "BNum.bdiv",
      "jump": "i",
      "offset": [
        2372,
        2378
      ],
      "op": "JUMP",
      "path": "36"
    },
    "18044": {
      "fn": "BNum.bpow",
      "offset": [
        2905,
        3438
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18045": {
      "fn": "BNum.bpow",
      "offset": [
        2979,
        2983
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "18047": {
      "offset": [
        1493,
        1498
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "18049": {
      "fn": "BNum.bpow",
      "offset": [
        3007,
        3011
      ],
      "op": "DUP4",
      "path": "36",
      "statement": 251
    },
    "18050": {
      "fn": "BNum.bpow",
      "offset": [
        3007,
        3028
      ],
      "op": "LT",
      "path": "36"
    },
    "18051": {
      "branch": 388,
      "fn": "BNum.bpow",
      "offset": [
        3007,
        3028
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "18052": {
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x46C7"
    },
    "18055": {
      "branch": 388,
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "18056": {
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "18058": {
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "18059": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "18063": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "18065": {
      "op": "SHL"
    },
    "18066": {
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "DUP2",
      "path": "36"
    },
    "18067": {
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "18068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18070": {
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "18072": {
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "DUP3",
      "path": "36"
    },
    "18073": {
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "ADD",
      "path": "36"
    },
    "18074": {
      "op": "MSTORE"
    },
    "18075": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "18077": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18079": {
      "op": "DUP3"
    },
    "18080": {
      "op": "ADD"
    },
    "18081": {
      "op": "MSTORE"
    },
    "18082": {
      "op": "PUSH21",
      "value": "0x4552525F42504F575F424153455F544F4F5F4C4F57"
    },
    "18104": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "18106": {
      "op": "SHL"
    },
    "18107": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18109": {
      "op": "DUP3"
    },
    "18110": {
      "op": "ADD"
    },
    "18111": {
      "op": "MSTORE"
    },
    "18112": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18114": {
      "op": "ADD"
    },
    "18115": {
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x99D"
    },
    "18118": {
      "op": "JUMP"
    },
    "18119": {
      "fn": "BNum.bpow",
      "offset": [
        2999,
        3054
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18120": {
      "offset": [
        1558,
        1563
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "18122": {
      "offset": [
        1546,
        1554
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x46DC"
    },
    "18125": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "18134": {
      "offset": [
        1546,
        1547
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "18136": {
      "offset": [
        1546,
        1554
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x570E"
    },
    "18139": {
      "fn": "BNum.bpow",
      "jump": "i",
      "offset": [
        1546,
        1554
      ],
      "op": "JUMP",
      "path": "33"
    },
    "18140": {
      "fn": "BNum.bpow",
      "offset": [
        1546,
        1554
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "18141": {
      "offset": [
        1545,
        1563
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x46E6"
    },
    "18144": {
      "fn": "BNum.bpow",
      "offset": [
        1545,
        1563
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "18145": {
      "fn": "BNum.bpow",
      "offset": [
        1545,
        1563
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "18146": {
      "fn": "BNum.bpow",
      "offset": [
        1545,
        1563
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x58B3"
    },
    "18149": {
      "fn": "BNum.bpow",
      "jump": "i",
      "offset": [
        1545,
        1563
      ],
      "op": "JUMP",
      "path": "33"
    },
    "18150": {
      "fn": "BNum.bpow",
      "offset": [
        1545,
        1563
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "18151": {
      "fn": "BNum.bpow",
      "offset": [
        3072,
        3076
      ],
      "op": "DUP4",
      "path": "36",
      "statement": 252
    },
    "18152": {
      "fn": "BNum.bpow",
      "offset": [
        3072,
        3093
      ],
      "op": "GT",
      "path": "36"
    },
    "18153": {
      "branch": 389,
      "fn": "BNum.bpow",
      "offset": [
        3072,
        3093
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "18154": {
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x472E"
    },
    "18157": {
      "branch": 389,
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "18158": {
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "18160": {
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "18161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "18165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "18167": {
      "op": "SHL"
    },
    "18168": {
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "DUP2",
      "path": "36"
    },
    "18169": {
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "18170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18172": {
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "18174": {
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "DUP3",
      "path": "36"
    },
    "18175": {
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "ADD",
      "path": "36"
    },
    "18176": {
      "op": "MSTORE"
    },
    "18177": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "18179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18181": {
      "op": "DUP3"
    },
    "18182": {
      "op": "ADD"
    },
    "18183": {
      "op": "MSTORE"
    },
    "18184": {
      "op": "PUSH22",
      "value": "0x8AA4A4BE84A09EAEBE8482A68ABEA89E9EBE90928E9"
    },
    "18207": {
      "op": "PUSH1",
      "value": "0x53"
    },
    "18209": {
      "op": "SHL"
    },
    "18210": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18212": {
      "op": "DUP3"
    },
    "18213": {
      "op": "ADD"
    },
    "18214": {
      "op": "MSTORE"
    },
    "18215": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18217": {
      "op": "ADD"
    },
    "18218": {
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x99D"
    },
    "18221": {
      "op": "JUMP"
    },
    "18222": {
      "fn": "BNum.bpow",
      "offset": [
        3064,
        3120
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18223": {
      "fn": "BNum.bpow",
      "offset": [
        3131,
        3141
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "18225": {
      "fn": "BNum.bpow",
      "offset": [
        3144,
        3155
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4739"
    },
    "18228": {
      "fn": "BNum.bpow",
      "offset": [
        3151,
        3154
      ],
      "op": "DUP4",
      "path": "36"
    },
    "18229": {
      "fn": "BNum.bpow",
      "offset": [
        3144,
        3150
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4E1F"
    },
    "18232": {
      "fn": "BNum.bpow",
      "jump": "i",
      "offset": [
        3144,
        3155
      ],
      "op": "JUMP",
      "path": "36"
    },
    "18233": {
      "fn": "BNum.bpow",
      "offset": [
        3144,
        3155
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18234": {
      "fn": "BNum.bpow",
      "offset": [
        3131,
        3155
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "18235": {
      "fn": "BNum.bpow",
      "offset": [
        3131,
        3155
      ],
      "op": "POP",
      "path": "36"
    },
    "18236": {
      "fn": "BNum.bpow",
      "offset": [
        3165,
        3176
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "18238": {
      "fn": "BNum.bpow",
      "offset": [
        3179,
        3195
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4747"
    },
    "18241": {
      "fn": "BNum.bpow",
      "offset": [
        3184,
        3187
      ],
      "op": "DUP5",
      "path": "36"
    },
    "18242": {
      "fn": "BNum.bpow",
      "offset": [
        3189,
        3194
      ],
      "op": "DUP4",
      "path": "36"
    },
    "18243": {
      "fn": "BNum.bpow",
      "offset": [
        3179,
        3183
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x416C"
    },
    "18246": {
      "fn": "BNum.bpow",
      "jump": "i",
      "offset": [
        3179,
        3195
      ],
      "op": "JUMP",
      "path": "36"
    },
    "18247": {
      "fn": "BNum.bpow",
      "offset": [
        3179,
        3195
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18248": {
      "fn": "BNum.bpow",
      "offset": [
        3165,
        3195
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "18249": {
      "fn": "BNum.bpow",
      "offset": [
        3165,
        3195
      ],
      "op": "POP",
      "path": "36"
    },
    "18250": {
      "fn": "BNum.bpow",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "18252": {
      "fn": "BNum.bpow",
      "offset": [
        3222,
        3246
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x475D"
    },
    "18255": {
      "fn": "BNum.bpow",
      "offset": [
        3228,
        3232
      ],
      "op": "DUP7",
      "path": "36"
    },
    "18256": {
      "fn": "BNum.bpow",
      "offset": [
        3234,
        3245
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4758"
    },
    "18259": {
      "fn": "BNum.bpow",
      "offset": [
        3239,
        3244
      ],
      "op": "DUP6",
      "path": "36"
    },
    "18260": {
      "fn": "BNum.bpow",
      "offset": [
        3234,
        3238
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4E3D"
    },
    "18263": {
      "fn": "BNum.bpow",
      "jump": "i",
      "offset": [
        3234,
        3245
      ],
      "op": "JUMP",
      "path": "36"
    },
    "18264": {
      "fn": "BNum.bpow",
      "offset": [
        3234,
        3245
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18265": {
      "fn": "BNum.bpow",
      "offset": [
        3222,
        3227
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4E51"
    },
    "18268": {
      "fn": "BNum.bpow",
      "jump": "i",
      "offset": [
        3222,
        3246
      ],
      "op": "JUMP",
      "path": "36"
    },
    "18269": {
      "fn": "BNum.bpow",
      "offset": [
        3222,
        3246
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18270": {
      "fn": "BNum.bpow",
      "offset": [
        3206,
        3246
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "18271": {
      "op": "POP"
    },
    "18272": {
      "branch": 390,
      "fn": "BNum.bpow",
      "offset": [
        3261,
        3272
      ],
      "op": "DUP2",
      "path": "36"
    },
    "18273": {
      "fn": "BNum.bpow",
      "offset": [
        3257,
        3314
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x476E"
    },
    "18276": {
      "branch": 390,
      "fn": "BNum.bpow",
      "offset": [
        3257,
        3314
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "18277": {
      "fn": "BNum.bpow",
      "offset": [
        3295,
        3303
      ],
      "op": "SWAP3",
      "path": "36",
      "statement": 253
    },
    "18278": {
      "op": "POP"
    },
    "18279": {
      "fn": "BNum.bpow",
      "offset": [
        3288,
        3303
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xA5A"
    },
    "18282": {
      "fn": "BNum.bpow",
      "offset": [
        3288,
        3303
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "18283": {
      "op": "POP"
    },
    "18284": {
      "op": "POP"
    },
    "18285": {
      "fn": "BNum.bpow",
      "offset": [
        3288,
        3303
      ],
      "op": "JUMP",
      "path": "36"
    },
    "18286": {
      "fn": "BNum.bpow",
      "offset": [
        3257,
        3314
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18287": {
      "fn": "BNum.bpow",
      "offset": [
        3324,
        3342
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "18289": {
      "fn": "BNum.bpow",
      "offset": [
        3345,
        3385
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4791"
    },
    "18292": {
      "fn": "BNum.bpow",
      "offset": [
        3356,
        3360
      ],
      "op": "DUP8",
      "path": "36"
    },
    "18293": {
      "fn": "BNum.bpow",
      "offset": [
        3362,
        3368
      ],
      "op": "DUP5",
      "path": "36"
    },
    "18294": {
      "offset": [
        1610,
        1621
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x478C"
    },
    "18297": {
      "offset": [
        1617,
        1621
      ],
      "op": "PUSH5",
      "path": "33",
      "value": "0x2540BE400"
    },
    "18303": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "18312": {
      "offset": [
        1610,
        1621
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "18315": {
      "fn": "BNum.bpow",
      "jump": "i",
      "offset": [
        1610,
        1621
      ],
      "op": "JUMP",
      "path": "33"
    },
    "18316": {
      "fn": "BNum.bpow",
      "offset": [
        1610,
        1621
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "18317": {
      "fn": "BNum.bpow",
      "offset": [
        3345,
        3355
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4EC5"
    },
    "18320": {
      "fn": "BNum.bpow",
      "jump": "i",
      "offset": [
        3345,
        3385
      ],
      "op": "JUMP",
      "path": "36"
    },
    "18321": {
      "fn": "BNum.bpow",
      "offset": [
        3345,
        3385
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18322": {
      "fn": "BNum.bpow",
      "offset": [
        3324,
        3385
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "18323": {
      "fn": "BNum.bpow",
      "offset": [
        3324,
        3385
      ],
      "op": "POP",
      "path": "36"
    },
    "18324": {
      "fn": "BNum.bpow",
      "offset": [
        3402,
        3431
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 254,
      "value": "0x479D"
    },
    "18327": {
      "fn": "BNum.bpow",
      "offset": [
        3407,
        3415
      ],
      "op": "DUP3",
      "path": "36"
    },
    "18328": {
      "fn": "BNum.bpow",
      "offset": [
        3417,
        3430
      ],
      "op": "DUP3",
      "path": "36"
    },
    "18329": {
      "fn": "BNum.bpow",
      "offset": [
        3402,
        3406
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4087"
    },
    "18332": {
      "fn": "BNum.bpow",
      "jump": "i",
      "offset": [
        3402,
        3431
      ],
      "op": "JUMP",
      "path": "36"
    },
    "18333": {
      "fn": "BNum.bpow",
      "offset": [
        3402,
        3431
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18334": {
      "fn": "BNum.bpow",
      "offset": [
        3395,
        3431
      ],
      "op": "SWAP8",
      "path": "36"
    },
    "18335": {
      "fn": "BNum.bpow",
      "offset": [
        2905,
        3438
      ],
      "op": "SWAP7",
      "path": "36"
    },
    "18336": {
      "op": "POP"
    },
    "18337": {
      "op": "POP"
    },
    "18338": {
      "op": "POP"
    },
    "18339": {
      "op": "POP"
    },
    "18340": {
      "op": "POP"
    },
    "18341": {
      "op": "POP"
    },
    "18342": {
      "op": "POP"
    },
    "18343": {
      "fn": "BNum.bpow",
      "jump": "o",
      "offset": [
        2905,
        3438
      ],
      "op": "JUMP",
      "path": "36"
    },
    "18344": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        640,
        845
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "18345": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "PUSH1",
      "path": "62",
      "statement": 255,
      "value": "0x40"
    },
    "18347": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "18348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18354": {
      "op": "SHL"
    },
    "18355": {
      "op": "SUB"
    },
    "18356": {
      "op": "DUP4"
    },
    "18357": {
      "op": "AND"
    },
    "18358": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x24"
    },
    "18360": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP3",
      "path": "62"
    },
    "18361": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "ADD",
      "path": "62"
    },
    "18362": {
      "op": "MSTORE"
    },
    "18363": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18365": {
      "op": "DUP2"
    },
    "18366": {
      "op": "ADD"
    },
    "18367": {
      "op": "DUP3"
    },
    "18368": {
      "op": "SWAP1"
    },
    "18369": {
      "op": "MSTORE"
    },
    "18370": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        752,
        838
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x3F79"
    },
    "18373": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        752,
        838
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "18374": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        772,
        777
      ],
      "op": "DUP5",
      "path": "62"
    },
    "18375": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        772,
        777
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "18376": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "18381": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18383": {
      "op": "SHL"
    },
    "18384": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        802,
        825
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "18385": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18387": {
      "op": "ADD"
    },
    "18388": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "18389": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "18391": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP1",
      "path": "62"
    },
    "18392": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "18393": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18395": {
      "op": "NOT"
    },
    "18396": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP2",
      "path": "62"
    },
    "18397": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP5",
      "path": "62"
    },
    "18398": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SUB",
      "path": "62"
    },
    "18399": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "ADD",
      "path": "62"
    },
    "18400": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP2",
      "path": "62"
    },
    "18401": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "18402": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "18403": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "18404": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "18405": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "18407": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP2",
      "path": "62"
    },
    "18408": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "ADD",
      "path": "62"
    },
    "18409": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "DUP1",
      "path": "62"
    },
    "18410": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "18411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18415": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18417": {
      "op": "SHL"
    },
    "18418": {
      "op": "SUB"
    },
    "18419": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "AND",
      "path": "62"
    },
    "18420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18424": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18426": {
      "op": "SHL"
    },
    "18427": {
      "op": "SUB"
    },
    "18428": {
      "op": "NOT"
    },
    "18429": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "18430": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP4",
      "path": "62"
    },
    "18431": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "AND",
      "path": "62"
    },
    "18432": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP3",
      "path": "62"
    },
    "18433": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "18434": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP3",
      "path": "62"
    },
    "18435": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "OR",
      "path": "62"
    },
    "18436": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "18437": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "18438": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        779,
        837
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "18439": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        752,
        771
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x4FB5"
    },
    "18442": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        752,
        838
      ],
      "op": "JUMP",
      "path": "62"
    },
    "18443": {
      "fn": "BNum.badd",
      "offset": [
        1121,
        1294
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18444": {
      "fn": "BNum.badd",
      "offset": [
        1190,
        1194
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "18446": {
      "fn": "BNum.badd",
      "offset": [
        1190,
        1194
      ],
      "op": "DUP1",
      "path": "36"
    },
    "18447": {
      "fn": "BNum.badd",
      "offset": [
        1219,
        1224
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4818"
    },
    "18450": {
      "fn": "BNum.badd",
      "offset": [
        1223,
        1224
      ],
      "op": "DUP4",
      "path": "36"
    },
    "18451": {
      "fn": "BNum.badd",
      "offset": [
        1219,
        1220
      ],
      "op": "DUP6",
      "path": "36"
    },
    "18452": {
      "fn": "BNum.badd",
      "offset": [
        1219,
        1224
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x57A9"
    },
    "18455": {
      "fn": "BNum.badd",
      "jump": "i",
      "offset": [
        1219,
        1224
      ],
      "op": "JUMP",
      "path": "36"
    },
    "18456": {
      "fn": "BNum.badd",
      "offset": [
        1219,
        1224
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "18457": {
      "fn": "BNum.badd",
      "offset": [
        1210,
        1224
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "18458": {
      "fn": "BNum.badd",
      "offset": [
        1210,
        1224
      ],
      "op": "POP",
      "path": "36"
    },
    "18459": {
      "fn": "BNum.badd",
      "offset": [
        1247,
        1248
      ],
      "op": "DUP4",
      "path": "36",
      "statement": 256
    },
    "18460": {
      "fn": "BNum.badd",
      "offset": [
        1242,
        1243
      ],
      "op": "DUP2",
      "path": "36"
    },
    "18461": {
      "fn": "BNum.badd",
      "offset": [
        1242,
        1248
      ],
      "op": "LT",
      "path": "36"
    },
    "18462": {
      "branch": 391,
      "fn": "BNum.badd",
      "offset": [
        1242,
        1248
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "18463": {
      "fn": "BNum.badd",
      "offset": [
        1234,
        1269
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x9FE"
    },
    "18466": {
      "branch": 391,
      "fn": "BNum.badd",
      "offset": [
        1234,
        1269
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "18467": {
      "fn": "BNum.badd",
      "offset": [
        1234,
        1269
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "18469": {
      "fn": "BNum.badd",
      "offset": [
        1234,
        1269
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "18470": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "18474": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "18476": {
      "op": "SHL"
    },
    "18477": {
      "fn": "BNum.badd",
      "offset": [
        1234,
        1269
      ],
      "op": "DUP2",
      "path": "36"
    },
    "18478": {
      "fn": "BNum.badd",
      "offset": [
        1234,
        1269
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "18479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18481": {
      "fn": "BNum.badd",
      "offset": [
        1234,
        1269
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "18483": {
      "fn": "BNum.badd",
      "offset": [
        1234,
        1269
      ],
      "op": "DUP3",
      "path": "36"
    },
    "18484": {
      "fn": "BNum.badd",
      "offset": [
        1234,
        1269
      ],
      "op": "ADD",
      "path": "36"
    },
    "18485": {
      "op": "MSTORE"
    },
    "18486": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "18488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18490": {
      "op": "DUP3"
    },
    "18491": {
      "op": "ADD"
    },
    "18492": {
      "op": "MSTORE"
    },
    "18493": {
      "op": "PUSH16",
      "value": "0x4552525F4144445F4F564552464C4F57"
    },
    "18510": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18512": {
      "op": "SHL"
    },
    "18513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18515": {
      "op": "DUP3"
    },
    "18516": {
      "op": "ADD"
    },
    "18517": {
      "op": "MSTORE"
    },
    "18518": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18520": {
      "op": "ADD"
    },
    "18521": {
      "fn": "BNum.badd",
      "offset": [
        1234,
        1269
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x99D"
    },
    "18524": {
      "op": "JUMP"
    },
    "18525": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6624,
        7214
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "18526": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6785,
        6803
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "18528": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6819,
        6837
      ],
      "op": "DUP1",
      "path": "35"
    },
    "18529": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6840,
        6871
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x486A"
    },
    "18532": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6845,
        6855
      ],
      "op": "DUP5",
      "path": "35"
    },
    "18533": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6857,
        6870
      ],
      "op": "DUP5",
      "path": "35"
    },
    "18534": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6840,
        6844
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x480B"
    },
    "18537": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "jump": "i",
      "offset": [
        6840,
        6871
      ],
      "op": "JUMP",
      "path": "35"
    },
    "18538": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6840,
        6871
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "18539": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6819,
        6871
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "18540": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6819,
        6871
      ],
      "op": "POP",
      "path": "35"
    },
    "18541": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6881,
        6895
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "18543": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6898,
        6929
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4878"
    },
    "18546": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6903,
        6916
      ],
      "op": "DUP3",
      "path": "35"
    },
    "18547": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6918,
        6928
      ],
      "op": "DUP7",
      "path": "35"
    },
    "18548": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6898,
        6902
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4564"
    },
    "18551": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "jump": "i",
      "offset": [
        6898,
        6929
      ],
      "op": "JUMP",
      "path": "35"
    },
    "18552": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6898,
        6929
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "18553": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6881,
        6929
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "18554": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6881,
        6929
      ],
      "op": "POP",
      "path": "35"
    },
    "18555": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6939,
        6956
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "18557": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6959,
        6980
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x488E"
    },
    "18560": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6964,
        6973
      ],
      "op": "DUP3",
      "path": "35"
    },
    "18561": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "18570": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6959,
        6963
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "18573": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "jump": "i",
      "offset": [
        6959,
        6980
      ],
      "op": "JUMP",
      "path": "35"
    },
    "18574": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6959,
        6980
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "18575": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6939,
        6980
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "18576": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6939,
        6980
      ],
      "op": "POP",
      "path": "35"
    },
    "18577": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6990,
        7012
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "18579": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7015,
        7049
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x489C"
    },
    "18582": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7020,
        7032
      ],
      "op": "DUP3",
      "path": "35"
    },
    "18583": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7034,
        7048
      ],
      "op": "DUP10",
      "path": "35"
    },
    "18584": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7015,
        7019
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4087"
    },
    "18587": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "jump": "i",
      "offset": [
        7015,
        7049
      ],
      "op": "JUMP",
      "path": "35"
    },
    "18588": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7015,
        7049
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "18589": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6990,
        7049
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "18590": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        6990,
        7049
      ],
      "op": "POP",
      "path": "35"
    },
    "18591": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7088,
        7089
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 257,
      "value": "0x1"
    },
    "18593": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7067,
        7084
      ],
      "op": "DUP2",
      "path": "35"
    },
    "18594": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7067,
        7089
      ],
      "op": "LT",
      "path": "35"
    },
    "18595": {
      "branch": 378,
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7067,
        7089
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "18596": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x48EF"
    },
    "18599": {
      "branch": 378,
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "18600": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "18602": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "18603": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "18607": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "18609": {
      "op": "SHL"
    },
    "18610": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "DUP2",
      "path": "35"
    },
    "18611": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "18612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18614": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "18616": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "DUP3",
      "path": "35"
    },
    "18617": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "ADD",
      "path": "35"
    },
    "18618": {
      "op": "MSTORE"
    },
    "18619": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "18621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18623": {
      "op": "DUP3"
    },
    "18624": {
      "op": "ADD"
    },
    "18625": {
      "op": "MSTORE"
    },
    "18626": {
      "op": "PUSH32",
      "value": "0x4552525F504F4F4C5F414D4F554E545F4F55545F544F4F5F4C4F570000000000"
    },
    "18659": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18661": {
      "op": "DUP3"
    },
    "18662": {
      "op": "ADD"
    },
    "18663": {
      "op": "MSTORE"
    },
    "18664": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "18666": {
      "op": "ADD"
    },
    "18667": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x99D"
    },
    "18670": {
      "op": "JUMP"
    },
    "18671": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7059,
        7121
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "18672": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7152,
        7173
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 258,
      "value": "0x407B"
    },
    "18675": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7152,
        7169
      ],
      "op": "DUP2",
      "path": "35"
    },
    "18676": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7172,
        7173
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "18678": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "offset": [
        7152,
        7173
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x570E"
    },
    "18681": {
      "fn": "BMath.calcSingleInGivenPoolOut",
      "jump": "i",
      "offset": [
        7152,
        7173
      ],
      "op": "JUMP",
      "path": "35"
    },
    "18682": {
      "fn": "BPool._mintPoolShare",
      "offset": [
        40452,
        40531
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18683": {
      "fn": "BPool._mintPoolShare",
      "offset": [
        40511,
        40524
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 259,
      "value": "0x3D01"
    },
    "18686": {
      "fn": "BPool._mintPoolShare",
      "offset": [
        40517,
        40523
      ],
      "op": "DUP2",
      "path": "37"
    },
    "18687": {
      "fn": "BPool._mintPoolShare",
      "offset": [
        40511,
        40516
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5087"
    },
    "18690": {
      "fn": "BPool._mintPoolShare",
      "jump": "i",
      "offset": [
        40511,
        40524
      ],
      "op": "JUMP",
      "path": "37"
    },
    "18691": {
      "fn": "BPool._pushPoolShare",
      "offset": [
        40351,
        40446
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18692": {
      "fn": "BPool._pushPoolShare",
      "offset": [
        40422,
        40439
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 260,
      "value": "0x1DC3"
    },
    "18695": {
      "fn": "BPool._pushPoolShare",
      "offset": [
        40428,
        40430
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18696": {
      "fn": "BPool._pushPoolShare",
      "offset": [
        40432,
        40438
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18697": {
      "fn": "BPool._pushPoolShare",
      "offset": [
        40422,
        40427
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x50F6"
    },
    "18700": {
      "fn": "BPool._pushPoolShare",
      "jump": "i",
      "offset": [
        40422,
        40439
      ],
      "op": "JUMP",
      "path": "37"
    },
    "18701": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39594,
        40028
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18702": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "18704": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "18705": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "18710": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18712": {
      "op": "SHL"
    },
    "18713": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP2",
      "path": "37"
    },
    "18714": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "18715": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39769,
        39773
      ],
      "op": "ADDRESS",
      "path": "37"
    },
    "18716": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "18718": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18719": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "ADD",
      "path": "37"
    },
    "18720": {
      "op": "MSTORE"
    },
    "18721": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39713,
        39734
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "18723": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39713,
        39734
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "18724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18730": {
      "op": "SHL"
    },
    "18731": {
      "op": "SUB"
    },
    "18732": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39760
      ],
      "op": "DUP6",
      "path": "37"
    },
    "18733": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39760
      ],
      "op": "AND",
      "path": "37"
    },
    "18734": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39760
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "18735": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39760
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x70A08231"
    },
    "18740": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39760
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "18741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18743": {
      "op": "ADD"
    },
    "18744": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "18746": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "18748": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "18749": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP1",
      "path": "37"
    },
    "18750": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP4",
      "path": "37"
    },
    "18751": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "SUB",
      "path": "37"
    },
    "18752": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP2",
      "path": "37"
    },
    "18753": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP7",
      "path": "37"
    },
    "18754": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "GAS",
      "path": "37"
    },
    "18755": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "STATICCALL",
      "path": "37"
    },
    "18756": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "18757": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP1",
      "path": "37"
    },
    "18758": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "18759": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4954"
    },
    "18762": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "18763": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "18764": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "18766": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP1",
      "path": "37"
    },
    "18767": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "18768": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "18769": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "18771": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "REVERT",
      "path": "37"
    },
    "18772": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18773": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "POP",
      "path": "37"
    },
    "18774": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "POP",
      "path": "37"
    },
    "18775": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "POP",
      "path": "37"
    },
    "18776": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "POP",
      "path": "37"
    },
    "18777": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "18779": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "18780": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "18781": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "18783": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "NOT",
      "path": "37"
    },
    "18784": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "18786": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18787": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "ADD",
      "path": "37"
    },
    "18788": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "AND",
      "path": "37"
    },
    "18789": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18790": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "ADD",
      "path": "37"
    },
    "18791": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP1",
      "path": "37"
    },
    "18792": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "18794": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "18795": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "POP",
      "path": "37"
    },
    "18796": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "DUP2",
      "path": "37"
    },
    "18797": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "ADD",
      "path": "37"
    },
    "18798": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "18799": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4978"
    },
    "18802": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "18803": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "18804": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5862"
    },
    "18807": {
      "fn": "BPool._pullUnderlying",
      "jump": "i",
      "offset": [
        39737,
        39775
      ],
      "op": "JUMP",
      "path": "37"
    },
    "18808": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39737,
        39775
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18809": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39713,
        39775
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "18810": {
      "op": "POP"
    },
    "18811": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39785,
        39844
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 261,
      "value": "0x498F"
    },
    "18814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18820": {
      "op": "SHL"
    },
    "18821": {
      "op": "SUB"
    },
    "18822": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39785,
        39815
      ],
      "op": "DUP6",
      "path": "37"
    },
    "18823": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39785,
        39815
      ],
      "op": "AND",
      "path": "37"
    },
    "18824": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39816,
        39820
      ],
      "op": "DUP5",
      "path": "37"
    },
    "18825": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39830,
        39834
      ],
      "op": "ADDRESS",
      "path": "37"
    },
    "18826": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39837,
        39843
      ],
      "op": "DUP6",
      "path": "37"
    },
    "18827": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39785,
        39815
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5101"
    },
    "18830": {
      "fn": "BPool._pullUnderlying",
      "jump": "i",
      "offset": [
        39785,
        39844
      ],
      "op": "JUMP",
      "path": "37"
    },
    "18831": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39785,
        39844
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18832": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39904,
        39926
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 262,
      "value": "0x4999"
    },
    "18835": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39920,
        39926
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18836": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39904,
        39917
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18837": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39904,
        39926
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x57A9"
    },
    "18840": {
      "fn": "BPool._pullUnderlying",
      "jump": "i",
      "offset": [
        39904,
        39926
      ],
      "op": "JUMP",
      "path": "37"
    },
    "18841": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39904,
        39926
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18842": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "18844": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "18845": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "18850": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18852": {
      "op": "SHL"
    },
    "18853": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP2",
      "path": "37"
    },
    "18854": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "18855": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39894,
        39898
      ],
      "op": "ADDRESS",
      "path": "37"
    },
    "18856": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "18858": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18859": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "ADD",
      "path": "37"
    },
    "18860": {
      "op": "MSTORE"
    },
    "18861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18867": {
      "op": "SHL"
    },
    "18868": {
      "op": "SUB"
    },
    "18869": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39885
      ],
      "op": "DUP7",
      "path": "37"
    },
    "18870": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39885
      ],
      "op": "AND",
      "path": "37"
    },
    "18871": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39885
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "18872": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39885
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x70A08231"
    },
    "18877": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39885
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "18878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18880": {
      "op": "ADD"
    },
    "18881": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "18883": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "18885": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "18886": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP1",
      "path": "37"
    },
    "18887": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP4",
      "path": "37"
    },
    "18888": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "SUB",
      "path": "37"
    },
    "18889": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP2",
      "path": "37"
    },
    "18890": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP7",
      "path": "37"
    },
    "18891": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "GAS",
      "path": "37"
    },
    "18892": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "STATICCALL",
      "path": "37"
    },
    "18893": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "18894": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP1",
      "path": "37"
    },
    "18895": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "18896": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x49DD"
    },
    "18899": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "18900": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "18901": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "18903": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP1",
      "path": "37"
    },
    "18904": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "18905": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "18906": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "18908": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "REVERT",
      "path": "37"
    },
    "18909": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18910": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "POP",
      "path": "37"
    },
    "18911": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "POP",
      "path": "37"
    },
    "18912": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "POP",
      "path": "37"
    },
    "18913": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "POP",
      "path": "37"
    },
    "18914": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "18916": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "18917": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "18918": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "18920": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "NOT",
      "path": "37"
    },
    "18921": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "18923": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18924": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "ADD",
      "path": "37"
    },
    "18925": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "AND",
      "path": "37"
    },
    "18926": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18927": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "ADD",
      "path": "37"
    },
    "18928": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP1",
      "path": "37"
    },
    "18929": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "18931": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "18932": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "POP",
      "path": "37"
    },
    "18933": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "DUP2",
      "path": "37"
    },
    "18934": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "ADD",
      "path": "37"
    },
    "18935": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "18936": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4A01"
    },
    "18939": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "18940": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "18941": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5862"
    },
    "18944": {
      "fn": "BPool._pullUnderlying",
      "jump": "i",
      "offset": [
        39862,
        39900
      ],
      "op": "JUMP",
      "path": "37"
    },
    "18945": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39900
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "18946": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39926
      ],
      "op": "LT",
      "path": "37"
    },
    "18947": {
      "branch": 365,
      "fn": "BPool._pullUnderlying",
      "offset": [
        39862,
        39926
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "18948": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4A4F"
    },
    "18951": {
      "branch": 365,
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "18952": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "18954": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "18955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "18959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "18961": {
      "op": "SHL"
    },
    "18962": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "DUP2",
      "path": "37"
    },
    "18963": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "18964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18966": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "18968": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "DUP3",
      "path": "37"
    },
    "18969": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "ADD",
      "path": "37"
    },
    "18970": {
      "op": "MSTORE"
    },
    "18971": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "18973": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18975": {
      "op": "DUP3"
    },
    "18976": {
      "op": "ADD"
    },
    "18977": {
      "op": "MSTORE"
    },
    "18978": {
      "op": "PUSH32",
      "value": "0x5472616E7366657220616D6F756E7420697320746F6F206C6F77000000000000"
    },
    "19011": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19013": {
      "op": "DUP3"
    },
    "19014": {
      "op": "ADD"
    },
    "19015": {
      "op": "MSTORE"
    },
    "19016": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19018": {
      "op": "ADD"
    },
    "19019": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "19022": {
      "op": "JUMP"
    },
    "19023": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39854,
        39977
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19024": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39703,
        40028
      ],
      "op": "POP",
      "path": "37"
    },
    "19025": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39594,
        40028
      ],
      "op": "POP",
      "path": "37"
    },
    "19026": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39594,
        40028
      ],
      "op": "POP",
      "path": "37"
    },
    "19027": {
      "fn": "BPool._pullUnderlying",
      "offset": [
        39594,
        40028
      ],
      "op": "POP",
      "path": "37"
    },
    "19028": {
      "fn": "BPool._pullUnderlying",
      "jump": "o",
      "offset": [
        39594,
        40028
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19029": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        7796,
        8419
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "19030": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        7959,
        7976
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "19032": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        7992,
        8015
      ],
      "op": "DUP1",
      "path": "35"
    },
    "19033": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8018,
        8090
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4A62"
    },
    "19036": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8036,
        8051
      ],
      "op": "DUP6",
      "path": "35"
    },
    "19037": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8066,
        8080
      ],
      "op": "DUP5",
      "path": "35"
    },
    "19038": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8018,
        8022
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "19041": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "jump": "i",
      "offset": [
        8018,
        8090
      ],
      "op": "JUMP",
      "path": "35"
    },
    "19042": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8018,
        8090
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "19043": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        7992,
        8090
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "19044": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        7992,
        8090
      ],
      "op": "POP",
      "path": "35"
    },
    "19045": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8100,
        8118
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "19047": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8121,
        8162
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4A70"
    },
    "19050": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8126,
        8144
      ],
      "op": "DUP3",
      "path": "35"
    },
    "19051": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8146,
        8161
      ],
      "op": "DUP8",
      "path": "35"
    },
    "19052": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8121,
        8125
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4564"
    },
    "19055": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "jump": "i",
      "offset": [
        8121,
        8162
      ],
      "op": "JUMP",
      "path": "35"
    },
    "19056": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8121,
        8162
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "19057": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8100,
        8162
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "19058": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8100,
        8162
      ],
      "op": "POP",
      "path": "35"
    },
    "19059": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8172,
        8186
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "19061": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8189,
        8213
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4A86"
    },
    "19064": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "19073": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8199,
        8212
      ],
      "op": "DUP4",
      "path": "35"
    },
    "19074": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8189,
        8193
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x416C"
    },
    "19077": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "jump": "i",
      "offset": [
        8189,
        8213
      ],
      "op": "JUMP",
      "path": "35"
    },
    "19078": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8189,
        8213
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "19079": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8172,
        8213
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "19080": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8172,
        8213
      ],
      "op": "POP",
      "path": "35"
    },
    "19081": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8223,
        8241
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "19083": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8244,
        8271
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4A94"
    },
    "19086": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8249,
        8258
      ],
      "op": "DUP3",
      "path": "35"
    },
    "19087": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8260,
        8270
      ],
      "op": "DUP9",
      "path": "35"
    },
    "19088": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8244,
        8248
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4087"
    },
    "19091": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "jump": "i",
      "offset": [
        8244,
        8271
      ],
      "op": "JUMP",
      "path": "35"
    },
    "19092": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8244,
        8271
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "19093": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8223,
        8271
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "19094": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8223,
        8271
      ],
      "op": "POP",
      "path": "35"
    },
    "19095": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8306,
        8307
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 263,
      "value": "0x2"
    },
    "19097": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8289,
        8302
      ],
      "op": "DUP2",
      "path": "35"
    },
    "19098": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8289,
        8307
      ],
      "op": "LT",
      "path": "35"
    },
    "19099": {
      "branch": 379,
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8289,
        8307
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "19100": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4AE7"
    },
    "19103": {
      "branch": 379,
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "19104": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "19106": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "19107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19113": {
      "op": "SHL"
    },
    "19114": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "DUP2",
      "path": "35"
    },
    "19115": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "19116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19118": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "19120": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "DUP3",
      "path": "35"
    },
    "19121": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "ADD",
      "path": "35"
    },
    "19122": {
      "op": "MSTORE"
    },
    "19123": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "19125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19127": {
      "op": "DUP3"
    },
    "19128": {
      "op": "ADD"
    },
    "19129": {
      "op": "MSTORE"
    },
    "19130": {
      "op": "PUSH32",
      "value": "0x4552525F544F4B454E5F414D4F554E545F4F55545F544F4F5F4C4F5700000000"
    },
    "19163": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19165": {
      "op": "DUP3"
    },
    "19166": {
      "op": "ADD"
    },
    "19167": {
      "op": "MSTORE"
    },
    "19168": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19170": {
      "op": "ADD"
    },
    "19171": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x99D"
    },
    "19174": {
      "op": "JUMP"
    },
    "19175": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8281,
        8340
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "19176": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8367,
        8382
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 264,
      "value": "0x407B"
    },
    "19179": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8381,
        8382
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "19181": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8367,
        8380
      ],
      "op": "DUP3",
      "path": "35"
    },
    "19182": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "offset": [
        8367,
        8382
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5795"
    },
    "19185": {
      "fn": "BMath.calcPoolInGivenSingleOut",
      "jump": "i",
      "offset": [
        8367,
        8382
      ],
      "op": "JUMP",
      "path": "35"
    },
    "19186": {
      "fn": "BPool.rebind",
      "offset": [
        17602,
        18943
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19187": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "19196": {
      "fn": "BPool.rebind",
      "offset": [
        17723,
        17729
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 265
    },
    "19197": {
      "fn": "BPool.rebind",
      "offset": [
        17723,
        17743
      ],
      "op": "LT",
      "path": "37"
    },
    "19198": {
      "branch": 366,
      "fn": "BPool.rebind",
      "offset": [
        17723,
        17743
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "19199": {
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4B3B"
    },
    "19202": {
      "branch": 366,
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "19203": {
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "19205": {
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "19206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19212": {
      "op": "SHL"
    },
    "19213": {
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "DUP2",
      "path": "37"
    },
    "19214": {
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "19215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19217": {
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "19219": {
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "DUP3",
      "path": "37"
    },
    "19220": {
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "ADD",
      "path": "37"
    },
    "19221": {
      "op": "MSTORE"
    },
    "19222": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "19224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19226": {
      "op": "DUP3"
    },
    "19227": {
      "op": "ADD"
    },
    "19228": {
      "op": "MSTORE"
    },
    "19229": {
      "op": "PUSH14",
      "value": "0x11549497D3525397D5D15251D215"
    },
    "19244": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "19246": {
      "op": "SHL"
    },
    "19247": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19249": {
      "op": "DUP3"
    },
    "19250": {
      "op": "ADD"
    },
    "19251": {
      "op": "MSTORE"
    },
    "19252": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19254": {
      "op": "ADD"
    },
    "19255": {
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "19258": {
      "op": "JUMP"
    },
    "19259": {
      "fn": "BPool.rebind",
      "offset": [
        17715,
        17762
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19260": {
      "offset": [
        1264,
        1273
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x4B4E"
    },
    "19263": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "19272": {
      "offset": [
        1271,
        1273
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x32"
    },
    "19274": {
      "offset": [
        1264,
        1273
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x570E"
    },
    "19277": {
      "fn": "BPool.rebind",
      "jump": "i",
      "offset": [
        1264,
        1273
      ],
      "op": "JUMP",
      "path": "33"
    },
    "19278": {
      "fn": "BPool.rebind",
      "offset": [
        1264,
        1273
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "19279": {
      "fn": "BPool.rebind",
      "offset": [
        17780,
        17786
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 266
    },
    "19280": {
      "fn": "BPool.rebind",
      "offset": [
        17780,
        17800
      ],
      "op": "GT",
      "path": "37"
    },
    "19281": {
      "branch": 367,
      "fn": "BPool.rebind",
      "offset": [
        17780,
        17800
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "19282": {
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4B8E"
    },
    "19285": {
      "branch": 367,
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "19286": {
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "19288": {
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "19289": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19293": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19295": {
      "op": "SHL"
    },
    "19296": {
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "DUP2",
      "path": "37"
    },
    "19297": {
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "19298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19300": {
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "19302": {
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "DUP3",
      "path": "37"
    },
    "19303": {
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "ADD",
      "path": "37"
    },
    "19304": {
      "op": "MSTORE"
    },
    "19305": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "19307": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19309": {
      "op": "DUP3"
    },
    "19310": {
      "op": "ADD"
    },
    "19311": {
      "op": "MSTORE"
    },
    "19312": {
      "op": "PUSH14",
      "value": "0x11549497D3505617D5D15251D215"
    },
    "19327": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "19329": {
      "op": "SHL"
    },
    "19330": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19332": {
      "op": "DUP3"
    },
    "19333": {
      "op": "ADD"
    },
    "19334": {
      "op": "MSTORE"
    },
    "19335": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19337": {
      "op": "ADD"
    },
    "19338": {
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "19341": {
      "op": "JUMP"
    },
    "19342": {
      "fn": "BPool.rebind",
      "offset": [
        17772,
        17819
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19343": {
      "offset": [
        1376,
        1387
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x4BA5"
    },
    "19346": {
      "offset": [
        1383,
        1387
      ],
      "op": "PUSH5",
      "path": "33",
      "value": "0xE8D4A51000"
    },
    "19352": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "19361": {
      "offset": [
        1376,
        1387
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5795"
    },
    "19364": {
      "fn": "BPool.rebind",
      "jump": "i",
      "offset": [
        1376,
        1387
      ],
      "op": "JUMP",
      "path": "33"
    },
    "19365": {
      "fn": "BPool.rebind",
      "offset": [
        1376,
        1387
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "19366": {
      "fn": "BPool.rebind",
      "offset": [
        17837,
        17844
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 267
    },
    "19367": {
      "fn": "BPool.rebind",
      "offset": [
        17837,
        17859
      ],
      "op": "LT",
      "path": "37"
    },
    "19368": {
      "branch": 368,
      "fn": "BPool.rebind",
      "offset": [
        17837,
        17859
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "19369": {
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4BE6"
    },
    "19372": {
      "branch": 368,
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "19373": {
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "19375": {
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "19376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19382": {
      "op": "SHL"
    },
    "19383": {
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "DUP2",
      "path": "37"
    },
    "19384": {
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "19385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19387": {
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "19389": {
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "DUP3",
      "path": "37"
    },
    "19390": {
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "ADD",
      "path": "37"
    },
    "19391": {
      "op": "MSTORE"
    },
    "19392": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "19394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19396": {
      "op": "DUP3"
    },
    "19397": {
      "op": "ADD"
    },
    "19398": {
      "op": "MSTORE"
    },
    "19399": {
      "op": "PUSH15",
      "value": "0x4552525F4D494E5F42414C414E4345"
    },
    "19415": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "19417": {
      "op": "SHL"
    },
    "19418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19420": {
      "op": "DUP3"
    },
    "19421": {
      "op": "ADD"
    },
    "19422": {
      "op": "MSTORE"
    },
    "19423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19425": {
      "op": "ADD"
    },
    "19426": {
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "19429": {
      "op": "JUMP"
    },
    "19430": {
      "fn": "BPool.rebind",
      "offset": [
        17829,
        17879
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19437": {
      "op": "SHL"
    },
    "19438": {
      "op": "SUB"
    },
    "19439": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17970
      ],
      "op": "DUP4",
      "path": "37"
    },
    "19440": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17970
      ],
      "op": "AND",
      "path": "37"
    },
    "19441": {
      "fn": "BPool.rebind",
      "offset": [
        17935,
        17952
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "19443": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17970
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "19444": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17970
      ],
      "op": "DUP2",
      "path": "37"
    },
    "19445": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17970
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "19446": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17963
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "19448": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17970
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "19450": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17970
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "19451": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17970
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "19453": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17970
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "19454": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17970
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "19455": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17977
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "19457": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17977
      ],
      "op": "ADD",
      "path": "37"
    },
    "19458": {
      "fn": "BPool.rebind",
      "offset": [
        17955,
        17977
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "19459": {
      "fn": "BPool.rebind",
      "offset": [
        17991,
        18009
      ],
      "op": "DUP1",
      "path": "37"
    },
    "19460": {
      "fn": "BPool.rebind",
      "offset": [
        17991,
        18009
      ],
      "op": "DUP3",
      "path": "37"
    },
    "19461": {
      "branch": 369,
      "fn": "BPool.rebind",
      "offset": [
        17991,
        18009
      ],
      "op": "GT",
      "path": "37"
    },
    "19462": {
      "fn": "BPool.rebind",
      "offset": [
        17987,
        18286
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "19463": {
      "fn": "BPool.rebind",
      "offset": [
        17987,
        18286
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4C82"
    },
    "19466": {
      "branch": 369,
      "fn": "BPool.rebind",
      "offset": [
        17987,
        18286
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "19467": {
      "fn": "BPool.rebind",
      "offset": [
        18040,
        18083
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 268,
      "value": "0x4C1F"
    },
    "19470": {
      "fn": "BPool.rebind",
      "offset": [
        18045,
        18057
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE"
    },
    "19472": {
      "fn": "BPool.rebind",
      "offset": [
        18045,
        18057
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "19473": {
      "fn": "BPool.rebind",
      "offset": [
        18059,
        18082
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4C1A"
    },
    "19476": {
      "fn": "BPool.rebind",
      "offset": [
        18064,
        18070
      ],
      "op": "DUP5",
      "path": "37"
    },
    "19477": {
      "fn": "BPool.rebind",
      "offset": [
        18072,
        18081
      ],
      "op": "DUP5",
      "path": "37"
    },
    "19478": {
      "fn": "BPool.rebind",
      "offset": [
        18059,
        18063
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x416C"
    },
    "19481": {
      "fn": "BPool.rebind",
      "jump": "i",
      "offset": [
        18059,
        18082
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19482": {
      "fn": "BPool.rebind",
      "offset": [
        18059,
        18082
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19483": {
      "fn": "BPool.rebind",
      "offset": [
        18040,
        18044
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x480B"
    },
    "19486": {
      "fn": "BPool.rebind",
      "jump": "i",
      "offset": [
        18040,
        18083
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19487": {
      "fn": "BPool.rebind",
      "offset": [
        18040,
        18083
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19488": {
      "fn": "BPool.rebind",
      "offset": [
        18025,
        18037
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE"
    },
    "19490": {
      "fn": "BPool.rebind",
      "offset": [
        18025,
        18083
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "19491": {
      "offset": [
        1320,
        1329
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x4C35"
    },
    "19494": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "19503": {
      "offset": [
        1327,
        1329
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x32"
    },
    "19505": {
      "offset": [
        1320,
        1329
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x570E"
    },
    "19508": {
      "fn": "BPool.rebind",
      "jump": "i",
      "offset": [
        1320,
        1329
      ],
      "op": "JUMP",
      "path": "33"
    },
    "19509": {
      "fn": "BPool.rebind",
      "offset": [
        1320,
        1329
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "19510": {
      "fn": "BPool.rebind",
      "offset": [
        18105,
        18117
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 269,
      "value": "0xE"
    },
    "19512": {
      "fn": "BPool.rebind",
      "offset": [
        18105,
        18117
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "19513": {
      "fn": "BPool.rebind",
      "offset": [
        18105,
        18137
      ],
      "op": "GT",
      "path": "37"
    },
    "19514": {
      "branch": 370,
      "fn": "BPool.rebind",
      "offset": [
        18105,
        18137
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "19515": {
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4C7D"
    },
    "19518": {
      "branch": 370,
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "19519": {
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "19521": {
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "19522": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19526": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19528": {
      "op": "SHL"
    },
    "19529": {
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "DUP2",
      "path": "37"
    },
    "19530": {
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "19531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19533": {
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "19535": {
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "DUP3",
      "path": "37"
    },
    "19536": {
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "ADD",
      "path": "37"
    },
    "19537": {
      "op": "MSTORE"
    },
    "19538": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "19540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19542": {
      "op": "DUP3"
    },
    "19543": {
      "op": "ADD"
    },
    "19544": {
      "op": "MSTORE"
    },
    "19545": {
      "op": "PUSH20",
      "value": "0x11549497D3505617D513D5105317D5D15251D215"
    },
    "19566": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "19568": {
      "op": "SHL"
    },
    "19569": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19571": {
      "op": "DUP3"
    },
    "19572": {
      "op": "ADD"
    },
    "19573": {
      "op": "MSTORE"
    },
    "19574": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19576": {
      "op": "ADD"
    },
    "19577": {
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x99D"
    },
    "19580": {
      "op": "JUMP"
    },
    "19581": {
      "fn": "BPool.rebind",
      "offset": [
        18097,
        18162
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19582": {
      "fn": "BPool.rebind",
      "offset": [
        17987,
        18286
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4C9E"
    },
    "19585": {
      "fn": "BPool.rebind",
      "offset": [
        17987,
        18286
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19586": {
      "fn": "BPool.rebind",
      "offset": [
        17987,
        18286
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19587": {
      "fn": "BPool.rebind",
      "offset": [
        18192,
        18201
      ],
      "op": "DUP1",
      "path": "37"
    },
    "19588": {
      "fn": "BPool.rebind",
      "offset": [
        18183,
        18189
      ],
      "op": "DUP3",
      "path": "37"
    },
    "19589": {
      "branch": 371,
      "fn": "BPool.rebind",
      "offset": [
        18183,
        18201
      ],
      "op": "LT",
      "path": "37"
    },
    "19590": {
      "fn": "BPool.rebind",
      "offset": [
        18179,
        18286
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "19591": {
      "fn": "BPool.rebind",
      "offset": [
        18179,
        18286
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4C9E"
    },
    "19594": {
      "branch": 371,
      "fn": "BPool.rebind",
      "offset": [
        18179,
        18286
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "19595": {
      "fn": "BPool.rebind",
      "offset": [
        18232,
        18275
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 270,
      "value": "0x4C9A"
    },
    "19598": {
      "fn": "BPool.rebind",
      "offset": [
        18237,
        18249
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE"
    },
    "19600": {
      "fn": "BPool.rebind",
      "offset": [
        18237,
        18249
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "19601": {
      "fn": "BPool.rebind",
      "offset": [
        18251,
        18274
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1AAE"
    },
    "19604": {
      "fn": "BPool.rebind",
      "offset": [
        18256,
        18265
      ],
      "op": "DUP4",
      "path": "37"
    },
    "19605": {
      "fn": "BPool.rebind",
      "offset": [
        18267,
        18273
      ],
      "op": "DUP6",
      "path": "37"
    },
    "19606": {
      "fn": "BPool.rebind",
      "offset": [
        18251,
        18255
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x416C"
    },
    "19609": {
      "fn": "BPool.rebind",
      "jump": "i",
      "offset": [
        18251,
        18274
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19610": {
      "fn": "BPool.rebind",
      "offset": [
        18232,
        18275
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19611": {
      "fn": "BPool.rebind",
      "offset": [
        18217,
        18229
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE"
    },
    "19613": {
      "fn": "BPool.rebind",
      "offset": [
        18217,
        18275
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "19614": {
      "fn": "BPool.rebind",
      "offset": [
        18179,
        18286
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19621": {
      "op": "SHL"
    },
    "19622": {
      "op": "SUB"
    },
    "19623": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "DUP5",
      "path": "37",
      "statement": 271
    },
    "19624": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "AND",
      "path": "37"
    },
    "19625": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "19627": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "19628": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "DUP2",
      "path": "37"
    },
    "19629": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "19630": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18303
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "19632": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "19634": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "19635": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "19637": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "19638": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18310
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "19639": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18317
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "19641": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18317
      ],
      "op": "DUP2",
      "path": "37"
    },
    "19642": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18317
      ],
      "op": "ADD",
      "path": "37"
    },
    "19643": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18326
      ],
      "op": "DUP4",
      "path": "37"
    },
    "19644": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18326
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "19645": {
      "fn": "BPool.rebind",
      "offset": [
        18295,
        18326
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "19646": {
      "fn": "BPool.rebind",
      "offset": [
        18420,
        18443
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "19648": {
      "fn": "BPool.rebind",
      "offset": [
        18420,
        18443
      ],
      "op": "ADD",
      "path": "37"
    },
    "19649": {
      "fn": "BPool.rebind",
      "offset": [
        18420,
        18443
      ],
      "op": "DUP1",
      "path": "37"
    },
    "19650": {
      "fn": "BPool.rebind",
      "offset": [
        18420,
        18443
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "19651": {
      "fn": "BPool.rebind",
      "offset": [
        18453,
        18486
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 272
    },
    "19652": {
      "fn": "BPool.rebind",
      "offset": [
        18453,
        18486
      ],
      "op": "DUP5",
      "path": "37"
    },
    "19653": {
      "fn": "BPool.rebind",
      "offset": [
        18453,
        18486
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "19654": {
      "fn": "BPool.rebind",
      "offset": [
        18453,
        18486
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "19655": {
      "fn": "BPool.rebind",
      "offset": [
        18500,
        18520
      ],
      "op": "DUP1",
      "path": "37"
    },
    "19656": {
      "fn": "BPool.rebind",
      "offset": [
        18500,
        18520
      ],
      "op": "DUP5",
      "path": "37"
    },
    "19657": {
      "branch": 372,
      "fn": "BPool.rebind",
      "offset": [
        18500,
        18520
      ],
      "op": "GT",
      "path": "37"
    },
    "19658": {
      "fn": "BPool.rebind",
      "offset": [
        18496,
        18937
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "19659": {
      "fn": "BPool.rebind",
      "offset": [
        18496,
        18937
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4CE7"
    },
    "19662": {
      "branch": 372,
      "fn": "BPool.rebind",
      "offset": [
        18496,
        18937
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "19663": {
      "fn": "BPool.rebind",
      "offset": [
        18536,
        18597
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 273,
      "value": "0x4CE2"
    },
    "19666": {
      "fn": "BPool.rebind",
      "offset": [
        18552,
        18557
      ],
      "op": "DUP6",
      "path": "37"
    },
    "19667": {
      "fn": "BPool.rebind",
      "offset": [
        18559,
        18569
      ],
      "op": "CALLER",
      "path": "37"
    },
    "19668": {
      "fn": "BPool.rebind",
      "offset": [
        18571,
        18596
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4CDD"
    },
    "19671": {
      "fn": "BPool.rebind",
      "offset": [
        18576,
        18583
      ],
      "op": "DUP8",
      "path": "37"
    },
    "19672": {
      "fn": "BPool.rebind",
      "offset": [
        18585,
        18595
      ],
      "op": "DUP6",
      "path": "37"
    },
    "19673": {
      "fn": "BPool.rebind",
      "offset": [
        18571,
        18575
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x416C"
    },
    "19676": {
      "fn": "BPool.rebind",
      "jump": "i",
      "offset": [
        18571,
        18596
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19677": {
      "fn": "BPool.rebind",
      "offset": [
        18571,
        18596
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19678": {
      "fn": "BPool.rebind",
      "offset": [
        18536,
        18551
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x490D"
    },
    "19681": {
      "fn": "BPool.rebind",
      "jump": "i",
      "offset": [
        18536,
        18597
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19682": {
      "fn": "BPool.rebind",
      "offset": [
        18536,
        18597
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19683": {
      "fn": "BPool.rebind",
      "offset": [
        18496,
        18937
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4D0A"
    },
    "19686": {
      "fn": "BPool.rebind",
      "offset": [
        18496,
        18937
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19687": {
      "fn": "BPool.rebind",
      "offset": [
        18496,
        18937
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19688": {
      "fn": "BPool.rebind",
      "offset": [
        18628,
        18638
      ],
      "op": "DUP1",
      "path": "37"
    },
    "19689": {
      "fn": "BPool.rebind",
      "offset": [
        18618,
        18625
      ],
      "op": "DUP5",
      "path": "37"
    },
    "19690": {
      "branch": 373,
      "fn": "BPool.rebind",
      "offset": [
        18618,
        18638
      ],
      "op": "LT",
      "path": "37"
    },
    "19691": {
      "fn": "BPool.rebind",
      "offset": [
        18614,
        18937
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "19692": {
      "fn": "BPool.rebind",
      "offset": [
        18614,
        18937
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4D0A"
    },
    "19695": {
      "branch": 373,
      "fn": "BPool.rebind",
      "offset": [
        18614,
        18937
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "19696": {
      "fn": "BPool.rebind",
      "offset": [
        18736,
        18765
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "19698": {
      "fn": "BPool.rebind",
      "offset": [
        18768,
        18793
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4CFB"
    },
    "19701": {
      "fn": "BPool.rebind",
      "offset": [
        18773,
        18783
      ],
      "op": "DUP3",
      "path": "37"
    },
    "19702": {
      "fn": "BPool.rebind",
      "offset": [
        18785,
        18792
      ],
      "op": "DUP7",
      "path": "37"
    },
    "19703": {
      "fn": "BPool.rebind",
      "offset": [
        18768,
        18772
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x416C"
    },
    "19706": {
      "fn": "BPool.rebind",
      "jump": "i",
      "offset": [
        18768,
        18793
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19707": {
      "fn": "BPool.rebind",
      "offset": [
        18768,
        18793
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19708": {
      "fn": "BPool.rebind",
      "offset": [
        18736,
        18793
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "19709": {
      "fn": "BPool.rebind",
      "offset": [
        18736,
        18793
      ],
      "op": "POP",
      "path": "37"
    },
    "19710": {
      "fn": "BPool.rebind",
      "offset": [
        18807,
        18926
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 274,
      "value": "0x4D08"
    },
    "19713": {
      "fn": "BPool.rebind",
      "offset": [
        18840,
        18845
      ],
      "op": "DUP7",
      "path": "37"
    },
    "19714": {
      "fn": "BPool.rebind",
      "offset": [
        18863,
        18873
      ],
      "op": "CALLER",
      "path": "37"
    },
    "19715": {
      "fn": "BPool.rebind",
      "offset": [
        18891,
        18912
      ],
      "op": "DUP4",
      "path": "37"
    },
    "19716": {
      "fn": "BPool.rebind",
      "offset": [
        18807,
        18822
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41DC"
    },
    "19719": {
      "fn": "BPool.rebind",
      "jump": "i",
      "offset": [
        18807,
        18926
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19720": {
      "fn": "BPool.rebind",
      "offset": [
        18807,
        18926
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19721": {
      "fn": "BPool.rebind",
      "offset": [
        18640,
        18937
      ],
      "op": "POP",
      "path": "37"
    },
    "19722": {
      "fn": "BPool.rebind",
      "offset": [
        18614,
        18937
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "19723": {
      "fn": "BPool.rebind",
      "offset": [
        17705,
        18943
      ],
      "op": "POP",
      "path": "37"
    },
    "19724": {
      "fn": "BPool.rebind",
      "offset": [
        17705,
        18943
      ],
      "op": "POP",
      "path": "37"
    },
    "19725": {
      "fn": "BPool.rebind",
      "offset": [
        17602,
        18943
      ],
      "op": "POP",
      "path": "37"
    },
    "19726": {
      "fn": "BPool.rebind",
      "offset": [
        17602,
        18943
      ],
      "op": "POP",
      "path": "37"
    },
    "19727": {
      "fn": "BPool.rebind",
      "offset": [
        17602,
        18943
      ],
      "op": "POP",
      "path": "37"
    },
    "19728": {
      "fn": "BPool.rebind",
      "jump": "o",
      "offset": [
        17602,
        18943
      ],
      "op": "JUMP",
      "path": "37"
    },
    "19729": {
      "fn": "BNum.bsubSign",
      "offset": [
        1501,
        1715
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "19730": {
      "fn": "BNum.bsubSign",
      "offset": [
        1574,
        1578
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "19732": {
      "fn": "BNum.bsubSign",
      "offset": [
        1580,
        1584
      ],
      "op": "DUP1",
      "path": "36"
    },
    "19733": {
      "fn": "BNum.bsubSign",
      "offset": [
        1609,
        1610
      ],
      "op": "DUP3",
      "path": "36"
    },
    "19734": {
      "fn": "BNum.bsubSign",
      "offset": [
        1604,
        1605
      ],
      "op": "DUP5",
      "path": "36"
    },
    "19735": {
      "branch": 392,
      "fn": "BNum.bsubSign",
      "offset": [
        1604,
        1610
      ],
      "op": "LT",
      "path": "36"
    },
    "19736": {
      "fn": "BNum.bsubSign",
      "offset": [
        1600,
        1709
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4D30"
    },
    "19739": {
      "branch": 392,
      "fn": "BNum.bsubSign",
      "offset": [
        1600,
        1709
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "19740": {
      "fn": "BNum.bsubSign",
      "offset": [
        1634,
        1639
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 275,
      "value": "0x4D25"
    },
    "19743": {
      "fn": "BNum.bsubSign",
      "offset": [
        1638,
        1639
      ],
      "op": "DUP4",
      "path": "36"
    },
    "19744": {
      "fn": "BNum.bsubSign",
      "offset": [
        1634,
        1635
      ],
      "op": "DUP6",
      "path": "36"
    },
    "19745": {
      "fn": "BNum.bsubSign",
      "offset": [
        1634,
        1639
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x58B3"
    },
    "19748": {
      "fn": "BNum.bsubSign",
      "jump": "i",
      "offset": [
        1634,
        1639
      ],
      "op": "JUMP",
      "path": "36"
    },
    "19749": {
      "fn": "BNum.bsubSign",
      "offset": [
        1634,
        1639
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "19750": {
      "fn": "BNum.bsubSign",
      "offset": [
        1641,
        1646
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "19752": {
      "fn": "BNum.bsubSign",
      "offset": [
        1626,
        1647
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "19753": {
      "fn": "BNum.bsubSign",
      "offset": [
        1626,
        1647
      ],
      "op": "POP",
      "path": "36"
    },
    "19754": {
      "fn": "BNum.bsubSign",
      "offset": [
        1626,
        1647
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "19755": {
      "fn": "BNum.bsubSign",
      "offset": [
        1626,
        1647
      ],
      "op": "POP",
      "path": "36"
    },
    "19756": {
      "fn": "BNum.bsubSign",
      "offset": [
        1626,
        1647
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4D41"
    },
    "19759": {
      "fn": "BNum.bsubSign",
      "offset": [
        1626,
        1647
      ],
      "op": "JUMP",
      "path": "36"
    },
    "19760": {
      "fn": "BNum.bsubSign",
      "offset": [
        1600,
        1709
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "19761": {
      "fn": "BNum.bsubSign",
      "offset": [
        1686,
        1691
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 276,
      "value": "0x4D3A"
    },
    "19764": {
      "fn": "BNum.bsubSign",
      "offset": [
        1690,
        1691
      ],
      "op": "DUP5",
      "path": "36"
    },
    "19765": {
      "fn": "BNum.bsubSign",
      "offset": [
        1686,
        1687
      ],
      "op": "DUP5",
      "path": "36"
    },
    "19766": {
      "fn": "BNum.bsubSign",
      "offset": [
        1686,
        1691
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x58B3"
    },
    "19769": {
      "fn": "BNum.bsubSign",
      "jump": "i",
      "offset": [
        1686,
        1691
      ],
      "op": "JUMP",
      "path": "36"
    },
    "19770": {
      "fn": "BNum.bsubSign",
      "offset": [
        1686,
        1691
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "19771": {
      "fn": "BNum.bsubSign",
      "offset": [
        1693,
        1697
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "19773": {
      "fn": "BNum.bsubSign",
      "offset": [
        1678,
        1698
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "19774": {
      "fn": "BNum.bsubSign",
      "offset": [
        1678,
        1698
      ],
      "op": "POP",
      "path": "36"
    },
    "19775": {
      "fn": "BNum.bsubSign",
      "offset": [
        1678,
        1698
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "19776": {
      "fn": "BNum.bsubSign",
      "offset": [
        1678,
        1698
      ],
      "op": "POP",
      "path": "36"
    },
    "19777": {
      "fn": "BNum.bsubSign",
      "offset": [
        1600,
        1709
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "19778": {
      "fn": "BNum.bsubSign",
      "offset": [
        1501,
        1715
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "19779": {
      "fn": "BNum.bsubSign",
      "offset": [
        1501,
        1715
      ],
      "op": "POP",
      "path": "36"
    },
    "19780": {
      "fn": "BNum.bsubSign",
      "offset": [
        1501,
        1715
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "19781": {
      "fn": "BNum.bsubSign",
      "offset": [
        1501,
        1715
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "19782": {
      "fn": "BNum.bsubSign",
      "offset": [
        1501,
        1715
      ],
      "op": "POP",
      "path": "36"
    },
    "19783": {
      "fn": "BNum.bsubSign",
      "jump": "o",
      "offset": [
        1501,
        1715
      ],
      "op": "JUMP",
      "path": "36"
    },
    "19784": {
      "fn": "BTokenBase._pull",
      "offset": [
        2944,
        3040
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "19785": {
      "fn": "BTokenBase._pull",
      "offset": [
        3002,
        3033
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 277,
      "value": "0x1DC3"
    },
    "19788": {
      "fn": "BTokenBase._pull",
      "offset": [
        3008,
        3012
      ],
      "op": "DUP3",
      "path": "38"
    },
    "19789": {
      "fn": "BTokenBase._pull",
      "offset": [
        3022,
        3026
      ],
      "op": "ADDRESS",
      "path": "38"
    },
    "19790": {
      "fn": "BTokenBase._pull",
      "offset": [
        3029,
        3032
      ],
      "op": "DUP4",
      "path": "38"
    },
    "19791": {
      "fn": "BTokenBase._pull",
      "offset": [
        3002,
        3007
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x41F0"
    },
    "19794": {
      "fn": "BTokenBase._pull",
      "jump": "i",
      "offset": [
        3002,
        3033
      ],
      "op": "JUMP",
      "path": "38"
    },
    "19795": {
      "fn": "BTokenBase._burn",
      "offset": [
        2244,
        2566
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "19796": {
      "fn": "BTokenBase._burn",
      "offset": [
        2326,
        2330
      ],
      "op": "ADDRESS",
      "path": "38",
      "statement": 278
    },
    "19797": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2332
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "19799": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2332
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19800": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2332
      ],
      "op": "DUP2",
      "path": "38"
    },
    "19801": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2332
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "19802": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2317
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "19804": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2332
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "19806": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2332
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "19807": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2332
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "19809": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2332
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19810": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2332
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "19811": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2332
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "19812": {
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2339
      ],
      "op": "DUP2",
      "path": "38"
    },
    "19813": {
      "op": "GT"
    },
    "19814": {
      "branch": 404,
      "fn": "BTokenBase._burn",
      "offset": [
        2309,
        2339
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "19815": {
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4DA9"
    },
    "19818": {
      "branch": 404,
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "19819": {
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "19821": {
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "19822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19828": {
      "op": "SHL"
    },
    "19829": {
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "DUP2",
      "path": "38"
    },
    "19830": {
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "19831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19833": {
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "19835": {
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "DUP3",
      "path": "38"
    },
    "19836": {
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "ADD",
      "path": "38"
    },
    "19837": {
      "op": "MSTORE"
    },
    "19838": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "19840": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19842": {
      "op": "DUP3"
    },
    "19843": {
      "op": "ADD"
    },
    "19844": {
      "op": "MSTORE"
    },
    "19845": {
      "op": "PUSH20",
      "value": "0x11549497D25394D551919250D251539517D09053"
    },
    "19866": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "19868": {
      "op": "SHL"
    },
    "19869": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "19871": {
      "op": "DUP3"
    },
    "19872": {
      "op": "ADD"
    },
    "19873": {
      "op": "MSTORE"
    },
    "19874": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "19876": {
      "op": "ADD"
    },
    "19877": {
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x99D"
    },
    "19880": {
      "op": "JUMP"
    },
    "19881": {
      "fn": "BTokenBase._burn",
      "offset": [
        2288,
        2386
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "19882": {
      "fn": "BTokenBase._burn",
      "offset": [
        2444,
        2448
      ],
      "op": "ADDRESS",
      "path": "38",
      "statement": 279
    },
    "19883": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2450
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "19885": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2450
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19886": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2450
      ],
      "op": "DUP2",
      "path": "38"
    },
    "19887": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2450
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "19888": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2435
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "19890": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2450
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "19892": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2450
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "19893": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2450
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "19895": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2450
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19896": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2450
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "19897": {
      "fn": "BTokenBase._burn",
      "offset": [
        2427,
        2450
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "19898": {
      "fn": "BTokenBase._burn",
      "offset": [
        2422,
        2456
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4DC3"
    },
    "19901": {
      "fn": "BTokenBase._burn",
      "offset": [
        2422,
        2456
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19902": {
      "fn": "BTokenBase._burn",
      "offset": [
        2452,
        2455
      ],
      "op": "DUP3",
      "path": "38"
    },
    "19903": {
      "fn": "BTokenBase._burn",
      "offset": [
        2422,
        2426
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x416C"
    },
    "19906": {
      "fn": "BTokenBase._burn",
      "jump": "i",
      "offset": [
        2422,
        2456
      ],
      "op": "JUMP",
      "path": "38"
    },
    "19907": {
      "fn": "BTokenBase._burn",
      "offset": [
        2422,
        2456
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "19908": {
      "fn": "BTokenBase._burn",
      "offset": [
        2413,
        2417
      ],
      "op": "ADDRESS",
      "path": "38"
    },
    "19909": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2419
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "19911": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2419
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19912": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2419
      ],
      "op": "DUP2",
      "path": "38"
    },
    "19913": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2419
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "19914": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2404
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "19916": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2419
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "19918": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2419
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "19919": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2419
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "19921": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2419
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19922": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2419
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "19923": {
      "fn": "BTokenBase._burn",
      "offset": [
        2396,
        2456
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "19924": {
      "fn": "BTokenBase._burn",
      "offset": [
        2486,
        2498
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 280,
      "value": "0x9"
    },
    "19926": {
      "fn": "BTokenBase._burn",
      "offset": [
        2486,
        2498
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "19927": {
      "fn": "BTokenBase._burn",
      "offset": [
        2481,
        2504
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4DE0"
    },
    "19930": {
      "fn": "BTokenBase._burn",
      "offset": [
        2481,
        2504
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19931": {
      "fn": "BTokenBase._burn",
      "offset": [
        2500,
        2503
      ],
      "op": "DUP3",
      "path": "38"
    },
    "19932": {
      "fn": "BTokenBase._burn",
      "offset": [
        2481,
        2485
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x416C"
    },
    "19935": {
      "fn": "BTokenBase._burn",
      "jump": "i",
      "offset": [
        2481,
        2504
      ],
      "op": "JUMP",
      "path": "38"
    },
    "19936": {
      "fn": "BTokenBase._burn",
      "offset": [
        2481,
        2504
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "19937": {
      "fn": "BTokenBase._burn",
      "offset": [
        2466,
        2478
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x9"
    },
    "19939": {
      "fn": "BTokenBase._burn",
      "offset": [
        2466,
        2504
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "19940": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 281,
      "value": "0x40"
    },
    "19942": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "19943": {
      "op": "DUP2"
    },
    "19944": {
      "op": "DUP2"
    },
    "19945": {
      "op": "MSTORE"
    },
    "19946": {
      "fn": "BTokenBase._burn",
      "offset": [
        2551,
        2552
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "19948": {
      "fn": "BTokenBase._burn",
      "offset": [
        2551,
        2552
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19949": {
      "fn": "BTokenBase._burn",
      "offset": [
        2536,
        2540
      ],
      "op": "ADDRESS",
      "path": "38"
    },
    "19950": {
      "fn": "BTokenBase._burn",
      "offset": [
        2536,
        2540
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19951": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "19984": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19987": {
      "op": "ADD"
    },
    "19988": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "19989": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "19991": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "19992": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "DUP1",
      "path": "38"
    },
    "19993": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "19994": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "SUB",
      "path": "38"
    },
    "19995": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "19996": {
      "fn": "BTokenBase._burn",
      "offset": [
        2519,
        2559
      ],
      "op": "LOG3",
      "path": "38"
    },
    "19997": {
      "fn": "BTokenBase._burn",
      "offset": [
        2244,
        2566
      ],
      "op": "POP",
      "path": "38"
    },
    "19998": {
      "fn": "BTokenBase._burn",
      "jump": "o",
      "offset": [
        2244,
        2566
      ],
      "op": "JUMP",
      "path": "38"
    },
    "19999": {
      "fn": "BNum.bfloor",
      "offset": [
        1004,
        1115
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20000": {
      "fn": "BNum.bfloor",
      "offset": [
        1067,
        1071
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "20002": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "20011": {
      "fn": "BNum.bfloor",
      "offset": [
        1094,
        1101
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 282,
      "value": "0x4E33"
    },
    "20014": {
      "fn": "BNum.bfloor",
      "offset": [
        1099,
        1100
      ],
      "op": "DUP4",
      "path": "36"
    },
    "20015": {
      "fn": "BNum.bfloor",
      "offset": [
        1094,
        1098
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4E3D"
    },
    "20018": {
      "fn": "BNum.bfloor",
      "jump": "i",
      "offset": [
        1094,
        1101
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20019": {
      "fn": "BNum.bfloor",
      "offset": [
        1094,
        1101
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20020": {
      "fn": "BNum.bfloor",
      "offset": [
        1094,
        1108
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xA5A"
    },
    "20023": {
      "fn": "BNum.bfloor",
      "offset": [
        1094,
        1108
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "20024": {
      "fn": "BNum.bfloor",
      "offset": [
        1094,
        1108
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "20025": {
      "fn": "BNum.bfloor",
      "offset": [
        1094,
        1108
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x570E"
    },
    "20028": {
      "fn": "BNum.bfloor",
      "jump": "i",
      "offset": [
        1094,
        1108
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20029": {
      "fn": "BNum.btoi",
      "offset": [
        894,
        998
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20030": {
      "fn": "BNum.btoi",
      "offset": [
        956,
        960
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "20032": {
      "fn": "BNum.btoi",
      "offset": [
        983,
        991
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 283,
      "value": "0xA5A"
    },
    "20035": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "20044": {
      "fn": "BNum.btoi",
      "offset": [
        983,
        984
      ],
      "op": "DUP4",
      "path": "36"
    },
    "20045": {
      "fn": "BNum.btoi",
      "offset": [
        983,
        991
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5795"
    },
    "20048": {
      "fn": "BNum.btoi",
      "jump": "i",
      "offset": [
        983,
        991
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20049": {
      "fn": "BNum.bpowi",
      "offset": [
        2429,
        2749
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20050": {
      "fn": "BNum.bpowi",
      "offset": [
        2499,
        2503
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "20052": {
      "fn": "BNum.bpowi",
      "offset": [
        2528,
        2529
      ],
      "op": "DUP3",
      "path": "36"
    },
    "20053": {
      "fn": "BNum.bpowi",
      "offset": [
        2499,
        2503
      ],
      "op": "DUP2",
      "path": "36"
    },
    "20054": {
      "fn": "BNum.bpowi",
      "offset": [
        2548,
        2553
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4E60"
    },
    "20057": {
      "fn": "BNum.bpowi",
      "offset": [
        2552,
        2553
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x2"
    },
    "20059": {
      "fn": "BNum.bpowi",
      "offset": [
        2548,
        2549
      ],
      "op": "DUP6",
      "path": "36"
    },
    "20060": {
      "fn": "BNum.bpowi",
      "offset": [
        2548,
        2553
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x58F3"
    },
    "20063": {
      "fn": "BNum.bpowi",
      "jump": "i",
      "offset": [
        2548,
        2553
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20064": {
      "fn": "BNum.bpowi",
      "offset": [
        2548,
        2553
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20065": {
      "fn": "BNum.bpowi",
      "offset": [
        2548,
        2569
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4E72"
    },
    "20068": {
      "fn": "BNum.bpowi",
      "offset": [
        2548,
        2569
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "20069": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "20078": {
      "fn": "BNum.bpowi",
      "offset": [
        2548,
        2569
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4E74"
    },
    "20081": {
      "fn": "BNum.bpowi",
      "offset": [
        2548,
        2569
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20082": {
      "fn": "BNum.bpowi",
      "offset": [
        2548,
        2569
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20083": {
      "fn": "BNum.bpowi",
      "offset": [
        2561,
        2562
      ],
      "op": "DUP2",
      "path": "36"
    },
    "20084": {
      "fn": "BNum.bpowi",
      "offset": [
        2548,
        2569
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20085": {
      "fn": "BNum.bpowi",
      "offset": [
        2539,
        2569
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "20086": {
      "op": "POP"
    },
    "20087": {
      "fn": "BNum.bpowi",
      "offset": [
        2585,
        2591
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 284,
      "value": "0x4E81"
    },
    "20090": {
      "fn": "BNum.bpowi",
      "offset": [
        2590,
        2591
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x2"
    },
    "20092": {
      "fn": "BNum.bpowi",
      "offset": [
        2585,
        2591
      ],
      "op": "DUP6",
      "path": "36"
    },
    "20093": {
      "fn": "BNum.bpowi",
      "offset": [
        2585,
        2591
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5795"
    },
    "20096": {
      "fn": "BNum.bpowi",
      "jump": "i",
      "offset": [
        2585,
        2591
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20097": {
      "fn": "BNum.bpowi",
      "offset": [
        2585,
        2591
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20098": {
      "fn": "BNum.bpowi",
      "offset": [
        2585,
        2591
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "20099": {
      "fn": "BNum.bpowi",
      "offset": [
        2585,
        2591
      ],
      "op": "POP",
      "path": "36"
    },
    "20100": {
      "fn": "BNum.bpowi",
      "offset": [
        2580,
        2725
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20101": {
      "fn": "BNum.bpowi",
      "offset": [
        2593,
        2599
      ],
      "op": "DUP4",
      "path": "36"
    },
    "20102": {
      "fn": "BNum.bpowi",
      "offset": [
        2593,
        2599
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "20103": {
      "fn": "BNum.bpowi",
      "offset": [
        2580,
        2725
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1938"
    },
    "20106": {
      "fn": "BNum.bpowi",
      "offset": [
        2580,
        2725
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "20107": {
      "fn": "BNum.bpowi",
      "offset": [
        2627,
        2637
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 285,
      "value": "0x4E94"
    },
    "20110": {
      "fn": "BNum.bpowi",
      "offset": [
        2632,
        2633
      ],
      "op": "DUP3",
      "path": "36"
    },
    "20111": {
      "fn": "BNum.bpowi",
      "offset": [
        2635,
        2636
      ],
      "op": "DUP4",
      "path": "36"
    },
    "20112": {
      "fn": "BNum.bpowi",
      "offset": [
        2627,
        2631
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4087"
    },
    "20115": {
      "fn": "BNum.bpowi",
      "jump": "i",
      "offset": [
        2627,
        2637
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20116": {
      "fn": "BNum.bpowi",
      "offset": [
        2627,
        2637
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20117": {
      "fn": "BNum.bpowi",
      "offset": [
        2623,
        2637
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "20118": {
      "op": "POP"
    },
    "20119": {
      "fn": "BNum.bpowi",
      "offset": [
        2656,
        2661
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4EA1"
    },
    "20122": {
      "fn": "BNum.bpowi",
      "offset": [
        2660,
        2661
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x2"
    },
    "20124": {
      "fn": "BNum.bpowi",
      "offset": [
        2656,
        2657
      ],
      "op": "DUP6",
      "path": "36"
    },
    "20125": {
      "fn": "BNum.bpowi",
      "offset": [
        2656,
        2661
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x58F3"
    },
    "20128": {
      "fn": "BNum.bpowi",
      "jump": "i",
      "offset": [
        2656,
        2661
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20129": {
      "fn": "BNum.bpowi",
      "offset": [
        2656,
        2661
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20130": {
      "branch": 393,
      "fn": "BNum.bpowi",
      "offset": [
        2656,
        2666
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "20131": {
      "fn": "BNum.bpowi",
      "offset": [
        2652,
        2715
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4EB3"
    },
    "20134": {
      "branch": 393,
      "fn": "BNum.bpowi",
      "offset": [
        2652,
        2715
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "20135": {
      "fn": "BNum.bpowi",
      "offset": [
        2690,
        2700
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 286,
      "value": "0x4EB0"
    },
    "20138": {
      "fn": "BNum.bpowi",
      "offset": [
        2695,
        2696
      ],
      "op": "DUP2",
      "path": "36"
    },
    "20139": {
      "fn": "BNum.bpowi",
      "offset": [
        2698,
        2699
      ],
      "op": "DUP4",
      "path": "36"
    },
    "20140": {
      "fn": "BNum.bpowi",
      "offset": [
        2690,
        2694
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4087"
    },
    "20143": {
      "fn": "BNum.bpowi",
      "jump": "i",
      "offset": [
        2690,
        2700
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20144": {
      "fn": "BNum.bpowi",
      "offset": [
        2690,
        2700
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20145": {
      "fn": "BNum.bpowi",
      "offset": [
        2686,
        2700
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "20146": {
      "fn": "BNum.bpowi",
      "offset": [
        2686,
        2700
      ],
      "op": "POP",
      "path": "36"
    },
    "20147": {
      "fn": "BNum.bpowi",
      "offset": [
        2652,
        2715
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20148": {
      "fn": "BNum.bpowi",
      "offset": [
        2601,
        2607
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 287,
      "value": "0x4EBE"
    },
    "20151": {
      "fn": "BNum.bpowi",
      "offset": [
        2606,
        2607
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x2"
    },
    "20153": {
      "fn": "BNum.bpowi",
      "offset": [
        2601,
        2607
      ],
      "op": "DUP6",
      "path": "36"
    },
    "20154": {
      "fn": "BNum.bpowi",
      "offset": [
        2601,
        2607
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5795"
    },
    "20157": {
      "fn": "BNum.bpowi",
      "jump": "i",
      "offset": [
        2601,
        2607
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20158": {
      "fn": "BNum.bpowi",
      "offset": [
        2601,
        2607
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20159": {
      "fn": "BNum.bpowi",
      "offset": [
        2601,
        2607
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "20160": {
      "fn": "BNum.bpowi",
      "offset": [
        2601,
        2607
      ],
      "op": "POP",
      "path": "36"
    },
    "20161": {
      "fn": "BNum.bpowi",
      "offset": [
        2580,
        2725
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4E84"
    },
    "20164": {
      "fn": "BNum.bpowi",
      "offset": [
        2580,
        2725
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20165": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3444,
        4484
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20166": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3540,
        3544
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "20168": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3588,
        3591
      ],
      "op": "DUP3",
      "path": "36"
    },
    "20169": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3540,
        3544
      ],
      "op": "DUP2",
      "path": "36"
    },
    "20170": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3540,
        3544
      ],
      "op": "DUP1",
      "path": "36"
    },
    "20171": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3623,
        3643
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4EDC"
    },
    "20174": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3632,
        3636
      ],
      "op": "DUP8",
      "path": "36"
    },
    "20175": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "20184": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3623,
        3631
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4D11"
    },
    "20187": {
      "fn": "BNum.bpowApprox",
      "jump": "i",
      "offset": [
        3623,
        3643
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20188": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3623,
        3643
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20189": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3601,
        3643
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "20190": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3601,
        3643
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "20191": {
      "op": "POP"
    },
    "20192": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3601,
        3643
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "20193": {
      "op": "POP"
    },
    "20194": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "20203": {
      "fn": "BNum.bpowApprox",
      "offset": [
        902,
        906
      ],
      "op": "DUP1",
      "path": "33"
    },
    "20204": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3653,
        3662
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "20206": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3976,
        3977
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "20208": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3962,
        4457
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20209": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3987,
        3996
      ],
      "op": "DUP9",
      "path": "36"
    },
    "20210": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3979,
        3983
      ],
      "op": "DUP5",
      "path": "36"
    },
    "20211": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3979,
        3996
      ],
      "op": "LT",
      "path": "36"
    },
    "20212": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3962,
        4457
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4FA6"
    },
    "20215": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3962,
        4457
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "20216": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4017,
        4026
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "20218": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4029,
        4037
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4F0B"
    },
    "20221": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "20230": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4029,
        4030
      ],
      "op": "DUP4",
      "path": "36"
    },
    "20231": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4029,
        4037
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x570E"
    },
    "20234": {
      "fn": "BNum.bpowApprox",
      "jump": "i",
      "offset": [
        4029,
        4037
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20235": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4029,
        4037
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20236": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4017,
        4037
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "20237": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4017,
        4037
      ],
      "op": "POP",
      "path": "36"
    },
    "20238": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4052,
        4058
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "20240": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4060,
        4069
      ],
      "op": "DUP1",
      "path": "36"
    },
    "20241": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4073,
        4102
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4F2B"
    },
    "20244": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4082,
        4083
      ],
      "op": "DUP11",
      "path": "36"
    },
    "20245": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4085,
        4101
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4F26"
    },
    "20248": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4090,
        4094
      ],
      "op": "DUP6",
      "path": "36"
    },
    "20249": {
      "offset": [
        902,
        906
      ],
      "op": "PUSH8",
      "path": "33",
      "value": "0xDE0B6B3A7640000"
    },
    "20258": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4085,
        4089
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x416C"
    },
    "20261": {
      "fn": "BNum.bpowApprox",
      "jump": "i",
      "offset": [
        4085,
        4101
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20262": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4085,
        4101
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20263": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4073,
        4081
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4D11"
    },
    "20266": {
      "fn": "BNum.bpowApprox",
      "jump": "i",
      "offset": [
        4073,
        4102
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20267": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4073,
        4102
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20268": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4051,
        4102
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "20269": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4051,
        4102
      ],
      "op": "POP",
      "path": "36"
    },
    "20270": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4051,
        4102
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "20271": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4051,
        4102
      ],
      "op": "POP",
      "path": "36"
    },
    "20272": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4123,
        4145
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 288,
      "value": "0x4F3D"
    },
    "20275": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4128,
        4132
      ],
      "op": "DUP8",
      "path": "36"
    },
    "20276": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4134,
        4144
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xDA9"
    },
    "20279": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4139,
        4140
      ],
      "op": "DUP5",
      "path": "36"
    },
    "20280": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4142,
        4143
      ],
      "op": "DUP13",
      "path": "36"
    },
    "20281": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4134,
        4138
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4087"
    },
    "20284": {
      "fn": "BNum.bpowApprox",
      "jump": "i",
      "offset": [
        4134,
        4144
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20285": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4123,
        4145
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20286": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4116,
        4145
      ],
      "op": "SWAP7",
      "path": "36"
    },
    "20287": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4116,
        4145
      ],
      "op": "POP",
      "path": "36"
    },
    "20288": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4166,
        4182
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 289,
      "value": "0x4F49"
    },
    "20291": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4171,
        4175
      ],
      "op": "DUP8",
      "path": "36"
    },
    "20292": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4177,
        4181
      ],
      "op": "DUP5",
      "path": "36"
    },
    "20293": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4166,
        4170
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4564"
    },
    "20296": {
      "fn": "BNum.bpowApprox",
      "jump": "i",
      "offset": [
        4166,
        4182
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20297": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4166,
        4182
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20298": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4159,
        4182
      ],
      "op": "SWAP7",
      "path": "36"
    },
    "20299": {
      "op": "POP"
    },
    "20300": {
      "branch": 394,
      "fn": "BNum.bpowApprox",
      "offset": [
        4200,
        4209
      ],
      "op": "DUP7",
      "path": "36"
    },
    "20301": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4196,
        4216
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4F58"
    },
    "20304": {
      "branch": 394,
      "fn": "BNum.bpowApprox",
      "offset": [
        4196,
        4216
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "20305": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4211,
        4216
      ],
      "op": "POP",
      "path": "36",
      "statement": 290
    },
    "20306": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4211,
        4216
      ],
      "op": "POP",
      "path": "36"
    },
    "20307": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4211,
        4216
      ],
      "op": "POP",
      "path": "36"
    },
    "20308": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4211,
        4216
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4FA6"
    },
    "20311": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4211,
        4216
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20312": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4196,
        4216
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20313": {
      "branch": 395,
      "fn": "BNum.bpowApprox",
      "offset": [
        4235,
        4239
      ],
      "op": "DUP8",
      "path": "36"
    },
    "20314": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4231,
        4261
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "20315": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4231,
        4261
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4F62"
    },
    "20318": {
      "branch": 395,
      "fn": "BNum.bpowApprox",
      "offset": [
        4231,
        4261
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "20319": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4252,
        4261
      ],
      "op": "SWAP4",
      "path": "36",
      "statement": 291
    },
    "20320": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4252,
        4261
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "20321": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4252,
        4261
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "20322": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4231,
        4261
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20323": {
      "branch": 396,
      "fn": "BNum.bpowApprox",
      "offset": [
        4279,
        4283
      ],
      "op": "DUP1",
      "path": "36"
    },
    "20324": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4275,
        4305
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "20325": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4275,
        4305
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4F6C"
    },
    "20328": {
      "branch": 396,
      "fn": "BNum.bpowApprox",
      "offset": [
        4275,
        4305
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "20329": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4296,
        4305
      ],
      "op": "SWAP4",
      "path": "36",
      "statement": 292
    },
    "20330": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4296,
        4305
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "20331": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4296,
        4305
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "20332": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4275,
        4305
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20333": {
      "branch": 397,
      "fn": "BNum.bpowApprox",
      "offset": [
        4323,
        4331
      ],
      "op": "DUP5",
      "path": "36"
    },
    "20334": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4319,
        4447
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "20335": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4319,
        4447
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4F83"
    },
    "20338": {
      "branch": 397,
      "fn": "BNum.bpowApprox",
      "offset": [
        4319,
        4447
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "20339": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4357,
        4372
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 293,
      "value": "0x4F7C"
    },
    "20342": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4362,
        4365
      ],
      "op": "DUP7",
      "path": "36"
    },
    "20343": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4367,
        4371
      ],
      "op": "DUP9",
      "path": "36"
    },
    "20344": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4357,
        4361
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x416C"
    },
    "20347": {
      "fn": "BNum.bpowApprox",
      "jump": "i",
      "offset": [
        4357,
        4372
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20348": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4357,
        4372
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20349": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4351,
        4372
      ],
      "op": "SWAP6",
      "path": "36"
    },
    "20350": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4351,
        4372
      ],
      "op": "POP",
      "path": "36"
    },
    "20351": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4319,
        4447
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4F90"
    },
    "20354": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4319,
        4447
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20355": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4319,
        4447
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20356": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4417,
        4432
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 294,
      "value": "0x4F8D"
    },
    "20359": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4422,
        4425
      ],
      "op": "DUP7",
      "path": "36"
    },
    "20360": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4427,
        4431
      ],
      "op": "DUP9",
      "path": "36"
    },
    "20361": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4417,
        4421
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x480B"
    },
    "20364": {
      "fn": "BNum.bpowApprox",
      "jump": "i",
      "offset": [
        4417,
        4432
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20365": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4417,
        4432
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20366": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4411,
        4432
      ],
      "op": "SWAP6",
      "path": "36"
    },
    "20367": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4411,
        4432
      ],
      "op": "POP",
      "path": "36"
    },
    "20368": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4319,
        4447
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20369": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4003,
        4457
      ],
      "op": "POP",
      "path": "36"
    },
    "20370": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4003,
        4457
      ],
      "op": "POP",
      "path": "36"
    },
    "20371": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4003,
        4457
      ],
      "op": "POP",
      "path": "36"
    },
    "20372": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3998,
        4001
      ],
      "op": "DUP1",
      "path": "36",
      "statement": 295
    },
    "20373": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3998,
        4001
      ],
      "op": "DUP1",
      "path": "36"
    },
    "20374": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3998,
        4001
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4F9E"
    },
    "20377": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3998,
        4001
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "20378": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3998,
        4001
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x587B"
    },
    "20381": {
      "fn": "BNum.bpowApprox",
      "jump": "i",
      "offset": [
        3998,
        4001
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20382": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3998,
        4001
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20383": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3998,
        4001
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "20384": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3998,
        4001
      ],
      "op": "POP",
      "path": "36"
    },
    "20385": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3998,
        4001
      ],
      "op": "POP",
      "path": "36"
    },
    "20386": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3962,
        4457
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4EF0"
    },
    "20389": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3962,
        4457
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20390": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3962,
        4457
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "20391": {
      "op": "POP"
    },
    "20392": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4474,
        4477
      ],
      "op": "SWAP1",
      "path": "36",
      "statement": 296
    },
    "20393": {
      "fn": "BNum.bpowApprox",
      "offset": [
        4474,
        4477
      ],
      "op": "SWAP10",
      "path": "36"
    },
    "20394": {
      "fn": "BNum.bpowApprox",
      "offset": [
        3444,
        4484
      ],
      "op": "SWAP9",
      "path": "36"
    },
    "20395": {
      "op": "POP"
    },
    "20396": {
      "op": "POP"
    },
    "20397": {
      "op": "POP"
    },
    "20398": {
      "op": "POP"
    },
    "20399": {
      "op": "POP"
    },
    "20400": {
      "op": "POP"
    },
    "20401": {
      "op": "POP"
    },
    "20402": {
      "op": "POP"
    },
    "20403": {
      "op": "POP"
    },
    "20404": {
      "fn": "BNum.bpowApprox",
      "jump": "o",
      "offset": [
        3444,
        4484
      ],
      "op": "JUMP",
      "path": "36"
    },
    "20405": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3146,
        3852
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "20406": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "20408": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x500A"
    },
    "20411": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3619,
        3623
      ],
      "op": "DUP3",
      "path": "62"
    },
    "20412": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "20414": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "20415": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "DUP1",
      "path": "62"
    },
    "20416": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "20418": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "ADD",
      "path": "62"
    },
    "20419": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "20421": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "20422": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "DUP1",
      "path": "62"
    },
    "20423": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "20425": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "DUP2",
      "path": "62"
    },
    "20426": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "20427": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "20429": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "ADD",
      "path": "62"
    },
    "20430": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH32",
      "path": "62",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "20463": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "DUP2",
      "path": "62"
    },
    "20464": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "20465": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "POP",
      "path": "62"
    },
    "20466": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3599,
        3604
      ],
      "op": "DUP6",
      "path": "62"
    },
    "20467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20473": {
      "op": "SHL"
    },
    "20474": {
      "op": "SUB"
    },
    "20475": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3618
      ],
      "op": "AND",
      "path": "62"
    },
    "20476": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3618
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x5122"
    },
    "20479": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3618
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "20480": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "SWAP3",
      "path": "62"
    },
    "20481": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "20482": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "20483": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "PUSH4",
      "path": "62",
      "value": "0xFFFFFFFF"
    },
    "20488": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "AND",
      "path": "62"
    },
    "20489": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3591,
        3660
      ],
      "op": "JUMP",
      "path": "62"
    },
    "20490": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3591,
        3660
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "20491": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3674,
        3691
      ],
      "op": "DUP1",
      "path": "62"
    },
    "20492": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3674,
        3691
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "20493": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3565,
        3660
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "20494": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3565,
        3660
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "20495": {
      "op": "POP"
    },
    "20496": {
      "branch": 405,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3674,
        3695
      ],
      "op": "ISZERO",
      "path": "62"
    },
    "20497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3670,
        3846
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x3F79"
    },
    "20500": {
      "branch": 405,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3670,
        3846
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "20501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3769,
        3779
      ],
      "op": "DUP1",
      "path": "62",
      "statement": 297
    },
    "20502": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "DUP1",
      "path": "62"
    },
    "20503": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "20505": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "ADD",
      "path": "62"
    },
    "20506": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "20507": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "20508": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "DUP2",
      "path": "62"
    },
    "20509": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "ADD",
      "path": "62"
    },
    "20510": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "20511": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x5028"
    },
    "20514": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "20515": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "20516": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x57C1"
    },
    "20519": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3758,
        3788
      ],
      "op": "JUMP",
      "path": "62"
    },
    "20520": {
      "branch": 406,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3758,
        3788
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "20521": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x3F79"
    },
    "20524": {
      "branch": 406,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "20525": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "20527": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "20528": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "20532": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "20534": {
      "op": "SHL"
    },
    "20535": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "DUP2",
      "path": "62"
    },
    "20536": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "20537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20539": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x4"
    },
    "20541": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "DUP3",
      "path": "62"
    },
    "20542": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "ADD",
      "path": "62"
    },
    "20543": {
      "op": "MSTORE"
    },
    "20544": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "20546": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20548": {
      "op": "DUP3"
    },
    "20549": {
      "op": "ADD"
    },
    "20550": {
      "op": "MSTORE"
    },
    "20551": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "20584": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "20586": {
      "op": "DUP3"
    },
    "20587": {
      "op": "ADD"
    },
    "20588": {
      "op": "MSTORE"
    },
    "20589": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "20600": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "20602": {
      "op": "SHL"
    },
    "20603": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "20605": {
      "op": "DUP3"
    },
    "20606": {
      "op": "ADD"
    },
    "20607": {
      "op": "MSTORE"
    },
    "20608": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "20610": {
      "op": "ADD"
    },
    "20611": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3750,
        3835
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x99D"
    },
    "20614": {
      "op": "JUMP"
    },
    "20615": {
      "fn": "BTokenBase._mint",
      "offset": [
        2024,
        2238
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "20616": {
      "fn": "BTokenBase._mint",
      "offset": [
        2116,
        2120
      ],
      "op": "ADDRESS",
      "path": "38",
      "statement": 298
    },
    "20617": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2122
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "20619": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2122
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "20620": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2122
      ],
      "op": "DUP2",
      "path": "38"
    },
    "20621": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2122
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "20622": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2107
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "20624": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2122
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "20626": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2122
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "20627": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2122
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "20629": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2122
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "20630": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2122
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "20631": {
      "fn": "BTokenBase._mint",
      "offset": [
        2099,
        2122
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "20632": {
      "fn": "BTokenBase._mint",
      "offset": [
        2094,
        2128
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x50A1"
    },
    "20635": {
      "fn": "BTokenBase._mint",
      "offset": [
        2094,
        2128
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "20636": {
      "fn": "BTokenBase._mint",
      "offset": [
        2124,
        2127
      ],
      "op": "DUP3",
      "path": "38"
    },
    "20637": {
      "fn": "BTokenBase._mint",
      "offset": [
        2094,
        2098
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x480B"
    },
    "20640": {
      "fn": "BTokenBase._mint",
      "jump": "i",
      "offset": [
        2094,
        2128
      ],
      "op": "JUMP",
      "path": "38"
    },
    "20641": {
      "fn": "BTokenBase._mint",
      "offset": [
        2094,
        2128
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "20642": {
      "fn": "BTokenBase._mint",
      "offset": [
        2085,
        2089
      ],
      "op": "ADDRESS",
      "path": "38"
    },
    "20643": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2091
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "20645": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2091
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "20646": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2091
      ],
      "op": "DUP2",
      "path": "38"
    },
    "20647": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2091
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "20648": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2076
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x7"
    },
    "20650": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2091
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "20652": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2091
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "20653": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2091
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "20655": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2091
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "20656": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2091
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "20657": {
      "fn": "BTokenBase._mint",
      "offset": [
        2068,
        2128
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "20658": {
      "fn": "BTokenBase._mint",
      "offset": [
        2158,
        2170
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 299,
      "value": "0x9"
    },
    "20660": {
      "fn": "BTokenBase._mint",
      "offset": [
        2158,
        2170
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "20661": {
      "fn": "BTokenBase._mint",
      "offset": [
        2153,
        2176
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x50BE"
    },
    "20664": {
      "fn": "BTokenBase._mint",
      "offset": [
        2153,
        2176
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "20665": {
      "fn": "BTokenBase._mint",
      "offset": [
        2172,
        2175
      ],
      "op": "DUP3",
      "path": "38"
    },
    "20666": {
      "fn": "BTokenBase._mint",
      "offset": [
        2153,
        2157
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x480B"
    },
    "20669": {
      "fn": "BTokenBase._mint",
      "jump": "i",
      "offset": [
        2153,
        2176
      ],
      "op": "JUMP",
      "path": "38"
    },
    "20670": {
      "fn": "BTokenBase._mint",
      "offset": [
        2153,
        2176
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "20671": {
      "fn": "BTokenBase._mint",
      "offset": [
        2138,
        2150
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x9"
    },
    "20673": {
      "fn": "BTokenBase._mint",
      "offset": [
        2138,
        2176
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "20674": {
      "fn": "BTokenBase._mint",
      "offset": [
        2191,
        2231
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 300,
      "value": "0x40"
    },
    "20676": {
      "fn": "BTokenBase._mint",
      "offset": [
        2191,
        2231
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "20677": {
      "op": "DUP2"
    },
    "20678": {
      "op": "DUP2"
    },
    "20679": {
      "op": "MSTORE"
    },
    "20680": {
      "fn": "BTokenBase._mint",
      "offset": [
        2220,
        2224
      ],
      "op": "ADDRESS",
      "path": "38"
    },
    "20681": {
      "fn": "BTokenBase._mint",
      "offset": [
        2220,
        2224
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "20682": {
      "fn": "BTokenBase._mint",
      "offset": [
        2208,
        2209
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "20684": {
      "fn": "BTokenBase._mint",
      "offset": [
        2208,
        2209
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "20685": {
      "fn": "BTokenBase._mint",
      "offset": [
        2191,
        2231
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "20718": {
      "fn": "BTokenBase._mint",
      "offset": [
        2191,
        2231
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "20719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20721": {
      "op": "ADD"
    },
    "20722": {
      "fn": "BTokenBase._mint",
      "offset": [
        2191,
        2231
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4E14"
    },
    "20725": {
      "op": "JUMP"
    },
    "20726": {
      "fn": "BTokenBase._push",
      "offset": [
        2846,
        2938
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "20727": {
      "fn": "BTokenBase._push",
      "offset": [
        2902,
        2931
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 301,
      "value": "0x1DC3"
    },
    "20730": {
      "fn": "BTokenBase._push",
      "offset": [
        2916,
        2920
      ],
      "op": "ADDRESS",
      "path": "38"
    },
    "20731": {
      "fn": "BTokenBase._push",
      "offset": [
        2923,
        2925
      ],
      "op": "DUP4",
      "path": "38"
    },
    "20732": {
      "fn": "BTokenBase._push",
      "offset": [
        2927,
        2930
      ],
      "op": "DUP4",
      "path": "38"
    },
    "20733": {
      "fn": "BTokenBase._push",
      "offset": [
        2902,
        2907
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x41F0"
    },
    "20736": {
      "fn": "BTokenBase._push",
      "jump": "i",
      "offset": [
        2902,
        2931
      ],
      "op": "JUMP",
      "path": "38"
    },
    "20737": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        851,
        1092
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "20738": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        989,
        1085
      ],
      "op": "PUSH2",
      "path": "62",
      "statement": 302,
      "value": "0x4A4F"
    },
    "20741": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1009,
        1014
      ],
      "op": "DUP5",
      "path": "62"
    },
    "20742": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1039,
        1066
      ],
      "op": "PUSH4",
      "path": "62",
      "value": "0x23B872DD"
    },
    "20747": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1039,
        1066
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0xE0"
    },
    "20749": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1039,
        1066
      ],
      "op": "SHL",
      "path": "62"
    },
    "20750": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1068,
        1072
      ],
      "op": "DUP6",
      "path": "62"
    },
    "20751": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1074,
        1076
      ],
      "op": "DUP6",
      "path": "62"
    },
    "20752": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1078,
        1083
      ],
      "op": "DUP6",
      "path": "62"
    },
    "20753": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1016,
        1084
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "20755": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1016,
        1084
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "20756": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1016,
        1084
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x24"
    },
    "20758": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1016,
        1084
      ],
      "op": "ADD",
      "path": "62"
    },
    "20759": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1016,
        1084
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x47D4"
    },
    "20762": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1016,
        1084
      ],
      "op": "SWAP4",
      "path": "62"
    },
    "20763": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1016,
        1084
      ],
      "op": "SWAP3",
      "path": "62"
    },
    "20764": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1016,
        1084
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "20765": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1016,
        1084
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "20766": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1016,
        1084
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x5828"
    },
    "20769": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1016,
        1084
      ],
      "op": "JUMP",
      "path": "62"
    },
    "20770": {
      "fn": "Address.functionCall",
      "offset": [
        3596,
        3789
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "20771": {
      "fn": "Address.functionCall",
      "offset": [
        3699,
        3711
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x60"
    },
    "20773": {
      "fn": "Address.functionCall",
      "offset": [
        3730,
        3782
      ],
      "op": "PUSH2",
      "path": "47",
      "statement": 303,
      "value": "0x1938"
    },
    "20776": {
      "fn": "Address.functionCall",
      "offset": [
        3752,
        3758
      ],
      "op": "DUP5",
      "path": "47"
    },
    "20777": {
      "fn": "Address.functionCall",
      "offset": [
        3760,
        3764
      ],
      "op": "DUP5",
      "path": "47"
    },
    "20778": {
      "fn": "Address.functionCall",
      "offset": [
        3766,
        3767
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "20780": {
      "fn": "Address.functionCall",
      "offset": [
        3769,
        3781
      ],
      "op": "DUP6",
      "path": "47"
    },
    "20781": {
      "fn": "Address.functionCall",
      "offset": [
        3699,
        3711
      ],
      "op": "DUP6",
      "path": "47"
    },
    "20782": {
      "fn": "Address.isContract",
      "offset": [
        1101,
        1121
      ],
      "op": "DUP5",
      "path": "47"
    },
    "20783": {
      "fn": "Address.isContract",
      "offset": [
        1101,
        1121
      ],
      "op": "EXTCODESIZE",
      "path": "47"
    },
    "20784": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "PUSH2",
      "path": "47",
      "statement": 304,
      "value": "0x517B"
    },
    "20787": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "20788": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "20790": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "20791": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "20795": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "20797": {
      "op": "SHL"
    },
    "20798": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "DUP2",
      "path": "47"
    },
    "20799": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "20800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "20804": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "DUP3",
      "path": "47"
    },
    "20805": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "ADD",
      "path": "47"
    },
    "20806": {
      "op": "MSTORE"
    },
    "20807": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "20809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20811": {
      "op": "DUP3"
    },
    "20812": {
      "op": "ADD"
    },
    "20813": {
      "op": "MSTORE"
    },
    "20814": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "20847": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "20849": {
      "op": "DUP3"
    },
    "20850": {
      "op": "ADD"
    },
    "20851": {
      "op": "MSTORE"
    },
    "20852": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "20854": {
      "op": "ADD"
    },
    "20855": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x99D"
    },
    "20858": {
      "op": "JUMP"
    },
    "20859": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4865,
        4925
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "20860": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4996,
        5008
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "20862": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5010,
        5033
      ],
      "op": "DUP1",
      "path": "47"
    },
    "20863": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5043
      ],
      "op": "DUP7",
      "path": "47"
    },
    "20864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20870": {
      "op": "SHL"
    },
    "20871": {
      "op": "SUB"
    },
    "20872": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5048
      ],
      "op": "AND",
      "path": "47"
    },
    "20873": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5062
      ],
      "op": "DUP6",
      "path": "47"
    },
    "20874": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5069
      ],
      "op": "DUP8",
      "path": "47"
    },
    "20875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "20877": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "20878": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5197"
    },
    "20881": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "20882": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "20883": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5907"
    },
    "20886": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMP",
      "path": "47"
    },
    "20887": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "20888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "20890": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "20892": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "20893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP1",
      "path": "47"
    },
    "20894": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP4",
      "path": "47"
    },
    "20895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SUB",
      "path": "47"
    },
    "20896": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP2",
      "path": "47"
    },
    "20897": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP6",
      "path": "47"
    },
    "20898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP8",
      "path": "47"
    },
    "20899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "GAS",
      "path": "47"
    },
    "20900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "CALL",
      "path": "47"
    },
    "20901": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "20902": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "20903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "20904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "20905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "47"
    },
    "20906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP1",
      "path": "47"
    },
    "20907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "20909": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP2",
      "path": "47"
    },
    "20910": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "EQ",
      "path": "47"
    },
    "20911": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x51D4"
    },
    "20914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "20915": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "20917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "20918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "20919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "20920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "20922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "NOT",
      "path": "47"
    },
    "20923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3F"
    },
    "20925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "47"
    },
    "20926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "ADD",
      "path": "47"
    },
    "20927": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "AND",
      "path": "47"
    },
    "20928": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP3",
      "path": "47"
    },
    "20929": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "ADD",
      "path": "47"
    },
    "20930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "20932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "20933": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "47"
    },
    "20934": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP3",
      "path": "47"
    },
    "20935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "20936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "47"
    },
    "20937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "20939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "20941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP5",
      "path": "47"
    },
    "20942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "ADD",
      "path": "47"
    },
    "20943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "RETURNDATACOPY",
      "path": "47"
    },
    "20944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x51D9"
    },
    "20947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMP",
      "path": "47"
    },
    "20948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "20949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x60"
    },
    "20951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "20952": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "20953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "20954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5037,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "20955": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5070
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "20956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "20957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5070
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "20958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5070
      ],
      "op": "POP",
      "path": "47"
    },
    "20959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5087,
        5139
      ],
      "op": "PUSH2",
      "path": "47",
      "statement": 305,
      "value": "0x479D"
    },
    "20962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5105,
        5112
      ],
      "op": "DUP3",
      "path": "47"
    },
    "20963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5114,
        5124
      ],
      "op": "DUP3",
      "path": "47"
    },
    "20964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5126,
        5138
      ],
      "op": "DUP7",
      "path": "47"
    },
    "20965": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7221,
        7233
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x60"
    },
    "20967": {
      "branch": 374,
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7256
      ],
      "op": "DUP4",
      "path": "47"
    },
    "20968": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7245,
        7825
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "20969": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7245,
        7825
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x51F3"
    },
    "20972": {
      "branch": 374,
      "fn": "Address._verifyCallResult",
      "offset": [
        7245,
        7825
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "20973": {
      "op": "POP"
    },
    "20974": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7279,
        7289
      ],
      "op": "DUP2",
      "path": "47",
      "statement": 306
    },
    "20975": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7272,
        7289
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x9FE"
    },
    "20978": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7272,
        7289
      ],
      "op": "JUMP",
      "path": "47"
    },
    "20979": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7245,
        7825
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "20980": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7390,
        7407
      ],
      "op": "DUP3",
      "path": "47"
    },
    "20981": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7390,
        7407
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "20982": {
      "branch": 375,
      "fn": "Address._verifyCallResult",
      "offset": [
        7390,
        7411
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "20983": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7386,
        7815
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5203"
    },
    "20986": {
      "branch": 375,
      "fn": "Address._verifyCallResult",
      "offset": [
        7386,
        7815
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "20987": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7648,
        7658
      ],
      "op": "DUP3",
      "path": "47"
    },
    "20988": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7642,
        7659
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "20989": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7708,
        7723
      ],
      "op": "DUP1",
      "path": "47"
    },
    "20990": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7695,
        7705
      ],
      "op": "DUP5",
      "path": "47"
    },
    "20991": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7691,
        7693
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "20993": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7687,
        7706
      ],
      "op": "ADD",
      "path": "47"
    },
    "20994": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7724
      ],
      "op": "REVERT",
      "path": "47"
    },
    "20995": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7386,
        7815
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "20996": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7787,
        7799
      ],
      "op": "DUP2",
      "path": "47",
      "statement": 307
    },
    "20997": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "20999": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "21000": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "21004": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "21006": {
      "op": "SHL"
    },
    "21007": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "DUP2",
      "path": "47"
    },
    "21008": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "21009": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "21011": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "ADD",
      "path": "47"
    },
    "21012": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x99D"
    },
    "21015": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "21016": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "21017": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7780,
        7800
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5249"
    },
    "21020": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7780,
        7800
      ],
      "op": "JUMP",
      "path": "47"
    },
    "21021": {
      "op": "JUMPDEST"
    },
    "21022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21024": {
      "op": "JUMPDEST"
    },
    "21025": {
      "op": "DUP4"
    },
    "21026": {
      "op": "DUP2"
    },
    "21027": {
      "op": "LT"
    },
    "21028": {
      "op": "ISZERO"
    },
    "21029": {
      "op": "PUSH2",
      "value": "0x5238"
    },
    "21032": {
      "op": "JUMPI"
    },
    "21033": {
      "op": "DUP2"
    },
    "21034": {
      "op": "DUP2"
    },
    "21035": {
      "op": "ADD"
    },
    "21036": {
      "op": "MLOAD"
    },
    "21037": {
      "op": "DUP4"
    },
    "21038": {
      "op": "DUP3"
    },
    "21039": {
      "op": "ADD"
    },
    "21040": {
      "op": "MSTORE"
    },
    "21041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21043": {
      "op": "ADD"
    },
    "21044": {
      "op": "PUSH2",
      "value": "0x5220"
    },
    "21047": {
      "op": "JUMP"
    },
    "21048": {
      "op": "JUMPDEST"
    },
    "21049": {
      "op": "DUP4"
    },
    "21050": {
      "op": "DUP2"
    },
    "21051": {
      "op": "GT"
    },
    "21052": {
      "op": "ISZERO"
    },
    "21053": {
      "op": "PUSH2",
      "value": "0x4A4F"
    },
    "21056": {
      "op": "JUMPI"
    },
    "21057": {
      "op": "POP"
    },
    "21058": {
      "op": "POP"
    },
    "21059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21061": {
      "op": "SWAP2"
    },
    "21062": {
      "op": "ADD"
    },
    "21063": {
      "op": "MSTORE"
    },
    "21064": {
      "jump": "o",
      "op": "JUMP"
    },
    "21065": {
      "op": "JUMPDEST"
    },
    "21066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21068": {
      "op": "DUP2"
    },
    "21069": {
      "op": "MSTORE"
    },
    "21070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21072": {
      "op": "DUP3"
    },
    "21073": {
      "op": "MLOAD"
    },
    "21074": {
      "op": "DUP1"
    },
    "21075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21077": {
      "op": "DUP5"
    },
    "21078": {
      "op": "ADD"
    },
    "21079": {
      "op": "MSTORE"
    },
    "21080": {
      "op": "PUSH2",
      "value": "0x5268"
    },
    "21083": {
      "op": "DUP2"
    },
    "21084": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21086": {
      "op": "DUP6"
    },
    "21087": {
      "op": "ADD"
    },
    "21088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21090": {
      "op": "DUP8"
    },
    "21091": {
      "op": "ADD"
    },
    "21092": {
      "op": "PUSH2",
      "value": "0x521D"
    },
    "21095": {
      "jump": "i",
      "op": "JUMP"
    },
    "21096": {
      "op": "JUMPDEST"
    },
    "21097": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21099": {
      "op": "ADD"
    },
    "21100": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21102": {
      "op": "NOT"
    },
    "21103": {
      "op": "AND"
    },
    "21104": {
      "op": "SWAP2"
    },
    "21105": {
      "op": "SWAP1"
    },
    "21106": {
      "op": "SWAP2"
    },
    "21107": {
      "op": "ADD"
    },
    "21108": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21110": {
      "op": "ADD"
    },
    "21111": {
      "op": "SWAP3"
    },
    "21112": {
      "op": "SWAP2"
    },
    "21113": {
      "op": "POP"
    },
    "21114": {
      "op": "POP"
    },
    "21115": {
      "jump": "o",
      "op": "JUMP"
    },
    "21116": {
      "op": "JUMPDEST"
    },
    "21117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21123": {
      "op": "SHL"
    },
    "21124": {
      "op": "SUB"
    },
    "21125": {
      "op": "DUP2"
    },
    "21126": {
      "op": "AND"
    },
    "21127": {
      "op": "DUP2"
    },
    "21128": {
      "op": "EQ"
    },
    "21129": {
      "op": "PUSH2",
      "value": "0x3D01"
    },
    "21132": {
      "op": "JUMPI"
    },
    "21133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21135": {
      "op": "DUP1"
    },
    "21136": {
      "op": "REVERT"
    },
    "21137": {
      "op": "JUMPDEST"
    },
    "21138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21140": {
      "op": "DUP1"
    },
    "21141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21143": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21145": {
      "op": "DUP5"
    },
    "21146": {
      "op": "DUP7"
    },
    "21147": {
      "op": "SUB"
    },
    "21148": {
      "op": "SLT"
    },
    "21149": {
      "op": "ISZERO"
    },
    "21150": {
      "op": "PUSH2",
      "value": "0x52A6"
    },
    "21153": {
      "op": "JUMPI"
    },
    "21154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21156": {
      "op": "DUP1"
    },
    "21157": {
      "op": "REVERT"
    },
    "21158": {
      "op": "JUMPDEST"
    },
    "21159": {
      "op": "DUP4"
    },
    "21160": {
      "op": "CALLDATALOAD"
    },
    "21161": {
      "op": "PUSH2",
      "value": "0x52B1"
    },
    "21164": {
      "op": "DUP2"
    },
    "21165": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "21168": {
      "jump": "i",
      "op": "JUMP"
    },
    "21169": {
      "op": "JUMPDEST"
    },
    "21170": {
      "op": "SWAP3"
    },
    "21171": {
      "op": "POP"
    },
    "21172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21174": {
      "op": "DUP5"
    },
    "21175": {
      "op": "ADD"
    },
    "21176": {
      "op": "CALLDATALOAD"
    },
    "21177": {
      "op": "PUSH2",
      "value": "0x52C1"
    },
    "21180": {
      "op": "DUP2"
    },
    "21181": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "21184": {
      "jump": "i",
      "op": "JUMP"
    },
    "21185": {
      "op": "JUMPDEST"
    },
    "21186": {
      "op": "SWAP3"
    },
    "21187": {
      "op": "SWAP6"
    },
    "21188": {
      "op": "SWAP3"
    },
    "21189": {
      "op": "SWAP5"
    },
    "21190": {
      "op": "POP"
    },
    "21191": {
      "op": "POP"
    },
    "21192": {
      "op": "POP"
    },
    "21193": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21195": {
      "op": "SWAP2"
    },
    "21196": {
      "op": "SWAP1"
    },
    "21197": {
      "op": "SWAP2"
    },
    "21198": {
      "op": "ADD"
    },
    "21199": {
      "op": "CALLDATALOAD"
    },
    "21200": {
      "op": "SWAP1"
    },
    "21201": {
      "jump": "o",
      "op": "JUMP"
    },
    "21202": {
      "op": "JUMPDEST"
    },
    "21203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21205": {
      "op": "DUP1"
    },
    "21206": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21208": {
      "op": "DUP4"
    },
    "21209": {
      "op": "DUP6"
    },
    "21210": {
      "op": "SUB"
    },
    "21211": {
      "op": "SLT"
    },
    "21212": {
      "op": "ISZERO"
    },
    "21213": {
      "op": "PUSH2",
      "value": "0x52E5"
    },
    "21216": {
      "op": "JUMPI"
    },
    "21217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21219": {
      "op": "DUP1"
    },
    "21220": {
      "op": "REVERT"
    },
    "21221": {
      "op": "JUMPDEST"
    },
    "21222": {
      "op": "DUP3"
    },
    "21223": {
      "op": "CALLDATALOAD"
    },
    "21224": {
      "op": "PUSH2",
      "value": "0x52F0"
    },
    "21227": {
      "op": "DUP2"
    },
    "21228": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "21231": {
      "jump": "i",
      "op": "JUMP"
    },
    "21232": {
      "op": "JUMPDEST"
    },
    "21233": {
      "op": "SWAP5"
    },
    "21234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21236": {
      "op": "SWAP4"
    },
    "21237": {
      "op": "SWAP1"
    },
    "21238": {
      "op": "SWAP4"
    },
    "21239": {
      "op": "ADD"
    },
    "21240": {
      "op": "CALLDATALOAD"
    },
    "21241": {
      "op": "SWAP4"
    },
    "21242": {
      "op": "POP"
    },
    "21243": {
      "op": "POP"
    },
    "21244": {
      "op": "POP"
    },
    "21245": {
      "jump": "o",
      "op": "JUMP"
    },
    "21246": {
      "op": "JUMPDEST"
    },
    "21247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21249": {
      "op": "DUP1"
    },
    "21250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21252": {
      "op": "DUP1"
    },
    "21253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21255": {
      "op": "DUP1"
    },
    "21256": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "21258": {
      "op": "DUP8"
    },
    "21259": {
      "op": "DUP10"
    },
    "21260": {
      "op": "SUB"
    },
    "21261": {
      "op": "SLT"
    },
    "21262": {
      "op": "ISZERO"
    },
    "21263": {
      "op": "PUSH2",
      "value": "0x5317"
    },
    "21266": {
      "op": "JUMPI"
    },
    "21267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21269": {
      "op": "DUP1"
    },
    "21270": {
      "op": "REVERT"
    },
    "21271": {
      "op": "JUMPDEST"
    },
    "21272": {
      "op": "DUP7"
    },
    "21273": {
      "op": "CALLDATALOAD"
    },
    "21274": {
      "op": "PUSH2",
      "value": "0x5322"
    },
    "21277": {
      "op": "DUP2"
    },
    "21278": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "21281": {
      "jump": "i",
      "op": "JUMP"
    },
    "21282": {
      "op": "JUMPDEST"
    },
    "21283": {
      "op": "SWAP6"
    },
    "21284": {
      "op": "POP"
    },
    "21285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21287": {
      "op": "DUP8"
    },
    "21288": {
      "op": "ADD"
    },
    "21289": {
      "op": "CALLDATALOAD"
    },
    "21290": {
      "op": "SWAP5"
    },
    "21291": {
      "op": "POP"
    },
    "21292": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21294": {
      "op": "DUP8"
    },
    "21295": {
      "op": "ADD"
    },
    "21296": {
      "op": "CALLDATALOAD"
    },
    "21297": {
      "op": "SWAP4"
    },
    "21298": {
      "op": "POP"
    },
    "21299": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21301": {
      "op": "DUP8"
    },
    "21302": {
      "op": "ADD"
    },
    "21303": {
      "op": "CALLDATALOAD"
    },
    "21304": {
      "op": "PUSH2",
      "value": "0x5340"
    },
    "21307": {
      "op": "DUP2"
    },
    "21308": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "21311": {
      "jump": "i",
      "op": "JUMP"
    },
    "21312": {
      "op": "JUMPDEST"
    },
    "21313": {
      "op": "SWAP6"
    },
    "21314": {
      "op": "SWAP9"
    },
    "21315": {
      "op": "SWAP5"
    },
    "21316": {
      "op": "SWAP8"
    },
    "21317": {
      "op": "POP"
    },
    "21318": {
      "op": "SWAP3"
    },
    "21319": {
      "op": "SWAP6"
    },
    "21320": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21322": {
      "op": "DUP2"
    },
    "21323": {
      "op": "ADD"
    },
    "21324": {
      "op": "CALLDATALOAD"
    },
    "21325": {
      "op": "SWAP5"
    },
    "21326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21328": {
      "op": "SWAP1"
    },
    "21329": {
      "op": "SWAP2"
    },
    "21330": {
      "op": "ADD"
    },
    "21331": {
      "op": "CALLDATALOAD"
    },
    "21332": {
      "op": "SWAP4"
    },
    "21333": {
      "op": "POP"
    },
    "21334": {
      "op": "SWAP2"
    },
    "21335": {
      "op": "POP"
    },
    "21336": {
      "op": "POP"
    },
    "21337": {
      "jump": "o",
      "op": "JUMP"
    },
    "21338": {
      "op": "JUMPDEST"
    },
    "21339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21341": {
      "op": "DUP1"
    },
    "21342": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21344": {
      "op": "DUP4"
    },
    "21345": {
      "op": "DUP6"
    },
    "21346": {
      "op": "SUB"
    },
    "21347": {
      "op": "SLT"
    },
    "21348": {
      "op": "ISZERO"
    },
    "21349": {
      "op": "PUSH2",
      "value": "0x536D"
    },
    "21352": {
      "op": "JUMPI"
    },
    "21353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21355": {
      "op": "DUP1"
    },
    "21356": {
      "op": "REVERT"
    },
    "21357": {
      "op": "JUMPDEST"
    },
    "21358": {
      "op": "POP"
    },
    "21359": {
      "op": "POP"
    },
    "21360": {
      "op": "DUP1"
    },
    "21361": {
      "op": "CALLDATALOAD"
    },
    "21362": {
      "op": "SWAP3"
    },
    "21363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21365": {
      "op": "SWAP1"
    },
    "21366": {
      "op": "SWAP2"
    },
    "21367": {
      "op": "ADD"
    },
    "21368": {
      "op": "CALLDATALOAD"
    },
    "21369": {
      "op": "SWAP2"
    },
    "21370": {
      "op": "POP"
    },
    "21371": {
      "jump": "o",
      "op": "JUMP"
    },
    "21372": {
      "op": "JUMPDEST"
    },
    "21373": {
      "op": "DUP1"
    },
    "21374": {
      "op": "ISZERO"
    },
    "21375": {
      "op": "ISZERO"
    },
    "21376": {
      "op": "DUP2"
    },
    "21377": {
      "op": "EQ"
    },
    "21378": {
      "op": "PUSH2",
      "value": "0x3D01"
    },
    "21381": {
      "op": "JUMPI"
    },
    "21382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21384": {
      "op": "DUP1"
    },
    "21385": {
      "op": "REVERT"
    },
    "21386": {
      "op": "JUMPDEST"
    },
    "21387": {
      "op": "DUP1"
    },
    "21388": {
      "op": "CALLDATALOAD"
    },
    "21389": {
      "op": "PUSH2",
      "value": "0x2549"
    },
    "21392": {
      "op": "DUP2"
    },
    "21393": {
      "op": "PUSH2",
      "value": "0x537C"
    },
    "21396": {
      "jump": "i",
      "op": "JUMP"
    },
    "21397": {
      "op": "JUMPDEST"
    },
    "21398": {
      "op": "DUP1"
    },
    "21399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21401": {
      "op": "DUP2"
    },
    "21402": {
      "op": "ADD"
    },
    "21403": {
      "op": "DUP4"
    },
    "21404": {
      "op": "LT"
    },
    "21405": {
      "op": "ISZERO"
    },
    "21406": {
      "op": "PUSH2",
      "value": "0xA5A"
    },
    "21409": {
      "op": "JUMPI"
    },
    "21410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21412": {
      "op": "DUP1"
    },
    "21413": {
      "op": "REVERT"
    },
    "21414": {
      "op": "JUMPDEST"
    },
    "21415": {
      "op": "DUP1"
    },
    "21416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21418": {
      "op": "DUP2"
    },
    "21419": {
      "op": "ADD"
    },
    "21420": {
      "op": "DUP4"
    },
    "21421": {
      "op": "LT"
    },
    "21422": {
      "op": "ISZERO"
    },
    "21423": {
      "op": "PUSH2",
      "value": "0xA5A"
    },
    "21426": {
      "op": "JUMPI"
    },
    "21427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21429": {
      "op": "DUP1"
    },
    "21430": {
      "op": "REVERT"
    },
    "21431": {
      "op": "JUMPDEST"
    },
    "21432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21434": {
      "op": "DUP1"
    },
    "21435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21437": {
      "op": "DUP1"
    },
    "21438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21440": {
      "op": "DUP1"
    },
    "21441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21443": {
      "op": "DUP1"
    },
    "21444": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "21447": {
      "op": "DUP10"
    },
    "21448": {
      "op": "DUP12"
    },
    "21449": {
      "op": "SUB"
    },
    "21450": {
      "op": "SLT"
    },
    "21451": {
      "op": "ISZERO"
    },
    "21452": {
      "op": "PUSH2",
      "value": "0x53D4"
    },
    "21455": {
      "op": "JUMPI"
    },
    "21456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21458": {
      "op": "DUP1"
    },
    "21459": {
      "op": "REVERT"
    },
    "21460": {
      "op": "JUMPDEST"
    },
    "21461": {
      "op": "DUP9"
    },
    "21462": {
      "op": "CALLDATALOAD"
    },
    "21463": {
      "op": "PUSH2",
      "value": "0x53DF"
    },
    "21466": {
      "op": "DUP2"
    },
    "21467": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "21470": {
      "jump": "i",
      "op": "JUMP"
    },
    "21471": {
      "op": "JUMPDEST"
    },
    "21472": {
      "op": "SWAP8"
    },
    "21473": {
      "op": "POP"
    },
    "21474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21476": {
      "op": "DUP10"
    },
    "21477": {
      "op": "ADD"
    },
    "21478": {
      "op": "CALLDATALOAD"
    },
    "21479": {
      "op": "PUSH2",
      "value": "0x53EF"
    },
    "21482": {
      "op": "DUP2"
    },
    "21483": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "21486": {
      "jump": "i",
      "op": "JUMP"
    },
    "21487": {
      "op": "JUMPDEST"
    },
    "21488": {
      "op": "SWAP7"
    },
    "21489": {
      "op": "POP"
    },
    "21490": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21492": {
      "op": "DUP10"
    },
    "21493": {
      "op": "ADD"
    },
    "21494": {
      "op": "CALLDATALOAD"
    },
    "21495": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "21504": {
      "op": "DUP1"
    },
    "21505": {
      "op": "DUP3"
    },
    "21506": {
      "op": "GT"
    },
    "21507": {
      "op": "ISZERO"
    },
    "21508": {
      "op": "PUSH2",
      "value": "0x540C"
    },
    "21511": {
      "op": "JUMPI"
    },
    "21512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21514": {
      "op": "DUP1"
    },
    "21515": {
      "op": "REVERT"
    },
    "21516": {
      "op": "JUMPDEST"
    },
    "21517": {
      "op": "DUP2"
    },
    "21518": {
      "op": "DUP12"
    },
    "21519": {
      "op": "ADD"
    },
    "21520": {
      "op": "SWAP2"
    },
    "21521": {
      "op": "POP"
    },
    "21522": {
      "op": "DUP12"
    },
    "21523": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21525": {
      "op": "DUP4"
    },
    "21526": {
      "op": "ADD"
    },
    "21527": {
      "op": "SLT"
    },
    "21528": {
      "op": "PUSH2",
      "value": "0x5420"
    },
    "21531": {
      "op": "JUMPI"
    },
    "21532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21534": {
      "op": "DUP1"
    },
    "21535": {
      "op": "REVERT"
    },
    "21536": {
      "op": "JUMPDEST"
    },
    "21537": {
      "op": "DUP2"
    },
    "21538": {
      "op": "CALLDATALOAD"
    },
    "21539": {
      "op": "DUP2"
    },
    "21540": {
      "op": "DUP2"
    },
    "21541": {
      "op": "GT"
    },
    "21542": {
      "op": "ISZERO"
    },
    "21543": {
      "op": "PUSH2",
      "value": "0x542F"
    },
    "21546": {
      "op": "JUMPI"
    },
    "21547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21549": {
      "op": "DUP1"
    },
    "21550": {
      "op": "REVERT"
    },
    "21551": {
      "op": "JUMPDEST"
    },
    "21552": {
      "op": "DUP13"
    },
    "21553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21555": {
      "op": "DUP3"
    },
    "21556": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "21558": {
      "op": "SHL"
    },
    "21559": {
      "op": "DUP6"
    },
    "21560": {
      "op": "ADD"
    },
    "21561": {
      "op": "ADD"
    },
    "21562": {
      "op": "GT"
    },
    "21563": {
      "op": "ISZERO"
    },
    "21564": {
      "op": "PUSH2",
      "value": "0x5444"
    },
    "21567": {
      "op": "JUMPI"
    },
    "21568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21570": {
      "op": "DUP1"
    },
    "21571": {
      "op": "REVERT"
    },
    "21572": {
      "op": "JUMPDEST"
    },
    "21573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21575": {
      "op": "DUP4"
    },
    "21576": {
      "op": "ADD"
    },
    "21577": {
      "op": "SWAP9"
    },
    "21578": {
      "op": "POP"
    },
    "21579": {
      "op": "DUP1"
    },
    "21580": {
      "op": "SWAP8"
    },
    "21581": {
      "op": "POP"
    },
    "21582": {
      "op": "POP"
    },
    "21583": {
      "op": "POP"
    },
    "21584": {
      "op": "POP"
    },
    "21585": {
      "op": "PUSH2",
      "value": "0x545C"
    },
    "21588": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21590": {
      "op": "DUP11"
    },
    "21591": {
      "op": "ADD"
    },
    "21592": {
      "op": "PUSH2",
      "value": "0x538A"
    },
    "21595": {
      "jump": "i",
      "op": "JUMP"
    },
    "21596": {
      "op": "JUMPDEST"
    },
    "21597": {
      "op": "SWAP4"
    },
    "21598": {
      "op": "POP"
    },
    "21599": {
      "op": "PUSH2",
      "value": "0x546A"
    },
    "21602": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21604": {
      "op": "DUP11"
    },
    "21605": {
      "op": "ADD"
    },
    "21606": {
      "op": "PUSH2",
      "value": "0x538A"
    },
    "21609": {
      "jump": "i",
      "op": "JUMP"
    },
    "21610": {
      "op": "JUMPDEST"
    },
    "21611": {
      "op": "SWAP3"
    },
    "21612": {
      "op": "POP"
    },
    "21613": {
      "op": "PUSH2",
      "value": "0x5479"
    },
    "21616": {
      "op": "DUP11"
    },
    "21617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21619": {
      "op": "DUP12"
    },
    "21620": {
      "op": "ADD"
    },
    "21621": {
      "op": "PUSH2",
      "value": "0x5395"
    },
    "21624": {
      "jump": "i",
      "op": "JUMP"
    },
    "21625": {
      "op": "JUMPDEST"
    },
    "21626": {
      "op": "SWAP2"
    },
    "21627": {
      "op": "POP"
    },
    "21628": {
      "op": "PUSH2",
      "value": "0x5488"
    },
    "21631": {
      "op": "DUP11"
    },
    "21632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "21634": {
      "op": "DUP12"
    },
    "21635": {
      "op": "ADD"
    },
    "21636": {
      "op": "PUSH2",
      "value": "0x53A6"
    },
    "21639": {
      "jump": "i",
      "op": "JUMP"
    },
    "21640": {
      "op": "JUMPDEST"
    },
    "21641": {
      "op": "SWAP1"
    },
    "21642": {
      "op": "POP"
    },
    "21643": {
      "op": "SWAP3"
    },
    "21644": {
      "op": "SWAP6"
    },
    "21645": {
      "op": "SWAP9"
    },
    "21646": {
      "op": "POP"
    },
    "21647": {
      "op": "SWAP3"
    },
    "21648": {
      "op": "SWAP6"
    },
    "21649": {
      "op": "SWAP9"
    },
    "21650": {
      "op": "SWAP1"
    },
    "21651": {
      "op": "SWAP4"
    },
    "21652": {
      "op": "SWAP7"
    },
    "21653": {
      "op": "POP"
    },
    "21654": {
      "jump": "o",
      "op": "JUMP"
    },
    "21655": {
      "op": "JUMPDEST"
    },
    "21656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21658": {
      "op": "DUP1"
    },
    "21659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21661": {
      "op": "DUP1"
    },
    "21662": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21664": {
      "op": "DUP6"
    },
    "21665": {
      "op": "DUP8"
    },
    "21666": {
      "op": "SUB"
    },
    "21667": {
      "op": "SLT"
    },
    "21668": {
      "op": "ISZERO"
    },
    "21669": {
      "op": "PUSH2",
      "value": "0x54AD"
    },
    "21672": {
      "op": "JUMPI"
    },
    "21673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21675": {
      "op": "DUP1"
    },
    "21676": {
      "op": "REVERT"
    },
    "21677": {
      "op": "JUMPDEST"
    },
    "21678": {
      "op": "DUP5"
    },
    "21679": {
      "op": "CALLDATALOAD"
    },
    "21680": {
      "op": "PUSH2",
      "value": "0x54B8"
    },
    "21683": {
      "op": "DUP2"
    },
    "21684": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "21687": {
      "jump": "i",
      "op": "JUMP"
    },
    "21688": {
      "op": "JUMPDEST"
    },
    "21689": {
      "op": "SWAP4"
    },
    "21690": {
      "op": "POP"
    },
    "21691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21693": {
      "op": "DUP6"
    },
    "21694": {
      "op": "ADD"
    },
    "21695": {
      "op": "CALLDATALOAD"
    },
    "21696": {
      "op": "PUSH2",
      "value": "0x54C8"
    },
    "21699": {
      "op": "DUP2"
    },
    "21700": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "21703": {
      "jump": "i",
      "op": "JUMP"
    },
    "21704": {
      "op": "JUMPDEST"
    },
    "21705": {
      "op": "SWAP4"
    },
    "21706": {
      "op": "SWAP7"
    },
    "21707": {
      "op": "SWAP4"
    },
    "21708": {
      "op": "SWAP6"
    },
    "21709": {
      "op": "POP"
    },
    "21710": {
      "op": "POP"
    },
    "21711": {
      "op": "POP"
    },
    "21712": {
      "op": "POP"
    },
    "21713": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21715": {
      "op": "DUP3"
    },
    "21716": {
      "op": "ADD"
    },
    "21717": {
      "op": "CALLDATALOAD"
    },
    "21718": {
      "op": "SWAP2"
    },
    "21719": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21721": {
      "op": "ADD"
    },
    "21722": {
      "op": "CALLDATALOAD"
    },
    "21723": {
      "op": "SWAP1"
    },
    "21724": {
      "jump": "o",
      "op": "JUMP"
    },
    "21725": {
      "op": "JUMPDEST"
    },
    "21726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21730": {
      "op": "DUP3"
    },
    "21731": {
      "op": "DUP5"
    },
    "21732": {
      "op": "SUB"
    },
    "21733": {
      "op": "SLT"
    },
    "21734": {
      "op": "ISZERO"
    },
    "21735": {
      "op": "PUSH2",
      "value": "0x54EF"
    },
    "21738": {
      "op": "JUMPI"
    },
    "21739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21741": {
      "op": "DUP1"
    },
    "21742": {
      "op": "REVERT"
    },
    "21743": {
      "op": "JUMPDEST"
    },
    "21744": {
      "op": "DUP2"
    },
    "21745": {
      "op": "CALLDATALOAD"
    },
    "21746": {
      "op": "PUSH2",
      "value": "0x9FE"
    },
    "21749": {
      "op": "DUP2"
    },
    "21750": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "21753": {
      "jump": "i",
      "op": "JUMP"
    },
    "21754": {
      "op": "JUMPDEST"
    },
    "21755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21759": {
      "op": "DUP3"
    },
    "21760": {
      "op": "DUP5"
    },
    "21761": {
      "op": "SUB"
    },
    "21762": {
      "op": "SLT"
    },
    "21763": {
      "op": "ISZERO"
    },
    "21764": {
      "op": "PUSH2",
      "value": "0x550C"
    },
    "21767": {
      "op": "JUMPI"
    },
    "21768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21770": {
      "op": "DUP1"
    },
    "21771": {
      "op": "REVERT"
    },
    "21772": {
      "op": "JUMPDEST"
    },
    "21773": {
      "op": "POP"
    },
    "21774": {
      "op": "CALLDATALOAD"
    },
    "21775": {
      "op": "SWAP2"
    },
    "21776": {
      "op": "SWAP1"
    },
    "21777": {
      "op": "POP"
    },
    "21778": {
      "jump": "o",
      "op": "JUMP"
    },
    "21779": {
      "op": "JUMPDEST"
    },
    "21780": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "21785": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "21787": {
      "op": "SHL"
    },
    "21788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21790": {
      "op": "MSTORE"
    },
    "21791": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "21793": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "21795": {
      "op": "MSTORE"
    },
    "21796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "21798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21800": {
      "op": "REVERT"
    },
    "21801": {
      "op": "JUMPDEST"
    },
    "21802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21804": {
      "op": "DUP1"
    },
    "21805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21807": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "21809": {
      "op": "DUP5"
    },
    "21810": {
      "op": "DUP7"
    },
    "21811": {
      "op": "SUB"
    },
    "21812": {
      "op": "SLT"
    },
    "21813": {
      "op": "ISZERO"
    },
    "21814": {
      "op": "PUSH2",
      "value": "0x553E"
    },
    "21817": {
      "op": "JUMPI"
    },
    "21818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21820": {
      "op": "DUP1"
    },
    "21821": {
      "op": "REVERT"
    },
    "21822": {
      "op": "JUMPDEST"
    },
    "21823": {
      "op": "DUP5"
    },
    "21824": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21826": {
      "op": "DUP6"
    },
    "21827": {
      "op": "ADD"
    },
    "21828": {
      "op": "SLT"
    },
    "21829": {
      "op": "PUSH2",
      "value": "0x554D"
    },
    "21832": {
      "op": "JUMPI"
    },
    "21833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21835": {
      "op": "DUP1"
    },
    "21836": {
      "op": "REVERT"
    },
    "21837": {
      "op": "JUMPDEST"
    },
    "21838": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21840": {
      "op": "MLOAD"
    },
    "21841": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21843": {
      "op": "DUP2"
    },
    "21844": {
      "op": "ADD"
    },
    "21845": {
      "op": "DUP2"
    },
    "21846": {
      "op": "DUP2"
    },
    "21847": {
      "op": "LT"
    },
    "21848": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "21857": {
      "op": "DUP3"
    },
    "21858": {
      "op": "GT"
    },
    "21859": {
      "op": "OR"
    },
    "21860": {
      "op": "ISZERO"
    },
    "21861": {
      "op": "PUSH2",
      "value": "0x5570"
    },
    "21864": {
      "op": "JUMPI"
    },
    "21865": {
      "op": "PUSH2",
      "value": "0x5570"
    },
    "21868": {
      "op": "PUSH2",
      "value": "0x5513"
    },
    "21871": {
      "jump": "i",
      "op": "JUMP"
    },
    "21872": {
      "op": "JUMPDEST"
    },
    "21873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21875": {
      "op": "MSTORE"
    },
    "21876": {
      "op": "DUP1"
    },
    "21877": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21879": {
      "op": "DUP7"
    },
    "21880": {
      "op": "ADD"
    },
    "21881": {
      "op": "DUP8"
    },
    "21882": {
      "op": "DUP2"
    },
    "21883": {
      "op": "GT"
    },
    "21884": {
      "op": "ISZERO"
    },
    "21885": {
      "op": "PUSH2",
      "value": "0x5585"
    },
    "21888": {
      "op": "JUMPI"
    },
    "21889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21891": {
      "op": "DUP1"
    },
    "21892": {
      "op": "REVERT"
    },
    "21893": {
      "op": "JUMPDEST"
    },
    "21894": {
      "op": "DUP7"
    },
    "21895": {
      "op": "JUMPDEST"
    },
    "21896": {
      "op": "DUP2"
    },
    "21897": {
      "op": "DUP2"
    },
    "21898": {
      "op": "LT"
    },
    "21899": {
      "op": "ISZERO"
    },
    "21900": {
      "op": "PUSH2",
      "value": "0x559F"
    },
    "21903": {
      "op": "JUMPI"
    },
    "21904": {
      "op": "DUP1"
    },
    "21905": {
      "op": "CALLDATALOAD"
    },
    "21906": {
      "op": "DUP4"
    },
    "21907": {
      "op": "MSTORE"
    },
    "21908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21910": {
      "op": "SWAP3"
    },
    "21911": {
      "op": "DUP4"
    },
    "21912": {
      "op": "ADD"
    },
    "21913": {
      "op": "SWAP3"
    },
    "21914": {
      "op": "ADD"
    },
    "21915": {
      "op": "PUSH2",
      "value": "0x5587"
    },
    "21918": {
      "op": "JUMP"
    },
    "21919": {
      "op": "JUMPDEST"
    },
    "21920": {
      "op": "POP"
    },
    "21921": {
      "op": "SWAP2"
    },
    "21922": {
      "op": "SWAP8"
    },
    "21923": {
      "op": "SWAP2"
    },
    "21924": {
      "op": "CALLDATALOAD"
    },
    "21925": {
      "op": "SWAP7"
    },
    "21926": {
      "op": "POP"
    },
    "21927": {
      "op": "POP"
    },
    "21928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21930": {
      "op": "SWAP5"
    },
    "21931": {
      "op": "SWAP1"
    },
    "21932": {
      "op": "SWAP5"
    },
    "21933": {
      "op": "ADD"
    },
    "21934": {
      "op": "CALLDATALOAD"
    },
    "21935": {
      "op": "SWAP4"
    },
    "21936": {
      "op": "SWAP3"
    },
    "21937": {
      "op": "POP"
    },
    "21938": {
      "op": "POP"
    },
    "21939": {
      "op": "POP"
    },
    "21940": {
      "jump": "o",
      "op": "JUMP"
    },
    "21941": {
      "op": "JUMPDEST"
    },
    "21942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21944": {
      "op": "DUP2"
    },
    "21945": {
      "op": "MLOAD"
    },
    "21946": {
      "op": "DUP1"
    },
    "21947": {
      "op": "DUP5"
    },
    "21948": {
      "op": "MSTORE"
    },
    "21949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21951": {
      "op": "DUP1"
    },
    "21952": {
      "op": "DUP6"
    },
    "21953": {
      "op": "ADD"
    },
    "21954": {
      "op": "SWAP5"
    },
    "21955": {
      "op": "POP"
    },
    "21956": {
      "op": "DUP1"
    },
    "21957": {
      "op": "DUP5"
    },
    "21958": {
      "op": "ADD"
    },
    "21959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21961": {
      "op": "JUMPDEST"
    },
    "21962": {
      "op": "DUP4"
    },
    "21963": {
      "op": "DUP2"
    },
    "21964": {
      "op": "LT"
    },
    "21965": {
      "op": "ISZERO"
    },
    "21966": {
      "op": "PUSH2",
      "value": "0x55EE"
    },
    "21969": {
      "op": "JUMPI"
    },
    "21970": {
      "op": "DUP2"
    },
    "21971": {
      "op": "MLOAD"
    },
    "21972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21978": {
      "op": "SHL"
    },
    "21979": {
      "op": "SUB"
    },
    "21980": {
      "op": "AND"
    },
    "21981": {
      "op": "DUP8"
    },
    "21982": {
      "op": "MSTORE"
    },
    "21983": {
      "op": "SWAP6"
    },
    "21984": {
      "op": "DUP3"
    },
    "21985": {
      "op": "ADD"
    },
    "21986": {
      "op": "SWAP6"
    },
    "21987": {
      "op": "SWAP1"
    },
    "21988": {
      "op": "DUP3"
    },
    "21989": {
      "op": "ADD"
    },
    "21990": {
      "op": "SWAP1"
    },
    "21991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21993": {
      "op": "ADD"
    },
    "21994": {
      "op": "PUSH2",
      "value": "0x55C9"
    },
    "21997": {
      "op": "JUMP"
    },
    "21998": {
      "op": "JUMPDEST"
    },
    "21999": {
      "op": "POP"
    },
    "22000": {
      "op": "SWAP5"
    },
    "22001": {
      "op": "SWAP6"
    },
    "22002": {
      "op": "SWAP5"
    },
    "22003": {
      "op": "POP"
    },
    "22004": {
      "op": "POP"
    },
    "22005": {
      "op": "POP"
    },
    "22006": {
      "op": "POP"
    },
    "22007": {
      "op": "POP"
    },
    "22008": {
      "jump": "o",
      "op": "JUMP"
    },
    "22009": {
      "op": "JUMPDEST"
    },
    "22010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22012": {
      "op": "DUP2"
    },
    "22013": {
      "op": "MSTORE"
    },
    "22014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22016": {
      "op": "PUSH2",
      "value": "0x9FE"
    },
    "22019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22021": {
      "op": "DUP4"
    },
    "22022": {
      "op": "ADD"
    },
    "22023": {
      "op": "DUP5"
    },
    "22024": {
      "op": "PUSH2",
      "value": "0x55B5"
    },
    "22027": {
      "jump": "i",
      "op": "JUMP"
    },
    "22028": {
      "op": "JUMPDEST"
    },
    "22029": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22031": {
      "op": "DUP2"
    },
    "22032": {
      "op": "MSTORE"
    },
    "22033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22035": {
      "op": "PUSH2",
      "value": "0x561F"
    },
    "22038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22040": {
      "op": "DUP4"
    },
    "22041": {
      "op": "ADD"
    },
    "22042": {
      "op": "DUP6"
    },
    "22043": {
      "op": "PUSH2",
      "value": "0x55B5"
    },
    "22046": {
      "jump": "i",
      "op": "JUMP"
    },
    "22047": {
      "op": "JUMPDEST"
    },
    "22048": {
      "op": "DUP3"
    },
    "22049": {
      "op": "DUP2"
    },
    "22050": {
      "op": "SUB"
    },
    "22051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22053": {
      "op": "DUP5"
    },
    "22054": {
      "op": "DUP2"
    },
    "22055": {
      "op": "ADD"
    },
    "22056": {
      "op": "SWAP2"
    },
    "22057": {
      "op": "SWAP1"
    },
    "22058": {
      "op": "SWAP2"
    },
    "22059": {
      "op": "MSTORE"
    },
    "22060": {
      "op": "DUP5"
    },
    "22061": {
      "op": "MLOAD"
    },
    "22062": {
      "op": "DUP1"
    },
    "22063": {
      "op": "DUP4"
    },
    "22064": {
      "op": "MSTORE"
    },
    "22065": {
      "op": "DUP6"
    },
    "22066": {
      "op": "DUP3"
    },
    "22067": {
      "op": "ADD"
    },
    "22068": {
      "op": "SWAP3"
    },
    "22069": {
      "op": "DUP3"
    },
    "22070": {
      "op": "ADD"
    },
    "22071": {
      "op": "SWAP1"
    },
    "22072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22074": {
      "op": "JUMPDEST"
    },
    "22075": {
      "op": "DUP2"
    },
    "22076": {
      "op": "DUP2"
    },
    "22077": {
      "op": "LT"
    },
    "22078": {
      "op": "ISZERO"
    },
    "22079": {
      "op": "PUSH2",
      "value": "0x5656"
    },
    "22082": {
      "op": "JUMPI"
    },
    "22083": {
      "op": "DUP5"
    },
    "22084": {
      "op": "MLOAD"
    },
    "22085": {
      "op": "DUP4"
    },
    "22086": {
      "op": "MSTORE"
    },
    "22087": {
      "op": "SWAP4"
    },
    "22088": {
      "op": "DUP4"
    },
    "22089": {
      "op": "ADD"
    },
    "22090": {
      "op": "SWAP4"
    },
    "22091": {
      "op": "SWAP2"
    },
    "22092": {
      "op": "DUP4"
    },
    "22093": {
      "op": "ADD"
    },
    "22094": {
      "op": "SWAP2"
    },
    "22095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22097": {
      "op": "ADD"
    },
    "22098": {
      "op": "PUSH2",
      "value": "0x563A"
    },
    "22101": {
      "op": "JUMP"
    },
    "22102": {
      "op": "JUMPDEST"
    },
    "22103": {
      "op": "POP"
    },
    "22104": {
      "op": "SWAP1"
    },
    "22105": {
      "op": "SWAP8"
    },
    "22106": {
      "op": "SWAP7"
    },
    "22107": {
      "op": "POP"
    },
    "22108": {
      "op": "POP"
    },
    "22109": {
      "op": "POP"
    },
    "22110": {
      "op": "POP"
    },
    "22111": {
      "op": "POP"
    },
    "22112": {
      "op": "POP"
    },
    "22113": {
      "op": "POP"
    },
    "22114": {
      "jump": "o",
      "op": "JUMP"
    },
    "22115": {
      "op": "JUMPDEST"
    },
    "22116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22118": {
      "op": "DUP1"
    },
    "22119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "22121": {
      "op": "DUP4"
    },
    "22122": {
      "op": "DUP6"
    },
    "22123": {
      "op": "SUB"
    },
    "22124": {
      "op": "SLT"
    },
    "22125": {
      "op": "ISZERO"
    },
    "22126": {
      "op": "PUSH2",
      "value": "0x5676"
    },
    "22129": {
      "op": "JUMPI"
    },
    "22130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22132": {
      "op": "DUP1"
    },
    "22133": {
      "op": "REVERT"
    },
    "22134": {
      "op": "JUMPDEST"
    },
    "22135": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22137": {
      "op": "DUP4"
    },
    "22138": {
      "op": "ADD"
    },
    "22139": {
      "op": "DUP5"
    },
    "22140": {
      "op": "DUP2"
    },
    "22141": {
      "op": "GT"
    },
    "22142": {
      "op": "ISZERO"
    },
    "22143": {
      "op": "PUSH2",
      "value": "0x5687"
    },
    "22146": {
      "op": "JUMPI"
    },
    "22147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22149": {
      "op": "DUP1"
    },
    "22150": {
      "op": "REVERT"
    },
    "22151": {
      "op": "JUMPDEST"
    },
    "22152": {
      "op": "DUP4"
    },
    "22153": {
      "op": "SWAP3"
    },
    "22154": {
      "op": "POP"
    },
    "22155": {
      "op": "DUP5"
    },
    "22156": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "22158": {
      "op": "DUP6"
    },
    "22159": {
      "op": "ADD"
    },
    "22160": {
      "op": "GT"
    },
    "22161": {
      "op": "ISZERO"
    },
    "22162": {
      "op": "PUSH2",
      "value": "0x569A"
    },
    "22165": {
      "op": "JUMPI"
    },
    "22166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22168": {
      "op": "DUP1"
    },
    "22169": {
      "op": "REVERT"
    },
    "22170": {
      "op": "JUMPDEST"
    },
    "22171": {
      "op": "DUP1"
    },
    "22172": {
      "op": "SWAP2"
    },
    "22173": {
      "op": "POP"
    },
    "22174": {
      "op": "POP"
    },
    "22175": {
      "op": "SWAP3"
    },
    "22176": {
      "op": "POP"
    },
    "22177": {
      "op": "SWAP3"
    },
    "22178": {
      "op": "SWAP1"
    },
    "22179": {
      "op": "POP"
    },
    "22180": {
      "jump": "o",
      "op": "JUMP"
    },
    "22181": {
      "op": "JUMPDEST"
    },
    "22182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22184": {
      "op": "DUP1"
    },
    "22185": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22187": {
      "op": "DUP4"
    },
    "22188": {
      "op": "DUP6"
    },
    "22189": {
      "op": "SUB"
    },
    "22190": {
      "op": "SLT"
    },
    "22191": {
      "op": "ISZERO"
    },
    "22192": {
      "op": "PUSH2",
      "value": "0x56B8"
    },
    "22195": {
      "op": "JUMPI"
    },
    "22196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22198": {
      "op": "DUP1"
    },
    "22199": {
      "op": "REVERT"
    },
    "22200": {
      "op": "JUMPDEST"
    },
    "22201": {
      "op": "DUP3"
    },
    "22202": {
      "op": "CALLDATALOAD"
    },
    "22203": {
      "op": "PUSH2",
      "value": "0x56C3"
    },
    "22206": {
      "op": "DUP2"
    },
    "22207": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "22210": {
      "jump": "i",
      "op": "JUMP"
    },
    "22211": {
      "op": "JUMPDEST"
    },
    "22212": {
      "op": "SWAP2"
    },
    "22213": {
      "op": "POP"
    },
    "22214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22216": {
      "op": "DUP4"
    },
    "22217": {
      "op": "ADD"
    },
    "22218": {
      "op": "CALLDATALOAD"
    },
    "22219": {
      "op": "PUSH2",
      "value": "0x569A"
    },
    "22222": {
      "op": "DUP2"
    },
    "22223": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "22226": {
      "jump": "i",
      "op": "JUMP"
    },
    "22227": {
      "op": "JUMPDEST"
    },
    "22228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22230": {
      "op": "DUP1"
    },
    "22231": {
      "op": "DUP3"
    },
    "22232": {
      "op": "MSTORE"
    },
    "22233": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "22235": {
      "op": "SWAP1"
    },
    "22236": {
      "op": "DUP3"
    },
    "22237": {
      "op": "ADD"
    },
    "22238": {
      "op": "MSTORE"
    },
    "22239": {
      "op": "PUSH11",
      "value": "0x4552525F5245454E545259"
    },
    "22251": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "22253": {
      "op": "SHL"
    },
    "22254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22256": {
      "op": "DUP3"
    },
    "22257": {
      "op": "ADD"
    },
    "22258": {
      "op": "MSTORE"
    },
    "22259": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22261": {
      "op": "ADD"
    },
    "22262": {
      "op": "SWAP1"
    },
    "22263": {
      "jump": "o",
      "op": "JUMP"
    },
    "22264": {
      "op": "JUMPDEST"
    },
    "22265": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "22270": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "22272": {
      "op": "SHL"
    },
    "22273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22275": {
      "op": "MSTORE"
    },
    "22276": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "22278": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "22280": {
      "op": "MSTORE"
    },
    "22281": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "22283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22285": {
      "op": "REVERT"
    },
    "22286": {
      "op": "JUMPDEST"
    },
    "22287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22289": {
      "op": "DUP2"
    },
    "22290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22292": {
      "op": "NOT"
    },
    "22293": {
      "op": "DIV"
    },
    "22294": {
      "op": "DUP4"
    },
    "22295": {
      "op": "GT"
    },
    "22296": {
      "op": "DUP3"
    },
    "22297": {
      "op": "ISZERO"
    },
    "22298": {
      "op": "ISZERO"
    },
    "22299": {
      "op": "AND"
    },
    "22300": {
      "op": "ISZERO"
    },
    "22301": {
      "op": "PUSH2",
      "value": "0x5728"
    },
    "22304": {
      "op": "JUMPI"
    },
    "22305": {
      "op": "PUSH2",
      "value": "0x5728"
    },
    "22308": {
      "op": "PUSH2",
      "value": "0x56F8"
    },
    "22311": {
      "jump": "i",
      "op": "JUMP"
    },
    "22312": {
      "op": "JUMPDEST"
    },
    "22313": {
      "op": "POP"
    },
    "22314": {
      "op": "MUL"
    },
    "22315": {
      "op": "SWAP1"
    },
    "22316": {
      "jump": "o",
      "op": "JUMP"
    },
    "22317": {
      "op": "JUMPDEST"
    },
    "22318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22320": {
      "op": "DUP1"
    },
    "22321": {
      "op": "DUP3"
    },
    "22322": {
      "op": "MSTORE"
    },
    "22323": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "22325": {
      "op": "SWAP1"
    },
    "22326": {
      "op": "DUP3"
    },
    "22327": {
      "op": "ADD"
    },
    "22328": {
      "op": "MSTORE"
    },
    "22329": {
      "op": "PUSH17",
      "value": "0x11549497D393D517D19253905312569151"
    },
    "22347": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "22349": {
      "op": "SHL"
    },
    "22350": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22352": {
      "op": "DUP3"
    },
    "22353": {
      "op": "ADD"
    },
    "22354": {
      "op": "MSTORE"
    },
    "22355": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22357": {
      "op": "ADD"
    },
    "22358": {
      "op": "SWAP1"
    },
    "22359": {
      "jump": "o",
      "op": "JUMP"
    },
    "22360": {
      "op": "JUMPDEST"
    },
    "22361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22363": {
      "op": "DUP1"
    },
    "22364": {
      "op": "DUP3"
    },
    "22365": {
      "op": "MSTORE"
    },
    "22366": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "22368": {
      "op": "SWAP1"
    },
    "22369": {
      "op": "DUP3"
    },
    "22370": {
      "op": "ADD"
    },
    "22371": {
      "op": "MSTORE"
    },
    "22372": {
      "op": "PUSH13",
      "value": "0x11549497D31253525517D3D555"
    },
    "22386": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "22388": {
      "op": "SHL"
    },
    "22389": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22391": {
      "op": "DUP3"
    },
    "22392": {
      "op": "ADD"
    },
    "22393": {
      "op": "MSTORE"
    },
    "22394": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22396": {
      "op": "ADD"
    },
    "22397": {
      "op": "SWAP1"
    },
    "22398": {
      "jump": "o",
      "op": "JUMP"
    },
    "22399": {
      "op": "JUMPDEST"
    },
    "22400": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "22405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "22407": {
      "op": "SHL"
    },
    "22408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22410": {
      "op": "MSTORE"
    },
    "22411": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "22413": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "22415": {
      "op": "MSTORE"
    },
    "22416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "22418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22420": {
      "op": "REVERT"
    },
    "22421": {
      "op": "JUMPDEST"
    },
    "22422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22424": {
      "op": "DUP3"
    },
    "22425": {
      "op": "PUSH2",
      "value": "0x57A4"
    },
    "22428": {
      "op": "JUMPI"
    },
    "22429": {
      "op": "PUSH2",
      "value": "0x57A4"
    },
    "22432": {
      "op": "PUSH2",
      "value": "0x577F"
    },
    "22435": {
      "jump": "i",
      "op": "JUMP"
    },
    "22436": {
      "op": "JUMPDEST"
    },
    "22437": {
      "op": "POP"
    },
    "22438": {
      "op": "DIV"
    },
    "22439": {
      "op": "SWAP1"
    },
    "22440": {
      "jump": "o",
      "op": "JUMP"
    },
    "22441": {
      "op": "JUMPDEST"
    },
    "22442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22444": {
      "op": "DUP3"
    },
    "22445": {
      "op": "NOT"
    },
    "22446": {
      "op": "DUP3"
    },
    "22447": {
      "op": "GT"
    },
    "22448": {
      "op": "ISZERO"
    },
    "22449": {
      "op": "PUSH2",
      "value": "0x57BC"
    },
    "22452": {
      "op": "JUMPI"
    },
    "22453": {
      "op": "PUSH2",
      "value": "0x57BC"
    },
    "22456": {
      "op": "PUSH2",
      "value": "0x56F8"
    },
    "22459": {
      "jump": "i",
      "op": "JUMP"
    },
    "22460": {
      "op": "JUMPDEST"
    },
    "22461": {
      "op": "POP"
    },
    "22462": {
      "op": "ADD"
    },
    "22463": {
      "op": "SWAP1"
    },
    "22464": {
      "jump": "o",
      "op": "JUMP"
    },
    "22465": {
      "op": "JUMPDEST"
    },
    "22466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22470": {
      "op": "DUP3"
    },
    "22471": {
      "op": "DUP5"
    },
    "22472": {
      "op": "SUB"
    },
    "22473": {
      "op": "SLT"
    },
    "22474": {
      "op": "ISZERO"
    },
    "22475": {
      "op": "PUSH2",
      "value": "0x57D3"
    },
    "22478": {
      "op": "JUMPI"
    },
    "22479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22481": {
      "op": "DUP1"
    },
    "22482": {
      "op": "REVERT"
    },
    "22483": {
      "op": "JUMPDEST"
    },
    "22484": {
      "op": "DUP2"
    },
    "22485": {
      "op": "MLOAD"
    },
    "22486": {
      "op": "PUSH2",
      "value": "0x9FE"
    },
    "22489": {
      "op": "DUP2"
    },
    "22490": {
      "op": "PUSH2",
      "value": "0x537C"
    },
    "22493": {
      "jump": "i",
      "op": "JUMP"
    },
    "22494": {
      "op": "JUMPDEST"
    },
    "22495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22497": {
      "op": "DUP1"
    },
    "22498": {
      "op": "DUP3"
    },
    "22499": {
      "op": "MSTORE"
    },
    "22500": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "22502": {
      "op": "SWAP1"
    },
    "22503": {
      "op": "DUP3"
    },
    "22504": {
      "op": "ADD"
    },
    "22505": {
      "op": "MSTORE"
    },
    "22506": {
      "op": "PUSH11",
      "value": "0x4552525F4D494E5F464545"
    },
    "22518": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "22520": {
      "op": "SHL"
    },
    "22521": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22523": {
      "op": "DUP3"
    },
    "22524": {
      "op": "ADD"
    },
    "22525": {
      "op": "MSTORE"
    },
    "22526": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22528": {
      "op": "ADD"
    },
    "22529": {
      "op": "SWAP1"
    },
    "22530": {
      "jump": "o",
      "op": "JUMP"
    },
    "22531": {
      "op": "JUMPDEST"
    },
    "22532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22534": {
      "op": "DUP1"
    },
    "22535": {
      "op": "DUP3"
    },
    "22536": {
      "op": "MSTORE"
    },
    "22537": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "22539": {
      "op": "SWAP1"
    },
    "22540": {
      "op": "DUP3"
    },
    "22541": {
      "op": "ADD"
    },
    "22542": {
      "op": "MSTORE"
    },
    "22543": {
      "op": "PUSH11",
      "value": "0x4552525F4D41585F464545"
    },
    "22555": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "22557": {
      "op": "SHL"
    },
    "22558": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22560": {
      "op": "DUP3"
    },
    "22561": {
      "op": "ADD"
    },
    "22562": {
      "op": "MSTORE"
    },
    "22563": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22565": {
      "op": "ADD"
    },
    "22566": {
      "op": "SWAP1"
    },
    "22567": {
      "jump": "o",
      "op": "JUMP"
    },
    "22568": {
      "op": "JUMPDEST"
    },
    "22569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "22575": {
      "op": "SHL"
    },
    "22576": {
      "op": "SUB"
    },
    "22577": {
      "op": "SWAP4"
    },
    "22578": {
      "op": "DUP5"
    },
    "22579": {
      "op": "AND"
    },
    "22580": {
      "op": "DUP2"
    },
    "22581": {
      "op": "MSTORE"
    },
    "22582": {
      "op": "SWAP2"
    },
    "22583": {
      "op": "SWAP1"
    },
    "22584": {
      "op": "SWAP3"
    },
    "22585": {
      "op": "AND"
    },
    "22586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22588": {
      "op": "DUP3"
    },
    "22589": {
      "op": "ADD"
    },
    "22590": {
      "op": "MSTORE"
    },
    "22591": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22593": {
      "op": "DUP2"
    },
    "22594": {
      "op": "ADD"
    },
    "22595": {
      "op": "SWAP2"
    },
    "22596": {
      "op": "SWAP1"
    },
    "22597": {
      "op": "SWAP2"
    },
    "22598": {
      "op": "MSTORE"
    },
    "22599": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22601": {
      "op": "ADD"
    },
    "22602": {
      "op": "SWAP1"
    },
    "22603": {
      "jump": "o",
      "op": "JUMP"
    },
    "22604": {
      "op": "JUMPDEST"
    },
    "22605": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "22610": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "22612": {
      "op": "SHL"
    },
    "22613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22615": {
      "op": "MSTORE"
    },
    "22616": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "22618": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "22620": {
      "op": "MSTORE"
    },
    "22621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "22623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22625": {
      "op": "REVERT"
    },
    "22626": {
      "op": "JUMPDEST"
    },
    "22627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22631": {
      "op": "DUP3"
    },
    "22632": {
      "op": "DUP5"
    },
    "22633": {
      "op": "SUB"
    },
    "22634": {
      "op": "SLT"
    },
    "22635": {
      "op": "ISZERO"
    },
    "22636": {
      "op": "PUSH2",
      "value": "0x5874"
    },
    "22639": {
      "op": "JUMPI"
    },
    "22640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22642": {
      "op": "DUP1"
    },
    "22643": {
      "op": "REVERT"
    },
    "22644": {
      "op": "JUMPDEST"
    },
    "22645": {
      "op": "POP"
    },
    "22646": {
      "op": "MLOAD"
    },
    "22647": {
      "op": "SWAP2"
    },
    "22648": {
      "op": "SWAP1"
    },
    "22649": {
      "op": "POP"
    },
    "22650": {
      "jump": "o",
      "op": "JUMP"
    },
    "22651": {
      "op": "JUMPDEST"
    },
    "22652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22656": {
      "op": "NOT"
    },
    "22657": {
      "op": "DUP3"
    },
    "22658": {
      "op": "EQ"
    },
    "22659": {
      "op": "ISZERO"
    },
    "22660": {
      "op": "PUSH2",
      "value": "0x588F"
    },
    "22663": {
      "op": "JUMPI"
    },
    "22664": {
      "op": "PUSH2",
      "value": "0x588F"
    },
    "22667": {
      "op": "PUSH2",
      "value": "0x56F8"
    },
    "22670": {
      "jump": "i",
      "op": "JUMP"
    },
    "22671": {
      "op": "JUMPDEST"
    },
    "22672": {
      "op": "POP"
    },
    "22673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "22675": {
      "op": "ADD"
    },
    "22676": {
      "op": "SWAP1"
    },
    "22677": {
      "jump": "o",
      "op": "JUMP"
    },
    "22678": {
      "op": "JUMPDEST"
    },
    "22679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22683": {
      "op": "DUP3"
    },
    "22684": {
      "op": "DUP5"
    },
    "22685": {
      "op": "SUB"
    },
    "22686": {
      "op": "SLT"
    },
    "22687": {
      "op": "ISZERO"
    },
    "22688": {
      "op": "PUSH2",
      "value": "0x58A8"
    },
    "22691": {
      "op": "JUMPI"
    },
    "22692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22694": {
      "op": "DUP1"
    },
    "22695": {
      "op": "REVERT"
    },
    "22696": {
      "op": "JUMPDEST"
    },
    "22697": {
      "op": "DUP2"
    },
    "22698": {
      "op": "MLOAD"
    },
    "22699": {
      "op": "PUSH2",
      "value": "0x9FE"
    },
    "22702": {
      "op": "DUP2"
    },
    "22703": {
      "op": "PUSH2",
      "value": "0x527C"
    },
    "22706": {
      "jump": "i",
      "op": "JUMP"
    },
    "22707": {
      "op": "JUMPDEST"
    },
    "22708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22710": {
      "op": "DUP3"
    },
    "22711": {
      "op": "DUP3"
    },
    "22712": {
      "op": "LT"
    },
    "22713": {
      "op": "ISZERO"
    },
    "22714": {
      "op": "PUSH2",
      "value": "0x58C5"
    },
    "22717": {
      "op": "JUMPI"
    },
    "22718": {
      "op": "PUSH2",
      "value": "0x58C5"
    },
    "22721": {
      "op": "PUSH2",
      "value": "0x56F8"
    },
    "22724": {
      "jump": "i",
      "op": "JUMP"
    },
    "22725": {
      "op": "JUMPDEST"
    },
    "22726": {
      "op": "POP"
    },
    "22727": {
      "op": "SUB"
    },
    "22728": {
      "op": "SWAP1"
    },
    "22729": {
      "jump": "o",
      "op": "JUMP"
    },
    "22730": {
      "op": "JUMPDEST"
    },
    "22731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22733": {
      "op": "DUP1"
    },
    "22734": {
      "op": "DUP3"
    },
    "22735": {
      "op": "MSTORE"
    },
    "22736": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "22738": {
      "op": "SWAP1"
    },
    "22739": {
      "op": "DUP3"
    },
    "22740": {
      "op": "ADD"
    },
    "22741": {
      "op": "MSTORE"
    },
    "22742": {
      "op": "PUSH15",
      "value": "0x8AA4A4BE9A82A890BE82A0A0A49EB"
    },
    "22758": {
      "op": "PUSH1",
      "value": "0x8B"
    },
    "22760": {
      "op": "SHL"
    },
    "22761": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "22763": {
      "op": "DUP3"
    },
    "22764": {
      "op": "ADD"
    },
    "22765": {
      "op": "MSTORE"
    },
    "22766": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "22768": {
      "op": "ADD"
    },
    "22769": {
      "op": "SWAP1"
    },
    "22770": {
      "jump": "o",
      "op": "JUMP"
    },
    "22771": {
      "op": "JUMPDEST"
    },
    "22772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22774": {
      "op": "DUP3"
    },
    "22775": {
      "op": "PUSH2",
      "value": "0x5902"
    },
    "22778": {
      "op": "JUMPI"
    },
    "22779": {
      "op": "PUSH2",
      "value": "0x5902"
    },
    "22782": {
      "op": "PUSH2",
      "value": "0x577F"
    },
    "22785": {
      "jump": "i",
      "op": "JUMP"
    },
    "22786": {
      "op": "JUMPDEST"
    },
    "22787": {
      "op": "POP"
    },
    "22788": {
      "op": "MOD"
    },
    "22789": {
      "op": "SWAP1"
    },
    "22790": {
      "jump": "o",
      "op": "JUMP"
    },
    "22791": {
      "op": "JUMPDEST"
    },
    "22792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22794": {
      "op": "DUP3"
    },
    "22795": {
      "op": "MLOAD"
    },
    "22796": {
      "op": "PUSH2",
      "value": "0x5919"
    },
    "22799": {
      "op": "DUP2"
    },
    "22800": {
      "op": "DUP5"
    },
    "22801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "22803": {
      "op": "DUP8"
    },
    "22804": {
      "op": "ADD"
    },
    "22805": {
      "op": "PUSH2",
      "value": "0x521D"
    },
    "22808": {
      "jump": "i",
      "op": "JUMP"
    },
    "22809": {
      "op": "JUMPDEST"
    },
    "22810": {
      "op": "SWAP2"
    },
    "22811": {
      "op": "SWAP1"
    },
    "22812": {
      "op": "SWAP2"
    },
    "22813": {
      "op": "ADD"
    },
    "22814": {
      "op": "SWAP3"
    },
    "22815": {
      "op": "SWAP2"
    },
    "22816": {
      "op": "POP"
    },
    "22817": {
      "op": "POP"
    },
    "22818": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1fe2073e7c4cbbb33081161f5b2e7f048462f858",
  "source": "pragma solidity 0.8.12;\n// Copyright Balancer, BigchainDB GmbH and Ocean Protocol contributors\n// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\n// Code is Apache-2.0 and docs are CC-BY-4.0\n\nimport \"./BToken.sol\";\nimport \"./BMath.sol\";\nimport \"../../interfaces/IPool.sol\";\nimport \"../../interfaces/ISideStaking.sol\";\nimport \"../../utils/SafeERC20.sol\";\n\n\n/**\n * @title BPool\n *\n * @dev Used by the (Ocean version) BFactory contract as a bytecode reference to\n *      deploy new BPools.\n *\n * This contract is a friendly fork of Balancer [1]\n *  [1] https://github.com/balancer-labs/balancer-core/contracts/.\n\n * All fees are expressed in wei.  Examples:\n *  (1e17 = 10 % , 1e16 = 1% , 1e15 = 0.1%, 1e14 = 0.01%)\n */\ncontract BPool is BMath, BToken, IPool {\n    using SafeERC20 for IERC20;\n    struct Record {\n        bool bound; // is token bound to pool\n        uint256 index; // private\n        uint256 denorm; // denormalized weight\n        uint256 balance;\n    }\n\n    event LOG_SWAP(\n        address indexed caller,\n        address indexed tokenIn,\n        address indexed tokenOut,\n        uint256 tokenAmountIn,\n        uint256 tokenAmountOut,\n        uint256 timestamp,\n        uint256 inBalance,\n        uint256 outBalance,\n        uint256 newSpotPrice\n    );\n\n    event LOG_JOIN(\n        address indexed caller,\n        address indexed tokenIn,\n        uint256 tokenAmountIn,\n        uint256 timestamp\n    );\n    event LOG_SETUP(\n        address indexed caller,\n        address indexed baseToken,\n        uint256 baseTokenAmountIn,\n        uint256 baseTokenWeight,\n        address indexed datatoken,\n        uint256 datatokenAmountIn,\n        uint256 datatokenWeight\n    );\n\n    event LOG_EXIT(\n        address indexed caller,\n        address indexed tokenOut,\n        uint256 tokenAmountOut,\n        uint256 timestamp\n    );\n\n    event LOG_CALL(\n        bytes4 indexed sig,\n        address indexed caller,\n        uint256 timestamp,\n        bytes data\n    );\n\n    event LOG_BPT(uint256 bptAmount);\n    event LOG_BPT_SS(uint256 bptAmount); //emitted for SS contract\n\n    event OPCFee(\n        address caller,\n        address OPCWallet,\n        address token,\n        uint256 amount\n    );\n    event SwapFeeChanged(address caller, uint256 amount);\n    event PublishMarketFee(\n        address caller,\n        address marketAddress,\n        address token,\n        uint256 amount\n    );\n    // emited for fees sent to consumeMarket\n    event ConsumeMarketFee(address to, address token, uint256 amount);\n    event SWAP_FEES(uint LPFeeAmount, uint oceanFeeAmount, uint marketFeeAmount,\n        uint consumeMarketFeeAmount, address tokenFeeAddress);\n    //emitted for every change done by publisherMarket\n    event PublishMarketFeeChanged(address caller, address newMarketCollector, uint256 swapFee);\n    event Gulped(address token, uint256 oldBalance, uint256 newBalance);\n    modifier _lock_() {\n        require(!_mutex, \"ERR_REENTRY\");\n        _mutex = true;\n        _;\n        _mutex = false;\n    }\n\n    modifier _viewlock_() {\n        require(!_mutex, \"ERR_REENTRY\");\n        _;\n    }\n\n    bool private _mutex;\n\n    address private _controller; // has CONTROL role\n    bool private _publicSwap; // true if PUBLIC can call SWAP functions\n\n    //address public _publishMarketCollector;\n    address public _publishMarketCollector;\n    // `setSwapFee` and `finalize` require CONTROL\n    // `finalize` sets `PUBLIC can SWAP`, `PUBLIC can JOIN`\n    bool private _finalized;\n\n    address[] private _tokens;\n    mapping(address => Record) private _records;\n    uint256 private _totalWeight;\n    ISideStaking ssContract;\n\n    //-----------------------------------------------------------------------\n    //Proxy contract functionality: begin\n    bool private initialized;\n\n    /**\n     * @dev getId\n     *      Return template id in case we need different ABIs. \n     *      If you construct your own template, please make sure to change the hardcoded value\n     */\n    function getId() pure public returns (uint8) {\n        return 1;\n    }\n\n    function isInitialized() external view returns (bool) {\n        return initialized;\n    }\n\n    // Called prior to contract initialization (e.g creating new BPool instance)\n    // Calls private _initialize function. Only if contract is not initialized.\n    function initialize(\n        address controller,\n        address factory,\n        uint256[] calldata swapFees,\n        bool publicSwap,\n        bool finalized,\n        address[2] calldata tokens,\n        address[1] calldata feeCollectors\n    ) external returns (bool) {\n        require(!initialized, \"ERR_ALREADY_INITIALIZED\");\n        require(controller != address(0), \"ERR_INVALID_CONTROLLER_ADDRESS\");\n        require(factory != address(0), \"ERR_INVALID_FACTORY_ADDRESS\");\n        require(swapFees[0] >= MIN_FEE, \"ERR_MIN_FEE\");\n        require(swapFees[0] <= MAX_FEE, \"ERR_MAX_FEE\");\n        require(swapFees[1] == 0 || swapFees[1]>= MIN_FEE, \"ERR_MIN_FEE\");\n        require(swapFees[1] <= MAX_FEE, \"ERR_MAX_FEE\");\n        return\n            _initialize(\n                controller,\n                factory,\n                swapFees,\n                publicSwap,\n                finalized,\n                tokens,\n                feeCollectors\n            );\n    }\n\n    // Private function called on contract initialization.\n    function _initialize(\n        address controller,\n        address factory,\n        uint256[] memory swapFees,\n        bool publicSwap,\n        bool finalized,\n        address[2] memory tokens,\n        address[1] memory feeCollectors\n    ) private returns (bool) {\n        _controller = controller;\n        _factory = factory;\n        _swapFee = swapFees[0];\n        emit SwapFeeChanged(msg.sender, _swapFee);\n        _swapPublishMarketFee = swapFees[1];\n        _publicSwap = publicSwap;\n        _finalized = finalized;\n        _datatokenAddress = tokens[0];\n        _baseTokenAddress = tokens[1];\n        _publishMarketCollector = feeCollectors[0];\n        emit PublishMarketFeeChanged(msg.sender, _publishMarketCollector, _swapPublishMarketFee);\n        initialized = true;\n        ssContract = ISideStaking(_controller);\n        return initialized;\n    }\n\n    \n    /**\n     * @dev setup\n     *      Initial setup of the pool\n     *      Can be called only by the controller\n     * @param datatokenAddress datatokenAddress\n     * @param datatokenAmount how many datatokens in the initial reserve\n     * @param datatokenWeight datatoken weight (hardcoded in deployer at 50%)\n     * @param baseTokenAddress base token\n     * @param baseTokenAmount how many basetokens in the initial reserve\n     * @param baseTokenWeight base weight (hardcoded in deployer at 50%)\n     */\n    function setup(\n        address datatokenAddress,\n        uint256 datatokenAmount,\n        uint256 datatokenWeight,\n        address baseTokenAddress,\n        uint256 baseTokenAmount,\n        uint256 baseTokenWeight\n    ) external _lock_ {\n        require(msg.sender == _controller, \"ERR_INVALID_CONTROLLER\");\n        require(\n            datatokenAddress == _datatokenAddress,\n            \"ERR_INVALID_DATATOKEN_ADDRESS\"\n        );\n        require(\n            baseTokenAddress == _baseTokenAddress,\n            \"ERR_INVALID_baseToken_ADDRESS\"\n        );\n        // other inputs will be validated prior\n        // calling the below functions\n        // bind datatoken\n        bind(datatokenAddress, datatokenAmount, datatokenWeight);\n        emit LOG_JOIN(\n            msg.sender,\n            datatokenAddress,\n            datatokenAmount,\n            block.timestamp\n        );\n\n        // bind baseToken\n        bind(baseTokenAddress, baseTokenAmount, baseTokenWeight);\n        emit LOG_JOIN(\n            msg.sender,\n            baseTokenAddress,\n            baseTokenAmount,\n            block.timestamp\n        );\n        // finalize\n        finalize();\n        emit LOG_SETUP(\n            msg.sender,\n            baseTokenAddress,\n            baseTokenAmount,\n            baseTokenWeight,\n            datatokenAddress,\n            datatokenAmount,\n            datatokenWeight\n        );\n    }\n\n    //Proxy contract functionality: end\n    //-----------------------------------------------------------------------\n    /**\n     * @dev isPublicSwap\n     *      Returns true if swapping is allowed\n     */\n    function isPublicSwap() external view returns (bool) {\n        return _publicSwap;\n    }\n    /**\n     * @dev isFinalized\n     *      Returns true if pool is finalized\n     */\n    function isFinalized() external view returns (bool) {\n        return _finalized;\n    }\n\n    /**\n     * @dev isBound\n     *      Returns true if token is bound\n     * @param t token to be checked\n     */\n    function isBound(address t) external view returns (bool) {\n        return _records[t].bound;\n    }\n\n    function _checkBound(address token) internal view {\n        require(_records[token].bound, \"ERR_NOT_BOUND\");\n    }\n\n    /**\n     * @dev getNumTokens\n     *      Returns number of tokens bounded to pool\n     */\n    function getNumTokens() external view returns (uint256) {\n        return _tokens.length;\n    }\n\n    /**\n     * @dev getCurrentTokens\n     *      Returns tokens bounded to pool, before the pool is finalized\n     */\n    function getCurrentTokens()\n        external\n        view\n        _viewlock_\n        returns (address[] memory tokens)\n    {\n        return _tokens;\n    }\n\n    /**\n     * @dev getFinalTokens\n     *      Returns tokens bounded to pool, after the pool was finalized\n     */\n    function getFinalTokens()\n        public\n        view\n        _viewlock_\n        returns (address[] memory tokens)\n    {\n        require(_finalized, \"ERR_NOT_FINALIZED\");\n        return _tokens;\n    }\n\n    /**\n     * @dev collectOPC\n     *      Collects and send all OPC Fees to _opcCollector.\n     *      This funtion can be called by anyone, because fees are being sent to _opcCollector\n     */\n    function collectOPC() external {\n        address[] memory tokens = getFinalTokens();\n        for (uint256 i = 0; i < tokens.length; i++) {\n            uint256 amount = communityFees[tokens[i]];\n            communityFees[tokens[i]] = 0;\n            address _opcCollector = IFactoryRouter(_factory).getOPCCollector();\n            emit OPCFee(msg.sender, _opcCollector, tokens[i], amount);\n            IERC20(tokens[i]).safeTransfer(_opcCollector, amount);\n        }\n    }\n\n    /**\n     * @dev getCurrentOPCFees\n     *      Get the current amount of fees which can be withdrawned by OPC\n     * @return address[] - array of tokens addresses\n     *         uint256[] - array of amounts\n     */\n    function getCurrentOPCFees()\n        public\n        view\n        returns (address[] memory, uint256[] memory)\n    {\n        address[] memory poolTokens = getFinalTokens();\n        address[] memory tokens = new address[](poolTokens.length);\n        uint256[] memory amounts = new uint256[](poolTokens.length);\n        for (uint256 i = 0; i < poolTokens.length; i++) {\n            tokens[i] = poolTokens[i];\n            amounts[i] = communityFees[poolTokens[i]];\n        }\n        return (tokens, amounts);\n    }\n\n    /**\n     * @dev getCurrentMarketFees\n     *      Get the current amount of fees which can be withdrawned by _publishMarketCollector\n     * @return address[] - array of tokens addresses\n     *         uint256[] - array of amounts\n     */\n    function getCurrentMarketFees()\n        public\n        view\n        returns (address[] memory, uint256[] memory)\n    {\n        address[] memory poolTokens = getFinalTokens();\n        address[] memory tokens = new address[](poolTokens.length);\n        uint256[] memory amounts = new uint256[](poolTokens.length);\n        for (uint256 i = 0; i < poolTokens.length; i++) {\n            tokens[i] = poolTokens[i];\n            amounts[i] = publishMarketFees[poolTokens[i]];\n        }\n        return (tokens, amounts);\n    }\n\n    /**\n     * @dev collectMarketFee\n     *      Collects and send all Market Fees to _publishMarketCollector.\n     *      This function can be called by anyone, because fees are being sent to _publishMarketCollector\n     */\n    function collectMarketFee() external {\n        address[] memory tokens = getFinalTokens();\n        for (uint256 i = 0; i < tokens.length; i++) {\n            uint256 amount = publishMarketFees[tokens[i]];\n            publishMarketFees[tokens[i]] = 0;\n            emit PublishMarketFee(\n                msg.sender,\n                _publishMarketCollector,\n                tokens[i],\n                amount\n            );\n            IERC20(tokens[i]).safeTransfer(_publishMarketCollector, amount);\n        }\n    }\n\n    /**\n     * @dev updatePublishMarketFee\n     *      Set _newCollector as _publishMarketCollector\n     * @param _newCollector new _publishMarketCollector\n     * @param _newSwapFee new swapFee\n     */\n    function updatePublishMarketFee(address _newCollector, uint256 _newSwapFee) external {\n        require(_publishMarketCollector == msg.sender, \"ONLY MARKET COLLECTOR\");\n        require(_newCollector != address(0), \"Invalid _newCollector address\");\n        require(_newSwapFee ==0 || _newSwapFee >= MIN_FEE, \"ERR_MIN_FEE\");\n        require(_newSwapFee <= MAX_FEE, \"ERR_MAX_FEE\");\n        _publishMarketCollector = _newCollector;\n        _swapPublishMarketFee = _newSwapFee;\n        emit PublishMarketFeeChanged(msg.sender, _publishMarketCollector, _swapPublishMarketFee);\n    }\n\n    /**\n     * @dev getDenormalizedWeight\n     *      Returns denormalized weight of a token\n     * @param token token to be checked\n     */\n    function getDenormalizedWeight(address token)\n        external\n        view\n        _viewlock_\n        returns (uint256)\n    {\n        _checkBound(token);\n        return _records[token].denorm;\n    }\n\n     /**\n     * @dev getTotalDenormalizedWeight\n     *      Returns total denormalized weught of the pool\n     */\n    function getTotalDenormalizedWeight()\n        external\n        view\n        _viewlock_\n        returns (uint256)\n    {\n        return _totalWeight;\n    }\n\n    /**\n     * @dev getNormalizedWeight\n     *      Returns normalized weight of a token\n     * @param token token to be checked\n     */\n    \n    function getNormalizedWeight(address token)\n        external\n        view\n        _viewlock_\n        returns (uint256)\n    {\n        _checkBound(token);\n        uint256 denorm = _records[token].denorm;\n        return bdiv(denorm, _totalWeight);\n    }\n\n\n    /**\n     * @dev getBalance\n     *      Returns the current token reserve amount\n     * @param token token to be checked\n     */\n    function getBalance(address token)\n        external\n        view\n        _viewlock_\n        returns (uint256)\n    {\n        _checkBound(token);\n        return _records[token].balance;\n    }\n\n    /**\n     * @dev getSwapFee\n     *      Returns the current Liquidity Providers swap fee\n     */\n    function getSwapFee() external view returns (uint256) {\n        return _swapFee;\n    }\n\n    /**\n     * @dev getMarketFee\n     *      Returns the current fee of publishingMarket\n     */\n    function getMarketFee() external view returns (uint256) {\n        return _swapPublishMarketFee;\n    }\n\n    /**\n     * @dev getController\n     *      Returns the current controller address (ssBot)\n     */\n    function getController() external view returns (address) {\n        return _controller;\n    }\n\n    /**\n     * @dev getDatatokenAddress\n     *      Returns the current datatoken address\n     */\n    function getDatatokenAddress() external view returns (address) {\n        return _datatokenAddress;\n    }\n\n    /**\n     * @dev getBaseTokenAddress\n     *      Returns the current baseToken address\n     */\n    function getBaseTokenAddress() external view returns (address) {\n        return _baseTokenAddress;\n    }\n\n\n    /**\n     * @dev setSwapFee\n     *      Allows controller to change the swapFee\n     * @param swapFee new swap fee (max 1e17 = 10 % , 1e16 = 1% , 1e15 = 0.1%, 1e14 = 0.01%)\n     */\n    function setSwapFee(uint256 swapFee) public {\n        require(msg.sender == _controller, \"ERR_NOT_CONTROLLER\");\n        require(swapFee >= MIN_FEE, \"ERR_MIN_FEE\");\n        require(swapFee <= MAX_FEE, \"ERR_MAX_FEE\");\n        _swapFee = swapFee;\n        emit SwapFeeChanged(msg.sender, swapFee);\n    }\n\n    /**\n     * @dev finalize\n     *      Finalize pool. After this,new tokens cannot be bound\n     */\n    function finalize() internal {\n        _finalized = true;\n        _publicSwap = true;\n\n        _mintPoolShare(INIT_POOL_SUPPLY);\n        _pushPoolShare(msg.sender, INIT_POOL_SUPPLY);\n    }\n\n    /**\n     * @dev bind\n     *      Bind a new token to the pool.\n     * @param token token address\n     * @param balance initial reserve\n     * @param denorm denormalized weight\n     */\n    function bind(\n        address token,\n        uint256 balance,\n        uint256 denorm\n    ) internal {\n        require(msg.sender == _controller, \"ERR_NOT_CONTROLLER\");\n        require(!_records[token].bound, \"ERR_IS_BOUND\");\n        require(!_finalized, \"ERR_IS_FINALIZED\");\n\n        require(_tokens.length < MAX_BOUND_TOKENS, \"ERR_MAX_TOKENS\");\n\n        _records[token] = Record({\n            bound: true,\n            index: _tokens.length,\n            denorm: 0, // balance and denorm will be validated\n            balance: 0 // and set by `rebind`\n        });\n        _tokens.push(token);\n        rebind(token, balance, denorm);\n    }\n\n    /**\n     * @dev rebind\n     *      Update pool reserves & weight after a token bind\n     * @param token token address\n     * @param balance initial reserve\n     * @param denorm denormalized weight\n     */\n    function rebind(\n        address token,\n        uint256 balance,\n        uint256 denorm\n    ) internal {\n        require(denorm >= MIN_WEIGHT, \"ERR_MIN_WEIGHT\");\n        require(denorm <= MAX_WEIGHT, \"ERR_MAX_WEIGHT\");\n        require(balance >= MIN_BALANCE, \"ERR_MIN_BALANCE\");\n\n        // Adjust the denorm and totalWeight\n        uint256 oldWeight = _records[token].denorm;\n        if (denorm > oldWeight) {\n            _totalWeight = badd(_totalWeight, bsub(denorm, oldWeight));\n            require(_totalWeight <= MAX_TOTAL_WEIGHT, \"ERR_MAX_TOTAL_WEIGHT\");\n        } else if (denorm < oldWeight) {\n            _totalWeight = bsub(_totalWeight, bsub(oldWeight, denorm));\n        }\n        _records[token].denorm = denorm;\n\n        // Adjust the balance record and actual token balance\n        uint256 oldBalance = _records[token].balance;\n        _records[token].balance = balance;\n        if (balance > oldBalance) {\n            _pullUnderlying(token, msg.sender, bsub(balance, oldBalance));\n        } else if (balance < oldBalance) {\n            // In this case liquidity is being withdrawn, we don't have EXIT_FEES\n            uint256 tokenBalanceWithdrawn = bsub(oldBalance, balance);\n            _pushUnderlying(\n                token,\n                msg.sender,\n                tokenBalanceWithdrawn\n            );\n        }\n    }\n\n    /**\n     * @dev getSpotPrice\n     *      Return the spot price of swapping tokenIn to tokenOut\n     * @param tokenIn in token\n     * @param tokenOut out token\n     * @param _consumeMarketSwapFee consume market swap fee \n     */\n    function getSpotPrice(\n        address tokenIn,\n        address tokenOut,\n        uint256 _consumeMarketSwapFee\n    ) external view _viewlock_ returns (uint256 spotPrice) {\n        _checkBound(tokenIn);\n        _checkBound(tokenOut);\n        Record storage inRecord = _records[tokenIn];\n        Record storage outRecord = _records[tokenOut];\n        return\n            calcSpotPrice(\n                inRecord.balance,\n                inRecord.denorm,\n                outRecord.balance,\n                outRecord.denorm,\n                _consumeMarketSwapFee\n            );\n    }\n\n    // view function used for batch buy. useful for frontend\n     /**\n     * @dev getAmountInExactOut\n     *      How many tokensIn do you need in order to get exact tokenAmountOut.\n            Returns: tokenAmountIn, LPFee, opcFee , publishMarketSwapFee, consumeMarketSwapFee\n     * @param tokenIn token to be swaped\n     * @param tokenOut token to get\n     * @param tokenAmountOut exact amount of tokenOut\n     * @param _consumeMarketSwapFee consume market swap fee\n     */\n\n    function getAmountInExactOut(\n        address tokenIn,\n        address tokenOut,\n        uint256 tokenAmountOut,\n        uint256 _consumeMarketSwapFee\n    )\n        external\n        view\n        returns (\n            // _viewlock_\n            uint256 tokenAmountIn, uint lpFeeAmount, \n            uint oceanFeeAmount, \n            uint publishMarketSwapFeeAmount,\n            uint consumeMarketSwapFeeAmount\n        )\n    {\n        _checkBound(tokenIn);\n        _checkBound(tokenOut);\n        uint256[4] memory data = [\n            _records[tokenIn].balance,\n            _records[tokenIn].denorm,\n            _records[tokenOut].balance,\n            _records[tokenOut].denorm\n        ];\n        uint tokenAmountInBalance;\n        swapfees memory _swapfees;\n        (tokenAmountIn, tokenAmountInBalance, _swapfees) =        \n            calcInGivenOut(\n                data,\n                tokenAmountOut,\n                // tokenIn,\n                _consumeMarketSwapFee\n            );\n        return(tokenAmountIn, _swapfees.LPFee, _swapfees.oceanFeeAmount, \n        _swapfees.publishMarketFeeAmount, _swapfees.consumeMarketFee);\n\n    }\n\n    // view function useful for frontend\n    /**\n     * @dev getAmountOutExactIn\n     *      How many tokensOut you will get for a exact tokenAmountIn\n            Returns: tokenAmountOut, LPFee, opcFee ,  publishMarketSwapFee, consumeMarketSwapFee\n     * @param tokenIn token to be swaped\n     * @param tokenOut token to get\n     * @param tokenAmountOut exact amount of tokenOut\n     * @param _consumeMarketSwapFee consume market swap fee\n     */\n    function getAmountOutExactIn(\n        address tokenIn,\n        address tokenOut,\n        uint256 tokenAmountIn,\n        uint256 _consumeMarketSwapFee\n    )\n        external\n        view\n        returns (\n            //  _viewlock_\n            uint256 tokenAmountOut,\n            uint lpFeeAmount, \n            uint oceanFeeAmount, \n            uint publishMarketSwapFeeAmount,\n            uint consumeMarketSwapFeeAmount\n        )\n    {\n        _checkBound(tokenIn);\n        _checkBound(tokenOut);\n        uint256[4] memory data = [\n            _records[tokenIn].balance,\n            _records[tokenIn].denorm,\n            _records[tokenOut].balance,\n            _records[tokenOut].denorm\n        ];\n        uint balanceInToAdd;\n        swapfees memory _swapfees;\n         (tokenAmountOut, balanceInToAdd, _swapfees) =        \n            calcOutGivenIn(\n                data,\n                tokenAmountIn,\n               // tokenIn,\n                _consumeMarketSwapFee\n            );\n        return(tokenAmountOut, _swapfees.LPFee, \n        _swapfees.oceanFeeAmount, _swapfees.publishMarketFeeAmount, _swapfees.consumeMarketFee);\n    }\n\n\n    /**\n     * @dev swapExactAmountIn\n     *      Swaps an exact amount of tokensIn to get a mimum amount of tokenOut\n     * @param tokenInOutMarket array of addreses: [tokenIn, tokenOut, consumeMarketFeeAddress]\n     * @param amountsInOutMaxFee array of ints: [tokenAmountIn, minAmountOut, maxPrice, consumeMarketSwapFee]\n     */\n    function swapExactAmountIn(\n        address[3] calldata tokenInOutMarket, \n        uint256[4] calldata amountsInOutMaxFee\n    ) external _lock_ returns (uint256 tokenAmountOut, uint256 spotPriceAfter) {\n        require(_finalized, \"ERR_NOT_FINALIZED\");\n        require(tokenInOutMarket[0] != tokenInOutMarket[1], 'Cannot swap same token');\n        _checkBound(tokenInOutMarket[0]);\n        _checkBound(tokenInOutMarket[1]);\n        Record storage inRecord = _records[address(tokenInOutMarket[0])];\n        Record storage outRecord = _records[address(tokenInOutMarket[1])];\n        require(amountsInOutMaxFee[3] ==0 || amountsInOutMaxFee[3] >= MIN_FEE,'ConsumeSwapFee too low');\n        require(amountsInOutMaxFee[3] <= MAX_FEE,'ConsumeSwapFee too high');\n        require(\n            amountsInOutMaxFee[0] <= bmul(inRecord.balance, MAX_IN_RATIO),\n            \"ERR_MAX_IN_RATIO\"\n        );\n\n        uint256 spotPriceBefore = calcSpotPrice(\n            inRecord.balance,\n            inRecord.denorm,\n            outRecord.balance,\n            outRecord.denorm,\n            amountsInOutMaxFee[3]\n        );\n\n        require(\n            spotPriceBefore <= amountsInOutMaxFee[2],\n            \"ERR_BAD_LIMIT_PRICE\"\n        );\n        uint256 balanceInToAdd;\n        uint256[4] memory data = [\n            inRecord.balance,\n            inRecord.denorm,\n            outRecord.balance,\n            outRecord.denorm\n        ];\n        swapfees memory _swapfees;\n        (tokenAmountOut, balanceInToAdd, _swapfees) = calcOutGivenIn(\n            data,\n            amountsInOutMaxFee[0],\n           // tokenInOutMarket[0],\n            amountsInOutMaxFee[3]\n        );\n        // update balances\n        communityFees[tokenInOutMarket[0]] = badd(communityFees[tokenInOutMarket[0]],_swapfees.oceanFeeAmount);\n        publishMarketFees[tokenInOutMarket[0]] = \n        badd(publishMarketFees[tokenInOutMarket[0]],_swapfees.publishMarketFeeAmount);\n        emit SWAP_FEES(_swapfees.LPFee, _swapfees.oceanFeeAmount,\n        _swapfees.publishMarketFeeAmount,_swapfees.consumeMarketFee, tokenInOutMarket[0]);\n        require(tokenAmountOut >= amountsInOutMaxFee[1], \"ERR_LIMIT_OUT\");\n\n        inRecord.balance = badd(inRecord.balance, balanceInToAdd);\n        outRecord.balance = bsub(outRecord.balance, tokenAmountOut);\n\n        spotPriceAfter = calcSpotPrice(\n            inRecord.balance,\n            inRecord.denorm,\n            outRecord.balance,\n            outRecord.denorm,\n            amountsInOutMaxFee[3]\n        );\n\n        require(spotPriceAfter >= spotPriceBefore, \"ERR_MATH_APPROX\");\n        require(spotPriceAfter <= amountsInOutMaxFee[2], \"ERR_LIMIT_PRICE\");\n\n        require(\n            spotPriceBefore <= bdiv(amountsInOutMaxFee[0], tokenAmountOut),\n            \"ERR_MATH_APPROX\"\n        );\n\n        emit LOG_SWAP(\n            msg.sender,\n            tokenInOutMarket[0],\n            tokenInOutMarket[1],\n            amountsInOutMaxFee[0],\n            tokenAmountOut,\n            block.timestamp,\n            inRecord.balance,\n            outRecord.balance,\n            spotPriceAfter\n\n        );\n\n        _pullUnderlying(tokenInOutMarket[0], msg.sender, amountsInOutMaxFee[0]);\n        uint256 consumeMarketFeeAmount = bsub(\n            amountsInOutMaxFee[0],\n            bmul(amountsInOutMaxFee[0], bsub(BONE, amountsInOutMaxFee[3]))\n        );\n        if (amountsInOutMaxFee[3] > 0) {\n            IERC20(tokenInOutMarket[0]).safeTransfer(\n                tokenInOutMarket[2],\n                consumeMarketFeeAmount\n            );\n            emit ConsumeMarketFee(\n                tokenInOutMarket[2],\n                tokenInOutMarket[0],\n                consumeMarketFeeAmount\n            );\n        }\n        _pushUnderlying(tokenInOutMarket[1], msg.sender, tokenAmountOut);\n\n        return (tokenAmountOut, spotPriceAfter); //returning spot price 0 because there is no public spotPrice\n    }\n\n\n    /**\n     * @dev swapExactAmountOut\n     *      Swaps a maximum  maxAmountIn of tokensIn to get an exact amount of tokenOut\n     * @param tokenInOutMarket array of addreses: [tokenIn, tokenOut, consumeMarketFeeAddress]\n     * @param amountsInOutMaxFee array of ints: [maxAmountIn,tokenAmountOut,maxPrice, consumeMarketSwapFee]\n     */\n    function swapExactAmountOut(\n        address[3] calldata tokenInOutMarket,\n        uint256[4] calldata amountsInOutMaxFee\n    ) external _lock_ returns (uint256 tokenAmountIn, uint256 spotPriceAfter) {\n        require(_finalized, \"ERR_NOT_FINALIZED\");\n        require(tokenInOutMarket[0] != tokenInOutMarket[1], 'Cannot swap same token');\n        require(amountsInOutMaxFee[3] ==0 || amountsInOutMaxFee[3] >= MIN_FEE,'ConsumeSwapFee too low');\n        require(amountsInOutMaxFee[3] <= MAX_FEE,'ConsumeSwapFee too high');\n        _checkBound(tokenInOutMarket[0]);\n        _checkBound(tokenInOutMarket[1]);\n        Record storage inRecord = _records[address(tokenInOutMarket[0])];\n        Record storage outRecord = _records[address(tokenInOutMarket[1])];\n\n        require(\n            amountsInOutMaxFee[1] <= bmul(outRecord.balance, MAX_OUT_RATIO),\n            \"ERR_MAX_OUT_RATIO\"\n        );\n\n        uint256 spotPriceBefore = calcSpotPrice(\n            inRecord.balance,\n            inRecord.denorm,\n            outRecord.balance,\n            outRecord.denorm,\n            amountsInOutMaxFee[3]\n        );\n\n        require(\n            spotPriceBefore <= amountsInOutMaxFee[2],\n            \"ERR_BAD_LIMIT_PRICE\"\n        );\n        // this is the amount we are going to register in balances\n        // (only takes account of swapFee, not OPC and market fee,\n        //in order to not affect price during following swaps, fee wtihdrawl etc)\n        uint256 balanceToAdd;\n        uint256[4] memory data = [\n            inRecord.balance,\n            inRecord.denorm,\n            outRecord.balance,\n            outRecord.denorm\n        ];\n        swapfees memory _swapfees;\n        (tokenAmountIn, balanceToAdd,\n        _swapfees) = calcInGivenOut(\n            data,\n            amountsInOutMaxFee[1],\n            //tokenInOutMarket[0],\n            amountsInOutMaxFee[3]\n        );\n        communityFees[tokenInOutMarket[0]] = badd(communityFees[tokenInOutMarket[0]],_swapfees.oceanFeeAmount);\n        publishMarketFees[tokenInOutMarket[0]] \n        = badd(publishMarketFees[tokenInOutMarket[0]],_swapfees.publishMarketFeeAmount);\n        emit SWAP_FEES(_swapfees.LPFee, _swapfees.oceanFeeAmount,\n        _swapfees.publishMarketFeeAmount,_swapfees.consumeMarketFee, tokenInOutMarket[0]);\n        require(tokenAmountIn <= amountsInOutMaxFee[0], \"ERR_LIMIT_IN\");\n\n        inRecord.balance = badd(inRecord.balance, balanceToAdd);\n        outRecord.balance = bsub(outRecord.balance, amountsInOutMaxFee[1]);\n\n        spotPriceAfter = calcSpotPrice(\n            inRecord.balance,\n            inRecord.denorm,\n            outRecord.balance,\n            outRecord.denorm,\n            amountsInOutMaxFee[3]\n        );\n\n        require(spotPriceAfter >= spotPriceBefore, \"ERR_MATH_APPROX\");\n        require(spotPriceAfter <= amountsInOutMaxFee[2], \"ERR_LIMIT_PRICE\");\n        require(\n            spotPriceBefore <= bdiv(tokenAmountIn, amountsInOutMaxFee[1]),\n            \"ERR_MATH_APPROX\"\n        );\n\n        emit LOG_SWAP(\n            msg.sender,\n            tokenInOutMarket[0],\n            tokenInOutMarket[1],\n            tokenAmountIn,\n            amountsInOutMaxFee[1],\n            block.timestamp,\n            inRecord.balance,\n            outRecord.balance,\n            spotPriceAfter\n        );\n        _pullUnderlying(tokenInOutMarket[0], msg.sender, tokenAmountIn);\n        uint256 consumeMarketFeeAmount = bsub(\n            tokenAmountIn,\n            bmul(tokenAmountIn, bsub(BONE, amountsInOutMaxFee[3]))\n        );\n        if (amountsInOutMaxFee[3] > 0) {\n            IERC20(tokenInOutMarket[0]).safeTransfer(\n                tokenInOutMarket[2],// market address\n                consumeMarketFeeAmount\n            );\n            emit ConsumeMarketFee(\n                tokenInOutMarket[2], // to (market address)\n                tokenInOutMarket[0], // token\n                consumeMarketFeeAmount\n            );\n        }\n        _pushUnderlying(tokenInOutMarket[1], msg.sender, amountsInOutMaxFee[1]);\n        return (tokenAmountIn, spotPriceAfter);\n    }\n\n    /**\n     * @dev joinswapExternAmountIn\n     *      Single side add liquidity to the pool,\n     *      expecting a minPoolAmountOut of shares for spending tokenAmountIn basetokens\n     * @param tokenAmountIn exact number of base tokens to spend\n     * @param minPoolAmountOut minimum of pool shares expectex\n     */\n    function joinswapExternAmountIn(\n        uint256 tokenAmountIn,\n        uint256 minPoolAmountOut\n    ) external _lock_ returns (uint256 poolAmountOut) {\n        //tokenIn = _baseTokenAddress;\n        require(_finalized, \"ERR_NOT_FINALIZED\");\n        _checkBound(_baseTokenAddress);\n        require(\n            tokenAmountIn <= bmul(_records[_baseTokenAddress].balance, MAX_IN_RATIO),\n            \"ERR_MAX_IN_RATIO\"\n        );\n        //ask ssContract\n        Record storage inRecord = _records[_baseTokenAddress];\n\n        poolAmountOut = calcPoolOutGivenSingleIn(\n            inRecord.balance,\n            _totalSupply,\n            tokenAmountIn\n        );\n\n        require(poolAmountOut >= minPoolAmountOut, \"ERR_LIMIT_OUT\");\n\n        inRecord.balance = badd(inRecord.balance, tokenAmountIn);\n        emit LOG_JOIN(msg.sender, _baseTokenAddress, tokenAmountIn, block.timestamp);\n        emit LOG_BPT(poolAmountOut);\n\n        \n\n        //ask the ssContract to stake as well\n        //calculate how much should the 1ss stake\n        Record storage ssInRecord = _records[_datatokenAddress];\n        uint256 ssAmountIn = calcSingleInGivenPoolOut(\n            ssInRecord.balance,\n            _totalSupply,\n            poolAmountOut\n        );\n        if (ssContract.canStake(_datatokenAddress, ssAmountIn)) {\n            \n            //call 1ss to approve\n            ssContract.Stake(_datatokenAddress, ssAmountIn);\n            // follow the same path\n            ssInRecord.balance = badd(ssInRecord.balance, ssAmountIn);\n            emit LOG_JOIN(\n                _controller,\n                _datatokenAddress,\n                ssAmountIn,\n                block.timestamp\n            );\n            emit LOG_BPT_SS(poolAmountOut);\n            _mintPoolShare(poolAmountOut);\n            _pushPoolShare(_controller, poolAmountOut);\n            _pullUnderlying(_datatokenAddress, _controller, ssAmountIn);\n            \n        }\n        _mintPoolShare(poolAmountOut);\n        _pushPoolShare(msg.sender, poolAmountOut);\n        _pullUnderlying(_baseTokenAddress, msg.sender, tokenAmountIn);\n        return poolAmountOut;\n    }\n\n    \n    /**\n     * @dev exitswapPoolAmountIn\n     *      Single side remove liquidity from the pool,\n     *      expecting a minAmountOut of basetokens for spending poolAmountIn pool shares\n     * @param poolAmountIn exact number of pool shares to spend\n     * @param minAmountOut minimum amount of basetokens expected\n     */\n    function exitswapPoolAmountIn(\n        uint256 poolAmountIn,\n        uint256 minAmountOut\n    ) external _lock_ returns (uint256 tokenAmountOut) {\n        //tokenOut = _baseTokenAddress;\n        require(_finalized, \"ERR_NOT_FINALIZED\");\n        _checkBound(_baseTokenAddress);\n\n        Record storage outRecord = _records[_baseTokenAddress];\n\n        tokenAmountOut = calcSingleOutGivenPoolIn(\n            outRecord.balance,\n            _totalSupply,\n            poolAmountIn\n        );\n        require(tokenAmountOut >= minAmountOut, \"ERR_LIMIT_OUT\");\n\n        require(\n            tokenAmountOut <= bmul(_records[_baseTokenAddress].balance, MAX_OUT_RATIO),\n            \"ERR_MAX_OUT_RATIO\"\n        );\n\n        outRecord.balance = bsub(outRecord.balance, tokenAmountOut);\n\n        //uint256 exitFee = bmul(poolAmountIn, EXIT_FEE);\n        emit LOG_EXIT(msg.sender, _baseTokenAddress, tokenAmountOut, block.timestamp);\n        emit LOG_BPT(poolAmountIn);\n\n        //ask the ssContract to unstake as well\n        //calculate how much should the 1ss unstake\n        \n        if (\n            ssContract.canUnStake(_datatokenAddress, poolAmountIn)\n        ) {\n            Record storage ssOutRecord = _records[_datatokenAddress];\n            uint256 ssAmountOut = calcSingleOutGivenPoolIn(\n                ssOutRecord.balance,\n                _totalSupply,\n                poolAmountIn\n            );\n\n            ssOutRecord.balance = bsub(ssOutRecord.balance, ssAmountOut);\n            //exitFee = bmul(poolAmountIn, EXIT_FEE);\n            emit LOG_EXIT(\n                _controller,\n                _datatokenAddress,\n                ssAmountOut,\n                block.timestamp\n            );\n            _pullPoolShare(_controller, poolAmountIn);\n            //_burnPoolShare(bsub(poolAmountIn, exitFee));\n            _burnPoolShare(poolAmountIn);\n            //_pushPoolShare(_factory, exitFee);\n            _pushUnderlying(_datatokenAddress, _controller, ssAmountOut);\n            //call unstake on 1ss to do cleanup on their side\n            ssContract.UnStake(\n                _datatokenAddress,\n                ssAmountOut,\n                poolAmountIn\n            );\n            emit LOG_BPT_SS(poolAmountIn);\n        }\n        \n        _pullPoolShare(msg.sender, poolAmountIn);\n        //_burnPoolShare(bsub(poolAmountIn, exitFee));\n        _burnPoolShare(poolAmountIn);\n        //_pushPoolShare(_factory, exitFee);\n        _pushUnderlying(_baseTokenAddress, msg.sender, tokenAmountOut);\n        return tokenAmountOut;\n    }\n\n    \n\n    /**\n     * @dev calcSingleOutPoolIn\n     *      Returns expected amount of tokenOut for removing exact poolAmountIn pool shares from the pool\n     * @param tokenOut tokenOut\n     * @param poolAmountIn amount of shares spent\n     */\n    function calcSingleOutPoolIn(address tokenOut, uint256 poolAmountIn)\n        external\n        view\n        returns (uint256 tokenAmountOut)\n    {\n        Record memory outRecord = _records[tokenOut];\n\n        tokenAmountOut = calcSingleOutGivenPoolIn(\n            outRecord.balance,\n            _totalSupply,\n            poolAmountIn\n        );\n\n        return tokenAmountOut;\n    }\n\n    /**\n     * @dev calcPoolInSingleOut\n     *      Returns number of poolshares needed to withdraw exact tokenAmountOut tokens\n     * @param tokenOut tokenOut\n     * @param tokenAmountOut expected amount of tokensOut\n     */\n    function calcPoolInSingleOut(address tokenOut, uint256 tokenAmountOut)\n        external\n        view\n        returns (uint256 poolAmountIn)\n    {\n        Record memory outRecord = _records[tokenOut];\n\n        poolAmountIn = calcPoolInGivenSingleOut(\n            outRecord.balance,\n            _totalSupply,\n            tokenAmountOut\n        );\n        return poolAmountIn;\n    }\n\n    /**\n     * @dev calcSingleInPoolOut\n     *      Returns number of tokens to be staked to the pool in order to get an exact number of poolshares\n     * @param tokenIn tokenIn\n     * @param poolAmountOut expected amount of pool shares\n     */\n    function calcSingleInPoolOut(address tokenIn, uint256 poolAmountOut)\n        external\n        view\n        returns (uint256 tokenAmountIn)\n    {\n        Record memory inRecord = _records[tokenIn];\n\n        tokenAmountIn = calcSingleInGivenPoolOut(\n            inRecord.balance,\n            _totalSupply,\n            poolAmountOut\n        );\n\n        return tokenAmountIn;\n    }\n\n    /**\n     * @dev calcPoolOutSingleIn\n     *      Returns number of poolshares obtain by staking exact tokenAmountIn tokens\n     * @param tokenIn tokenIn\n     * @param tokenAmountIn exact number of tokens staked\n     */\n    function calcPoolOutSingleIn(address tokenIn, uint256 tokenAmountIn)\n        external\n        view\n        returns (uint256 poolAmountOut)\n    {\n        Record memory inRecord = _records[tokenIn];\n\n        poolAmountOut = calcPoolOutGivenSingleIn(\n            inRecord.balance,\n            _totalSupply,\n            tokenAmountIn\n        );\n\n        return poolAmountOut;\n    }\n\n\n    // Internal functions below\n\n    // ==\n    // 'Underlying' token-manipulation functions make external calls but are NOT locked\n    // You must `_lock_` or otherwise ensure reentry-safety\n    function _pullUnderlying(\n        address erc20,\n        address from,\n        uint256 amount\n    ) internal {\n        uint256 balanceBefore = IERC20(erc20).balanceOf(address(this));\n        IERC20(erc20).safeTransferFrom(from, address(this), amount);\n        require(IERC20(erc20).balanceOf(address(this)) >= balanceBefore + amount,\n                    \"Transfer amount is too low\");\n        //require(xfer, \"ERR_ERC20_FALSE\");\n    }\n\n    function _pushUnderlying(\n        address erc20,\n        address to,\n        uint256 amount\n    ) internal {\n        IERC20(erc20).safeTransfer(to, amount);\n        //require(xfer, \"ERR_ERC20_FALSE\");\n    }\n\n    function _pullPoolShare(address from, uint256 amount) internal {\n        _pull(from, amount);\n    }\n\n    function _pushPoolShare(address to, uint256 amount) internal {\n        _push(to, amount);\n    }\n\n    function _mintPoolShare(uint256 amount) internal {\n        _mint(amount);\n    }\n\n    function _burnPoolShare(uint256 amount) internal {\n        _burn(amount);\n    }\n\n    // Absorb any tokens that have been sent to this contract into the pool\n    function gulp(address token)\n        external\n        _lock_\n    {\n        require(_records[token].bound, \"ERR_NOT_BOUND\");\n        uint256 oldBalance = _records[token].balance;\n        _records[token].balance = IERC20(token).balanceOf(address(this));\n        emit Gulped(token,oldBalance, _records[token].balance);\n    }\n}",
  "sourceMap": "721:40300:37:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/oceanv4/pools/balancer/BPool.sol",
  "type": "contract"
}